{"version":3,"sources":["webpack://imjoyRPC/webpack/bootstrap","webpack://imjoyRPC/./src/utils.js","webpack://imjoyRPC/./src/rpc.js","webpack://imjoyRPC/./src/pluginCore.js","webpack://imjoyRPC/./src/plugin.webworker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","randId","Math","random","toString","substr","Date","getTime","dtypeToTypedArray","int8","Int8Array","int16","Int16Array","int32","Int32Array","uint8","Uint8Array","uint16","Uint16Array","uint32","Uint32Array","float32","Float32Array","float64","Float64Array","array","Array","typedArrayToDtypeMapping","typedArrayToDtypeKeys","arrType","keys","push","eval","typedArrayToDtype","obj","dtype","constructor","pt","getPrototypeOf","cacheUrlInServiceWorker","url","Promise","resolve","reject","message","command","navigator","serviceWorker","register","messageChannel","MessageChannel","port1","onmessage","event","data","error","result","controller","postMessage","port2","async","cacheRequirements","requirements","isArray","requirementsm","code","length","req","startsWith","slice","catch","e","console","setupServiceWorker","baseUrl","targetOrigin","cacheCallback","then","registration","log","scope","err","Error","window","addEventListener","origin","type","urlJoin","args","join","replace","MessageEmitter","debug","this","_event_handlers","_once_handlers","_debug","emit","on","handler","once","___event_run_once","off","idx","indexOf","splice","_fire","warn","API_VERSION","ArrayBufferView","_appendBuffer","buffer1","buffer2","tmp","byteLength","set","buffer","indexObject","is","split","RPC","connection","config","codecs","super","_connection","_codecs","_object_store","_method_weakmap","WeakMap","_object_weakmap","_local_api","execute","_store","ReferenceStore","_method_refs","onReady","onBusy","_setupMessageHanlders","init","peer_id","setConfig","k","getRemoteCallStack","getStack","getRemote","_remote_interface","setInterface","_interface","description","forwarding_functions","func_name","_remote","Function","sendInterface","_encode","api","_disposeObject","objectId","disposeObject","has","object_id","String","method","method_this","promise","_unwrap","includes","apply","fetch","id","_setRemoteInterface","disconnect","requestRemote","_ndarray","typedArray","shape","_dtype","_rtype","_rvalue","_rshape","_rdtype","_decode","intf","_reportRemoteSet","_genRemoteMethod","targetId","me","remoteMethod","put","wrapped_resolve","arguments","wrapped_reject","encodedPromise","_wrap","__promise_pair","transferables","__transferables__","target_id","__remote_method","aObject","asInterface","aType","ArrayBuffer","bObject","_rtarget_id","_rintf","cid","_rname","temp","_transfer","isarray","tp","codec","encoder","encodedObj","tf","Tensor","v_buffer","dataSync","nj","NdArray","selection","File","_rpath","_path","webkitRelativePath","Boolean","RegExp","ImageData","FileList","_rmime","Blob","DataView","Set","from","Map","getOwnPropertyNames","concat","hasFunction","withPromise","decoder","_genRemoteCallback","reduce","Uint8","reshape","arraytype","tensor","v","undefined","remoteCallback","setTimeout","_indices","_readyHandler","_busyHandler","readyHandler","busyHandler","_genId","shift","_releaseId","pop","connectRPC","rpc","launchConnected","export","onload","dispose","registerCodec","setup","onLoad","checkHandler","connected","connectedHandlers","WorkerGlobalScope","self","dispatchEvent","CustomEvent","detail","Connection","close","toLowerCase","endsWith","importScripts","content","stack","dedicated_thread","allow_execution","lang","api_version","conn","assign","connect"],"mappings":"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","file":"plugin.webworker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export function randId() {\n  return (\n    Math.random()\n      .toString(36)\n      .substr(2, 10) + new Date().getTime()\n  );\n}\n\nexport const dtypeToTypedArray = {\n  int8: Int8Array,\n  int16: Int16Array,\n  int32: Int32Array,\n  uint8: Uint8Array,\n  uint16: Uint16Array,\n  uint32: Uint32Array,\n  float32: Float32Array,\n  float64: Float64Array,\n  array: Array\n};\n\nexport const typedArrayToDtypeMapping = {\n  Int8Array: \"int8\",\n  Int16Array: \"int16\",\n  Int32Array: \"int32\",\n  Uint8Array: \"uint8\",\n  Uint16Array: \"uint16\",\n  Uint32Array: \"uint32\",\n  Float32Array: \"float32\",\n  Float64Array: \"float64\",\n  Array: \"array\"\n};\n\nconst typedArrayToDtypeKeys = [];\nfor (const arrType of Object.keys(typedArrayToDtypeMapping)) {\n  typedArrayToDtypeKeys.push(eval(arrType));\n}\n\nexport function typedArrayToDtype(obj) {\n  let dtype = typedArrayToDtypeMapping[obj.constructor.name];\n  if (!dtype) {\n    const pt = Object.getPrototypeOf(obj);\n    for (const arrType of typedArrayToDtypeKeys) {\n      if (pt instanceof arrType) {\n        dtype = typedArrayToDtypeMapping[arrType.name];\n        break;\n      }\n    }\n  }\n  return dtype;\n}\n\nfunction cacheUrlInServiceWorker(url) {\n  return new Promise(function(resolve, reject) {\n    const message = {\n      command: \"add\",\n      url: url\n    };\n    if (!navigator.serviceWorker || !navigator.serviceWorker.register) {\n      reject(\"Service worker is not supported.\");\n      return;\n    }\n    const messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = function(event) {\n      if (event.data && event.data.error) {\n        reject(event.data.error);\n      } else {\n        resolve(event.data && event.data.result);\n      }\n    };\n\n    if (navigator.serviceWorker && navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(message, [\n        messageChannel.port2\n      ]);\n    } else {\n      reject(\"Service worker controller is not available\");\n    }\n  });\n}\n\nexport async function cacheRequirements(requirements) {\n  if (!Array.isArray(requirements)) {\n    requirementsm.code.requirements = [requirements];\n  }\n  if (requirements && requirements.length > 0) {\n    for (let req of requirements) {\n      //remove prefix\n      if (req.startsWith(\"js:\")) req = req.slice(3);\n      if (req.startsWith(\"css:\")) req = req.slice(4);\n      if (req.startsWith(\"cache:\")) req = req.slice(6);\n      if (!req.startsWith(\"http\")) continue;\n\n      await cacheUrlInServiceWorker(req).catch(e => {\n        console.error(e);\n      });\n    }\n  }\n}\n\nexport function setupServiceWorker(baseUrl, targetOrigin, cacheCallback) {\n  // register service worker for offline access\n  if (\"serviceWorker\" in navigator) {\n    baseUrl = baseUrl || \"/\";\n    navigator.serviceWorker.register(baseUrl + \"plugin-service-worker.js\").then(\n      function(registration) {\n        // Registration was successful\n        console.log(\n          \"ServiceWorker registration successful with scope: \",\n          registration.scope\n        );\n      },\n      function(err) {\n        // registration failed :(\n        console.log(\"ServiceWorker registration failed: \", err);\n      }\n    );\n    targetOrigin = targetOrigin || \"*\";\n    cacheCallback = cacheCallback || cacheRequirements;\n    if (cacheCallback && typeof cacheCallback !== \"function\") {\n      throw new Error(\"config.cache_requirements must be a function\");\n    }\n    window.addEventListener(\"message\", function(e) {\n      if (targetOrigin === \"*\" || e.origin === targetOrigin) {\n        const m = e.data;\n        if (m.type === \"cacheRequirements\") {\n          cacheCallback(m.requirements);\n        }\n      }\n    });\n  }\n}\n\n//#Source https://bit.ly/2neWfJ2\nexport function urlJoin(...args) {\n  return args\n    .join(\"/\")\n    .replace(/[\\/]+/g, \"/\")\n    .replace(/^(.+):\\//, \"$1://\")\n    .replace(/^file:/, \"file:/\")\n    .replace(/\\/(\\?|&|#[^!])/g, \"$1\")\n    .replace(/\\?/g, \"&\")\n    .replace(\"&\", \"?\");\n}\n\nexport class MessageEmitter {\n  constructor(debug) {\n    this._event_handlers = {};\n    this._once_handlers = {};\n    this._debug = debug;\n  }\n  emit() {\n    throw new Error(\"emit is not implemented\");\n  }\n  on(event, handler) {\n    if (!this._event_handlers[event]) {\n      this._event_handlers[event] = [];\n    }\n    this._event_handlers[event].push(handler);\n  }\n  once(event, handler) {\n    handler.___event_run_once = true;\n    this.on(event, handler);\n  }\n  off(event, handler) {\n    if (!event && !handler) {\n      // remove all events handlers\n      this._event_handlers = {};\n    } else if (event && !handler) {\n      // remove all hanlders for the event\n      if (this._event_handlers[event]) this._event_handlers[event] = [];\n    } else {\n      // remove a specific handler\n      if (this._event_handlers[event]) {\n        const idx = this._event_handlers[event].indexOf(handler);\n        if (idx >= 0) {\n          this._event_handlers[event].splice(idx, 1);\n        }\n      }\n    }\n  }\n  _fire(event, data) {\n    if (this._event_handlers[event]) {\n      var i = this._event_handlers[event].length;\n      while (i--) {\n        const handler = this._event_handlers[event][i];\n        try {\n          handler(data);\n        } catch (e) {\n          console.error(e);\n        } finally {\n          if (handler.___event_run_once) {\n            this._event_handlers[event].splice(i, 1);\n          }\n        }\n      }\n    } else {\n      if (this._debug) {\n        console.warn(\"unhandled event\", event, data);\n      }\n    }\n  }\n}\n","/**\n * Contains the RPC object used both by the application\n * site, and by each plugin\n */\nimport {\n  randId,\n  typedArrayToDtype,\n  dtypeToTypedArray,\n  MessageEmitter\n} from \"./utils.js\";\n\nexport const API_VERSION = \"0.2.3\";\n\nconst ArrayBufferView = Object.getPrototypeOf(\n  Object.getPrototypeOf(new Uint8Array())\n).constructor;\n\nfunction _appendBuffer(buffer1, buffer2) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\nfunction indexObject(obj, is) {\n  if (!is) throw new Error(\"undefined index\");\n  if (typeof is === \"string\") return indexObject(obj, is.split(\".\"));\n  else if (is.length === 0) return obj;\n  else return indexObject(obj[is[0]], is.slice(1));\n}\n\n/**\n * RPC object represents a single site in the\n * communication protocol between the application and the plugin\n *\n * @param {Object} connection a special object allowing to send\n * and receive messages from the opposite site (basically it\n * should only provide send() and onMessage() methods)\n */\nexport class RPC extends MessageEmitter {\n  constructor(connection, config, codecs) {\n    super(config && config.debug);\n    this._connection = connection;\n    this.config = config || {};\n    this._codecs = codecs || {};\n    this._object_store = {};\n    this._method_weakmap = new WeakMap();\n    this._object_weakmap = new WeakMap();\n    this._local_api = null;\n    // make sure there is an execute function\n    const name = this.config.name;\n    this._connection.execute =\n      this._connection.execute ||\n      function() {\n        throw new Error(`connection.execute not implemented (in \"${name}\")`);\n      };\n    this._store = new ReferenceStore();\n    this._method_refs = new ReferenceStore();\n    this._method_refs.onReady(() => {\n      this._fire(\"remoteIdle\");\n    });\n    this._method_refs.onBusy(() => {\n      this._fire(\"remoteBusy\");\n    });\n    this._setupMessageHanlders();\n  }\n\n  init() {\n    this._connection.emit({\n      type: \"initialized\",\n      config: this.config,\n      peer_id: this._connection.peer_id\n    });\n  }\n\n  setConfig(config) {\n    if (config)\n      for (const k of Object.keys(config)) {\n        this.config[k] = config[k];\n      }\n  }\n  /**\n   * Set a handler to be called when received a responce from the\n   * remote site reporting that the previously provided interface\n   * has been successfully set as remote for that site\n   *\n   * @param {Function} handler\n   */\n\n  getRemoteCallStack() {\n    return this._method_refs.getStack();\n  }\n\n  /**\n   * @returns {Object} set of remote interface methods\n   */\n  getRemote() {\n    return this._remote_interface;\n  }\n\n  /**\n   * Sets the interface of this site making it available to the\n   * remote site by sending a message with a set of methods names\n   *\n   * @param {Object} _interface to set\n   */\n  setInterface(_interface, config) {\n    config = config || {};\n    this.config.name = config.name || this.config.name;\n    this.config.description = config.description || this.config.description;\n    if (this.config.forwarding_functions) {\n      for (let func_name of this.config.forwarding_functions) {\n        const _remote = this._remote_interface;\n        if (_remote[func_name]) {\n          if (_interface.constructor === Object) {\n            if (!_interface[func_name]) {\n              _interface[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          } else if (_interface.constructor.constructor === Function) {\n            if (!_interface.constructor.prototype[func_name]) {\n              _interface.constructor.prototype[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          }\n        }\n      }\n    }\n    this._local_api = _interface;\n    this._fire(\"interfaceAvailable\");\n  }\n\n  /**\n   * Sends the actual interface to the remote site upon it was\n   * updated or by a special request of the remote site\n   */\n  sendInterface() {\n    if (!this._local_api) {\n      throw new Error(\"interface is not set.\");\n    }\n    this._encode(this._local_api, true).then(api => {\n      this._connection.emit({ type: \"setInterface\", api: api });\n    });\n  }\n\n  _disposeObject(objectId) {\n    if (this._object_store[objectId]) {\n      delete this._object_store[objectId];\n    } else {\n      throw new Error(`Object (id=${objectId}) not found.`);\n    }\n  }\n\n  disposeObject(obj) {\n    return new Promise((resolve, reject) => {\n      if (this._object_weakmap.has(obj)) {\n        const objectId = this._object_weakmap.get(obj);\n        this._connection.once(\"disposed\", data => {\n          if (data.error) reject(new Error(data.error));\n          else resolve();\n        });\n        this._connection.emit({\n          type: \"disposeObject\",\n          object_id: objectId\n        });\n      } else {\n        throw new Error(\"Invalid object\");\n      }\n    });\n  }\n\n  /**\n   * Handles a message from the remote site\n   */\n  _setupMessageHanlders() {\n    this._connection.on(\"init\", this.init);\n    this._connection.on(\"execute\", data => {\n      Promise.resolve(this._connection.execute(data.code))\n        .then(() => {\n          this._connection.emit({ type: \"executed\" });\n        })\n        .catch(e => {\n          console.error(e);\n          this._connection.emit({\n            type: \"executed\",\n            error: String(e)\n          });\n        });\n    });\n\n    this._connection.on(\"method\", async data => {\n      let resolve, reject, method, method_this, args, result;\n      try {\n        if (data.promise) {\n          [resolve, reject] = await this._unwrap(data.promise, false);\n        }\n        const _interface = this._object_store[data.object_id];\n        method = indexObject(_interface, data.name);\n        if (data.name.includes(\".\")) {\n          const tmp = data.name.split(\".\");\n          const intf_index = tmp.slice(0, tmp.length - 1).join(\".\");\n          method_this = indexObject(_interface, intf_index);\n        } else {\n          method_this = _interface;\n        }\n        args = await this._unwrap(data.args, true);\n        if (data.promise) {\n          result = method.apply(method_this, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } else {\n          method.apply(method_this, args);\n        }\n      } catch (err) {\n        console.error(this.config.name, err);\n        if (reject) {\n          reject(err);\n        }\n      }\n    });\n\n    this._connection.on(\"callback\", async data => {\n      let resolve, reject, method, args, result;\n      try {\n        if (data.promise) {\n          [resolve, reject] = await this._unwrap(data.promise, false);\n        }\n        if (data.promise) {\n          method = this._store.fetch(data.id);\n          args = await this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          result = method.apply(null, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } else {\n          method = this._store.fetch(data.id);\n          args = await this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Please notice that callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          method.apply(null, args);\n        }\n      } catch (err) {\n        console.error(this.config.name, err);\n        if (reject) {\n          reject(err);\n        }\n      }\n    });\n    this._connection.on(\"disposeObject\", data => {\n      try {\n        this._disposeObject(data.object_id);\n        this._connection.emit({\n          type: \"disposed\"\n        });\n      } catch (e) {\n        console.error(e);\n        this._connection.emit({\n          type: \"disposed\",\n          error: String(e)\n        });\n      }\n    });\n    this._connection.on(\"setInterface\", data => {\n      this._setRemoteInterface(data.api);\n    });\n    this._connection.on(\"getInterface\", () => {\n      this._fire(\"getInterface\");\n      if (this._local_api) {\n        this.sendInterface();\n      } else {\n        this.once(\"interfaceAvailable\", () => {\n          this.sendInterface();\n        });\n      }\n    });\n    this._connection.on(\"interfaceSetAsRemote\", () => {\n      this._fire(\"interfaceSetAsRemote\");\n    });\n    this._connection.on(\"disconnect\", () => {\n      this._fire(\"beforeDisconnect\");\n      this._connection.disconnect();\n      this._fire(\"disconnected\");\n    });\n  }\n\n  /**\n   * Sends a requests to the remote site asking it to provide its\n   * current interface\n   */\n  requestRemote() {\n    this._connection.emit({ type: \"getInterface\" });\n  }\n\n  _ndarray(typedArray, shape, dtype) {\n    const _dtype = typedArrayToDtype(typedArray);\n    if (dtype && dtype !== _dtype) {\n      throw \"dtype doesn't match the type of the array: \" +\n        _dtype +\n        \" != \" +\n        dtype;\n    }\n    shape = shape || [typedArray.length];\n    return {\n      _rtype: \"ndarray\",\n      _rvalue: typedArray.buffer,\n      _rshape: shape,\n      _rdtype: _dtype\n    };\n  }\n\n  /**\n   * Sets the new remote interface provided by the other site\n   *\n   * @param {Array} names list of function names\n   */\n  _setRemoteInterface(api) {\n    this._decode(api).then(intf => {\n      this._remote_interface = intf;\n      this._fire(\"remoteReady\");\n      this._reportRemoteSet();\n    });\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * method. When the generated function is called, it will send the\n   * corresponding message to the remote site asking it to execute\n   * the particular method of its interface\n   *\n   * @param {String} name of the remote method\n   *\n   * @returns {Function} wrapped remote method\n   */\n  _genRemoteMethod(targetId, name, objectId) {\n    const me = this;\n    const remoteMethod = function() {\n      return new Promise(async (resolve, reject) => {\n        let id = null;\n        try {\n          id = me._method_refs.put(objectId ? objectId + \"/\" + name : name);\n          const wrapped_resolve = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return resolve.apply(this, arguments);\n          };\n          const wrapped_reject = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return reject.apply(this, arguments);\n          };\n\n          const encodedPromise = await me._wrap([\n            wrapped_resolve,\n            wrapped_reject\n          ]);\n\n          // store the key id for removing them from the reference store together\n          wrapped_resolve.__promise_pair = encodedPromise[1]._rvalue;\n          wrapped_reject.__promise_pair = encodedPromise[0]._rvalue;\n\n          let args = Array.prototype.slice.call(arguments);\n          if (\n            name === \"register\" ||\n            name === \"registerService\" ||\n            name === \"export\" ||\n            name === \"on\"\n          ) {\n            args = await me._wrap(args, true);\n          } else {\n            args = await me._wrap(args);\n          }\n          const transferables = args.__transferables__;\n          if (transferables) delete args.__transferables__;\n          me._connection.emit(\n            {\n              type: \"method\",\n              target_id: targetId,\n              name: name,\n              object_id: objectId,\n              args: args,\n              promise: encodedPromise\n            },\n            transferables\n          );\n        } catch (e) {\n          if (id) me._method_refs.fetch(id);\n          reject(\n            `Failed to exectue remote method (interface: ${objectId ||\n              me.id}, method: ${name}), error: ${e}`\n          );\n        }\n      });\n    };\n    remoteMethod.__remote_method = true;\n    return remoteMethod;\n  }\n\n  /**\n   * Sends a responce reporting that interface just provided by the\n   * remote site was successfully set by this site as remote\n   */\n  _reportRemoteSet() {\n    this._connection.emit({ type: \"interfaceSetAsRemote\" });\n  }\n\n  /**\n   * Prepares the provided set of remote method arguments for\n   * sending to the remote site, replaces all the callbacks with\n   * identifiers\n   *\n   * @param {Array} args to wrap\n   *\n   * @returns {Array} wrapped arguments\n   */\n  async _encode(aObject, asInterface, objectId) {\n    const aType = typeof aObject;\n    if (\n      aType === \"number\" ||\n      aType === \"string\" ||\n      aType === \"boolean\" ||\n      aObject === null ||\n      aObject === undefined ||\n      aObject instanceof ArrayBuffer\n    ) {\n      return aObject;\n    }\n\n    let bObject;\n    if (typeof aObject === \"function\") {\n      if (asInterface) {\n        if (!objectId) throw new Error(\"objectId is not specified.\");\n        bObject = {\n          _rtype: \"interface\",\n          _rtarget_id: this._connection.peer_id,\n          _rintf: objectId,\n          _rvalue: asInterface\n        };\n        this._method_weakmap.set(aObject, bObject);\n      } else if (this._method_weakmap.has(aObject)) {\n        bObject = this._method_weakmap.get(aObject);\n      } else {\n        const cid = this._store.put(aObject);\n        bObject = {\n          _rtype: \"callback\",\n          _rtarget_id: this._connection.peer_id,\n          _rname: (aObject.constructor && aObject.constructor.name) || cid,\n          _rvalue: cid\n        };\n      }\n      return bObject;\n    }\n\n    // skip if already encoded\n    if (aObject.constructor instanceof Object && aObject._rtype) {\n      // make sure the interface functions are encoded\n      if (aObject._rintf) {\n        const temp = aObject._rtype;\n        delete aObject._rtype;\n\n        bObject = await this._encode(aObject, asInterface, objectId);\n        bObject._rtype = temp;\n      } else {\n        bObject = aObject;\n      }\n      return bObject;\n    }\n\n    const transferables = [];\n    const _transfer = aObject._transfer;\n    const isarray = Array.isArray(aObject);\n\n    for (let tp of Object.keys(this._codecs)) {\n      const codec = this._codecs[tp];\n      if (codec.encoder && aObject instanceof codec.type) {\n        // TODO: what if multiple encoders found\n        let encodedObj = await Promise.resolve(codec.encoder(aObject));\n        if (encodedObj && !encodedObj._rtype) encodedObj._rtype = codec.name;\n        // encode the functions in the interface object\n        if (encodedObj && encodedObj._rintf) {\n          const temp = encodedObj._rtype;\n          delete encodedObj._rtype;\n          encodedObj = await this._encode(encodedObj, asInterface, objectId);\n          encodedObj._rtype = temp;\n        }\n        bObject = encodedObj;\n        return bObject;\n      }\n    }\n\n    if (\n      /*global tf*/\n      typeof tf !== \"undefined\" &&\n      tf.Tensor &&\n      aObject instanceof tf.Tensor\n    ) {\n      const v_buffer = aObject.dataSync();\n      if (aObject._transfer || _transfer) {\n        transferables.push(v_buffer.buffer);\n        delete aObject._transfer;\n      }\n      bObject = {\n        _rtype: \"ndarray\",\n        _rvalue: v_buffer.buffer,\n        _rshape: aObject.shape,\n        _rdtype: aObject.dtype\n      };\n    } else if (\n      /*global nj*/\n      typeof nj !== \"undefined\" &&\n      nj.NdArray &&\n      aObject instanceof nj.NdArray\n    ) {\n      const dtype = typedArrayToDtype(aObject.selection.data);\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.selection.data.buffer);\n        delete aObject._transfer;\n      }\n      bObject = {\n        _rtype: \"ndarray\",\n        _rvalue: aObject.selection.data.buffer,\n        _rshape: aObject.shape,\n        _rdtype: dtype\n      };\n    } else if (aObject instanceof Error) {\n      console.error(aObject);\n      bObject = { _rtype: \"error\", _rvalue: aObject.toString() };\n    } else if (typeof File !== \"undefined\" && aObject instanceof File) {\n      bObject = {\n        _rtype: \"file\",\n        _rvalue: aObject,\n        _rpath: aObject._path || aObject.webkitRelativePath\n      };\n    }\n    // send objects supported by structure clone algorithm\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    else if (\n      aObject !== Object(aObject) ||\n      aObject instanceof Boolean ||\n      aObject instanceof String ||\n      aObject instanceof Date ||\n      aObject instanceof RegExp ||\n      aObject instanceof ImageData ||\n      (typeof FileList !== \"undefined\" && aObject instanceof FileList)\n    ) {\n      bObject = aObject;\n      // TODO: avoid object such as DynamicPlugin instance.\n    } else if (typeof File !== \"undefined\" && aObject instanceof File) {\n      bObject = {\n        _rtype: \"file\",\n        _rname: aObject.name,\n        _rmime: aObject.type,\n        _rvalue: aObject,\n        _rpath: aObject._path || aObject.webkitRelativePath\n      };\n    } else if (aObject instanceof Blob) {\n      bObject = { _rtype: \"blob\", _rvalue: aObject };\n    } else if (aObject instanceof ArrayBufferView) {\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.buffer);\n        delete aObject._transfer;\n      }\n      const dtype = typedArrayToDtype(aObject);\n      bObject = {\n        _rtype: \"typedarray\",\n        _rvalue: aObject.buffer,\n        _rdtype: dtype\n      };\n    } else if (aObject instanceof DataView) {\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.buffer);\n        delete aObject._transfer;\n      }\n      bObject = { _rtype: \"memoryview\", _rvalue: aObject.buffer };\n    } else if (aObject instanceof Set) {\n      bObject = {\n        _rtype: \"set\",\n        _rvalue: await this._encode(Array.from(aObject), asInterface)\n      };\n    } else if (aObject instanceof Map) {\n      bObject = {\n        _rtype: \"orderedmap\",\n        _rvalue: await this._encode(Array.from(aObject), asInterface)\n      };\n    } else if (\n      aObject.constructor instanceof Object ||\n      Array.isArray(aObject)\n    ) {\n      bObject = isarray ? [] : {};\n      let keys;\n      // an object/array\n      if (aObject.constructor === Object || Array.isArray(aObject)) {\n        keys = Object.keys(aObject);\n      }\n      // a class\n      else if (aObject.constructor === Function) {\n        throw new Error(\"Please instantiate the class before exportting it.\");\n      }\n      // instance of a class\n      else if (aObject.constructor.constructor === Function) {\n        keys = Object.getOwnPropertyNames(\n          Object.getPrototypeOf(aObject)\n        ).concat(Object.keys(aObject));\n        // TODO: use a proxy object to represent the actual object\n        // always encode class instance as interface\n        asInterface = true;\n      } else {\n        throw Error(\"Unsupported interface type\");\n      }\n\n      let hasFunction = false;\n      // encode interfaces\n      if (aObject._rintf || asInterface) {\n        if (!objectId) {\n          objectId = randId();\n          this._object_store[objectId] = aObject;\n        }\n        for (let k of keys) {\n          if (k === \"constructor\") continue;\n          if (k.startsWith(\"_\")) {\n            continue;\n          }\n          bObject[k] = await this._encode(\n            aObject[k],\n            typeof asInterface === \"string\" ? asInterface + \".\" + k : k,\n            objectId\n          );\n          if (typeof aObject[k] === \"function\") {\n            hasFunction = true;\n          }\n        }\n        // object id for dispose the object remotely\n        if (hasFunction) bObject._rintf = objectId;\n        // remove interface when closed\n        if (aObject.on && typeof aObject.on === \"function\") {\n          aObject.on(\"close\", () => {\n            delete this._object_store[objectId];\n          });\n        }\n      } else {\n        for (let k of keys) {\n          if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n          bObject[k] = await this._encode(aObject[k]);\n        }\n      }\n      // for example, browserFS object\n    } else if (typeof aObject === \"object\") {\n      const keys = Object.getOwnPropertyNames(\n        Object.getPrototypeOf(aObject)\n      ).concat(Object.keys(aObject));\n      const objectId = randId();\n\n      for (let k of keys) {\n        if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n        // encode as interface\n        bObject[k] = await this._encode(aObject[k], k, bObject);\n      }\n      // object id, used for dispose the object\n      bObject._rintf = objectId;\n    } else {\n      throw \"imjoy-rpc: Unsupported data type:\" + aObject;\n    }\n\n    if (transferables.length > 0) {\n      bObject.__transferables__ = transferables;\n    }\n    if (!bObject) {\n      throw new Error(\"Failed to encode object\");\n    }\n    return bObject;\n  }\n\n  async _decode(aObject, withPromise) {\n    if (!aObject) {\n      return aObject;\n    }\n    let bObject;\n    if (aObject[\"_rtype\"]) {\n      if (\n        this._codecs[aObject._rtype] &&\n        this._codecs[aObject._rtype].decoder\n      ) {\n        if (aObject._rintf) {\n          const temp = aObject._rtype;\n          delete aObject._rtype;\n          aObject = await this._decode(aObject, withPromise);\n          aObject._rtype = temp;\n        }\n        bObject = await Promise.resolve(\n          this._codecs[aObject._rtype].decoder(aObject)\n        );\n      } else if (aObject._rtype === \"callback\") {\n        bObject = this._genRemoteCallback(\n          aObject._rtarget_id,\n          aObject._rvalue,\n          withPromise\n        );\n      } else if (aObject._rtype === \"interface\") {\n        bObject = this._genRemoteMethod(\n          aObject._rtarget_id,\n          aObject._rvalue,\n          aObject._rintf\n        );\n      } else if (aObject._rtype === \"ndarray\") {\n        /*global nj tf*/\n        //create build array/tensor if used in the plugin\n        if (typeof nj !== \"undefined\" && nj.array) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          bObject = nj\n            .array(new Uint8(aObject._rvalue), aObject._rdtype)\n            .reshape(aObject._rshape);\n        } else if (typeof tf !== \"undefined\" && tf.Tensor) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          const arraytype = dtypeToTypedArray[aObject._rdtype];\n          bObject = tf.tensor(\n            new arraytype(aObject._rvalue),\n            aObject._rshape,\n            aObject._rdtype\n          );\n        } else {\n          //keep it as regular if transfered to the main app\n          bObject = aObject;\n        }\n      } else if (aObject._rtype === \"error\") {\n        bObject = new Error(aObject._rvalue);\n      } else if (aObject._rtype === \"file\") {\n        if (aObject._rvalue instanceof File) {\n          bObject = aObject._rvalue;\n          //patch _path\n          bObject._path = aObject._rpath;\n        } else {\n          bObject = new File([aObject._rvalue], aObject._rname, {\n            type: aObject._rmime\n          });\n          bObject._path = aObject._rpath;\n        }\n      } else if (aObject._rtype === \"typedarray\") {\n        const arraytype = dtypeToTypedArray[aObject._rdtype];\n        if (!arraytype)\n          throw new Error(\"unsupported dtype: \" + aObject._rdtype);\n        bObject = new arraytype(aObject._rvalue);\n      } else if (aObject._rtype === \"memoryview\") {\n        bObject = new DataView(aObject._rvalue);\n      } else if (aObject._rtype === \"blob\") {\n        if (aObject._rvalue instanceof Blob) {\n          bObject = aObject._rvalue;\n        } else {\n          bObject = new Blob([aObject._rvalue], { type: aObject._rmime });\n        }\n      } else if (aObject._rtype === \"orderedmap\") {\n        bObject = new Map(await this._decode(aObject._rvalue, withPromise));\n      } else if (aObject._rtype === \"set\") {\n        bObject = new Set(await this._decode(aObject._rvalue, withPromise));\n      } else {\n        // make sure all the interface functions are decoded\n        if (aObject._rintf) {\n          const temp = aObject._rtype;\n          delete aObject._rtype;\n          bObject = await this._decode(aObject, withPromise);\n          bObject._rtype = temp;\n        } else bObject = aObject;\n      }\n    } else if (aObject.constructor === Object || Array.isArray(aObject)) {\n      const isarray = Array.isArray(aObject);\n      bObject = isarray ? [] : {};\n      for (let k of Object.keys(aObject)) {\n        if (isarray || aObject.hasOwnProperty(k)) {\n          const v = aObject[k];\n          bObject[k] = await this._decode(v, withPromise);\n        }\n      }\n    } else {\n      bObject = aObject;\n    }\n    if (bObject === undefined) {\n      throw new Error(\"Failed to decode object\");\n    }\n    // store the object id for dispose\n    if (aObject._rintf) {\n      this._object_weakmap.set(bObject, aObject._rintf);\n    }\n    return bObject;\n  }\n\n  async _wrap(args, asInterface) {\n    return await this._encode(args, asInterface);\n  }\n\n  /**\n   * Unwraps the set of arguments delivered from the remote site,\n   * replaces all callback identifiers with a function which will\n   * initiate sending that callback identifier back to other site\n   *\n   * @param {Object} args to unwrap\n   *\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Array} unwrapped args\n   */\n  async _unwrap(args, withPromise) {\n    return await this._decode(args, withPromise);\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * callback. When the generated function is called, it will send\n   * the corresponding message to the remote site asking it to\n   * execute the particular callback previously saved during a call\n   * by the remote site a method from the interface of this site\n   *\n   * @param {Number} id of the remote callback to execute\n   * @param {Number} argNum argument index of the callback\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Function} wrapped remote callback\n   */\n  _genRemoteCallback(targetId, cid, withPromise) {\n    const me = this;\n    let remoteCallback;\n    if (withPromise) {\n      remoteCallback = function() {\n        return new Promise(async (resolve, reject) => {\n          const args = await me._wrap(Array.prototype.slice.call(arguments));\n          const transferables = args.__transferables__;\n          if (transferables) delete args.__transferables__;\n\n          const encodedPromise = await me._wrap([resolve, reject]);\n          // store the key id for removing them from the reference store together\n          resolve.__promise_pair = encodedPromise[1]._rvalue;\n          reject.__promise_pair = encodedPromise[0]._rvalue;\n          try {\n            me._connection.emit(\n              {\n                type: \"callback\",\n                target_id: targetId,\n                id: cid,\n                args: args,\n                promise: encodedPromise\n              },\n              transferables\n            );\n          } catch (e) {\n            reject(`Failed to exectue remote callback ( id: ${cid}).`);\n          }\n        });\n      };\n      return remoteCallback;\n    } else {\n      remoteCallback = async function() {\n        const args = await me._wrap(Array.prototype.slice.call(arguments));\n        const transferables = args.__transferables__;\n        if (transferables) delete args.__transferables__;\n        return me._connection.emit(\n          {\n            type: \"callback\",\n            target_id: targetId,\n            id: cid,\n            args: args\n          },\n          transferables\n        );\n      };\n      return remoteCallback;\n    }\n  }\n\n  /**\n   * Sends the notification message and breaks the connection\n   */\n  disconnect() {\n    this._connection.emit({ type: \"disconnect\" });\n    setTimeout(() => {\n      this._connection.disconnect();\n    }, 2000);\n  }\n}\n\n/**\n * ReferenceStore is a special object which stores other objects\n * and provides the references (number) instead. This reference\n * may then be sent over a json-based communication channel (IPC\n * to another Node.js process or a message to the Worker). Other\n * site may then provide the reference in the responce message\n * implying the given object should be activated.\n *\n * Primary usage for the ReferenceStore is a storage for the\n * callbacks, which therefore makes it possible to initiate a\n * callback execution by the opposite site (which normally cannot\n * directly execute functions over the communication channel).\n *\n * Each stored object can only be fetched once and is not\n * available for the second time. Each stored object must be\n * fetched, since otherwise it will remain stored forever and\n * consume memory.\n *\n * Stored object indeces are simply the numbers, which are however\n * released along with the objects, and are later reused again (in\n * order to postpone the overflow, which should not likely happen,\n * but anyway).\n */\nclass ReferenceStore {\n  constructor() {\n    this._store = {}; // stored object\n    this._indices = [0]; // smallest available indices\n    this._readyHandler = function() {};\n    this._busyHandler = function() {};\n    this._readyHandler();\n  }\n\n  /**\n   * call handler when the store is empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onReady(readyHandler) {\n    this._readyHandler = readyHandler || function() {};\n  }\n\n  /**\n   * call handler when the store is not empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onBusy(busyHandler) {\n    this._busyHandler = busyHandler || function() {};\n  }\n\n  /**\n   * get the length of the store\n   *\n   */\n  getStack() {\n    return Object.keys(this._store).length;\n  }\n\n  /**\n   * @function _genId() generates the new reference id\n   *\n   * @returns {Number} smallest available id and reserves it\n   */\n  _genId() {\n    let id;\n    if (this._indices.length === 1) {\n      id = this._indices[0]++;\n    } else {\n      id = this._indices.shift();\n    }\n\n    return id;\n  }\n\n  /**\n   * Releases the given reference id so that it will be available by\n   * another object stored\n   *\n   * @param {Number} id to release\n   */\n  _releaseId(id) {\n    for (let i = 0; i < this._indices.length; i++) {\n      if (id < this._indices[i]) {\n        this._indices.splice(i, 0, id);\n        break;\n      }\n    }\n\n    // cleaning-up the sequence tail\n    for (let i = this._indices.length - 1; i >= 0; i--) {\n      if (this._indices[i] - 1 === this._indices[i - 1]) {\n        this._indices.pop();\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Stores the given object and returns the refernce id instead\n   *\n   * @param {Object} obj to store\n   *\n   * @returns {Number} reference id of the stored object\n   */\n  put(obj) {\n    if (this._busyHandler && Object.keys(this._store).length === 0) {\n      this._busyHandler();\n    }\n    const id = this._genId();\n    this._store[id] = obj;\n    return id;\n  }\n\n  /**\n   * Retrieves previously stored object and releases its reference\n   *\n   * @param {Number} id of an object to retrieve\n   */\n  fetch(id) {\n    const obj = this._store[id];\n    if (obj && !obj.__remote_method) {\n      delete this._store[id];\n      this._releaseId(id);\n      if (this._readyHandler && Object.keys(this._store).length === 0) {\n        this._readyHandler();\n      }\n    }\n    if (obj && obj.__promise_pair) {\n      this.fetch(obj.__promise_pair);\n    }\n    return obj;\n  }\n}\n","/**\n * Core plugin script loaded into the plugin process/thread.\n *\n * Initializes the plugin-site API global methods.\n */\nimport { RPC } from \"./rpc.js\";\n\nexport function connectRPC(connection, config) {\n  config = config || {};\n  const codecs = {};\n\n  const rpc = new RPC(connection, config, codecs);\n  rpc.on(\"getInterface\", function() {\n    launchConnected();\n  });\n\n  rpc.on(\"remoteReady\", function() {\n    const api = rpc.getRemote() || {};\n    if (api.export) {\n      throw new Error(\"`export` is a reserved function name\");\n    }\n    if (api.onload) {\n      throw new Error(\"`onload` is a reserved function name\");\n    }\n    if (api.dispose) {\n      throw new Error(\"`dispose` is a reserved function name\");\n    }\n    api.registerCodec = function(config) {\n      if (!config[\"name\"] || (!config[\"encoder\"] && !config[\"decoder\"])) {\n        throw new Error(\n          \"Invalid codec format, please make sure you provide a name, type, encoder and decoder.\"\n        );\n      } else {\n        if (config.type) {\n          for (let k of Object.keys(codecs)) {\n            if (codecs[k].type === config.type || k === config.name) {\n              delete codecs[k];\n              console.warn(\"Remove duplicated codec: \" + k);\n            }\n          }\n        }\n        codecs[config[\"name\"]] = config;\n      }\n    };\n    api.init = function(config) {\n      // register a minimal plugin api\n      rpc.setInterface({ setup() {} }, config);\n    };\n    api.disposeObject = function(obj) {\n      rpc.disposeObject(obj);\n    };\n    api.export = function(_interface, config) {\n      rpc.setInterface(_interface, config);\n    };\n    api.onLoad = function(handler) {\n      handler = checkHandler(handler);\n      if (connected) {\n        handler();\n      } else {\n        connectedHandlers.push(handler);\n      }\n    };\n    api.dispose = function(_interface) {\n      rpc.disconnect();\n    };\n\n    if (\n      typeof WorkerGlobalScope !== \"undefined\" &&\n      self instanceof WorkerGlobalScope\n    ) {\n      self.api = api;\n      self.postMessage({\n        type: \"imjoy_remote_api_ready\"\n      });\n    } else if (typeof window) {\n      window.dispatchEvent(\n        new CustomEvent(\"imjoy_remote_api_ready\", { detail: api })\n      );\n    }\n  });\n\n  let connected = false;\n  const connectedHandlers = [];\n\n  const launchConnected = function() {\n    if (!connected) {\n      connected = true;\n\n      let handler;\n      while ((handler = connectedHandlers.pop())) {\n        handler();\n      }\n    }\n  };\n\n  const checkHandler = function(handler) {\n    const type = typeof handler;\n    if (type !== \"function\") {\n      const msg =\n        \"A function may only be subsribed to the event, \" +\n        type +\n        \" was provided instead\";\n      throw new Error(msg);\n    }\n    return handler;\n  };\n\n  return rpc;\n}\n","/**\n * Contains the routines loaded by the plugin Worker under web-browser.\n *\n * Initializes the web environment version of the platform-dependent\n * connection object for the plugin site\n */\nimport { connectRPC } from \"./pluginCore.js\";\nimport { API_VERSION } from \"./rpc.js\";\nimport { MessageEmitter, randId } from \"./utils.js\";\n\n(function() {\n  // make sure this runs inside a webworker\n  if (\n    typeof WorkerGlobalScope === \"undefined\" ||\n    !self ||\n    !(self instanceof WorkerGlobalScope)\n  ) {\n    throw new Error(\"This script can only loaded in a webworker\");\n  }\n  /**\n   * Connection object provided to the RPC constructor,\n   * plugin site implementation for the web-based environment.\n   * Global will be then cleared to prevent exposure into the\n   * Worker, so we put this local connection object into a closure\n   */\n  class Connection extends MessageEmitter {\n    constructor(config) {\n      super(config && config.debug);\n      this.config = config || {};\n    }\n    connect() {\n      self.addEventListener(\"message\", e => {\n        this._fire(e.data.type, e.data);\n      });\n      this.emit({\n        type: \"initialized\",\n        config: this.config\n      });\n    }\n    disconnect() {\n      this._fire(\"beforeDisconnect\");\n      self.close();\n      this._fire(\"disconnected\");\n    }\n    emit(data) {\n      let transferables = undefined;\n      if (data.__transferables__) {\n        transferables = data.__transferables__;\n        delete data.__transferables__;\n      }\n      self.postMessage(data, transferables);\n    }\n    async execute(code) {\n      if (code.type === \"requirements\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (!Array.isArray(code.requirements)) {\n                code.requirements = [code.requirements];\n              }\n              for (var i = 0; i < code.requirements.length; i++) {\n                if (\n                  code.requirements[i].toLowerCase().endsWith(\".css\") ||\n                  code.requirements[i].startsWith(\"css:\")\n                ) {\n                  throw \"unable to import css in a webworker\";\n                } else if (\n                  code.requirements[i].toLowerCase().endsWith(\".js\") ||\n                  code.requirements[i].startsWith(\"js:\")\n                ) {\n                  if (code.requirements[i].startsWith(\"js:\")) {\n                    code.requirements[i] = code.requirements[i].slice(3);\n                  }\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"http\")) {\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"cache:\")) {\n                  //ignore cache\n                } else {\n                  console.log(\n                    \"Unprocessed requirements url: \" + code.requirements[i]\n                  );\n                }\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n        } catch (e) {\n          throw e;\n        }\n      } else if (code.type === \"script\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (Array.isArray(code.requirements)) {\n                for (let i = 0; i < code.requirements.length; i++) {\n                  importScripts(code.requirements[i]);\n                }\n              } else {\n                importScripts(code.requirements);\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n          eval(code.content);\n        } catch (e) {\n          console.error(e.message, e.stack);\n          throw e;\n        }\n      } else {\n        throw \"unsupported code type.\";\n      }\n      if (code.type === \"requirements\") {\n        self.postMessage({\n          type: \"cacheRequirements\",\n          requirements: code.requirements\n        });\n      }\n    }\n  }\n  const config = {\n    type: \"web-worker\",\n    dedicated_thread: true,\n    allow_execution: true,\n    lang: \"javascript\",\n    api_version: API_VERSION\n  };\n  const conn = new Connection(config);\n  conn.on(\"connectRPC\", data => {\n    connectRPC(conn, Object.assign(data.config, config));\n  });\n  conn.connect();\n  self.postMessage({\n    type: \"worker-ready\"\n  });\n})();\n"],"sourceRoot":""}