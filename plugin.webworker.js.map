{"version":3,"sources":["webpack://imjoyRPC/webpack/bootstrap","webpack://imjoyRPC/./src/utils.js","webpack://imjoyRPC/./src/rpc.js","webpack://imjoyRPC/./src/pluginCore.js","webpack://imjoyRPC/./src/plugin.webworker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","randId","Math","random","toString","substr","Date","getTime","typedArrayToDtype","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Array","MessageEmitter","constructor","debug","this","_event_handlers","_once_handlers","_debug","emit","Error","on","event","handler","push","once","___event_run_once","off","idx","indexOf","splice","_fire","data","length","e","console","error","warn","API_VERSION","ArrayBufferView","getPrototypeOf","_appendBuffer","buffer1","buffer2","tmp","byteLength","set","buffer","RPC","connection","config","super","_connection","_interface_store","_local_api","execute","_store","ReferenceStore","_method_refs","onReady","onBusy","_setupMessageHanlders","init","type","peer_id","getRemoteCallStack","getStack","getRemote","setInterface","_interface","forwarding_functions","func_name","_remote","args","Function","sendInterface","_rid","api","_encode","Promise","resolve","code","then","catch","reject","method","result","pid","_method_context","__this__","_unwrap","promise","apply","fetch","_rindex","_setRemoteInterface","disconnect","requestRemote","_ndarray","typedArray","shape","dtype","_dtype","_rtype","_rvalue","_rshape","_rdtype","_decode","_reportRemoteSet","_genRemoteMethod","interface_id","me","remoteMethod","id","put","wrapped_resolve","arguments","wrapped_reject","__jailed_pairs__","slice","transferables","_wrap","__transferables__","__remote_method","_encodeInterface","aObject","v","k","keys","encoded_interface","isArray","getOwnPropertyNames","concat","bObject","includes","startsWith","as_interface","_transfer","isarray","_rintf","_rpc_encode","encoded_obj","_ctype","undefined","interfaceFuncName","functions","name_","tf","Tensor","v_buffer","dataSync","nj","NdArray","selection","File","_rrelative_path","relativePath","webkitRelativePath","Boolean","String","RegExp","Blob","ImageData","FileList","ArrayBuffer","callbackId","withPromise","_rpc_decode","_genRemoteCallback","intfid","array","reduce","reshape","tensor","argNum","setTimeout","_indices","_readyHandler","_busyHandler","readyHandler","busyHandler","_genId","shift","_releaseId","pop","obj","_id","find","connectRPC","rpc","launchConnected","export","onload","dispose","onLoad","checkHandler","connected","connectedHandlers","WorkerGlobalScope","self","postMessage","window","dispatchEvent","CustomEvent","detail","Connection","addEventListener","close","requirements","toLowerCase","endsWith","importScripts","log","eval","content","message","stack","dedicated_thread","allow_execution","lang","api_version","conn","assign","connect"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,+BClF9C,SAASC,IACd,OACEC,KAAKC,SACFC,SAAS,IACTC,OAAO,EAAG,KAAM,IAAIC,MAAOC,UAJlC,sGAQO,MAWMC,EAAoB,CAC/BC,UAAW,OACXC,WAAY,QACZC,WAAY,QACZC,WAAY,QACZC,YAAa,SACbC,YAAa,SACbC,aAAc,UACdC,aAAc,UACdC,MAAO,SAgGF,MAAMC,EACXC,YAAYC,GACVC,KAAKC,gBAAkB,GACvBD,KAAKE,eAAiB,GACtBF,KAAKG,OAASJ,EAEhBK,OACE,MAAM,IAAIC,MAAM,2BAElBC,GAAGC,EAAOC,GACHR,KAAKC,gBAAgBM,KACxBP,KAAKC,gBAAgBM,GAAS,IAEhCP,KAAKC,gBAAgBM,GAAOE,KAAKD,GAEnCE,KAAKH,EAAOC,GACVA,EAAQG,mBAAoB,EAC5BX,KAAKM,GAAGC,EAAOC,GAEjBI,IAAIL,EAAOC,GACT,GAAKD,GAAUC,GAGR,GAAID,IAAUC,EAEfR,KAAKC,gBAAgBM,KAAQP,KAAKC,gBAAgBM,GAAS,SAG/D,GAAIP,KAAKC,gBAAgBM,GAAQ,CAC/B,MAAMM,EAAMb,KAAKC,gBAAgBM,GAAOO,QAAQN,GAC5CK,GAAO,GACTb,KAAKC,gBAAgBM,GAAOQ,OAAOF,EAAK,SAT5Cb,KAAKC,gBAAkB,GAc3Be,MAAMT,EAAOU,GACX,GAAIjB,KAAKC,gBAAgBM,GAEvB,IADA,IAAI3D,EAAIoD,KAAKC,gBAAgBM,GAAOW,OAC7BtE,KAAK,CACV,MAAM4D,EAAUR,KAAKC,gBAAgBM,GAAO3D,GAC5C,IACE4D,EAAQS,GACR,MAAOE,GACPC,QAAQC,MAAMF,GAHhB,QAKMX,EAAQG,mBACVX,KAAKC,gBAAgBM,GAAOQ,OAAOnE,EAAG,SAKxCoD,KAAKG,QACPiB,QAAQE,KAAK,kBAAmBf,EAAOU,M,6BCjL/C,+EAMO,MAAMM,EAAc,QAErBC,EAAkBlE,OAAOmE,eAC7BnE,OAAOmE,eAAe,IAAIlC,aAC1BO,YAEF,SAAS4B,EAAcC,EAASC,GAC9B,MAAMC,EAAM,IAAItC,WAAWoC,EAAQG,WAAaF,EAAQE,YAGxD,OAFAD,EAAIE,IAAI,IAAIxC,WAAWoC,GAAU,GACjCE,EAAIE,IAAI,IAAIxC,WAAWqC,GAAUD,EAAQG,YAClCD,EAAIG,OAcN,MAAMC,UAAYpC,IACvBC,YAAYoC,EAAYC,GACtBC,MAAMD,GAAUA,EAAOpC,OACvBC,KAAKqC,YAAcH,EACnBlC,KAAKmC,OAASA,GAAU,GACxBnC,KAAKsC,iBAAmB,GACxBtC,KAAKuC,WAAa,KAElB,MAAMpF,EAAO6C,KAAKmC,OAAOhF,KACzB6C,KAAKqC,YAAYG,QACfxC,KAAKqC,YAAYG,SACjB,WACE,MAAM,IAAInC,MAAO,2CAA0ClD,QAE/D6C,KAAKyC,OAAS,IAAIC,EAClB1C,KAAK2C,aAAe,IAAID,EACxB1C,KAAK2C,aAAaC,QAAQ,KACxB5C,KAAKgB,MAAM,gBAEbhB,KAAK2C,aAAaE,OAAO,KACvB7C,KAAKgB,MAAM,gBAEbhB,KAAK8C,wBAGPC,OACE/C,KAAKqC,YAAYjC,KAAK,CACpB4C,KAAM,cACNb,OAAQnC,KAAKmC,OACbc,QAASjD,KAAKqC,YAAYY,UAW9BC,qBACE,OAAOlD,KAAK2C,aAAaQ,WAM3BC,YACE,OAAOpD,KAAKsC,iBAAL,SASTe,aAAaC,GACX,GAAItD,KAAKmC,OAAOoB,qBACd,IAAK,IAAIC,KAAaxD,KAAKmC,OAAOoB,qBAAsB,CACtD,MAAME,EAAUzD,KAAKsC,iBAAL,SACZmB,EAAQD,KACNF,EAAWxD,cAAgBxC,OACxBgG,EAAWE,KACdF,EAAWE,GAAa,IAAIE,KAC1BD,EAAQD,MAAcE,KAGjBJ,EAAWxD,YAAYA,cAAgB6D,WAC3CL,EAAWxD,YAAYtB,UAAUgF,KACpCF,EAAWxD,YAAYtB,UAAUgF,GAAa,IAAIE,KAChDD,EAAQD,MAAcE,OAOlC1D,KAAKuC,WAAae,EAClBtD,KAAKgB,MAAM,sBAOb4C,gBACE,IAAK5D,KAAKuC,WACR,MAAM,IAAIlC,MAAM,yBAElBL,KAAKuC,WAAWsB,KAAO,UACvB,MAAMC,EAAM9D,KAAK+D,QAAQ/D,KAAKuC,YAAY,GAC1CvC,KAAKqC,YAAYjC,KAAK,CAAE4C,KAAM,eAAgBc,IAAKA,IAOrDhB,wBACE9C,KAAKqC,YAAY/B,GAAG,OAAQN,KAAK+C,MACjC/C,KAAKqC,YAAY/B,GAAG,UAAWW,IAC7B+C,QAAQC,QAAQjE,KAAKqC,YAAYG,QAAQvB,EAAKiD,OAC3CC,KAAK,KACJnE,KAAKqC,YAAYjC,KAAK,CAAE4C,KAAM,eAE/BoB,MAAMjD,IACLC,QAAQC,MAAMF,GACdnB,KAAKqC,YAAYjC,KAAK,CACpB4C,KAAM,WACN3B,MAAOF,QAKfnB,KAAKqC,YAAY/B,GAAG,SAAUW,IAC5B,IAAIgD,EAASI,EAAQC,EAAQZ,EAAMa,EAC/BjB,EAAatD,KAAKsC,iBAAiBrB,EAAKuD,KAC5C,MAAMC,EAAkBnB,EAAWoB,UAAYpB,EAC/C,GAAKA,EAgBL,GAFAgB,EAAShB,EAAWrC,EAAK9D,MACzBuG,EAAO1D,KAAK2E,QAAQ1D,EAAKyC,MAAM,GAC3BzC,EAAK2D,QAAS,EACfX,EAASI,GAAUrE,KAAK2E,QAAQ1D,EAAK2D,SAAS,GAC/C,IACEL,EAASD,EAAOO,MAAMJ,EAAiBf,GAErCa,aAAkBP,SACjBM,EAAOxE,aAA2C,kBAA5BwE,EAAOxE,YAAY3C,KAE1CoH,EAAOJ,KAAKF,GAASG,MAAMC,GAE3BJ,EAAQM,GAEV,MAAOpD,GACPC,QAAQC,MAAMrB,KAAKmC,OAAOhF,KAAMgE,EAAGmD,GACnCD,EAAOlD,SAGT,IACEmD,EAAOO,MAAMJ,EAAiBf,GAC9B,MAAOvC,GACPC,QAAQC,MAAMrB,KAAKmC,OAAOhF,KAAMgE,EAAGmD,EAAQZ,QAnCzCzC,EAAK2D,UACNX,EAASI,GAAUrE,KAAK2E,QAAQ1D,EAAK2D,SAAS,GAC/CP,EACG,2CAA0CpD,EAAKuD,uCAGlDpD,QAAQC,MACL,0CAAyCJ,EAAKuD,uCAiCvDxE,KAAKqC,YAAY/B,GAAG,WAAYW,IAC9B,IAAIgD,EAASI,EAAQC,EAAQZ,EAAMa,EACnC,GAAItD,EAAK2D,QAAS,EACfX,EAASI,GAAUrE,KAAK2E,QAAQ1D,EAAK2D,SAAS,GAC/C,IAGE,GAFAN,EAAStE,KAAKyC,OAAOqC,MAAM7D,EAAK8D,SAChCrB,EAAO1D,KAAK2E,QAAQ1D,EAAKyC,MAAM,IAC1BY,EACH,MAAM,IAAIjE,MACR,mLAGJkE,EAASD,EAAOO,MAAM,KAAMnB,GAE1Ba,aAAkBP,SACjBM,EAAOxE,aAA2C,kBAA5BwE,EAAOxE,YAAY3C,KAE1CoH,EAAOJ,KAAKF,GAASG,MAAMC,GAE3BJ,EAAQM,GAEV,MAAOpD,GACPC,QAAQC,MAAMrB,KAAKmC,OAAOhF,KAAMgE,EAAGmD,GACnCD,EAAOlD,SAGT,IAGE,GAFAmD,EAAStE,KAAKyC,OAAOqC,MAAM7D,EAAK8D,SAChCrB,EAAO1D,KAAK2E,QAAQ1D,EAAKyC,MAAM,IAC1BY,EACH,MAAM,IAAIjE,MACR,sMAGJiE,EAAOO,MAAM,KAAMnB,GACnB,MAAOvC,GACPC,QAAQC,MAAMrB,KAAKmC,OAAOhF,KAAMgE,EAAGmD,EAAQZ,MAIjD1D,KAAKqC,YAAY/B,GAAG,eAAgBW,IAClCjB,KAAKgF,oBAAoB/D,EAAK6C,OAEhC9D,KAAKqC,YAAY/B,GAAG,eAAgB,KAClCN,KAAKgB,MAAM,gBACPhB,KAAKuC,WACPvC,KAAK4D,gBAEL5D,KAAKU,KAAK,qBAAsB,KAC9BV,KAAK4D,oBAIX5D,KAAKqC,YAAY/B,GAAG,uBAAwB,KAC1CN,KAAKgB,MAAM,0BAEbhB,KAAKqC,YAAY/B,GAAG,aAAc,KAChCN,KAAKgB,MAAM,oBACXhB,KAAKqC,YAAY4C,aACjBjF,KAAKgB,MAAM,kBAQfkE,gBACElF,KAAKqC,YAAYjC,KAAK,CAAE4C,KAAM,iBAGhCmC,SAASC,EAAYC,EAAOC,GAC1B,IAAIC,EAASpG,IAAkBiG,EAAWtF,YAAY3C,MACtD,GAAImI,GAASA,IAAUC,EACrB,KAAM,8CACJA,EACA,OACAD,EAGJ,MAAO,CACLE,OAAQ,UACRC,QAASL,EACTM,QAJFL,EAAQA,GAAS,CAACD,EAAWlE,QAK3ByE,QAASJ,GASbP,oBAAoBlB,GAClB9D,KAAKsC,iBAAL,SAAoCtC,KAAK4F,QAAQ9B,GACjD9D,KAAKgB,MAAM,eACXhB,KAAK6F,mBAaPC,iBAAiB3I,EAAM4I,GACrB,IAAIC,EAAKhG,KACLiG,EAAe,WACjB,OAAO,IAAIjC,QAAQ,CAACC,EAASI,KAC3B,IAAI6B,EAAK,KACT,IACEA,EAAKF,EAAGrD,aAAawD,IACnBJ,EAAeA,EAAe,IAAM5I,EAAOA,GAE7C,IAAIiJ,EAAkB,WAEpB,OADW,OAAPF,GAAaF,EAAGrD,aAAamC,MAAMoB,GAChCjC,EAAQY,MAAM7E,KAAMqG,YAEzBC,EAAiB,WAEnB,OADW,OAAPJ,GAAaF,EAAGrD,aAAamC,MAAMoB,GAChC7B,EAAOQ,MAAM7E,KAAMqG,YAG5BD,EAAgBG,iBAAmBD,EACnCA,EAAeC,iBAAmBH,EAElC,IAAI1C,EAAO9D,MAAMpB,UAAUgI,MAAMzJ,KAAKsJ,WAMlCI,GAJF/C,EADW,aAATvG,GAAgC,WAATA,GAA8B,OAATA,EACvC6I,EAAGU,MAAMhD,GAAM,GAEfsC,EAAGU,MAAMhD,IAEOA,KAAKiD,kBAC1BF,UAAsB/C,EAAKA,KAAKiD,kBACpCX,EAAG3D,YAAYjC,KACb,CACE4C,KAAM,SACN7F,KAAMA,EACNqH,IAAKuB,EACLrC,KAAMA,EACNkB,QAASoB,EAAGU,MAAM,CAACN,EAAiBE,KAEtCG,GAEF,MAAOtF,GACH+E,GAAIF,EAAGrD,aAAamC,MAAMoB,GAC9B7B,EACG,+CAA8C0B,GAC7CC,EAAGE,eAAe/I,cAAiBgE,SAM7C,OADA8E,EAAaW,iBAAkB,EACxBX,EAOTJ,mBACE7F,KAAKqC,YAAYjC,KAAK,CAAE4C,KAAM,yBAahC6D,iBAAiBC,GACf,IAAIC,EAAGC,EAAGC,EACV,MAAMC,EAAoB,GAG1B,GAFAJ,EAAO,KAAWA,EAAO,MAAYlI,cAEjCkI,EAAQhH,cAAgBxC,QAAUsC,MAAMuH,QAAQL,GAClDG,EAAO3J,OAAO2J,KAAKH,OAGhB,IAAIA,EAAQhH,cAAgB6D,SAC/B,MAAM,IAAItD,MAAM,sDAGb,GAAIyG,EAAQhH,YAAYA,cAAgB6D,SAK3C,MAAMtD,MAAM,8BAJZ4G,EAAO3J,OAAO8J,oBAAoB9J,OAAOmE,eAAeqF,IAAUO,OAChE/J,OAAO2J,KAAKH,IAMhB,MAAMQ,EAAU1H,MAAMuH,QAAQL,GAAW,GAAK,GAE9C,IAAKE,KAAKC,EACJ,CAAC,iBAAkB,eAAeM,SAASP,IAE3CA,EAAEQ,WAAW,OAGjBT,EAAID,EAAQE,GAEK,mBAAND,GACTO,EAAQN,GAAK,CACXxB,OAAQ,YACR3B,KAAMiD,EAAO,KACbrB,QAASuB,GAEXE,EAAkBF,GAAKD,GACdzJ,OAAOyJ,KAAOA,GACvBO,EAAQN,GAAK,CAAExB,OAAQ,WAAYC,QAASsB,GAC5CG,EAAkBF,GAAKD,GACD,iBAANA,IAChBO,EAAQN,GAAKhH,KAAK6G,iBAAiBE,KAWvC,OARA/G,KAAKsC,iBAAiBwE,EAAO,MAAYI,EAGrCJ,EAAQxG,IAA4B,mBAAfwG,EAAQxG,IAC/BwG,EAAQxG,GAAG,QAAS,YACXN,KAAKsC,iBAAiBwE,EAAO,QAGjCQ,EAGTvD,QAAQ+C,EAASW,GACf,MAAMhB,EAAgB,GACtB,IAAKK,EACH,OAAOA,EAET,MAAMY,EAAYZ,EAAQY,UAC1B,IAAIJ,EAASP,EAAGC,EAChB,MAAMW,EAAU/H,MAAMuH,QAAQL,GAE9B,GAAuB,iBAAZA,GAAwBA,EAAQtB,QAAUsB,EAAQrB,QAC3D,OAAOqB,EAIT,GACqB,iBAAZA,IACNlH,MAAMuH,QAAQL,KACdA,EAAQc,QAAUH,GAEnB,OAAOzH,KAAK6G,iBAAiBC,GAU/B,IAAKE,KAPDS,IACFX,EAAO,KAAWA,EAAO,MAAYlI,cACrCoB,KAAKsC,iBAAiBwE,EAAO,MAC3B9G,KAAKsC,iBAAiBwE,EAAO,QAAca,EAAU,GAAK,KAG9DL,EAAUK,EAAU,GAAK,GACfb,EACR,IAAI,CAAC,iBAAkB,eAAeS,SAASP,KAC3CW,GAAWb,EAAQrI,eAAeuI,IAAI,CAExC,GADAD,EAAID,EAAQE,GACRD,GAA4C,mBAAhC/G,KAAKuC,WAAWsF,YAA4B,CAC1D,MAAMC,EAAc9H,KAAKuC,WAAWsF,YAAYd,GAChD,GAAIe,GAAeA,EAAYC,OAAQ,CACrCT,EAAQN,GAAK,CACXxB,OAAQ,SACRC,QAASqC,EACTjE,KAAMiD,EAAO,MAEf,cAGuBkB,IAAhBF,IACPf,EAAIe,GAGR,GAAiB,mBAANf,EAAkB,CAC3B,GAAIU,EAAc,CAChB,MAAMP,EAAoBlH,KAAKsC,iBAAiBwE,EAAO,MACvDQ,EAAQN,GAAK,CACXxB,OAAQ,YACR3B,KAAMiD,EAAO,KACbrB,QAASuB,GAEXE,EAAkBF,GAAKD,EACvB,SAEF,IAAIkB,EAAoB,KACxB,IAAK,IAAI9K,KAAQ6C,KAAKuC,WACpB,GAAIvC,KAAKuC,WAAW9D,eAAetB,GAAO,CACxC,GAAIA,EAAKqK,WAAW,KAAM,SAC1B,GAAIxH,KAAKuC,WAAWpF,KAAU4J,EAAG,CAC/BkB,EAAoB9K,EACpB,OAQN,IAHA,IAAI+K,EAAY5K,OAAO8J,oBACrB9J,OAAOmE,eAAezB,KAAKuC,aAEpB3F,EAAI,EAAGA,EAAIsL,EAAUhH,OAAQtE,IAAK,CACzC,IAAIuL,EAAQD,EAAUtL,GACtB,IAAIuL,EAAMX,WAAW,MACjBxH,KAAKuC,WAAW4F,KAAWpB,EAAG,CAChCkB,EAAoBE,EACpB,OAGJ,GAAKF,EAQHX,EAAQN,GAAK,CACXxB,OAAQ,YACRC,QAASwC,EACTpE,KAAM,eAXc,CACtB,IAAIqC,EAAKlG,KAAKyC,OAAO0D,IAAIY,GACzBO,EAAQN,GAAK,CACXxB,OAAQ,WACRC,QAAUsB,EAAEjH,aAAeiH,EAAEjH,YAAY3C,MAAS+I,EAClDnB,QAASmB,SASR,GAES,oBAAPkC,IACPA,GAAGC,QACHtB,aAAaqB,GAAGC,OAChB,CACA,MAAMC,EAAWvB,EAAEwB,YACfxB,EAAEW,WAAaA,KACjBjB,EAAchG,KAAK6H,EAAStG,eACrB+E,EAAEW,WAEXJ,EAAQN,GAAK,CACXxB,OAAQ,UACRC,QAAS6C,EACT5C,QAASqB,EAAE1B,MACXM,QAASoB,EAAEzB,YAER,GAES,oBAAPkD,IACPA,GAAGC,SACH1B,aAAayB,GAAGC,QAChB,CACA,IAAInD,EAAQnG,IAAkB4H,EAAE2B,UAAUzH,KAAKnB,YAAY3C,OACvD4J,EAAEW,WAAaA,KACjBjB,EAAchG,KAAKsG,EAAE2B,UAAUzH,KAAKe,eAC7B+E,EAAEW,WAEXJ,EAAQN,GAAK,CACXxB,OAAQ,UACRC,QAASsB,EAAE2B,UAAUzH,KACrByE,QAASqB,EAAE1B,MACXM,QAASL,QAEN,GAAIyB,aAAa1G,MACtBe,QAAQC,MAAM0F,GACdO,EAAQN,GAAK,CAAExB,OAAQ,QAASC,QAASsB,EAAEhI,iBACtC,GAAoB,oBAAT4J,MAAwB5B,aAAa4B,KACrDrB,EAAQN,GAAK,CACXxB,OAAQ,OACRC,QAASsB,EACT6B,gBAAiB7B,EAAE8B,cAAgB9B,EAAE+B,yBAKpC,GACH/B,IAAMzJ,OAAOyJ,IACbA,aAAagC,SACbhC,aAAaiC,QACbjC,aAAa9H,MACb8H,aAAakC,QACblC,aAAamC,MACbnC,aAAaoC,WACQ,oBAAbC,UAA4BrC,aAAaqC,SAEjD9B,EAAQN,GAAK,CAAExB,OAAQ,WAAYC,QAASsB,QACvC,GAAIA,aAAasC,aAClBtC,EAAEW,WAAaA,KACjBjB,EAAchG,KAAKsG,UACZA,EAAEW,WAEXJ,EAAQN,GAAK,CAAExB,OAAQ,WAAYC,QAASsB,QACvC,GAAIA,aAAavF,GAClBuF,EAAEW,WAAaA,KACjBjB,EAAchG,KAAKsG,EAAE/E,eACd+E,EAAEW,WAEXJ,EAAQN,GAAK,CAAExB,OAAQ,WAAYC,QAASsB,QAIzC,GAAIA,EAAEa,OACTN,EAAQN,GAAKhH,KAAK+D,QAAQgD,GAAG,OACxB,IAAiB,iBAANA,EAUhB,KAAM,oCAAsCC,EAAI,IAAMD,EAPtD,GAFAO,EAAQN,GAAKhH,KAAK+D,QAAQgD,EAAGU,GAEzBH,EAAQN,GAAGL,kBAAmB,CAChC,IAAK,IAAI7I,EAAI,EAAGA,EAAIwJ,EAAQN,GAAGL,kBAAkBzF,OAAQpD,IACvD2I,EAAchG,KAAK6G,EAAQN,GAAGL,kBAAkB7I,WAE3CwJ,EAAQN,GAAGL,oBAU1B,OAHIF,EAAcvF,OAAS,IACzBoG,EAAQX,kBAAoBF,GAEvBa,EAGT1B,QAAQkB,EAASwC,EAAYC,GAC3B,IAAKzC,EACH,OAAOA,EAET,IAAIQ,EAASP,EAAGC,EAChB,GAAIF,EAAQrI,eAAe,WAAaqI,EAAQrI,eAAe,WAAY,CACzE,GAAuB,WAAnBqI,EAAQtB,OAERsB,EAAQrB,SAC+B,mBAAhCzF,KAAKuC,WAAWiH,iBAGPxB,KADhBV,EAAUtH,KAAKuC,WAAWiH,YAAY1C,EAAQrB,YAE5C6B,EAAUR,GAGZQ,EAAUR,OAEP,GAAuB,aAAnBA,EAAQtB,OACjB8B,EAAUtH,KAAKyJ,mBACbH,EACAxC,EAAQ/B,QACRwE,QAEG,GAAuB,cAAnBzC,EAAQtB,OAAwB,CACzC,MAAMkE,EAA0B,YAAjB5C,EAAQjD,KAAqB,UAAYiD,EAAQjD,KAChEyD,EACGtH,KAAKsC,iBAAiBoH,IACrB1J,KAAKsC,iBAAiBoH,GAAQ5C,EAAQrB,UACxCzF,KAAK8F,iBAAiBgB,EAAQrB,QAASqB,EAAQjD,UACrB,YAAnBiD,EAAQtB,OAGC,oBAAPgD,IAAsBA,GAAGmB,OAC9B/J,MAAMuH,QAAQL,EAAQrB,WACxBqB,EAAQrB,QAAUqB,EAAQrB,QAAQmE,OAAOlI,IAE3C4F,EAAUkB,GACPmB,MAAM7C,EAAQrB,QAASqB,EAAQnB,SAC/BkE,QAAQ/C,EAAQpB,UACI,oBAAP0C,IAAsBA,GAAGC,QACrCzI,MAAMuH,QAAQL,EAAQrB,WACxBqB,EAAQrB,QAAUqB,EAAQrB,QAAQmE,OAAOlI,IAE3C4F,EAAUc,GAAG0B,OACXhD,EAAQrB,QACRqB,EAAQpB,QACRoB,EAAQnB,UAIV2B,EAAUR,EAEgB,UAAnBA,EAAQtB,OACjB8B,EAAU,IAAIjH,MAAMyG,EAAQrB,SACA,SAAnBqB,EAAQtB,QACjB8B,EAAUR,EAAQrB,SAEVoD,aAAe/B,EAAQ8B,gBACH,aAAnB9B,EAAQtB,SACjB8B,EAAUR,EAAQrB,SAEpB,OAAO6B,EAEP,IAAIK,EAAU/H,MAAMuH,QAAQL,GAE5B,IAAKE,KADLM,EAAUK,EAAU,GAAK,GACfb,GACJa,GAAWb,EAAQrI,eAAeuI,MAEnB,iBADjBD,EAAID,EAAQE,KACiBpH,MAAMuH,QAAQJ,MACzCO,EAAQN,GAAKhH,KAAK4F,QAAQmB,EAAGuC,EAAYC,IAI/C,OAAOjC,EAIXZ,MAAMhD,EAAM+D,GAGV,MADa,CAAE/D,KADD1D,KAAK+D,QAAQL,EAAM+D,IAgBnC9C,QAAQjB,EAAM6F,GAiBZ,OADavJ,KAAK4F,QAAQlC,EAAKA,KAAMA,EAAK4F,WAAYC,GAiBxDE,mBAAmBvD,EAAI6D,EAAQR,GAC7B,IAAIvD,EAAKhG,KAET,OAAIuJ,EACe,WACf,OAAO,IAAIvF,QAAQ,CAACC,EAASI,KAC3B,IAAIX,EAAOsC,EAAGU,MAAM9G,MAAMpB,UAAUgI,MAAMzJ,KAAKsJ,YAC3CI,EAAgB/C,EAAKA,KAAKiD,kBAC1BF,UAAsB/C,EAAKA,KAAKiD,kBACpC1C,EAAQsC,iBAAmBlC,EAC3BA,EAAOkC,iBAAmBtC,EAC1B,IACE+B,EAAG3D,YAAYjC,KACb,CACE4C,KAAM,WACNkD,GAAIA,EACJnB,QAASgF,EACTrG,KAAMA,EAENkB,QAASoB,EAAGU,MAAM,CAACzC,EAASI,KAE9BoC,GAEF,MAAOtF,GACPkD,EACG,0CAAyC6B,cAAe6D,WAOhD,WACf,IAAIrG,EAAOsC,EAAGU,MAAM9G,MAAMpB,UAAUgI,MAAMzJ,KAAKsJ,YAC3CI,EAAgB/C,EAAKA,KAAKiD,kBAE9B,OADIF,UAAsB/C,EAAKA,KAAKiD,kBAC7BX,EAAG3D,YAAYjC,KACpB,CACE4C,KAAM,WACNkD,GAAIA,EACJnB,QAASgF,EACTrG,KAAMA,GAGR+C,IAURxB,aACEjF,KAAKqC,YAAYjC,KAAK,CAAE4C,KAAM,eAC9BgH,WAAW,KACThK,KAAKqC,YAAY4C,cAChB,MA2BP,MAAMvC,EACJ5C,cACEE,KAAKyC,OAAS,GACdzC,KAAKiK,SAAW,CAAC,GACjBjK,KAAKkK,cAAgB,aACrBlK,KAAKmK,aAAe,aACpBnK,KAAKkK,gBAQPtH,QAAQwH,GACNpK,KAAKkK,cAAgBE,GAAgB,aAQvCvH,OAAOwH,GACLrK,KAAKmK,aAAeE,GAAe,aAOrClH,WACE,OAAO7F,OAAO2J,KAAKjH,KAAKyC,QAAQvB,OAQlCoJ,SAQE,OAN6B,IAAzBtK,KAAKiK,SAAS/I,OACXlB,KAAKiK,SAAS,KAEdjK,KAAKiK,SAASM,QAYvBC,WAAWtE,GACT,IAAK,IAAItJ,EAAI,EAAGA,EAAIoD,KAAKiK,SAAS/I,OAAQtE,IACxC,GAAIsJ,EAAKlG,KAAKiK,SAASrN,GAAI,CACzBoD,KAAKiK,SAASlJ,OAAOnE,EAAG,EAAGsJ,GAC3B,MAKJ,IAAKtJ,EAAIoD,KAAKiK,SAAS/I,OAAS,EAAGtE,GAAK,GAClCoD,KAAKiK,SAASrN,GAAK,IAAMoD,KAAKiK,SAASrN,EAAI,GADNA,IAEvCoD,KAAKiK,SAASQ,MAcpBtE,IAAIuE,GACE1K,KAAKmK,cAAoD,IAApC7M,OAAO2J,KAAKjH,KAAKyC,QAAQvB,QAChDlB,KAAKmK,eAEP,IAAIjE,EAAKlG,KAAKsK,SAEd,OADAtK,KAAKyC,OAAOyD,GAAMwE,EACXxE,EAQTpB,MAAMoB,GACJ,IAz4BmB5H,EAAQT,EAy4BvB6M,EAAM1K,KAAKyC,OAAOyD,GAQtB,GAPIwE,IAAQA,EAAI9D,yBACP5G,KAAKyC,OAAOyD,GACnBlG,KAAKwK,WAAWtE,GACZlG,KAAKkK,eAAqD,IAApC5M,OAAO2J,KAAKjH,KAAKyC,QAAQvB,QACjDlB,KAAKkK,iBAGLQ,GAAOA,EAAInE,iBAAkB,CAC/B,MAAMoE,GAl5BWrM,EAk5BS0B,KAAKyC,OAl5BN5E,EAk5Bc6M,EAAInE,iBAj5BxCjJ,OAAO2J,KAAK3I,GAAQsM,KAAKzM,GAAOG,EAAOH,KAASN,IAk5BnDmC,KAAK8E,MAAM6F,GAEb,OAAOD,K,6BCx6BX,6CAOO,SAASG,EAAW3I,EAAYC,GACrCA,EAASA,GAAU,GAEnB,MAAM2I,EAAM,IAAI7I,IAAIC,EAAYC,GAChC2I,EAAIxK,GAAG,gBAAgB,WACrByK,OAGFD,EAAIxK,GAAG,eAAe,WACpB,MAAMwD,EAAMgH,EAAI1H,aAAe,GAC/B,GAAIU,EAAIkH,OACN,MAAM,IAAI3K,MAAM,wCAElB,GAAIyD,EAAImH,OACN,MAAM,IAAI5K,MAAM,wCAElB,GAAIyD,EAAIoH,QACN,MAAM,IAAI7K,MAAM,yCAElByD,EAAIkH,OAAS,SAAS1H,GACpBwH,EAAIzH,aAAaC,IAEnBQ,EAAIqH,OAAS,SAAS3K,GACpBA,EAAU4K,EAAa5K,GACnB6K,EACF7K,IAEA8K,EAAkB7K,KAAKD,IAG3BsD,EAAIoH,QAAU,SAAS5H,GACrBwH,EAAI7F,cAIyB,oBAAtBsG,mBACPC,gBAAgBD,mBAEhBC,KAAK1H,IAAMA,EACX0H,KAAKC,YAAY,CACfzI,KAAM,4BAGR0I,OAAOC,cACL,IAAIC,YAAY,yBAA0B,CAAEC,OAAQ/H,QAK1D,IAAIuH,GAAY,EAChB,MAAMC,EAAoB,GAEpBP,EAAkB,WACtB,IAAKM,EAAW,CAGd,IAAI7K,EACJ,IAHA6K,GAAY,EAGJ7K,EAAU8K,EAAkBb,OAClCjK,MAKA4K,EAAe,SAAS5K,GAC5B,MAAMwC,SAAcxC,EACpB,GAAa,aAATwC,EAAqB,CAKvB,MAAM,IAAI3C,MAHR,kDACA2C,EACA,yBAGJ,OAAOxC,GAGT,OAAOsK,I,sEClFT,6OAUA,WAEE,KAC+B,oBAAtBS,mBACNC,MACCA,gBAAgBD,mBAElB,MAAM,IAAIlL,MAAM,8CAQlB,MAAMyL,mBAAmB,yCACvB,YAAY3J,GACVC,MAAMD,GAAUA,EAAOpC,OACvBC,KAAKmC,OAASA,GAAU,GAE1B,UACEqJ,KAAKO,iBAAiB,UAAW5K,IAC/BnB,KAAKgB,MAAMG,EAAEF,KAAK+B,KAAM7B,EAAEF,QAE5BjB,KAAKI,KAAK,CACR4C,KAAM,cACNb,OAAQnC,KAAKmC,SAGjB,aACEnC,KAAKgB,MAAM,oBACXwK,KAAKQ,QACLhM,KAAKgB,MAAM,gBAEb,KAAKC,GACH,IAAIwF,OAAgBuB,EAChB/G,EAAK0F,oBACPF,EAAgBxF,EAAK0F,yBACd1F,EAAK0F,mBAEd6E,KAAKC,YAAYxK,EAAMwF,GAEzB,cAAcvC,MACZ,GAAkB,iBAAdA,KAAKlB,KACP,IACE,GACEkB,KAAK+H,eACJrM,MAAMuH,QAAQjD,KAAK+H,eACW,iBAAtB/H,KAAK+H,cAEd,IACOrM,MAAMuH,QAAQjD,KAAK+H,gBACtB/H,KAAK+H,aAAe,CAAC/H,KAAK+H,eAE5B,IAAK,IAAIrP,EAAI,EAAGA,EAAIsH,KAAK+H,aAAa/K,OAAQtE,IAAK,CACjD,GACEsH,KAAK+H,aAAarP,GAAGsP,cAAcC,SAAS,SAC5CjI,KAAK+H,aAAarP,GAAG4K,WAAW,QAEhC,KAAM,sCAENtD,KAAK+H,aAAarP,GAAGsP,cAAcC,SAAS,QAC5CjI,KAAK+H,aAAarP,GAAG4K,WAAW,QAE5BtD,KAAK+H,aAAarP,GAAG4K,WAAW,SAClCtD,KAAK+H,aAAarP,GAAKsH,KAAK+H,aAAarP,GAAG4J,MAAM,IAEpD4F,cAAclI,KAAK+H,aAAarP,KACvBsH,KAAK+H,aAAarP,GAAG4K,WAAW,QACzC4E,cAAclI,KAAK+H,aAAarP,IACvBsH,KAAK+H,aAAarP,GAAG4K,WAAW,WAGzCpG,QAAQiL,IACN,iCAAmCnI,KAAK+H,aAAarP,KAI3D,MAAOuE,GACP,KAAM,sCACJ+C,KAAK+H,aAAalN,YAGxB,MAAOoC,GACP,MAAMA,MAEH,IAAkB,WAAd+C,KAAKlB,KA0Bd,KAAM,yBAzBN,IACE,GACEkB,KAAK+H,eACJrM,MAAMuH,QAAQjD,KAAK+H,eACW,iBAAtB/H,KAAK+H,cAEd,IACE,GAAIrM,MAAMuH,QAAQjD,KAAK+H,cACrB,IAAK,IAAIrP,EAAI,EAAGA,EAAIsH,KAAK+H,aAAa/K,OAAQtE,IAC5CwP,cAAclI,KAAK+H,aAAarP,SAGlCwP,cAAclI,KAAK+H,cAErB,MAAO9K,GACP,KAAM,sCACJ+C,KAAK+H,aAAalN,WAGxBuN,KAAKpI,KAAKqI,SACV,MAAOpL,GAEP,MADAC,QAAQC,MAAMF,EAAEqL,QAASrL,EAAEsL,OACrBtL,GAKQ,iBAAd+C,KAAKlB,MACPwI,KAAKC,YAAY,CACfzI,KAAM,oBACNiJ,aAAc/H,KAAK+H,gBAK3B,MAAM9J,OAAS,CACba,KAAM,aACN0J,kBAAkB,EAClBC,iBAAiB,EACjBC,KAAM,aACNC,YAAa,wCAETC,KAAO,IAAIhB,WAAW3J,QAC5B2K,KAAKxM,GAAG,aAAcW,IACpB,sDAAW6L,KAAMxP,OAAOyP,OAAO9L,EAAKkB,OAAQA,WAE9C2K,KAAKE,UACLxB,KAAKC,YAAY,CACfzI,KAAM,iBAvIV","file":"plugin.webworker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export function randId() {\n  return (\n    Math.random()\n      .toString(36)\n      .substr(2, 10) + new Date().getTime()\n  );\n}\n\nexport const dtypeToTypedArray = {\n  int8: \"Int8Array\",\n  int16: \"Int16Array\",\n  int32: \"Int32Array\",\n  uint8: \"Uint8Array\",\n  uint16: \"Uint16Array\",\n  uint32: \"Uint32Array\",\n  float32: \"Float32Array\",\n  float64: \"Float64Array\",\n  array: \"Array\"\n};\nexport const typedArrayToDtype = {\n  Int8Array: \"int8\",\n  Int16Array: \"int16\",\n  Int32Array: \"int32\",\n  Uint8Array: \"uint8\",\n  Uint16Array: \"uint16\",\n  Uint32Array: \"uint32\",\n  Float32Array: \"float32\",\n  Float64Array: \"float64\",\n  Array: \"array\"\n};\n\nfunction cacheUrlInServiceWorker(url) {\n  return new Promise(function(resolve, reject) {\n    const message = {\n      command: \"add\",\n      url: url\n    };\n    if (!navigator.serviceWorker || !navigator.serviceWorker.register) {\n      reject(\"Service worker is not supported.\");\n      return;\n    }\n    const messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = function(event) {\n      if (event.data && event.data.error) {\n        reject(event.data.error);\n      } else {\n        resolve(event.data && event.data.result);\n      }\n    };\n\n    if (navigator.serviceWorker && navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(message, [\n        messageChannel.port2\n      ]);\n    } else {\n      reject(\"Service worker controller is not available\");\n    }\n  });\n}\n\nexport async function cacheRequirements(requirements) {\n  if (!Array.isArray(requirements)) {\n    requirementsm.code.requirements = [requirements];\n  }\n  if (requirements && requirements.length > 0) {\n    for (let req of requirements) {\n      //remove prefix\n      if (req.startsWith(\"js:\")) req = req.slice(3);\n      if (req.startsWith(\"css:\")) req = req.slice(4);\n      if (req.startsWith(\"cache:\")) req = req.slice(6);\n      if (!req.startsWith(\"http\")) continue;\n\n      await cacheUrlInServiceWorker(req).catch(e => {\n        console.error(e);\n      });\n    }\n  }\n}\n\nexport function setupServiceWorker(baseUrl, targetOrigin, cacheCallback) {\n  // register service worker for offline access\n  if (\"serviceWorker\" in navigator) {\n    baseUrl = baseUrl || \"/\";\n    navigator.serviceWorker.register(baseUrl + \"plugin-service-worker.js\").then(\n      function(registration) {\n        // Registration was successful\n        console.log(\n          \"ServiceWorker registration successful with scope: \",\n          registration.scope\n        );\n      },\n      function(err) {\n        // registration failed :(\n        console.log(\"ServiceWorker registration failed: \", err);\n      }\n    );\n    targetOrigin = targetOrigin || \"*\";\n    cacheCallback = cacheCallback || cacheRequirements;\n    if (cacheCallback && typeof cacheCallback !== \"function\") {\n      throw new Error(\"config.cache_requirements must be a function\");\n    }\n    window.addEventListener(\"message\", function(e) {\n      if (targetOrigin === \"*\" || e.origin === targetOrigin) {\n        const m = e.data;\n        if (m.type === \"cacheRequirements\") {\n          cacheCallback(m.requirements);\n        }\n      }\n    });\n  }\n}\n\n//#Source https://bit.ly/2neWfJ2\nexport function urlJoin(...args) {\n  return args\n    .join(\"/\")\n    .replace(/[\\/]+/g, \"/\")\n    .replace(/^(.+):\\//, \"$1://\")\n    .replace(/^file:/, \"file:/\")\n    .replace(/\\/(\\?|&|#[^!])/g, \"$1\")\n    .replace(/\\?/g, \"&\")\n    .replace(\"&\", \"?\");\n}\n\nexport class MessageEmitter {\n  constructor(debug) {\n    this._event_handlers = {};\n    this._once_handlers = {};\n    this._debug = debug;\n  }\n  emit() {\n    throw new Error(\"emit is not implemented\");\n  }\n  on(event, handler) {\n    if (!this._event_handlers[event]) {\n      this._event_handlers[event] = [];\n    }\n    this._event_handlers[event].push(handler);\n  }\n  once(event, handler) {\n    handler.___event_run_once = true;\n    this.on(event, handler);\n  }\n  off(event, handler) {\n    if (!event && !handler) {\n      // remove all events handlers\n      this._event_handlers = {};\n    } else if (event && !handler) {\n      // remove all hanlders for the event\n      if (this._event_handlers[event]) this._event_handlers[event] = [];\n    } else {\n      // remove a specific handler\n      if (this._event_handlers[event]) {\n        const idx = this._event_handlers[event].indexOf(handler);\n        if (idx >= 0) {\n          this._event_handlers[event].splice(idx, 1);\n        }\n      }\n    }\n  }\n  _fire(event, data) {\n    if (this._event_handlers[event]) {\n      var i = this._event_handlers[event].length;\n      while (i--) {\n        const handler = this._event_handlers[event][i];\n        try {\n          handler(data);\n        } catch (e) {\n          console.error(e);\n        } finally {\n          if (handler.___event_run_once) {\n            this._event_handlers[event].splice(i, 1);\n          }\n        }\n      }\n    } else {\n      if (this._debug) {\n        console.warn(\"unhandled event\", event, data);\n      }\n    }\n  }\n}\n","/**\n * Contains the RPC object used both by the application\n * site, and by each plugin\n */\nimport { randId, typedArrayToDtype, MessageEmitter } from \"./utils.js\";\n\nexport const API_VERSION = \"0.2.1\";\n\nconst ArrayBufferView = Object.getPrototypeOf(\n  Object.getPrototypeOf(new Uint8Array())\n).constructor;\n\nfunction _appendBuffer(buffer1, buffer2) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\nfunction getKeyByValue(object, value) {\n  return Object.keys(object).find(key => object[key] === value);\n}\n/**\n * RPC object represents a single site in the\n * communication protocol between the application and the plugin\n *\n * @param {Object} connection a special object allowing to send\n * and receive messages from the opposite site (basically it\n * should only provide send() and onMessage() methods)\n */\nexport class RPC extends MessageEmitter {\n  constructor(connection, config) {\n    super(config && config.debug);\n    this._connection = connection;\n    this.config = config || {};\n    this._interface_store = {};\n    this._local_api = null;\n    // make sure there is an execute function\n    const name = this.config.name;\n    this._connection.execute =\n      this._connection.execute ||\n      function() {\n        throw new Error(`connection.execute not implemented (in \"${name}\")`);\n      };\n    this._store = new ReferenceStore();\n    this._method_refs = new ReferenceStore();\n    this._method_refs.onReady(() => {\n      this._fire(\"remoteIdle\");\n    });\n    this._method_refs.onBusy(() => {\n      this._fire(\"remoteBusy\");\n    });\n    this._setupMessageHanlders();\n  }\n\n  init() {\n    this._connection.emit({\n      type: \"initialized\",\n      config: this.config,\n      peer_id: this._connection.peer_id\n    });\n  }\n  /**\n   * Set a handler to be called when received a responce from the\n   * remote site reporting that the previously provided interface\n   * has been successfully set as remote for that site\n   *\n   * @param {Function} handler\n   */\n\n  getRemoteCallStack() {\n    return this._method_refs.getStack();\n  }\n\n  /**\n   * @returns {Object} set of remote interface methods\n   */\n  getRemote() {\n    return this._interface_store[\"_rremote\"];\n  }\n\n  /**\n   * Sets the interface of this site making it available to the\n   * remote site by sending a message with a set of methods names\n   *\n   * @param {Object} _interface to set\n   */\n  setInterface(_interface) {\n    if (this.config.forwarding_functions) {\n      for (let func_name of this.config.forwarding_functions) {\n        const _remote = this._interface_store[\"_rremote\"];\n        if (_remote[func_name]) {\n          if (_interface.constructor === Object) {\n            if (!_interface[func_name]) {\n              _interface[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          } else if (_interface.constructor.constructor === Function) {\n            if (!_interface.constructor.prototype[func_name]) {\n              _interface.constructor.prototype[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          }\n        }\n      }\n    }\n    this._local_api = _interface;\n    this._fire(\"interfaceAvailable\");\n  }\n\n  /**\n   * Sends the actual interface to the remote site upon it was\n   * updated or by a special request of the remote site\n   */\n  sendInterface() {\n    if (!this._local_api) {\n      throw new Error(\"interface is not set.\");\n    }\n    this._local_api._rid = \"_rlocal\";\n    const api = this._encode(this._local_api, true);\n    this._connection.emit({ type: \"setInterface\", api: api });\n  }\n\n  /**\n   * Handles a message from the remote site\n   */\n  // var callback_reg = new RegExp(\"onupdate|run$\")\n  _setupMessageHanlders() {\n    this._connection.on(\"init\", this.init);\n    this._connection.on(\"execute\", data => {\n      Promise.resolve(this._connection.execute(data.code))\n        .then(() => {\n          this._connection.emit({ type: \"executed\" });\n        })\n        .catch(e => {\n          console.error(e);\n          this._connection.emit({\n            type: \"executed\",\n            error: e\n          });\n        });\n    });\n\n    this._connection.on(\"method\", data => {\n      let resolve, reject, method, args, result;\n      let _interface = this._interface_store[data.pid];\n      const _method_context = _interface.__this__ || _interface;\n      if (!_interface) {\n        if (data.promise) {\n          [resolve, reject] = this._unwrap(data.promise, false);\n          reject(\n            `plugin api function is not avaialbe in \"${data.pid}\", the plugin maybe terminated.`\n          );\n        } else {\n          console.error(\n            `plugin api function is not avaialbe in ${data.pid}, the plugin maybe terminated.`\n          );\n        }\n        return;\n      }\n\n      method = _interface[data.name];\n      args = this._unwrap(data.args, true);\n      if (data.promise) {\n        [resolve, reject] = this._unwrap(data.promise, false);\n        try {\n          result = method.apply(_method_context, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } catch (e) {\n          console.error(this.config.name, e, method);\n          reject(e);\n        }\n      } else {\n        try {\n          method.apply(_method_context, args);\n        } catch (e) {\n          console.error(this.config.name, e, method, args);\n        }\n      }\n    });\n\n    this._connection.on(\"callback\", data => {\n      let resolve, reject, method, args, result;\n      if (data.promise) {\n        [resolve, reject] = this._unwrap(data.promise, false);\n        try {\n          method = this._store.fetch(data._rindex);\n          args = this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          result = method.apply(null, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } catch (e) {\n          console.error(this.config.name, e, method);\n          reject(e);\n        }\n      } else {\n        try {\n          method = this._store.fetch(data._rindex);\n          args = this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Please notice that callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          method.apply(null, args);\n        } catch (e) {\n          console.error(this.config.name, e, method, args);\n        }\n      }\n    });\n    this._connection.on(\"setInterface\", data => {\n      this._setRemoteInterface(data.api);\n    });\n    this._connection.on(\"getInterface\", () => {\n      this._fire(\"getInterface\");\n      if (this._local_api) {\n        this.sendInterface();\n      } else {\n        this.once(\"interfaceAvailable\", () => {\n          this.sendInterface();\n        });\n      }\n    });\n    this._connection.on(\"interfaceSetAsRemote\", () => {\n      this._fire(\"interfaceSetAsRemote\");\n    });\n    this._connection.on(\"disconnect\", () => {\n      this._fire(\"beforeDisconnect\");\n      this._connection.disconnect();\n      this._fire(\"disconnected\");\n    });\n  }\n\n  /**\n   * Sends a requests to the remote site asking it to provide its\n   * current interface\n   */\n  requestRemote() {\n    this._connection.emit({ type: \"getInterface\" });\n  }\n\n  _ndarray(typedArray, shape, dtype) {\n    var _dtype = typedArrayToDtype[typedArray.constructor.name];\n    if (dtype && dtype !== _dtype) {\n      throw \"dtype doesn't match the type of the array: \" +\n        _dtype +\n        \" != \" +\n        dtype;\n    }\n    shape = shape || [typedArray.length];\n    return {\n      _rtype: \"ndarray\",\n      _rvalue: typedArray,\n      _rshape: shape,\n      _rdtype: _dtype\n    };\n  }\n\n  /**\n   * Sets the new remote interface provided by the other site\n   *\n   * @param {Array} names list of function names\n   */\n  _setRemoteInterface(api) {\n    this._interface_store[\"_rremote\"] = this._decode(api);\n    this._fire(\"remoteReady\");\n    this._reportRemoteSet();\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * method. When the generated function is called, it will send the\n   * corresponding message to the remote site asking it to execute\n   * the particular method of its interface\n   *\n   * @param {String} name of the remote method\n   *\n   * @returns {Function} wrapped remote method\n   */\n  _genRemoteMethod(name, interface_id) {\n    var me = this;\n    var remoteMethod = function() {\n      return new Promise((resolve, reject) => {\n        let id = null;\n        try {\n          id = me._method_refs.put(\n            interface_id ? interface_id + \"/\" + name : name\n          );\n          var wrapped_resolve = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return resolve.apply(this, arguments);\n          };\n          var wrapped_reject = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return reject.apply(this, arguments);\n          };\n\n          wrapped_resolve.__jailed_pairs__ = wrapped_reject;\n          wrapped_reject.__jailed_pairs__ = wrapped_resolve;\n\n          var args = Array.prototype.slice.call(arguments);\n          if (name === \"register\" || name === \"export\" || name === \"on\") {\n            args = me._wrap(args, true);\n          } else {\n            args = me._wrap(args);\n          }\n          var transferables = args.args.__transferables__;\n          if (transferables) delete args.args.__transferables__;\n          me._connection.emit(\n            {\n              type: \"method\",\n              name: name,\n              pid: interface_id,\n              args: args,\n              promise: me._wrap([wrapped_resolve, wrapped_reject])\n            },\n            transferables\n          );\n        } catch (e) {\n          if (id) me._method_refs.fetch(id);\n          reject(\n            `Failed to exectue remote method (interface: ${interface_id ||\n              me.id}, method: ${name}), error: ${e}`\n          );\n        }\n      });\n    };\n    remoteMethod.__remote_method = true;\n    return remoteMethod;\n  }\n\n  /**\n   * Sends a responce reporting that interface just provided by the\n   * remote site was successfully set by this site as remote\n   */\n  _reportRemoteSet() {\n    this._connection.emit({ type: \"interfaceSetAsRemote\" });\n  }\n\n  /**\n   * Prepares the provided set of remote method arguments for\n   * sending to the remote site, replaces all the callbacks with\n   * identifiers\n   *\n   * @param {Array} args to wrap\n   *\n   * @returns {Array} wrapped arguments\n   */\n\n  _encodeInterface(aObject) {\n    let v, k, keys;\n    const encoded_interface = {};\n    aObject[\"_rid\"] = aObject[\"_rid\"] || randId();\n    // an object/array\n    if (aObject.constructor === Object || Array.isArray(aObject)) {\n      keys = Object.keys(aObject);\n    }\n    // a class\n    else if (aObject.constructor === Function) {\n      throw new Error(\"Please instantiate the class before exportting it.\");\n    }\n    // instance of a class\n    else if (aObject.constructor.constructor === Function) {\n      keys = Object.getOwnPropertyNames(Object.getPrototypeOf(aObject)).concat(\n        Object.keys(aObject)\n      );\n    } else {\n      throw Error(\"Unsupported interface type\");\n    }\n\n    const bObject = Array.isArray(aObject) ? [] : {};\n\n    for (k of keys) {\n      if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n\n      if (k.startsWith(\"_\")) {\n        continue;\n      }\n      v = aObject[k];\n\n      if (typeof v === \"function\") {\n        bObject[k] = {\n          _rtype: \"interface\",\n          _rid: aObject[\"_rid\"],\n          _rvalue: k\n        };\n        encoded_interface[k] = v;\n      } else if (Object(v) !== v) {\n        bObject[k] = { _rtype: \"argument\", _rvalue: v };\n        encoded_interface[k] = v;\n      } else if (typeof v === \"object\") {\n        bObject[k] = this._encodeInterface(v);\n      }\n    }\n    this._interface_store[aObject[\"_rid\"]] = encoded_interface;\n\n    // remove interface when closed\n    if (aObject.on && typeof aObject.on === \"function\") {\n      aObject.on(\"close\", () => {\n        delete this._interface_store[aObject[\"_rid\"]];\n      });\n    }\n    return bObject;\n  }\n\n  _encode(aObject, as_interface) {\n    const transferables = [];\n    if (!aObject) {\n      return aObject;\n    }\n    const _transfer = aObject._transfer;\n    let bObject, v, k;\n    const isarray = Array.isArray(aObject);\n    //skip if already encoded\n    if (typeof aObject === \"object\" && aObject._rtype && aObject._rvalue) {\n      return aObject;\n    }\n\n    //encode interfaces\n    if (\n      typeof aObject === \"object\" &&\n      !Array.isArray(aObject) &&\n      (aObject._rintf || as_interface)\n    ) {\n      return this._encodeInterface(aObject);\n    }\n\n    if (as_interface) {\n      aObject[\"_rid\"] = aObject[\"_rid\"] || randId();\n      this._interface_store[aObject[\"_rid\"]] =\n        this._interface_store[aObject[\"_rid\"]] || (isarray ? [] : {});\n    }\n\n    bObject = isarray ? [] : {};\n    for (k in aObject) {\n      if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n      if (isarray || aObject.hasOwnProperty(k)) {\n        v = aObject[k];\n        if (v && typeof this._local_api._rpc_encode === \"function\") {\n          const encoded_obj = this._local_api._rpc_encode(v);\n          if (encoded_obj && encoded_obj._ctype) {\n            bObject[k] = {\n              _rtype: \"custom\",\n              _rvalue: encoded_obj,\n              _rid: aObject[\"_rid\"]\n            };\n            continue;\n          }\n          // if the returned object does not contain _rtype, assuming the object has been transformed\n          else if (encoded_obj !== undefined) {\n            v = encoded_obj;\n          }\n        }\n        if (typeof v === \"function\") {\n          if (as_interface) {\n            const encoded_interface = this._interface_store[aObject[\"_rid\"]];\n            bObject[k] = {\n              _rtype: \"interface\",\n              _rid: aObject[\"_rid\"],\n              _rvalue: k\n            };\n            encoded_interface[k] = v;\n            continue;\n          }\n          let interfaceFuncName = null;\n          for (var name in this._local_api) {\n            if (this._local_api.hasOwnProperty(name)) {\n              if (name.startsWith(\"_\")) continue;\n              if (this._local_api[name] === v) {\n                interfaceFuncName = name;\n                break;\n              }\n            }\n          }\n          // search for prototypes\n          var functions = Object.getOwnPropertyNames(\n            Object.getPrototypeOf(this._local_api)\n          );\n          for (var i = 0; i < functions.length; i++) {\n            var name_ = functions[i];\n            if (name_.startsWith(\"_\")) continue;\n            if (this._local_api[name_] === v) {\n              interfaceFuncName = name_;\n              break;\n            }\n          }\n          if (!interfaceFuncName) {\n            var id = this._store.put(v);\n            bObject[k] = {\n              _rtype: \"callback\",\n              _rvalue: (v.constructor && v.constructor.name) || id,\n              _rindex: id\n            };\n          } else {\n            bObject[k] = {\n              _rtype: \"interface\",\n              _rvalue: interfaceFuncName,\n              _rid: \"_rlocal\"\n            };\n          }\n        } else if (\n          /*global tf*/\n          typeof tf !== \"undefined\" &&\n          tf.Tensor &&\n          v instanceof tf.Tensor\n        ) {\n          const v_buffer = v.dataSync();\n          if (v._transfer || _transfer) {\n            transferables.push(v_buffer.buffer);\n            delete v._transfer;\n          }\n          bObject[k] = {\n            _rtype: \"ndarray\",\n            _rvalue: v_buffer,\n            _rshape: v.shape,\n            _rdtype: v.dtype\n          };\n        } else if (\n          /*global nj*/\n          typeof nj !== \"undefined\" &&\n          nj.NdArray &&\n          v instanceof nj.NdArray\n        ) {\n          var dtype = typedArrayToDtype[v.selection.data.constructor.name];\n          if (v._transfer || _transfer) {\n            transferables.push(v.selection.data.buffer);\n            delete v._transfer;\n          }\n          bObject[k] = {\n            _rtype: \"ndarray\",\n            _rvalue: v.selection.data,\n            _rshape: v.shape,\n            _rdtype: dtype\n          };\n        } else if (v instanceof Error) {\n          console.error(v);\n          bObject[k] = { _rtype: \"error\", _rvalue: v.toString() };\n        } else if (typeof File !== \"undefined\" && v instanceof File) {\n          bObject[k] = {\n            _rtype: \"file\",\n            _rvalue: v,\n            _rrelative_path: v.relativePath || v.webkitRelativePath\n          };\n        }\n        // send objects supported by structure clone algorithm\n        // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n        else if (\n          v !== Object(v) ||\n          v instanceof Boolean ||\n          v instanceof String ||\n          v instanceof Date ||\n          v instanceof RegExp ||\n          v instanceof Blob ||\n          v instanceof ImageData ||\n          (typeof FileList !== \"undefined\" && v instanceof FileList)\n        ) {\n          bObject[k] = { _rtype: \"argument\", _rvalue: v };\n        } else if (v instanceof ArrayBuffer) {\n          if (v._transfer || _transfer) {\n            transferables.push(v);\n            delete v._transfer;\n          }\n          bObject[k] = { _rtype: \"argument\", _rvalue: v };\n        } else if (v instanceof ArrayBufferView) {\n          if (v._transfer || _transfer) {\n            transferables.push(v.buffer);\n            delete v._transfer;\n          }\n          bObject[k] = { _rtype: \"argument\", _rvalue: v };\n        }\n        // TODO: support also Map and Set\n        // TODO: avoid object such as DynamicPlugin instance.\n        else if (v._rintf) {\n          bObject[k] = this._encode(v, true);\n        } else if (typeof v === \"object\") {\n          bObject[k] = this._encode(v, as_interface);\n          // move transferables to the top level object\n          if (bObject[k].__transferables__) {\n            for (var t = 0; t < bObject[k].__transferables__.length; t++) {\n              transferables.push(bObject[k].__transferables__[t]);\n            }\n            delete bObject[k].__transferables__;\n          }\n        } else {\n          throw \"imjoy-rpc: Unsupported data type \" + k + \",\" + v;\n        }\n      }\n    }\n    if (transferables.length > 0) {\n      bObject.__transferables__ = transferables;\n    }\n    return bObject;\n  }\n\n  _decode(aObject, callbackId, withPromise) {\n    if (!aObject) {\n      return aObject;\n    }\n    var bObject, v, k;\n    if (aObject.hasOwnProperty(\"_rtype\") && aObject.hasOwnProperty(\"_rvalue\")) {\n      if (aObject._rtype === \"custom\") {\n        if (\n          aObject._rvalue &&\n          typeof this._local_api._rpc_decode === \"function\"\n        ) {\n          bObject = this._local_api._rpc_decode(aObject._rvalue);\n          if (bObject === undefined) {\n            bObject = aObject;\n          }\n        } else {\n          bObject = aObject;\n        }\n      } else if (aObject._rtype === \"callback\") {\n        bObject = this._genRemoteCallback(\n          callbackId,\n          aObject._rindex,\n          withPromise\n        );\n      } else if (aObject._rtype === \"interface\") {\n        const intfid = aObject._rid === \"_rlocal\" ? \"_rrmote\" : aObject._rid;\n        bObject =\n          (this._interface_store[intfid] &&\n            this._interface_store[intfid][aObject._rvalue]) ||\n          this._genRemoteMethod(aObject._rvalue, aObject._rid);\n      } else if (aObject._rtype === \"ndarray\") {\n        /*global nj tf*/\n        //create build array/tensor if used in the plugin\n        if (typeof nj !== \"undefined\" && nj.array) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          bObject = nj\n            .array(aObject._rvalue, aObject._rdtype)\n            .reshape(aObject._rshape);\n        } else if (typeof tf !== \"undefined\" && tf.Tensor) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          bObject = tf.tensor(\n            aObject._rvalue,\n            aObject._rshape,\n            aObject._rdtype\n          );\n        } else {\n          //keep it as regular if transfered to the main app\n          bObject = aObject;\n        }\n      } else if (aObject._rtype === \"error\") {\n        bObject = new Error(aObject._rvalue);\n      } else if (aObject._rtype === \"file\") {\n        bObject = aObject._rvalue;\n        //patch relativePath\n        bObject.relativePath = aObject._rrelative_path;\n      } else if (aObject._rtype === \"argument\") {\n        bObject = aObject._rvalue;\n      }\n      return bObject;\n    } else {\n      var isarray = Array.isArray(aObject);\n      bObject = isarray ? [] : {};\n      for (k in aObject) {\n        if (isarray || aObject.hasOwnProperty(k)) {\n          v = aObject[k];\n          if (typeof v === \"object\" || Array.isArray(v)) {\n            bObject[k] = this._decode(v, callbackId, withPromise);\n          }\n        }\n      }\n      return bObject;\n    }\n  }\n\n  _wrap(args, as_interface) {\n    var wrapped = this._encode(args, as_interface);\n    var result = { args: wrapped };\n    return result;\n  }\n\n  /**\n   * Unwraps the set of arguments delivered from the remote site,\n   * replaces all callback identifiers with a function which will\n   * initiate sending that callback identifier back to other site\n   *\n   * @param {Object} args to unwrap\n   *\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Array} unwrapped args\n   */\n  _unwrap(args, withPromise) {\n    // var called = false;\n\n    // wraps each callback so that the only one could be called\n    // var once(cb) {\n    //     return function() {\n    //         if (!called) {\n    //             called = true;\n    //             return cb.apply(this, arguments);\n    //         } else {\n    //             var msg =\n    //               'A callback from this set has already been executed';\n    //             throw new Error(msg);\n    //         }\n    //     };\n    // }\n    var result = this._decode(args.args, args.callbackId, withPromise);\n    return result;\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * callback. When the generated function is called, it will send\n   * the corresponding message to the remote site asking it to\n   * execute the particular callback previously saved during a call\n   * by the remote site a method from the interface of this site\n   *\n   * @param {Number} id of the remote callback to execute\n   * @param {Number} argNum argument index of the callback\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Function} wrapped remote callback\n   */\n  _genRemoteCallback(id, argNum, withPromise) {\n    var me = this;\n    var remoteCallback;\n    if (withPromise) {\n      remoteCallback = function() {\n        return new Promise((resolve, reject) => {\n          var args = me._wrap(Array.prototype.slice.call(arguments));\n          var transferables = args.args.__transferables__;\n          if (transferables) delete args.args.__transferables__;\n          resolve.__jailed_pairs__ = reject;\n          reject.__jailed_pairs__ = resolve;\n          try {\n            me._connection.emit(\n              {\n                type: \"callback\",\n                id: id,\n                _rindex: argNum,\n                args: args,\n                // pid :  me.id,\n                promise: me._wrap([resolve, reject])\n              },\n              transferables\n            );\n          } catch (e) {\n            reject(\n              `Failed to exectue remote callback (id: ${id}, argNum: ${argNum}).`\n            );\n          }\n        });\n      };\n      return remoteCallback;\n    } else {\n      remoteCallback = function() {\n        var args = me._wrap(Array.prototype.slice.call(arguments));\n        var transferables = args.args.__transferables__;\n        if (transferables) delete args.args.__transferables__;\n        return me._connection.emit(\n          {\n            type: \"callback\",\n            id: id,\n            _rindex: argNum,\n            args: args\n            // pid :  me.id\n          },\n          transferables\n        );\n      };\n      return remoteCallback;\n    }\n  }\n\n  /**\n   * Sends the notification message and breaks the connection\n   */\n  disconnect() {\n    this._connection.emit({ type: \"disconnect\" });\n    setTimeout(() => {\n      this._connection.disconnect();\n    }, 2000);\n  }\n}\n\n/**\n * ReferenceStore is a special object which stores other objects\n * and provides the references (number) instead. This reference\n * may then be sent over a json-based communication channel (IPC\n * to another Node.js process or a message to the Worker). Other\n * site may then provide the reference in the responce message\n * implying the given object should be activated.\n *\n * Primary usage for the ReferenceStore is a storage for the\n * callbacks, which therefore makes it possible to initiate a\n * callback execution by the opposite site (which normally cannot\n * directly execute functions over the communication channel).\n *\n * Each stored object can only be fetched once and is not\n * available for the second time. Each stored object must be\n * fetched, since otherwise it will remain stored forever and\n * consume memory.\n *\n * Stored object indeces are simply the numbers, which are however\n * released along with the objects, and are later reused again (in\n * order to postpone the overflow, which should not likely happen,\n * but anyway).\n */\nclass ReferenceStore {\n  constructor() {\n    this._store = {}; // stored object\n    this._indices = [0]; // smallest available indices\n    this._readyHandler = function() {};\n    this._busyHandler = function() {};\n    this._readyHandler();\n  }\n\n  /**\n   * call handler when the store is empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onReady(readyHandler) {\n    this._readyHandler = readyHandler || function() {};\n  }\n\n  /**\n   * call handler when the store is not empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onBusy(busyHandler) {\n    this._busyHandler = busyHandler || function() {};\n  }\n\n  /**\n   * get the length of the store\n   *\n   */\n  getStack() {\n    return Object.keys(this._store).length;\n  }\n\n  /**\n   * @function _genId() generates the new reference id\n   *\n   * @returns {Number} smallest available id and reserves it\n   */\n  _genId() {\n    var id;\n    if (this._indices.length === 1) {\n      id = this._indices[0]++;\n    } else {\n      id = this._indices.shift();\n    }\n\n    return id;\n  }\n\n  /**\n   * Releases the given reference id so that it will be available by\n   * another object stored\n   *\n   * @param {Number} id to release\n   */\n  _releaseId(id) {\n    for (var i = 0; i < this._indices.length; i++) {\n      if (id < this._indices[i]) {\n        this._indices.splice(i, 0, id);\n        break;\n      }\n    }\n\n    // cleaning-up the sequence tail\n    for (i = this._indices.length - 1; i >= 0; i--) {\n      if (this._indices[i] - 1 === this._indices[i - 1]) {\n        this._indices.pop();\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Stores the given object and returns the refernce id instead\n   *\n   * @param {Object} obj to store\n   *\n   * @returns {Number} reference id of the stored object\n   */\n  put(obj) {\n    if (this._busyHandler && Object.keys(this._store).length === 0) {\n      this._busyHandler();\n    }\n    var id = this._genId();\n    this._store[id] = obj;\n    return id;\n  }\n\n  /**\n   * Retrieves previously stored object and releases its reference\n   *\n   * @param {Number} id of an object to retrieve\n   */\n  fetch(id) {\n    var obj = this._store[id];\n    if (obj && !obj.__remote_method) {\n      delete this._store[id];\n      this._releaseId(id);\n      if (this._readyHandler && Object.keys(this._store).length === 0) {\n        this._readyHandler();\n      }\n    }\n    if (obj && obj.__jailed_pairs__) {\n      const _id = getKeyByValue(this._store, obj.__jailed_pairs__);\n      this.fetch(_id);\n    }\n    return obj;\n  }\n}\n","/**\n * Core plugin script loaded into the plugin process/thread.\n *\n * Initializes the plugin-site API global methods.\n */\nimport { RPC } from \"./rpc.js\";\n\nexport function connectRPC(connection, config) {\n  config = config || {};\n\n  const rpc = new RPC(connection, config);\n  rpc.on(\"getInterface\", function() {\n    launchConnected();\n  });\n\n  rpc.on(\"remoteReady\", function() {\n    const api = rpc.getRemote() || {};\n    if (api.export) {\n      throw new Error(\"`export` is a reserved function name\");\n    }\n    if (api.onload) {\n      throw new Error(\"`onload` is a reserved function name\");\n    }\n    if (api.dispose) {\n      throw new Error(\"`dispose` is a reserved function name\");\n    }\n    api.export = function(_interface) {\n      rpc.setInterface(_interface);\n    };\n    api.onLoad = function(handler) {\n      handler = checkHandler(handler);\n      if (connected) {\n        handler();\n      } else {\n        connectedHandlers.push(handler);\n      }\n    };\n    api.dispose = function(_interface) {\n      rpc.disconnect();\n    };\n\n    if (\n      typeof WorkerGlobalScope !== \"undefined\" &&\n      self instanceof WorkerGlobalScope\n    ) {\n      self.api = api;\n      self.postMessage({\n        type: \"imjoy_remote_api_ready\"\n      });\n    } else if (typeof window) {\n      window.dispatchEvent(\n        new CustomEvent(\"imjoy_remote_api_ready\", { detail: api })\n      );\n    }\n  });\n\n  let connected = false;\n  const connectedHandlers = [];\n\n  const launchConnected = function() {\n    if (!connected) {\n      connected = true;\n\n      let handler;\n      while ((handler = connectedHandlers.pop())) {\n        handler();\n      }\n    }\n  };\n\n  const checkHandler = function(handler) {\n    const type = typeof handler;\n    if (type !== \"function\") {\n      const msg =\n        \"A function may only be subsribed to the event, \" +\n        type +\n        \" was provided instead\";\n      throw new Error(msg);\n    }\n    return handler;\n  };\n\n  return rpc;\n}\n","/**\n * Contains the routines loaded by the plugin Worker under web-browser.\n *\n * Initializes the web environment version of the platform-dependent\n * connection object for the plugin site\n */\nimport { connectRPC } from \"./pluginCore.js\";\nimport { API_VERSION } from \"./rpc.js\";\nimport { MessageEmitter, randId } from \"./utils.js\";\n\n(function() {\n  // make sure this runs inside a webworker\n  if (\n    typeof WorkerGlobalScope === \"undefined\" ||\n    !self ||\n    !(self instanceof WorkerGlobalScope)\n  ) {\n    throw new Error(\"This script can only loaded in a webworker\");\n  }\n  /**\n   * Connection object provided to the RPC constructor,\n   * plugin site implementation for the web-based environment.\n   * Global will be then cleared to prevent exposure into the\n   * Worker, so we put this local connection object into a closure\n   */\n  class Connection extends MessageEmitter {\n    constructor(config) {\n      super(config && config.debug);\n      this.config = config || {};\n    }\n    connect() {\n      self.addEventListener(\"message\", e => {\n        this._fire(e.data.type, e.data);\n      });\n      this.emit({\n        type: \"initialized\",\n        config: this.config\n      });\n    }\n    disconnect() {\n      this._fire(\"beforeDisconnect\");\n      self.close();\n      this._fire(\"disconnected\");\n    }\n    emit(data) {\n      let transferables = undefined;\n      if (data.__transferables__) {\n        transferables = data.__transferables__;\n        delete data.__transferables__;\n      }\n      self.postMessage(data, transferables);\n    }\n    async execute(code) {\n      if (code.type === \"requirements\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (!Array.isArray(code.requirements)) {\n                code.requirements = [code.requirements];\n              }\n              for (var i = 0; i < code.requirements.length; i++) {\n                if (\n                  code.requirements[i].toLowerCase().endsWith(\".css\") ||\n                  code.requirements[i].startsWith(\"css:\")\n                ) {\n                  throw \"unable to import css in a webworker\";\n                } else if (\n                  code.requirements[i].toLowerCase().endsWith(\".js\") ||\n                  code.requirements[i].startsWith(\"js:\")\n                ) {\n                  if (code.requirements[i].startsWith(\"js:\")) {\n                    code.requirements[i] = code.requirements[i].slice(3);\n                  }\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"http\")) {\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"cache:\")) {\n                  //ignore cache\n                } else {\n                  console.log(\n                    \"Unprocessed requirements url: \" + code.requirements[i]\n                  );\n                }\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n        } catch (e) {\n          throw e;\n        }\n      } else if (code.type === \"script\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (Array.isArray(code.requirements)) {\n                for (let i = 0; i < code.requirements.length; i++) {\n                  importScripts(code.requirements[i]);\n                }\n              } else {\n                importScripts(code.requirements);\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n          eval(code.content);\n        } catch (e) {\n          console.error(e.message, e.stack);\n          throw e;\n        }\n      } else {\n        throw \"unsupported code type.\";\n      }\n      if (code.type === \"requirements\") {\n        self.postMessage({\n          type: \"cacheRequirements\",\n          requirements: code.requirements\n        });\n      }\n    }\n  }\n  const config = {\n    type: \"web-worker\",\n    dedicated_thread: true,\n    allow_execution: true,\n    lang: \"javascript\",\n    api_version: API_VERSION\n  };\n  const conn = new Connection(config);\n  conn.on(\"connectRPC\", data => {\n    connectRPC(conn, Object.assign(data.config, config));\n  });\n  conn.connect();\n  self.postMessage({\n    type: \"worker-ready\"\n  });\n})();\n"],"sourceRoot":""}