{"version":3,"sources":["webpack://imjoyRPC/webpack/bootstrap","webpack://imjoyRPC/./src/utils.js","webpack://imjoyRPC/./src/rpc.js","webpack://imjoyRPC/./src/pluginCore.js","webpack://imjoyRPC/./src/plugin.webworker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","randId","Math","random","toString","substr","Date","getTime","dtypeToTypedArray","int8","int16","int32","uint8","uint16","uint32","float32","float64","array","typedArrayToDtype","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Array","MessageEmitter","constructor","debug","this","_event_handlers","_once_handlers","_debug","emit","Error","on","event","handler","push","once","___event_run_once","off","idx","indexOf","splice","_fire","data","length","e","console","error","warn","API_VERSION","ArrayBufferView","getPrototypeOf","_appendBuffer","buffer1","buffer2","tmp","byteLength","set","buffer","getKeyByValue","keys","find","indexObject","obj","is","split","slice","RPC","connection","config","codecs","super","_connection","_codecs","_object_store","_method_weakmap","WeakMap","_object_weakmap","_local_api","execute","_store","ReferenceStore","_method_refs","onReady","onBusy","_setupMessageHanlders","init","type","peer_id","getRemoteCallStack","getStack","getRemote","_remote_interface","setInterface","_interface","description","forwarding_functions","func_name","_remote","args","Function","sendInterface","_rintf","_encode","then","api","_disposeObject","object_id","disposeObject","Promise","resolve","reject","has","code","catch","String","async","method","result","promise","_unwrap","apply","err","fetch","id","_setRemoteInterface","disconnect","requestRemote","_ndarray","typedArray","shape","dtype","_dtype","_rtype","_rvalue","_rshape","_rdtype","_decode","intf","_reportRemoteSet","_genRemoteMethod","me","remoteMethod","put","wrapped_resolve","arguments","wrapped_reject","__jailed_pairs__","transferables","_wrap","__transferables__","__remote_method","aObject","as_interface","a_type","ArrayBuffer","bObject","cid","_rname","_transfer","isarray","isArray","tp","codec","encoder","encodedObj","tf","Tensor","v_buffer","dataSync","nj","NdArray","selection","File","_rpath","_path","webkitRelativePath","Boolean","RegExp","ImageData","FileList","_rmime","Blob","DataView","Set","from","Map","getOwnPropertyNames","concat","k","startsWith","includes","withPromise","v","decoder","_genRemoteCallback","reduce","Uint8","reshape","arraytype","eval","tensor","setTimeout","_indices","_readyHandler","_busyHandler","readyHandler","busyHandler","_genId","shift","_releaseId","pop","_id","connectRPC","rpc","launchConnected","export","onload","dispose","registerCodec","onLoad","checkHandler","connected","connectedHandlers","WorkerGlobalScope","self","postMessage","window","dispatchEvent","CustomEvent","detail","Connection","addEventListener","close","undefined","requirements","toLowerCase","endsWith","importScripts","log","content","message","stack","dedicated_thread","allow_execution","lang","api_version","conn","assign","connect"],"mappings":"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","file":"plugin.webworker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export function randId() {\n  return (\n    Math.random()\n      .toString(36)\n      .substr(2, 10) + new Date().getTime()\n  );\n}\n\nexport const dtypeToTypedArray = {\n  int8: \"Int8Array\",\n  int16: \"Int16Array\",\n  int32: \"Int32Array\",\n  uint8: \"Uint8Array\",\n  uint16: \"Uint16Array\",\n  uint32: \"Uint32Array\",\n  float32: \"Float32Array\",\n  float64: \"Float64Array\",\n  array: \"Array\"\n};\nexport const typedArrayToDtype = {\n  Int8Array: \"int8\",\n  Int16Array: \"int16\",\n  Int32Array: \"int32\",\n  Uint8Array: \"uint8\",\n  Uint16Array: \"uint16\",\n  Uint32Array: \"uint32\",\n  Float32Array: \"float32\",\n  Float64Array: \"float64\",\n  Array: \"array\"\n};\n\nfunction cacheUrlInServiceWorker(url) {\n  return new Promise(function(resolve, reject) {\n    const message = {\n      command: \"add\",\n      url: url\n    };\n    if (!navigator.serviceWorker || !navigator.serviceWorker.register) {\n      reject(\"Service worker is not supported.\");\n      return;\n    }\n    const messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = function(event) {\n      if (event.data && event.data.error) {\n        reject(event.data.error);\n      } else {\n        resolve(event.data && event.data.result);\n      }\n    };\n\n    if (navigator.serviceWorker && navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(message, [\n        messageChannel.port2\n      ]);\n    } else {\n      reject(\"Service worker controller is not available\");\n    }\n  });\n}\n\nexport async function cacheRequirements(requirements) {\n  if (!Array.isArray(requirements)) {\n    requirementsm.code.requirements = [requirements];\n  }\n  if (requirements && requirements.length > 0) {\n    for (let req of requirements) {\n      //remove prefix\n      if (req.startsWith(\"js:\")) req = req.slice(3);\n      if (req.startsWith(\"css:\")) req = req.slice(4);\n      if (req.startsWith(\"cache:\")) req = req.slice(6);\n      if (!req.startsWith(\"http\")) continue;\n\n      await cacheUrlInServiceWorker(req).catch(e => {\n        console.error(e);\n      });\n    }\n  }\n}\n\nexport function setupServiceWorker(baseUrl, targetOrigin, cacheCallback) {\n  // register service worker for offline access\n  if (\"serviceWorker\" in navigator) {\n    baseUrl = baseUrl || \"/\";\n    navigator.serviceWorker.register(baseUrl + \"plugin-service-worker.js\").then(\n      function(registration) {\n        // Registration was successful\n        console.log(\n          \"ServiceWorker registration successful with scope: \",\n          registration.scope\n        );\n      },\n      function(err) {\n        // registration failed :(\n        console.log(\"ServiceWorker registration failed: \", err);\n      }\n    );\n    targetOrigin = targetOrigin || \"*\";\n    cacheCallback = cacheCallback || cacheRequirements;\n    if (cacheCallback && typeof cacheCallback !== \"function\") {\n      throw new Error(\"config.cache_requirements must be a function\");\n    }\n    window.addEventListener(\"message\", function(e) {\n      if (targetOrigin === \"*\" || e.origin === targetOrigin) {\n        const m = e.data;\n        if (m.type === \"cacheRequirements\") {\n          cacheCallback(m.requirements);\n        }\n      }\n    });\n  }\n}\n\n//#Source https://bit.ly/2neWfJ2\nexport function urlJoin(...args) {\n  return args\n    .join(\"/\")\n    .replace(/[\\/]+/g, \"/\")\n    .replace(/^(.+):\\//, \"$1://\")\n    .replace(/^file:/, \"file:/\")\n    .replace(/\\/(\\?|&|#[^!])/g, \"$1\")\n    .replace(/\\?/g, \"&\")\n    .replace(\"&\", \"?\");\n}\n\nexport class MessageEmitter {\n  constructor(debug) {\n    this._event_handlers = {};\n    this._once_handlers = {};\n    this._debug = debug;\n  }\n  emit() {\n    throw new Error(\"emit is not implemented\");\n  }\n  on(event, handler) {\n    if (!this._event_handlers[event]) {\n      this._event_handlers[event] = [];\n    }\n    this._event_handlers[event].push(handler);\n  }\n  once(event, handler) {\n    handler.___event_run_once = true;\n    this.on(event, handler);\n  }\n  off(event, handler) {\n    if (!event && !handler) {\n      // remove all events handlers\n      this._event_handlers = {};\n    } else if (event && !handler) {\n      // remove all hanlders for the event\n      if (this._event_handlers[event]) this._event_handlers[event] = [];\n    } else {\n      // remove a specific handler\n      if (this._event_handlers[event]) {\n        const idx = this._event_handlers[event].indexOf(handler);\n        if (idx >= 0) {\n          this._event_handlers[event].splice(idx, 1);\n        }\n      }\n    }\n  }\n  _fire(event, data) {\n    if (this._event_handlers[event]) {\n      var i = this._event_handlers[event].length;\n      while (i--) {\n        const handler = this._event_handlers[event][i];\n        try {\n          handler(data);\n        } catch (e) {\n          console.error(e);\n        } finally {\n          if (handler.___event_run_once) {\n            this._event_handlers[event].splice(i, 1);\n          }\n        }\n      }\n    } else {\n      if (this._debug) {\n        console.warn(\"unhandled event\", event, data);\n      }\n    }\n  }\n}\n","/**\n * Contains the RPC object used both by the application\n * site, and by each plugin\n */\nimport {\n  randId,\n  typedArrayToDtype,\n  dtypeToTypedArray,\n  MessageEmitter\n} from \"./utils.js\";\n\nexport const API_VERSION = \"0.2.3\";\n\nconst ArrayBufferView = Object.getPrototypeOf(\n  Object.getPrototypeOf(new Uint8Array())\n).constructor;\n\nfunction _appendBuffer(buffer1, buffer2) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\nfunction getKeyByValue(object, value) {\n  return Object.keys(object).find(key => object[key] === value);\n}\n\nfunction indexObject(obj, is) {\n  if (typeof is == \"string\") return indexObject(obj, is.split(\".\"));\n  else if (is.length == 0) return obj;\n  else return indexObject(obj[is[0]], is.slice(1));\n}\n\n/**\n * RPC object represents a single site in the\n * communication protocol between the application and the plugin\n *\n * @param {Object} connection a special object allowing to send\n * and receive messages from the opposite site (basically it\n * should only provide send() and onMessage() methods)\n */\nexport class RPC extends MessageEmitter {\n  constructor(connection, config, codecs) {\n    super(config && config.debug);\n    this._connection = connection;\n    this.config = config || {};\n    this._codecs = codecs || {};\n    this._object_store = {};\n    this._method_weakmap = new WeakMap();\n    this._object_weakmap = new WeakMap();\n    this._local_api = null;\n    // make sure there is an execute function\n    const name = this.config.name;\n    this._connection.execute =\n      this._connection.execute ||\n      function() {\n        throw new Error(`connection.execute not implemented (in \"${name}\")`);\n      };\n    this._store = new ReferenceStore();\n    this._method_refs = new ReferenceStore();\n    this._method_refs.onReady(() => {\n      this._fire(\"remoteIdle\");\n    });\n    this._method_refs.onBusy(() => {\n      this._fire(\"remoteBusy\");\n    });\n    this._setupMessageHanlders();\n  }\n\n  init() {\n    this._connection.emit({\n      type: \"initialized\",\n      config: this.config,\n      peer_id: this._connection.peer_id\n    });\n  }\n  /**\n   * Set a handler to be called when received a responce from the\n   * remote site reporting that the previously provided interface\n   * has been successfully set as remote for that site\n   *\n   * @param {Function} handler\n   */\n\n  getRemoteCallStack() {\n    return this._method_refs.getStack();\n  }\n\n  /**\n   * @returns {Object} set of remote interface methods\n   */\n  getRemote() {\n    return this._remote_interface;\n  }\n\n  /**\n   * Sets the interface of this site making it available to the\n   * remote site by sending a message with a set of methods names\n   *\n   * @param {Object} _interface to set\n   */\n  setInterface(_interface, config) {\n    config = config || {};\n    this.config.name = config.name || this.config.name;\n    this.config.description = config.description || this.config.description;\n    if (this.config.forwarding_functions) {\n      for (let func_name of this.config.forwarding_functions) {\n        const _remote = this._remote_interface;\n        if (_remote[func_name]) {\n          if (_interface.constructor === Object) {\n            if (!_interface[func_name]) {\n              _interface[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          } else if (_interface.constructor.constructor === Function) {\n            if (!_interface.constructor.prototype[func_name]) {\n              _interface.constructor.prototype[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          }\n        }\n      }\n    }\n    this._local_api = _interface;\n    this._fire(\"interfaceAvailable\");\n  }\n\n  /**\n   * Sends the actual interface to the remote site upon it was\n   * updated or by a special request of the remote site\n   */\n  sendInterface() {\n    if (!this._local_api) {\n      throw new Error(\"interface is not set.\");\n    }\n    this._local_api._rintf = \"_rlocal\";\n    this._encode(this._local_api, true).then(api => {\n      this._connection.emit({ type: \"setInterface\", api: api });\n    });\n  }\n\n  _disposeObject(object_id) {\n    if (this._object_store[object_id]) {\n      delete this._object_store[object_id];\n    } else {\n      throw new Error(`Object (id=${object_id}) not found.`);\n    }\n  }\n\n  disposeObject(obj) {\n    return new Promise((resolve, reject) => {\n      if (this._object_weakmap.has(obj)) {\n        const object_id = this._object_weakmap.get(obj);\n        this._connection.once(\"disposed\", data => {\n          if (data.error) reject(new Error(data.error));\n          else resolve();\n        });\n        this._connection.emit({\n          type: \"disposeObject\",\n          object_id: object_id\n        });\n      } else {\n        throw new Error(\"Invalid object\");\n      }\n    });\n  }\n\n  /**\n   * Handles a message from the remote site\n   */\n  // var callback_reg = new RegExp(\"onupdate|run$\")\n  _setupMessageHanlders() {\n    this._connection.on(\"init\", this.init);\n    this._connection.on(\"execute\", data => {\n      Promise.resolve(this._connection.execute(data.code))\n        .then(() => {\n          this._connection.emit({ type: \"executed\" });\n        })\n        .catch(e => {\n          console.error(e);\n          this._connection.emit({\n            type: \"executed\",\n            error: String(e)\n          });\n        });\n    });\n\n    this._connection.on(\"method\", async data => {\n      let resolve, reject, method, args, result;\n      try {\n        if (data.promise) {\n          [resolve, reject] = await this._unwrap(data.promise, false);\n        }\n        const _interface = this._object_store[data.object_id];\n        method = indexObject(_interface, data.name);\n        args = await this._unwrap(data.args, true);\n        if (data.promise) {\n          result = method.apply(_interface, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } else {\n          method.apply(_interface, args);\n        }\n      } catch (err) {\n        console.error(this.config.name, err);\n        if (reject) {\n          reject(err);\n        }\n      }\n    });\n\n    this._connection.on(\"callback\", async data => {\n      let resolve, reject, method, args, result;\n      try {\n        if (data.promise) {\n          [resolve, reject] = await this._unwrap(data.promise, false);\n        }\n        if (data.promise) {\n          method = this._store.fetch(data.id);\n          args = await this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          result = method.apply(null, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } else {\n          method = this._store.fetch(data.id);\n          args = await this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Please notice that callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          method.apply(null, args);\n        }\n      } catch (err) {\n        console.error(this.config.name, err);\n        if (reject) {\n          reject(err);\n        }\n      }\n    });\n    this._connection.on(\"disposeObject\", data => {\n      try {\n        this._disposeObject(data.object_id);\n        this._connection.emit({\n          type: \"disposed\"\n        });\n      } catch (e) {\n        console.error(e);\n        this._connection.emit({\n          type: \"disposed\",\n          error: String(e)\n        });\n      }\n    });\n    this._connection.on(\"setInterface\", data => {\n      this._setRemoteInterface(data.api);\n    });\n    this._connection.on(\"getInterface\", () => {\n      this._fire(\"getInterface\");\n      if (this._local_api) {\n        this.sendInterface();\n      } else {\n        this.once(\"interfaceAvailable\", () => {\n          this.sendInterface();\n        });\n      }\n    });\n    this._connection.on(\"interfaceSetAsRemote\", () => {\n      this._fire(\"interfaceSetAsRemote\");\n    });\n    this._connection.on(\"disconnect\", () => {\n      this._fire(\"beforeDisconnect\");\n      this._connection.disconnect();\n      this._fire(\"disconnected\");\n    });\n  }\n\n  /**\n   * Sends a requests to the remote site asking it to provide its\n   * current interface\n   */\n  requestRemote() {\n    this._connection.emit({ type: \"getInterface\" });\n  }\n\n  _ndarray(typedArray, shape, dtype) {\n    var _dtype = typedArrayToDtype[typedArray.constructor.name];\n    if (dtype && dtype !== _dtype) {\n      throw \"dtype doesn't match the type of the array: \" +\n        _dtype +\n        \" != \" +\n        dtype;\n    }\n    shape = shape || [typedArray.length];\n    return {\n      _rtype: \"ndarray\",\n      _rvalue: typedArray.buffer,\n      _rshape: shape,\n      _rdtype: _dtype\n    };\n  }\n\n  /**\n   * Sets the new remote interface provided by the other site\n   *\n   * @param {Array} names list of function names\n   */\n  _setRemoteInterface(api) {\n    this._decode(api).then(intf => {\n      this._remote_interface = intf;\n      this._fire(\"remoteReady\");\n      this._reportRemoteSet();\n    });\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * method. When the generated function is called, it will send the\n   * corresponding message to the remote site asking it to execute\n   * the particular method of its interface\n   *\n   * @param {String} name of the remote method\n   *\n   * @returns {Function} wrapped remote method\n   */\n  _genRemoteMethod(name, object_id) {\n    var me = this;\n    var remoteMethod = function() {\n      return new Promise(async (resolve, reject) => {\n        let id = null;\n        try {\n          id = me._method_refs.put(object_id ? object_id + \"/\" + name : name);\n          var wrapped_resolve = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return resolve.apply(this, arguments);\n          };\n          var wrapped_reject = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return reject.apply(this, arguments);\n          };\n\n          wrapped_resolve.__jailed_pairs__ = wrapped_reject;\n          wrapped_reject.__jailed_pairs__ = wrapped_resolve;\n\n          var args = Array.prototype.slice.call(arguments);\n          if (name === \"register\" || name === \"export\" || name === \"on\") {\n            args = await me._wrap(args, true);\n          } else {\n            args = await me._wrap(args);\n          }\n          var transferables = args.__transferables__;\n          if (transferables) delete args.__transferables__;\n          me._connection.emit(\n            {\n              type: \"method\",\n              name: name,\n              object_id: object_id,\n              args: args,\n              promise: await me._wrap([wrapped_resolve, wrapped_reject])\n            },\n            transferables\n          );\n        } catch (e) {\n          if (id) me._method_refs.fetch(id);\n          reject(\n            `Failed to exectue remote method (interface: ${object_id ||\n              me.id}, method: ${name}), error: ${e}`\n          );\n        }\n      });\n    };\n    remoteMethod.__remote_method = true;\n    return remoteMethod;\n  }\n\n  /**\n   * Sends a responce reporting that interface just provided by the\n   * remote site was successfully set by this site as remote\n   */\n  _reportRemoteSet() {\n    this._connection.emit({ type: \"interfaceSetAsRemote\" });\n  }\n\n  /**\n   * Prepares the provided set of remote method arguments for\n   * sending to the remote site, replaces all the callbacks with\n   * identifiers\n   *\n   * @param {Array} args to wrap\n   *\n   * @returns {Array} wrapped arguments\n   */\n  async _encode(aObject, as_interface, object_id) {\n    const a_type = typeof aObject;\n    if (\n      a_type === \"number\" ||\n      a_type === \"string\" ||\n      a_type === \"boolean\" ||\n      aObject === null ||\n      aObject === undefined ||\n      aObject instanceof ArrayBuffer\n    ) {\n      return aObject;\n    }\n\n    let bObject;\n    if (typeof aObject === \"function\") {\n      if (as_interface) {\n        if (!object_id) throw new Error(\"object_id is not specified.\");\n        bObject = {\n          _rtype: \"interface\",\n          _rintf: object_id,\n          _rvalue: as_interface\n        };\n        this._method_weakmap.set(aObject, bObject);\n      } else if (this._method_weakmap.has(aObject)) {\n        bObject = this._method_weakmap.get(aObject);\n      } else {\n        const cid = this._store.put(aObject);\n        bObject = {\n          _rtype: \"callback\",\n          _rname: (aObject.constructor && aObject.constructor.name) || cid,\n          _rvalue: cid\n        };\n      }\n      return bObject;\n    }\n\n    //skip if already encoded\n    if (a_type === \"object\" && aObject._rtype) {\n      return aObject;\n    }\n\n    const transferables = [];\n    const _transfer = aObject._transfer;\n    const isarray = Array.isArray(aObject);\n\n    for (let tp of Object.keys(this._codecs)) {\n      const codec = this._codecs[tp];\n      if (codec.encoder && aObject instanceof codec.type) {\n        // TODO: what if multiple encoders found\n        const encodedObj = await Promise.resolve(codec.encoder(aObject));\n        if (encodedObj && !encodedObj._rtype) encodedObj._rtype = codec.name;\n        bObject = encodedObj;\n        return bObject;\n      }\n    }\n\n    if (\n      /*global tf*/\n      typeof tf !== \"undefined\" &&\n      tf.Tensor &&\n      aObject instanceof tf.Tensor\n    ) {\n      const v_buffer = aObject.dataSync();\n      if (aObject._transfer || _transfer) {\n        transferables.push(v_buffer.buffer);\n        delete aObject._transfer;\n      }\n      bObject = {\n        _rtype: \"ndarray\",\n        _rvalue: v_buffer.buffer,\n        _rshape: aObject.shape,\n        _rdtype: aObject.dtype\n      };\n    } else if (\n      /*global nj*/\n      typeof nj !== \"undefined\" &&\n      nj.NdArray &&\n      aObject instanceof nj.NdArray\n    ) {\n      var dtype = typedArrayToDtype[aObject.selection.data.constructor.name];\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.selection.data.buffer);\n        delete aObject._transfer;\n      }\n      bObject = {\n        _rtype: \"ndarray\",\n        _rvalue: aObject.selection.data.buffer,\n        _rshape: aObject.shape,\n        _rdtype: dtype\n      };\n    } else if (aObject instanceof Error) {\n      console.error(aObject);\n      bObject = { _rtype: \"error\", _rvalue: aObject.toString() };\n    } else if (typeof File !== \"undefined\" && aObject instanceof File) {\n      bObject = {\n        _rtype: \"file\",\n        _rvalue: aObject,\n        _rpath: aObject._path || aObject.webkitRelativePath\n      };\n    }\n    // send objects supported by structure clone algorithm\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    else if (\n      aObject !== Object(aObject) ||\n      aObject instanceof Boolean ||\n      aObject instanceof String ||\n      aObject instanceof Date ||\n      aObject instanceof RegExp ||\n      aObject instanceof ImageData ||\n      (typeof FileList !== \"undefined\" && aObject instanceof FileList)\n    ) {\n      bObject = aObject;\n      // TODO: avoid object such as DynamicPlugin instance.\n    } else if (typeof File !== \"undefined\" && aObject instanceof File) {\n      bObject = {\n        _rtype: \"file\",\n        _rname: aObject.name,\n        _rmime: aObject.type,\n        _rvalue: aObject,\n        _rpath: aObject._path || aObject.webkitRelativePath\n      };\n    } else if (aObject instanceof Blob) {\n      bObject = { _rtype: \"blob\", _rvalue: aObject };\n    } else if (aObject instanceof ArrayBufferView) {\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.buffer);\n        delete aObject._transfer;\n      }\n      const dtype = typedArrayToDtype[aObject.constructor.name];\n      bObject = {\n        _rtype: \"typedarray\",\n        _rvalue: aObject.buffer,\n        _rdtype: dtype\n      };\n    } else if (aObject instanceof DataView) {\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.buffer);\n        delete aObject._transfer;\n      }\n      bObject = { _rtype: \"memoryview\", _rvalue: aObject.buffer };\n    } else if (aObject instanceof Set) {\n      bObject = {\n        _rtype: \"set\",\n        _rvalue: await this._encode(Array.from(aObject), as_interface)\n      };\n    } else if (aObject instanceof Map) {\n      bObject = {\n        _rtype: \"orderedmap\",\n        _rvalue: await this._encode(Array.from(aObject), as_interface)\n      };\n    } else if (\n      aObject.constructor instanceof Object ||\n      Array.isArray(aObject)\n    ) {\n      bObject = isarray ? [] : {};\n      let keys;\n      // an object/array\n      if (aObject.constructor === Object || Array.isArray(aObject)) {\n        keys = Object.keys(aObject);\n      }\n      // a class\n      else if (aObject.constructor === Function) {\n        throw new Error(\"Please instantiate the class before exportting it.\");\n      }\n      // instance of a class\n      else if (aObject.constructor.constructor === Function) {\n        keys = Object.getOwnPropertyNames(\n          Object.getPrototypeOf(aObject)\n        ).concat(Object.keys(aObject));\n        // TODO: use a proxy object to represent the actual object\n        // always encode class instance as interface\n        as_interface = true;\n      } else {\n        throw Error(\"Unsupported interface type\");\n      }\n      // encode interfaces\n      if (aObject._rintf || as_interface) {\n        if (!object_id) {\n          object_id = randId();\n          this._object_store[object_id] = aObject;\n        }\n        for (let k of keys) {\n          if (k === \"constructor\") continue;\n          if (k.startsWith(\"_\")) {\n            continue;\n          }\n          bObject[k] = await this._encode(\n            aObject[k],\n            typeof as_interface === \"string\" ? as_interface + \".\" + k : k,\n            object_id\n          );\n        }\n        // object id for dispose the object remotely\n        bObject._rintf = object_id;\n        // remove interface when closed\n        if (aObject.on && typeof aObject.on === \"function\") {\n          aObject.on(\"close\", () => {\n            delete this._object_store[object_id];\n          });\n        }\n      } else {\n        for (let k of keys) {\n          if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n          bObject[k] = await this._encode(aObject[k]);\n        }\n      }\n      // for example, browserFS object\n    } else if (typeof aObject === \"object\") {\n      const keys = Object.getOwnPropertyNames(\n        Object.getPrototypeOf(aObject)\n      ).concat(Object.keys(aObject));\n      const object_id = randId();\n\n      for (let k of keys) {\n        if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n        // encode as interface\n        bObject[k] = await this._encode(aObject[k], k, bObject);\n      }\n      // object id, used for dispose the object\n      bObject._rintf = object_id;\n    } else {\n      throw \"imjoy-rpc: Unsupported data type:\" + aObject;\n    }\n\n    if (transferables.length > 0) {\n      bObject.__transferables__ = transferables;\n    }\n    return bObject;\n  }\n\n  async _decode(aObject, withPromise) {\n    if (!aObject) {\n      return aObject;\n    }\n    var bObject, v, k;\n    if (aObject.hasOwnProperty(\"_rtype\")) {\n      if (\n        this._codecs[aObject._rtype] &&\n        this._codecs[aObject._rtype].decoder\n      ) {\n        bObject = await Promise.resolve(\n          this._codecs[aObject._rtype].decoder(aObject)\n        );\n      } else if (aObject._rtype === \"callback\") {\n        bObject = this._genRemoteCallback(aObject._rvalue, withPromise);\n      } else if (aObject._rtype === \"interface\") {\n        bObject = this._genRemoteMethod(aObject._rvalue, aObject._rintf);\n      } else if (aObject._rtype === \"ndarray\") {\n        /*global nj tf*/\n        //create build array/tensor if used in the plugin\n        if (typeof nj !== \"undefined\" && nj.array) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          bObject = nj\n            .array(new Uint8(aObject._rvalue), aObject._rdtype)\n            .reshape(aObject._rshape);\n        } else if (typeof tf !== \"undefined\" && tf.Tensor) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          const arraytype = eval(dtypeToTypedArray[aObject._rdtype]);\n          bObject = tf.tensor(\n            new arraytype(aObject._rvalue),\n            aObject._rshape,\n            aObject._rdtype\n          );\n        } else {\n          //keep it as regular if transfered to the main app\n          bObject = aObject;\n        }\n      } else if (aObject._rtype === \"error\") {\n        bObject = new Error(aObject._rvalue);\n      } else if (aObject._rtype === \"file\") {\n        if (aObject._rvalue instanceof File) {\n          bObject = aObject._rvalue;\n          //patch _path\n          bObject._path = aObject._rpath;\n        } else {\n          bObject = new File([aObject._rvalue], aObject._rname, {\n            type: aObject._rmime\n          });\n          bObject._path = aObject._rpath;\n        }\n      } else if (aObject._rtype === \"typedarray\") {\n        const arraytype = eval(dtypeToTypedArray[aObject._rdtype]);\n        if (!arraytype)\n          throw new Error(\"unsupported dtype: \" + aObject._rdtype);\n        bObject = new arraytype(aObject._rvalue);\n      } else if (aObject._rtype === \"memoryview\") {\n        bObject = new DataView(aObject._rvalue);\n      } else if (aObject._rtype === \"blob\") {\n        if (aObject._rvalue instanceof Blob) {\n          bObject = aObject._rvalue;\n        } else {\n          bObject = new Blob([aObject._rvalue], { type: aObject._rmime });\n        }\n      } else if (aObject._rtype === \"orderedmap\") {\n        bObject = new Map(await this._decode(aObject._rvalue, withPromise));\n      } else if (aObject._rtype === \"set\") {\n        bObject = new Set(await this._decode(aObject._rvalue, withPromise));\n      } else {\n        bObject = aObject;\n      }\n    } else if (aObject.constructor === Object || Array.isArray(aObject)) {\n      var isarray = Array.isArray(aObject);\n      bObject = isarray ? [] : {};\n      for (k in aObject) {\n        if (isarray || aObject.hasOwnProperty(k)) {\n          v = aObject[k];\n          bObject[k] = await this._decode(v, withPromise);\n        }\n      }\n    } else {\n      bObject = aObject;\n    }\n    // store the object id for dispose\n    if (aObject._rintf) {\n      this._object_weakmap.set(bObject, aObject._rintf);\n    }\n    return bObject;\n  }\n\n  async _wrap(args, as_interface) {\n    var wrapped = await this._encode(args, as_interface);\n    return wrapped;\n  }\n\n  /**\n   * Unwraps the set of arguments delivered from the remote site,\n   * replaces all callback identifiers with a function which will\n   * initiate sending that callback identifier back to other site\n   *\n   * @param {Object} args to unwrap\n   *\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Array} unwrapped args\n   */\n  async _unwrap(args, withPromise) {\n    var result = await this._decode(args, withPromise);\n    return result;\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * callback. When the generated function is called, it will send\n   * the corresponding message to the remote site asking it to\n   * execute the particular callback previously saved during a call\n   * by the remote site a method from the interface of this site\n   *\n   * @param {Number} id of the remote callback to execute\n   * @param {Number} argNum argument index of the callback\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Function} wrapped remote callback\n   */\n  _genRemoteCallback(cid, withPromise) {\n    var me = this;\n    var remoteCallback;\n    if (withPromise) {\n      remoteCallback = function() {\n        return new Promise(async (resolve, reject) => {\n          var args = await me._wrap(Array.prototype.slice.call(arguments));\n          var transferables = args.__transferables__;\n          if (transferables) delete args.__transferables__;\n          resolve.__jailed_pairs__ = reject;\n          reject.__jailed_pairs__ = resolve;\n          try {\n            me._connection.emit(\n              {\n                type: \"callback\",\n                id: cid,\n                args: args,\n                // object_id :  me.id,\n                promise: await me._wrap([resolve, reject])\n              },\n              transferables\n            );\n          } catch (e) {\n            reject(`Failed to exectue remote callback ( id: ${cid}).`);\n          }\n        });\n      };\n      return remoteCallback;\n    } else {\n      remoteCallback = async function() {\n        var args = await me._wrap(Array.prototype.slice.call(arguments));\n        var transferables = args.__transferables__;\n        if (transferables) delete args.__transferables__;\n        return me._connection.emit(\n          {\n            type: \"callback\",\n            id: cid,\n            args: args\n            // object_id :  me.id\n          },\n          transferables\n        );\n      };\n      return remoteCallback;\n    }\n  }\n\n  /**\n   * Sends the notification message and breaks the connection\n   */\n  disconnect() {\n    this._connection.emit({ type: \"disconnect\" });\n    setTimeout(() => {\n      this._connection.disconnect();\n    }, 2000);\n  }\n}\n\n/**\n * ReferenceStore is a special object which stores other objects\n * and provides the references (number) instead. This reference\n * may then be sent over a json-based communication channel (IPC\n * to another Node.js process or a message to the Worker). Other\n * site may then provide the reference in the responce message\n * implying the given object should be activated.\n *\n * Primary usage for the ReferenceStore is a storage for the\n * callbacks, which therefore makes it possible to initiate a\n * callback execution by the opposite site (which normally cannot\n * directly execute functions over the communication channel).\n *\n * Each stored object can only be fetched once and is not\n * available for the second time. Each stored object must be\n * fetched, since otherwise it will remain stored forever and\n * consume memory.\n *\n * Stored object indeces are simply the numbers, which are however\n * released along with the objects, and are later reused again (in\n * order to postpone the overflow, which should not likely happen,\n * but anyway).\n */\nclass ReferenceStore {\n  constructor() {\n    this._store = {}; // stored object\n    this._indices = [0]; // smallest available indices\n    this._readyHandler = function() {};\n    this._busyHandler = function() {};\n    this._readyHandler();\n  }\n\n  /**\n   * call handler when the store is empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onReady(readyHandler) {\n    this._readyHandler = readyHandler || function() {};\n  }\n\n  /**\n   * call handler when the store is not empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onBusy(busyHandler) {\n    this._busyHandler = busyHandler || function() {};\n  }\n\n  /**\n   * get the length of the store\n   *\n   */\n  getStack() {\n    return Object.keys(this._store).length;\n  }\n\n  /**\n   * @function _genId() generates the new reference id\n   *\n   * @returns {Number} smallest available id and reserves it\n   */\n  _genId() {\n    var id;\n    if (this._indices.length === 1) {\n      id = this._indices[0]++;\n    } else {\n      id = this._indices.shift();\n    }\n\n    return id;\n  }\n\n  /**\n   * Releases the given reference id so that it will be available by\n   * another object stored\n   *\n   * @param {Number} id to release\n   */\n  _releaseId(id) {\n    for (var i = 0; i < this._indices.length; i++) {\n      if (id < this._indices[i]) {\n        this._indices.splice(i, 0, id);\n        break;\n      }\n    }\n\n    // cleaning-up the sequence tail\n    for (i = this._indices.length - 1; i >= 0; i--) {\n      if (this._indices[i] - 1 === this._indices[i - 1]) {\n        this._indices.pop();\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Stores the given object and returns the refernce id instead\n   *\n   * @param {Object} obj to store\n   *\n   * @returns {Number} reference id of the stored object\n   */\n  put(obj) {\n    if (this._busyHandler && Object.keys(this._store).length === 0) {\n      this._busyHandler();\n    }\n    var id = this._genId();\n    this._store[id] = obj;\n    return id;\n  }\n\n  /**\n   * Retrieves previously stored object and releases its reference\n   *\n   * @param {Number} id of an object to retrieve\n   */\n  fetch(id) {\n    var obj = this._store[id];\n    if (obj && !obj.__remote_method) {\n      delete this._store[id];\n      this._releaseId(id);\n      if (this._readyHandler && Object.keys(this._store).length === 0) {\n        this._readyHandler();\n      }\n    }\n    if (obj && obj.__jailed_pairs__) {\n      const _id = getKeyByValue(this._store, obj.__jailed_pairs__);\n      this.fetch(_id);\n    }\n    return obj;\n  }\n}\n","/**\n * Core plugin script loaded into the plugin process/thread.\n *\n * Initializes the plugin-site API global methods.\n */\nimport { RPC } from \"./rpc.js\";\n\nexport function connectRPC(connection, config) {\n  config = config || {};\n  const codecs = {};\n\n  const rpc = new RPC(connection, config, codecs);\n  rpc.on(\"getInterface\", function() {\n    launchConnected();\n  });\n\n  rpc.on(\"remoteReady\", function() {\n    const api = rpc.getRemote() || {};\n    if (api.export) {\n      throw new Error(\"`export` is a reserved function name\");\n    }\n    if (api.onload) {\n      throw new Error(\"`onload` is a reserved function name\");\n    }\n    if (api.dispose) {\n      throw new Error(\"`dispose` is a reserved function name\");\n    }\n    api.registerCodec = function(config) {\n      if (!config[\"name\"] || (!config[\"encoder\"] && !config[\"decoder\"])) {\n        throw new Error(\n          \"Invalid codec format, please make sure you provide a name, type, encoder and decoder.\"\n        );\n      } else {\n        if (config.type) {\n          for (let k of Object.keys(codecs)) {\n            if (codecs[k].type === config.type || k === config.name) {\n              delete codecs[k];\n              console.warn(\"Remove duplicated codec: \" + k);\n            }\n          }\n        }\n        codecs[config[\"name\"]] = config;\n      }\n    };\n    api.disposeObject = function(obj) {\n      rpc.disposeObject(obj);\n    };\n    api.export = function(_interface, config) {\n      rpc.setInterface(_interface, config);\n    };\n    api.onLoad = function(handler) {\n      handler = checkHandler(handler);\n      if (connected) {\n        handler();\n      } else {\n        connectedHandlers.push(handler);\n      }\n    };\n    api.dispose = function(_interface) {\n      rpc.disconnect();\n    };\n\n    if (\n      typeof WorkerGlobalScope !== \"undefined\" &&\n      self instanceof WorkerGlobalScope\n    ) {\n      self.api = api;\n      self.postMessage({\n        type: \"imjoy_remote_api_ready\"\n      });\n    } else if (typeof window) {\n      window.dispatchEvent(\n        new CustomEvent(\"imjoy_remote_api_ready\", { detail: api })\n      );\n    }\n  });\n\n  let connected = false;\n  const connectedHandlers = [];\n\n  const launchConnected = function() {\n    if (!connected) {\n      connected = true;\n\n      let handler;\n      while ((handler = connectedHandlers.pop())) {\n        handler();\n      }\n    }\n  };\n\n  const checkHandler = function(handler) {\n    const type = typeof handler;\n    if (type !== \"function\") {\n      const msg =\n        \"A function may only be subsribed to the event, \" +\n        type +\n        \" was provided instead\";\n      throw new Error(msg);\n    }\n    return handler;\n  };\n\n  return rpc;\n}\n","/**\n * Contains the routines loaded by the plugin Worker under web-browser.\n *\n * Initializes the web environment version of the platform-dependent\n * connection object for the plugin site\n */\nimport { connectRPC } from \"./pluginCore.js\";\nimport { API_VERSION } from \"./rpc.js\";\nimport { MessageEmitter, randId } from \"./utils.js\";\n\n(function() {\n  // make sure this runs inside a webworker\n  if (\n    typeof WorkerGlobalScope === \"undefined\" ||\n    !self ||\n    !(self instanceof WorkerGlobalScope)\n  ) {\n    throw new Error(\"This script can only loaded in a webworker\");\n  }\n  /**\n   * Connection object provided to the RPC constructor,\n   * plugin site implementation for the web-based environment.\n   * Global will be then cleared to prevent exposure into the\n   * Worker, so we put this local connection object into a closure\n   */\n  class Connection extends MessageEmitter {\n    constructor(config) {\n      super(config && config.debug);\n      this.config = config || {};\n    }\n    connect() {\n      self.addEventListener(\"message\", e => {\n        this._fire(e.data.type, e.data);\n      });\n      this.emit({\n        type: \"initialized\",\n        config: this.config\n      });\n    }\n    disconnect() {\n      this._fire(\"beforeDisconnect\");\n      self.close();\n      this._fire(\"disconnected\");\n    }\n    emit(data) {\n      let transferables = undefined;\n      if (data.__transferables__) {\n        transferables = data.__transferables__;\n        delete data.__transferables__;\n      }\n      self.postMessage(data, transferables);\n    }\n    async execute(code) {\n      if (code.type === \"requirements\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (!Array.isArray(code.requirements)) {\n                code.requirements = [code.requirements];\n              }\n              for (var i = 0; i < code.requirements.length; i++) {\n                if (\n                  code.requirements[i].toLowerCase().endsWith(\".css\") ||\n                  code.requirements[i].startsWith(\"css:\")\n                ) {\n                  throw \"unable to import css in a webworker\";\n                } else if (\n                  code.requirements[i].toLowerCase().endsWith(\".js\") ||\n                  code.requirements[i].startsWith(\"js:\")\n                ) {\n                  if (code.requirements[i].startsWith(\"js:\")) {\n                    code.requirements[i] = code.requirements[i].slice(3);\n                  }\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"http\")) {\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"cache:\")) {\n                  //ignore cache\n                } else {\n                  console.log(\n                    \"Unprocessed requirements url: \" + code.requirements[i]\n                  );\n                }\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n        } catch (e) {\n          throw e;\n        }\n      } else if (code.type === \"script\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (Array.isArray(code.requirements)) {\n                for (let i = 0; i < code.requirements.length; i++) {\n                  importScripts(code.requirements[i]);\n                }\n              } else {\n                importScripts(code.requirements);\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n          eval(code.content);\n        } catch (e) {\n          console.error(e.message, e.stack);\n          throw e;\n        }\n      } else {\n        throw \"unsupported code type.\";\n      }\n      if (code.type === \"requirements\") {\n        self.postMessage({\n          type: \"cacheRequirements\",\n          requirements: code.requirements\n        });\n      }\n    }\n  }\n  const config = {\n    type: \"web-worker\",\n    dedicated_thread: true,\n    allow_execution: true,\n    lang: \"javascript\",\n    api_version: API_VERSION\n  };\n  const conn = new Connection(config);\n  conn.on(\"connectRPC\", data => {\n    connectRPC(conn, Object.assign(data.config, config));\n  });\n  conn.connect();\n  self.postMessage({\n    type: \"worker-ready\"\n  });\n})();\n"],"sourceRoot":""}