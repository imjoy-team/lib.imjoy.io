{"version":3,"sources":["webpack://imjoyRPC/webpack/bootstrap","webpack://imjoyRPC/./src/utils.js","webpack://imjoyRPC/./src/rpc.js","webpack://imjoyRPC/./src/pluginCore.js","webpack://imjoyRPC/./src/plugin.webworker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","randId","Math","random","toString","substr","Date","getTime","dtypeToTypedArray","int8","int16","int32","uint8","uint16","uint32","float32","float64","array","typedArrayToDtype","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Array","MessageEmitter","constructor","debug","this","_event_handlers","_once_handlers","_debug","emit","Error","on","event","handler","push","once","___event_run_once","off","idx","indexOf","splice","_fire","data","length","e","console","error","warn","API_VERSION","ArrayBufferView","getPrototypeOf","_appendBuffer","buffer1","buffer2","tmp","byteLength","set","buffer","indexObject","obj","is","split","slice","RPC","connection","config","codecs","super","_connection","_codecs","_object_store","_method_weakmap","WeakMap","_object_weakmap","_local_api","execute","_store","ReferenceStore","_method_refs","onReady","onBusy","_setupMessageHanlders","init","type","peer_id","setConfig","k","keys","getRemoteCallStack","getStack","getRemote","_remote_interface","setInterface","_interface","description","forwarding_functions","func_name","_remote","args","Function","sendInterface","_encode","then","api","_disposeObject","objectId","disposeObject","Promise","resolve","reject","has","object_id","code","catch","String","async","method","method_this","result","promise","_unwrap","includes","join","apply","err","fetch","id","_setRemoteInterface","disconnect","requestRemote","_ndarray","typedArray","shape","dtype","_dtype","_rtype","_rvalue","_rshape","_rdtype","_decode","intf","_reportRemoteSet","_genRemoteMethod","targetId","me","remoteMethod","put","wrapped_resolve","arguments","wrapped_reject","encodedPromise","_wrap","__promise_pair","transferables","__transferables__","target_id","__remote_method","aObject","asInterface","aType","ArrayBuffer","bObject","_rtarget_id","_rintf","cid","_rname","temp","_transfer","isarray","isArray","tp","codec","encoder","encodedObj","tf","Tensor","v_buffer","dataSync","nj","NdArray","selection","File","_rpath","_path","webkitRelativePath","Boolean","RegExp","ImageData","FileList","_rmime","Blob","DataView","Set","from","Map","getOwnPropertyNames","concat","hasFunction","startsWith","withPromise","decoder","_genRemoteCallback","reduce","Uint8","reshape","arraytype","eval","tensor","v","undefined","remoteCallback","setTimeout","_indices","_readyHandler","_busyHandler","readyHandler","busyHandler","_genId","shift","_releaseId","pop","connectRPC","rpc","launchConnected","export","onload","dispose","registerCodec","setup","onLoad","checkHandler","connected","connectedHandlers","WorkerGlobalScope","self","postMessage","window","dispatchEvent","CustomEvent","detail","Connection","addEventListener","close","requirements","toLowerCase","endsWith","importScripts","log","content","message","stack","dedicated_thread","allow_execution","lang","api_version","conn","assign","connect"],"mappings":"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","file":"plugin.webworker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export function randId() {\n  return (\n    Math.random()\n      .toString(36)\n      .substr(2, 10) + new Date().getTime()\n  );\n}\n\nexport const dtypeToTypedArray = {\n  int8: \"Int8Array\",\n  int16: \"Int16Array\",\n  int32: \"Int32Array\",\n  uint8: \"Uint8Array\",\n  uint16: \"Uint16Array\",\n  uint32: \"Uint32Array\",\n  float32: \"Float32Array\",\n  float64: \"Float64Array\",\n  array: \"Array\"\n};\nexport const typedArrayToDtype = {\n  Int8Array: \"int8\",\n  Int16Array: \"int16\",\n  Int32Array: \"int32\",\n  Uint8Array: \"uint8\",\n  Uint16Array: \"uint16\",\n  Uint32Array: \"uint32\",\n  Float32Array: \"float32\",\n  Float64Array: \"float64\",\n  Array: \"array\"\n};\n\nfunction cacheUrlInServiceWorker(url) {\n  return new Promise(function(resolve, reject) {\n    const message = {\n      command: \"add\",\n      url: url\n    };\n    if (!navigator.serviceWorker || !navigator.serviceWorker.register) {\n      reject(\"Service worker is not supported.\");\n      return;\n    }\n    const messageChannel = new MessageChannel();\n    messageChannel.port1.onmessage = function(event) {\n      if (event.data && event.data.error) {\n        reject(event.data.error);\n      } else {\n        resolve(event.data && event.data.result);\n      }\n    };\n\n    if (navigator.serviceWorker && navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(message, [\n        messageChannel.port2\n      ]);\n    } else {\n      reject(\"Service worker controller is not available\");\n    }\n  });\n}\n\nexport async function cacheRequirements(requirements) {\n  if (!Array.isArray(requirements)) {\n    requirementsm.code.requirements = [requirements];\n  }\n  if (requirements && requirements.length > 0) {\n    for (let req of requirements) {\n      //remove prefix\n      if (req.startsWith(\"js:\")) req = req.slice(3);\n      if (req.startsWith(\"css:\")) req = req.slice(4);\n      if (req.startsWith(\"cache:\")) req = req.slice(6);\n      if (!req.startsWith(\"http\")) continue;\n\n      await cacheUrlInServiceWorker(req).catch(e => {\n        console.error(e);\n      });\n    }\n  }\n}\n\nexport function setupServiceWorker(baseUrl, targetOrigin, cacheCallback) {\n  // register service worker for offline access\n  if (\"serviceWorker\" in navigator) {\n    baseUrl = baseUrl || \"/\";\n    navigator.serviceWorker.register(baseUrl + \"plugin-service-worker.js\").then(\n      function(registration) {\n        // Registration was successful\n        console.log(\n          \"ServiceWorker registration successful with scope: \",\n          registration.scope\n        );\n      },\n      function(err) {\n        // registration failed :(\n        console.log(\"ServiceWorker registration failed: \", err);\n      }\n    );\n    targetOrigin = targetOrigin || \"*\";\n    cacheCallback = cacheCallback || cacheRequirements;\n    if (cacheCallback && typeof cacheCallback !== \"function\") {\n      throw new Error(\"config.cache_requirements must be a function\");\n    }\n    window.addEventListener(\"message\", function(e) {\n      if (targetOrigin === \"*\" || e.origin === targetOrigin) {\n        const m = e.data;\n        if (m.type === \"cacheRequirements\") {\n          cacheCallback(m.requirements);\n        }\n      }\n    });\n  }\n}\n\n//#Source https://bit.ly/2neWfJ2\nexport function urlJoin(...args) {\n  return args\n    .join(\"/\")\n    .replace(/[\\/]+/g, \"/\")\n    .replace(/^(.+):\\//, \"$1://\")\n    .replace(/^file:/, \"file:/\")\n    .replace(/\\/(\\?|&|#[^!])/g, \"$1\")\n    .replace(/\\?/g, \"&\")\n    .replace(\"&\", \"?\");\n}\n\nexport class MessageEmitter {\n  constructor(debug) {\n    this._event_handlers = {};\n    this._once_handlers = {};\n    this._debug = debug;\n  }\n  emit() {\n    throw new Error(\"emit is not implemented\");\n  }\n  on(event, handler) {\n    if (!this._event_handlers[event]) {\n      this._event_handlers[event] = [];\n    }\n    this._event_handlers[event].push(handler);\n  }\n  once(event, handler) {\n    handler.___event_run_once = true;\n    this.on(event, handler);\n  }\n  off(event, handler) {\n    if (!event && !handler) {\n      // remove all events handlers\n      this._event_handlers = {};\n    } else if (event && !handler) {\n      // remove all hanlders for the event\n      if (this._event_handlers[event]) this._event_handlers[event] = [];\n    } else {\n      // remove a specific handler\n      if (this._event_handlers[event]) {\n        const idx = this._event_handlers[event].indexOf(handler);\n        if (idx >= 0) {\n          this._event_handlers[event].splice(idx, 1);\n        }\n      }\n    }\n  }\n  _fire(event, data) {\n    if (this._event_handlers[event]) {\n      var i = this._event_handlers[event].length;\n      while (i--) {\n        const handler = this._event_handlers[event][i];\n        try {\n          handler(data);\n        } catch (e) {\n          console.error(e);\n        } finally {\n          if (handler.___event_run_once) {\n            this._event_handlers[event].splice(i, 1);\n          }\n        }\n      }\n    } else {\n      if (this._debug) {\n        console.warn(\"unhandled event\", event, data);\n      }\n    }\n  }\n}\n","/**\n * Contains the RPC object used both by the application\n * site, and by each plugin\n */\nimport {\n  randId,\n  typedArrayToDtype,\n  dtypeToTypedArray,\n  MessageEmitter\n} from \"./utils.js\";\n\nexport const API_VERSION = \"0.2.3\";\n\nconst ArrayBufferView = Object.getPrototypeOf(\n  Object.getPrototypeOf(new Uint8Array())\n).constructor;\n\nfunction _appendBuffer(buffer1, buffer2) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\nfunction indexObject(obj, is) {\n  if (!is) throw new Error(\"undefined index\");\n  if (typeof is === \"string\") return indexObject(obj, is.split(\".\"));\n  else if (is.length === 0) return obj;\n  else return indexObject(obj[is[0]], is.slice(1));\n}\n\n/**\n * RPC object represents a single site in the\n * communication protocol between the application and the plugin\n *\n * @param {Object} connection a special object allowing to send\n * and receive messages from the opposite site (basically it\n * should only provide send() and onMessage() methods)\n */\nexport class RPC extends MessageEmitter {\n  constructor(connection, config, codecs) {\n    super(config && config.debug);\n    this._connection = connection;\n    this.config = config || {};\n    this._codecs = codecs || {};\n    this._object_store = {};\n    this._method_weakmap = new WeakMap();\n    this._object_weakmap = new WeakMap();\n    this._local_api = null;\n    // make sure there is an execute function\n    const name = this.config.name;\n    this._connection.execute =\n      this._connection.execute ||\n      function() {\n        throw new Error(`connection.execute not implemented (in \"${name}\")`);\n      };\n    this._store = new ReferenceStore();\n    this._method_refs = new ReferenceStore();\n    this._method_refs.onReady(() => {\n      this._fire(\"remoteIdle\");\n    });\n    this._method_refs.onBusy(() => {\n      this._fire(\"remoteBusy\");\n    });\n    this._setupMessageHanlders();\n  }\n\n  init() {\n    this._connection.emit({\n      type: \"initialized\",\n      config: this.config,\n      peer_id: this._connection.peer_id\n    });\n  }\n\n  setConfig(config) {\n    if (config)\n      for (const k of Object.keys(config)) {\n        this.config[k] = config[k];\n      }\n  }\n  /**\n   * Set a handler to be called when received a responce from the\n   * remote site reporting that the previously provided interface\n   * has been successfully set as remote for that site\n   *\n   * @param {Function} handler\n   */\n\n  getRemoteCallStack() {\n    return this._method_refs.getStack();\n  }\n\n  /**\n   * @returns {Object} set of remote interface methods\n   */\n  getRemote() {\n    return this._remote_interface;\n  }\n\n  /**\n   * Sets the interface of this site making it available to the\n   * remote site by sending a message with a set of methods names\n   *\n   * @param {Object} _interface to set\n   */\n  setInterface(_interface, config) {\n    config = config || {};\n    this.config.name = config.name || this.config.name;\n    this.config.description = config.description || this.config.description;\n    if (this.config.forwarding_functions) {\n      for (let func_name of this.config.forwarding_functions) {\n        const _remote = this._remote_interface;\n        if (_remote[func_name]) {\n          if (_interface.constructor === Object) {\n            if (!_interface[func_name]) {\n              _interface[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          } else if (_interface.constructor.constructor === Function) {\n            if (!_interface.constructor.prototype[func_name]) {\n              _interface.constructor.prototype[func_name] = (...args) => {\n                _remote[func_name](...args);\n              };\n            }\n          }\n        }\n      }\n    }\n    this._local_api = _interface;\n    this._fire(\"interfaceAvailable\");\n  }\n\n  /**\n   * Sends the actual interface to the remote site upon it was\n   * updated or by a special request of the remote site\n   */\n  sendInterface() {\n    if (!this._local_api) {\n      throw new Error(\"interface is not set.\");\n    }\n    this._encode(this._local_api, true).then(api => {\n      this._connection.emit({ type: \"setInterface\", api: api });\n    });\n  }\n\n  _disposeObject(objectId) {\n    if (this._object_store[objectId]) {\n      delete this._object_store[objectId];\n    } else {\n      throw new Error(`Object (id=${objectId}) not found.`);\n    }\n  }\n\n  disposeObject(obj) {\n    return new Promise((resolve, reject) => {\n      if (this._object_weakmap.has(obj)) {\n        const objectId = this._object_weakmap.get(obj);\n        this._connection.once(\"disposed\", data => {\n          if (data.error) reject(new Error(data.error));\n          else resolve();\n        });\n        this._connection.emit({\n          type: \"disposeObject\",\n          object_id: objectId\n        });\n      } else {\n        throw new Error(\"Invalid object\");\n      }\n    });\n  }\n\n  /**\n   * Handles a message from the remote site\n   */\n  _setupMessageHanlders() {\n    this._connection.on(\"init\", this.init);\n    this._connection.on(\"execute\", data => {\n      Promise.resolve(this._connection.execute(data.code))\n        .then(() => {\n          this._connection.emit({ type: \"executed\" });\n        })\n        .catch(e => {\n          console.error(e);\n          this._connection.emit({\n            type: \"executed\",\n            error: String(e)\n          });\n        });\n    });\n\n    this._connection.on(\"method\", async data => {\n      let resolve, reject, method, method_this, args, result;\n      try {\n        if (data.promise) {\n          [resolve, reject] = await this._unwrap(data.promise, false);\n        }\n        const _interface = this._object_store[data.object_id];\n        method = indexObject(_interface, data.name);\n        if (data.name.includes(\".\")) {\n          const tmp = data.name.split(\".\");\n          const intf_index = tmp.slice(0, tmp.length - 1).join(\".\");\n          method_this = indexObject(_interface, intf_index);\n        } else {\n          method_this = _interface;\n        }\n        args = await this._unwrap(data.args, true);\n        if (data.promise) {\n          result = method.apply(method_this, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } else {\n          method.apply(method_this, args);\n        }\n      } catch (err) {\n        console.error(this.config.name, err);\n        if (reject) {\n          reject(err);\n        }\n      }\n    });\n\n    this._connection.on(\"callback\", async data => {\n      let resolve, reject, method, args, result;\n      try {\n        if (data.promise) {\n          [resolve, reject] = await this._unwrap(data.promise, false);\n        }\n        if (data.promise) {\n          method = this._store.fetch(data.id);\n          args = await this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          result = method.apply(null, args);\n          if (\n            result instanceof Promise ||\n            (method.constructor && method.constructor.name === \"AsyncFunction\")\n          ) {\n            result.then(resolve).catch(reject);\n          } else {\n            resolve(result);\n          }\n        } else {\n          method = this._store.fetch(data.id);\n          args = await this._unwrap(data.args, true);\n          if (!method) {\n            throw new Error(\n              \"Please notice that callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\"\n            );\n          }\n          method.apply(null, args);\n        }\n      } catch (err) {\n        console.error(this.config.name, err);\n        if (reject) {\n          reject(err);\n        }\n      }\n    });\n    this._connection.on(\"disposeObject\", data => {\n      try {\n        this._disposeObject(data.object_id);\n        this._connection.emit({\n          type: \"disposed\"\n        });\n      } catch (e) {\n        console.error(e);\n        this._connection.emit({\n          type: \"disposed\",\n          error: String(e)\n        });\n      }\n    });\n    this._connection.on(\"setInterface\", data => {\n      this._setRemoteInterface(data.api);\n    });\n    this._connection.on(\"getInterface\", () => {\n      this._fire(\"getInterface\");\n      if (this._local_api) {\n        this.sendInterface();\n      } else {\n        this.once(\"interfaceAvailable\", () => {\n          this.sendInterface();\n        });\n      }\n    });\n    this._connection.on(\"interfaceSetAsRemote\", () => {\n      this._fire(\"interfaceSetAsRemote\");\n    });\n    this._connection.on(\"disconnect\", () => {\n      this._fire(\"beforeDisconnect\");\n      this._connection.disconnect();\n      this._fire(\"disconnected\");\n    });\n  }\n\n  /**\n   * Sends a requests to the remote site asking it to provide its\n   * current interface\n   */\n  requestRemote() {\n    this._connection.emit({ type: \"getInterface\" });\n  }\n\n  _ndarray(typedArray, shape, dtype) {\n    const _dtype = typedArrayToDtype[typedArray.constructor.name];\n    if (dtype && dtype !== _dtype) {\n      throw \"dtype doesn't match the type of the array: \" +\n        _dtype +\n        \" != \" +\n        dtype;\n    }\n    shape = shape || [typedArray.length];\n    return {\n      _rtype: \"ndarray\",\n      _rvalue: typedArray.buffer,\n      _rshape: shape,\n      _rdtype: _dtype\n    };\n  }\n\n  /**\n   * Sets the new remote interface provided by the other site\n   *\n   * @param {Array} names list of function names\n   */\n  _setRemoteInterface(api) {\n    this._decode(api).then(intf => {\n      this._remote_interface = intf;\n      this._fire(\"remoteReady\");\n      this._reportRemoteSet();\n    });\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * method. When the generated function is called, it will send the\n   * corresponding message to the remote site asking it to execute\n   * the particular method of its interface\n   *\n   * @param {String} name of the remote method\n   *\n   * @returns {Function} wrapped remote method\n   */\n  _genRemoteMethod(targetId, name, objectId) {\n    const me = this;\n    const remoteMethod = function() {\n      return new Promise(async (resolve, reject) => {\n        let id = null;\n        try {\n          id = me._method_refs.put(objectId ? objectId + \"/\" + name : name);\n          const wrapped_resolve = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return resolve.apply(this, arguments);\n          };\n          const wrapped_reject = function() {\n            if (id !== null) me._method_refs.fetch(id);\n            return reject.apply(this, arguments);\n          };\n\n          const encodedPromise = await me._wrap([\n            wrapped_resolve,\n            wrapped_reject\n          ]);\n\n          // store the key id for removing them from the reference store together\n          wrapped_resolve.__promise_pair = encodedPromise[1]._rvalue;\n          wrapped_reject.__promise_pair = encodedPromise[0]._rvalue;\n\n          let args = Array.prototype.slice.call(arguments);\n          if (name === \"register\" || name === \"export\" || name === \"on\") {\n            args = await me._wrap(args, true);\n          } else {\n            args = await me._wrap(args);\n          }\n          const transferables = args.__transferables__;\n          if (transferables) delete args.__transferables__;\n          me._connection.emit(\n            {\n              type: \"method\",\n              target_id: targetId,\n              name: name,\n              object_id: objectId,\n              args: args,\n              promise: encodedPromise\n            },\n            transferables\n          );\n        } catch (e) {\n          if (id) me._method_refs.fetch(id);\n          reject(\n            `Failed to exectue remote method (interface: ${objectId ||\n              me.id}, method: ${name}), error: ${e}`\n          );\n        }\n      });\n    };\n    remoteMethod.__remote_method = true;\n    return remoteMethod;\n  }\n\n  /**\n   * Sends a responce reporting that interface just provided by the\n   * remote site was successfully set by this site as remote\n   */\n  _reportRemoteSet() {\n    this._connection.emit({ type: \"interfaceSetAsRemote\" });\n  }\n\n  /**\n   * Prepares the provided set of remote method arguments for\n   * sending to the remote site, replaces all the callbacks with\n   * identifiers\n   *\n   * @param {Array} args to wrap\n   *\n   * @returns {Array} wrapped arguments\n   */\n  async _encode(aObject, asInterface, objectId) {\n    const aType = typeof aObject;\n    if (\n      aType === \"number\" ||\n      aType === \"string\" ||\n      aType === \"boolean\" ||\n      aObject === null ||\n      aObject === undefined ||\n      aObject instanceof ArrayBuffer\n    ) {\n      return aObject;\n    }\n\n    let bObject;\n    if (typeof aObject === \"function\") {\n      if (asInterface) {\n        if (!objectId) throw new Error(\"objectId is not specified.\");\n        bObject = {\n          _rtype: \"interface\",\n          _rtarget_id: this._connection.peer_id,\n          _rintf: objectId,\n          _rvalue: asInterface\n        };\n        this._method_weakmap.set(aObject, bObject);\n      } else if (this._method_weakmap.has(aObject)) {\n        bObject = this._method_weakmap.get(aObject);\n      } else {\n        const cid = this._store.put(aObject);\n        bObject = {\n          _rtype: \"callback\",\n          _rtarget_id: this._connection.peer_id,\n          _rname: (aObject.constructor && aObject.constructor.name) || cid,\n          _rvalue: cid\n        };\n      }\n      return bObject;\n    }\n\n    // skip if already encoded\n    if (aObject.constructor instanceof Object && aObject._rtype) {\n      // make sure the interface functions are encoded\n      if (aObject._rintf) {\n        const temp = aObject._rtype;\n        delete aObject._rtype;\n\n        bObject = await this._encode(aObject, asInterface, objectId);\n        bObject._rtype = temp;\n      } else {\n        bObject = aObject;\n      }\n      return bObject;\n    }\n\n    const transferables = [];\n    const _transfer = aObject._transfer;\n    const isarray = Array.isArray(aObject);\n\n    for (let tp of Object.keys(this._codecs)) {\n      const codec = this._codecs[tp];\n      if (codec.encoder && aObject instanceof codec.type) {\n        // TODO: what if multiple encoders found\n        let encodedObj = await Promise.resolve(codec.encoder(aObject));\n        if (encodedObj && !encodedObj._rtype) encodedObj._rtype = codec.name;\n        // encode the functions in the interface object\n        if (encodedObj && encodedObj._rintf) {\n          const temp = encodedObj._rtype;\n          delete encodedObj._rtype;\n          encodedObj = await this._encode(encodedObj, asInterface, objectId);\n          encodedObj._rtype = temp;\n        }\n        bObject = encodedObj;\n        return bObject;\n      }\n    }\n\n    if (\n      /*global tf*/\n      typeof tf !== \"undefined\" &&\n      tf.Tensor &&\n      aObject instanceof tf.Tensor\n    ) {\n      const v_buffer = aObject.dataSync();\n      if (aObject._transfer || _transfer) {\n        transferables.push(v_buffer.buffer);\n        delete aObject._transfer;\n      }\n      bObject = {\n        _rtype: \"ndarray\",\n        _rvalue: v_buffer.buffer,\n        _rshape: aObject.shape,\n        _rdtype: aObject.dtype\n      };\n    } else if (\n      /*global nj*/\n      typeof nj !== \"undefined\" &&\n      nj.NdArray &&\n      aObject instanceof nj.NdArray\n    ) {\n      const dtype = typedArrayToDtype[aObject.selection.data.constructor.name];\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.selection.data.buffer);\n        delete aObject._transfer;\n      }\n      bObject = {\n        _rtype: \"ndarray\",\n        _rvalue: aObject.selection.data.buffer,\n        _rshape: aObject.shape,\n        _rdtype: dtype\n      };\n    } else if (aObject instanceof Error) {\n      console.error(aObject);\n      bObject = { _rtype: \"error\", _rvalue: aObject.toString() };\n    } else if (typeof File !== \"undefined\" && aObject instanceof File) {\n      bObject = {\n        _rtype: \"file\",\n        _rvalue: aObject,\n        _rpath: aObject._path || aObject.webkitRelativePath\n      };\n    }\n    // send objects supported by structure clone algorithm\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    else if (\n      aObject !== Object(aObject) ||\n      aObject instanceof Boolean ||\n      aObject instanceof String ||\n      aObject instanceof Date ||\n      aObject instanceof RegExp ||\n      aObject instanceof ImageData ||\n      (typeof FileList !== \"undefined\" && aObject instanceof FileList)\n    ) {\n      bObject = aObject;\n      // TODO: avoid object such as DynamicPlugin instance.\n    } else if (typeof File !== \"undefined\" && aObject instanceof File) {\n      bObject = {\n        _rtype: \"file\",\n        _rname: aObject.name,\n        _rmime: aObject.type,\n        _rvalue: aObject,\n        _rpath: aObject._path || aObject.webkitRelativePath\n      };\n    } else if (aObject instanceof Blob) {\n      bObject = { _rtype: \"blob\", _rvalue: aObject };\n    } else if (aObject instanceof ArrayBufferView) {\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.buffer);\n        delete aObject._transfer;\n      }\n      const dtype = typedArrayToDtype[aObject.constructor.name];\n      bObject = {\n        _rtype: \"typedarray\",\n        _rvalue: aObject.buffer,\n        _rdtype: dtype\n      };\n    } else if (aObject instanceof DataView) {\n      if (aObject._transfer || _transfer) {\n        transferables.push(aObject.buffer);\n        delete aObject._transfer;\n      }\n      bObject = { _rtype: \"memoryview\", _rvalue: aObject.buffer };\n    } else if (aObject instanceof Set) {\n      bObject = {\n        _rtype: \"set\",\n        _rvalue: await this._encode(Array.from(aObject), asInterface)\n      };\n    } else if (aObject instanceof Map) {\n      bObject = {\n        _rtype: \"orderedmap\",\n        _rvalue: await this._encode(Array.from(aObject), asInterface)\n      };\n    } else if (\n      aObject.constructor instanceof Object ||\n      Array.isArray(aObject)\n    ) {\n      bObject = isarray ? [] : {};\n      let keys;\n      // an object/array\n      if (aObject.constructor === Object || Array.isArray(aObject)) {\n        keys = Object.keys(aObject);\n      }\n      // a class\n      else if (aObject.constructor === Function) {\n        throw new Error(\"Please instantiate the class before exportting it.\");\n      }\n      // instance of a class\n      else if (aObject.constructor.constructor === Function) {\n        keys = Object.getOwnPropertyNames(\n          Object.getPrototypeOf(aObject)\n        ).concat(Object.keys(aObject));\n        // TODO: use a proxy object to represent the actual object\n        // always encode class instance as interface\n        asInterface = true;\n      } else {\n        throw Error(\"Unsupported interface type\");\n      }\n\n      let hasFunction = false;\n      // encode interfaces\n      if (aObject._rintf || asInterface) {\n        if (!objectId) {\n          objectId = randId();\n          this._object_store[objectId] = aObject;\n        }\n        for (let k of keys) {\n          if (k === \"constructor\") continue;\n          if (k.startsWith(\"_\")) {\n            continue;\n          }\n          bObject[k] = await this._encode(\n            aObject[k],\n            typeof asInterface === \"string\" ? asInterface + \".\" + k : k,\n            objectId\n          );\n          if (typeof aObject[k] === \"function\") {\n            hasFunction = true;\n          }\n        }\n        // object id for dispose the object remotely\n        if (hasFunction) bObject._rintf = objectId;\n        // remove interface when closed\n        if (aObject.on && typeof aObject.on === \"function\") {\n          aObject.on(\"close\", () => {\n            delete this._object_store[objectId];\n          });\n        }\n      } else {\n        for (let k of keys) {\n          if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n          bObject[k] = await this._encode(aObject[k]);\n        }\n      }\n      // for example, browserFS object\n    } else if (typeof aObject === \"object\") {\n      const keys = Object.getOwnPropertyNames(\n        Object.getPrototypeOf(aObject)\n      ).concat(Object.keys(aObject));\n      const objectId = randId();\n\n      for (let k of keys) {\n        if ([\"hasOwnProperty\", \"constructor\"].includes(k)) continue;\n        // encode as interface\n        bObject[k] = await this._encode(aObject[k], k, bObject);\n      }\n      // object id, used for dispose the object\n      bObject._rintf = objectId;\n    } else {\n      throw \"imjoy-rpc: Unsupported data type:\" + aObject;\n    }\n\n    if (transferables.length > 0) {\n      bObject.__transferables__ = transferables;\n    }\n    if (!bObject) {\n      throw new Error(\"Failed to encode object\");\n    }\n    return bObject;\n  }\n\n  async _decode(aObject, withPromise) {\n    if (!aObject) {\n      return aObject;\n    }\n    let bObject;\n    if (aObject[\"_rtype\"]) {\n      if (\n        this._codecs[aObject._rtype] &&\n        this._codecs[aObject._rtype].decoder\n      ) {\n        if (aObject._rintf) {\n          const temp = aObject._rtype;\n          delete aObject._rtype;\n          aObject = await this._decode(aObject, withPromise);\n          aObject._rtype = temp;\n        }\n        bObject = await Promise.resolve(\n          this._codecs[aObject._rtype].decoder(aObject)\n        );\n      } else if (aObject._rtype === \"callback\") {\n        bObject = this._genRemoteCallback(\n          aObject._rtarget_id,\n          aObject._rvalue,\n          withPromise\n        );\n      } else if (aObject._rtype === \"interface\") {\n        bObject = this._genRemoteMethod(\n          aObject._rtarget_id,\n          aObject._rvalue,\n          aObject._rintf\n        );\n      } else if (aObject._rtype === \"ndarray\") {\n        /*global nj tf*/\n        //create build array/tensor if used in the plugin\n        if (typeof nj !== \"undefined\" && nj.array) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          bObject = nj\n            .array(new Uint8(aObject._rvalue), aObject._rdtype)\n            .reshape(aObject._rshape);\n        } else if (typeof tf !== \"undefined\" && tf.Tensor) {\n          if (Array.isArray(aObject._rvalue)) {\n            aObject._rvalue = aObject._rvalue.reduce(_appendBuffer);\n          }\n          const arraytype = eval(dtypeToTypedArray[aObject._rdtype]);\n          bObject = tf.tensor(\n            new arraytype(aObject._rvalue),\n            aObject._rshape,\n            aObject._rdtype\n          );\n        } else {\n          //keep it as regular if transfered to the main app\n          bObject = aObject;\n        }\n      } else if (aObject._rtype === \"error\") {\n        bObject = new Error(aObject._rvalue);\n      } else if (aObject._rtype === \"file\") {\n        if (aObject._rvalue instanceof File) {\n          bObject = aObject._rvalue;\n          //patch _path\n          bObject._path = aObject._rpath;\n        } else {\n          bObject = new File([aObject._rvalue], aObject._rname, {\n            type: aObject._rmime\n          });\n          bObject._path = aObject._rpath;\n        }\n      } else if (aObject._rtype === \"typedarray\") {\n        const arraytype = eval(dtypeToTypedArray[aObject._rdtype]);\n        if (!arraytype)\n          throw new Error(\"unsupported dtype: \" + aObject._rdtype);\n        bObject = new arraytype(aObject._rvalue);\n      } else if (aObject._rtype === \"memoryview\") {\n        bObject = new DataView(aObject._rvalue);\n      } else if (aObject._rtype === \"blob\") {\n        if (aObject._rvalue instanceof Blob) {\n          bObject = aObject._rvalue;\n        } else {\n          bObject = new Blob([aObject._rvalue], { type: aObject._rmime });\n        }\n      } else if (aObject._rtype === \"orderedmap\") {\n        bObject = new Map(await this._decode(aObject._rvalue, withPromise));\n      } else if (aObject._rtype === \"set\") {\n        bObject = new Set(await this._decode(aObject._rvalue, withPromise));\n      } else {\n        // make sure all the interface functions are decoded\n        if (aObject._rintf) {\n          const temp = aObject._rtype;\n          delete aObject._rtype;\n          bObject = await this._decode(aObject, withPromise);\n          bObject._rtype = temp;\n        } else bObject = aObject;\n      }\n    } else if (aObject.constructor === Object || Array.isArray(aObject)) {\n      const isarray = Array.isArray(aObject);\n      bObject = isarray ? [] : {};\n      for (let k of Object.keys(aObject)) {\n        if (isarray || aObject.hasOwnProperty(k)) {\n          const v = aObject[k];\n          bObject[k] = await this._decode(v, withPromise);\n        }\n      }\n    } else {\n      bObject = aObject;\n    }\n    if (bObject === undefined) {\n      throw new Error(\"Failed to decode object\");\n    }\n    // store the object id for dispose\n    if (aObject._rintf) {\n      this._object_weakmap.set(bObject, aObject._rintf);\n    }\n    return bObject;\n  }\n\n  async _wrap(args, asInterface) {\n    return await this._encode(args, asInterface);\n  }\n\n  /**\n   * Unwraps the set of arguments delivered from the remote site,\n   * replaces all callback identifiers with a function which will\n   * initiate sending that callback identifier back to other site\n   *\n   * @param {Object} args to unwrap\n   *\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Array} unwrapped args\n   */\n  async _unwrap(args, withPromise) {\n    return await this._decode(args, withPromise);\n  }\n\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * callback. When the generated function is called, it will send\n   * the corresponding message to the remote site asking it to\n   * execute the particular callback previously saved during a call\n   * by the remote site a method from the interface of this site\n   *\n   * @param {Number} id of the remote callback to execute\n   * @param {Number} argNum argument index of the callback\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Function} wrapped remote callback\n   */\n  _genRemoteCallback(targetId, cid, withPromise) {\n    const me = this;\n    let remoteCallback;\n    if (withPromise) {\n      remoteCallback = function() {\n        return new Promise(async (resolve, reject) => {\n          const args = await me._wrap(Array.prototype.slice.call(arguments));\n          const transferables = args.__transferables__;\n          if (transferables) delete args.__transferables__;\n\n          const encodedPromise = await me._wrap([resolve, reject]);\n          // store the key id for removing them from the reference store together\n          resolve.__promise_pair = encodedPromise[1]._rvalue;\n          reject.__promise_pair = encodedPromise[0]._rvalue;\n          try {\n            me._connection.emit(\n              {\n                type: \"callback\",\n                target_id: targetId,\n                id: cid,\n                args: args,\n                promise: encodedPromise\n              },\n              transferables\n            );\n          } catch (e) {\n            reject(`Failed to exectue remote callback ( id: ${cid}).`);\n          }\n        });\n      };\n      return remoteCallback;\n    } else {\n      remoteCallback = async function() {\n        const args = await me._wrap(Array.prototype.slice.call(arguments));\n        const transferables = args.__transferables__;\n        if (transferables) delete args.__transferables__;\n        return me._connection.emit(\n          {\n            type: \"callback\",\n            target_id: targetId,\n            id: cid,\n            args: args\n          },\n          transferables\n        );\n      };\n      return remoteCallback;\n    }\n  }\n\n  /**\n   * Sends the notification message and breaks the connection\n   */\n  disconnect() {\n    this._connection.emit({ type: \"disconnect\" });\n    setTimeout(() => {\n      this._connection.disconnect();\n    }, 2000);\n  }\n}\n\n/**\n * ReferenceStore is a special object which stores other objects\n * and provides the references (number) instead. This reference\n * may then be sent over a json-based communication channel (IPC\n * to another Node.js process or a message to the Worker). Other\n * site may then provide the reference in the responce message\n * implying the given object should be activated.\n *\n * Primary usage for the ReferenceStore is a storage for the\n * callbacks, which therefore makes it possible to initiate a\n * callback execution by the opposite site (which normally cannot\n * directly execute functions over the communication channel).\n *\n * Each stored object can only be fetched once and is not\n * available for the second time. Each stored object must be\n * fetched, since otherwise it will remain stored forever and\n * consume memory.\n *\n * Stored object indeces are simply the numbers, which are however\n * released along with the objects, and are later reused again (in\n * order to postpone the overflow, which should not likely happen,\n * but anyway).\n */\nclass ReferenceStore {\n  constructor() {\n    this._store = {}; // stored object\n    this._indices = [0]; // smallest available indices\n    this._readyHandler = function() {};\n    this._busyHandler = function() {};\n    this._readyHandler();\n  }\n\n  /**\n   * call handler when the store is empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onReady(readyHandler) {\n    this._readyHandler = readyHandler || function() {};\n  }\n\n  /**\n   * call handler when the store is not empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n  onBusy(busyHandler) {\n    this._busyHandler = busyHandler || function() {};\n  }\n\n  /**\n   * get the length of the store\n   *\n   */\n  getStack() {\n    return Object.keys(this._store).length;\n  }\n\n  /**\n   * @function _genId() generates the new reference id\n   *\n   * @returns {Number} smallest available id and reserves it\n   */\n  _genId() {\n    let id;\n    if (this._indices.length === 1) {\n      id = this._indices[0]++;\n    } else {\n      id = this._indices.shift();\n    }\n\n    return id;\n  }\n\n  /**\n   * Releases the given reference id so that it will be available by\n   * another object stored\n   *\n   * @param {Number} id to release\n   */\n  _releaseId(id) {\n    for (let i = 0; i < this._indices.length; i++) {\n      if (id < this._indices[i]) {\n        this._indices.splice(i, 0, id);\n        break;\n      }\n    }\n\n    // cleaning-up the sequence tail\n    for (let i = this._indices.length - 1; i >= 0; i--) {\n      if (this._indices[i] - 1 === this._indices[i - 1]) {\n        this._indices.pop();\n      } else {\n        break;\n      }\n    }\n  }\n\n  /**\n   * Stores the given object and returns the refernce id instead\n   *\n   * @param {Object} obj to store\n   *\n   * @returns {Number} reference id of the stored object\n   */\n  put(obj) {\n    if (this._busyHandler && Object.keys(this._store).length === 0) {\n      this._busyHandler();\n    }\n    const id = this._genId();\n    this._store[id] = obj;\n    return id;\n  }\n\n  /**\n   * Retrieves previously stored object and releases its reference\n   *\n   * @param {Number} id of an object to retrieve\n   */\n  fetch(id) {\n    const obj = this._store[id];\n    if (obj && !obj.__remote_method) {\n      delete this._store[id];\n      this._releaseId(id);\n      if (this._readyHandler && Object.keys(this._store).length === 0) {\n        this._readyHandler();\n      }\n    }\n    if (obj && obj.__promise_pair) {\n      this.fetch(obj.__promise_pair);\n    }\n    return obj;\n  }\n}\n","/**\n * Core plugin script loaded into the plugin process/thread.\n *\n * Initializes the plugin-site API global methods.\n */\nimport { RPC } from \"./rpc.js\";\n\nexport function connectRPC(connection, config) {\n  config = config || {};\n  const codecs = {};\n\n  const rpc = new RPC(connection, config, codecs);\n  rpc.on(\"getInterface\", function() {\n    launchConnected();\n  });\n\n  rpc.on(\"remoteReady\", function() {\n    const api = rpc.getRemote() || {};\n    if (api.export) {\n      throw new Error(\"`export` is a reserved function name\");\n    }\n    if (api.onload) {\n      throw new Error(\"`onload` is a reserved function name\");\n    }\n    if (api.dispose) {\n      throw new Error(\"`dispose` is a reserved function name\");\n    }\n    api.registerCodec = function(config) {\n      if (!config[\"name\"] || (!config[\"encoder\"] && !config[\"decoder\"])) {\n        throw new Error(\n          \"Invalid codec format, please make sure you provide a name, type, encoder and decoder.\"\n        );\n      } else {\n        if (config.type) {\n          for (let k of Object.keys(codecs)) {\n            if (codecs[k].type === config.type || k === config.name) {\n              delete codecs[k];\n              console.warn(\"Remove duplicated codec: \" + k);\n            }\n          }\n        }\n        codecs[config[\"name\"]] = config;\n      }\n    };\n    api.init = function(config) {\n      // register a minimal plugin api\n      rpc.setInterface({ setup() {} }, config);\n    };\n    api.disposeObject = function(obj) {\n      rpc.disposeObject(obj);\n    };\n    api.export = function(_interface, config) {\n      rpc.setInterface(_interface, config);\n    };\n    api.onLoad = function(handler) {\n      handler = checkHandler(handler);\n      if (connected) {\n        handler();\n      } else {\n        connectedHandlers.push(handler);\n      }\n    };\n    api.dispose = function(_interface) {\n      rpc.disconnect();\n    };\n\n    if (\n      typeof WorkerGlobalScope !== \"undefined\" &&\n      self instanceof WorkerGlobalScope\n    ) {\n      self.api = api;\n      self.postMessage({\n        type: \"imjoy_remote_api_ready\"\n      });\n    } else if (typeof window) {\n      window.dispatchEvent(\n        new CustomEvent(\"imjoy_remote_api_ready\", { detail: api })\n      );\n    }\n  });\n\n  let connected = false;\n  const connectedHandlers = [];\n\n  const launchConnected = function() {\n    if (!connected) {\n      connected = true;\n\n      let handler;\n      while ((handler = connectedHandlers.pop())) {\n        handler();\n      }\n    }\n  };\n\n  const checkHandler = function(handler) {\n    const type = typeof handler;\n    if (type !== \"function\") {\n      const msg =\n        \"A function may only be subsribed to the event, \" +\n        type +\n        \" was provided instead\";\n      throw new Error(msg);\n    }\n    return handler;\n  };\n\n  return rpc;\n}\n","/**\n * Contains the routines loaded by the plugin Worker under web-browser.\n *\n * Initializes the web environment version of the platform-dependent\n * connection object for the plugin site\n */\nimport { connectRPC } from \"./pluginCore.js\";\nimport { API_VERSION } from \"./rpc.js\";\nimport { MessageEmitter, randId } from \"./utils.js\";\n\n(function() {\n  // make sure this runs inside a webworker\n  if (\n    typeof WorkerGlobalScope === \"undefined\" ||\n    !self ||\n    !(self instanceof WorkerGlobalScope)\n  ) {\n    throw new Error(\"This script can only loaded in a webworker\");\n  }\n  /**\n   * Connection object provided to the RPC constructor,\n   * plugin site implementation for the web-based environment.\n   * Global will be then cleared to prevent exposure into the\n   * Worker, so we put this local connection object into a closure\n   */\n  class Connection extends MessageEmitter {\n    constructor(config) {\n      super(config && config.debug);\n      this.config = config || {};\n    }\n    connect() {\n      self.addEventListener(\"message\", e => {\n        this._fire(e.data.type, e.data);\n      });\n      this.emit({\n        type: \"initialized\",\n        config: this.config\n      });\n    }\n    disconnect() {\n      this._fire(\"beforeDisconnect\");\n      self.close();\n      this._fire(\"disconnected\");\n    }\n    emit(data) {\n      let transferables = undefined;\n      if (data.__transferables__) {\n        transferables = data.__transferables__;\n        delete data.__transferables__;\n      }\n      self.postMessage(data, transferables);\n    }\n    async execute(code) {\n      if (code.type === \"requirements\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (!Array.isArray(code.requirements)) {\n                code.requirements = [code.requirements];\n              }\n              for (var i = 0; i < code.requirements.length; i++) {\n                if (\n                  code.requirements[i].toLowerCase().endsWith(\".css\") ||\n                  code.requirements[i].startsWith(\"css:\")\n                ) {\n                  throw \"unable to import css in a webworker\";\n                } else if (\n                  code.requirements[i].toLowerCase().endsWith(\".js\") ||\n                  code.requirements[i].startsWith(\"js:\")\n                ) {\n                  if (code.requirements[i].startsWith(\"js:\")) {\n                    code.requirements[i] = code.requirements[i].slice(3);\n                  }\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"http\")) {\n                  importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith(\"cache:\")) {\n                  //ignore cache\n                } else {\n                  console.log(\n                    \"Unprocessed requirements url: \" + code.requirements[i]\n                  );\n                }\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n        } catch (e) {\n          throw e;\n        }\n      } else if (code.type === \"script\") {\n        try {\n          if (\n            code.requirements &&\n            (Array.isArray(code.requirements) ||\n              typeof code.requirements === \"string\")\n          ) {\n            try {\n              if (Array.isArray(code.requirements)) {\n                for (let i = 0; i < code.requirements.length; i++) {\n                  importScripts(code.requirements[i]);\n                }\n              } else {\n                importScripts(code.requirements);\n              }\n            } catch (e) {\n              throw \"failed to import required scripts: \" +\n                code.requirements.toString();\n            }\n          }\n          eval(code.content);\n        } catch (e) {\n          console.error(e.message, e.stack);\n          throw e;\n        }\n      } else {\n        throw \"unsupported code type.\";\n      }\n      if (code.type === \"requirements\") {\n        self.postMessage({\n          type: \"cacheRequirements\",\n          requirements: code.requirements\n        });\n      }\n    }\n  }\n  const config = {\n    type: \"web-worker\",\n    dedicated_thread: true,\n    allow_execution: true,\n    lang: \"javascript\",\n    api_version: API_VERSION\n  };\n  const conn = new Connection(config);\n  conn.on(\"connectRPC\", data => {\n    connectRPC(conn, Object.assign(data.config, config));\n  });\n  conn.connect();\n  self.postMessage({\n    type: \"worker-ready\"\n  });\n})();\n"],"sourceRoot":""}