!function(c,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define("imjoyCore",[],n):"object"==typeof exports?exports.imjoyCore=n():c.imjoyCore=n()}(window,(function(){return function(c){var n={};function t(e){if(n[e])return n[e].exports;var l=n[e]={i:e,l:!1,exports:{}};return c[e].call(l.exports,l,l.exports,t),l.l=!0,l.exports}return t.m=c,t.c=n,t.d=function(c,n,e){t.o(c,n)||Object.defineProperty(c,n,{enumerable:!0,get:e})},t.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},t.t=function(c,n){if(1&n&&(c=t(c)),8&n)return c;if(4&n&&"object"==typeof c&&c&&c.__esModule)return c;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:c}),2&n&&"string"!=typeof c)for(var l in c)t.d(e,l,function(n){return c[n]}.bind(null,l));return e},t.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return t.d(n,"a",n),n},t.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)},t.p="",t(t.s=134)}([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"cacheUrlInServiceWorker",(function(){return cacheUrlInServiceWorker})),__webpack_require__.d(__webpack_exports__,"assert",(function(){return assert})),__webpack_require__.d(__webpack_exports__,"isTouchDevice",(function(){return isTouchDevice})),__webpack_require__.d(__webpack_exports__,"compareVersions",(function(){return compareVersions})),__webpack_require__.d(__webpack_exports__,"pathJoin",(function(){return pathJoin})),__webpack_require__.d(__webpack_exports__,"dirName",(function(){return dirName})),__webpack_require__.d(__webpack_exports__,"url_regex",(function(){return url_regex})),__webpack_require__.d(__webpack_exports__,"debounce",(function(){return debounce})),__webpack_require__.d(__webpack_exports__,"animalGenerator",(function(){return animalGenerator})),__webpack_require__.d(__webpack_exports__,"colourGenerator",(function(){return colourGenerator})),__webpack_require__.d(__webpack_exports__,"randId",(function(){return randId})),__webpack_require__.d(__webpack_exports__,"_clone",(function(){return _clone})),__webpack_require__.d(__webpack_exports__,"Filters",(function(){return Filters})),__webpack_require__.d(__webpack_exports__,"isUrl",(function(){return isUrl})),__webpack_require__.d(__webpack_exports__,"githubUrlToObject",(function(){return githubUrlToObject})),__webpack_require__.d(__webpack_exports__,"githubUrlRaw",(function(){return githubUrlRaw})),__webpack_require__.d(__webpack_exports__,"githubImJoyManifest",(function(){return githubImJoyManifest})),__webpack_require__.d(__webpack_exports__,"githubRepo",(function(){return githubRepo})),__webpack_require__.d(__webpack_exports__,"hot_lut",(function(){return hot_lut}));var axios__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(9),axios__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__),_pluginParser_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(17);function cacheUrlInServiceWorker(c){return new Promise((function(n,t){const e={command:"add",url:c};if(!navigator.serviceWorker||!navigator.serviceWorker.register)return void t("Service worker is not supported.");const l=new MessageChannel;l.port1.onmessage=function(c){c.data&&c.data.error?t(c.data.error):n(c.data&&c.data.result)},navigator.serviceWorker&&navigator.serviceWorker.controller?navigator.serviceWorker.controller.postMessage(e,[l.port2]):t("Service worker controller is not available")}))}function assert(c,n){if(!c){if(n=n||"Assertion failed","undefined"!=typeof Error)throw new Error(n);throw n}}function isTouchDevice(){return"ontouchstart"in window||navigator.MaxTouchPoints>0||navigator.msMaxTouchPoints>0}function compareVersions(v1,comparator,v2){if(comparator="="==comparator?"==":comparator,-1==["==","===","<","<=",">",">=","!=","!=="].indexOf(comparator))throw new Error("Invalid comparator. "+comparator);for(var v1parts=v1.split("."),v2parts=v2.split("."),maxLen=Math.max(v1parts.length,v2parts.length),part1,part2,cmp=0,i=0;i<maxLen&&!cmp;i++)part1=parseInt(v1parts[i],10)||0,part2=parseInt(v2parts[i],10)||0,part1<part2&&(cmp=1),part1>part2&&(cmp=-1);return eval("0"+comparator+cmp)}function pathJoin(){for(var c=[],n=0,t=arguments.length;n<t;n++)c=c.concat(arguments[n].split("/"));var e=[];for(n=0,t=c.length;n<t;n++){var l=c[n];l&&"."!==l&&(".."===l?e.pop():e.push(l))}return""===c[0]&&e.unshift(""),e.join("/")||(e.length?"/":".")}function dirName(c){return pathJoin(c,"..")}__webpack_require__.d(__webpack_exports__,"parseComponent",(function(){return _pluginParser_js__WEBPACK_IMPORTED_MODULE_1__.a}));const arrAnimals=["Aardvark","Albatross","Alligator","Alpaca","Ant","Anteater","Antelope","Ape","Armadillo","Ass_Donkey","Baboon","Badger","Barracuda","Bat","Bear","Beaver","Bee","Bison","Boa","Buffalo","Butterfly","Camel","Capybara","Caribou","Cassowary","Cat","Caterpillar","Cattle","Chamois","Cheetah","Chicken","Chimpanzee","Chinchilla","Chough","Clam","Cobra","Cockroach","Cod","Cormorant","Coyote","Crab","Crane","Crocodile","Crow","Curlew","Deer","Dinosaur","Dog","Dogfish","Dolphin","Donkey","Dotterel","Dove","Dragonfly","Duck","Dugong","Dunlin","Eagle","Echidna","Eel","Eland","Elephant","Elephantseal","Elk","Emu","Falcon","Ferret","Finch","Fish","Flamingo","Fox","Frog","Gaur","Gazelle","Gerbil","GiantPanda","Giraffe","Gnat","Gnu","Goat","Goose","Goldfinch","Goldfish","Gorilla","Goshawk","Grasshopper","Grouse","Guanaco","Guineafowl","Guineapig","Gull","Hamster","Hare","Hawk","Hedgehog","Heron","Herring","Hippopotamus","Hornet","Horse","Human","Hummingbird","Hyena","Ibex","Ibis","Jackal","Jaguar","Jay","Jellyfish","Kangaroo","Kingfisher","Koala","Komodo","Kookabura","Kouprey","Kudu","Lapwing","Lark","Lemur","Leopard","Lion","Llama","Lobster","Locust","Loris","Louse","Lyrebird","Magpie","Mallard","Manatee","Mandrill","Mantis","Marten","Meerkat","Mink","Mole","Mongoose","Monkey","Moose","Mouse","Mosquito","Mule","Narwhal","Newt","Nightingale","Octopus","Okapi","Opossum","Oryx","Ostrich","Otter","Owl","Ox","Oyster","Panther","Parrot","Partridge","Peafowl","Pelican","Penguin","Pheasant","Pig","Pigeon","PolarBear","Pony","Porcupine","Porpoise","PrairieDog","Quail","Quelea","Quetzal","Rabbit","Raccoon","Rail","Ram","Rat","Raven","Reddeer","Redpanda","Reindeer","Rhinoceros","Rook","Salamander","Salmon","SandDollar","Sandpiper","Sardine","Scorpion","Sealion","SeaUrchin","Seahorse","Seal","Shark","Sheep","Shrew","Skunk","Snail","Snake","Sparrow","Spider","Spoonbill","Squid","Squirrel","Starling","Stingray","Stinkbug","Stork","Swallow","Swan","Tapir","Tarsier","Termite","Tiger","Toad","Trout","Turkey","Turtle","Vicuï¿½a","Viper","Vulture","Wallaby","Walrus","Wasp","Waterbuffalo","Weasel","Whale","Wolf","Wolverine","Wombat","Woodcock","Woodpecker","Worm","Wren","Yak","Zebra"],arrColours=["almond","amaranthine","amber","amethyst","antique","apple","apricot","aqua","aquamarine","argent","auburn","avocado","azure","babyblue","banana","battleshipgray","bay","beige","Bermudagreen","beryl","biceblue","bicegreen","bice","biscuit","bisque","black","blanchedalmond","blazeorange","blonde","bloodred","bluegreen","blueviolet","blue","blueberry","bone","bottlegreen","brass","brickred","bronzeyellow","bronze","brown","buckskin","buff","burgundy","burlywood","burntorange","burntsienna","burntumber","butterscotch","cadetblue","Cambridgeblue","canary","cardinal","carmine","carnation","carnelian","carroty","celadon","cerise","cerulean","chamois","champagne","charcoal","chartreuse","cherryred","chestnut","Chinesered","chocolate","cinereous","cinnabar","cinnamon","citrine","clairdelune","claret","coalblack","cobaltblue","cocoa","coffee","coolgray","Copenhagenblue","copper","coral","cornflowerblue","cornflower","cornsilk","cream","crimson","cupreous","cyan","daffodil","damask","dandelion","dovegray","duckeggblue","dun","Dodgerblue","eaudenil","ebony","ecru","eggshellblue","eggshell","electricblue","emeraldgreen","emerald","fawn","federalyellow","firebrick","fireenginered","flame","flamingo","flaxen","flesh","floralwhite","forestgreen","fuchsia","fuscous","gainsboro","gamboge","garnet","gentianblue","gentianviolet","geranium","ginger","glaucous","gold","goldenbrown","goldenrod","goldochre","grape","grassgreen","gray","green","grizzle","gules","gunmetalgray","hazel","heather","heliotrope","henna","hepatic","hoar","honey","honeydew","hotpink","huntergreen","iceblue","incarnadine","Indianred","indigo","internationalorange","irongray","ivory","jadegreen","jade","jet","jonquil","kellygreen","Kendalgreen","khaki","khakigreen","lapislazuli","laurelgreen","lavender","lemonchiffon","lemon","lilac","lime","Lincolngreen","linen","liver","loden","lovat","macaroniandcheese","madder","magenta","magicmint","magnolia","mahogany","malachite","maroon","mauve","mazarine","melon","midnightblue","mignonette","militarygrey","mint","mintcream","mistyrose","moccasin","mocha","mossgreen","mulberry","mustard","natural","navajowhite","navy","Nileblue","Nilegreen","oak","oatmeal","oceangrey","ochre","offwhite","oldgold","oldlace","olivedrab","olive","orange","orchid","outerspace","oxblood","Oxfordblue","oyster","pansy","paprika","Parisgreen","patina","peagreen","peach","peacockblue","pearlgray","pearly","periwinkle","perse","petrolblue","petunia","pewter","pillarboxred","pinegreen","pink","pistachiogreen","platinumblond","platinum","plum","Pompeianred","poppy","powderblue","primrose","Prussianblue","puce","puke","purple","purpure","quartz","quince","raspberry","rawsienna","redviolet","red","reseda","riflegreen","robin_seggblue","rose","rouge","royalblue","royalpurple","ruby","russet","rust","sable","saddlebrown","safetyorange","saffron","sagegreen","salmon","sand","sandy","sanguine","sapphire","sard","saxeblue","scarlet","schoolbusyellow","seagreen","seashell","sepia","shockingpink","sienna","silver","silvergray","skyblue","slate","slateblack","slateblue","slategray","smoke","snow","sorrel","springgreen","stammel","steelblue","stone","straw","strawberry","sulfur","sunflower","tan","tangerine","taupe","taxiyellow","teak","teal","terracotta","timberwolf","titian","topaz","towcolored","Turkeyred","turquoise","Tyrianpurple","ultramarine","umber","Vandykebrown","venetianred","verdant","vermilion","vert","violetred","violet","virid","viridian","vividorange","walnut","Wedgewoodblue","wheat","wheaten","white","wine","xanthic","yellow","zaffre"],expression=/[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/gi,url_regex=new RegExp(expression);function debounce(c,n,t){var e;return function(){var l=this,g=arguments,I=function(){e=null,t||c.apply(l,g)},a=t&&!e;clearTimeout(e),e=setTimeout(I,n),a&&c.apply(l,g)}}function animalGenerator(){return arrAnimals[Math.floor(Math.random()*arrAnimals.length)].toLowerCase()}function colourGenerator(){return arrColours[Math.floor(Math.random()*arrColours.length)].toLowerCase()}function randId(){return Math.random().toString(36).substr(2,10)}function _clone(c){if(!c)return c;var n,t,e;for(e in n=Array.isArray(c)?[]:{},c)t=c[e],n[e]="object"==typeof t?_clone(t):t;return n}const Filters={getPixels:function(c){var n=c;return n.getContext("2d").getImageData(0,0,n.width,n.height)},filterImage:function(c,n){for(var t=[c],e=2;e<arguments.length;e++)t.push(arguments[e]);return n.apply(null,t)},grayscale:function(c){for(var n=c.data,t=0;t<n.length;t+=4){var e=.2126*n[t]+.7152*n[t+1]+.0722*n[t+2];n[t]=n[t+1]=n[t+2]=e}return c},brightness:function(c,n,t){for(var e,l=c.data,g=0;g<l.length;g+=4)(e=parseInt((l[g]-n)*t))>255?e=255:e<0&&(e=0),l[g]=e,l[g+1]=e,l[g+2]=e,l[g+3]=255;return c},min_max:function(c){for(var n=c.data,t=Number.POSITIVE_INFINITY,e=Number.NEGATIVE_INFINITY,l=0,g=0;g<n.length;g+=4)n[g]<t&&(t=n[g]),n[g]>e&&(e=n[g]),l+=n[g]/(n.length/4);return{min:t,max:e,avg:l}},lut:function(c,n){for(var t,e=c.data,l=0;l<e.length;l+=4)t=e[l],e[l]=n[t][0],e[l+1]=n[t][1],e[l+2]=n[t][2],e[l+3]=255;return c}},protocolAndDomainRE=/^(?:\w+:)?\/\/(\S+)$/,localhostDomainRE=/^localhost[\:?\d]*(?:[^\:?\d]\S*)?$/,nonLocalhostDomainRE=/^[^\s\.]+\.\S{2,}$/;function isUrl(c){if("string"!=typeof c)return!1;var n=c.match(protocolAndDomainRE);if(!n)return!1;var t=n[1];return!!t&&!(!localhostDomainRE.test(t)&&!nonLocalhostDomainRE.test(t))}const laxUrlRegex=/(?:(?:[^:]+:)?[/][/])?(?:.+@)?([^/]+)([/][^?#]+)/;function githubUrlToObject(c,n){var t={};if(n=n||{},!c)return null;if(c.url&&(c=c.url),"string"!=typeof c)return null;var e=c.match(/^([\w-_]+)\/([\w-_\.]+)(?:#([\w-_\.]+))?$/),l=c.match(/^github:([\w-_]+)\/([\w-_\.]+)(?:#([\w-_\.]+))?$/),g=c.match(/^git@[\w-_\.]+:([\w-_]+)\/([\w-_\.]+)$/);if(e)t.user=e[1],t.repo=e[2],t.branch=e[3]||"master",t.host="github.com";else if(l)t.user=l[1],t.repo=l[2],t.branch=l[3]||"master",t.host="github.com";else if(g)t.user=g[1],t.repo=g[2].replace(/\.git$/i,""),t.branch="master",t.host="github.com";else{if(!isUrl(c=c.replace(/^git\+/,"")))return null;const[,e,l]=c.match(laxUrlRegex)||[];if(!e)return null;if("github.com"!==e&&"www.github.com"!==e&&!n.enterprise)return null;var I=l.match(/^\/([\w-_]+)\/([\w-_\.]+)(\/tree\/[\w-_\.\/]+)?(\/blob\/[\w-_\.\/]+)?/);if(!I)return null;t.user=I[1],t.repo=I[2].replace(/\.git$/i,""),t.host=e||"github.com",I[3]&&/^\/tree\/master\//.test(I[3])?(t.branch="master",t.path=I[3].replace(/\/$/,"")):I[3]?t.branch=I[3].replace(/^\/tree\//,"").match(/[\w-_.]+\/{0,1}[\w-_]+/)[0]:I[4]?t.branch=I[4].replace(/^\/blob\//,"").match(/[\w-_.]+\/{0,1}[\w-_]+/)[0]:t.branch="master"}return"github.com"===t.host?t.apiHost="api.github.com":t.apiHost=`${t.host}/api/v3`,t.tarball_url=`https://${t.apiHost}/repos/${t.user}/${t.repo}/tarball/${t.branch}`,t.clone_url=`https://${t.host}/${t.user}/${t.repo}`,"master"===t.branch?(t.https_url=`https://${t.host}/${t.user}/${t.repo}`,t.travis_url=`https://travis-ci.org/${t.user}/${t.repo}`,t.zip_url=`https://${t.host}/${t.user}/${t.repo}/archive/master.zip`):(t.https_url=`https://${t.host}/${t.user}/${t.repo}/blob/${t.branch}`,t.travis_url=`https://travis-ci.org/${t.user}/${t.repo}?branch=${t.branch}`,t.zip_url=`https://${t.host}/${t.user}/${t.repo}/archive/${t.branch}.zip`),t.path&&(t.https_url+=t.path),t.api_url=`https://${t.apiHost}/repos/${t.user}/${t.repo}`,t}async function githubUrlRaw(c){if(c.includes("gist.github.com")){const n=c.split("/").slice(-1)[0],t=await axios__WEBPACK_IMPORTED_MODULE_0___default.a.get("https://api.github.com/gists/"+n);if(200===t.status){return Object.values(t.data.files).filter(c=>c.filename.endsWith(".imjoy.html"))[0].raw_url}throw"Failed to fetch from Gist: "+t.statusText}if(!c.includes("blob")||!c.includes("github"))return null;var n=githubUrlToObject(c),t=n.user,e=n.repo,l=new RegExp("^https://github.com/"+t+"/"+e+"/blob/","g");return"https://raw.githubusercontent.com/"+t+"/"+e+"/"+c.replace(l,"")}function githubImJoyManifest(c){var n=githubUrlToObject(c);return"https://raw.githubusercontent.com/"+n.user+"/"+n.repo+"/"+n.branch+"/manifest.imjoy.json"}function githubRepo(c){var n=githubUrlToObject(c);return n.user+"/"+n.repo}const hot_lut=[[10,0,0],[13,0,0],[15,0,0],[18,0,0],[21,0,0],[23,0,0],[26,0,0],[28,0,0],[31,0,0],[34,0,0],[36,0,0],[39,0,0],[42,0,0],[44,0,0],[47,0,0],[49,0,0],[52,0,0],[55,0,0],[57,0,0],[60,0,0],[63,0,0],[65,0,0],[68,0,0],[70,0,0],[73,0,0],[76,0,0],[78,0,0],[81,0,0],[84,0,0],[86,0,0],[89,0,0],[91,0,0],[94,0,0],[97,0,0],[99,0,0],[102,0,0],[105,0,0],[107,0,0],[110,0,0],[112,0,0],[115,0,0],[118,0,0],[120,0,0],[123,0,0],[126,0,0],[128,0,0],[131,0,0],[133,0,0],[136,0,0],[139,0,0],[141,0,0],[144,0,0],[147,0,0],[149,0,0],[152,0,0],[154,0,0],[157,0,0],[160,0,0],[162,0,0],[165,0,0],[168,0,0],[170,0,0],[173,0,0],[175,0,0],[178,0,0],[181,0,0],[183,0,0],[186,0,0],[189,0,0],[191,0,0],[194,0,0],[196,0,0],[199,0,0],[202,0,0],[204,0,0],[207,0,0],[210,0,0],[212,0,0],[215,0,0],[217,0,0],[220,0,0],[223,0,0],[225,0,0],[228,0,0],[231,0,0],[233,0,0],[236,0,0],[238,0,0],[241,0,0],[244,0,0],[246,0,0],[249,0,0],[252,0,0],[254,0,0],[255,2,0],[255,5,0],[255,7,0],[255,10,0],[255,12,0],[255,15,0],[255,18,0],[255,20,0],[255,23,0],[255,26,0],[255,28,0],[255,31,0],[255,33,0],[255,36,0],[255,39,0],[255,41,0],[255,44,0],[255,47,0],[255,49,0],[255,52,0],[255,54,0],[255,57,0],[255,60,0],[255,62,0],[255,65,0],[255,68,0],[255,70,0],[255,73,0],[255,75,0],[255,78,0],[255,81,0],[255,83,0],[255,86,0],[255,89,0],[255,91,0],[255,94,0],[255,96,0],[255,99,0],[255,102,0],[255,104,0],[255,107,0],[255,110,0],[255,112,0],[255,115,0],[255,117,0],[255,120,0],[255,123,0],[255,125,0],[255,128,0],[255,131,0],[255,133,0],[255,136,0],[255,138,0],[255,141,0],[255,144,0],[255,146,0],[255,149,0],[255,151,0],[255,154,0],[255,157,0],[255,159,0],[255,162,0],[255,165,0],[255,167,0],[255,170,0],[255,172,0],[255,175,0],[255,178,0],[255,180,0],[255,183,0],[255,186,0],[255,188,0],[255,191,0],[255,193,0],[255,196,0],[255,199,0],[255,201,0],[255,204,0],[255,207,0],[255,209,0],[255,212,0],[255,214,0],[255,217,0],[255,220,0],[255,222,0],[255,225,0],[255,228,0],[255,230,0],[255,233,0],[255,235,0],[255,238,0],[255,241,0],[255,243,0],[255,246,0],[255,249,0],[255,251,0],[255,254,0],[255,255,2],[255,255,6],[255,255,10],[255,255,14],[255,255,18],[255,255,22],[255,255,26],[255,255,30],[255,255,34],[255,255,38],[255,255,42],[255,255,46],[255,255,50],[255,255,54],[255,255,58],[255,255,62],[255,255,65],[255,255,69],[255,255,73],[255,255,77],[255,255,81],[255,255,85],[255,255,89],[255,255,93],[255,255,97],[255,255,101],[255,255,105],[255,255,109],[255,255,113],[255,255,117],[255,255,121],[255,255,125],[255,255,128],[255,255,132],[255,255,136],[255,255,140],[255,255,144],[255,255,148],[255,255,152],[255,255,156],[255,255,160],[255,255,164],[255,255,168],[255,255,172],[255,255,176],[255,255,180],[255,255,184],[255,255,188],[255,255,191],[255,255,195],[255,255,199],[255,255,203],[255,255,207],[255,255,211],[255,255,215],[255,255,219],[255,255,223],[255,255,227],[255,255,231],[255,255,235],[255,255,239],[255,255,243],[255,255,247],[255,255,251],[255,255,255]]},function(c,n,t){"use strict";var e=t(15),l=["kind","resolve","construct","instanceOf","predicate","represent","defaultStyle","styleAliases"],g=["scalar","sequence","mapping"];c.exports=function(c,n){var t,I;if(n=n||{},Object.keys(n).forEach((function(n){if(-1===l.indexOf(n))throw new e('Unknown option "'+n+'" is met in definition of "'+c+'" YAML type.')})),this.tag=c,this.kind=n.kind||null,this.resolve=n.resolve||function(){return!0},this.construct=n.construct||function(c){return c},this.instanceOf=n.instanceOf||null,this.predicate=n.predicate||null,this.represent=n.represent||null,this.defaultStyle=n.defaultStyle||null,this.styleAliases=(t=n.styleAliases||null,I={},null!==t&&Object.keys(t).forEach((function(c){t[c].forEach((function(n){I[String(n)]=c}))})),I),-1===g.indexOf(this.kind))throw new e('Unknown kind "'+this.kind+'" is specified for "'+c+'" YAML type.')}},function(c,n,t){"use strict";var e,l="object"==typeof Reflect?Reflect:null,g=l&&"function"==typeof l.apply?l.apply:function(c,n,t){return Function.prototype.apply.call(c,n,t)};e=l&&"function"==typeof l.ownKeys?l.ownKeys:Object.getOwnPropertySymbols?function(c){return Object.getOwnPropertyNames(c).concat(Object.getOwnPropertySymbols(c))}:function(c){return Object.getOwnPropertyNames(c)};var I=Number.isNaN||function(c){return c!=c};function a(){a.init.call(this)}c.exports=a,a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var d=10;function i(c){if("function"!=typeof c)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof c)}function C(c){return void 0===c._maxListeners?a.defaultMaxListeners:c._maxListeners}function F(c,n,t,e){var l,g,I,a;if(i(t),void 0===(g=c._events)?(g=c._events=Object.create(null),c._eventsCount=0):(void 0!==g.newListener&&(c.emit("newListener",n,t.listener?t.listener:t),g=c._events),I=g[n]),void 0===I)I=g[n]=t,++c._eventsCount;else if("function"==typeof I?I=g[n]=e?[t,I]:[I,t]:e?I.unshift(t):I.push(t),(l=C(c))>0&&I.length>l&&!I.warned){I.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+I.length+" "+String(n)+" listeners added. Use emitter.setMaxListeners() to increase limit");d.name="MaxListenersExceededWarning",d.emitter=c,d.type=n,d.count=I.length,a=d,console&&console.warn&&console.warn(a)}return c}function r(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function X(c,n,t){var e={fired:!1,wrapFn:void 0,target:c,type:n,listener:t},l=r.bind(e);return l.listener=t,e.wrapFn=l,l}function o(c,n,t){var e=c._events;if(void 0===e)return[];var l=e[n];return void 0===l?[]:"function"==typeof l?t?[l.listener||l]:[l]:t?function(c){for(var n=new Array(c.length),t=0;t<n.length;++t)n[t]=c[t].listener||c[t];return n}(l):Z(l,l.length)}function s(c){var n=this._events;if(void 0!==n){var t=n[c];if("function"==typeof t)return 1;if(void 0!==t)return t.length}return 0}function Z(c,n){for(var t=new Array(n),e=0;e<n;++e)t[e]=c[e];return t}Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return d},set:function(c){if("number"!=typeof c||c<0||I(c))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+c+".");d=c}}),a.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(c){if("number"!=typeof c||c<0||I(c))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+c+".");return this._maxListeners=c,this},a.prototype.getMaxListeners=function(){return C(this)},a.prototype.emit=function(c){for(var n=[],t=1;t<arguments.length;t++)n.push(arguments[t]);var e="error"===c,l=this._events;if(void 0!==l)e=e&&void 0===l.error;else if(!e)return!1;if(e){var I;if(n.length>0&&(I=n[0]),I instanceof Error)throw I;var a=new Error("Unhandled error."+(I?" ("+I.message+")":""));throw a.context=I,a}var d=l[c];if(void 0===d)return!1;if("function"==typeof d)g(d,this,n);else{var i=d.length,C=Z(d,i);for(t=0;t<i;++t)g(C[t],this,n)}return!0},a.prototype.addListener=function(c,n){return F(this,c,n,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(c,n){return F(this,c,n,!0)},a.prototype.once=function(c,n){return i(n),this.on(c,X(this,c,n)),this},a.prototype.prependOnceListener=function(c,n){return i(n),this.prependListener(c,X(this,c,n)),this},a.prototype.removeListener=function(c,n){var t,e,l,g,I;if(i(n),void 0===(e=this._events))return this;if(void 0===(t=e[c]))return this;if(t===n||t.listener===n)0==--this._eventsCount?this._events=Object.create(null):(delete e[c],e.removeListener&&this.emit("removeListener",c,t.listener||n));else if("function"!=typeof t){for(l=-1,g=t.length-1;g>=0;g--)if(t[g]===n||t[g].listener===n){I=t[g].listener,l=g;break}if(l<0)return this;0===l?t.shift():function(c,n){for(;n+1<c.length;n++)c[n]=c[n+1];c.pop()}(t,l),1===t.length&&(e[c]=t[0]),void 0!==e.removeListener&&this.emit("removeListener",c,I||n)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(c){var n,t,e;if(void 0===(t=this._events))return this;if(void 0===t.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==t[c]&&(0==--this._eventsCount?this._events=Object.create(null):delete t[c]),this;if(0===arguments.length){var l,g=Object.keys(t);for(e=0;e<g.length;++e)"removeListener"!==(l=g[e])&&this.removeAllListeners(l);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(n=t[c]))this.removeListener(c,n);else if(void 0!==n)for(e=n.length-1;e>=0;e--)this.removeListener(c,n[e]);return this},a.prototype.listeners=function(c){return o(this,c,!0)},a.prototype.rawListeners=function(c){return o(this,c,!1)},a.listenerCount=function(c,n){return"function"==typeof c.listenerCount?c.listenerCount(n):s.call(c,n)},a.prototype.listenerCount=s,a.prototype.eventNames=function(){return this._eventsCount>0?e(this._events):[]}},function(c,n,t){"use strict";var e=t(32),l=t(57),g=Object.prototype.toString;function I(c){return"[object Array]"===g.call(c)}function a(c){return null!==c&&"object"==typeof c}function d(c){return"[object Function]"===g.call(c)}function i(c,n){if(null!=c)if("object"!=typeof c&&(c=[c]),I(c))for(var t=0,e=c.length;t<e;t++)n.call(null,c[t],t,c);else for(var l in c)Object.prototype.hasOwnProperty.call(c,l)&&n.call(null,c[l],l,c)}c.exports={isArray:I,isArrayBuffer:function(c){return"[object ArrayBuffer]"===g.call(c)},isBuffer:l,isFormData:function(c){return"undefined"!=typeof FormData&&c instanceof FormData},isArrayBufferView:function(c){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(c):c&&c.buffer&&c.buffer instanceof ArrayBuffer},isString:function(c){return"string"==typeof c},isNumber:function(c){return"number"==typeof c},isObject:a,isUndefined:function(c){return void 0===c},isDate:function(c){return"[object Date]"===g.call(c)},isFile:function(c){return"[object File]"===g.call(c)},isBlob:function(c){return"[object Blob]"===g.call(c)},isFunction:d,isStream:function(c){return a(c)&&d(c.pipe)},isURLSearchParams:function(c){return"undefined"!=typeof URLSearchParams&&c instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:i,merge:function c(){var n={};function t(t,e){"object"==typeof n[e]&&"object"==typeof t?n[e]=c(n[e],t):n[e]=t}for(var e=0,l=arguments.length;e<l;e++)i(arguments[e],t);return n},extend:function(c,n,t){return i(n,(function(n,l){c[l]=t&&"function"==typeof n?e(n,t):n})),c},trim:function(c){return c.replace(/^\s*/,"").replace(/\s*$/,"")}}},function(c,n){"function"==typeof Object.create?c.exports=function(c,n){c.super_=n,c.prototype=Object.create(n.prototype,{constructor:{value:c,enumerable:!1,writable:!0,configurable:!0}})}:c.exports=function(c,n){c.super_=n;var t=function(){};t.prototype=n.prototype,c.prototype=new t,c.prototype.constructor=c}},function(c,n,t){"use strict";(function(n){var t,e,l=n.MutationObserver||n.WebKitMutationObserver;if(l){var g=0,I=new l(C),a=n.document.createTextNode("");I.observe(a,{characterData:!0}),t=function(){a.data=g=++g%2}}else if(n.setImmediate||void 0===n.MessageChannel)t="document"in n&&"onreadystatechange"in n.document.createElement("script")?function(){var c=n.document.createElement("script");c.onreadystatechange=function(){C(),c.onreadystatechange=null,c.parentNode.removeChild(c),c=null},n.document.documentElement.appendChild(c)}:function(){setTimeout(C,0)};else{var d=new n.MessageChannel;d.port1.onmessage=C,t=function(){d.port2.postMessage(0)}}var i=[];function C(){var c,n;e=!0;for(var t=i.length;t;){for(n=i,i=[],c=-1;++c<t;)n[c]();t=i.length}e=!1}c.exports=function(c){1!==i.push(c)||e||t()}}).call(this,t(19))},function(c,n,t){(function(c,e){var l;
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */(function(){var g="Expected a function",I="__lodash_placeholder__",a=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],d="[object Arguments]",i="[object Array]",C="[object Boolean]",F="[object Date]",r="[object Error]",X="[object Function]",o="[object GeneratorFunction]",s="[object Map]",Z="[object Number]",B="[object Object]",V="[object RegExp]",A="[object Set]",G="[object String]",b="[object Symbol]",h="[object WeakMap]",U="[object ArrayBuffer]",Q="[object DataView]",u="[object Float32Array]",W="[object Float64Array]",m="[object Int8Array]",R="[object Int16Array]",J="[object Int32Array]",p="[object Uint8Array]",x="[object Uint16Array]",N="[object Uint32Array]",Y=/\b__p \+= '';/g,y=/\b(__p \+=) '' \+/g,S=/(__e\(.*?\)|\b__t\)) \+\n'';/g,k=/&(?:amp|lt|gt|quot|#39);/g,H=/[&<>"']/g,E=RegExp(k.source),T=RegExp(H.source),v=/<%-([\s\S]+?)%>/g,z=/<%([\s\S]+?)%>/g,D=/<%=([\s\S]+?)%>/g,f=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,w=/^\w*$/,j=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,K=/[\\^$.*+?()[\]{}|]/g,M=RegExp(K.source),O=/^\s+|\s+$/g,L=/^\s+/,P=/\s+$/,_=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,q=/\{\n\/\* \[wrapped with (.+)\] \*/,$=/,? & /,cc=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,nc=/\\(\\)?/g,tc=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,ec=/\w*$/,lc=/^[-+]0x[0-9a-f]+$/i,gc=/^0b[01]+$/i,Ic=/^\[object .+?Constructor\]$/,ac=/^0o[0-7]+$/i,dc=/^(?:0|[1-9]\d*)$/,ic=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Cc=/($^)/,Fc=/['\n\r\u2028\u2029\\]/g,rc="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",Xc="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",oc="[\\ud800-\\udfff]",sc="["+Xc+"]",Zc="["+rc+"]",Bc="\\d+",Vc="[\\u2700-\\u27bf]",Ac="[a-z\\xdf-\\xf6\\xf8-\\xff]",Gc="[^\\ud800-\\udfff"+Xc+Bc+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",bc="\\ud83c[\\udffb-\\udfff]",hc="[^\\ud800-\\udfff]",Uc="(?:\\ud83c[\\udde6-\\uddff]){2}",Qc="[\\ud800-\\udbff][\\udc00-\\udfff]",uc="[A-Z\\xc0-\\xd6\\xd8-\\xde]",Wc="(?:"+Ac+"|"+Gc+")",mc="(?:"+uc+"|"+Gc+")",Rc="(?:"+Zc+"|"+bc+")"+"?",Jc="[\\ufe0e\\ufe0f]?"+Rc+("(?:\\u200d(?:"+[hc,Uc,Qc].join("|")+")[\\ufe0e\\ufe0f]?"+Rc+")*"),pc="(?:"+[Vc,Uc,Qc].join("|")+")"+Jc,xc="(?:"+[hc+Zc+"?",Zc,Uc,Qc,oc].join("|")+")",Nc=RegExp("['â]","g"),Yc=RegExp(Zc,"g"),yc=RegExp(bc+"(?="+bc+")|"+xc+Jc,"g"),Sc=RegExp([uc+"?"+Ac+"+(?:['â](?:d|ll|m|re|s|t|ve))?(?="+[sc,uc,"$"].join("|")+")",mc+"+(?:['â](?:D|LL|M|RE|S|T|VE))?(?="+[sc,uc+Wc,"$"].join("|")+")",uc+"?"+Wc+"+(?:['â](?:d|ll|m|re|s|t|ve))?",uc+"+(?:['â](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Bc,pc].join("|"),"g"),kc=RegExp("[\\u200d\\ud800-\\udfff"+rc+"\\ufe0e\\ufe0f]"),Hc=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Ec=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Tc=-1,vc={};vc[u]=vc[W]=vc[m]=vc[R]=vc[J]=vc[p]=vc["[object Uint8ClampedArray]"]=vc[x]=vc[N]=!0,vc[d]=vc[i]=vc[U]=vc[C]=vc[Q]=vc[F]=vc[r]=vc[X]=vc[s]=vc[Z]=vc[B]=vc[V]=vc[A]=vc[G]=vc[h]=!1;var zc={};zc[d]=zc[i]=zc[U]=zc[Q]=zc[C]=zc[F]=zc[u]=zc[W]=zc[m]=zc[R]=zc[J]=zc[s]=zc[Z]=zc[B]=zc[V]=zc[A]=zc[G]=zc[b]=zc[p]=zc["[object Uint8ClampedArray]"]=zc[x]=zc[N]=!0,zc[r]=zc[X]=zc[h]=!1;var Dc={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},fc=parseFloat,wc=parseInt,jc="object"==typeof c&&c&&c.Object===Object&&c,Kc="object"==typeof self&&self&&self.Object===Object&&self,Mc=jc||Kc||Function("return this")(),Oc=n&&!n.nodeType&&n,Lc=Oc&&"object"==typeof e&&e&&!e.nodeType&&e,Pc=Lc&&Lc.exports===Oc,_c=Pc&&jc.process,qc=function(){try{var c=Lc&&Lc.require&&Lc.require("util").types;return c||_c&&_c.binding&&_c.binding("util")}catch(c){}}(),$c=qc&&qc.isArrayBuffer,cn=qc&&qc.isDate,nn=qc&&qc.isMap,tn=qc&&qc.isRegExp,en=qc&&qc.isSet,ln=qc&&qc.isTypedArray;function gn(c,n,t){switch(t.length){case 0:return c.call(n);case 1:return c.call(n,t[0]);case 2:return c.call(n,t[0],t[1]);case 3:return c.call(n,t[0],t[1],t[2])}return c.apply(n,t)}function In(c,n,t,e){for(var l=-1,g=null==c?0:c.length;++l<g;){var I=c[l];n(e,I,t(I),c)}return e}function an(c,n){for(var t=-1,e=null==c?0:c.length;++t<e&&!1!==n(c[t],t,c););return c}function dn(c,n){for(var t=null==c?0:c.length;t--&&!1!==n(c[t],t,c););return c}function Cn(c,n){for(var t=-1,e=null==c?0:c.length;++t<e;)if(!n(c[t],t,c))return!1;return!0}function Fn(c,n){for(var t=-1,e=null==c?0:c.length,l=0,g=[];++t<e;){var I=c[t];n(I,t,c)&&(g[l++]=I)}return g}function rn(c,n){return!!(null==c?0:c.length)&&hn(c,n,0)>-1}function Xn(c,n,t){for(var e=-1,l=null==c?0:c.length;++e<l;)if(t(n,c[e]))return!0;return!1}function on(c,n){for(var t=-1,e=null==c?0:c.length,l=Array(e);++t<e;)l[t]=n(c[t],t,c);return l}function sn(c,n){for(var t=-1,e=n.length,l=c.length;++t<e;)c[l+t]=n[t];return c}function Zn(c,n,t,e){var l=-1,g=null==c?0:c.length;for(e&&g&&(t=c[++l]);++l<g;)t=n(t,c[l],l,c);return t}function Bn(c,n,t,e){var l=null==c?0:c.length;for(e&&l&&(t=c[--l]);l--;)t=n(t,c[l],l,c);return t}function Vn(c,n){for(var t=-1,e=null==c?0:c.length;++t<e;)if(n(c[t],t,c))return!0;return!1}var An=Wn("length");function Gn(c,n,t){var e;return t(c,(function(c,t,l){if(n(c,t,l))return e=t,!1})),e}function bn(c,n,t,e){for(var l=c.length,g=t+(e?1:-1);e?g--:++g<l;)if(n(c[g],g,c))return g;return-1}function hn(c,n,t){return n==n?function(c,n,t){var e=t-1,l=c.length;for(;++e<l;)if(c[e]===n)return e;return-1}(c,n,t):bn(c,Qn,t)}function Un(c,n,t,e){for(var l=t-1,g=c.length;++l<g;)if(e(c[l],n))return l;return-1}function Qn(c){return c!=c}function un(c,n){var t=null==c?0:c.length;return t?Jn(c,n)/t:NaN}function Wn(c){return function(n){return null==n?void 0:n[c]}}function mn(c){return function(n){return null==c?void 0:c[n]}}function Rn(c,n,t,e,l){return l(c,(function(c,l,g){t=e?(e=!1,c):n(t,c,l,g)})),t}function Jn(c,n){for(var t,e=-1,l=c.length;++e<l;){var g=n(c[e]);void 0!==g&&(t=void 0===t?g:t+g)}return t}function pn(c,n){for(var t=-1,e=Array(c);++t<c;)e[t]=n(t);return e}function xn(c){return function(n){return c(n)}}function Nn(c,n){return on(n,(function(n){return c[n]}))}function Yn(c,n){return c.has(n)}function yn(c,n){for(var t=-1,e=c.length;++t<e&&hn(n,c[t],0)>-1;);return t}function Sn(c,n){for(var t=c.length;t--&&hn(n,c[t],0)>-1;);return t}function kn(c,n){for(var t=c.length,e=0;t--;)c[t]===n&&++e;return e}var Hn=mn({"Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã":"A","Ã ":"a","Ã¡":"a","Ã¢":"a","Ã£":"a","Ã¤":"a","Ã¥":"a","Ã":"C","Ã§":"c","Ã":"D","Ã°":"d","Ã":"E","Ã":"E","Ã":"E","Ã":"E","Ã¨":"e","Ã©":"e","Ãª":"e","Ã«":"e","Ã":"I","Ã":"I","Ã":"I","Ã":"I","Ã¬":"i","Ã­":"i","Ã®":"i","Ã¯":"i","Ã":"N","Ã±":"n","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã":"O","Ã²":"o","Ã³":"o","Ã´":"o","Ãµ":"o","Ã¶":"o","Ã¸":"o","Ã":"U","Ã":"U","Ã":"U","Ã":"U","Ã¹":"u","Ãº":"u","Ã»":"u","Ã¼":"u","Ã":"Y","Ã½":"y","Ã¿":"y","Ã":"Ae","Ã¦":"ae","Ã":"Th","Ã¾":"th","Ã":"ss","Ä":"A","Ä":"A","Ä":"A","Ä":"a","Ä":"a","Ä":"a","Ä":"C","Ä":"C","Ä":"C","Ä":"C","Ä":"c","Ä":"c","Ä":"c","Ä":"c","Ä":"D","Ä":"D","Ä":"d","Ä":"d","Ä":"E","Ä":"E","Ä":"E","Ä":"E","Ä":"E","Ä":"e","Ä":"e","Ä":"e","Ä":"e","Ä":"e","Ä":"G","Ä":"G","Ä ":"G","Ä¢":"G","Ä":"g","Ä":"g","Ä¡":"g","Ä£":"g","Ä¤":"H","Ä¦":"H","Ä¥":"h","Ä§":"h","Ä¨":"I","Äª":"I","Ä¬":"I","Ä®":"I","Ä°":"I","Ä©":"i","Ä«":"i","Ä­":"i","Ä¯":"i","Ä±":"i","Ä´":"J","Äµ":"j","Ä¶":"K","Ä·":"k","Ä¸":"k","Ä¹":"L","Ä»":"L","Ä½":"L","Ä¿":"L","Å":"L","Äº":"l","Ä¼":"l","Ä¾":"l","Å":"l","Å":"l","Å":"N","Å":"N","Å":"N","Å":"N","Å":"n","Å":"n","Å":"n","Å":"n","Å":"O","Å":"O","Å":"O","Å":"o","Å":"o","Å":"o","Å":"R","Å":"R","Å":"R","Å":"r","Å":"r","Å":"r","Å":"S","Å":"S","Å":"S","Å ":"S","Å":"s","Å":"s","Å":"s","Å¡":"s","Å¢":"T","Å¤":"T","Å¦":"T","Å£":"t","Å¥":"t","Å§":"t","Å¨":"U","Åª":"U","Å¬":"U","Å®":"U","Å°":"U","Å²":"U","Å©":"u","Å«":"u","Å­":"u","Å¯":"u","Å±":"u","Å³":"u","Å´":"W","Åµ":"w","Å¶":"Y","Å·":"y","Å¸":"Y","Å¹":"Z","Å»":"Z","Å½":"Z","Åº":"z","Å¼":"z","Å¾":"z","Ä²":"IJ","Ä³":"ij","Å":"Oe","Å":"oe","Å":"'n","Å¿":"s"}),En=mn({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Tn(c){return"\\"+Dc[c]}function vn(c){return kc.test(c)}function zn(c){var n=-1,t=Array(c.size);return c.forEach((function(c,e){t[++n]=[e,c]})),t}function Dn(c,n){return function(t){return c(n(t))}}function fn(c,n){for(var t=-1,e=c.length,l=0,g=[];++t<e;){var a=c[t];a!==n&&a!==I||(c[t]=I,g[l++]=t)}return g}function wn(c){var n=-1,t=Array(c.size);return c.forEach((function(c){t[++n]=c})),t}function jn(c){var n=-1,t=Array(c.size);return c.forEach((function(c){t[++n]=[c,c]})),t}function Kn(c){return vn(c)?function(c){var n=yc.lastIndex=0;for(;yc.test(c);)++n;return n}(c):An(c)}function Mn(c){return vn(c)?function(c){return c.match(yc)||[]}(c):function(c){return c.split("")}(c)}var On=mn({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var Ln=function c(n){var t,e=(n=null==n?Mc:Ln.defaults(Mc.Object(),n,Ln.pick(Mc,Ec))).Array,l=n.Date,rc=n.Error,Xc=n.Function,oc=n.Math,sc=n.Object,Zc=n.RegExp,Bc=n.String,Vc=n.TypeError,Ac=e.prototype,Gc=Xc.prototype,bc=sc.prototype,hc=n["__core-js_shared__"],Uc=Gc.toString,Qc=bc.hasOwnProperty,uc=0,Wc=(t=/[^.]+$/.exec(hc&&hc.keys&&hc.keys.IE_PROTO||""))?"Symbol(src)_1."+t:"",mc=bc.toString,Rc=Uc.call(sc),Jc=Mc._,pc=Zc("^"+Uc.call(Qc).replace(K,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),xc=Pc?n.Buffer:void 0,yc=n.Symbol,kc=n.Uint8Array,Dc=xc?xc.allocUnsafe:void 0,jc=Dn(sc.getPrototypeOf,sc),Kc=sc.create,Oc=bc.propertyIsEnumerable,Lc=Ac.splice,_c=yc?yc.isConcatSpreadable:void 0,qc=yc?yc.iterator:void 0,An=yc?yc.toStringTag:void 0,mn=function(){try{var c=$l(sc,"defineProperty");return c({},"",{}),c}catch(c){}}(),Pn=n.clearTimeout!==Mc.clearTimeout&&n.clearTimeout,_n=l&&l.now!==Mc.Date.now&&l.now,qn=n.setTimeout!==Mc.setTimeout&&n.setTimeout,$n=oc.ceil,ct=oc.floor,nt=sc.getOwnPropertySymbols,tt=xc?xc.isBuffer:void 0,et=n.isFinite,lt=Ac.join,gt=Dn(sc.keys,sc),It=oc.max,at=oc.min,dt=l.now,it=n.parseInt,Ct=oc.random,Ft=Ac.reverse,rt=$l(n,"DataView"),Xt=$l(n,"Map"),ot=$l(n,"Promise"),st=$l(n,"Set"),Zt=$l(n,"WeakMap"),Bt=$l(sc,"create"),Vt=Zt&&new Zt,At={},Gt=Wg(rt),bt=Wg(Xt),ht=Wg(ot),Ut=Wg(st),Qt=Wg(Zt),ut=yc?yc.prototype:void 0,Wt=ut?ut.valueOf:void 0,mt=ut?ut.toString:void 0;function Rt(c){if(fI(c)&&!NI(c)&&!(c instanceof Nt)){if(c instanceof xt)return c;if(Qc.call(c,"__wrapped__"))return mg(c)}return new xt(c)}var Jt=function(){function c(){}return function(n){if(!DI(n))return{};if(Kc)return Kc(n);c.prototype=n;var t=new c;return c.prototype=void 0,t}}();function pt(){}function xt(c,n){this.__wrapped__=c,this.__actions__=[],this.__chain__=!!n,this.__index__=0,this.__values__=void 0}function Nt(c){this.__wrapped__=c,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Yt(c){var n=-1,t=null==c?0:c.length;for(this.clear();++n<t;){var e=c[n];this.set(e[0],e[1])}}function yt(c){var n=-1,t=null==c?0:c.length;for(this.clear();++n<t;){var e=c[n];this.set(e[0],e[1])}}function St(c){var n=-1,t=null==c?0:c.length;for(this.clear();++n<t;){var e=c[n];this.set(e[0],e[1])}}function kt(c){var n=-1,t=null==c?0:c.length;for(this.__data__=new St;++n<t;)this.add(c[n])}function Ht(c){var n=this.__data__=new yt(c);this.size=n.size}function Et(c,n){var t=NI(c),e=!t&&xI(c),l=!t&&!e&&kI(c),g=!t&&!e&&!l&&_I(c),I=t||e||l||g,a=I?pn(c.length,Bc):[],d=a.length;for(var i in c)!n&&!Qc.call(c,i)||I&&("length"==i||l&&("offset"==i||"parent"==i)||g&&("buffer"==i||"byteLength"==i||"byteOffset"==i)||Ig(i,d))||a.push(i);return a}function Tt(c){var n=c.length;return n?c[ke(0,n-1)]:void 0}function vt(c,n){return Ug(Bl(c),Lt(n,0,c.length))}function zt(c){return Ug(Bl(c))}function Dt(c,n,t){(void 0===t||RI(c[n],t))&&(void 0!==t||n in c)||Mt(c,n,t)}function ft(c,n,t){var e=c[n];Qc.call(c,n)&&RI(e,t)&&(void 0!==t||n in c)||Mt(c,n,t)}function wt(c,n){for(var t=c.length;t--;)if(RI(c[t][0],n))return t;return-1}function jt(c,n,t,e){return ce(c,(function(c,l,g){n(e,c,t(c),g)})),e}function Kt(c,n){return c&&Vl(n,Aa(n),c)}function Mt(c,n,t){"__proto__"==n&&mn?mn(c,n,{configurable:!0,enumerable:!0,value:t,writable:!0}):c[n]=t}function Ot(c,n){for(var t=-1,l=n.length,g=e(l),I=null==c;++t<l;)g[t]=I?void 0:oa(c,n[t]);return g}function Lt(c,n,t){return c==c&&(void 0!==t&&(c=c<=t?c:t),void 0!==n&&(c=c>=n?c:n)),c}function Pt(c,n,t,e,l,g){var I,a=1&n,i=2&n,r=4&n;if(t&&(I=l?t(c,e,l,g):t(c)),void 0!==I)return I;if(!DI(c))return c;var h=NI(c);if(h){if(I=function(c){var n=c.length,t=new c.constructor(n);n&&"string"==typeof c[0]&&Qc.call(c,"index")&&(t.index=c.index,t.input=c.input);return t}(c),!a)return Bl(c,I)}else{var Y=tg(c),y=Y==X||Y==o;if(kI(c))return Fl(c,a);if(Y==B||Y==d||y&&!l){if(I=i||y?{}:lg(c),!a)return i?function(c,n){return Vl(c,ng(c),n)}(c,function(c,n){return c&&Vl(n,Ga(n),c)}(I,c)):function(c,n){return Vl(c,cg(c),n)}(c,Kt(I,c))}else{if(!zc[Y])return l?c:{};I=function(c,n,t){var e=c.constructor;switch(n){case U:return rl(c);case C:case F:return new e(+c);case Q:return function(c,n){var t=n?rl(c.buffer):c.buffer;return new c.constructor(t,c.byteOffset,c.byteLength)}(c,t);case u:case W:case m:case R:case J:case p:case"[object Uint8ClampedArray]":case x:case N:return Xl(c,t);case s:return new e;case Z:case G:return new e(c);case V:return function(c){var n=new c.constructor(c.source,ec.exec(c));return n.lastIndex=c.lastIndex,n}(c);case A:return new e;case b:return l=c,Wt?sc(Wt.call(l)):{}}var l}(c,Y,a)}}g||(g=new Ht);var S=g.get(c);if(S)return S;g.set(c,I),OI(c)?c.forEach((function(e){I.add(Pt(e,n,t,e,c,g))})):wI(c)&&c.forEach((function(e,l){I.set(l,Pt(e,n,t,l,c,g))}));var k=h?void 0:(r?i?Kl:jl:i?Ga:Aa)(c);return an(k||c,(function(e,l){k&&(e=c[l=e]),ft(I,l,Pt(e,n,t,l,c,g))})),I}function _t(c,n,t){var e=t.length;if(null==c)return!e;for(c=sc(c);e--;){var l=t[e],g=n[l],I=c[l];if(void 0===I&&!(l in c)||!g(I))return!1}return!0}function qt(c,n,t){if("function"!=typeof c)throw new Vc(g);return Ag((function(){c.apply(void 0,t)}),n)}function $t(c,n,t,e){var l=-1,g=rn,I=!0,a=c.length,d=[],i=n.length;if(!a)return d;t&&(n=on(n,xn(t))),e?(g=Xn,I=!1):n.length>=200&&(g=Yn,I=!1,n=new kt(n));c:for(;++l<a;){var C=c[l],F=null==t?C:t(C);if(C=e||0!==C?C:0,I&&F==F){for(var r=i;r--;)if(n[r]===F)continue c;d.push(C)}else g(n,F,e)||d.push(C)}return d}Rt.templateSettings={escape:v,evaluate:z,interpolate:D,variable:"",imports:{_:Rt}},Rt.prototype=pt.prototype,Rt.prototype.constructor=Rt,xt.prototype=Jt(pt.prototype),xt.prototype.constructor=xt,Nt.prototype=Jt(pt.prototype),Nt.prototype.constructor=Nt,Yt.prototype.clear=function(){this.__data__=Bt?Bt(null):{},this.size=0},Yt.prototype.delete=function(c){var n=this.has(c)&&delete this.__data__[c];return this.size-=n?1:0,n},Yt.prototype.get=function(c){var n=this.__data__;if(Bt){var t=n[c];return"__lodash_hash_undefined__"===t?void 0:t}return Qc.call(n,c)?n[c]:void 0},Yt.prototype.has=function(c){var n=this.__data__;return Bt?void 0!==n[c]:Qc.call(n,c)},Yt.prototype.set=function(c,n){var t=this.__data__;return this.size+=this.has(c)?0:1,t[c]=Bt&&void 0===n?"__lodash_hash_undefined__":n,this},yt.prototype.clear=function(){this.__data__=[],this.size=0},yt.prototype.delete=function(c){var n=this.__data__,t=wt(n,c);return!(t<0)&&(t==n.length-1?n.pop():Lc.call(n,t,1),--this.size,!0)},yt.prototype.get=function(c){var n=this.__data__,t=wt(n,c);return t<0?void 0:n[t][1]},yt.prototype.has=function(c){return wt(this.__data__,c)>-1},yt.prototype.set=function(c,n){var t=this.__data__,e=wt(t,c);return e<0?(++this.size,t.push([c,n])):t[e][1]=n,this},St.prototype.clear=function(){this.size=0,this.__data__={hash:new Yt,map:new(Xt||yt),string:new Yt}},St.prototype.delete=function(c){var n=_l(this,c).delete(c);return this.size-=n?1:0,n},St.prototype.get=function(c){return _l(this,c).get(c)},St.prototype.has=function(c){return _l(this,c).has(c)},St.prototype.set=function(c,n){var t=_l(this,c),e=t.size;return t.set(c,n),this.size+=t.size==e?0:1,this},kt.prototype.add=kt.prototype.push=function(c){return this.__data__.set(c,"__lodash_hash_undefined__"),this},kt.prototype.has=function(c){return this.__data__.has(c)},Ht.prototype.clear=function(){this.__data__=new yt,this.size=0},Ht.prototype.delete=function(c){var n=this.__data__,t=n.delete(c);return this.size=n.size,t},Ht.prototype.get=function(c){return this.__data__.get(c)},Ht.prototype.has=function(c){return this.__data__.has(c)},Ht.prototype.set=function(c,n){var t=this.__data__;if(t instanceof yt){var e=t.__data__;if(!Xt||e.length<199)return e.push([c,n]),this.size=++t.size,this;t=this.__data__=new St(e)}return t.set(c,n),this.size=t.size,this};var ce=bl(de),ne=bl(ie,!0);function te(c,n){var t=!0;return ce(c,(function(c,e,l){return t=!!n(c,e,l)})),t}function ee(c,n,t){for(var e=-1,l=c.length;++e<l;){var g=c[e],I=n(g);if(null!=I&&(void 0===a?I==I&&!PI(I):t(I,a)))var a=I,d=g}return d}function le(c,n){var t=[];return ce(c,(function(c,e,l){n(c,e,l)&&t.push(c)})),t}function ge(c,n,t,e,l){var g=-1,I=c.length;for(t||(t=gg),l||(l=[]);++g<I;){var a=c[g];n>0&&t(a)?n>1?ge(a,n-1,t,e,l):sn(l,a):e||(l[l.length]=a)}return l}var Ie=hl(),ae=hl(!0);function de(c,n){return c&&Ie(c,n,Aa)}function ie(c,n){return c&&ae(c,n,Aa)}function Ce(c,n){return Fn(n,(function(n){return TI(c[n])}))}function Fe(c,n){for(var t=0,e=(n=al(n,c)).length;null!=c&&t<e;)c=c[ug(n[t++])];return t&&t==e?c:void 0}function re(c,n,t){var e=n(c);return NI(c)?e:sn(e,t(c))}function Xe(c){return null==c?void 0===c?"[object Undefined]":"[object Null]":An&&An in sc(c)?function(c){var n=Qc.call(c,An),t=c[An];try{c[An]=void 0;var e=!0}catch(c){}var l=mc.call(c);e&&(n?c[An]=t:delete c[An]);return l}(c):function(c){return mc.call(c)}(c)}function oe(c,n){return c>n}function se(c,n){return null!=c&&Qc.call(c,n)}function Ze(c,n){return null!=c&&n in sc(c)}function Be(c,n,t){for(var l=t?Xn:rn,g=c[0].length,I=c.length,a=I,d=e(I),i=1/0,C=[];a--;){var F=c[a];a&&n&&(F=on(F,xn(n))),i=at(F.length,i),d[a]=!t&&(n||g>=120&&F.length>=120)?new kt(a&&F):void 0}F=c[0];var r=-1,X=d[0];c:for(;++r<g&&C.length<i;){var o=F[r],s=n?n(o):o;if(o=t||0!==o?o:0,!(X?Yn(X,s):l(C,s,t))){for(a=I;--a;){var Z=d[a];if(!(Z?Yn(Z,s):l(c[a],s,t)))continue c}X&&X.push(s),C.push(o)}}return C}function Ve(c,n,t){var e=null==(c=sg(c,n=al(n,c)))?c:c[ug(Eg(n))];return null==e?void 0:gn(e,c,t)}function Ae(c){return fI(c)&&Xe(c)==d}function Ge(c,n,t,e,l){return c===n||(null==c||null==n||!fI(c)&&!fI(n)?c!=c&&n!=n:function(c,n,t,e,l,g){var I=NI(c),a=NI(n),X=I?i:tg(c),o=a?i:tg(n),h=(X=X==d?B:X)==B,u=(o=o==d?B:o)==B,W=X==o;if(W&&kI(c)){if(!kI(n))return!1;I=!0,h=!1}if(W&&!h)return g||(g=new Ht),I||_I(c)?fl(c,n,t,e,l,g):function(c,n,t,e,l,g,I){switch(t){case Q:if(c.byteLength!=n.byteLength||c.byteOffset!=n.byteOffset)return!1;c=c.buffer,n=n.buffer;case U:return!(c.byteLength!=n.byteLength||!g(new kc(c),new kc(n)));case C:case F:case Z:return RI(+c,+n);case r:return c.name==n.name&&c.message==n.message;case V:case G:return c==n+"";case s:var a=zn;case A:var d=1&e;if(a||(a=wn),c.size!=n.size&&!d)return!1;var i=I.get(c);if(i)return i==n;e|=2,I.set(c,n);var X=fl(a(c),a(n),e,l,g,I);return I.delete(c),X;case b:if(Wt)return Wt.call(c)==Wt.call(n)}return!1}(c,n,X,t,e,l,g);if(!(1&t)){var m=h&&Qc.call(c,"__wrapped__"),R=u&&Qc.call(n,"__wrapped__");if(m||R){var J=m?c.value():c,p=R?n.value():n;return g||(g=new Ht),l(J,p,t,e,g)}}if(!W)return!1;return g||(g=new Ht),function(c,n,t,e,l,g){var I=1&t,a=jl(c),d=a.length,i=jl(n).length;if(d!=i&&!I)return!1;var C=d;for(;C--;){var F=a[C];if(!(I?F in n:Qc.call(n,F)))return!1}var r=g.get(c);if(r&&g.get(n))return r==n;var X=!0;g.set(c,n),g.set(n,c);var o=I;for(;++C<d;){F=a[C];var s=c[F],Z=n[F];if(e)var B=I?e(Z,s,F,n,c,g):e(s,Z,F,c,n,g);if(!(void 0===B?s===Z||l(s,Z,t,e,g):B)){X=!1;break}o||(o="constructor"==F)}if(X&&!o){var V=c.constructor,A=n.constructor;V!=A&&"constructor"in c&&"constructor"in n&&!("function"==typeof V&&V instanceof V&&"function"==typeof A&&A instanceof A)&&(X=!1)}return g.delete(c),g.delete(n),X}(c,n,t,e,l,g)}(c,n,t,e,Ge,l))}function be(c,n,t,e){var l=t.length,g=l,I=!e;if(null==c)return!g;for(c=sc(c);l--;){var a=t[l];if(I&&a[2]?a[1]!==c[a[0]]:!(a[0]in c))return!1}for(;++l<g;){var d=(a=t[l])[0],i=c[d],C=a[1];if(I&&a[2]){if(void 0===i&&!(d in c))return!1}else{var F=new Ht;if(e)var r=e(i,C,d,c,n,F);if(!(void 0===r?Ge(C,i,3,e,F):r))return!1}}return!0}function he(c){return!(!DI(c)||(n=c,Wc&&Wc in n))&&(TI(c)?pc:Ic).test(Wg(c));var n}function Ue(c){return"function"==typeof c?c:null==c?ja:"object"==typeof c?NI(c)?Je(c[0],c[1]):Re(c):cd(c)}function Qe(c){if(!Fg(c))return gt(c);var n=[];for(var t in sc(c))Qc.call(c,t)&&"constructor"!=t&&n.push(t);return n}function ue(c){if(!DI(c))return function(c){var n=[];if(null!=c)for(var t in sc(c))n.push(t);return n}(c);var n=Fg(c),t=[];for(var e in c)("constructor"!=e||!n&&Qc.call(c,e))&&t.push(e);return t}function We(c,n){return c<n}function me(c,n){var t=-1,l=yI(c)?e(c.length):[];return ce(c,(function(c,e,g){l[++t]=n(c,e,g)})),l}function Re(c){var n=ql(c);return 1==n.length&&n[0][2]?Xg(n[0][0],n[0][1]):function(t){return t===c||be(t,c,n)}}function Je(c,n){return dg(c)&&rg(n)?Xg(ug(c),n):function(t){var e=oa(t,c);return void 0===e&&e===n?sa(t,c):Ge(n,e,3)}}function pe(c,n,t,e,l){c!==n&&Ie(n,(function(g,I){if(l||(l=new Ht),DI(g))!function(c,n,t,e,l,g,I){var a=Bg(c,t),d=Bg(n,t),i=I.get(d);if(i)return void Dt(c,t,i);var C=g?g(a,d,t+"",c,n,I):void 0,F=void 0===C;if(F){var r=NI(d),X=!r&&kI(d),o=!r&&!X&&_I(d);C=d,r||X||o?NI(a)?C=a:SI(a)?C=Bl(a):X?(F=!1,C=Fl(d,!0)):o?(F=!1,C=Xl(d,!0)):C=[]:KI(d)||xI(d)?(C=a,xI(a)?C=ga(a):DI(a)&&!TI(a)||(C=lg(d))):F=!1}F&&(I.set(d,C),l(C,d,e,g,I),I.delete(d));Dt(c,t,C)}(c,n,I,t,pe,e,l);else{var a=e?e(Bg(c,I),g,I+"",c,n,l):void 0;void 0===a&&(a=g),Dt(c,I,a)}}),Ga)}function xe(c,n){var t=c.length;if(t)return Ig(n+=n<0?t:0,t)?c[n]:void 0}function Ne(c,n,t){var e=-1;return n=on(n.length?n:[ja],xn(Pl())),function(c,n){var t=c.length;for(c.sort(n);t--;)c[t]=c[t].value;return c}(me(c,(function(c,t,l){return{criteria:on(n,(function(n){return n(c)})),index:++e,value:c}})),(function(c,n){return function(c,n,t){var e=-1,l=c.criteria,g=n.criteria,I=l.length,a=t.length;for(;++e<I;){var d=ol(l[e],g[e]);if(d){if(e>=a)return d;var i=t[e];return d*("desc"==i?-1:1)}}return c.index-n.index}(c,n,t)}))}function Ye(c,n,t){for(var e=-1,l=n.length,g={};++e<l;){var I=n[e],a=Fe(c,I);t(a,I)&&ze(g,al(I,c),a)}return g}function ye(c,n,t,e){var l=e?Un:hn,g=-1,I=n.length,a=c;for(c===n&&(n=Bl(n)),t&&(a=on(c,xn(t)));++g<I;)for(var d=0,i=n[g],C=t?t(i):i;(d=l(a,C,d,e))>-1;)a!==c&&Lc.call(a,d,1),Lc.call(c,d,1);return c}function Se(c,n){for(var t=c?n.length:0,e=t-1;t--;){var l=n[t];if(t==e||l!==g){var g=l;Ig(l)?Lc.call(c,l,1):$e(c,l)}}return c}function ke(c,n){return c+ct(Ct()*(n-c+1))}function He(c,n){var t="";if(!c||n<1||n>9007199254740991)return t;do{n%2&&(t+=c),(n=ct(n/2))&&(c+=c)}while(n);return t}function Ee(c,n){return Gg(og(c,n,ja),c+"")}function Te(c){return Tt(Ra(c))}function ve(c,n){var t=Ra(c);return Ug(t,Lt(n,0,t.length))}function ze(c,n,t,e){if(!DI(c))return c;for(var l=-1,g=(n=al(n,c)).length,I=g-1,a=c;null!=a&&++l<g;){var d=ug(n[l]),i=t;if(l!=I){var C=a[d];void 0===(i=e?e(C,d,a):void 0)&&(i=DI(C)?C:Ig(n[l+1])?[]:{})}ft(a,d,i),a=a[d]}return c}var De=Vt?function(c,n){return Vt.set(c,n),c}:ja,fe=mn?function(c,n){return mn(c,"toString",{configurable:!0,enumerable:!1,value:Da(n),writable:!0})}:ja;function we(c){return Ug(Ra(c))}function je(c,n,t){var l=-1,g=c.length;n<0&&(n=-n>g?0:g+n),(t=t>g?g:t)<0&&(t+=g),g=n>t?0:t-n>>>0,n>>>=0;for(var I=e(g);++l<g;)I[l]=c[l+n];return I}function Ke(c,n){var t;return ce(c,(function(c,e,l){return!(t=n(c,e,l))})),!!t}function Me(c,n,t){var e=0,l=null==c?e:c.length;if("number"==typeof n&&n==n&&l<=2147483647){for(;e<l;){var g=e+l>>>1,I=c[g];null!==I&&!PI(I)&&(t?I<=n:I<n)?e=g+1:l=g}return l}return Oe(c,n,ja,t)}function Oe(c,n,t,e){n=t(n);for(var l=0,g=null==c?0:c.length,I=n!=n,a=null===n,d=PI(n),i=void 0===n;l<g;){var C=ct((l+g)/2),F=t(c[C]),r=void 0!==F,X=null===F,o=F==F,s=PI(F);if(I)var Z=e||o;else Z=i?o&&(e||r):a?o&&r&&(e||!X):d?o&&r&&!X&&(e||!s):!X&&!s&&(e?F<=n:F<n);Z?l=C+1:g=C}return at(g,4294967294)}function Le(c,n){for(var t=-1,e=c.length,l=0,g=[];++t<e;){var I=c[t],a=n?n(I):I;if(!t||!RI(a,d)){var d=a;g[l++]=0===I?0:I}}return g}function Pe(c){return"number"==typeof c?c:PI(c)?NaN:+c}function _e(c){if("string"==typeof c)return c;if(NI(c))return on(c,_e)+"";if(PI(c))return mt?mt.call(c):"";var n=c+"";return"0"==n&&1/c==-1/0?"-0":n}function qe(c,n,t){var e=-1,l=rn,g=c.length,I=!0,a=[],d=a;if(t)I=!1,l=Xn;else if(g>=200){var i=n?null:Hl(c);if(i)return wn(i);I=!1,l=Yn,d=new kt}else d=n?[]:a;c:for(;++e<g;){var C=c[e],F=n?n(C):C;if(C=t||0!==C?C:0,I&&F==F){for(var r=d.length;r--;)if(d[r]===F)continue c;n&&d.push(F),a.push(C)}else l(d,F,t)||(d!==a&&d.push(F),a.push(C))}return a}function $e(c,n){return null==(c=sg(c,n=al(n,c)))||delete c[ug(Eg(n))]}function cl(c,n,t,e){return ze(c,n,t(Fe(c,n)),e)}function nl(c,n,t,e){for(var l=c.length,g=e?l:-1;(e?g--:++g<l)&&n(c[g],g,c););return t?je(c,e?0:g,e?g+1:l):je(c,e?g+1:0,e?l:g)}function tl(c,n){var t=c;return t instanceof Nt&&(t=t.value()),Zn(n,(function(c,n){return n.func.apply(n.thisArg,sn([c],n.args))}),t)}function el(c,n,t){var l=c.length;if(l<2)return l?qe(c[0]):[];for(var g=-1,I=e(l);++g<l;)for(var a=c[g],d=-1;++d<l;)d!=g&&(I[g]=$t(I[g]||a,c[d],n,t));return qe(ge(I,1),n,t)}function ll(c,n,t){for(var e=-1,l=c.length,g=n.length,I={};++e<l;){var a=e<g?n[e]:void 0;t(I,c[e],a)}return I}function gl(c){return SI(c)?c:[]}function Il(c){return"function"==typeof c?c:ja}function al(c,n){return NI(c)?c:dg(c,n)?[c]:Qg(Ia(c))}var dl=Ee;function il(c,n,t){var e=c.length;return t=void 0===t?e:t,!n&&t>=e?c:je(c,n,t)}var Cl=Pn||function(c){return Mc.clearTimeout(c)};function Fl(c,n){if(n)return c.slice();var t=c.length,e=Dc?Dc(t):new c.constructor(t);return c.copy(e),e}function rl(c){var n=new c.constructor(c.byteLength);return new kc(n).set(new kc(c)),n}function Xl(c,n){var t=n?rl(c.buffer):c.buffer;return new c.constructor(t,c.byteOffset,c.length)}function ol(c,n){if(c!==n){var t=void 0!==c,e=null===c,l=c==c,g=PI(c),I=void 0!==n,a=null===n,d=n==n,i=PI(n);if(!a&&!i&&!g&&c>n||g&&I&&d&&!a&&!i||e&&I&&d||!t&&d||!l)return 1;if(!e&&!g&&!i&&c<n||i&&t&&l&&!e&&!g||a&&t&&l||!I&&l||!d)return-1}return 0}function sl(c,n,t,l){for(var g=-1,I=c.length,a=t.length,d=-1,i=n.length,C=It(I-a,0),F=e(i+C),r=!l;++d<i;)F[d]=n[d];for(;++g<a;)(r||g<I)&&(F[t[g]]=c[g]);for(;C--;)F[d++]=c[g++];return F}function Zl(c,n,t,l){for(var g=-1,I=c.length,a=-1,d=t.length,i=-1,C=n.length,F=It(I-d,0),r=e(F+C),X=!l;++g<F;)r[g]=c[g];for(var o=g;++i<C;)r[o+i]=n[i];for(;++a<d;)(X||g<I)&&(r[o+t[a]]=c[g++]);return r}function Bl(c,n){var t=-1,l=c.length;for(n||(n=e(l));++t<l;)n[t]=c[t];return n}function Vl(c,n,t,e){var l=!t;t||(t={});for(var g=-1,I=n.length;++g<I;){var a=n[g],d=e?e(t[a],c[a],a,t,c):void 0;void 0===d&&(d=c[a]),l?Mt(t,a,d):ft(t,a,d)}return t}function Al(c,n){return function(t,e){var l=NI(t)?In:jt,g=n?n():{};return l(t,c,Pl(e,2),g)}}function Gl(c){return Ee((function(n,t){var e=-1,l=t.length,g=l>1?t[l-1]:void 0,I=l>2?t[2]:void 0;for(g=c.length>3&&"function"==typeof g?(l--,g):void 0,I&&ag(t[0],t[1],I)&&(g=l<3?void 0:g,l=1),n=sc(n);++e<l;){var a=t[e];a&&c(n,a,e,g)}return n}))}function bl(c,n){return function(t,e){if(null==t)return t;if(!yI(t))return c(t,e);for(var l=t.length,g=n?l:-1,I=sc(t);(n?g--:++g<l)&&!1!==e(I[g],g,I););return t}}function hl(c){return function(n,t,e){for(var l=-1,g=sc(n),I=e(n),a=I.length;a--;){var d=I[c?a:++l];if(!1===t(g[d],d,g))break}return n}}function Ul(c){return function(n){var t=vn(n=Ia(n))?Mn(n):void 0,e=t?t[0]:n.charAt(0),l=t?il(t,1).join(""):n.slice(1);return e[c]()+l}}function Ql(c){return function(n){return Zn(Ta(xa(n).replace(Nc,"")),c,"")}}function ul(c){return function(){var n=arguments;switch(n.length){case 0:return new c;case 1:return new c(n[0]);case 2:return new c(n[0],n[1]);case 3:return new c(n[0],n[1],n[2]);case 4:return new c(n[0],n[1],n[2],n[3]);case 5:return new c(n[0],n[1],n[2],n[3],n[4]);case 6:return new c(n[0],n[1],n[2],n[3],n[4],n[5]);case 7:return new c(n[0],n[1],n[2],n[3],n[4],n[5],n[6])}var t=Jt(c.prototype),e=c.apply(t,n);return DI(e)?e:t}}function Wl(c){return function(n,t,e){var l=sc(n);if(!yI(n)){var g=Pl(t,3);n=Aa(n),t=function(c){return g(l[c],c,l)}}var I=c(n,t,e);return I>-1?l[g?n[I]:I]:void 0}}function ml(c){return wl((function(n){var t=n.length,e=t,l=xt.prototype.thru;for(c&&n.reverse();e--;){var I=n[e];if("function"!=typeof I)throw new Vc(g);if(l&&!a&&"wrapper"==Ol(I))var a=new xt([],!0)}for(e=a?e:t;++e<t;){var d=Ol(I=n[e]),i="wrapper"==d?Ml(I):void 0;a=i&&ig(i[0])&&424==i[1]&&!i[4].length&&1==i[9]?a[Ol(i[0])].apply(a,i[3]):1==I.length&&ig(I)?a[d]():a.thru(I)}return function(){var c=arguments,e=c[0];if(a&&1==c.length&&NI(e))return a.plant(e).value();for(var l=0,g=t?n[l].apply(this,c):e;++l<t;)g=n[l].call(this,g);return g}}))}function Rl(c,n,t,l,g,I,a,d,i,C){var F=128&n,r=1&n,X=2&n,o=24&n,s=512&n,Z=X?void 0:ul(c);return function B(){for(var V=arguments.length,A=e(V),G=V;G--;)A[G]=arguments[G];if(o)var b=Ll(B),h=kn(A,b);if(l&&(A=sl(A,l,g,o)),I&&(A=Zl(A,I,a,o)),V-=h,o&&V<C){var U=fn(A,b);return Sl(c,n,Rl,B.placeholder,t,A,U,d,i,C-V)}var Q=r?t:this,u=X?Q[c]:c;return V=A.length,d?A=Zg(A,d):s&&V>1&&A.reverse(),F&&i<V&&(A.length=i),this&&this!==Mc&&this instanceof B&&(u=Z||ul(u)),u.apply(Q,A)}}function Jl(c,n){return function(t,e){return function(c,n,t,e){return de(c,(function(c,l,g){n(e,t(c),l,g)})),e}(t,c,n(e),{})}}function pl(c,n){return function(t,e){var l;if(void 0===t&&void 0===e)return n;if(void 0!==t&&(l=t),void 0!==e){if(void 0===l)return e;"string"==typeof t||"string"==typeof e?(t=_e(t),e=_e(e)):(t=Pe(t),e=Pe(e)),l=c(t,e)}return l}}function xl(c){return wl((function(n){return n=on(n,xn(Pl())),Ee((function(t){var e=this;return c(n,(function(c){return gn(c,e,t)}))}))}))}function Nl(c,n){var t=(n=void 0===n?" ":_e(n)).length;if(t<2)return t?He(n,c):n;var e=He(n,$n(c/Kn(n)));return vn(n)?il(Mn(e),0,c).join(""):e.slice(0,c)}function Yl(c){return function(n,t,l){return l&&"number"!=typeof l&&ag(n,t,l)&&(t=l=void 0),n=na(n),void 0===t?(t=n,n=0):t=na(t),function(c,n,t,l){for(var g=-1,I=It($n((n-c)/(t||1)),0),a=e(I);I--;)a[l?I:++g]=c,c+=t;return a}(n,t,l=void 0===l?n<t?1:-1:na(l),c)}}function yl(c){return function(n,t){return"string"==typeof n&&"string"==typeof t||(n=la(n),t=la(t)),c(n,t)}}function Sl(c,n,t,e,l,g,I,a,d,i){var C=8&n;n|=C?32:64,4&(n&=~(C?64:32))||(n&=-4);var F=[c,n,l,C?g:void 0,C?I:void 0,C?void 0:g,C?void 0:I,a,d,i],r=t.apply(void 0,F);return ig(c)&&Vg(r,F),r.placeholder=e,bg(r,c,n)}function kl(c){var n=oc[c];return function(c,t){if(c=la(c),(t=null==t?0:at(ta(t),292))&&et(c)){var e=(Ia(c)+"e").split("e");return+((e=(Ia(n(e[0]+"e"+(+e[1]+t)))+"e").split("e"))[0]+"e"+(+e[1]-t))}return n(c)}}var Hl=st&&1/wn(new st([,-0]))[1]==1/0?function(c){return new st(c)}:Pa;function El(c){return function(n){var t=tg(n);return t==s?zn(n):t==A?jn(n):function(c,n){return on(n,(function(n){return[n,c[n]]}))}(n,c(n))}}function Tl(c,n,t,l,a,d,i,C){var F=2&n;if(!F&&"function"!=typeof c)throw new Vc(g);var r=l?l.length:0;if(r||(n&=-97,l=a=void 0),i=void 0===i?i:It(ta(i),0),C=void 0===C?C:ta(C),r-=a?a.length:0,64&n){var X=l,o=a;l=a=void 0}var s=F?void 0:Ml(c),Z=[c,n,t,l,a,X,o,d,i,C];if(s&&function(c,n){var t=c[1],e=n[1],l=t|e,g=l<131,a=128==e&&8==t||128==e&&256==t&&c[7].length<=n[8]||384==e&&n[7].length<=n[8]&&8==t;if(!g&&!a)return c;1&e&&(c[2]=n[2],l|=1&t?0:4);var d=n[3];if(d){var i=c[3];c[3]=i?sl(i,d,n[4]):d,c[4]=i?fn(c[3],I):n[4]}(d=n[5])&&(i=c[5],c[5]=i?Zl(i,d,n[6]):d,c[6]=i?fn(c[5],I):n[6]);(d=n[7])&&(c[7]=d);128&e&&(c[8]=null==c[8]?n[8]:at(c[8],n[8]));null==c[9]&&(c[9]=n[9]);c[0]=n[0],c[1]=l}(Z,s),c=Z[0],n=Z[1],t=Z[2],l=Z[3],a=Z[4],!(C=Z[9]=void 0===Z[9]?F?0:c.length:It(Z[9]-r,0))&&24&n&&(n&=-25),n&&1!=n)B=8==n||16==n?function(c,n,t){var l=ul(c);return function g(){for(var I=arguments.length,a=e(I),d=I,i=Ll(g);d--;)a[d]=arguments[d];var C=I<3&&a[0]!==i&&a[I-1]!==i?[]:fn(a,i);if((I-=C.length)<t)return Sl(c,n,Rl,g.placeholder,void 0,a,C,void 0,void 0,t-I);var F=this&&this!==Mc&&this instanceof g?l:c;return gn(F,this,a)}}(c,n,C):32!=n&&33!=n||a.length?Rl.apply(void 0,Z):function(c,n,t,l){var g=1&n,I=ul(c);return function n(){for(var a=-1,d=arguments.length,i=-1,C=l.length,F=e(C+d),r=this&&this!==Mc&&this instanceof n?I:c;++i<C;)F[i]=l[i];for(;d--;)F[i++]=arguments[++a];return gn(r,g?t:this,F)}}(c,n,t,l);else var B=function(c,n,t){var e=1&n,l=ul(c);return function n(){var g=this&&this!==Mc&&this instanceof n?l:c;return g.apply(e?t:this,arguments)}}(c,n,t);return bg((s?De:Vg)(B,Z),c,n)}function vl(c,n,t,e){return void 0===c||RI(c,bc[t])&&!Qc.call(e,t)?n:c}function zl(c,n,t,e,l,g){return DI(c)&&DI(n)&&(g.set(n,c),pe(c,n,void 0,zl,g),g.delete(n)),c}function Dl(c){return KI(c)?void 0:c}function fl(c,n,t,e,l,g){var I=1&t,a=c.length,d=n.length;if(a!=d&&!(I&&d>a))return!1;var i=g.get(c);if(i&&g.get(n))return i==n;var C=-1,F=!0,r=2&t?new kt:void 0;for(g.set(c,n),g.set(n,c);++C<a;){var X=c[C],o=n[C];if(e)var s=I?e(o,X,C,n,c,g):e(X,o,C,c,n,g);if(void 0!==s){if(s)continue;F=!1;break}if(r){if(!Vn(n,(function(c,n){if(!Yn(r,n)&&(X===c||l(X,c,t,e,g)))return r.push(n)}))){F=!1;break}}else if(X!==o&&!l(X,o,t,e,g)){F=!1;break}}return g.delete(c),g.delete(n),F}function wl(c){return Gg(og(c,void 0,Yg),c+"")}function jl(c){return re(c,Aa,cg)}function Kl(c){return re(c,Ga,ng)}var Ml=Vt?function(c){return Vt.get(c)}:Pa;function Ol(c){for(var n=c.name+"",t=At[n],e=Qc.call(At,n)?t.length:0;e--;){var l=t[e],g=l.func;if(null==g||g==c)return l.name}return n}function Ll(c){return(Qc.call(Rt,"placeholder")?Rt:c).placeholder}function Pl(){var c=Rt.iteratee||Ka;return c=c===Ka?Ue:c,arguments.length?c(arguments[0],arguments[1]):c}function _l(c,n){var t,e,l=c.__data__;return("string"==(e=typeof(t=n))||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t)?l["string"==typeof n?"string":"hash"]:l.map}function ql(c){for(var n=Aa(c),t=n.length;t--;){var e=n[t],l=c[e];n[t]=[e,l,rg(l)]}return n}function $l(c,n){var t=function(c,n){return null==c?void 0:c[n]}(c,n);return he(t)?t:void 0}var cg=nt?function(c){return null==c?[]:(c=sc(c),Fn(nt(c),(function(n){return Oc.call(c,n)})))}:ed,ng=nt?function(c){for(var n=[];c;)sn(n,cg(c)),c=jc(c);return n}:ed,tg=Xe;function eg(c,n,t){for(var e=-1,l=(n=al(n,c)).length,g=!1;++e<l;){var I=ug(n[e]);if(!(g=null!=c&&t(c,I)))break;c=c[I]}return g||++e!=l?g:!!(l=null==c?0:c.length)&&zI(l)&&Ig(I,l)&&(NI(c)||xI(c))}function lg(c){return"function"!=typeof c.constructor||Fg(c)?{}:Jt(jc(c))}function gg(c){return NI(c)||xI(c)||!!(_c&&c&&c[_c])}function Ig(c,n){var t=typeof c;return!!(n=null==n?9007199254740991:n)&&("number"==t||"symbol"!=t&&dc.test(c))&&c>-1&&c%1==0&&c<n}function ag(c,n,t){if(!DI(t))return!1;var e=typeof n;return!!("number"==e?yI(t)&&Ig(n,t.length):"string"==e&&n in t)&&RI(t[n],c)}function dg(c,n){if(NI(c))return!1;var t=typeof c;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=c&&!PI(c))||(w.test(c)||!f.test(c)||null!=n&&c in sc(n))}function ig(c){var n=Ol(c),t=Rt[n];if("function"!=typeof t||!(n in Nt.prototype))return!1;if(c===t)return!0;var e=Ml(t);return!!e&&c===e[0]}(rt&&tg(new rt(new ArrayBuffer(1)))!=Q||Xt&&tg(new Xt)!=s||ot&&"[object Promise]"!=tg(ot.resolve())||st&&tg(new st)!=A||Zt&&tg(new Zt)!=h)&&(tg=function(c){var n=Xe(c),t=n==B?c.constructor:void 0,e=t?Wg(t):"";if(e)switch(e){case Gt:return Q;case bt:return s;case ht:return"[object Promise]";case Ut:return A;case Qt:return h}return n});var Cg=hc?TI:ld;function Fg(c){var n=c&&c.constructor;return c===("function"==typeof n&&n.prototype||bc)}function rg(c){return c==c&&!DI(c)}function Xg(c,n){return function(t){return null!=t&&(t[c]===n&&(void 0!==n||c in sc(t)))}}function og(c,n,t){return n=It(void 0===n?c.length-1:n,0),function(){for(var l=arguments,g=-1,I=It(l.length-n,0),a=e(I);++g<I;)a[g]=l[n+g];g=-1;for(var d=e(n+1);++g<n;)d[g]=l[g];return d[n]=t(a),gn(c,this,d)}}function sg(c,n){return n.length<2?c:Fe(c,je(n,0,-1))}function Zg(c,n){for(var t=c.length,e=at(n.length,t),l=Bl(c);e--;){var g=n[e];c[e]=Ig(g,t)?l[g]:void 0}return c}function Bg(c,n){if(("constructor"!==n||"function"!=typeof c[n])&&"__proto__"!=n)return c[n]}var Vg=hg(De),Ag=qn||function(c,n){return Mc.setTimeout(c,n)},Gg=hg(fe);function bg(c,n,t){var e=n+"";return Gg(c,function(c,n){var t=n.length;if(!t)return c;var e=t-1;return n[e]=(t>1?"& ":"")+n[e],n=n.join(t>2?", ":" "),c.replace(_,"{\n/* [wrapped with "+n+"] */\n")}(e,function(c,n){return an(a,(function(t){var e="_."+t[0];n&t[1]&&!rn(c,e)&&c.push(e)})),c.sort()}(function(c){var n=c.match(q);return n?n[1].split($):[]}(e),t)))}function hg(c){var n=0,t=0;return function(){var e=dt(),l=16-(e-t);if(t=e,l>0){if(++n>=800)return arguments[0]}else n=0;return c.apply(void 0,arguments)}}function Ug(c,n){var t=-1,e=c.length,l=e-1;for(n=void 0===n?e:n;++t<n;){var g=ke(t,l),I=c[g];c[g]=c[t],c[t]=I}return c.length=n,c}var Qg=function(c){var n=hI(c,(function(c){return 500===t.size&&t.clear(),c})),t=n.cache;return n}((function(c){var n=[];return 46===c.charCodeAt(0)&&n.push(""),c.replace(j,(function(c,t,e,l){n.push(e?l.replace(nc,"$1"):t||c)})),n}));function ug(c){if("string"==typeof c||PI(c))return c;var n=c+"";return"0"==n&&1/c==-1/0?"-0":n}function Wg(c){if(null!=c){try{return Uc.call(c)}catch(c){}try{return c+""}catch(c){}}return""}function mg(c){if(c instanceof Nt)return c.clone();var n=new xt(c.__wrapped__,c.__chain__);return n.__actions__=Bl(c.__actions__),n.__index__=c.__index__,n.__values__=c.__values__,n}var Rg=Ee((function(c,n){return SI(c)?$t(c,ge(n,1,SI,!0)):[]})),Jg=Ee((function(c,n){var t=Eg(n);return SI(t)&&(t=void 0),SI(c)?$t(c,ge(n,1,SI,!0),Pl(t,2)):[]})),pg=Ee((function(c,n){var t=Eg(n);return SI(t)&&(t=void 0),SI(c)?$t(c,ge(n,1,SI,!0),void 0,t):[]}));function xg(c,n,t){var e=null==c?0:c.length;if(!e)return-1;var l=null==t?0:ta(t);return l<0&&(l=It(e+l,0)),bn(c,Pl(n,3),l)}function Ng(c,n,t){var e=null==c?0:c.length;if(!e)return-1;var l=e-1;return void 0!==t&&(l=ta(t),l=t<0?It(e+l,0):at(l,e-1)),bn(c,Pl(n,3),l,!0)}function Yg(c){return(null==c?0:c.length)?ge(c,1):[]}function yg(c){return c&&c.length?c[0]:void 0}var Sg=Ee((function(c){var n=on(c,gl);return n.length&&n[0]===c[0]?Be(n):[]})),kg=Ee((function(c){var n=Eg(c),t=on(c,gl);return n===Eg(t)?n=void 0:t.pop(),t.length&&t[0]===c[0]?Be(t,Pl(n,2)):[]})),Hg=Ee((function(c){var n=Eg(c),t=on(c,gl);return(n="function"==typeof n?n:void 0)&&t.pop(),t.length&&t[0]===c[0]?Be(t,void 0,n):[]}));function Eg(c){var n=null==c?0:c.length;return n?c[n-1]:void 0}var Tg=Ee(vg);function vg(c,n){return c&&c.length&&n&&n.length?ye(c,n):c}var zg=wl((function(c,n){var t=null==c?0:c.length,e=Ot(c,n);return Se(c,on(n,(function(c){return Ig(c,t)?+c:c})).sort(ol)),e}));function Dg(c){return null==c?c:Ft.call(c)}var fg=Ee((function(c){return qe(ge(c,1,SI,!0))})),wg=Ee((function(c){var n=Eg(c);return SI(n)&&(n=void 0),qe(ge(c,1,SI,!0),Pl(n,2))})),jg=Ee((function(c){var n=Eg(c);return n="function"==typeof n?n:void 0,qe(ge(c,1,SI,!0),void 0,n)}));function Kg(c){if(!c||!c.length)return[];var n=0;return c=Fn(c,(function(c){if(SI(c))return n=It(c.length,n),!0})),pn(n,(function(n){return on(c,Wn(n))}))}function Mg(c,n){if(!c||!c.length)return[];var t=Kg(c);return null==n?t:on(t,(function(c){return gn(n,void 0,c)}))}var Og=Ee((function(c,n){return SI(c)?$t(c,n):[]})),Lg=Ee((function(c){return el(Fn(c,SI))})),Pg=Ee((function(c){var n=Eg(c);return SI(n)&&(n=void 0),el(Fn(c,SI),Pl(n,2))})),_g=Ee((function(c){var n=Eg(c);return n="function"==typeof n?n:void 0,el(Fn(c,SI),void 0,n)})),qg=Ee(Kg);var $g=Ee((function(c){var n=c.length,t=n>1?c[n-1]:void 0;return t="function"==typeof t?(c.pop(),t):void 0,Mg(c,t)}));function cI(c){var n=Rt(c);return n.__chain__=!0,n}function nI(c,n){return n(c)}var tI=wl((function(c){var n=c.length,t=n?c[0]:0,e=this.__wrapped__,l=function(n){return Ot(n,c)};return!(n>1||this.__actions__.length)&&e instanceof Nt&&Ig(t)?((e=e.slice(t,+t+(n?1:0))).__actions__.push({func:nI,args:[l],thisArg:void 0}),new xt(e,this.__chain__).thru((function(c){return n&&!c.length&&c.push(void 0),c}))):this.thru(l)}));var eI=Al((function(c,n,t){Qc.call(c,t)?++c[t]:Mt(c,t,1)}));var lI=Wl(xg),gI=Wl(Ng);function II(c,n){return(NI(c)?an:ce)(c,Pl(n,3))}function aI(c,n){return(NI(c)?dn:ne)(c,Pl(n,3))}var dI=Al((function(c,n,t){Qc.call(c,t)?c[t].push(n):Mt(c,t,[n])}));var iI=Ee((function(c,n,t){var l=-1,g="function"==typeof n,I=yI(c)?e(c.length):[];return ce(c,(function(c){I[++l]=g?gn(n,c,t):Ve(c,n,t)})),I})),CI=Al((function(c,n,t){Mt(c,t,n)}));function FI(c,n){return(NI(c)?on:me)(c,Pl(n,3))}var rI=Al((function(c,n,t){c[t?0:1].push(n)}),(function(){return[[],[]]}));var XI=Ee((function(c,n){if(null==c)return[];var t=n.length;return t>1&&ag(c,n[0],n[1])?n=[]:t>2&&ag(n[0],n[1],n[2])&&(n=[n[0]]),Ne(c,ge(n,1),[])})),oI=_n||function(){return Mc.Date.now()};function sI(c,n,t){return n=t?void 0:n,Tl(c,128,void 0,void 0,void 0,void 0,n=c&&null==n?c.length:n)}function ZI(c,n){var t;if("function"!=typeof n)throw new Vc(g);return c=ta(c),function(){return--c>0&&(t=n.apply(this,arguments)),c<=1&&(n=void 0),t}}var BI=Ee((function(c,n,t){var e=1;if(t.length){var l=fn(t,Ll(BI));e|=32}return Tl(c,e,n,t,l)})),VI=Ee((function(c,n,t){var e=3;if(t.length){var l=fn(t,Ll(VI));e|=32}return Tl(n,e,c,t,l)}));function AI(c,n,t){var e,l,I,a,d,i,C=0,F=!1,r=!1,X=!0;if("function"!=typeof c)throw new Vc(g);function o(n){var t=e,g=l;return e=l=void 0,C=n,a=c.apply(g,t)}function s(c){return C=c,d=Ag(B,n),F?o(c):a}function Z(c){var t=c-i;return void 0===i||t>=n||t<0||r&&c-C>=I}function B(){var c=oI();if(Z(c))return V(c);d=Ag(B,function(c){var t=n-(c-i);return r?at(t,I-(c-C)):t}(c))}function V(c){return d=void 0,X&&e?o(c):(e=l=void 0,a)}function A(){var c=oI(),t=Z(c);if(e=arguments,l=this,i=c,t){if(void 0===d)return s(i);if(r)return Cl(d),d=Ag(B,n),o(i)}return void 0===d&&(d=Ag(B,n)),a}return n=la(n)||0,DI(t)&&(F=!!t.leading,I=(r="maxWait"in t)?It(la(t.maxWait)||0,n):I,X="trailing"in t?!!t.trailing:X),A.cancel=function(){void 0!==d&&Cl(d),C=0,e=i=l=d=void 0},A.flush=function(){return void 0===d?a:V(oI())},A}var GI=Ee((function(c,n){return qt(c,1,n)})),bI=Ee((function(c,n,t){return qt(c,la(n)||0,t)}));function hI(c,n){if("function"!=typeof c||null!=n&&"function"!=typeof n)throw new Vc(g);var t=function(){var e=arguments,l=n?n.apply(this,e):e[0],g=t.cache;if(g.has(l))return g.get(l);var I=c.apply(this,e);return t.cache=g.set(l,I)||g,I};return t.cache=new(hI.Cache||St),t}function UI(c){if("function"!=typeof c)throw new Vc(g);return function(){var n=arguments;switch(n.length){case 0:return!c.call(this);case 1:return!c.call(this,n[0]);case 2:return!c.call(this,n[0],n[1]);case 3:return!c.call(this,n[0],n[1],n[2])}return!c.apply(this,n)}}hI.Cache=St;var QI=dl((function(c,n){var t=(n=1==n.length&&NI(n[0])?on(n[0],xn(Pl())):on(ge(n,1),xn(Pl()))).length;return Ee((function(e){for(var l=-1,g=at(e.length,t);++l<g;)e[l]=n[l].call(this,e[l]);return gn(c,this,e)}))})),uI=Ee((function(c,n){return Tl(c,32,void 0,n,fn(n,Ll(uI)))})),WI=Ee((function(c,n){return Tl(c,64,void 0,n,fn(n,Ll(WI)))})),mI=wl((function(c,n){return Tl(c,256,void 0,void 0,void 0,n)}));function RI(c,n){return c===n||c!=c&&n!=n}var JI=yl(oe),pI=yl((function(c,n){return c>=n})),xI=Ae(function(){return arguments}())?Ae:function(c){return fI(c)&&Qc.call(c,"callee")&&!Oc.call(c,"callee")},NI=e.isArray,YI=$c?xn($c):function(c){return fI(c)&&Xe(c)==U};function yI(c){return null!=c&&zI(c.length)&&!TI(c)}function SI(c){return fI(c)&&yI(c)}var kI=tt||ld,HI=cn?xn(cn):function(c){return fI(c)&&Xe(c)==F};function EI(c){if(!fI(c))return!1;var n=Xe(c);return n==r||"[object DOMException]"==n||"string"==typeof c.message&&"string"==typeof c.name&&!KI(c)}function TI(c){if(!DI(c))return!1;var n=Xe(c);return n==X||n==o||"[object AsyncFunction]"==n||"[object Proxy]"==n}function vI(c){return"number"==typeof c&&c==ta(c)}function zI(c){return"number"==typeof c&&c>-1&&c%1==0&&c<=9007199254740991}function DI(c){var n=typeof c;return null!=c&&("object"==n||"function"==n)}function fI(c){return null!=c&&"object"==typeof c}var wI=nn?xn(nn):function(c){return fI(c)&&tg(c)==s};function jI(c){return"number"==typeof c||fI(c)&&Xe(c)==Z}function KI(c){if(!fI(c)||Xe(c)!=B)return!1;var n=jc(c);if(null===n)return!0;var t=Qc.call(n,"constructor")&&n.constructor;return"function"==typeof t&&t instanceof t&&Uc.call(t)==Rc}var MI=tn?xn(tn):function(c){return fI(c)&&Xe(c)==V};var OI=en?xn(en):function(c){return fI(c)&&tg(c)==A};function LI(c){return"string"==typeof c||!NI(c)&&fI(c)&&Xe(c)==G}function PI(c){return"symbol"==typeof c||fI(c)&&Xe(c)==b}var _I=ln?xn(ln):function(c){return fI(c)&&zI(c.length)&&!!vc[Xe(c)]};var qI=yl(We),$I=yl((function(c,n){return c<=n}));function ca(c){if(!c)return[];if(yI(c))return LI(c)?Mn(c):Bl(c);if(qc&&c[qc])return function(c){for(var n,t=[];!(n=c.next()).done;)t.push(n.value);return t}(c[qc]());var n=tg(c);return(n==s?zn:n==A?wn:Ra)(c)}function na(c){return c?(c=la(c))===1/0||c===-1/0?17976931348623157e292*(c<0?-1:1):c==c?c:0:0===c?c:0}function ta(c){var n=na(c),t=n%1;return n==n?t?n-t:n:0}function ea(c){return c?Lt(ta(c),0,4294967295):0}function la(c){if("number"==typeof c)return c;if(PI(c))return NaN;if(DI(c)){var n="function"==typeof c.valueOf?c.valueOf():c;c=DI(n)?n+"":n}if("string"!=typeof c)return 0===c?c:+c;c=c.replace(O,"");var t=gc.test(c);return t||ac.test(c)?wc(c.slice(2),t?2:8):lc.test(c)?NaN:+c}function ga(c){return Vl(c,Ga(c))}function Ia(c){return null==c?"":_e(c)}var aa=Gl((function(c,n){if(Fg(n)||yI(n))Vl(n,Aa(n),c);else for(var t in n)Qc.call(n,t)&&ft(c,t,n[t])})),da=Gl((function(c,n){Vl(n,Ga(n),c)})),ia=Gl((function(c,n,t,e){Vl(n,Ga(n),c,e)})),Ca=Gl((function(c,n,t,e){Vl(n,Aa(n),c,e)})),Fa=wl(Ot);var ra=Ee((function(c,n){c=sc(c);var t=-1,e=n.length,l=e>2?n[2]:void 0;for(l&&ag(n[0],n[1],l)&&(e=1);++t<e;)for(var g=n[t],I=Ga(g),a=-1,d=I.length;++a<d;){var i=I[a],C=c[i];(void 0===C||RI(C,bc[i])&&!Qc.call(c,i))&&(c[i]=g[i])}return c})),Xa=Ee((function(c){return c.push(void 0,zl),gn(ha,void 0,c)}));function oa(c,n,t){var e=null==c?void 0:Fe(c,n);return void 0===e?t:e}function sa(c,n){return null!=c&&eg(c,n,Ze)}var Za=Jl((function(c,n,t){null!=n&&"function"!=typeof n.toString&&(n=mc.call(n)),c[n]=t}),Da(ja)),Ba=Jl((function(c,n,t){null!=n&&"function"!=typeof n.toString&&(n=mc.call(n)),Qc.call(c,n)?c[n].push(t):c[n]=[t]}),Pl),Va=Ee(Ve);function Aa(c){return yI(c)?Et(c):Qe(c)}function Ga(c){return yI(c)?Et(c,!0):ue(c)}var ba=Gl((function(c,n,t){pe(c,n,t)})),ha=Gl((function(c,n,t,e){pe(c,n,t,e)})),Ua=wl((function(c,n){var t={};if(null==c)return t;var e=!1;n=on(n,(function(n){return n=al(n,c),e||(e=n.length>1),n})),Vl(c,Kl(c),t),e&&(t=Pt(t,7,Dl));for(var l=n.length;l--;)$e(t,n[l]);return t}));var Qa=wl((function(c,n){return null==c?{}:function(c,n){return Ye(c,n,(function(n,t){return sa(c,t)}))}(c,n)}));function ua(c,n){if(null==c)return{};var t=on(Kl(c),(function(c){return[c]}));return n=Pl(n),Ye(c,t,(function(c,t){return n(c,t[0])}))}var Wa=El(Aa),ma=El(Ga);function Ra(c){return null==c?[]:Nn(c,Aa(c))}var Ja=Ql((function(c,n,t){return n=n.toLowerCase(),c+(t?pa(n):n)}));function pa(c){return Ea(Ia(c).toLowerCase())}function xa(c){return(c=Ia(c))&&c.replace(ic,Hn).replace(Yc,"")}var Na=Ql((function(c,n,t){return c+(t?"-":"")+n.toLowerCase()})),Ya=Ql((function(c,n,t){return c+(t?" ":"")+n.toLowerCase()})),ya=Ul("toLowerCase");var Sa=Ql((function(c,n,t){return c+(t?"_":"")+n.toLowerCase()}));var ka=Ql((function(c,n,t){return c+(t?" ":"")+Ea(n)}));var Ha=Ql((function(c,n,t){return c+(t?" ":"")+n.toUpperCase()})),Ea=Ul("toUpperCase");function Ta(c,n,t){return c=Ia(c),void 0===(n=t?void 0:n)?function(c){return Hc.test(c)}(c)?function(c){return c.match(Sc)||[]}(c):function(c){return c.match(cc)||[]}(c):c.match(n)||[]}var va=Ee((function(c,n){try{return gn(c,void 0,n)}catch(c){return EI(c)?c:new rc(c)}})),za=wl((function(c,n){return an(n,(function(n){n=ug(n),Mt(c,n,BI(c[n],c))})),c}));function Da(c){return function(){return c}}var fa=ml(),wa=ml(!0);function ja(c){return c}function Ka(c){return Ue("function"==typeof c?c:Pt(c,1))}var Ma=Ee((function(c,n){return function(t){return Ve(t,c,n)}})),Oa=Ee((function(c,n){return function(t){return Ve(c,t,n)}}));function La(c,n,t){var e=Aa(n),l=Ce(n,e);null!=t||DI(n)&&(l.length||!e.length)||(t=n,n=c,c=this,l=Ce(n,Aa(n)));var g=!(DI(t)&&"chain"in t&&!t.chain),I=TI(c);return an(l,(function(t){var e=n[t];c[t]=e,I&&(c.prototype[t]=function(){var n=this.__chain__;if(g||n){var t=c(this.__wrapped__),l=t.__actions__=Bl(this.__actions__);return l.push({func:e,args:arguments,thisArg:c}),t.__chain__=n,t}return e.apply(c,sn([this.value()],arguments))})})),c}function Pa(){}var _a=xl(on),qa=xl(Cn),$a=xl(Vn);function cd(c){return dg(c)?Wn(ug(c)):function(c){return function(n){return Fe(n,c)}}(c)}var nd=Yl(),td=Yl(!0);function ed(){return[]}function ld(){return!1}var gd=pl((function(c,n){return c+n}),0),Id=kl("ceil"),ad=pl((function(c,n){return c/n}),1),dd=kl("floor");var id,Cd=pl((function(c,n){return c*n}),1),Fd=kl("round"),rd=pl((function(c,n){return c-n}),0);return Rt.after=function(c,n){if("function"!=typeof n)throw new Vc(g);return c=ta(c),function(){if(--c<1)return n.apply(this,arguments)}},Rt.ary=sI,Rt.assign=aa,Rt.assignIn=da,Rt.assignInWith=ia,Rt.assignWith=Ca,Rt.at=Fa,Rt.before=ZI,Rt.bind=BI,Rt.bindAll=za,Rt.bindKey=VI,Rt.castArray=function(){if(!arguments.length)return[];var c=arguments[0];return NI(c)?c:[c]},Rt.chain=cI,Rt.chunk=function(c,n,t){n=(t?ag(c,n,t):void 0===n)?1:It(ta(n),0);var l=null==c?0:c.length;if(!l||n<1)return[];for(var g=0,I=0,a=e($n(l/n));g<l;)a[I++]=je(c,g,g+=n);return a},Rt.compact=function(c){for(var n=-1,t=null==c?0:c.length,e=0,l=[];++n<t;){var g=c[n];g&&(l[e++]=g)}return l},Rt.concat=function(){var c=arguments.length;if(!c)return[];for(var n=e(c-1),t=arguments[0],l=c;l--;)n[l-1]=arguments[l];return sn(NI(t)?Bl(t):[t],ge(n,1))},Rt.cond=function(c){var n=null==c?0:c.length,t=Pl();return c=n?on(c,(function(c){if("function"!=typeof c[1])throw new Vc(g);return[t(c[0]),c[1]]})):[],Ee((function(t){for(var e=-1;++e<n;){var l=c[e];if(gn(l[0],this,t))return gn(l[1],this,t)}}))},Rt.conforms=function(c){return function(c){var n=Aa(c);return function(t){return _t(t,c,n)}}(Pt(c,1))},Rt.constant=Da,Rt.countBy=eI,Rt.create=function(c,n){var t=Jt(c);return null==n?t:Kt(t,n)},Rt.curry=function c(n,t,e){var l=Tl(n,8,void 0,void 0,void 0,void 0,void 0,t=e?void 0:t);return l.placeholder=c.placeholder,l},Rt.curryRight=function c(n,t,e){var l=Tl(n,16,void 0,void 0,void 0,void 0,void 0,t=e?void 0:t);return l.placeholder=c.placeholder,l},Rt.debounce=AI,Rt.defaults=ra,Rt.defaultsDeep=Xa,Rt.defer=GI,Rt.delay=bI,Rt.difference=Rg,Rt.differenceBy=Jg,Rt.differenceWith=pg,Rt.drop=function(c,n,t){var e=null==c?0:c.length;return e?je(c,(n=t||void 0===n?1:ta(n))<0?0:n,e):[]},Rt.dropRight=function(c,n,t){var e=null==c?0:c.length;return e?je(c,0,(n=e-(n=t||void 0===n?1:ta(n)))<0?0:n):[]},Rt.dropRightWhile=function(c,n){return c&&c.length?nl(c,Pl(n,3),!0,!0):[]},Rt.dropWhile=function(c,n){return c&&c.length?nl(c,Pl(n,3),!0):[]},Rt.fill=function(c,n,t,e){var l=null==c?0:c.length;return l?(t&&"number"!=typeof t&&ag(c,n,t)&&(t=0,e=l),function(c,n,t,e){var l=c.length;for((t=ta(t))<0&&(t=-t>l?0:l+t),(e=void 0===e||e>l?l:ta(e))<0&&(e+=l),e=t>e?0:ea(e);t<e;)c[t++]=n;return c}(c,n,t,e)):[]},Rt.filter=function(c,n){return(NI(c)?Fn:le)(c,Pl(n,3))},Rt.flatMap=function(c,n){return ge(FI(c,n),1)},Rt.flatMapDeep=function(c,n){return ge(FI(c,n),1/0)},Rt.flatMapDepth=function(c,n,t){return t=void 0===t?1:ta(t),ge(FI(c,n),t)},Rt.flatten=Yg,Rt.flattenDeep=function(c){return(null==c?0:c.length)?ge(c,1/0):[]},Rt.flattenDepth=function(c,n){return(null==c?0:c.length)?ge(c,n=void 0===n?1:ta(n)):[]},Rt.flip=function(c){return Tl(c,512)},Rt.flow=fa,Rt.flowRight=wa,Rt.fromPairs=function(c){for(var n=-1,t=null==c?0:c.length,e={};++n<t;){var l=c[n];e[l[0]]=l[1]}return e},Rt.functions=function(c){return null==c?[]:Ce(c,Aa(c))},Rt.functionsIn=function(c){return null==c?[]:Ce(c,Ga(c))},Rt.groupBy=dI,Rt.initial=function(c){return(null==c?0:c.length)?je(c,0,-1):[]},Rt.intersection=Sg,Rt.intersectionBy=kg,Rt.intersectionWith=Hg,Rt.invert=Za,Rt.invertBy=Ba,Rt.invokeMap=iI,Rt.iteratee=Ka,Rt.keyBy=CI,Rt.keys=Aa,Rt.keysIn=Ga,Rt.map=FI,Rt.mapKeys=function(c,n){var t={};return n=Pl(n,3),de(c,(function(c,e,l){Mt(t,n(c,e,l),c)})),t},Rt.mapValues=function(c,n){var t={};return n=Pl(n,3),de(c,(function(c,e,l){Mt(t,e,n(c,e,l))})),t},Rt.matches=function(c){return Re(Pt(c,1))},Rt.matchesProperty=function(c,n){return Je(c,Pt(n,1))},Rt.memoize=hI,Rt.merge=ba,Rt.mergeWith=ha,Rt.method=Ma,Rt.methodOf=Oa,Rt.mixin=La,Rt.negate=UI,Rt.nthArg=function(c){return c=ta(c),Ee((function(n){return xe(n,c)}))},Rt.omit=Ua,Rt.omitBy=function(c,n){return ua(c,UI(Pl(n)))},Rt.once=function(c){return ZI(2,c)},Rt.orderBy=function(c,n,t,e){return null==c?[]:(NI(n)||(n=null==n?[]:[n]),NI(t=e?void 0:t)||(t=null==t?[]:[t]),Ne(c,n,t))},Rt.over=_a,Rt.overArgs=QI,Rt.overEvery=qa,Rt.overSome=$a,Rt.partial=uI,Rt.partialRight=WI,Rt.partition=rI,Rt.pick=Qa,Rt.pickBy=ua,Rt.property=cd,Rt.propertyOf=function(c){return function(n){return null==c?void 0:Fe(c,n)}},Rt.pull=Tg,Rt.pullAll=vg,Rt.pullAllBy=function(c,n,t){return c&&c.length&&n&&n.length?ye(c,n,Pl(t,2)):c},Rt.pullAllWith=function(c,n,t){return c&&c.length&&n&&n.length?ye(c,n,void 0,t):c},Rt.pullAt=zg,Rt.range=nd,Rt.rangeRight=td,Rt.rearg=mI,Rt.reject=function(c,n){return(NI(c)?Fn:le)(c,UI(Pl(n,3)))},Rt.remove=function(c,n){var t=[];if(!c||!c.length)return t;var e=-1,l=[],g=c.length;for(n=Pl(n,3);++e<g;){var I=c[e];n(I,e,c)&&(t.push(I),l.push(e))}return Se(c,l),t},Rt.rest=function(c,n){if("function"!=typeof c)throw new Vc(g);return Ee(c,n=void 0===n?n:ta(n))},Rt.reverse=Dg,Rt.sampleSize=function(c,n,t){return n=(t?ag(c,n,t):void 0===n)?1:ta(n),(NI(c)?vt:ve)(c,n)},Rt.set=function(c,n,t){return null==c?c:ze(c,n,t)},Rt.setWith=function(c,n,t,e){return e="function"==typeof e?e:void 0,null==c?c:ze(c,n,t,e)},Rt.shuffle=function(c){return(NI(c)?zt:we)(c)},Rt.slice=function(c,n,t){var e=null==c?0:c.length;return e?(t&&"number"!=typeof t&&ag(c,n,t)?(n=0,t=e):(n=null==n?0:ta(n),t=void 0===t?e:ta(t)),je(c,n,t)):[]},Rt.sortBy=XI,Rt.sortedUniq=function(c){return c&&c.length?Le(c):[]},Rt.sortedUniqBy=function(c,n){return c&&c.length?Le(c,Pl(n,2)):[]},Rt.split=function(c,n,t){return t&&"number"!=typeof t&&ag(c,n,t)&&(n=t=void 0),(t=void 0===t?4294967295:t>>>0)?(c=Ia(c))&&("string"==typeof n||null!=n&&!MI(n))&&!(n=_e(n))&&vn(c)?il(Mn(c),0,t):c.split(n,t):[]},Rt.spread=function(c,n){if("function"!=typeof c)throw new Vc(g);return n=null==n?0:It(ta(n),0),Ee((function(t){var e=t[n],l=il(t,0,n);return e&&sn(l,e),gn(c,this,l)}))},Rt.tail=function(c){var n=null==c?0:c.length;return n?je(c,1,n):[]},Rt.take=function(c,n,t){return c&&c.length?je(c,0,(n=t||void 0===n?1:ta(n))<0?0:n):[]},Rt.takeRight=function(c,n,t){var e=null==c?0:c.length;return e?je(c,(n=e-(n=t||void 0===n?1:ta(n)))<0?0:n,e):[]},Rt.takeRightWhile=function(c,n){return c&&c.length?nl(c,Pl(n,3),!1,!0):[]},Rt.takeWhile=function(c,n){return c&&c.length?nl(c,Pl(n,3)):[]},Rt.tap=function(c,n){return n(c),c},Rt.throttle=function(c,n,t){var e=!0,l=!0;if("function"!=typeof c)throw new Vc(g);return DI(t)&&(e="leading"in t?!!t.leading:e,l="trailing"in t?!!t.trailing:l),AI(c,n,{leading:e,maxWait:n,trailing:l})},Rt.thru=nI,Rt.toArray=ca,Rt.toPairs=Wa,Rt.toPairsIn=ma,Rt.toPath=function(c){return NI(c)?on(c,ug):PI(c)?[c]:Bl(Qg(Ia(c)))},Rt.toPlainObject=ga,Rt.transform=function(c,n,t){var e=NI(c),l=e||kI(c)||_I(c);if(n=Pl(n,4),null==t){var g=c&&c.constructor;t=l?e?new g:[]:DI(c)&&TI(g)?Jt(jc(c)):{}}return(l?an:de)(c,(function(c,e,l){return n(t,c,e,l)})),t},Rt.unary=function(c){return sI(c,1)},Rt.union=fg,Rt.unionBy=wg,Rt.unionWith=jg,Rt.uniq=function(c){return c&&c.length?qe(c):[]},Rt.uniqBy=function(c,n){return c&&c.length?qe(c,Pl(n,2)):[]},Rt.uniqWith=function(c,n){return n="function"==typeof n?n:void 0,c&&c.length?qe(c,void 0,n):[]},Rt.unset=function(c,n){return null==c||$e(c,n)},Rt.unzip=Kg,Rt.unzipWith=Mg,Rt.update=function(c,n,t){return null==c?c:cl(c,n,Il(t))},Rt.updateWith=function(c,n,t,e){return e="function"==typeof e?e:void 0,null==c?c:cl(c,n,Il(t),e)},Rt.values=Ra,Rt.valuesIn=function(c){return null==c?[]:Nn(c,Ga(c))},Rt.without=Og,Rt.words=Ta,Rt.wrap=function(c,n){return uI(Il(n),c)},Rt.xor=Lg,Rt.xorBy=Pg,Rt.xorWith=_g,Rt.zip=qg,Rt.zipObject=function(c,n){return ll(c||[],n||[],ft)},Rt.zipObjectDeep=function(c,n){return ll(c||[],n||[],ze)},Rt.zipWith=$g,Rt.entries=Wa,Rt.entriesIn=ma,Rt.extend=da,Rt.extendWith=ia,La(Rt,Rt),Rt.add=gd,Rt.attempt=va,Rt.camelCase=Ja,Rt.capitalize=pa,Rt.ceil=Id,Rt.clamp=function(c,n,t){return void 0===t&&(t=n,n=void 0),void 0!==t&&(t=(t=la(t))==t?t:0),void 0!==n&&(n=(n=la(n))==n?n:0),Lt(la(c),n,t)},Rt.clone=function(c){return Pt(c,4)},Rt.cloneDeep=function(c){return Pt(c,5)},Rt.cloneDeepWith=function(c,n){return Pt(c,5,n="function"==typeof n?n:void 0)},Rt.cloneWith=function(c,n){return Pt(c,4,n="function"==typeof n?n:void 0)},Rt.conformsTo=function(c,n){return null==n||_t(c,n,Aa(n))},Rt.deburr=xa,Rt.defaultTo=function(c,n){return null==c||c!=c?n:c},Rt.divide=ad,Rt.endsWith=function(c,n,t){c=Ia(c),n=_e(n);var e=c.length,l=t=void 0===t?e:Lt(ta(t),0,e);return(t-=n.length)>=0&&c.slice(t,l)==n},Rt.eq=RI,Rt.escape=function(c){return(c=Ia(c))&&T.test(c)?c.replace(H,En):c},Rt.escapeRegExp=function(c){return(c=Ia(c))&&M.test(c)?c.replace(K,"\\$&"):c},Rt.every=function(c,n,t){var e=NI(c)?Cn:te;return t&&ag(c,n,t)&&(n=void 0),e(c,Pl(n,3))},Rt.find=lI,Rt.findIndex=xg,Rt.findKey=function(c,n){return Gn(c,Pl(n,3),de)},Rt.findLast=gI,Rt.findLastIndex=Ng,Rt.findLastKey=function(c,n){return Gn(c,Pl(n,3),ie)},Rt.floor=dd,Rt.forEach=II,Rt.forEachRight=aI,Rt.forIn=function(c,n){return null==c?c:Ie(c,Pl(n,3),Ga)},Rt.forInRight=function(c,n){return null==c?c:ae(c,Pl(n,3),Ga)},Rt.forOwn=function(c,n){return c&&de(c,Pl(n,3))},Rt.forOwnRight=function(c,n){return c&&ie(c,Pl(n,3))},Rt.get=oa,Rt.gt=JI,Rt.gte=pI,Rt.has=function(c,n){return null!=c&&eg(c,n,se)},Rt.hasIn=sa,Rt.head=yg,Rt.identity=ja,Rt.includes=function(c,n,t,e){c=yI(c)?c:Ra(c),t=t&&!e?ta(t):0;var l=c.length;return t<0&&(t=It(l+t,0)),LI(c)?t<=l&&c.indexOf(n,t)>-1:!!l&&hn(c,n,t)>-1},Rt.indexOf=function(c,n,t){var e=null==c?0:c.length;if(!e)return-1;var l=null==t?0:ta(t);return l<0&&(l=It(e+l,0)),hn(c,n,l)},Rt.inRange=function(c,n,t){return n=na(n),void 0===t?(t=n,n=0):t=na(t),function(c,n,t){return c>=at(n,t)&&c<It(n,t)}(c=la(c),n,t)},Rt.invoke=Va,Rt.isArguments=xI,Rt.isArray=NI,Rt.isArrayBuffer=YI,Rt.isArrayLike=yI,Rt.isArrayLikeObject=SI,Rt.isBoolean=function(c){return!0===c||!1===c||fI(c)&&Xe(c)==C},Rt.isBuffer=kI,Rt.isDate=HI,Rt.isElement=function(c){return fI(c)&&1===c.nodeType&&!KI(c)},Rt.isEmpty=function(c){if(null==c)return!0;if(yI(c)&&(NI(c)||"string"==typeof c||"function"==typeof c.splice||kI(c)||_I(c)||xI(c)))return!c.length;var n=tg(c);if(n==s||n==A)return!c.size;if(Fg(c))return!Qe(c).length;for(var t in c)if(Qc.call(c,t))return!1;return!0},Rt.isEqual=function(c,n){return Ge(c,n)},Rt.isEqualWith=function(c,n,t){var e=(t="function"==typeof t?t:void 0)?t(c,n):void 0;return void 0===e?Ge(c,n,void 0,t):!!e},Rt.isError=EI,Rt.isFinite=function(c){return"number"==typeof c&&et(c)},Rt.isFunction=TI,Rt.isInteger=vI,Rt.isLength=zI,Rt.isMap=wI,Rt.isMatch=function(c,n){return c===n||be(c,n,ql(n))},Rt.isMatchWith=function(c,n,t){return t="function"==typeof t?t:void 0,be(c,n,ql(n),t)},Rt.isNaN=function(c){return jI(c)&&c!=+c},Rt.isNative=function(c){if(Cg(c))throw new rc("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return he(c)},Rt.isNil=function(c){return null==c},Rt.isNull=function(c){return null===c},Rt.isNumber=jI,Rt.isObject=DI,Rt.isObjectLike=fI,Rt.isPlainObject=KI,Rt.isRegExp=MI,Rt.isSafeInteger=function(c){return vI(c)&&c>=-9007199254740991&&c<=9007199254740991},Rt.isSet=OI,Rt.isString=LI,Rt.isSymbol=PI,Rt.isTypedArray=_I,Rt.isUndefined=function(c){return void 0===c},Rt.isWeakMap=function(c){return fI(c)&&tg(c)==h},Rt.isWeakSet=function(c){return fI(c)&&"[object WeakSet]"==Xe(c)},Rt.join=function(c,n){return null==c?"":lt.call(c,n)},Rt.kebabCase=Na,Rt.last=Eg,Rt.lastIndexOf=function(c,n,t){var e=null==c?0:c.length;if(!e)return-1;var l=e;return void 0!==t&&(l=(l=ta(t))<0?It(e+l,0):at(l,e-1)),n==n?function(c,n,t){for(var e=t+1;e--;)if(c[e]===n)return e;return e}(c,n,l):bn(c,Qn,l,!0)},Rt.lowerCase=Ya,Rt.lowerFirst=ya,Rt.lt=qI,Rt.lte=$I,Rt.max=function(c){return c&&c.length?ee(c,ja,oe):void 0},Rt.maxBy=function(c,n){return c&&c.length?ee(c,Pl(n,2),oe):void 0},Rt.mean=function(c){return un(c,ja)},Rt.meanBy=function(c,n){return un(c,Pl(n,2))},Rt.min=function(c){return c&&c.length?ee(c,ja,We):void 0},Rt.minBy=function(c,n){return c&&c.length?ee(c,Pl(n,2),We):void 0},Rt.stubArray=ed,Rt.stubFalse=ld,Rt.stubObject=function(){return{}},Rt.stubString=function(){return""},Rt.stubTrue=function(){return!0},Rt.multiply=Cd,Rt.nth=function(c,n){return c&&c.length?xe(c,ta(n)):void 0},Rt.noConflict=function(){return Mc._===this&&(Mc._=Jc),this},Rt.noop=Pa,Rt.now=oI,Rt.pad=function(c,n,t){c=Ia(c);var e=(n=ta(n))?Kn(c):0;if(!n||e>=n)return c;var l=(n-e)/2;return Nl(ct(l),t)+c+Nl($n(l),t)},Rt.padEnd=function(c,n,t){c=Ia(c);var e=(n=ta(n))?Kn(c):0;return n&&e<n?c+Nl(n-e,t):c},Rt.padStart=function(c,n,t){c=Ia(c);var e=(n=ta(n))?Kn(c):0;return n&&e<n?Nl(n-e,t)+c:c},Rt.parseInt=function(c,n,t){return t||null==n?n=0:n&&(n=+n),it(Ia(c).replace(L,""),n||0)},Rt.random=function(c,n,t){if(t&&"boolean"!=typeof t&&ag(c,n,t)&&(n=t=void 0),void 0===t&&("boolean"==typeof n?(t=n,n=void 0):"boolean"==typeof c&&(t=c,c=void 0)),void 0===c&&void 0===n?(c=0,n=1):(c=na(c),void 0===n?(n=c,c=0):n=na(n)),c>n){var e=c;c=n,n=e}if(t||c%1||n%1){var l=Ct();return at(c+l*(n-c+fc("1e-"+((l+"").length-1))),n)}return ke(c,n)},Rt.reduce=function(c,n,t){var e=NI(c)?Zn:Rn,l=arguments.length<3;return e(c,Pl(n,4),t,l,ce)},Rt.reduceRight=function(c,n,t){var e=NI(c)?Bn:Rn,l=arguments.length<3;return e(c,Pl(n,4),t,l,ne)},Rt.repeat=function(c,n,t){return n=(t?ag(c,n,t):void 0===n)?1:ta(n),He(Ia(c),n)},Rt.replace=function(){var c=arguments,n=Ia(c[0]);return c.length<3?n:n.replace(c[1],c[2])},Rt.result=function(c,n,t){var e=-1,l=(n=al(n,c)).length;for(l||(l=1,c=void 0);++e<l;){var g=null==c?void 0:c[ug(n[e])];void 0===g&&(e=l,g=t),c=TI(g)?g.call(c):g}return c},Rt.round=Fd,Rt.runInContext=c,Rt.sample=function(c){return(NI(c)?Tt:Te)(c)},Rt.size=function(c){if(null==c)return 0;if(yI(c))return LI(c)?Kn(c):c.length;var n=tg(c);return n==s||n==A?c.size:Qe(c).length},Rt.snakeCase=Sa,Rt.some=function(c,n,t){var e=NI(c)?Vn:Ke;return t&&ag(c,n,t)&&(n=void 0),e(c,Pl(n,3))},Rt.sortedIndex=function(c,n){return Me(c,n)},Rt.sortedIndexBy=function(c,n,t){return Oe(c,n,Pl(t,2))},Rt.sortedIndexOf=function(c,n){var t=null==c?0:c.length;if(t){var e=Me(c,n);if(e<t&&RI(c[e],n))return e}return-1},Rt.sortedLastIndex=function(c,n){return Me(c,n,!0)},Rt.sortedLastIndexBy=function(c,n,t){return Oe(c,n,Pl(t,2),!0)},Rt.sortedLastIndexOf=function(c,n){if(null==c?0:c.length){var t=Me(c,n,!0)-1;if(RI(c[t],n))return t}return-1},Rt.startCase=ka,Rt.startsWith=function(c,n,t){return c=Ia(c),t=null==t?0:Lt(ta(t),0,c.length),n=_e(n),c.slice(t,t+n.length)==n},Rt.subtract=rd,Rt.sum=function(c){return c&&c.length?Jn(c,ja):0},Rt.sumBy=function(c,n){return c&&c.length?Jn(c,Pl(n,2)):0},Rt.template=function(c,n,t){var e=Rt.templateSettings;t&&ag(c,n,t)&&(n=void 0),c=Ia(c),n=ia({},n,e,vl);var l,g,I=ia({},n.imports,e.imports,vl),a=Aa(I),d=Nn(I,a),i=0,C=n.interpolate||Cc,F="__p += '",r=Zc((n.escape||Cc).source+"|"+C.source+"|"+(C===D?tc:Cc).source+"|"+(n.evaluate||Cc).source+"|$","g"),X="//# sourceURL="+(Qc.call(n,"sourceURL")?(n.sourceURL+"").replace(/[\r\n]/g," "):"lodash.templateSources["+ ++Tc+"]")+"\n";c.replace(r,(function(n,t,e,I,a,d){return e||(e=I),F+=c.slice(i,d).replace(Fc,Tn),t&&(l=!0,F+="' +\n__e("+t+") +\n'"),a&&(g=!0,F+="';\n"+a+";\n__p += '"),e&&(F+="' +\n((__t = ("+e+")) == null ? '' : __t) +\n'"),i=d+n.length,n})),F+="';\n";var o=Qc.call(n,"variable")&&n.variable;o||(F="with (obj) {\n"+F+"\n}\n"),F=(g?F.replace(Y,""):F).replace(y,"$1").replace(S,"$1;"),F="function("+(o||"obj")+") {\n"+(o?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(l?", __e = _.escape":"")+(g?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+F+"return __p\n}";var s=va((function(){return Xc(a,X+"return "+F).apply(void 0,d)}));if(s.source=F,EI(s))throw s;return s},Rt.times=function(c,n){if((c=ta(c))<1||c>9007199254740991)return[];var t=4294967295,e=at(c,4294967295);c-=4294967295;for(var l=pn(e,n=Pl(n));++t<c;)n(t);return l},Rt.toFinite=na,Rt.toInteger=ta,Rt.toLength=ea,Rt.toLower=function(c){return Ia(c).toLowerCase()},Rt.toNumber=la,Rt.toSafeInteger=function(c){return c?Lt(ta(c),-9007199254740991,9007199254740991):0===c?c:0},Rt.toString=Ia,Rt.toUpper=function(c){return Ia(c).toUpperCase()},Rt.trim=function(c,n,t){if((c=Ia(c))&&(t||void 0===n))return c.replace(O,"");if(!c||!(n=_e(n)))return c;var e=Mn(c),l=Mn(n);return il(e,yn(e,l),Sn(e,l)+1).join("")},Rt.trimEnd=function(c,n,t){if((c=Ia(c))&&(t||void 0===n))return c.replace(P,"");if(!c||!(n=_e(n)))return c;var e=Mn(c);return il(e,0,Sn(e,Mn(n))+1).join("")},Rt.trimStart=function(c,n,t){if((c=Ia(c))&&(t||void 0===n))return c.replace(L,"");if(!c||!(n=_e(n)))return c;var e=Mn(c);return il(e,yn(e,Mn(n))).join("")},Rt.truncate=function(c,n){var t=30,e="...";if(DI(n)){var l="separator"in n?n.separator:l;t="length"in n?ta(n.length):t,e="omission"in n?_e(n.omission):e}var g=(c=Ia(c)).length;if(vn(c)){var I=Mn(c);g=I.length}if(t>=g)return c;var a=t-Kn(e);if(a<1)return e;var d=I?il(I,0,a).join(""):c.slice(0,a);if(void 0===l)return d+e;if(I&&(a+=d.length-a),MI(l)){if(c.slice(a).search(l)){var i,C=d;for(l.global||(l=Zc(l.source,Ia(ec.exec(l))+"g")),l.lastIndex=0;i=l.exec(C);)var F=i.index;d=d.slice(0,void 0===F?a:F)}}else if(c.indexOf(_e(l),a)!=a){var r=d.lastIndexOf(l);r>-1&&(d=d.slice(0,r))}return d+e},Rt.unescape=function(c){return(c=Ia(c))&&E.test(c)?c.replace(k,On):c},Rt.uniqueId=function(c){var n=++uc;return Ia(c)+n},Rt.upperCase=Ha,Rt.upperFirst=Ea,Rt.each=II,Rt.eachRight=aI,Rt.first=yg,La(Rt,(id={},de(Rt,(function(c,n){Qc.call(Rt.prototype,n)||(id[n]=c)})),id),{chain:!1}),Rt.VERSION="4.17.15",an(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(c){Rt[c].placeholder=Rt})),an(["drop","take"],(function(c,n){Nt.prototype[c]=function(t){t=void 0===t?1:It(ta(t),0);var e=this.__filtered__&&!n?new Nt(this):this.clone();return e.__filtered__?e.__takeCount__=at(t,e.__takeCount__):e.__views__.push({size:at(t,4294967295),type:c+(e.__dir__<0?"Right":"")}),e},Nt.prototype[c+"Right"]=function(n){return this.reverse()[c](n).reverse()}})),an(["filter","map","takeWhile"],(function(c,n){var t=n+1,e=1==t||3==t;Nt.prototype[c]=function(c){var n=this.clone();return n.__iteratees__.push({iteratee:Pl(c,3),type:t}),n.__filtered__=n.__filtered__||e,n}})),an(["head","last"],(function(c,n){var t="take"+(n?"Right":"");Nt.prototype[c]=function(){return this[t](1).value()[0]}})),an(["initial","tail"],(function(c,n){var t="drop"+(n?"":"Right");Nt.prototype[c]=function(){return this.__filtered__?new Nt(this):this[t](1)}})),Nt.prototype.compact=function(){return this.filter(ja)},Nt.prototype.find=function(c){return this.filter(c).head()},Nt.prototype.findLast=function(c){return this.reverse().find(c)},Nt.prototype.invokeMap=Ee((function(c,n){return"function"==typeof c?new Nt(this):this.map((function(t){return Ve(t,c,n)}))})),Nt.prototype.reject=function(c){return this.filter(UI(Pl(c)))},Nt.prototype.slice=function(c,n){c=ta(c);var t=this;return t.__filtered__&&(c>0||n<0)?new Nt(t):(c<0?t=t.takeRight(-c):c&&(t=t.drop(c)),void 0!==n&&(t=(n=ta(n))<0?t.dropRight(-n):t.take(n-c)),t)},Nt.prototype.takeRightWhile=function(c){return this.reverse().takeWhile(c).reverse()},Nt.prototype.toArray=function(){return this.take(4294967295)},de(Nt.prototype,(function(c,n){var t=/^(?:filter|find|map|reject)|While$/.test(n),e=/^(?:head|last)$/.test(n),l=Rt[e?"take"+("last"==n?"Right":""):n],g=e||/^find/.test(n);l&&(Rt.prototype[n]=function(){var n=this.__wrapped__,I=e?[1]:arguments,a=n instanceof Nt,d=I[0],i=a||NI(n),C=function(c){var n=l.apply(Rt,sn([c],I));return e&&F?n[0]:n};i&&t&&"function"==typeof d&&1!=d.length&&(a=i=!1);var F=this.__chain__,r=!!this.__actions__.length,X=g&&!F,o=a&&!r;if(!g&&i){n=o?n:new Nt(this);var s=c.apply(n,I);return s.__actions__.push({func:nI,args:[C],thisArg:void 0}),new xt(s,F)}return X&&o?c.apply(this,I):(s=this.thru(C),X?e?s.value()[0]:s.value():s)})})),an(["pop","push","shift","sort","splice","unshift"],(function(c){var n=Ac[c],t=/^(?:push|sort|unshift)$/.test(c)?"tap":"thru",e=/^(?:pop|shift)$/.test(c);Rt.prototype[c]=function(){var c=arguments;if(e&&!this.__chain__){var l=this.value();return n.apply(NI(l)?l:[],c)}return this[t]((function(t){return n.apply(NI(t)?t:[],c)}))}})),de(Nt.prototype,(function(c,n){var t=Rt[n];if(t){var e=t.name+"";Qc.call(At,e)||(At[e]=[]),At[e].push({name:n,func:t})}})),At[Rl(void 0,2).name]=[{name:"wrapper",func:void 0}],Nt.prototype.clone=function(){var c=new Nt(this.__wrapped__);return c.__actions__=Bl(this.__actions__),c.__dir__=this.__dir__,c.__filtered__=this.__filtered__,c.__iteratees__=Bl(this.__iteratees__),c.__takeCount__=this.__takeCount__,c.__views__=Bl(this.__views__),c},Nt.prototype.reverse=function(){if(this.__filtered__){var c=new Nt(this);c.__dir__=-1,c.__filtered__=!0}else(c=this.clone()).__dir__*=-1;return c},Nt.prototype.value=function(){var c=this.__wrapped__.value(),n=this.__dir__,t=NI(c),e=n<0,l=t?c.length:0,g=function(c,n,t){var e=-1,l=t.length;for(;++e<l;){var g=t[e],I=g.size;switch(g.type){case"drop":c+=I;break;case"dropRight":n-=I;break;case"take":n=at(n,c+I);break;case"takeRight":c=It(c,n-I)}}return{start:c,end:n}}(0,l,this.__views__),I=g.start,a=g.end,d=a-I,i=e?a:I-1,C=this.__iteratees__,F=C.length,r=0,X=at(d,this.__takeCount__);if(!t||!e&&l==d&&X==d)return tl(c,this.__actions__);var o=[];c:for(;d--&&r<X;){for(var s=-1,Z=c[i+=n];++s<F;){var B=C[s],V=B.iteratee,A=B.type,G=V(Z);if(2==A)Z=G;else if(!G){if(1==A)continue c;break c}}o[r++]=Z}return o},Rt.prototype.at=tI,Rt.prototype.chain=function(){return cI(this)},Rt.prototype.commit=function(){return new xt(this.value(),this.__chain__)},Rt.prototype.next=function(){void 0===this.__values__&&(this.__values__=ca(this.value()));var c=this.__index__>=this.__values__.length;return{done:c,value:c?void 0:this.__values__[this.__index__++]}},Rt.prototype.plant=function(c){for(var n,t=this;t instanceof pt;){var e=mg(t);e.__index__=0,e.__values__=void 0,n?l.__wrapped__=e:n=e;var l=e;t=t.__wrapped__}return l.__wrapped__=c,n},Rt.prototype.reverse=function(){var c=this.__wrapped__;if(c instanceof Nt){var n=c;return this.__actions__.length&&(n=new Nt(this)),(n=n.reverse()).__actions__.push({func:nI,args:[Dg],thisArg:void 0}),new xt(n,this.__chain__)}return this.thru(Dg)},Rt.prototype.toJSON=Rt.prototype.valueOf=Rt.prototype.value=function(){return tl(this.__wrapped__,this.__actions__)},Rt.prototype.first=Rt.prototype.head,qc&&(Rt.prototype[qc]=function(){return this}),Rt}();Mc._=Ln,void 0===(l=function(){return Ln}.call(n,t,n,e))||(e.exports=l)}).call(this)}).call(this,t(19),t(55)(c))},function(c,n,t){c.exports=t(133)},function(c,n,t){c.exports=function(c){"use strict";var n=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];function t(c,n){var t=c[0],e=c[1],l=c[2],g=c[3];e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&l|~e&g)+n[0]-680876936|0)<<7|t>>>25)+e|0)&e|~t&l)+n[1]-389564586|0)<<12|g>>>20)+t|0)&t|~g&e)+n[2]+606105819|0)<<17|l>>>15)+g|0)&g|~l&t)+n[3]-1044525330|0)<<22|e>>>10)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&l|~e&g)+n[4]-176418897|0)<<7|t>>>25)+e|0)&e|~t&l)+n[5]+1200080426|0)<<12|g>>>20)+t|0)&t|~g&e)+n[6]-1473231341|0)<<17|l>>>15)+g|0)&g|~l&t)+n[7]-45705983|0)<<22|e>>>10)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&l|~e&g)+n[8]+1770035416|0)<<7|t>>>25)+e|0)&e|~t&l)+n[9]-1958414417|0)<<12|g>>>20)+t|0)&t|~g&e)+n[10]-42063|0)<<17|l>>>15)+g|0)&g|~l&t)+n[11]-1990404162|0)<<22|e>>>10)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&l|~e&g)+n[12]+1804603682|0)<<7|t>>>25)+e|0)&e|~t&l)+n[13]-40341101|0)<<12|g>>>20)+t|0)&t|~g&e)+n[14]-1502002290|0)<<17|l>>>15)+g|0)&g|~l&t)+n[15]+1236535329|0)<<22|e>>>10)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&g|l&~g)+n[1]-165796510|0)<<5|t>>>27)+e|0)&l|e&~l)+n[6]-1069501632|0)<<9|g>>>23)+t|0)&e|t&~e)+n[11]+643717713|0)<<14|l>>>18)+g|0)&t|g&~t)+n[0]-373897302|0)<<20|e>>>12)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&g|l&~g)+n[5]-701558691|0)<<5|t>>>27)+e|0)&l|e&~l)+n[10]+38016083|0)<<9|g>>>23)+t|0)&e|t&~e)+n[15]-660478335|0)<<14|l>>>18)+g|0)&t|g&~t)+n[4]-405537848|0)<<20|e>>>12)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&g|l&~g)+n[9]+568446438|0)<<5|t>>>27)+e|0)&l|e&~l)+n[14]-1019803690|0)<<9|g>>>23)+t|0)&e|t&~e)+n[3]-187363961|0)<<14|l>>>18)+g|0)&t|g&~t)+n[8]+1163531501|0)<<20|e>>>12)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e&g|l&~g)+n[13]-1444681467|0)<<5|t>>>27)+e|0)&l|e&~l)+n[2]-51403784|0)<<9|g>>>23)+t|0)&e|t&~e)+n[7]+1735328473|0)<<14|l>>>18)+g|0)&t|g&~t)+n[12]-1926607734|0)<<20|e>>>12)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e^l^g)+n[5]-378558|0)<<4|t>>>28)+e|0)^e^l)+n[8]-2022574463|0)<<11|g>>>21)+t|0)^t^e)+n[11]+1839030562|0)<<16|l>>>16)+g|0)^g^t)+n[14]-35309556|0)<<23|e>>>9)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e^l^g)+n[1]-1530992060|0)<<4|t>>>28)+e|0)^e^l)+n[4]+1272893353|0)<<11|g>>>21)+t|0)^t^e)+n[7]-155497632|0)<<16|l>>>16)+g|0)^g^t)+n[10]-1094730640|0)<<23|e>>>9)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e^l^g)+n[13]+681279174|0)<<4|t>>>28)+e|0)^e^l)+n[0]-358537222|0)<<11|g>>>21)+t|0)^t^e)+n[3]-722521979|0)<<16|l>>>16)+g|0)^g^t)+n[6]+76029189|0)<<23|e>>>9)+l|0,e=((e+=((l=((l+=((g=((g+=((t=((t+=(e^l^g)+n[9]-640364487|0)<<4|t>>>28)+e|0)^e^l)+n[12]-421815835|0)<<11|g>>>21)+t|0)^t^e)+n[15]+530742520|0)<<16|l>>>16)+g|0)^g^t)+n[2]-995338651|0)<<23|e>>>9)+l|0,e=((e+=((g=((g+=(e^((t=((t+=(l^(e|~g))+n[0]-198630844|0)<<6|t>>>26)+e|0)|~l))+n[7]+1126891415|0)<<10|g>>>22)+t|0)^((l=((l+=(t^(g|~e))+n[14]-1416354905|0)<<15|l>>>17)+g|0)|~t))+n[5]-57434055|0)<<21|e>>>11)+l|0,e=((e+=((g=((g+=(e^((t=((t+=(l^(e|~g))+n[12]+1700485571|0)<<6|t>>>26)+e|0)|~l))+n[3]-1894986606|0)<<10|g>>>22)+t|0)^((l=((l+=(t^(g|~e))+n[10]-1051523|0)<<15|l>>>17)+g|0)|~t))+n[1]-2054922799|0)<<21|e>>>11)+l|0,e=((e+=((g=((g+=(e^((t=((t+=(l^(e|~g))+n[8]+1873313359|0)<<6|t>>>26)+e|0)|~l))+n[15]-30611744|0)<<10|g>>>22)+t|0)^((l=((l+=(t^(g|~e))+n[6]-1560198380|0)<<15|l>>>17)+g|0)|~t))+n[13]+1309151649|0)<<21|e>>>11)+l|0,e=((e+=((g=((g+=(e^((t=((t+=(l^(e|~g))+n[4]-145523070|0)<<6|t>>>26)+e|0)|~l))+n[11]-1120210379|0)<<10|g>>>22)+t|0)^((l=((l+=(t^(g|~e))+n[2]+718787259|0)<<15|l>>>17)+g|0)|~t))+n[9]-343485551|0)<<21|e>>>11)+l|0,c[0]=t+c[0]|0,c[1]=e+c[1]|0,c[2]=l+c[2]|0,c[3]=g+c[3]|0}function e(c){var n,t=[];for(n=0;n<64;n+=4)t[n>>2]=c.charCodeAt(n)+(c.charCodeAt(n+1)<<8)+(c.charCodeAt(n+2)<<16)+(c.charCodeAt(n+3)<<24);return t}function l(c){var n,t=[];for(n=0;n<64;n+=4)t[n>>2]=c[n]+(c[n+1]<<8)+(c[n+2]<<16)+(c[n+3]<<24);return t}function g(c){var n,l,g,I,a,d,i=c.length,C=[1732584193,-271733879,-1732584194,271733878];for(n=64;n<=i;n+=64)t(C,e(c.substring(n-64,n)));for(l=(c=c.substring(n-64)).length,g=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],n=0;n<l;n+=1)g[n>>2]|=c.charCodeAt(n)<<(n%4<<3);if(g[n>>2]|=128<<(n%4<<3),n>55)for(t(C,g),n=0;n<16;n+=1)g[n]=0;return I=(I=8*i).toString(16).match(/(.*?)(.{0,8})$/),a=parseInt(I[2],16),d=parseInt(I[1],16)||0,g[14]=a,g[15]=d,t(C,g),C}function I(c){var t,e="";for(t=0;t<4;t+=1)e+=n[c>>8*t+4&15]+n[c>>8*t&15];return e}function a(c){var n;for(n=0;n<c.length;n+=1)c[n]=I(c[n]);return c.join("")}function d(c){return/[\u0080-\uFFFF]/.test(c)&&(c=unescape(encodeURIComponent(c))),c}function i(c){var n,t=[],e=c.length;for(n=0;n<e-1;n+=2)t.push(parseInt(c.substr(n,2),16));return String.fromCharCode.apply(String,t)}function C(){this.reset()}return a(g("hello")),"undefined"==typeof ArrayBuffer||ArrayBuffer.prototype.slice||function(){function n(c,n){return(c=0|c||0)<0?Math.max(c+n,0):Math.min(c,n)}ArrayBuffer.prototype.slice=function(t,e){var l,g,I,a,d=this.byteLength,i=n(t,d),C=d;return e!==c&&(C=n(e,d)),i>C?new ArrayBuffer(0):(l=C-i,g=new ArrayBuffer(l),I=new Uint8Array(g),a=new Uint8Array(this,i,l),I.set(a),g)}}(),C.prototype.append=function(c){return this.appendBinary(d(c)),this},C.prototype.appendBinary=function(c){this._buff+=c,this._length+=c.length;var n,l=this._buff.length;for(n=64;n<=l;n+=64)t(this._hash,e(this._buff.substring(n-64,n)));return this._buff=this._buff.substring(n-64),this},C.prototype.end=function(c){var n,t,e=this._buff,l=e.length,g=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(n=0;n<l;n+=1)g[n>>2]|=e.charCodeAt(n)<<(n%4<<3);return this._finish(g,l),t=a(this._hash),c&&(t=i(t)),this.reset(),t},C.prototype.reset=function(){return this._buff="",this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},C.prototype.getState=function(){return{buff:this._buff,length:this._length,hash:this._hash}},C.prototype.setState=function(c){return this._buff=c.buff,this._length=c.length,this._hash=c.hash,this},C.prototype.destroy=function(){delete this._hash,delete this._buff,delete this._length},C.prototype._finish=function(c,n){var e,l,g,I=n;if(c[I>>2]|=128<<(I%4<<3),I>55)for(t(this._hash,c),I=0;I<16;I+=1)c[I]=0;e=(e=8*this._length).toString(16).match(/(.*?)(.{0,8})$/),l=parseInt(e[2],16),g=parseInt(e[1],16)||0,c[14]=l,c[15]=g,t(this._hash,c)},C.hash=function(c,n){return C.hashBinary(d(c),n)},C.hashBinary=function(c,n){var t=a(g(c));return n?i(t):t},C.ArrayBuffer=function(){this.reset()},C.ArrayBuffer.prototype.append=function(c){var n,e,g,I,a,d=(e=this._buff.buffer,g=c,I=!0,(a=new Uint8Array(e.byteLength+g.byteLength)).set(new Uint8Array(e)),a.set(new Uint8Array(g),e.byteLength),I?a:a.buffer),i=d.length;for(this._length+=c.byteLength,n=64;n<=i;n+=64)t(this._hash,l(d.subarray(n-64,n)));return this._buff=n-64<i?new Uint8Array(d.buffer.slice(n-64)):new Uint8Array(0),this},C.ArrayBuffer.prototype.end=function(c){var n,t,e=this._buff,l=e.length,g=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(n=0;n<l;n+=1)g[n>>2]|=e[n]<<(n%4<<3);return this._finish(g,l),t=a(this._hash),c&&(t=i(t)),this.reset(),t},C.ArrayBuffer.prototype.reset=function(){return this._buff=new Uint8Array(0),this._length=0,this._hash=[1732584193,-271733879,-1732584194,271733878],this},C.ArrayBuffer.prototype.getState=function(){var c,n=C.prototype.getState.call(this);return n.buff=(c=n.buff,String.fromCharCode.apply(null,new Uint8Array(c))),n},C.ArrayBuffer.prototype.setState=function(c){return c.buff=function(c,n){var t,e=c.length,l=new ArrayBuffer(e),g=new Uint8Array(l);for(t=0;t<e;t+=1)g[t]=c.charCodeAt(t);return n?g:l}(c.buff,!0),C.prototype.setState.call(this,c)},C.ArrayBuffer.prototype.destroy=C.prototype.destroy,C.ArrayBuffer.prototype._finish=C.prototype._finish,C.ArrayBuffer.hash=function(c,n){var e=a(function(c){var n,e,g,I,a,d,i=c.length,C=[1732584193,-271733879,-1732584194,271733878];for(n=64;n<=i;n+=64)t(C,l(c.subarray(n-64,n)));for(c=n-64<i?c.subarray(n-64):new Uint8Array(0),e=c.length,g=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],n=0;n<e;n+=1)g[n>>2]|=c[n]<<(n%4<<3);if(g[n>>2]|=128<<(n%4<<3),n>55)for(t(C,g),n=0;n<16;n+=1)g[n]=0;return I=(I=8*i).toString(16).match(/(.*?)(.{0,8})$/),a=parseInt(I[2],16),d=parseInt(I[1],16)||0,g[14]=a,g[15]=d,t(C,g),C}(new Uint8Array(c)));return n?i(e):e},C}()},function(c,n,t){c.exports=t(56)},function(c,n,t){"use strict";(function(c,e){var l=t(11),g=t.n(l),I=t(5),a=t.n(I),d=t(2),i=t(4),C=t.n(i),F=t(8),r=t.n(F),X=t(27),o=t.n(X),s=t(28),Z=t.n(s);function B(c){if(c instanceof ArrayBuffer)return function(c){if("function"==typeof c.slice)return c.slice(0);var n=new ArrayBuffer(c.byteLength),t=new Uint8Array(n),e=new Uint8Array(c);return t.set(e),n}(c);var n=c.size,t=c.type;return"function"==typeof c.slice?c.slice(0,n,t):c.webkitSlice(0,n,t)}var V,A,G=Function.prototype.toString,b=G.call(Object);function h(c){var n,t,e;if(!c||"object"!=typeof c)return c;if(Array.isArray(c)){for(n=[],t=0,e=c.length;t<e;t++)n[t]=h(c[t]);return n}if(c instanceof Date)return c.toISOString();if(function(c){return"undefined"!=typeof ArrayBuffer&&c instanceof ArrayBuffer||"undefined"!=typeof Blob&&c instanceof Blob}(c))return B(c);if(!function(c){var n=Object.getPrototypeOf(c);if(null===n)return!0;var t=n.constructor;return"function"==typeof t&&t instanceof t&&G.call(t)==b}(c))return c;for(t in n={},c)if(Object.prototype.hasOwnProperty.call(c,t)){var l=h(c[t]);void 0!==l&&(n[t]=l)}return n}function U(c){var n=!1;return g()((function(t){if(n)throw new Error("once called more than once");n=!0,c.apply(this,t)}))}function Q(c){return g()((function(n){n=h(n);var t=this,e="function"==typeof n[n.length-1]&&n.pop(),l=new Promise((function(e,l){var g;try{var I=U((function(c,n){c?l(c):e(n)}));n.push(I),(g=c.apply(t,n))&&"function"==typeof g.then&&e(g)}catch(c){l(c)}}));return e&&l.then((function(c){e(null,c)}),e),l}))}function u(c,n){return Q(g()((function(t){if(this._closed)return Promise.reject(new Error("database is closed"));if(this._destroyed)return Promise.reject(new Error("database is destroyed"));var e=this;return function(c,n,t){if(c.constructor.listeners("debug").length){for(var e=["api",c.name,n],l=0;l<t.length-1;l++)e.push(t[l]);c.constructor.emit("debug",e);var g=t[t.length-1];t[t.length-1]=function(t,e){var l=["api",c.name,n];l=l.concat(t?["error",t]:["success",e]),c.constructor.emit("debug",l),g(t,e)}}}(e,c,t),this.taskqueue.isReady?n.apply(this,t):new Promise((function(n,l){e.taskqueue.addTask((function(g){g?l(g):n(e[c].apply(e,t))}))}))})))}function W(c){return"$"+c}function m(c){return c.substring(1)}function R(){this._store={}}function J(c){if(this._store=new R,c&&Array.isArray(c))for(var n=0,t=c.length;n<t;n++)this.add(c[n])}function p(c,n){for(var t={},e=0,l=n.length;e<l;e++){var g=n[e];g in c&&(t[g]=c[g])}return t}R.prototype.get=function(c){var n=W(c);return this._store[n]},R.prototype.set=function(c,n){var t=W(c);return this._store[t]=n,!0},R.prototype.has=function(c){return W(c)in this._store},R.prototype.delete=function(c){var n=W(c),t=n in this._store;return delete this._store[n],t},R.prototype.forEach=function(c){for(var n=Object.keys(this._store),t=0,e=n.length;t<e;t++){var l=n[t];c(this._store[l],l=m(l))}},Object.defineProperty(R.prototype,"size",{get:function(){return Object.keys(this._store).length}}),J.prototype.add=function(c){return this._store.set(c,!0)},J.prototype.has=function(c){return this._store.has(c)},J.prototype.forEach=function(c){this._store.forEach((function(n,t){c(t)}))},Object.defineProperty(J.prototype,"size",{get:function(){return this._store.size}}),!function(){if("undefined"==typeof Symbol||"undefined"==typeof Map||"undefined"==typeof Set)return!1;var c=Object.getOwnPropertyDescriptor(Map,Symbol.species);return c&&"get"in c&&Map[Symbol.species]===Map}()?(V=J,A=R):(V=Set,A=Map);var x;function N(c){return c}function Y(c){return[{ok:c}]}function y(c,n,t){var e=n.docs,l=new A;e.forEach((function(c){l.has(c.id)?l.get(c.id).push(c):l.set(c.id,[c])}));var g=l.size,I=0,a=new Array(g);function d(){var c;++I===g&&(c=[],a.forEach((function(n){n.docs.forEach((function(t){c.push({id:n.id,docs:[t]})}))})),t(null,{results:c}))}var i=[];l.forEach((function(c,n){i.push(n)}));var C=0;function F(){if(!(C>=i.length)){var t=Math.min(C+6,i.length),e=i.slice(C,t);!function(t,e){t.forEach((function(t,g){var I=e+g,i=l.get(t),C=p(i[0],["atts_since","attachments"]);C.open_revs=i.map((function(c){return c.rev})),C.open_revs=C.open_revs.filter(N);var r=N;0===C.open_revs.length&&(delete C.open_revs,r=Y),["revs","attachments","binary","ajax","latest"].forEach((function(c){c in n&&(C[c]=n[c])})),c.get(t,C,(function(c,n){var e,l,g;e=c?[{error:c}]:r(n),l=t,g=e,a[I]={id:l,docs:g},d(),F()}))}))}(e,C),C+=e.length}}F()}try{localStorage.setItem("_pouch_check_localstorage",1),x=!!localStorage.getItem("_pouch_check_localstorage")}catch(c){x=!1}function S(){return x}function k(){d.EventEmitter.call(this),this._listeners={},function(c){S()&&addEventListener("storage",(function(n){c.emit(n.key)}))}(this)}function H(c){if("undefined"!=typeof console&&"function"==typeof console[c]){var n=Array.prototype.slice.call(arguments,1);console[c].apply(console,n)}}function E(c){var n=0;return c||(n=2e3),function(c,n){return c=parseInt(c,10)||0,(n=parseInt(n,10))!=n||n<=c?n=(c||1)<<1:n+=1,n>6e5&&(c=3e5,n=6e5),~~((n-c)*Math.random()+c)}(c,n)}function T(c,n){H("info","The above "+c+" is totally normal. "+n)}C()(k,d.EventEmitter),k.prototype.addListener=function(c,n,t,e){if(!this._listeners[n]){var l=this,g=!1;this._listeners[n]=I,this.on(c,I)}function I(){if(l._listeners[n])if(g)g="waiting";else{g=!0;var c=p(e,["style","include_docs","attachments","conflicts","filter","doc_ids","view","since","query_params","binary","return_docs"]);t.changes(c).on("change",(function(c){c.seq>e.since&&!e.cancelled&&(e.since=c.seq,e.onChange(c))})).on("complete",(function(){"waiting"===g&&a()(I),g=!1})).on("error",(function(){g=!1}))}}},k.prototype.removeListener=function(c,n){n in this._listeners&&(d.EventEmitter.prototype.removeListener.call(this,c,this._listeners[n]),delete this._listeners[n])},k.prototype.notifyLocalWindows=function(c){S()&&(localStorage[c]="a"===localStorage[c]?"b":"a")},k.prototype.notify=function(c){this.emit(c),this.notifyLocalWindows(c)};var v="function"==typeof Object.assign?Object.assign:function(c){for(var n=Object(c),t=1;t<arguments.length;t++){var e=arguments[t];if(null!=e)for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&(n[l]=e[l])}return n};function z(c,n,t){Error.call(this,t),this.status=c,this.name=n,this.message=t,this.error=!0}C()(z,Error),z.prototype.toString=function(){return JSON.stringify({status:this.status,name:this.name,message:this.message,reason:this.reason})};new z(401,"unauthorized","Name or password is incorrect.");var D=new z(400,"bad_request","Missing JSON list of 'docs'"),f=new z(404,"not_found","missing"),w=new z(409,"conflict","Document update conflict"),j=new z(400,"bad_request","_id field must contain a string"),K=new z(412,"missing_id","_id is required for puts"),M=new z(400,"bad_request","Only reserved document ids may start with underscore."),O=(new z(412,"precondition_failed","Database not open"),new z(500,"unknown_error","Database encountered an unknown error")),L=new z(500,"badarg","Some query argument is invalid"),P=(new z(400,"invalid_request","Request was invalid"),new z(400,"query_parse_error","Some query parameter is invalid")),_=new z(500,"doc_validation","Bad special document member"),q=new z(400,"bad_request","Something wrong with the request"),$=new z(400,"bad_request","Document must be a JSON object"),cc=(new z(404,"not_found","Database not found"),new z(500,"indexed_db_went_bad","unknown")),nc=(new z(500,"web_sql_went_bad","unknown"),new z(500,"levelDB_went_went_bad","unknown"),new z(403,"forbidden","Forbidden by design doc validate_doc_update function"),new z(400,"bad_request","Invalid rev format")),tc=(new z(412,"file_exists","The database could not be created, the file already exists."),new z(412,"missing_stub","A pre-existing attachment stub wasn't found"));new z(413,"invalid_url","Provided URL is invalid");function ec(c,n){function t(n){for(var t in c)"function"!=typeof c[t]&&(this[t]=c[t]);void 0!==n&&(this.reason=n)}return t.prototype=z.prototype,new t(n)}function lc(c){if("object"!=typeof c){var n=c;(c=O).data=n}return"error"in c&&"conflict"===c.error&&(c.name="conflict",c.status=409),"name"in c||(c.name=c.error||"unknown"),"status"in c||(c.status=500),"message"in c||(c.message=c.message||c.reason),c}function gc(c){var n={},t=c.filter&&"function"==typeof c.filter;return n.query=c.query_params,function(e){e.doc||(e.doc={});var l=t&&function(c,n,t){try{return!c(n,t)}catch(c){var e="Filter function threw: "+c.toString();return ec(q,e)}}(c.filter,e.doc,n);if("object"==typeof l)return l;if(l)return!1;if(c.include_docs){if(!c.attachments)for(var g in e.doc._attachments)e.doc._attachments.hasOwnProperty(g)&&(e.doc._attachments[g].stub=!0)}else delete e.doc;return!0}}function Ic(c){for(var n=[],t=0,e=c.length;t<e;t++)n=n.concat(c[t]);return n}function ac(c){var n;if(c?"string"!=typeof c?n=ec(j):/^_/.test(c)&&!/^_(design|local)/.test(c)&&(n=ec(M)):n=ec(K),n)throw n}function dc(c){return"boolean"==typeof c._remote?c._remote:"function"==typeof c.type&&(H("warn","db.type() is deprecated and will be removed in a future version of PouchDB"),"http"===c.type())}function ic(c){if(!c)return null;var n=c.split("/");return 2===n.length?n:1===n.length?[c,c]:null}function Cc(c){var n=ic(c);return n?n.join("/"):null}var Fc=["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],rc=/(?:^|&)([^&=]*)=?([^&]*)/g,Xc=/^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;function oc(c){for(var n=Xc.exec(c),t={},e=14;e--;){var l=Fc[e],g=n[e]||"",I=-1!==["user","password"].indexOf(l);t[l]=I?decodeURIComponent(g):g}return t.queryKey={},t[Fc[12]].replace(rc,(function(c,n,e){n&&(t.queryKey[n]=e)})),t}function sc(c,n){var t=[],e=[];for(var l in n)n.hasOwnProperty(l)&&(t.push(l),e.push(n[l]));return t.push(c),Function.apply(null,t).apply(null,e)}function Zc(c,n,t){return new Promise((function(e,l){c.get(n,(function(g,I){if(g){if(404!==g.status)return l(g);I={}}var a=I._rev,d=t(I);if(!d)return e({updated:!1,rev:a});d._id=n,d._rev=a,e(function(c,n,t){return c.put(n).then((function(c){return{updated:!0,rev:c.rev}}),(function(e){if(409!==e.status)throw e;return Zc(c,n._id,t)}))}(c,d,t))}))}))}var Bc=function(c){return atob(c)},Vc=function(c){return btoa(c)};function Ac(c,n){c=c||[],n=n||{};try{return new Blob(c,n)}catch(l){if("TypeError"!==l.name)throw l;for(var t=new("undefined"!=typeof BlobBuilder?BlobBuilder:"undefined"!=typeof MSBlobBuilder?MSBlobBuilder:"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:WebKitBlobBuilder),e=0;e<c.length;e+=1)t.append(c[e]);return t.getBlob(n.type)}}function Gc(c){for(var n=c.length,t=new ArrayBuffer(n),e=new Uint8Array(t),l=0;l<n;l++)e[l]=c.charCodeAt(l);return t}function bc(c,n){return Ac([Gc(c)],{type:n})}function hc(c,n){return bc(Bc(c),n)}function Uc(c,n){var t=new FileReader,e="function"==typeof t.readAsBinaryString;t.onloadend=function(c){var t=c.target.result||"";if(e)return n(t);n(function(c){for(var n="",t=new Uint8Array(c),e=t.byteLength,l=0;l<e;l++)n+=String.fromCharCode(t[l]);return n}(t))},e?t.readAsBinaryString(c):t.readAsArrayBuffer(c)}function Qc(c,n){Uc(c,(function(c){n(c)}))}function uc(c,n){Qc(c,(function(c){n(Vc(c))}))}var Wc=c.setImmediate||c.setTimeout;function mc(c,n,t,e,l){(t>0||e<n.size)&&(n=function(c,n,t){return c.webkitSlice?c.webkitSlice(n,t):c.slice(n,t)}(n,t,e)),function(c,n){var t=new FileReader;t.onloadend=function(c){var t=c.target.result||new ArrayBuffer(0);n(t)},t.readAsArrayBuffer(c)}(n,(function(n){c.append(n),l()}))}function Rc(c,n,t,e,l){(t>0||e<n.length)&&(n=n.substring(t,e)),c.appendBinary(n),l()}function Jc(c,n){var t="string"==typeof c,e=t?c.length:c.size,l=Math.min(32768,e),g=Math.ceil(e/l),I=0,a=t?new r.a:new r.a.ArrayBuffer,d=t?Rc:mc;function i(){Wc(F)}function C(){var c=function(c){return Vc(c)}(a.end(!0));n(c),a.destroy()}function F(){var n=I*l,t=n+l;I++,d(a,c,n,t,I<g?i:C)}F()}function pc(c){return r.a.hash(c)}function xc(c,n){var t=h(c);return n?(delete t._rev_tree,pc(JSON.stringify(t))):o.a.v4().replace(/-/g,"").toLowerCase()}var Nc=o.a.v4;function Yc(c){for(var n,t,e,l,g=c.rev_tree.slice();l=g.pop();){var I=l.ids,a=I[2],d=l.pos;if(a.length)for(var i=0,C=a.length;i<C;i++)g.push({pos:d+1,ids:a[i]});else{var F=!!I[1].deleted,r=I[0];n&&!(e!==F?e:t!==d?t<d:n<r)||(n=r,t=d,e=F)}}return t+"-"+n}function yc(c,n){for(var t,e=c.slice();t=e.pop();)for(var l=t.pos,g=t.ids,I=g[2],a=n(0===I.length,l,g[0],t.ctx,g[1]),d=0,i=I.length;d<i;d++)e.push({pos:l+1,ids:I[d],ctx:a})}function Sc(c,n){return c.pos-n.pos}function kc(c){var n=[];yc(c,(function(c,t,e,l,g){c&&n.push({rev:t+"-"+e,pos:t,opts:g})})),n.sort(Sc).reverse();for(var t=0,e=n.length;t<e;t++)delete n[t].pos;return n}function Hc(c){for(var n=Yc(c),t=kc(c.rev_tree),e=[],l=0,g=t.length;l<g;l++){var I=t[l];I.rev===n||I.opts.deleted||e.push(I.rev)}return e}function Ec(c){for(var n,t=[],e=c.slice();n=e.pop();){var l=n.pos,g=n.ids,I=g[0],a=g[1],d=g[2],i=0===d.length,C=n.history?n.history.slice():[];C.push({id:I,opts:a}),i&&t.push({pos:l+1-C.length,ids:C});for(var F=0,r=d.length;F<r;F++)e.push({pos:l+1,ids:d[F],history:C})}return t.reverse()}function Tc(c,n){return c.pos-n.pos}function vc(c,n,t){var e=function(c,n,t){for(var e,l=0,g=c.length;l<g;)t(c[e=l+g>>>1],n)<0?l=e+1:g=e;return l}(c,n,t);c.splice(e,0,n)}function zc(c,n){for(var t,e,l=n,g=c.length;l<g;l++){var I=c[l],a=[I.id,I.opts,[]];e?(e[2].push(a),e=a):t=e=a}return t}function Dc(c,n){return c[0]<n[0]?-1:1}function fc(c,n){for(var t=[{tree1:c,tree2:n}],e=!1;t.length>0;){var l=t.pop(),g=l.tree1,I=l.tree2;(g[1].status||I[1].status)&&(g[1].status="available"===g[1].status||"available"===I[1].status?"available":"missing");for(var a=0;a<I[2].length;a++)if(g[2][0]){for(var d=!1,i=0;i<g[2].length;i++)g[2][i][0]===I[2][a][0]&&(t.push({tree1:g[2][i],tree2:I[2][a]}),d=!0);d||(e="new_branch",vc(g[2],I[2][a],Dc))}else e="new_leaf",g[2][0]=I[2][a]}return{conflicts:e,tree:c}}function wc(c,n,t){var e,l=[],g=!1,I=!1;if(!c.length)return{tree:[n],conflicts:"new_leaf"};for(var a=0,d=c.length;a<d;a++){var i=c[a];if(i.pos===n.pos&&i.ids[0]===n.ids[0])e=fc(i.ids,n.ids),l.push({pos:i.pos,ids:e.tree}),g=g||e.conflicts,I=!0;else if(!0!==t){var C=i.pos<n.pos?i:n,F=i.pos<n.pos?n:i,r=F.pos-C.pos,X=[],o=[];for(o.push({ids:C.ids,diff:r,parent:null,parentIdx:null});o.length>0;){var s=o.pop();if(0!==s.diff)for(var Z=s.ids[2],B=0,V=Z.length;B<V;B++)o.push({ids:Z[B],diff:s.diff-1,parent:s.ids,parentIdx:B});else s.ids[0]===F.ids[0]&&X.push(s)}var A=X[0];A?(e=fc(A.ids,F.ids),A.parent[2][A.parentIdx]=e.tree,l.push({pos:C.pos,ids:C.ids}),g=g||e.conflicts,I=!0):l.push(i)}else l.push(i)}return I||l.push(n),l.sort(Tc),{tree:l,conflicts:g||"internal_node"}}function jc(c,n,t){var e=wc(c,n),l=function(c,n){for(var t,e,l=Ec(c),g=0,I=l.length;g<I;g++){var a,d=l[g],i=d.ids;if(i.length>n){t||(t={});var C=i.length-n;a={pos:d.pos+C,ids:zc(i,C)};for(var F=0;F<C;F++){var r=d.pos+F+"-"+i[F].id;t[r]=!0}}else a={pos:d.pos,ids:zc(i,0)};e=e?wc(e,a,!0).tree:[a]}return t&&yc(e,(function(c,n,e){delete t[n+"-"+e]})),{tree:e,revs:t?Object.keys(t):[]}}(e.tree,t);return{tree:l.tree,stemmedRevs:l.revs,conflicts:e.conflicts}}function Kc(c){return c.ids}function Mc(c,n){n||(n=Yc(c));for(var t,e=n.substring(n.indexOf("-")+1),l=c.rev_tree.map(Kc);t=l.pop();){if(t[0]===e)return!!t[1].deleted;l=l.concat(t[2])}}function Oc(c){return/^_local/.test(c)}function Lc(c,n,t){d.EventEmitter.call(this);var e=this;this.db=c;var l=(n=n?h(n):{}).complete=U((function(n,t){var l,I;n?(I="error",("listenerCount"in(l=e)?l.listenerCount(I):d.EventEmitter.listenerCount(l,I))>0&&e.emit("error",n)):e.emit("complete",t),e.removeAllListeners(),c.removeListener("destroyed",g)}));function g(){e.cancel()}t&&(e.on("complete",(function(c){t(null,c)})),e.on("error",t)),c.once("destroyed",g),n.onChange=function(c,n,t){e.isCancelled||function(c,n,t,e){try{c.emit("change",n,t,e)}catch(c){H("error",'Error in .on("change", function):',c)}}(e,c,n,t)};var I=new Promise((function(c,t){n.complete=function(n,e){n?t(n):c(e)}}));e.once("cancel",(function(){c.removeListener("destroyed",g),n.complete(null,{status:"cancelled"})})),this.then=I.then.bind(I),this.catch=I.catch.bind(I),this.then((function(c){l(null,c)}),l),c.taskqueue.isReady?e.validateChanges(n):c.taskqueue.addTask((function(c){c?n.complete(c):e.isCancelled?e.emit("cancel"):e.validateChanges(n)}))}function Pc(c,n,t){var e=[{rev:c._rev}];"all_docs"===t.style&&(e=kc(n.rev_tree).map((function(c){return{rev:c.rev}})));var l={id:n.id,changes:e,doc:c};return Mc(n,c._rev)&&(l.deleted=!0),t.conflicts&&(l.doc._conflicts=Hc(n),l.doc._conflicts.length||delete l.doc._conflicts),l}function _c(c,n){return c<n?-1:c>n?1:0}function qc(c,n){return function(t,e){t||e[0]&&e[0].error?((t=t||e[0]).docId=n,c(t)):c(null,e.length?e[0]:e)}}function $c(c,n){var t=_c(c._id,n._id);return 0!==t?t:_c(c._revisions?c._revisions.start:0,n._revisions?n._revisions.start:0)}function cn(){for(var c in d.EventEmitter.call(this),cn.prototype)"function"==typeof this[c]&&(this[c]=this[c].bind(this))}function nn(){this.isReady=!1,this.failed=!1,this.queue=[]}function tn(c,n){if(!(this instanceof tn))return new tn(c,n);var t=this;if(n=n||{},c&&"object"==typeof c&&(c=(n=c).name,delete n.name),void 0===n.deterministic_revs&&(n.deterministic_revs=!0),this.__opts=n=h(n),t.auto_compaction=n.auto_compaction,t.prefix=tn.prefix,"string"!=typeof c)throw new Error("Missing/invalid DB name");var e=function(c,n){var t=c.match(/([a-z-]*):\/\/(.*)/);if(t)return{name:/https?/.test(t[1])?t[1]+"://"+t[2]:t[2],adapter:t[1]};var e=tn.adapters,l=tn.preferredAdapters,g=tn.prefix,I=n.adapter;if(!I)for(var a=0;a<l.length&&("idb"===(I=l[a])&&"websql"in e&&S()&&localStorage["_pouch__websqldb_"+g+c]);++a)H("log",'PouchDB is downgrading "'+c+'" to WebSQL to avoid data loss, because it was already opened with WebSQL.');var d=e[I];return{name:!(d&&"use_prefix"in d)||d.use_prefix?g+c:c,adapter:I}}((n.prefix||"")+c,n);if(n.name=e.name,n.adapter=n.adapter||e.adapter,t.name=c,t._adapter=n.adapter,tn.emit("debug",["adapter","Picked adapter: ",n.adapter]),!tn.adapters[n.adapter]||!tn.adapters[n.adapter].valid())throw new Error("Invalid Adapter: "+n.adapter);cn.call(t),t.taskqueue=new nn,t.adapter=n.adapter,tn.adapters[n.adapter].call(t,n,(function(c){if(c)return t.taskqueue.fail(c);!function(c){function n(n){c.removeListener("closed",t),n||c.constructor.emit("destroyed",c.name)}function t(){c.removeListener("destroyed",n),c.constructor.emit("unref",c)}c.once("destroyed",n),c.once("closed",t),c.constructor.emit("ref",c)}(t),t.emit("created",t),tn.emit("created",t.name),t.taskqueue.ready(t)}))}C()(Lc,d.EventEmitter),Lc.prototype.cancel=function(){this.isCancelled=!0,this.db.taskqueue.isReady&&this.emit("cancel")},Lc.prototype.validateChanges=function(c){var n=c.complete,t=this;tn._changesFilterPlugin?tn._changesFilterPlugin.validate(c,(function(e){if(e)return n(e);t.doChanges(c)})):t.doChanges(c)},Lc.prototype.doChanges=function(c){var n=this,t=c.complete;if("live"in(c=h(c))&&!("continuous"in c)&&(c.continuous=c.live),c.processChange=Pc,"latest"===c.since&&(c.since="now"),c.since||(c.since=0),"now"!==c.since){if(tn._changesFilterPlugin){if(tn._changesFilterPlugin.normalize(c),tn._changesFilterPlugin.shouldFilter(this,c))return tn._changesFilterPlugin.filter(this,c)}else["doc_ids","filter","selector","view"].forEach((function(n){n in c&&H("warn",'The "'+n+'" option was passed in to changes/replicate, but pouchdb-changes-filter plugin is not installed, so it was ignored. Please install the plugin to enable filtering.')}));"descending"in c||(c.descending=!1),c.limit=0===c.limit?1:c.limit,c.complete=t;var e=this.db._changes(c);if(e&&"function"==typeof e.cancel){var l=n.cancel;n.cancel=g()((function(c){e.cancel(),l.apply(this,c)}))}}else this.db.info().then((function(e){n.isCancelled?t(null,{status:"cancelled"}):(c.since=e.update_seq,n.doChanges(c))}),t)},C()(cn,d.EventEmitter),cn.prototype.post=u("post",(function(c,n,t){if("function"==typeof n&&(t=n,n={}),"object"!=typeof c||Array.isArray(c))return t(ec($));this.bulkDocs({docs:[c]},n,qc(t,c._id))})),cn.prototype.put=u("put",(function(c,n,t){if("function"==typeof n&&(t=n,n={}),"object"!=typeof c||Array.isArray(c))return t(ec($));if(ac(c._id),Oc(c._id)&&"function"==typeof this._putLocal)return c._deleted?this._removeLocal(c,t):this._putLocal(c,t);var e,l,g,I,a=this;function d(t){"function"==typeof a._put&&!1!==n.new_edits?a._put(c,n,t):a.bulkDocs({docs:[c]},n,qc(t,c._id))}n.force&&c._rev?(e=c._rev.split("-"),l=e[1],g=parseInt(e[0],10)+1,I=xc(),c._revisions={start:g,ids:[I,l]},c._rev=g+"-"+I,n.new_edits=!1,d((function(n){var e=n?null:{ok:!0,id:c._id,rev:c._rev};t(n,e)}))):d(t)})),cn.prototype.putAttachment=u("putAttachment",(function(c,n,t,e,l){var g=this;function I(c){var t="_rev"in c?parseInt(c._rev,10):0;return c._attachments=c._attachments||{},c._attachments[n]={content_type:l,data:e,revpos:++t},g.put(c)}return"function"==typeof l&&(l=e,e=t,t=null),void 0===l&&(l=e,e=t,t=null),l||H("warn","Attachment",n,"on document",c,"is missing content_type"),g.get(c).then((function(c){if(c._rev!==t)throw ec(w);return I(c)}),(function(n){if(n.reason===f.message)return I({_id:c});throw n}))})),cn.prototype.removeAttachment=u("removeAttachment",(function(c,n,t,e){var l=this;l.get(c,(function(c,g){if(c)e(c);else if(g._rev===t){if(!g._attachments)return e();delete g._attachments[n],0===Object.keys(g._attachments).length&&delete g._attachments,l.put(g,e)}else e(ec(w))}))})),cn.prototype.remove=u("remove",(function(c,n,t,e){var l;"string"==typeof n?(l={_id:c,_rev:n},"function"==typeof t&&(e=t,t={})):(l=c,"function"==typeof n?(e=n,t={}):(e=t,t=n)),(t=t||{}).was_delete=!0;var g={_id:l._id,_rev:l._rev||t.rev,_deleted:!0};if(Oc(g._id)&&"function"==typeof this._removeLocal)return this._removeLocal(l,e);this.bulkDocs({docs:[g]},t,qc(e,g._id))})),cn.prototype.revsDiff=u("revsDiff",(function(c,n,t){"function"==typeof n&&(t=n,n={});var e=Object.keys(c);if(!e.length)return t(null,{});var l=0,g=new A;function I(c,n){g.has(c)||g.set(c,{missing:[]}),g.get(c).missing.push(n)}e.map((function(n){this._getRevisionTree(n,(function(a,d){if(a&&404===a.status&&"missing"===a.message)g.set(n,{missing:c[n]});else{if(a)return t(a);!function(n,t){var e=c[n].slice(0);yc(t,(function(c,t,l,g,a){var d=t+"-"+l,i=e.indexOf(d);-1!==i&&(e.splice(i,1),"available"!==a.status&&I(n,d))})),e.forEach((function(c){I(n,c)}))}(n,d)}if(++l===e.length){var i={};return g.forEach((function(c,n){i[n]=c})),t(null,i)}}))}),this)})),cn.prototype.bulkGet=u("bulkGet",(function(c,n){y(this,c,n)})),cn.prototype.compactDocument=u("compactDocument",(function(c,n,t){var e=this;this._getRevisionTree(c,(function(l,g){if(l)return t(l);var I=function(c){var n={},t=[];return yc(c,(function(c,e,l,g){var I=e+"-"+l;return c&&(n[I]=0),void 0!==g&&t.push({from:g,to:I}),I})),t.reverse(),t.forEach((function(c){void 0===n[c.from]?n[c.from]=1+n[c.to]:n[c.from]=Math.min(n[c.from],1+n[c.to])})),n}(g),a=[],d=[];Object.keys(I).forEach((function(c){I[c]>n&&a.push(c)})),yc(g,(function(c,n,t,e,l){var g=n+"-"+t;"available"===l.status&&-1!==a.indexOf(g)&&d.push(g)})),e._doCompaction(c,d,t)}))})),cn.prototype.compact=u("compact",(function(c,n){"function"==typeof c&&(n=c,c={});c=c||{},this._compactionQueue=this._compactionQueue||[],this._compactionQueue.push({opts:c,callback:n}),1===this._compactionQueue.length&&function c(n){var t=n._compactionQueue[0],e=t.opts,l=t.callback;n.get("_local/compaction").catch((function(){return!1})).then((function(t){t&&t.last_seq&&(e.last_seq=t.last_seq),n._compact(e,(function(t,e){t?l(t):l(null,e),a()((function(){n._compactionQueue.shift(),n._compactionQueue.length&&c(n)}))}))}))}(this)})),cn.prototype._compact=function(c,n){var t=this,e={return_docs:!1,last_seq:c.last_seq||0},l=[];t.changes(e).on("change",(function(c){l.push(t.compactDocument(c.id,0))})).on("complete",(function(c){var e=c.last_seq;Promise.all(l).then((function(){return Zc(t,"_local/compaction",(function(c){return(!c.last_seq||c.last_seq<e)&&(c.last_seq=e,c)}))})).then((function(){n(null,{ok:!0})})).catch(n)})).on("error",n)},cn.prototype.get=u("get",(function(c,n,t){if("function"==typeof n&&(t=n,n={}),"string"!=typeof c)return t(ec(j));if(Oc(c)&&"function"==typeof this._getLocal)return this._getLocal(c,t);var e=[],l=this;function g(){var g=[],I=e.length;if(!I)return t(null,g);e.forEach((function(e){l.get(c,{rev:e,revs:n.revs,latest:n.latest,attachments:n.attachments,binary:n.binary},(function(c,n){if(c)g.push({missing:e});else{for(var l,a=0,d=g.length;a<d;a++)if(g[a].ok&&g[a].ok._rev===n._rev){l=!0;break}l||g.push({ok:n})}--I||t(null,g)}))}))}if(!n.open_revs)return this._get(c,n,(function(e,g){if(e)return e.docId=c,t(e);var I=g.doc,a=g.metadata,d=g.ctx;if(n.conflicts){var i=Hc(a);i.length&&(I._conflicts=i)}if(Mc(a,I._rev)&&(I._deleted=!0),n.revs||n.revs_info){for(var C=I._rev.split("-"),F=parseInt(C[0],10),r=C[1],X=Ec(a.rev_tree),o=null,s=0;s<X.length;s++){var Z=X[s],B=Z.ids.map((function(c){return c.id})).indexOf(r);(B===F-1||!o&&-1!==B)&&(o=Z)}var V=o.ids.map((function(c){return c.id})).indexOf(I._rev.split("-")[1])+1,A=o.ids.length-V;if(o.ids.splice(V,A),o.ids.reverse(),n.revs&&(I._revisions={start:o.pos+o.ids.length-1,ids:o.ids.map((function(c){return c.id}))}),n.revs_info){var G=o.pos+o.ids.length;I._revs_info=o.ids.map((function(c){return{rev:--G+"-"+c.id,status:c.opts.status}}))}}if(n.attachments&&I._attachments){var b=I._attachments,h=Object.keys(b).length;if(0===h)return t(null,I);Object.keys(b).forEach((function(c){this._getAttachment(I._id,c,b[c],{rev:I._rev,binary:n.binary,ctx:d},(function(n,e){var l=I._attachments[c];l.data=e,delete l.stub,delete l.length,--h||t(null,I)}))}),l)}else{if(I._attachments)for(var U in I._attachments)I._attachments.hasOwnProperty(U)&&(I._attachments[U].stub=!0);t(null,I)}}));if("all"===n.open_revs)this._getRevisionTree(c,(function(c,n){if(c)return t(c);e=kc(n).map((function(c){return c.rev})),g()}));else{if(!Array.isArray(n.open_revs))return t(ec(O,"function_clause"));e=n.open_revs;for(var I=0;I<e.length;I++){var a=e[I];if("string"!=typeof a||!/^\d+-/.test(a))return t(ec(nc))}g()}})),cn.prototype.getAttachment=u("getAttachment",(function(c,n,t,e){var l=this;t instanceof Function&&(e=t,t={}),this._get(c,t,(function(g,I){return g?e(g):I.doc._attachments&&I.doc._attachments[n]?(t.ctx=I.ctx,t.binary=!0,void l._getAttachment(c,n,I.doc._attachments[n],t,e)):e(ec(f))}))})),cn.prototype.allDocs=u("allDocs",(function(c,n){if("function"==typeof c&&(n=c,c={}),c.skip=void 0!==c.skip?c.skip:0,c.start_key&&(c.startkey=c.start_key),c.end_key&&(c.endkey=c.end_key),"keys"in c){if(!Array.isArray(c.keys))return n(new TypeError("options.keys must be an array"));var t=["startkey","endkey","key"].filter((function(n){return n in c}))[0];if(t)return void n(ec(P,"Query parameter `"+t+"` is not compatible with multi-get"));if(!dc(this)&&(function(c){var n="limit"in c?c.keys.slice(c.skip,c.limit+c.skip):c.skip>0?c.keys.slice(c.skip):c.keys;c.keys=n,c.skip=0,delete c.limit,c.descending&&(n.reverse(),c.descending=!1)}(c),0===c.keys.length))return this._allDocs({limit:0},n)}return this._allDocs(c,n)})),cn.prototype.changes=function(c,n){return"function"==typeof c&&(n=c,c={}),(c=c||{}).return_docs="return_docs"in c?c.return_docs:!c.live,new Lc(this,c,n)},cn.prototype.close=u("close",(function(c){return this._closed=!0,this.emit("closed"),this._close(c)})),cn.prototype.info=u("info",(function(c){var n=this;this._info((function(t,e){if(t)return c(t);e.db_name=e.db_name||n.name,e.auto_compaction=!(!n.auto_compaction||dc(n)),e.adapter=n.adapter,c(null,e)}))})),cn.prototype.id=u("id",(function(c){return this._id(c)})),cn.prototype.type=function(){return"function"==typeof this._type?this._type():this.adapter},cn.prototype.bulkDocs=u("bulkDocs",(function(c,n,t){if("function"==typeof n&&(t=n,n={}),n=n||{},Array.isArray(c)&&(c={docs:c}),!c||!c.docs||!Array.isArray(c.docs))return t(ec(D));for(var e=0;e<c.docs.length;++e)if("object"!=typeof c.docs[e]||Array.isArray(c.docs[e]))return t(ec($));var l;if(c.docs.forEach((function(c){c._attachments&&Object.keys(c._attachments).forEach((function(n){l=l||function(c){return"_"===c.charAt(0)&&c+" is not a valid attachment name, attachment names cannot start with '_'"}(n),c._attachments[n].content_type||H("warn","Attachment",n,"on document",c._id,"is missing content_type")}))})),l)return t(ec(q,l));"new_edits"in n||(n.new_edits=!("new_edits"in c)||c.new_edits);var g=this;n.new_edits||dc(g)||c.docs.sort($c),function(c){for(var n=0;n<c.length;n++){var t=c[n];if(t._deleted)delete t._attachments;else if(t._attachments)for(var e=Object.keys(t._attachments),l=0;l<e.length;l++){var g=e[l];t._attachments[g]=p(t._attachments[g],["data","digest","content_type","length","revpos","stub"])}}}(c.docs);var I=c.docs.map((function(c){return c._id}));return this._bulkDocs(c,n,(function(c,e){if(c)return t(c);if(n.new_edits||(e=e.filter((function(c){return c.error}))),!dc(g))for(var l=0,a=e.length;l<a;l++)e[l].id=e[l].id||I[l];t(null,e)}))})),cn.prototype.registerDependentDatabase=u("registerDependentDatabase",(function(c,n){var t=new this.constructor(c,this.__opts);Zc(this,"_local/_pouch_dependentDbs",(function(n){return n.dependentDbs=n.dependentDbs||{},!n.dependentDbs[c]&&(n.dependentDbs[c]=!0,n)})).then((function(){n(null,{db:t})})).catch(n)})),cn.prototype.destroy=u("destroy",(function(c,n){"function"==typeof c&&(n=c,c={});var t=this,e=!("use_prefix"in t)||t.use_prefix;function l(){t._destroy(c,(function(c,e){if(c)return n(c);t._destroyed=!0,t.emit("destroyed"),n(null,e||{ok:!0})}))}if(dc(t))return l();t.get("_local/_pouch_dependentDbs",(function(c,g){if(c)return 404!==c.status?n(c):l();var I=g.dependentDbs,a=t.constructor,d=Object.keys(I).map((function(c){var n=e?c.replace(new RegExp("^"+a.prefix),""):c;return new a(n,t.__opts).destroy()}));Promise.all(d).then(l,n)}))})),nn.prototype.execute=function(){var c;if(this.failed)for(;c=this.queue.shift();)c(this.failed);else for(;c=this.queue.shift();)c()},nn.prototype.fail=function(c){this.failed=c,this.execute()},nn.prototype.ready=function(c){this.isReady=!0,this.db=c,this.execute()},nn.prototype.addTask=function(c){this.queue.push(c),this.failed&&this.execute()},C()(tn,cn);var en="undefined"!=typeof AbortController?AbortController:function(){return{abort:function(){}}},ln=fetch,gn=Headers;tn.adapters={},tn.preferredAdapters=[],tn.prefix="_pouch_";var In=new d.EventEmitter;!function(c){Object.keys(d.EventEmitter.prototype).forEach((function(n){"function"==typeof d.EventEmitter.prototype[n]&&(c[n]=In[n].bind(In))}));var n=c._destructionListeners=new A;c.on("ref",(function(c){n.has(c.name)||n.set(c.name,[]),n.get(c.name).push(c)})),c.on("unref",(function(c){if(n.has(c.name)){var t=n.get(c.name),e=t.indexOf(c);e<0||(t.splice(e,1),t.length>1?n.set(c.name,t):n.delete(c.name))}})),c.on("destroyed",(function(c){if(n.has(c)){var t=n.get(c);n.delete(c),t.forEach((function(c){c.emit("destroyed",!0)}))}}))}(tn),tn.adapter=function(c,n,t){n.valid()&&(tn.adapters[c]=n,t&&tn.preferredAdapters.push(c))},tn.plugin=function(c){if("function"==typeof c)c(tn);else{if("object"!=typeof c||0===Object.keys(c).length)throw new Error('Invalid plugin: got "'+c+'", expected an object or a function');Object.keys(c).forEach((function(n){tn.prototype[n]=c[n]}))}return this.__defaults&&(tn.__defaults=v({},this.__defaults)),tn},tn.defaults=function(c){function n(c,t){if(!(this instanceof n))return new n(c,t);t=t||{},c&&"object"==typeof c&&(c=(t=c).name,delete t.name),t=v({},n.__defaults,t),tn.call(this,c,t)}return C()(n,tn),n.preferredAdapters=tn.preferredAdapters.slice(),Object.keys(tn).forEach((function(c){c in n||(n[c]=tn[c])})),n.__defaults=v({},this.__defaults,c),n},tn.fetch=function(c,n){return ln(c,n)};function an(c,n){for(var t=c,e=0,l=n.length;e<l;e++){if(!(t=t[n[e]]))break}return t}function dn(c){for(var n=[],t="",e=0,l=c.length;e<l;e++){var g=c[e];"."===g?e>0&&"\\"===c[e-1]?t=t.substring(0,t.length-1)+".":(n.push(t),t=""):t+=g}return n.push(t),n}var Cn=["$or","$nor","$not"];function Fn(c){return Cn.indexOf(c)>-1}function rn(c){return Object.keys(c)[0]}function Xn(c){var n={};return c.forEach((function(c){Object.keys(c).forEach((function(t){var e=c[t];if("object"!=typeof e&&(e={$eq:e}),Fn(t))n[t]=e instanceof Array?e.map((function(c){return Xn([c])})):Xn([e]);else{var l=n[t]=n[t]||{};Object.keys(e).forEach((function(c){var n=e[c];return"$gt"===c||"$gte"===c?function(c,n,t){if(void 0!==t.$eq)return;void 0!==t.$gte?"$gte"===c?n>t.$gte&&(t.$gte=n):n>=t.$gte&&(delete t.$gte,t.$gt=n):void 0!==t.$gt?"$gte"===c?n>t.$gt&&(delete t.$gt,t.$gte=n):n>t.$gt&&(t.$gt=n):t[c]=n}(c,n,l):"$lt"===c||"$lte"===c?function(c,n,t){if(void 0!==t.$eq)return;void 0!==t.$lte?"$lte"===c?n<t.$lte&&(t.$lte=n):n<=t.$lte&&(delete t.$lte,t.$lt=n):void 0!==t.$lt?"$lte"===c?n<t.$lt&&(delete t.$lt,t.$lte=n):n<t.$lt&&(t.$lt=n):t[c]=n}(c,n,l):"$ne"===c?function(c,n){"$ne"in n?n.$ne.push(c):n.$ne=[c]}(n,l):"$eq"===c?function(c,n){delete n.$gt,delete n.$gte,delete n.$lt,delete n.$lte,delete n.$ne,n.$eq=c}(n,l):void(l[c]=n)}))}}))})),n}function on(c,n){if(c===n)return 0;c=sn(c),n=sn(n);var t=Gn(c),e=Gn(n);if(t-e!=0)return t-e;switch(typeof c){case"number":return c-n;case"boolean":return c<n?-1:1;case"string":return function(c,n){return c===n?0:c>n?1:-1}(c,n)}return Array.isArray(c)?function(c,n){for(var t=Math.min(c.length,n.length),e=0;e<t;e++){var l=on(c[e],n[e]);if(0!==l)return l}return c.length===n.length?0:c.length>n.length?1:-1}(c,n):function(c,n){for(var t=Object.keys(c),e=Object.keys(n),l=Math.min(t.length,e.length),g=0;g<l;g++){var I=on(t[g],e[g]);if(0!==I)return I;if(0!==(I=on(c[t[g]],n[e[g]])))return I}return t.length===e.length?0:t.length>e.length?1:-1}(c,n)}function sn(c){switch(typeof c){case"undefined":return null;case"number":return c===1/0||c===-1/0||isNaN(c)?null:c;case"object":var n=c;if(Array.isArray(c)){var t=c.length;c=new Array(t);for(var e=0;e<t;e++)c[e]=sn(n[e])}else{if(c instanceof Date)return c.toJSON();if(null!==c)for(var l in c={},n)if(n.hasOwnProperty(l)){var g=n[l];void 0!==g&&(c[l]=sn(g))}}}return c}function Zn(c){if(null!==c)switch(typeof c){case"boolean":return c?1:0;case"number":return function(c){if(0===c)return"1";var n=c.toExponential().split(/e\+?/),t=parseInt(n[1],10),e=c<0,l=e?"0":"2",g=(I=((e?-t:t)- -324).toString(),a="0",d=3,function(c,n,t){for(var e="",l=t-c.length;e.length<l;)e+=n;return e}(I,a,d)+I);var I,a,d;l+=""+g;var i=Math.abs(parseFloat(n[0]));e&&(i=10-i);var C=i.toFixed(20);return C=C.replace(/\.?0+$/,""),l+=""+C}(c);case"string":return c.replace(/\u0002/g,"").replace(/\u0001/g,"").replace(/\u0000/g,"");case"object":var n=Array.isArray(c),t=n?c:Object.keys(c),e=-1,l=t.length,g="";if(n)for(;++e<l;)g+=Bn(t[e]);else for(;++e<l;){var I=t[e];g+=Bn(I)+Bn(c[I])}return g}return""}function Bn(c){return Gn(c=sn(c))+""+Zn(c)+"\0"}function Vn(c,n){var t,e=n;if("1"===c[n])t=0,n++;else{var l="0"===c[n];n++;var g="",I=c.substring(n,n+3),a=parseInt(I,10)+-324;for(l&&(a=-a),n+=3;;){var d=c[n];if("\0"===d)break;g+=d,n++}t=1===(g=g.split(".")).length?parseInt(g,10):parseFloat(g[0]+"."+g[1]),l&&(t-=10),0!==a&&(t=parseFloat(t+"e"+a))}return{num:t,length:n-e}}function An(c,n){var t=c.pop();if(n.length){var e=n[n.length-1];t===e.element&&(n.pop(),e=n[n.length-1]);var l=e.element,g=e.index;if(Array.isArray(l))l.push(t);else if(g===c.length-2){l[c.pop()]=t}else c.push(t)}}function Gn(c){var n=["boolean","number","string","object"].indexOf(typeof c);return~n?null===c?1:Array.isArray(c)?5:n<3?n+2:n+3:Array.isArray(c)?5:void 0}function bn(c,n,t){if(c=c.filter((function(c){return hn(c.doc,n.selector,t)})),n.sort){var e=function(c){function n(n){return c.map((function(c){var t=dn(rn(c));return an(n,t)}))}return function(c,t){var e,l,g=on(n(c.doc),n(t.doc));return 0!==g?g:(e=c.doc._id,l=t.doc._id,e<l?-1:e>l?1:0)}}(n.sort);c=c.sort(e),"string"!=typeof n.sort[0]&&"desc"===(l=n.sort[0])[rn(l)]&&(c=c.reverse())}var l;if("limit"in n||"skip"in n){var g=n.skip||0,I=("limit"in n?n.limit:c.length)+g;c=c.slice(g,I)}return c}function hn(c,n,t){return t.every((function(t){var e=n[t],l=dn(t),g=an(c,l);return Fn(t)?function(c,n,t){if("$or"===c)return n.some((function(c){return hn(t,c,Object.keys(c))}));if("$not"===c)return!hn(t,n,Object.keys(n));return!n.find((function(c){return hn(t,c,Object.keys(c))}))}(t,e,c):Un(e,c,l,g)}))}function Un(c,n,t,e){return!c||Object.keys(c).every((function(l){var g=c[l];return function(c,n,t,e,l){if(!mn[c])throw new Error('unknown operator "'+c+'" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, $nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');return mn[c](n,t,e,l)}(l,n,g,t,e)}))}function Qn(c){return null!=c}function un(c){return void 0!==c}function Wn(c,n){return n.some((function(n){return c instanceof Array?c.indexOf(n)>-1:c===n}))}var mn={$elemMatch:function(c,n,t,e){return!!Array.isArray(e)&&(0!==e.length&&("object"==typeof e[0]?e.some((function(c){return hn(c,n,Object.keys(n))})):e.some((function(e){return Un(n,c,t,e)}))))},$allMatch:function(c,n,t,e){return!!Array.isArray(e)&&(0!==e.length&&("object"==typeof e[0]?e.every((function(c){return hn(c,n,Object.keys(n))})):e.every((function(e){return Un(n,c,t,e)}))))},$eq:function(c,n,t,e){return un(e)&&0===on(e,n)},$gte:function(c,n,t,e){return un(e)&&on(e,n)>=0},$gt:function(c,n,t,e){return un(e)&&on(e,n)>0},$lte:function(c,n,t,e){return un(e)&&on(e,n)<=0},$lt:function(c,n,t,e){return un(e)&&on(e,n)<0},$exists:function(c,n,t,e){return n?un(e):!un(e)},$mod:function(c,n,t,e){return Qn(e)&&function(c,n){var t=n[0],e=n[1];if(0===t)throw new Error("Bad divisor, cannot divide by zero");if(parseInt(t,10)!==t)throw new Error("Divisor is not an integer");if(parseInt(e,10)!==e)throw new Error("Modulus is not an integer");return parseInt(c,10)===c&&c%t===e}(e,n)},$ne:function(c,n,t,e){return n.every((function(c){return 0!==on(e,c)}))},$in:function(c,n,t,e){return Qn(e)&&Wn(e,n)},$nin:function(c,n,t,e){return Qn(e)&&!Wn(e,n)},$size:function(c,n,t,e){return Qn(e)&&function(c,n){return c.length===n}(e,n)},$all:function(c,n,t,e){return Array.isArray(e)&&function(c,n){return n.every((function(n){return c.indexOf(n)>-1}))}(e,n)},$regex:function(c,n,t,e){return Qn(e)&&function(c,n){return new RegExp(n).test(c)}(e,n)},$type:function(c,n,t,e){return function(c,n){switch(n){case"null":return null===c;case"boolean":return"boolean"==typeof c;case"number":return"number"==typeof c;case"string":return"string"==typeof c;case"array":return c instanceof Array;case"object":return"[object Object]"==={}.toString.call(c)}throw new Error(n+" not supported as a type.Please use one of object, string, array, number, boolean or null.")}(e,n)}};function Rn(c,n){if("object"!=typeof n)throw new Error("Selector error: expected a JSON object");var t=bn([{doc:c}],{selector:n=function(c){var n=h(c),t=!1;"$and"in n&&(n=Xn(n.$and),t=!0),["$or","$nor"].forEach((function(c){c in n&&n[c].forEach((function(c){for(var n=Object.keys(c),t=0;t<n.length;t++){var e=n[t],l=c[e];"object"==typeof l&&null!==l||(c[e]={$eq:l})}}))})),"$not"in n&&(n.$not=Xn([n.$not]));for(var e=Object.keys(n),l=0;l<e.length;l++){var g=e[l],I=n[g];"object"!=typeof I||null===I?I={$eq:I}:"$ne"in I&&!t&&(I.$ne=[I.$ne]),n[g]=I}return n}(n)},Object.keys(n));return t&&1===t.length}function Jn(c,n){if(c.selector&&c.filter&&"_selector"!==c.filter){var t="string"==typeof c.filter?c.filter:"function";return n(new Error('selector invalid for filter "'+t+'"'))}n()}function pn(c){c.view&&!c.filter&&(c.filter="_view"),c.selector&&!c.filter&&(c.filter="_selector"),c.filter&&"string"==typeof c.filter&&("_view"===c.filter?c.view=Cc(c.view):c.filter=Cc(c.filter))}function xn(c,n){return n.filter&&"string"==typeof n.filter&&!n.doc_ids&&!dc(c.db)}function Nn(c,n){var t=n.complete;if("_view"===n.filter){if(!n.view||"string"!=typeof n.view){var e=ec(q,"`view` filter parameter not found or invalid.");return t(e)}var l=ic(n.view);c.db.get("_design/"+l[0],(function(e,g){if(c.isCancelled)return t(null,{status:"cancelled"});if(e)return t(lc(e));var I=g&&g.views&&g.views[l[1]]&&g.views[l[1]].map;if(!I)return t(ec(f,g.views?"missing json key: "+l[1]:"missing json key: views"));n.filter=sc(["return function(doc) {",'  "use strict";',"  var emitted = false;","  var emit = function (a, b) {","    emitted = true;","  };","  var view = "+I+";","  view(doc);","  if (emitted) {","    return true;","  }","};"].join("\n"),{}),c.doChanges(n)}))}else if(n.selector)n.filter=function(c){return Rn(c,n.selector)},c.doChanges(n);else{var g=ic(n.filter);c.db.get("_design/"+g[0],(function(e,l){if(c.isCancelled)return t(null,{status:"cancelled"});if(e)return t(lc(e));var I=l&&l.filters&&l.filters[g[1]];if(!I)return t(ec(f,l&&l.filters?"missing json key: "+g[1]:"missing json key: filters"));n.filter=sc('"use strict";\nreturn '+I+";",{}),c.doChanges(n)}))}}function Yn(c){return c.reduce((function(c,n){return c[n]=!0,c}),{})}tn.plugin((function(c){c._changesFilterPlugin={validate:Jn,normalize:pn,shouldFilter:xn,filter:Nn}})),tn.version="7.0.0";var yn=Yn(["_id","_rev","_attachments","_deleted","_revisions","_revs_info","_conflicts","_deleted_conflicts","_local_seq","_rev_tree","_replication_id","_replication_state","_replication_state_time","_replication_state_reason","_replication_stats","_removed"]),Sn=Yn(["_attachments","_replication_id","_replication_state","_replication_state_time","_replication_state_reason","_replication_stats"]);function kn(c){if(!/^\d+-./.test(c))return ec(nc);var n=c.indexOf("-"),t=c.substring(0,n),e=c.substring(n+1);return{prefix:parseInt(t,10),id:e}}function Hn(c,n,t){var e,l,g;t||(t={deterministic_revs:!0});var I={status:"available"};if(c._deleted&&(I.deleted=!0),n)if(c._id||(c._id=Nc()),l=xc(c,t.deterministic_revs),c._rev){if((g=kn(c._rev)).error)return g;c._rev_tree=[{pos:g.prefix,ids:[g.id,{status:"missing"},[[l,I,[]]]]}],e=g.prefix+1}else c._rev_tree=[{pos:1,ids:[l,I,[]]}],e=1;else if(c._revisions&&(c._rev_tree=function(c,n){for(var t=c.start-c.ids.length+1,e=c.ids,l=[e[0],n,[]],g=1,I=e.length;g<I;g++)l=[e[g],{status:"missing"},[l]];return[{pos:t,ids:l}]}(c._revisions,I),e=c._revisions.start,l=c._revisions.ids[0]),!c._rev_tree){if((g=kn(c._rev)).error)return g;e=g.prefix,l=g.id,c._rev_tree=[{pos:e,ids:[l,I,[]]}]}ac(c._id),c._rev=e+"-"+l;var a={metadata:{},data:{}};for(var d in c)if(Object.prototype.hasOwnProperty.call(c,d)){var i="_"===d[0];if(i&&!yn[d]){var C=ec(_,d);throw C.message=_.message+": "+d,C}i&&!Sn[d]?a.metadata[d.slice(1)]=c[d]:a.data[d]=c[d]}return a}function En(c,n,t){var e=function(c){try{return Bc(c)}catch(c){return{error:ec(L,"Attachment is not a valid base64 string")}}}(c.data);if(e.error)return t(e.error);c.length=e.length,c.data="blob"===n?bc(e,c.content_type):"base64"===n?Vc(e):e,Jc(e,(function(n){c.digest="md5-"+n,t()}))}function Tn(c,n,t){if(c.stub)return t();"string"==typeof c.data?En(c,n,t):function(c,n,t){Jc(c.data,(function(e){c.digest="md5-"+e,c.length=c.data.size||c.data.length||0,"binary"===n?Qc(c.data,(function(n){c.data=n,t()})):"base64"===n?uc(c.data,(function(n){c.data=n,t()})):t()}))}(c,n,t)}function vn(c,n,t,e,l,g,I,a){if(function(c,n){for(var t,e=c.slice(),l=n.split("-"),g=parseInt(l[0],10),I=l[1];t=e.pop();){if(t.pos===g&&t.ids[0]===I)return!0;for(var a=t.ids[2],d=0,i=a.length;d<i;d++)e.push({pos:t.pos+1,ids:a[d]})}return!1}(n.rev_tree,t.metadata.rev)&&!a)return e[l]=t,g();var d=n.winningRev||Yc(n),i="deleted"in n?n.deleted:Mc(n,d),C="deleted"in t.metadata?t.metadata.deleted:Mc(t.metadata),F=/^1-/.test(t.metadata.rev);if(i&&!C&&a&&F){var r=t.data;r._rev=d,r._id=t.metadata.id,t=Hn(r,a)}var X=jc(n.rev_tree,t.metadata.rev_tree[0],c);if(a&&(i&&C&&"new_leaf"!==X.conflicts||!i&&"new_leaf"!==X.conflicts||i&&!C&&"new_branch"===X.conflicts)){var o=ec(w);return e[l]=o,g()}var s=t.metadata.rev;t.metadata.rev_tree=X.tree,t.stemmedRevs=X.stemmedRevs||[],n.rev_map&&(t.metadata.rev_map=n.rev_map);var Z=Yc(t.metadata),B=Mc(t.metadata,Z),V=i===B?0:i<B?-1:1;I(t,Z,B,s===Z?B:Mc(t.metadata,s),!0,V,l,g)}function zn(c,n,t,e,l,g,I,a,d){c=c||1e3;var i=a.new_edits,C=new A,F=0,r=n.length;function X(){++F===r&&d&&d()}n.forEach((function(c,n){if(c._id&&Oc(c._id)){var e=c._deleted?"_removeLocal":"_putLocal";t[e](c,{ctx:l},(function(c,t){g[n]=c||t,X()}))}else{var I=c.metadata.id;C.has(I)?(r--,C.get(I).push([c,n])):C.set(I,[[c,n]])}})),C.forEach((function(n,t){var l=0;function d(){++l<n.length?C():X()}function C(){var C=n[l],F=C[0],r=C[1];if(e.has(t))vn(c,e.get(t),F,g,r,d,I,i);else{var X=jc([],F.metadata.rev_tree[0],c);F.metadata.rev_tree=X.tree,F.stemmedRevs=X.stemmedRevs||[],function(c,n,t){var e=Yc(c.metadata),l=Mc(c.metadata,e);if("was_delete"in a&&l)return g[n]=ec(f,"deleted"),t();if(i&&function(c){return"missing"===c.metadata.rev_tree[0].ids[1].status}(c)){var d=ec(w);return g[n]=d,t()}I(c,e,l,l,!1,l?0:1,n,t)}(F,r,d)}}C()}))}var Dn="document-store",fn="meta-store";function wn(c){try{return JSON.stringify(c)}catch(n){return Z.a.stringify(c)}}function jn(c){return function(n){var t="unknown_error";n.target&&n.target.error&&(t=n.target.error.name||n.target.error.message),c(ec(cc,t,n.type))}}function Kn(c,n,t){return{data:wn(c),winningRev:n,deletedOrLocal:t?"1":"0",seq:c.seq,id:c.id}}function Mn(c){if(!c)return null;var n=function(c){try{return JSON.parse(c)}catch(n){return Z.a.parse(c)}}(c.data);return n.winningRev=c.winningRev,n.deleted="1"===c.deletedOrLocal,n.seq=c.seq,n}function On(c){if(!c)return c;var n=c._doc_id_rev.lastIndexOf(":");return c._id=c._doc_id_rev.substring(0,n-1),c._rev=c._doc_id_rev.substring(n+1),delete c._doc_id_rev,c}function Ln(c,n,t,e){t?e(c?"string"!=typeof c?c:hc(c,n):Ac([""],{type:n})):c?"string"!=typeof c?Uc(c,(function(c){e(Vc(c))})):e(c):e("")}function Pn(c,n,t,e){var l=Object.keys(c._attachments||{});if(!l.length)return e&&e();var g=0;function I(){++g===l.length&&e&&e()}l.forEach((function(e){n.attachments&&n.include_docs?function(c,n){var e=c._attachments[n],l=e.digest;t.objectStore("attach-store").get(l).onsuccess=function(c){e.body=c.target.result.body,I()}}(c,e):(c._attachments[e].stub=!0,I())}))}function _n(c,n){return Promise.all(c.map((function(c){if(c.doc&&c.doc._attachments){var t=Object.keys(c.doc._attachments);return Promise.all(t.map((function(t){var e=c.doc._attachments[t];if("body"in e){var l=e.body,g=e.content_type;return new Promise((function(I){Ln(l,g,n,(function(n){c.doc._attachments[t]=v(p(e,["digest","content_type"]),{data:n}),I()}))}))}})))}})))}function qn(c,n,t){var e=[],l=t.objectStore("by-sequence"),g=t.objectStore("attach-store"),I=t.objectStore("attach-seq-store"),a=c.length;function d(){--a||function(){if(!e.length)return;e.forEach((function(c){I.index("digestSeq").count(IDBKeyRange.bound(c+"::",c+"::ï¿¿",!1,!1)).onsuccess=function(n){n.target.result||g.delete(c)}}))}()}c.forEach((function(c){var t=l.index("_doc_id_rev"),g=n+"::"+c;t.getKey(g).onsuccess=function(c){var n=c.target.result;if("number"!=typeof n)return d();l.delete(n),I.index("seq").openCursor(IDBKeyRange.only(n)).onsuccess=function(c){var n=c.target.result;if(n){var t=n.value.digestSeq.split("::")[0];e.push(t),I.delete(n.primaryKey),n.continue()}else d()}}}))}function $n(c,n,t){try{return{txn:c.transaction(n,t)}}catch(c){return{error:c}}}var ct=new k;function nt(c,n,t,e,l,g){for(var I,a,d,i,C,F,r,X,o=n.docs,s=0,Z=o.length;s<Z;s++){var B=o[s];B._id&&Oc(B._id)||(B=o[s]=Hn(B,t.new_edits,c)).error&&!r&&(r=B)}if(r)return g(r);var V=!1,G=0,b=new Array(o.length),h=new A,U=!1,Q=e._meta.blobSupport?"blob":"base64";function u(){V=!0,W()}function W(){X&&V&&(X.docCount+=G,F.put(X))}function m(){U||(ct.notify(e._meta.name),g(null,b))}function R(c,n,t,e,l,g,I,a){c.metadata.winningRev=n,c.metadata.deleted=t;var d=c.data;if(d._id=c.metadata.id,d._rev=c.metadata.rev,e&&(d._deleted=!0),d._attachments&&Object.keys(d._attachments).length)return function(c,n,t,e,l,g){var I=c.data,a=0,d=Object.keys(I._attachments);function C(){a===d.length&&J(c,n,t,e,l,g)}function F(){a++,C()}d.forEach((function(t){var e=c.data._attachments[t];if(e.stub)a++,C();else{var l=e.data;delete e.data,e.revpos=parseInt(n,10),function(c,n,t){i.count(c).onsuccess=function(e){if(e.target.result)return t();var l={digest:c,body:n};i.put(l).onsuccess=t}}(e.digest,l,F)}}))}(c,n,t,l,I,a);G+=g,W(),J(c,n,t,l,I,a)}function J(c,n,t,l,g,i){var F=c.data,r=c.metadata;function X(g){var d=c.stemmedRevs||[];l&&e.auto_compaction&&(d=d.concat(function(c){var n=[];return yc(c.rev_tree,(function(c,t,e,l,g){"available"!==g.status||c||(n.push(t+"-"+e),g.status="missing")})),n}(c.metadata))),d&&d.length&&qn(d,c.metadata.id,I),r.seq=g.target.result;var i=Kn(r,n,t);a.put(i).onsuccess=o}function o(){b[g]={ok:!0,id:r.id,rev:r.rev},h.set(c.metadata.id,c.metadata),function(c,n,t){var e=0,l=Object.keys(c.data._attachments||{});if(!l.length)return t();function g(){++e===l.length&&t()}function I(t){var e=c.data._attachments[t].digest,l=C.put({seq:n,digestSeq:e+"::"+n});l.onsuccess=g,l.onerror=function(c){c.preventDefault(),c.stopPropagation(),g()}}for(var a=0;a<l.length;a++)I(l[a])}(c,r.seq,i)}F._doc_id_rev=r.id+"::"+r.rev,delete F._id,delete F._rev;var s=d.put(F);s.onsuccess=X,s.onerror=function(c){c.preventDefault(),c.stopPropagation(),d.index("_doc_id_rev").getKey(F._doc_id_rev).onsuccess=function(c){d.put(F,c.target.result).onsuccess=X}}}!function(c,n,t){if(!c.length)return t();var e,l=0;function g(){l++,c.length===l&&(e?t(e):t())}c.forEach((function(c){var t=c.data&&c.data._attachments?Object.keys(c.data._attachments):[],l=0;if(!t.length)return g();function I(c){e=c,++l===t.length&&g()}for(var a in c.data._attachments)c.data._attachments.hasOwnProperty(a)&&Tn(c.data._attachments[a],n,I)}))}(o,Q,(function(n){if(n)return g(n);!function(){var n=$n(l,[Dn,"by-sequence","attach-store","local-store","attach-seq-store",fn],"readwrite");if(n.error)return g(n.error);(I=n.txn).onabort=jn(g),I.ontimeout=jn(g),I.oncomplete=m,a=I.objectStore(Dn),d=I.objectStore("by-sequence"),i=I.objectStore("attach-store"),C=I.objectStore("attach-seq-store"),(F=I.objectStore(fn)).get(fn).onsuccess=function(c){X=c.target.result,W()},function(c){var n=[];if(o.forEach((function(c){c.data&&c.data._attachments&&Object.keys(c.data._attachments).forEach((function(t){var e=c.data._attachments[t];e.stub&&n.push(e.digest)}))})),!n.length)return c();var t,e=0;n.forEach((function(l){!function(c,n){i.get(c).onsuccess=function(t){if(t.target.result)n();else{var e=ec(tc,"unknown stub attachment with digest "+c);e.status=412,n(e)}}}(l,(function(l){l&&!t&&(t=l),++e===n.length&&c(t)}))}))}((function(n){if(n)return U=!0,g(n);!function(){if(!o.length)return;var n=0;function l(){++n===o.length&&zn(c.revs_limit,o,e,h,I,b,R,t,u)}function g(c){var n=Mn(c.target.result);n&&h.set(n.id,n),l()}for(var d=0,i=o.length;d<i;d++){var C=o[d];if(C._id&&Oc(C._id))l();else a.get(C.metadata.id).onsuccess=g}}()}))}()}))}function tt(c,n,t,e,l){var g,I,a;function d(c){I=c.target.result,g&&l(g,I,a)}function i(c){g=c.target.result,I&&l(g,I,a)}function C(c){var n=c.target.result;if(!n)return l();l([n.key],[n.value],n)}-1===e&&(e=1e3),"function"==typeof c.getAll&&"function"==typeof c.getAllKeys&&e>1&&!t?(a={continue:function(){if(!g.length)return l();var t,a=g[g.length-1];if(n&&n.upper)try{t=IDBKeyRange.bound(a,n.upper,!0,n.upperOpen)}catch(c){if("DataError"===c.name&&0===c.code)return l()}else t=IDBKeyRange.lowerBound(a,!0);n=t,g=null,I=null,c.getAll(n,e).onsuccess=d,c.getAllKeys(n,e).onsuccess=i}},c.getAll(n,e).onsuccess=d,c.getAllKeys(n,e).onsuccess=i):t?c.openCursor(n,"prev").onsuccess=C:c.openCursor(n).onsuccess=C}function et(c,n,t){var e,l,g="startkey"in c&&c.startkey,I="endkey"in c&&c.endkey,a="key"in c&&c.key,d="keys"in c&&c.keys,i=c.skip||0,C="number"==typeof c.limit?c.limit:-1,F=!1!==c.inclusive_end;if(!d&&(l=(e=function(c,n,t,e,l){try{if(c&&n)return l?IDBKeyRange.bound(n,c,!t,!1):IDBKeyRange.bound(c,n,!1,!t);if(c)return l?IDBKeyRange.upperBound(c):IDBKeyRange.lowerBound(c);if(n)return l?IDBKeyRange.lowerBound(n,!t):IDBKeyRange.upperBound(n,!t);if(e)return IDBKeyRange.only(e)}catch(c){return{error:c}}return null}(g,I,F,a,c.descending))&&e.error)&&("DataError"!==l.name||0!==l.code))return t(ec(cc,l.name,l.message));var r=[Dn,"by-sequence",fn];c.attachments&&r.push("attach-store");var X=$n(n,r,"readonly");if(X.error)return t(X.error);var o=X.txn;o.oncomplete=function(){c.attachments?_n(h,c.binary).then(W):W()},o.onabort=jn(t);var s,Z,B,V=o.objectStore(Dn),A=o.objectStore("by-sequence"),G=o.objectStore(fn),b=A.index("_doc_id_rev"),h=[];function U(n,t){var e={id:t.id,key:t.id,value:{rev:n}};t.deleted?d&&(h.push(e),e.value.deleted=!0,e.doc=null):i--<=0&&(h.push(e),c.include_docs&&function(n,t,e){var l=n.id+"::"+e;b.get(l).onsuccess=function(e){if(t.doc=On(e.target.result)||{},c.conflicts){var l=Hc(n);l.length&&(t.doc._conflicts=l)}Pn(t.doc,c,o)}}(t,e,n))}function Q(c){for(var n=0,t=c.length;n<t&&h.length!==C;n++){var e=c[n];if(e.error&&d)h.push(e);else{var l=Mn(e);U(l.winningRev,l)}}}function u(c,n,t){t&&(Q(n),h.length<C&&t.continue())}function W(){var n={total_rows:s,offset:c.skip,rows:h};c.update_seq&&void 0!==Z&&(n.update_seq=Z),t(null,n)}return G.get(fn).onsuccess=function(c){s=c.target.result.docCount},c.update_seq&&(B=function(c){c.target.result&&c.target.result.length>0&&(Z=c.target.result[0])},A.openCursor(null,"prev").onsuccess=function(c){var n=c.target.result,t=void 0;return n&&n.key&&(t=n.key),B({target:{result:[t]}})}),l||0===C?void 0:d?function(c,n,t){var e=new Array(c.length),l=0;c.forEach((function(g,I){n.get(g).onsuccess=function(n){n.target.result?e[I]=n.target.result:e[I]={key:g,error:"not_found"},++l===c.length&&t(c,e,{})}}))}(c.keys,V,u):-1===C?function(c,n,t){if("function"!=typeof c.getAll){var e=[];c.openCursor(n).onsuccess=function(c){var n=c.target.result;n?(e.push(n.value),n.continue()):t({target:{result:e}})}}else c.getAll(n).onsuccess=t}(V,e,(function(n){var t=n.target.result;c.descending&&(t=t.reverse()),Q(t)})):void tt(V,e,c.descending,C+i,u)}var lt=!1,gt=[];function It(){!lt&&gt.length&&(lt=!0,gt.shift()())}function at(c,n,t,e){if((c=h(c)).continuous){var l=t+":"+Nc();return ct.addListener(t,l,n,c),ct.notify(t),{cancel:function(){ct.removeListener(t,l)}}}var g=c.doc_ids&&new V(c.doc_ids);c.since=c.since||0;var I=c.since,a="limit"in c?c.limit:-1;0===a&&(a=1);var d,i,C,F,r=[],X=0,o=gc(c),s=new A;function Z(c,n,t,e){if(t.seq!==n)return e();if(t.winningRev===c._rev)return e(t,c);var l=c._id+"::"+t.winningRev;F.get(l).onsuccess=function(c){e(t,On(c.target.result))}}function B(){c.complete(null,{results:r,last_seq:I})}var G=[Dn,"by-sequence"];c.attachments&&G.push("attach-store");var b=$n(e,G,"readonly");if(b.error)return c.complete(b.error);(d=b.txn).onabort=jn(c.complete),d.oncomplete=function(){!c.continuous&&c.attachments?_n(r).then(B):B()},i=d.objectStore("by-sequence"),C=d.objectStore(Dn),F=i.index("_doc_id_rev"),tt(i,c.since&&!c.descending?IDBKeyRange.lowerBound(c.since,!0):null,c.descending,a,(function(n,t,e){if(e&&n.length){var l=new Array(n.length),i=new Array(n.length),F=0;t.forEach((function(t,I){!function(c,n,t){if(g&&!g.has(c._id))return t();var e=s.get(c._id);if(e)return Z(c,n,e,t);C.get(c._id).onsuccess=function(l){e=Mn(l.target.result),s.set(c._id,e),Z(c,n,e,t)}}(On(t),n[I],(function(t,g){i[I]=t,l[I]=g,++F===n.length&&function(){for(var n=[],t=0,g=l.length;t<g&&X!==a;t++){var I=l[t];if(I){var d=i[t];n.push(B(d,I))}}Promise.all(n).then((function(n){for(var t=0,e=n.length;t<e;t++)n[t]&&c.onChange(n[t])})).catch(c.complete),X!==a&&e.continue()}()}))}))}function B(n,t){var e=c.processChange(t,n,c);I=e.seq=n.seq;var l=o(e);return"object"==typeof l?Promise.reject(l):l?(X++,c.return_docs&&r.push(e),c.attachments&&c.include_docs?new Promise((function(n){Pn(t,c,d,(function(){_n([e],c.binary).then((function(){n(e)}))}))})):Promise.resolve(e)):Promise.resolve()}}))}var dt,it=new A,Ct=new A;function Ft(c,n){var t=this;!function(c,n,t){gt.push((function(){c((function(c,e){!function(c,n,t,e){try{c(n,t)}catch(n){e.emit("error",n)}}(n,c,e,t),lt=!1,a()((function(){It()}))}))})),It()}((function(n){!function(c,n,t){var e=n.name,l=null;function g(c,n){var t=c.objectStore(Dn);t.createIndex("deletedOrLocal","deletedOrLocal",{unique:!1}),t.openCursor().onsuccess=function(c){var e=c.target.result;if(e){var l=e.value,g=Mc(l);l.deletedOrLocal=g?"1":"0",t.put(l),e.continue()}else n()}}function I(c,n){var t=c.objectStore("local-store"),e=c.objectStore(Dn),l=c.objectStore("by-sequence");e.openCursor().onsuccess=function(c){var g=c.target.result;if(g){var I=g.value,a=I.id,d=Oc(a),i=Yc(I);if(d){var C=a+"::"+i,F=a+"::",r=a+"::~",X=l.index("_doc_id_rev"),o=IDBKeyRange.bound(F,r,!1,!1),s=X.openCursor(o);s.onsuccess=function(c){if(s=c.target.result){var n=s.value;n._doc_id_rev===C&&t.put(n),l.delete(s.primaryKey),s.continue()}else e.delete(g.primaryKey),g.continue()}}else g.continue()}else n&&n()}}function d(c,n){var t=c.objectStore("by-sequence"),e=c.objectStore("attach-store"),l=c.objectStore("attach-seq-store");e.count().onsuccess=function(c){if(!c.target.result)return n();t.openCursor().onsuccess=function(c){var t=c.target.result;if(!t)return n();for(var e=t.value,g=t.primaryKey,I=Object.keys(e._attachments||{}),a={},d=0;d<I.length;d++){a[e._attachments[I[d]].digest]=!0}var i=Object.keys(a);for(d=0;d<i.length;d++){var C=i[d];l.put({seq:g,digestSeq:C+"::"+g})}t.continue()}}}function i(c){var n=c.objectStore("by-sequence"),t=c.objectStore(Dn);t.openCursor().onsuccess=function(c){var e=c.target.result;if(e){var l,g=(l=e.value).data?Mn(l):(l.deleted="1"===l.deletedOrLocal,l);if(g.winningRev=g.winningRev||Yc(g),g.seq)return I();!function(){var c=g.id+"::",t=g.id+"::ï¿¿",e=n.index("_doc_id_rev").openCursor(IDBKeyRange.bound(c,t)),l=0;e.onsuccess=function(c){var n=c.target.result;if(!n)return g.seq=l,I();var t=n.primaryKey;t>l&&(l=t),n.continue()}}()}function I(){var c=Kn(g,g.winningRev,g.deleted);t.put(c).onsuccess=function(){e.continue()}}}}c._meta=null,c._remote=!1,c.type=function(){return"idb"},c._id=Q((function(n){n(null,c._meta.instanceId)})),c._bulkDocs=function(t,e,g){nt(n,t,e,c,l,g)},c._get=function(c,n,t){var e,g,I,a=n.ctx;if(!a){var d=$n(l,[Dn,"by-sequence","attach-store"],"readonly");if(d.error)return t(d.error);a=d.txn}function i(){t(I,{doc:e,metadata:g,ctx:a})}a.objectStore(Dn).get(c).onsuccess=function(c){if(!(g=Mn(c.target.result)))return I=ec(f,"missing"),i();var t;if(n.rev)t=n.latest?function(c,n){for(var t,e=n.rev_tree.slice();t=e.pop();){var l=t.pos,g=t.ids,I=g[0],a=g[1],d=g[2],i=0===d.length,C=t.history?t.history.slice():[];if(C.push({id:I,pos:l,opts:a}),i)for(var F=0,r=C.length;F<r;F++){var X=C[F];if(X.pos+"-"+X.id===c)return l+"-"+I}for(var o=0,s=d.length;o<s;o++)e.push({pos:l+1,ids:d[o],history:C})}throw new Error("Unable to resolve latest revision for id "+n.id+", rev "+c)}(n.rev,g):n.rev;else if(t=g.winningRev,Mc(g))return I=ec(f,"deleted"),i();var l=a.objectStore("by-sequence"),d=g.id+"::"+t;l.index("_doc_id_rev").get(d).onsuccess=function(c){if((e=c.target.result)&&(e=On(e)),!e)return I=ec(f,"missing"),i();i()}}},c._getAttachment=function(c,n,t,e,g){var I;if(e.ctx)I=e.ctx;else{var a=$n(l,[Dn,"by-sequence","attach-store"],"readonly");if(a.error)return g(a.error);I=a.txn}var d=t.digest,i=t.content_type;I.objectStore("attach-store").get(d).onsuccess=function(c){Ln(c.target.result.body,i,e.binary,(function(c){g(null,c)}))}},c._info=function(n){var t,e,g=$n(l,[fn,"by-sequence"],"readonly");if(g.error)return n(g.error);var I=g.txn;I.objectStore(fn).get(fn).onsuccess=function(c){e=c.target.result.docCount},I.objectStore("by-sequence").openCursor(null,"prev").onsuccess=function(c){var n=c.target.result;t=n?n.key:0},I.oncomplete=function(){n(null,{doc_count:e,update_seq:t,idb_attachment_format:c._meta.blobSupport?"binary":"base64"})}},c._allDocs=function(c,n){et(c,l,n)},c._changes=function(n){return at(n,c,e,l)},c._close=function(c){l.close(),it.delete(e),c()},c._getRevisionTree=function(c,n){var t=$n(l,[Dn],"readonly");if(t.error)return n(t.error);t.txn.objectStore(Dn).get(c).onsuccess=function(c){var t=Mn(c.target.result);t?n(null,t.rev_tree):n(ec(f))}},c._doCompaction=function(c,n,t){var e=$n(l,[Dn,"by-sequence","attach-store","attach-seq-store"],"readwrite");if(e.error)return t(e.error);var g=e.txn;g.objectStore(Dn).get(c).onsuccess=function(t){var e=Mn(t.target.result);yc(e.rev_tree,(function(c,t,e,l,g){var I=t+"-"+e;-1!==n.indexOf(I)&&(g.status="missing")})),qn(n,c,g);var l=e.winningRev,I=e.deleted;g.objectStore(Dn).put(Kn(e,l,I))},g.onabort=jn(t),g.oncomplete=function(){t()}},c._getLocal=function(c,n){var t=$n(l,["local-store"],"readonly");if(t.error)return n(t.error);var e=t.txn.objectStore("local-store").get(c);e.onerror=jn(n),e.onsuccess=function(c){var t=c.target.result;t?(delete t._doc_id_rev,n(null,t)):n(ec(f))}},c._putLocal=function(c,n,t){"function"==typeof n&&(t=n,n={}),delete c._revisions;var e=c._rev,g=c._id;c._rev=e?"0-"+(parseInt(e.split("-")[1],10)+1):"0-1";var I,a=n.ctx;if(!a){var d=$n(l,["local-store"],"readwrite");if(d.error)return t(d.error);(a=d.txn).onerror=jn(t),a.oncomplete=function(){I&&t(null,I)}}var i,C=a.objectStore("local-store");e?(i=C.get(g)).onsuccess=function(l){var g=l.target.result;g&&g._rev===e?C.put(c).onsuccess=function(){I={ok:!0,id:c._id,rev:c._rev},n.ctx&&t(null,I)}:t(ec(w))}:((i=C.add(c)).onerror=function(c){t(ec(w)),c.preventDefault(),c.stopPropagation()},i.onsuccess=function(){I={ok:!0,id:c._id,rev:c._rev},n.ctx&&t(null,I)})},c._removeLocal=function(c,n,t){"function"==typeof n&&(t=n,n={});var e,g=n.ctx;if(!g){var I=$n(l,["local-store"],"readwrite");if(I.error)return t(I.error);(g=I.txn).oncomplete=function(){e&&t(null,e)}}var a=c._id,d=g.objectStore("local-store"),i=d.get(a);i.onerror=jn(t),i.onsuccess=function(l){var g=l.target.result;g&&g._rev===c._rev?(d.delete(a),e={ok:!0,id:a,rev:"0-0"},n.ctx&&t(null,e)):t(ec(f))}},c._destroy=function(c,n){ct.removeAllListeners(e);var t=Ct.get(e);t&&t.result&&(t.result.close(),it.delete(e));var l=indexedDB.deleteDatabase(e);l.onsuccess=function(){Ct.delete(e),S()&&e in localStorage&&delete localStorage[e],n(null,{ok:!0})},l.onerror=jn(n)};var C=it.get(e);if(C)return l=C.idb,c._meta=C.global,a()((function(){t(null,c)}));var F=indexedDB.open(e,5);Ct.set(e,F),F.onupgradeneeded=function(c){var n=c.target.result;if(c.oldVersion<1)return function(c){var n=c.createObjectStore(Dn,{keyPath:"id"});c.createObjectStore("by-sequence",{autoIncrement:!0}).createIndex("_doc_id_rev","_doc_id_rev",{unique:!0}),c.createObjectStore("attach-store",{keyPath:"digest"}),c.createObjectStore(fn,{keyPath:"id",autoIncrement:!1}),c.createObjectStore("detect-blob-support"),n.createIndex("deletedOrLocal","deletedOrLocal",{unique:!1}),c.createObjectStore("local-store",{keyPath:"_id"});var t=c.createObjectStore("attach-seq-store",{autoIncrement:!0});t.createIndex("seq","seq"),t.createIndex("digestSeq","digestSeq",{unique:!0})}(n);var t=c.currentTarget.transaction;c.oldVersion<3&&function(c){c.createObjectStore("local-store",{keyPath:"_id"}).createIndex("_doc_id_rev","_doc_id_rev",{unique:!0})}(n),c.oldVersion<4&&function(c){var n=c.createObjectStore("attach-seq-store",{autoIncrement:!0});n.createIndex("seq","seq"),n.createIndex("digestSeq","digestSeq",{unique:!0})}(n);var e=[g,I,d,i],l=c.oldVersion;!function c(){var n=e[l-1];l++,n&&n(t,c)}()},F.onsuccess=function(n){(l=n.target.result).onversionchange=function(){l.close(),it.delete(e)},l.onabort=function(c){H("error","Database has a global failure",c.target.error),l.close(),it.delete(e)};var g,I,a,d,i=l.transaction([fn,"detect-blob-support",Dn],"readwrite"),C=!1;function F(){void 0!==a&&C&&(c._meta={name:e,instanceId:d,blobSupport:a},it.set(e,{idb:l,global:c._meta}),t(null,c))}function r(){if(void 0!==I&&void 0!==g){var c=e+"_id";c in g?d=g[c]:g[c]=d=Nc(),g.docCount=I,i.objectStore(fn).put(g)}}i.objectStore(fn).get(fn).onsuccess=function(c){g=c.target.result||{id:fn},r()},function(c,n){c.objectStore(Dn).index("deletedOrLocal").count(IDBKeyRange.only("0")).onsuccess=function(c){n(c.target.result)}}(i,(function(c){I=c,r()})),dt||(dt=function(c){return new Promise((function(n){var t=Ac([""]),e=c.objectStore("detect-blob-support").put(t,"key");e.onsuccess=function(){var c=navigator.userAgent.match(/Chrome\/(\d+)/),t=navigator.userAgent.match(/Edge\//);n(t||!c||parseInt(c[1],10)>=43)},e.onerror=c.onabort=function(c){c.preventDefault(),c.stopPropagation(),n(!1)}})).catch((function(){return!1}))}(i)),dt.then((function(c){a=c,F()})),i.oncomplete=function(){C=!0,F()},i.onabort=jn(t)},F.onerror=function(){var c="Failed to open indexedDB, are you in private browsing mode?";H("error",c),t(ec(cc,c))}}(t,c,n)}),n,t.constructor)}Ft.valid=function(){try{return"undefined"!=typeof indexedDB&&"undefined"!=typeof IDBKeyRange}catch(c){return!1}};var rt={};function Xt(c){var n=(c.doc||c.ok)._attachments;n&&Object.keys(n).forEach((function(c){var t=n[c];t.data=hc(t.data,t.content_type)}))}function ot(c){return/^_design/.test(c)?"_design/"+encodeURIComponent(c.slice(8)):/^_local/.test(c)?"_local/"+encodeURIComponent(c.slice(7)):encodeURIComponent(c)}function st(c){return c._attachments&&Object.keys(c._attachments)?Promise.all(Object.keys(c._attachments).map((function(n){var t=c._attachments[n];if(t.data&&"string"!=typeof t.data)return new Promise((function(c){uc(t.data,c)})).then((function(c){t.data=c}))}))):Promise.resolve()}function Zt(c,n){if(function(c){if(!c.prefix)return!1;var n=oc(c.prefix).protocol;return"http"===n||"https"===n}(n)){var t=n.name.substr(n.prefix.length);c=n.prefix.replace(/\/?$/,"/")+encodeURIComponent(t)}var e=oc(c);(e.user||e.password)&&(e.auth={username:e.user,password:e.password});var l=e.path.replace(/(^\/|\/$)/g,"").split("/");return e.db=l.pop(),-1===e.db.indexOf("%")&&(e.db=encodeURIComponent(e.db)),e.path=l.join("/"),e}function Bt(c,n){return Vt(c,c.db+"/"+n)}function Vt(c,n){var t=c.path?"/":"";return c.protocol+"://"+c.host+(c.port?":"+c.port:"")+"/"+c.path+t+n}function At(c){return"?"+Object.keys(c).map((function(n){return n+"="+encodeURIComponent(c[n])})).join("&")}function Gt(c,n){var t=this,l=Zt(c.name,c),I=Bt(l,"");c=h(c);var d,i=function(n,t){if((t=t||{}).headers=t.headers||new gn,c.auth||l.auth){var e=c.auth||l.auth,g=e.username+":"+e.password,I=Vc(unescape(encodeURIComponent(g)));t.headers.set("Authorization","Basic "+I)}var a=c.headers||{};return Object.keys(a).forEach((function(c){t.headers.append(c,a[c])})),function(c){var n="undefined"!=typeof navigator&&navigator.userAgent?navigator.userAgent.toLowerCase():"",t=-1!==n.indexOf("msie"),e=-1!==n.indexOf("trident"),l=-1!==n.indexOf("edge"),g=!("method"in c)||"GET"===c.method;return(t||e||l)&&g}(t)&&(n+=(-1===n.indexOf("?")?"?":"&")+"_nonce="+Date.now()),(c.fetch||ln)(n,t)};function C(c,n){return u(c,g()((function(c){r().then((function(){return n.apply(this,c)})).catch((function(n){c.pop()(n)}))}))).bind(t)}function F(c,n,t){var e={};return(n=n||{}).headers=n.headers||new gn,n.headers.get("Content-Type")||n.headers.set("Content-Type","application/json"),n.headers.get("Accept")||n.headers.set("Accept","application/json"),i(c,n).then((function(c){return e.ok=c.ok,e.status=c.status,c.json()})).then((function(c){if(e.data=c,!e.ok){e.data.status=e.status;var n=lc(e.data);if(t)return t(n);throw n}if(Array.isArray(e.data)&&(e.data=e.data.map((function(c){return c.error||c.missing?lc(c):c}))),!t)return e;t(null,e.data)}))}function r(){return c.skip_setup?Promise.resolve():d||((d=F(I).catch((function(c){return c&&c.status&&404===c.status?(T(404,"PouchDB is just detecting if the remote exists."),F(I,{method:"PUT"})):Promise.reject(c)})).catch((function(c){return!(!c||!c.status||412!==c.status)||Promise.reject(c)}))).catch((function(){d=null})),d)}function X(c){return c.split("/").map(encodeURIComponent).join("/")}a()((function(){n(null,t)})),t._remote=!0,t.type=function(){return"http"},t.id=C("id",(function(c){i(Vt(l,"")).then((function(c){return c.json()})).then((function(n){var t=n&&n.uuid?n.uuid+l.db:Bt(l,"");c(null,t)})).catch((function(n){c(n)}))})),t.compact=C("compact",(function(c,n){"function"==typeof c&&(n=c,c={}),c=h(c),F(Bt(l,"_compact"),{method:"POST"}).then((function(){!function e(){t.info((function(t,l){l&&!l.compact_running?n(null,{ok:!0}):setTimeout(e,c.interval||200)}))}()}))})),t.bulkGet=u("bulkGet",(function(c,n){var t=this;function e(n){var t={};c.revs&&(t.revs=!0),c.attachments&&(t.attachments=!0),c.latest&&(t.latest=!0),F(Bt(l,"_bulk_get"+At(t)),{method:"POST",body:JSON.stringify({docs:c.docs})}).then((function(t){c.attachments&&c.binary&&t.data.results.forEach((function(c){c.docs.forEach(Xt)})),n(null,t.data)})).catch(n)}function g(){var e=Math.ceil(c.docs.length/50),l=0,g=new Array(e);function I(c){return function(t,I){g[c]=I.results,++l===e&&n(null,{results:Ic(g)})}}for(var a=0;a<e;a++){var d=p(c,["revs","attachments","binary","latest"]);d.docs=c.docs.slice(50*a,Math.min(c.docs.length,50*(a+1))),y(t,d,I(a))}}var I=Vt(l,""),a=rt[I];"boolean"!=typeof a?e((function(c,t){c?(rt[I]=!1,T(c.status,"PouchDB is just detecting if the remote supports the _bulk_get API."),g()):(rt[I]=!0,n(null,t))})):a?e(n):g()})),t._info=function(c){r().then((function(){return i(Bt(l,""))})).then((function(c){return c.json()})).then((function(n){n.host=Bt(l,""),c(null,n)})).catch(c)},t.fetch=function(c,n){return r().then((function(){return i(Bt(l,c),n)}))},t.get=C("get",(function(c,n,t){"function"==typeof n&&(t=n,n={});var g={};function I(c){var t=c._attachments,g=t&&Object.keys(t);if(t&&g.length)return function(c,n){return new Promise((function(t,e){var l,g=0,I=0,a=0,d=c.length;function i(){++a===d?l?e(l):t():r()}function C(){g--,i()}function F(c){g--,l=l||c,i()}function r(){for(;g<n&&I<d;)g++,c[I++]().then(C,F)}r()}))}(g.map((function(g){return function(){return function(g){var I=t[g],a=ot(c._id)+"/"+X(g)+"?rev="+c._rev;return i(Bt(l,a)).then((function(c){return void 0===e||e.browser?c.blob():c.buffer()})).then((function(c){return n.binary?(void 0===e||e.browser||(c.type=I.content_type),c):new Promise((function(n){uc(c,n)}))})).then((function(c){delete I.stub,delete I.length,I.data=c}))}(g)}})),5)}(n=h(n)).revs&&(g.revs=!0),n.revs_info&&(g.revs_info=!0),n.latest&&(g.latest=!0),n.open_revs&&("all"!==n.open_revs&&(n.open_revs=JSON.stringify(n.open_revs)),g.open_revs=n.open_revs),n.rev&&(g.rev=n.rev),n.conflicts&&(g.conflicts=n.conflicts),n.update_seq&&(g.update_seq=n.update_seq),c=ot(c),F(Bt(l,c+At(g))).then((function(c){return Promise.resolve().then((function(){if(n.attachments)return t=c.data,Array.isArray(t)?Promise.all(t.map((function(c){if(c.ok)return I(c.ok)}))):I(t);var t})).then((function(){t(null,c.data)}))})).catch((function(n){n.docId=c,t(n)}))})),t.remove=C("remove",(function(c,n,t,e){var g;"string"==typeof n?(g={_id:c,_rev:n},"function"==typeof t&&(e=t,t={})):(g=c,"function"==typeof n?(e=n,t={}):(e=t,t=n));var I=g._rev||t.rev;F(Bt(l,ot(g._id))+"?rev="+I,{method:"DELETE"},e).catch(e)})),t.getAttachment=C("getAttachment",(function(c,n,t,g){"function"==typeof t&&(g=t,t={});var I,a=t.rev?"?rev="+t.rev:"",d=Bt(l,ot(c))+"/"+X(n)+a;i(d,{method:"GET"}).then((function(c){if(I=c.headers.get("content-type"),c.ok)return void 0===e||e.browser?c.blob():c.buffer();throw c})).then((function(c){void 0===e||e.browser||(c.type=I),g(null,c)})).catch((function(c){g(c)}))})),t.removeAttachment=C("removeAttachment",(function(c,n,t,e){F(Bt(l,ot(c)+"/"+X(n))+"?rev="+t,{method:"DELETE"},e).catch(e)})),t.putAttachment=C("putAttachment",(function(c,n,t,e,g,I){"function"==typeof g&&(I=g,g=e,e=t,t=null);var a=ot(c)+"/"+X(n),d=Bt(l,a);if(t&&(d+="?rev="+t),"string"==typeof e){var i;try{i=Bc(e)}catch(c){return I(ec(L,"Attachment is not a valid base64 string"))}e=i?bc(i,g):""}F(d,{headers:new gn({"Content-Type":g}),method:"PUT",body:e},I).catch(I)})),t._bulkDocs=function(c,n,t){c.new_edits=n.new_edits,r().then((function(){return Promise.all(c.docs.map(st))})).then((function(){return F(Bt(l,"_bulk_docs"),{method:"POST",body:JSON.stringify(c)},t)})).catch(t)},t._put=function(c,n,t){r().then((function(){return st(c)})).then((function(){return F(Bt(l,ot(c._id)),{method:"PUT",body:JSON.stringify(c)})})).then((function(c){t(null,c.data)})).catch((function(n){n.docId=c&&c._id,t(n)}))},t.allDocs=C("allDocs",(function(c,n){"function"==typeof c&&(n=c,c={});var t,e={},g="GET";(c=h(c)).conflicts&&(e.conflicts=!0),c.update_seq&&(e.update_seq=!0),c.descending&&(e.descending=!0),c.include_docs&&(e.include_docs=!0),c.attachments&&(e.attachments=!0),c.key&&(e.key=JSON.stringify(c.key)),c.start_key&&(c.startkey=c.start_key),c.startkey&&(e.startkey=JSON.stringify(c.startkey)),c.end_key&&(c.endkey=c.end_key),c.endkey&&(e.endkey=JSON.stringify(c.endkey)),void 0!==c.inclusive_end&&(e.inclusive_end=!!c.inclusive_end),void 0!==c.limit&&(e.limit=c.limit),void 0!==c.skip&&(e.skip=c.skip);var I=At(e);void 0!==c.keys&&(g="POST",t={keys:c.keys}),F(Bt(l,"_all_docs"+I),{method:g,body:JSON.stringify(t)}).then((function(t){c.include_docs&&c.attachments&&c.binary&&t.data.rows.forEach(Xt),n(null,t.data)})).catch(n)})),t._changes=function(c){var n="batch_size"in c?c.batch_size:25;!(c=h(c)).continuous||"heartbeat"in c||(c.heartbeat=1e4);var t="timeout"in c?c.timeout:3e4;"timeout"in c&&c.timeout&&t-c.timeout<5e3&&(t=c.timeout+5e3),"heartbeat"in c&&c.heartbeat&&t-c.heartbeat<5e3&&(t=c.heartbeat+5e3);var e={};"timeout"in c&&c.timeout&&(e.timeout=c.timeout);var g=void 0!==c.limit&&c.limit,I=g;if(c.style&&(e.style=c.style),(c.include_docs||c.filter&&"function"==typeof c.filter)&&(e.include_docs=!0),c.attachments&&(e.attachments=!0),c.continuous&&(e.feed="longpoll"),c.seq_interval&&(e.seq_interval=c.seq_interval),c.conflicts&&(e.conflicts=!0),c.descending&&(e.descending=!0),c.update_seq&&(e.update_seq=!0),"heartbeat"in c&&c.heartbeat&&(e.heartbeat=c.heartbeat),c.filter&&"string"==typeof c.filter&&(e.filter=c.filter),c.view&&"string"==typeof c.view&&(e.filter="_view",e.view=c.view),c.query_params&&"object"==typeof c.query_params)for(var d in c.query_params)c.query_params.hasOwnProperty(d)&&(e[d]=c.query_params[d]);var i,C="GET";c.doc_ids?(e.filter="_doc_ids",C="POST",i={doc_ids:c.doc_ids}):c.selector&&(e.filter="_selector",C="POST",i={selector:c.selector});var X,o=new en,s=function(t,a){if(!c.aborted){e.since=t,"object"==typeof e.since&&(e.since=JSON.stringify(e.since)),c.descending?g&&(e.limit=I):e.limit=!g||I>n?n:I;var d=Bt(l,"_changes"+At(e)),s={signal:o.signal,method:C,body:JSON.stringify(i)};X=t,c.aborted||r().then((function(){return F(d,s,a)})).catch(a)}},Z={results:[]},B=function(t,e){if(!c.aborted){var l=0;if(e&&e.results){l=e.results.length,Z.last_seq=e.last_seq;var d=null,i=null;"number"==typeof e.pending&&(d=e.pending),"string"!=typeof Z.last_seq&&"number"!=typeof Z.last_seq||(i=Z.last_seq);c.query_params,e.results=e.results.filter((function(n){I--;var t=gc(c)(n);return t&&(c.include_docs&&c.attachments&&c.binary&&Xt(n),c.return_docs&&Z.results.push(n),c.onChange(n,d,i)),t}))}else if(t)return c.aborted=!0,void c.complete(t);e&&e.last_seq&&(X=e.last_seq);var C=g&&I<=0||e&&l<n||c.descending;(!c.continuous||g&&I<=0)&&C?c.complete(null,Z):a()((function(){s(X,B)}))}};return s(c.since||0,B),{cancel:function(){c.aborted=!0,o.abort()}}},t.revsDiff=C("revsDiff",(function(c,n,t){"function"==typeof n&&(t=n,n={}),F(Bt(l,"_revs_diff"),{method:"POST",body:JSON.stringify(c)},t).catch(t)})),t._close=function(c){c()},t._destroy=function(c,n){F(Bt(l,""),{method:"DELETE"}).then((function(c){n(null,c)})).catch((function(c){404===c.status?n(null,{ok:!0}):n(c)}))}}function bt(c){this.status=400,this.name="query_parse_error",this.message=c,this.error=!0;try{Error.captureStackTrace(this,bt)}catch(c){}}function ht(c){this.status=404,this.name="not_found",this.message=c,this.error=!0;try{Error.captureStackTrace(this,ht)}catch(c){}}function Ut(c){this.status=500,this.name="invalid_value",this.message=c,this.error=!0;try{Error.captureStackTrace(this,Ut)}catch(c){}}function Qt(c,n){return n&&c.then((function(c){a()((function(){n(null,c)}))}),(function(c){a()((function(){n(c)}))})),c}function ut(c,n){return function(){var t=arguments,e=this;return c.add((function(){return n.apply(e,t)}))}}function Wt(c){var n=new V(c),t=new Array(n.size),e=-1;return n.forEach((function(c){t[++e]=c})),t}function mt(c){var n=new Array(c.size),t=-1;return c.forEach((function(c,e){n[++t]=e})),n}function Rt(c){return new Ut("builtin "+c+" function requires map values to be numbers or number arrays")}function Jt(c){for(var n=0,t=0,e=c.length;t<e;t++){var l=c[t];if("number"!=typeof l){if(!Array.isArray(l))throw Rt("_sum");n="number"==typeof n?[n]:n;for(var g=0,I=l.length;g<I;g++){var a=l[g];if("number"!=typeof a)throw Rt("_sum");void 0===n[g]?n.push(a):n[g]+=a}}else"number"==typeof n?n+=l:n[0]+=l}return n}Gt.valid=function(){return!0},C()(bt,Error),C()(ht,Error),C()(Ut,Error);var pt=H.bind(null,"log"),xt=Array.isArray,Nt=JSON.parse;function Yt(c,n){return sc("return ("+c.replace(/;\s*$/,"")+");",{emit:n,sum:Jt,log:pt,isArray:xt,toJSON:Nt})}function yt(){this.promise=new Promise((function(c){c()}))}function St(c){if(!c)return"undefined";switch(typeof c){case"function":case"string":return c.toString();default:return JSON.stringify(c)}}function kt(c,n,t,e,l,g){var I,a=function(c,n){return St(c)+St(n)+"undefined"}(t,e);if(!l&&(I=c._cachedViews=c._cachedViews||{})[a])return I[a];var d=c.info().then((function(d){var i=d.db_name+"-mrview-"+(l?"temp":pc(a));return Zc(c,"_local/"+g,(function(c){c.views=c.views||{};var t=n;-1===t.indexOf("/")&&(t=n+"/"+n);var e=c.views[t]=c.views[t]||{};if(!e[i])return e[i]=!0,c})).then((function(){return c.registerDependentDatabase(i).then((function(n){var l=n.db;l.auto_compaction=!0;var g={name:i,db:l,sourceDB:c,adapter:c.adapter,mapFun:t,reduceFun:e};return g.db.get("_local/lastSeq").catch((function(c){if(404!==c.status)throw c})).then((function(c){return g.seq=c?c.seq:0,I&&g.db.once("destroyed",(function(){delete I[a]})),g}))}))}))}));return I&&(I[a]=d),d}yt.prototype.add=function(c){return this.promise=this.promise.catch((function(){})).then((function(){return c()})),this.promise},yt.prototype.finish=function(){return this.promise};var Ht={},Et=new yt;function Tt(c){return-1===c.indexOf("/")?[c,c]:c.split("/")}function vt(c,n){try{c.emit("error",n)}catch(c){H("error","The user's map/reduce function threw an uncaught error.\nYou can debug this error by doing:\nmyDatabase.on('error', function (err) { debugger; });\nPlease double-check your map/reduce function."),H("error",n)}}var zt=function(c,n){return Jt(n)},Dt=function(c,n){return n.length},ft=function(c,n){return{sum:Jt(n),min:Math.min.apply(null,n),max:Math.max.apply(null,n),count:n.length,sumsqr:function(c){for(var n=0,t=0,e=c.length;t<e;t++){var l=c[t];n+=l*l}return n}(n)}};var wt=function(c,n,t,e){function l(c,n,t){try{n(t)}catch(n){vt(c,n)}}function I(c,n,t,e,l){try{return{output:n(t,e,l)}}catch(n){return vt(c,n),{error:n}}}function d(c,n){var t=on(c.key,n.key);return 0!==t?t:on(c.value,n.value)}function i(c,n,t){return t=t||0,"number"==typeof n?c.slice(t,n+t):t>0?c.slice(t):c}function C(c){var n=c.value;return n&&"object"==typeof n&&n._id||c.id}function F(c){return function(n){return c.include_docs&&c.attachments&&c.binary&&function(c){c.rows.forEach((function(c){var n=c.doc&&c.doc._attachments;n&&Object.keys(n).forEach((function(c){var t=n[c];n[c].data=hc(t.data,t.content_type)}))}))}(n),n}}function r(c,n,t,e){var l=n[c];void 0!==l&&(e&&(l=encodeURIComponent(JSON.stringify(l))),t.push(c+"="+l))}function X(c){if(void 0!==c){var n=Number(c);return isNaN(n)||n!==parseInt(c,10)?c:n}}function o(c,n){var t=c.descending?"endkey":"startkey",e=c.descending?"startkey":"endkey";if(void 0!==c[t]&&void 0!==c[e]&&on(c[t],c[e])>0)throw new bt("No rows can match your key range, reverse your start_key and end_key or set {descending : true}");if(n.reduce&&!1!==c.reduce){if(c.include_docs)throw new bt("{include_docs:true} is invalid for reduce");if(c.keys&&c.keys.length>1&&!c.group&&!c.group_level)throw new bt("Multi-key fetches for reduce views must use {group: true}")}["group_level","limit","skip"].forEach((function(n){var t=function(c){if(c){if("number"!=typeof c)return new bt('Invalid value for integer: "'+c+'"');if(c<0)return new bt('Invalid value for positive integer: "'+c+'"')}}(c[n]);if(t)throw t}))}function s(c){return function(n){if(404===n.status)return c;throw n}}function Z(c,n,t){var e="_local/doc_"+c,l={_id:e,keys:[]},g=t.get(c),I=g[0];return(function(c){return 1===c.length&&/^1-/.test(c[0].rev)}(g[1])?Promise.resolve(l):n.db.get(e).catch(s(l))).then((function(c){return function(c){return c.keys.length?n.db.allDocs({keys:c.keys,include_docs:!0}):Promise.resolve({rows:[]})}(c).then((function(n){return function(c,n){for(var t=[],e=new V,l=0,g=n.rows.length;l<g;l++){var a=n.rows[l].doc;if(a&&(t.push(a),e.add(a._id),a._deleted=!I.has(a._id),!a._deleted)){var d=I.get(a._id);"value"in d&&(a.value=d.value)}}var i=mt(I);return i.forEach((function(c){if(!e.has(c)){var n={_id:c},l=I.get(c);"value"in l&&(n.value=l.value),t.push(n)}})),c.keys=Wt(i.concat(c.keys)),t.push(c),t}(c,n)}))}))}function B(c){var n="string"==typeof c?c:c.name,t=Ht[n];return t||(t=Ht[n]=new yt),t}function G(c){return ut(B(c),(function(){return function(c){var t,e;var g=n(c.mapFun,(function(c,n){var l={id:e._id,key:sn(c)};null!=n&&(l.value=sn(n)),t.push(l)})),I=c.seq||0;function a(n,t){return function(){return function(c,n,t){return c.db.get("_local/lastSeq").catch(s({_id:"_local/lastSeq",seq:0})).then((function(e){var l=mt(n);return Promise.all(l.map((function(t){return Z(t,c,n)}))).then((function(n){var l=Ic(n);return e.seq=t,l.push(e),c.db.bulkDocs({docs:l})}))}))}(c,n,t)}}var i=new yt;function C(){return c.sourceDB.changes({return_docs:!0,conflicts:!0,include_docs:!0,style:"all_docs",since:I,limit:50}).then(F)}function F(n){var F=n.results;if(F.length){var X=function(n){for(var a=new A,i=0,C=n.length;i<C;i++){var F=n[i];if("_"!==F.doc._id[0]){t=[],(e=F.doc)._deleted||l(c.sourceDB,g,e),t.sort(d);var X=r(t);a.set(F.doc._id,[X,F.changes])}I=F.seq}return a}(F);if(i.add(a(X,I)),!(F.length<50))return C()}}function r(c){for(var n,t=new A,e=0,l=c.length;e<l;e++){var g=c[e],I=[g.key,g.id];e>0&&0===on(g.key,n)&&I.push(e),t.set(Bn(I),g),n=g.key}return t}return C().then((function(){return i.finish()})).then((function(){c.seq=I}))}(c)}))()}function b(c,n){return ut(B(c),(function(){return function(c,n){var e,l=c.reduceFun&&!1!==n.reduce,g=n.skip||0;void 0===n.keys||n.keys.length||(n.limit=0,delete n.keys);function a(n){return n.include_docs=!0,c.db.allDocs(n).then((function(c){return e=c.total_rows,c.rows.map((function(c){if("value"in c.doc&&"object"==typeof c.doc.value&&null!==c.doc.value){var n=Object.keys(c.doc.value).sort(),t=["id","key","value"];if(!(n<t||n>t))return c.doc.value}var e=function(c){for(var n=[],t=[],e=0;;){var l=c[e++];if("\0"!==l)switch(l){case"1":n.push(null);break;case"2":n.push("1"===c[e]),e++;break;case"3":var g=Vn(c,e);n.push(g.num),e+=g.length;break;case"4":for(var I="";;){var a=c[e];if("\0"===a)break;I+=a,e++}I=I.replace(/\u0001\u0001/g,"\0").replace(/\u0001\u0002/g,"").replace(/\u0002\u0002/g,""),n.push(I);break;case"5":var d={element:[],index:n.length};n.push(d.element),t.push(d);break;case"6":var i={element:{},index:n.length};n.push(i.element),t.push(i);break;default:throw new Error("bad collationIndex or unexpectedly reached end of input: "+l)}else{if(1===n.length)return n.pop();An(n,t)}}}(c.doc._id);return{key:e[0],id:e[1],value:"value"in c.doc?c.doc.value:null}}))}))}function d(a){var d;if(d=l?function(c,n,e){0===e.group_level&&delete e.group_level;var l=e.group||e.group_level,g=t(c.reduceFun),a=[],d=isNaN(e.group_level)?Number.POSITIVE_INFINITY:e.group_level;n.forEach((function(c){var n=a[a.length-1],t=l?c.key:null;if(l&&Array.isArray(t)&&(t=t.slice(0,d)),n&&0===on(n.groupKey,t))return n.keys.push([c.key,c.id]),void n.values.push(c.value);a.push({keys:[[c.key,c.id]],values:[c.value],groupKey:t})})),n=[];for(var C=0,F=a.length;C<F;C++){var r=a[C],X=I(c.sourceDB,g,r.keys,r.values,!1);if(X.error&&X.error instanceof Ut)throw X.error;n.push({value:X.error?null:X.output,key:r.groupKey})}return{rows:i(n,e.limit,e.skip)}}(c,a,n):{total_rows:e,offset:g,rows:a},n.update_seq&&(d.update_seq=c.seq),n.include_docs){var F=Wt(a.map(C));return c.sourceDB.allDocs({keys:F,include_docs:!0,conflicts:n.conflicts,attachments:n.attachments,binary:n.binary}).then((function(c){var n=new A;return c.rows.forEach((function(c){n.set(c.id,c.doc)})),a.forEach((function(c){var t=C(c),e=n.get(t);e&&(c.doc=e)})),d}))}return d}if(void 0!==n.keys){var F=n.keys.map((function(c){var t={startkey:Bn([c]),endkey:Bn([c,{}])};return n.update_seq&&(t.update_seq=!0),a(t)}));return Promise.all(F).then(Ic).then(d)}var r,X,o={descending:n.descending};if(n.update_seq&&(o.update_seq=!0),"start_key"in n&&(r=n.start_key),"startkey"in n&&(r=n.startkey),"end_key"in n&&(X=n.end_key),"endkey"in n&&(X=n.endkey),void 0!==r&&(o.startkey=n.descending?Bn([r,{}]):Bn([r])),void 0!==X){var s=!1!==n.inclusive_end;n.descending&&(s=!s),o.endkey=Bn(s?[X,{}]:[X])}if(void 0!==n.key){var Z=Bn([n.key]),B=Bn([n.key,{}]);o.descending?(o.endkey=Z,o.startkey=B):(o.startkey=Z,o.endkey=B)}return l||("number"==typeof n.limit&&(o.limit=n.limit),o.skip=g),a(o).then(d)}(c,n)}))()}function h(n,t,l){if("function"==typeof n._query)return function(c,n,t){return new Promise((function(e,l){c._query(n,t,(function(c,n){if(c)return l(c);e(n)}))}))}(n,t,l);if(dc(n))return function(c,n,t){var e,l,g,I=[],a="GET";if(r("reduce",t,I),r("include_docs",t,I),r("attachments",t,I),r("limit",t,I),r("descending",t,I),r("group",t,I),r("group_level",t,I),r("skip",t,I),r("stale",t,I),r("conflicts",t,I),r("startkey",t,I,!0),r("start_key",t,I,!0),r("endkey",t,I,!0),r("end_key",t,I,!0),r("inclusive_end",t,I),r("key",t,I,!0),r("update_seq",t,I),I=""===(I=I.join("&"))?"":"?"+I,void 0!==t.keys){var d="keys="+encodeURIComponent(JSON.stringify(t.keys));d.length+I.length+1<=2e3?I+=("?"===I[0]?"&":"?")+d:(a="POST","string"==typeof n?e={keys:t.keys}:n.keys=t.keys)}if("string"==typeof n){var i=Tt(n);return c.fetch("_design/"+i[0]+"/_view/"+i[1]+I,{headers:new gn({"Content-Type":"application/json"}),method:a,body:JSON.stringify(e)}).then((function(c){return l=c.ok,g=c.status,c.json()})).then((function(c){if(!l)throw c.status=g,lc(c);return c.rows.forEach((function(c){if(c.value&&c.value.error&&"builtin_reduce_error"===c.value.error)throw new Error(c.reason)})),c})).then(F(t))}return e=e||{},Object.keys(n).forEach((function(c){Array.isArray(n[c])?e[c]=n[c]:e[c]=n[c].toString()})),c.fetch("_temp_view"+I,{headers:new gn({"Content-Type":"application/json"}),method:"POST",body:JSON.stringify(e)}).then((function(c){return l=c.ok,g=c.status,c.json()})).then((function(c){if(!l)throw c.status=g,lc(c);return c})).then(F(t))}(n,t,l);if("string"!=typeof t)return o(l,t),Et.add((function(){return kt(n,"temp_view/temp_view",t.map,t.reduce,!0,c).then((function(c){return n=G(c).then((function(){return b(c,l)})),t=function(){return c.db.destroy()},n.then((function(c){return t().then((function(){return c}))}),(function(c){return t().then((function(){throw c}))}));var n,t}))})),Et.finish();var g=t,I=Tt(g),d=I[0],i=I[1];return n.get("_design/"+d).then((function(t){var I=t.views&&t.views[i];if(!I)throw new ht("ddoc "+t._id+" has no view named "+i);return e(t,i),o(l,I),kt(n,g,I.map,I.reduce,!1,c).then((function(c){return"ok"===l.stale||"update_after"===l.stale?("update_after"===l.stale&&a()((function(){G(c)})),b(c,l)):G(c).then((function(){return b(c,l)}))}))}))}var U;return{query:function(c,n,t){var e=this;"function"==typeof n&&(t=n,n={}),n=n?function(c){return c.group_level=X(c.group_level),c.limit=X(c.limit),c.skip=X(c.skip),c}(n):{},"function"==typeof c&&(c={map:c});var l=Promise.resolve().then((function(){return h(e,c,n)}));return Qt(l,t),l},viewCleanup:(U=function(){var n=this;return"function"==typeof n._viewCleanup?function(c){return new Promise((function(n,t){c._viewCleanup((function(c,e){if(c)return t(c);n(e)}))}))}(n):dc(n)?function(c){return c.fetch("_view_cleanup",{headers:new gn({"Content-Type":"application/json"}),method:"POST"}).then((function(c){return c.json()}))}(n):function(n){return n.get("_local/"+c).then((function(c){var t=new A;Object.keys(c.views).forEach((function(c){var n=Tt(c),e="_design/"+n[0],l=n[1],g=t.get(e);g||(g=new V,t.set(e,g)),g.add(l)}));var e={keys:mt(t),include_docs:!0};return n.allDocs(e).then((function(e){var l={};e.rows.forEach((function(n){var e=n.key.substring(8);t.get(n.key).forEach((function(t){var g=e+"/"+t;c.views[g]||(g=t);var I=Object.keys(c.views[g]),a=n.doc&&n.doc.views&&n.doc.views[t];I.forEach((function(c){l[c]=l[c]||a}))}))}));var g=Object.keys(l).filter((function(c){return!l[c]})).map((function(c){return ut(B(c),(function(){return new n.constructor(c,n.__opts).destroy()}))()}));return Promise.all(g).then((function(){return{ok:!0}}))}))}),s({ok:!0}))}(n)},g()((function(c){var n=c.pop(),t=U.apply(this,c);return"function"==typeof n&&Qt(t,n),t})))}}("mrviews",(function(c,n){if("function"==typeof c&&2===c.length){var t=c;return function(c){return t(c,n)}}return Yt(c.toString(),n)}),(function(c){var n=c.toString(),t=function(c){if(/^_sum/.test(c))return zt;if(/^_count/.test(c))return Dt;if(/^_stats/.test(c))return ft;if(/^_/.test(c))throw new Error(c+" is not a supported reduce function.")}(n);return t||Yt(n)}),(function(c,n){var t=c.views&&c.views[n];if("string"!=typeof t.map)throw new ht("ddoc "+c._id+" has no string view named "+n+", instead found object of type: "+typeof t.map)}));var jt={query:function(c,n,t){return wt.query.call(this,c,n,t)},viewCleanup:function(c){return wt.viewCleanup.call(this,c)}};function Kt(c){return/^1-/.test(c)}function Mt(c,n){var t=Object.keys(n._attachments);return Promise.all(t.map((function(t){return c.getAttachment(n._id,t,{rev:n._rev})})))}function Ot(c,n,t,e){t=h(t);var l=[],g=!0;function I(n){return c.allDocs({keys:n,include_docs:!0,conflicts:!0}).then((function(c){if(e.cancelled)throw new Error("cancelled");c.rows.forEach((function(c){var n;c.deleted||!c.doc||!Kt(c.value.rev)||(n=c.doc,n._attachments&&Object.keys(n._attachments).length>0)||function(c){return c._conflicts&&c._conflicts.length>0}(c.doc)||(c.doc._conflicts&&delete c.doc._conflicts,l.push(c.doc),delete t[c.id])}))}))}return Promise.resolve().then((function(){var c=Object.keys(t).filter((function(c){var n=t[c].missing;return 1===n.length&&Kt(n[0])}));if(c.length>0)return I(c)})).then((function(){var I=function(c){var n=[];return Object.keys(c).forEach((function(t){c[t].missing.forEach((function(c){n.push({id:t,rev:c})}))})),{docs:n,revs:!0,latest:!0}}(t);if(I.docs.length)return c.bulkGet(I).then((function(t){if(e.cancelled)throw new Error("cancelled");return Promise.all(t.results.map((function(t){return Promise.all(t.docs.map((function(t){var e=t.ok;return t.error&&(g=!1),e&&e._attachments?function(c,n,t){var e=dc(n)&&!dc(c),l=Object.keys(t._attachments);return e?c.get(t._id).then((function(e){return Promise.all(l.map((function(l){return function(c,n,t){return!c._attachments||!c._attachments[t]||c._attachments[t].digest!==n._attachments[t].digest}(e,t,l)?n.getAttachment(t._id,l):c.getAttachment(e._id,l)})))})).catch((function(c){if(404!==c.status)throw c;return Mt(n,t)})):Mt(n,t)}(n,c,e).then((function(c){var n=Object.keys(e._attachments);return c.forEach((function(c,t){var l=e._attachments[n[t]];delete l.stub,delete l.length,l.data=c})),e})):e})))}))).then((function(c){l=l.concat(Ic(c).filter(Boolean))}))}))})).then((function(){return{ok:g,docs:l}}))}function Lt(c,n,t,e,l){return c.get(n).catch((function(t){if(404===t.status)return"http"!==c.adapter&&"https"!==c.adapter||T(404,"PouchDB is just checking if a remote checkpoint exists."),{session_id:e,_id:n,history:[],replicator:"pouchdb",version:1};throw t})).then((function(g){if(!l.cancelled&&g.last_seq!==t)return g.history=(g.history||[]).filter((function(c){return c.session_id!==e})),g.history.unshift({last_seq:t,session_id:e}),g.history=g.history.slice(0,5),g.version=1,g.replicator="pouchdb",g.session_id=e,g.last_seq=t,c.put(g).catch((function(g){if(409===g.status)return Lt(c,n,t,e,l);throw g}))}))}function Pt(c,n,t,e,l){this.src=c,this.target=n,this.id=t,this.returnValue=e,this.opts=l||{}}Pt.prototype.writeCheckpoint=function(c,n){var t=this;return this.updateTarget(c,n).then((function(){return t.updateSource(c,n)}))},Pt.prototype.updateTarget=function(c,n){return this.opts.writeTargetCheckpoint?Lt(this.target,this.id,c,n,this.returnValue):Promise.resolve(!0)},Pt.prototype.updateSource=function(c,n){if(this.opts.writeSourceCheckpoint){var t=this;return Lt(this.src,this.id,c,n,this.returnValue).catch((function(c){if($t(c))return t.opts.writeSourceCheckpoint=!1,!0;throw c}))}return Promise.resolve(!0)};var _t={undefined:function(c,n){return 0===on(c.last_seq,n.last_seq)?n.last_seq:0},1:function(c,n){return function(c,n){if(c.session_id===n.session_id)return{last_seq:c.last_seq,history:c.history};return function c(n,t){var e=n[0],l=n.slice(1),g=t[0],I=t.slice(1);if(!e||0===t.length)return{last_seq:0,history:[]};if(qt(e.session_id,t))return{last_seq:e.last_seq,history:n};if(qt(g.session_id,l))return{last_seq:g.last_seq,history:I};return c(l,I)}(c.history,n.history)}(n,c).last_seq}};function qt(c,n){var t=n[0],e=n.slice(1);return!(!c||0===n.length)&&(c===t.session_id||qt(c,e))}function $t(c){return"number"==typeof c.status&&4===Math.floor(c.status/100)}Pt.prototype.getCheckpoint=function(){var c=this;return c.opts&&c.opts.writeSourceCheckpoint&&!c.opts.writeTargetCheckpoint?c.src.get(c.id).then((function(c){return c.last_seq||0})).catch((function(c){if(404!==c.status)throw c;return 0})):c.target.get(c.id).then((function(n){return c.opts&&c.opts.writeTargetCheckpoint&&!c.opts.writeSourceCheckpoint?n.last_seq||0:c.src.get(c.id).then((function(c){return n.version!==c.version?0:(t=n.version?n.version.toString():"undefined")in _t?_t[t](n,c):0;var t}),(function(t){if(404===t.status&&n.last_seq)return c.src.put({_id:c.id,last_seq:0}).then((function(){return 0}),(function(t){return $t(t)?(c.opts.writeSourceCheckpoint=!1,n.last_seq):0}));throw t}))})).catch((function(c){if(404!==c.status)throw c;return 0}))};function ce(c,n,t){var e=t.doc_ids?t.doc_ids.sort(on):"",l=t.filter?t.filter.toString():"",g="",I="",a="";return t.selector&&(a=JSON.stringify(t.selector)),t.filter&&t.query_params&&(g=JSON.stringify(function(c){return Object.keys(c).sort(on).reduce((function(n,t){return n[t]=c[t],n}),{})}(t.query_params))),t.filter&&"_view"===t.filter&&(I=t.view.toString()),Promise.all([c.id(),n.id()]).then((function(c){var n=c[0]+c[1]+l+I+g+e+a;return new Promise((function(c){Jc(n,c)}))})).then((function(c){return"_local/"+(c=c.replace(/\//g,".").replace(/\+/g,"_"))}))}function ne(c,n,t,e,l){var g,I,d,i=[],C={seq:0,changes:[],docs:[]},F=!1,r=!1,X=!1,o=0,s=t.continuous||t.live||!1,Z=t.batch_size||100,B=t.batches_limit||10,V=!1,A=t.doc_ids,G=t.selector,b=[],U=Nc();l=l||{ok:!0,start_time:(new Date).toISOString(),docs_read:0,docs_written:0,doc_write_failures:0,errors:[]};var Q={};function u(){return d?Promise.resolve():ce(c,n,t).then((function(l){I=l;var g={};g=!1===t.checkpoint?{writeSourceCheckpoint:!1,writeTargetCheckpoint:!1}:"source"===t.checkpoint?{writeSourceCheckpoint:!0,writeTargetCheckpoint:!1}:"target"===t.checkpoint?{writeSourceCheckpoint:!1,writeTargetCheckpoint:!0}:{writeSourceCheckpoint:!0,writeTargetCheckpoint:!0},d=new Pt(c,n,I,e,g)}))}function W(){if(b=[],0!==g.docs.length){var c=g.docs,I={timeout:t.timeout};return n.bulkDocs({docs:c,new_edits:!1},I).then((function(n){if(e.cancelled)throw N(),new Error("cancelled");var t=Object.create(null);n.forEach((function(c){c.error&&(t[c.id]=c)}));var g=Object.keys(t).length;l.doc_write_failures+=g,l.docs_written+=c.length-g,c.forEach((function(c){var n=t[c._id];if(n){l.errors.push(n);var g=(n.name||"").toLowerCase();if("unauthorized"!==g&&"forbidden"!==g)throw n;e.emit("denied",h(n))}else b.push(c)}))}),(function(n){throw l.doc_write_failures+=c.length,n}))}}function m(){if(g.error)throw new Error("There was a problem getting docs.");l.last_seq=o=g.seq;var c=h(l);return b.length&&(c.docs=b,"number"==typeof g.pending&&(c.pending=g.pending,delete g.pending),e.emit("change",c)),F=!0,d.writeCheckpoint(g.seq,U).then((function(){if(F=!1,e.cancelled)throw N(),new Error("cancelled");g=void 0,k()})).catch((function(c){throw T(c),c}))}function R(){return Ot(c,n,g.diffs,e).then((function(c){g.error=!c.ok,c.docs.forEach((function(c){delete g.diffs[c._id],l.docs_read++,g.docs.push(c)}))}))}function J(){var c;e.cancelled||g||(0!==i.length?(g=i.shift(),(c={},g.changes.forEach((function(n){"_user/"!==n.id&&(c[n.id]=n.changes.map((function(c){return c.rev})))})),n.revsDiff(c).then((function(c){if(e.cancelled)throw N(),new Error("cancelled");g.diffs=c}))).then(R).then(W).then(m).then(J).catch((function(c){x("batch processing terminated with error",c)}))):p(!0))}function p(c){0!==C.changes.length?(c||r||C.changes.length>=Z)&&(i.push(C),C={seq:0,changes:[],docs:[]},"pending"!==e.state&&"stopped"!==e.state||(e.state="active",e.emit("active")),J()):0!==i.length||g||((s&&Q.live||r)&&(e.state="pending",e.emit("paused")),r&&N())}function x(c,n){X||(n.message||(n.message=c),l.ok=!1,l.status="aborting",i=[],C={seq:0,changes:[],docs:[]},N(n))}function N(g){if(!(X||e.cancelled&&(l.status="cancelled",F)))if(l.status=l.status||"complete",l.end_time=(new Date).toISOString(),l.last_seq=o,X=!0,g){(g=ec(g)).result=l;var I=(g.name||"").toLowerCase();"unauthorized"===I||"forbidden"===I?(e.emit("error",g),e.removeAllListeners()):function(c,n,t,e){if(!1===c.retry)return n.emit("error",t),void n.removeAllListeners();if("function"!=typeof c.back_off_function&&(c.back_off_function=E),n.emit("requestError",t),"active"===n.state||"pending"===n.state){n.emit("paused",t),n.state="stopped";var l=function(){c.current_back_off=0};n.once("paused",(function(){n.removeListener("active",l)})),n.once("active",l)}c.current_back_off=c.current_back_off||0,c.current_back_off=c.back_off_function(c.current_back_off),setTimeout(e,c.current_back_off)}(t,e,g,(function(){ne(c,n,t,e)}))}else e.emit("complete",l),e.removeAllListeners()}function Y(c,n,l){if(e.cancelled)return N();"number"==typeof n&&(C.pending=n),gc(t)(c)&&(C.seq=c.seq||l,C.changes.push(c),a()((function(){p(0===i.length&&Q.live)})))}function y(c){if(V=!1,e.cancelled)return N();if(c.results.length>0)Q.since=c.results[c.results.length-1].seq,k(),p(!0);else{var n=function(){s?(Q.live=!0,k()):r=!0,p(!0)};g||0!==c.results.length?n():(F=!0,d.writeCheckpoint(c.last_seq,U).then((function(){F=!1,l.last_seq=o=c.last_seq,n()})).catch(T))}}function S(c){if(V=!1,e.cancelled)return N();x("changes rejected",c)}function k(){if(!V&&!r&&i.length<B){V=!0,e._changes&&(e.removeListener("cancel",e._abortChanges),e._changes.cancel()),e.once("cancel",l);var n=c.changes(Q).on("change",Y);n.then(g,g),n.then(y).catch(S),t.retry&&(e._changes=n,e._abortChanges=l)}function l(){n.cancel()}function g(){e.removeListener("cancel",l)}}function H(){u().then((function(){if(!e.cancelled)return d.getCheckpoint().then((function(c){Q={since:o=c,limit:Z,batch_size:Z,style:"all_docs",doc_ids:A,selector:G,return_docs:!0},t.filter&&("string"!=typeof t.filter?Q.include_docs=!0:Q.filter=t.filter),"heartbeat"in t&&(Q.heartbeat=t.heartbeat),"timeout"in t&&(Q.timeout=t.timeout),t.query_params&&(Q.query_params=t.query_params),t.view&&(Q.view=t.view),k()}));N()})).catch((function(c){x("getCheckpoint rejected with ",c)}))}function T(c){F=!1,x("writeCheckpoint completed with error",c)}e.ready(c,n),e.cancelled?N():(e._addedListeners||(e.once("cancel",N),"function"==typeof t.complete&&(e.once("error",t.complete),e.once("complete",(function(c){t.complete(null,c)}))),e._addedListeners=!0),void 0===t.since?H():u().then((function(){return F=!0,d.writeCheckpoint(t.since,U)})).then((function(){F=!1,e.cancelled?N():(o=t.since,H())})).catch(T))}function te(){d.EventEmitter.call(this),this.cancelled=!1,this.state="pending";var c=this,n=new Promise((function(n,t){c.once("complete",n),c.once("error",t)}));c.then=function(c,t){return n.then(c,t)},c.catch=function(c){return n.catch(c)},c.catch((function(){}))}function ee(c,n){var t=n.PouchConstructor;return"string"==typeof c?new t(c,n):c}function le(c,n,t,e){if("function"==typeof t&&(e=t,t={}),void 0===t&&(t={}),t.doc_ids&&!Array.isArray(t.doc_ids))throw ec(q,"`doc_ids` filter parameter is not a list.");t.complete=e,(t=h(t)).continuous=t.continuous||t.live,t.retry="retry"in t&&t.retry,t.PouchConstructor=t.PouchConstructor||this;var l=new te(t);return ne(ee(c,t),ee(n,t),t,l),l}function ge(c,n,t,e){return"function"==typeof t&&(e=t,t={}),void 0===t&&(t={}),(t=h(t)).PouchConstructor=t.PouchConstructor||this,new Ie(c=ee(c,t),n=ee(n,t),t,e)}function Ie(c,n,t,e){var l=this;this.canceled=!1;var g=t.push?v({},t,t.push):t,I=t.pull?v({},t,t.pull):t;function a(c){l.emit("change",{direction:"pull",change:c})}function d(c){l.emit("change",{direction:"push",change:c})}function i(c){l.emit("denied",{direction:"push",doc:c})}function C(c){l.emit("denied",{direction:"pull",doc:c})}function F(){l.pushPaused=!0,l.pullPaused&&l.emit("paused")}function r(){l.pullPaused=!0,l.pushPaused&&l.emit("paused")}function X(){l.pushPaused=!1,l.pullPaused&&l.emit("active",{direction:"push"})}function o(){l.pullPaused=!1,l.pushPaused&&l.emit("active",{direction:"pull"})}this.push=le(c,n,g),this.pull=le(n,c,I),this.pushPaused=!0,this.pullPaused=!0;var s={};function Z(c){return function(n,t){("change"===n&&(t===a||t===d)||"denied"===n&&(t===C||t===i)||"paused"===n&&(t===r||t===F)||"active"===n&&(t===o||t===X))&&(n in s||(s[n]={}),s[n][c]=!0,2===Object.keys(s[n]).length&&l.removeAllListeners(n))}}function B(c,n,t){-1==c.listeners(n).indexOf(t)&&c.on(n,t)}t.live&&(this.push.on("complete",l.pull.cancel.bind(l.pull)),this.pull.on("complete",l.push.cancel.bind(l.push))),this.on("newListener",(function(c){"change"===c?(B(l.pull,"change",a),B(l.push,"change",d)):"denied"===c?(B(l.pull,"denied",C),B(l.push,"denied",i)):"active"===c?(B(l.pull,"active",o),B(l.push,"active",X)):"paused"===c&&(B(l.pull,"paused",r),B(l.push,"paused",F))})),this.on("removeListener",(function(c){"change"===c?(l.pull.removeListener("change",a),l.push.removeListener("change",d)):"denied"===c?(l.pull.removeListener("denied",C),l.push.removeListener("denied",i)):"active"===c?(l.pull.removeListener("active",o),l.push.removeListener("active",X)):"paused"===c&&(l.pull.removeListener("paused",r),l.push.removeListener("paused",F))})),this.pull.on("removeListener",Z("pull")),this.push.on("removeListener",Z("push"));var V=Promise.all([this.push,this.pull]).then((function(c){var n={push:c[0],pull:c[1]};return l.emit("complete",n),e&&e(null,n),l.removeAllListeners(),n}),(function(c){if(l.cancel(),e?e(c):l.emit("error",c),l.removeAllListeners(),e)throw c}));this.then=function(c,n){return V.then(c,n)},this.catch=function(c){return V.catch(c)}}C()(te,d.EventEmitter),te.prototype.cancel=function(){this.cancelled=!0,this.state="cancelled",this.emit("cancel")},te.prototype.ready=function(c,n){var t=this;function e(){t.cancel()}t._readyCalled||(t._readyCalled=!0,c.once("destroyed",e),n.once("destroyed",e),t.once("complete",(function(){c.removeListener("destroyed",e),n.removeListener("destroyed",e)})))},C()(Ie,d.EventEmitter),Ie.prototype.cancel=function(){this.canceled||(this.canceled=!0,this.push.cancel(),this.pull.cancel())},tn.plugin((function(c){c.adapter("idb",Ft,!0)})).plugin((function(c){c.adapter("http",Gt,!1),c.adapter("https",Gt,!1)})).plugin(jt).plugin((function(c){c.replicate=le,c.sync=ge,Object.defineProperty(c.prototype,"replicate",{get:function(){var c=this;return void 0===this.replicateMethods&&(this.replicateMethods={from:function(n,t,e){return c.constructor.replicate(n,c,t,e)},to:function(n,t,e){return c.constructor.replicate(c,n,t,e)}}),this.replicateMethods}}),c.prototype.sync=function(c,n,t){return this.constructor.sync(this,c,n,t)}})),n.a=tn}).call(this,t(19),t(29))},function(c,n,t){"use strict";c.exports=function(c){return function(){var n=arguments.length;if(n){for(var t=[],e=-1;++e<n;)t[e]=arguments[e];return c.call(this,t)}return c.call(this,[])}}},function(c,n,t){"use strict";function e(c){return null==c}c.exports.isNothing=e,c.exports.isObject=function(c){return"object"==typeof c&&null!==c},c.exports.toArray=function(c){return Array.isArray(c)?c:e(c)?[]:[c]},c.exports.repeat=function(c,n){var t,e="";for(t=0;t<n;t+=1)e+=c;return e},c.exports.isNegativeZero=function(c){return 0===c&&Number.NEGATIVE_INFINITY===1/c},c.exports.extend=function(c,n){var t,e,l,g;if(n)for(t=0,e=(g=Object.keys(n)).length;t<e;t+=1)c[l=g[t]]=n[l];return c}},function(c,n,t){"use strict";var e=t(12),l=t(15),g=t(1);function I(c,n,t){var e=[];return c.include.forEach((function(c){t=I(c,n,t)})),c[n].forEach((function(c){t.forEach((function(n,t){n.tag===c.tag&&n.kind===c.kind&&e.push(t)})),t.push(c)})),t.filter((function(c,n){return-1===e.indexOf(n)}))}function a(c){this.include=c.include||[],this.implicit=c.implicit||[],this.explicit=c.explicit||[],this.implicit.forEach((function(c){if(c.loadKind&&"scalar"!==c.loadKind)throw new l("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.")})),this.compiledImplicit=I(this,"implicit",[]),this.compiledExplicit=I(this,"explicit",[]),this.compiledTypeMap=function(){var c,n,t={scalar:{},sequence:{},mapping:{},fallback:{}};function e(c){t[c.kind][c.tag]=t.fallback[c.tag]=c}for(c=0,n=arguments.length;c<n;c+=1)arguments[c].forEach(e);return t}(this.compiledImplicit,this.compiledExplicit)}a.DEFAULT=null,a.create=function(){var c,n;switch(arguments.length){case 1:c=a.DEFAULT,n=arguments[0];break;case 2:c=arguments[0],n=arguments[1];break;default:throw new l("Wrong number of arguments for Schema.create function")}if(c=e.toArray(c),n=e.toArray(n),!c.every((function(c){return c instanceof a})))throw new l("Specified list of super schemas (or a single Schema object) contains a non-Schema object.");if(!n.every((function(c){return c instanceof g})))throw new l("Specified list of YAML types (or a single Type object) contains a non-Type object.");return new a({include:c,explicit:n})},c.exports=a},function(c,n,t){"use strict";function e(c,n,t){var e=t?" !== ":" === ",l=t?" || ":" && ",g=t?"!":"",I=t?"":"!";switch(c){case"null":return n+e+"null";case"array":return g+"Array.isArray("+n+")";case"object":return"("+g+n+l+"typeof "+n+e+'"object"'+l+I+"Array.isArray("+n+"))";case"integer":return"(typeof "+n+e+'"number"'+l+I+"("+n+" % 1)"+l+n+e+n+")";default:return"typeof "+n+e+'"'+c+'"'}}c.exports={copy:function(c,n){for(var t in n=n||{},c)n[t]=c[t];return n},checkDataType:e,checkDataTypes:function(c,n){switch(c.length){case 1:return e(c[0],n,!0);default:var t="",l=g(c);for(var I in l.array&&l.object&&(t=l.null?"(":"(!"+n+" || ",t+="typeof "+n+' !== "object")',delete l.null,delete l.array,delete l.object),l.number&&delete l.integer,l)t+=(t?" && ":"")+e(I,n,!0);return t}},coerceToTypes:function(c,n){if(Array.isArray(n)){for(var t=[],e=0;e<n.length;e++){var g=n[e];(l[g]||"array"===c&&"array"===g)&&(t[t.length]=g)}if(t.length)return t}else{if(l[n])return[n];if("array"===c&&"array"===n)return["array"]}},toHash:g,getProperty:d,escapeQuotes:i,equal:t(25),ucs2length:t(102),varOccurences:function(c,n){n+="[^0-9]";var t=c.match(new RegExp(n,"g"));return t?t.length:0},varReplace:function(c,n,t){return n+="([^0-9])",t=t.replace(/\$/g,"$$$$"),c.replace(new RegExp(n,"g"),t+"$1")},cleanUpCode:function(c){return c.replace(C,"").replace(F,"").replace(r,"if (!($1))")},finalCleanUpCode:function(c,n){var t=c.match(X);t&&2==t.length&&(c=n?c.replace(s,"").replace(Z,"return data;"):c.replace(o,"").replace("return errors === 0;","validate.errors = null; return true;"));return(t=c.match(B))&&3===t.length?c.replace(V,""):c},schemaHasRules:function(c,n){if("boolean"==typeof c)return!c;for(var t in c)if(n[t])return!0},schemaHasRulesExcept:function(c,n,t){if("boolean"==typeof c)return!c&&"not"!=t;for(var e in c)if(e!=t&&n[e])return!0},schemaUnknownRules:function(c,n){if("boolean"==typeof c)return;for(var t in c)if(!n[t])return t},toQuotedString:A,getPathExpr:function(c,n,t,e){return h(c,t?"'/' + "+n+(e?"":".replace(/~/g, '~0').replace(/\\//g, '~1')"):e?"'[' + "+n+" + ']'":"'[\\'' + "+n+" + '\\']'")},getPath:function(c,n,t){var e=A(t?"/"+U(n):d(n));return h(c,e)},getData:function(c,n,t){var e,l,g,I;if(""===c)return"rootData";if("/"==c[0]){if(!G.test(c))throw new Error("Invalid JSON-pointer: "+c);l=c,g="rootData"}else{if(!(I=c.match(b)))throw new Error("Invalid JSON-pointer: "+c);if(e=+I[1],"#"==(l=I[2])){if(e>=n)throw new Error("Cannot access property/index "+e+" levels up, current level is "+n);return t[n-e]}if(e>n)throw new Error("Cannot access data "+e+" levels up, current level is "+n);if(g="data"+(n-e||""),!l)return g}for(var a=g,i=l.split("/"),C=0;C<i.length;C++){var F=i[C];F&&(g+=d(Q(F)),a+=" && "+g)}return a},unescapeFragment:function(c){return Q(decodeURIComponent(c))},unescapeJsonPointer:Q,escapeFragment:function(c){return encodeURIComponent(U(c))},escapeJsonPointer:U};var l=g(["string","number","integer","boolean","null"]);function g(c){for(var n={},t=0;t<c.length;t++)n[c[t]]=!0;return n}var I=/^[a-z$_][a-z$_0-9]*$/i,a=/'|\\/g;function d(c){return"number"==typeof c?"["+c+"]":I.test(c)?"."+c:"['"+i(c)+"']"}function i(c){return c.replace(a,"\\$&").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\f/g,"\\f").replace(/\t/g,"\\t")}var C=/else\s*{\s*}/g,F=/if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g,r=/if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;var X=/[^v.]errors/g,o=/var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g,s=/var errors = 0;|var vErrors = null;/g,Z=/if \(errors === 0\) return data;\s*else throw new ValidationError\(vErrors\);/,B=/[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g,V=/if \(rootData === undefined\) rootData = data;/;function A(c){return"'"+i(c)+"'"}var G=/^\/(?:[^~]|~0|~1)*$/,b=/^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;function h(c,n){return'""'==c?n:(c+" + "+n).replace(/' \+ '/g,"")}function U(c){return c.replace(/~/g,"~0").replace(/\//g,"~1")}function Q(c){return c.replace(/~1/g,"/").replace(/~0/g,"~")}},function(c,n,t){"use strict";function e(c,n){Error.call(this),this.name="YAMLException",this.reason=c,this.mark=n,this.message=(this.reason||"(unknown reason)")+(this.mark?" "+this.mark.toString():""),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,e.prototype.toString=function(c){var n=this.name+": ";return n+=this.reason||"(unknown reason)",!c&&this.mark&&(n+=" "+this.mark.toString()),n},c.exports=e},function(c,n,t){"use strict";var e=t(13);c.exports=new e({include:[t(37)],implicit:[t(83),t(84)],explicit:[t(85),t(90),t(91),t(92)]})},function(c,n,t){"use strict";t.d(n,"a",(function(){return Y}));var e=/\r?\n/g,l=/^\s*$/,g=/^(\r?\n)*[\t\s]/;function I(c,n){for(var t=0;c.charAt(t)===n;)t++;return t}Object.freeze({});Object.prototype.toString;function a(c,n){for(var t=Object.create(null),e=c.split(","),l=0;l<e.length;l++)t[e[l]]=!0;return n?function(c){return t[c.toLowerCase()]}:function(c){return t[c]}}a("slot,component",!0),a("key,ref,slot,slot-scope,is");Object.prototype.hasOwnProperty;var d,i,C=/-(\w)/g;d=function(c){return c.replace(C,(function(c,n){return n?n.toUpperCase():""}))},i=Object.create(null);Function.prototype.bind;var F=function(c,n,t){return!1};a("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),a("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source");var r=a("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),X=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,o="[a-zA-Z_][\\w\\-\\.]*",s="((?:"+o+"\\:)?"+o+")",Z=new RegExp("^<"+s),B=/^\s*(\/?)>/,V=new RegExp("^<\\/"+s+"[^>]*>"),A=/^<!DOCTYPE [^>]+>/i,G=/^<!\--/,b=/^<!\[/,h=!1;"x".replace(/x(.)?/g,(function(c,n){h=""===n}));var U=a("script,style,textarea",!0),Q={},u={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t"},W=/&(?:lt|gt|quot|amp);/g,m=/&(?:lt|gt|quot|amp|#10|#9);/g,R=a("pre,textarea",!0),J=function(c,n){return c&&R(c)&&"\n"===n[0]};function p(c,n){var t=n?m:W;return c.replace(t,(function(c){return u[c]}))}var x=/\r?\n/g,N=/./g;a("script,style,template",!0);function Y(c,n){void 0===n&&(n={});var t={script:[],style:[],config:[],window:[],docs:[],attachment:[],link:[],others:[]},a=0,d=null;return function(c,n){for(var t,e,l=[],g=n.expectHTML,I=n.isUnaryTag||F,a=n.canBeLeftOpenTag||F,d=0;c;){if(t=c,e&&U(e)){var i=0,C=e.toLowerCase(),o=Q[C]||(Q[C]=new RegExp("([\\s\\S]*?)(</"+C+"[^>]*>)","i")),s=c.replace(o,(function(c,t,e){return i=e.length,U(C)||"noscript"===C||(t=t.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),J(C,t)&&(t=t.slice(1)),n.chars&&n.chars(t),""}));d+=c.length-s.length,c=s,v(C,d-i,d)}else{var u=c.indexOf("<");if(0===u){if(G.test(c)){var W=c.indexOf("--\x3e");if(W>=0){n.shouldKeepComment&&n.comment(c.substring(4,W)),H(W+3);continue}}if(b.test(c)){var m=c.indexOf("]>");if(m>=0){H(m+2);continue}}var R=c.match(A);if(R){H(R[0].length);continue}var x=c.match(V);if(x){var N=d;H(x[0].length),v(x[1],N,d);continue}var Y=E();if(Y){T(Y),J(e,c)&&H(1);continue}}var y=void 0,S=void 0,k=void 0;if(u>=0){for(S=c.slice(u);!(V.test(S)||Z.test(S)||G.test(S)||b.test(S)||(k=S.indexOf("<",1))<0);)u+=k,S=c.slice(u);y=c.substring(0,u),H(u)}u<0&&(y=c,c=""),n.chars&&y&&n.chars(y)}if(c===t){n.chars&&n.chars(c),!l.length&&n.warn&&n.warn('Mal-formatted tag at end of template: "'+c+'"');break}}function H(n){d+=n,c=c.substring(n)}function E(){var n=c.match(Z);if(n){var t,e,l={tagName:n[1],attrs:[],start:d};for(H(n[0].length);!(t=c.match(B))&&(e=c.match(X));)H(e[0].length),l.attrs.push(e);if(t)return l.unarySlash=t[1],H(t[0].length),l.end=d,l}}function T(c){var t=c.tagName,d=c.unarySlash;g&&("p"===e&&r(t)&&v(e),a(t)&&e===t&&v(t));for(var i=I(t)||!!d,C=c.attrs.length,F=new Array(C),X=0;X<C;X++){var o=c.attrs[X];h&&-1===o[0].indexOf('""')&&(""===o[3]&&delete o[3],""===o[4]&&delete o[4],""===o[5]&&delete o[5]);var s=o[3]||o[4]||o[5]||"",Z="a"===t&&"href"===o[1]?n.shouldDecodeNewlinesForHref:n.shouldDecodeNewlines;F[X]={name:o[1],value:p(s,Z)}}i||(l.push({tag:t,lowerCasedTag:t.toLowerCase(),attrs:F}),e=t),n.start&&n.start(t,F,i,c.start,c.end)}function v(c,t,g){var I,a;if(null==t&&(t=d),null==g&&(g=d),c&&(a=c.toLowerCase()),c)for(I=l.length-1;I>=0&&l[I].lowerCasedTag!==a;I--);else I=0;if(I>=0){for(var i=l.length-1;i>=I;i--)(i>I||!c)&&n.warn&&n.warn("tag <"+l[i].tag+"> has no matching end tag."),n.end&&n.end(l[i].tag,t,g);l.length=I,e=I&&l[I-1].tag}else"br"===a?n.start&&n.start(c,[],!0,t,g):"p"===a&&(n.start&&n.start(c,[],!1,t,g),n.end&&n.end(c,t,g))}v()}(c,{start:function(c,n,e,l,g){0===a&&(d={type:c,content:"",start:g,attrs:n.reduce((function(c,n){var t=n.name,e=n.value;return c[t]=e||!0,c}),{})},t[c]?(!function(c,n){for(var t=0;t<n.length;t++){var e=n[t];"lang"===e.name&&(c.lang=e.value),"scoped"===e.name&&(c.scoped=!0),"module"===e.name&&(c.module=e.value||!0),"src"===e.name&&(c.src=e.value)}}(d,n),t[c].push(d)):t.others.push(d)),e||a++},end:function(t,i,C){if(1===a&&d){d.end=i;var F=function(c){if(!g.test(c))return c;for(var n,t,a,d=c.split(e),i=1/0,C=0;C<d.length;C++){var F=d[C];if(!l.test(F))if(n)(t=I(F,n))<i&&(i=t);else{if(" "!==(a=F.charAt(0))&&"\t"!==a)return c;(t=I(F,n=a))<i&&(i=t)}}return d.map((function(c){return c.slice(i)})).join("\n")}(c.slice(d.start,d.end));"template"!==d.type&&n.pad&&(F=function(n,t){if("space"===t)return c.slice(0,n.start).replace(N," ");var e=c.slice(0,n.start).split(x).length,l="script"!==n.type||n.lang?"\n":"//\n";return Array(e).join(l)}(d,n.pad)+F),d.content=F,d=null}a--}}),t}},function(c,n,t){var e,l=function(){var c=String.fromCharCode,n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",e={};function l(c,n){if(!e[c]){e[c]={};for(var t=0;t<c.length;t++)e[c][c.charAt(t)]=t}return e[c][n]}var g={compressToBase64:function(c){if(null==c)return"";var t=g._compress(c,6,(function(c){return n.charAt(c)}));switch(t.length%4){default:case 0:return t;case 1:return t+"===";case 2:return t+"==";case 3:return t+"="}},decompressFromBase64:function(c){return null==c?"":""==c?null:g._decompress(c.length,32,(function(t){return l(n,c.charAt(t))}))},compressToUTF16:function(n){return null==n?"":g._compress(n,15,(function(n){return c(n+32)}))+" "},decompressFromUTF16:function(c){return null==c?"":""==c?null:g._decompress(c.length,16384,(function(n){return c.charCodeAt(n)-32}))},compressToUint8Array:function(c){for(var n=g.compress(c),t=new Uint8Array(2*n.length),e=0,l=n.length;e<l;e++){var I=n.charCodeAt(e);t[2*e]=I>>>8,t[2*e+1]=I%256}return t},decompressFromUint8Array:function(n){if(null==n)return g.decompress(n);for(var t=new Array(n.length/2),e=0,l=t.length;e<l;e++)t[e]=256*n[2*e]+n[2*e+1];var I=[];return t.forEach((function(n){I.push(c(n))})),g.decompress(I.join(""))},compressToEncodedURIComponent:function(c){return null==c?"":g._compress(c,6,(function(c){return t.charAt(c)}))},decompressFromEncodedURIComponent:function(c){return null==c?"":""==c?null:(c=c.replace(/ /g,"+"),g._decompress(c.length,32,(function(n){return l(t,c.charAt(n))})))},compress:function(n){return g._compress(n,16,(function(n){return c(n)}))},_compress:function(c,n,t){if(null==c)return"";var e,l,g,I={},a={},d="",i="",C="",F=2,r=3,X=2,o=[],s=0,Z=0;for(g=0;g<c.length;g+=1)if(d=c.charAt(g),Object.prototype.hasOwnProperty.call(I,d)||(I[d]=r++,a[d]=!0),i=C+d,Object.prototype.hasOwnProperty.call(I,i))C=i;else{if(Object.prototype.hasOwnProperty.call(a,C)){if(C.charCodeAt(0)<256){for(e=0;e<X;e++)s<<=1,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++;for(l=C.charCodeAt(0),e=0;e<8;e++)s=s<<1|1&l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l>>=1}else{for(l=1,e=0;e<X;e++)s=s<<1|l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l=0;for(l=C.charCodeAt(0),e=0;e<16;e++)s=s<<1|1&l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l>>=1}0==--F&&(F=Math.pow(2,X),X++),delete a[C]}else for(l=I[C],e=0;e<X;e++)s=s<<1|1&l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l>>=1;0==--F&&(F=Math.pow(2,X),X++),I[i]=r++,C=String(d)}if(""!==C){if(Object.prototype.hasOwnProperty.call(a,C)){if(C.charCodeAt(0)<256){for(e=0;e<X;e++)s<<=1,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++;for(l=C.charCodeAt(0),e=0;e<8;e++)s=s<<1|1&l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l>>=1}else{for(l=1,e=0;e<X;e++)s=s<<1|l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l=0;for(l=C.charCodeAt(0),e=0;e<16;e++)s=s<<1|1&l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l>>=1}0==--F&&(F=Math.pow(2,X),X++),delete a[C]}else for(l=I[C],e=0;e<X;e++)s=s<<1|1&l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l>>=1;0==--F&&(F=Math.pow(2,X),X++)}for(l=2,e=0;e<X;e++)s=s<<1|1&l,Z==n-1?(Z=0,o.push(t(s)),s=0):Z++,l>>=1;for(;;){if(s<<=1,Z==n-1){o.push(t(s));break}Z++}return o.join("")},decompress:function(c){return null==c?"":""==c?null:g._decompress(c.length,32768,(function(n){return c.charCodeAt(n)}))},_decompress:function(n,t,e){var l,g,I,a,d,i,C,F=[],r=4,X=4,o=3,s="",Z=[],B={val:e(0),position:t,index:1};for(l=0;l<3;l+=1)F[l]=l;for(I=0,d=Math.pow(2,2),i=1;i!=d;)a=B.val&B.position,B.position>>=1,0==B.position&&(B.position=t,B.val=e(B.index++)),I|=(a>0?1:0)*i,i<<=1;switch(I){case 0:for(I=0,d=Math.pow(2,8),i=1;i!=d;)a=B.val&B.position,B.position>>=1,0==B.position&&(B.position=t,B.val=e(B.index++)),I|=(a>0?1:0)*i,i<<=1;C=c(I);break;case 1:for(I=0,d=Math.pow(2,16),i=1;i!=d;)a=B.val&B.position,B.position>>=1,0==B.position&&(B.position=t,B.val=e(B.index++)),I|=(a>0?1:0)*i,i<<=1;C=c(I);break;case 2:return""}for(F[3]=C,g=C,Z.push(C);;){if(B.index>n)return"";for(I=0,d=Math.pow(2,o),i=1;i!=d;)a=B.val&B.position,B.position>>=1,0==B.position&&(B.position=t,B.val=e(B.index++)),I|=(a>0?1:0)*i,i<<=1;switch(C=I){case 0:for(I=0,d=Math.pow(2,8),i=1;i!=d;)a=B.val&B.position,B.position>>=1,0==B.position&&(B.position=t,B.val=e(B.index++)),I|=(a>0?1:0)*i,i<<=1;F[X++]=c(I),C=X-1,r--;break;case 1:for(I=0,d=Math.pow(2,16),i=1;i!=d;)a=B.val&B.position,B.position>>=1,0==B.position&&(B.position=t,B.val=e(B.index++)),I|=(a>0?1:0)*i,i<<=1;F[X++]=c(I),C=X-1,r--;break;case 2:return Z.join("")}if(0==r&&(r=Math.pow(2,o),o++),F[C])s=F[C];else{if(C!==X)return null;s=g+g.charAt(0)}Z.push(s),F[X++]=g+s.charAt(0),g=s,0==--r&&(r=Math.pow(2,o),o++)}}};return g}();void 0===(e=function(){return l}.call(n,t,n,c))||(c.exports=e)},function(c,n){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch(c){"object"==typeof window&&(t=window)}c.exports=t},function(c,n,t){"use strict";var e=t(13);c.exports=e.DEFAULT=new e({include:[t(16)],explicit:[t(93),t(94),t(95)]})},function(c,n,t){c.exports=function(){"use strict";var c=Object.hasOwnProperty,n=Object.setPrototypeOf,t=Object.isFrozen,e=Object.keys,l=Object.freeze,g=Object.seal,I="undefined"!=typeof Reflect&&Reflect,a=I.apply,d=I.construct;a||(a=function(c,n,t){return c.apply(n,t)}),l||(l=function(c){return c}),g||(g=function(c){return c}),d||(d=function(c,n){return new(Function.prototype.bind.apply(c,[null].concat(function(c){if(Array.isArray(c)){for(var n=0,t=Array(c.length);n<c.length;n++)t[n]=c[n];return t}return Array.from(c)}(n))))});var i=U(Array.prototype.forEach),C=U(Array.prototype.indexOf),F=U(Array.prototype.join),r=U(Array.prototype.pop),X=U(Array.prototype.push),o=U(Array.prototype.slice),s=U(String.prototype.toLowerCase),Z=U(String.prototype.match),B=U(String.prototype.replace),V=U(String.prototype.indexOf),A=U(String.prototype.trim),G=U(RegExp.prototype.test),b=Q(RegExp),h=Q(TypeError);function U(c){return function(n){for(var t=arguments.length,e=Array(t>1?t-1:0),l=1;l<t;l++)e[l-1]=arguments[l];return a(c,n,e)}}function Q(c){return function(){for(var n=arguments.length,t=Array(n),e=0;e<n;e++)t[e]=arguments[e];return d(c,t)}}function u(c,e){n&&n(c,null);for(var l=e.length;l--;){var g=e[l];if("string"==typeof g){var I=s(g);I!==g&&(t(e)||(e[l]=I),g=I)}c[g]=!0}return c}function W(n){var t={},e=void 0;for(e in n)a(c,n,[e])&&(t[e]=n[e]);return t}var m=l(["a","abbr","acronym","address","area","article","aside","audio","b","bdi","bdo","big","blink","blockquote","body","br","button","canvas","caption","center","cite","code","col","colgroup","content","data","datalist","dd","decorator","del","details","dfn","dir","div","dl","dt","element","em","fieldset","figcaption","figure","font","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","img","input","ins","kbd","label","legend","li","main","map","mark","marquee","menu","menuitem","meter","nav","nobr","ol","optgroup","option","output","p","picture","pre","progress","q","rp","rt","ruby","s","samp","section","select","shadow","small","source","spacer","span","strike","strong","style","sub","summary","sup","table","tbody","td","template","textarea","tfoot","th","thead","time","tr","track","tt","u","ul","var","video","wbr"]),R=l(["svg","a","altglyph","altglyphdef","altglyphitem","animatecolor","animatemotion","animatetransform","audio","canvas","circle","clippath","defs","desc","ellipse","filter","font","g","glyph","glyphref","hkern","image","line","lineargradient","marker","mask","metadata","mpath","path","pattern","polygon","polyline","radialgradient","rect","stop","style","switch","symbol","text","textpath","title","tref","tspan","video","view","vkern"]),J=l(["feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence"]),p=l(["math","menclose","merror","mfenced","mfrac","mglyph","mi","mlabeledtr","mmultiscripts","mn","mo","mover","mpadded","mphantom","mroot","mrow","ms","mspace","msqrt","mstyle","msub","msup","msubsup","mtable","mtd","mtext","mtr","munder","munderover"]),x=l(["#text"]),N=l(["accept","action","align","alt","autocomplete","background","bgcolor","border","cellpadding","cellspacing","checked","cite","class","clear","color","cols","colspan","controls","coords","crossorigin","datetime","default","dir","disabled","download","enctype","face","for","headers","height","hidden","high","href","hreflang","id","integrity","ismap","label","lang","list","loop","low","max","maxlength","media","method","min","minlength","multiple","name","noshade","novalidate","nowrap","open","optimum","pattern","placeholder","poster","preload","pubdate","radiogroup","readonly","rel","required","rev","reversed","role","rows","rowspan","spellcheck","scope","selected","shape","size","sizes","span","srclang","start","src","srcset","step","style","summary","tabindex","title","type","usemap","valign","value","width","xmlns"]),Y=l(["accent-height","accumulate","additive","alignment-baseline","ascent","attributename","attributetype","azimuth","basefrequency","baseline-shift","begin","bias","by","class","clip","clip-path","clip-rule","color","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cx","cy","d","dx","dy","diffuseconstant","direction","display","divisor","dur","edgemode","elevation","end","fill","fill-opacity","fill-rule","filter","filterunits","flood-color","flood-opacity","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","fx","fy","g1","g2","glyph-name","glyphref","gradientunits","gradienttransform","height","href","id","image-rendering","in","in2","k","k1","k2","k3","k4","kerning","keypoints","keysplines","keytimes","lang","lengthadjust","letter-spacing","kernelmatrix","kernelunitlength","lighting-color","local","marker-end","marker-mid","marker-start","markerheight","markerunits","markerwidth","maskcontentunits","maskunits","max","mask","media","method","mode","min","name","numoctaves","offset","operator","opacity","order","orient","orientation","origin","overflow","paint-order","path","pathlength","patterncontentunits","patterntransform","patternunits","points","preservealpha","preserveaspectratio","primitiveunits","r","rx","ry","radius","refx","refy","repeatcount","repeatdur","restart","result","rotate","scale","seed","shape-rendering","specularconstant","specularexponent","spreadmethod","stddeviation","stitchtiles","stop-color","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke","stroke-width","style","surfacescale","tabindex","targetx","targety","transform","text-anchor","text-decoration","text-rendering","textlength","type","u1","u2","unicode","values","viewbox","visibility","version","vert-adv-y","vert-origin-x","vert-origin-y","width","word-spacing","wrap","writing-mode","xchannelselector","ychannelselector","x","x1","x2","xmlns","y","y1","y2","z","zoomandpan"]),y=l(["accent","accentunder","align","bevelled","close","columnsalign","columnlines","columnspan","denomalign","depth","dir","display","displaystyle","encoding","fence","frame","height","href","id","largeop","length","linethickness","lspace","lquote","mathbackground","mathcolor","mathsize","mathvariant","maxsize","minsize","movablelimits","notation","numalign","open","rowalign","rowlines","rowspacing","rowspan","rspace","rquote","scriptlevel","scriptminsize","scriptsizemultiplier","selection","separator","separators","stretchy","subscriptshift","supscriptshift","symmetric","voffset","width","xmlns"]),S=l(["xlink:href","xml:id","xlink:title","xml:space","xmlns:xlink"]),k=g(/\{\{[\s\S]*|[\s\S]*\}\}/gm),H=g(/<%[\s\S]*|[\s\S]*%>/gm),E=g(/^data-[\-\w.\u00B7-\uFFFF]/),T=g(/^aria-[\-\w]+$/),v=g(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i),z=g(/^(?:\w+script|data):/i),D=g(/[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205f\u3000]/g),f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(c){return typeof c}:function(c){return c&&"function"==typeof Symbol&&c.constructor===Symbol&&c!==Symbol.prototype?"symbol":typeof c};function w(c){if(Array.isArray(c)){for(var n=0,t=Array(c.length);n<c.length;n++)t[n]=c[n];return t}return Array.from(c)}var j=function(){return"undefined"==typeof window?null:window},K=function(c,n){if("object"!==(void 0===c?"undefined":f(c))||"function"!=typeof c.createPolicy)return null;var t=null;n.currentScript&&n.currentScript.hasAttribute("data-tt-policy-suffix")&&(t=n.currentScript.getAttribute("data-tt-policy-suffix"));var e="dompurify"+(t?"#"+t:"");try{return c.createPolicy(e,{createHTML:function(c){return c}})}catch(c){return console.warn("TrustedTypes policy "+e+" could not be created."),null}};return function c(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:j(),t=function(n){return c(n)};if(t.version="2.0.8",t.removed=[],!n||!n.document||9!==n.document.nodeType)return t.isSupported=!1,t;var g=n.document,I=!1,a=!1,d=n.document,U=n.DocumentFragment,Q=n.HTMLTemplateElement,M=n.Node,O=n.NodeFilter,L=n.NamedNodeMap,P=void 0===L?n.NamedNodeMap||n.MozNamedAttrMap:L,_=n.Text,q=n.Comment,$=n.DOMParser,cc=n.trustedTypes;if("function"==typeof Q){var nc=d.createElement("template");nc.content&&nc.content.ownerDocument&&(d=nc.content.ownerDocument)}var tc=K(cc,g),ec=tc?tc.createHTML(""):"",lc=d,gc=lc.implementation,Ic=lc.createNodeIterator,ac=lc.getElementsByTagName,dc=lc.createDocumentFragment,ic=g.importNode,Cc={};t.isSupported=gc&&void 0!==gc.createHTMLDocument&&9!==d.documentMode;var Fc=k,rc=H,Xc=E,oc=T,sc=z,Zc=D,Bc=v,Vc=null,Ac=u({},[].concat(w(m),w(R),w(J),w(p),w(x))),Gc=null,bc=u({},[].concat(w(N),w(Y),w(y),w(S))),hc=null,Uc=null,Qc=!0,uc=!0,Wc=!1,mc=!1,Rc=!1,Jc=!1,pc=!1,xc=!1,Nc=!1,Yc=!1,yc=!1,Sc=!1,kc=!0,Hc=!0,Ec=!1,Tc={},vc=u({},["annotation-xml","audio","colgroup","desc","foreignobject","head","iframe","math","mi","mn","mo","ms","mtext","noembed","noframes","plaintext","script","style","svg","template","thead","title","video","xmp"]),zc=u({},["audio","video","img","source","image"]),Dc=null,fc=u({},["alt","class","for","id","label","name","pattern","placeholder","summary","title","value","style","xmlns"]),wc=null,jc=d.createElement("form"),Kc=function(c){wc&&wc===c||(c&&"object"===(void 0===c?"undefined":f(c))||(c={}),Vc="ALLOWED_TAGS"in c?u({},c.ALLOWED_TAGS):Ac,Gc="ALLOWED_ATTR"in c?u({},c.ALLOWED_ATTR):bc,Dc="ADD_URI_SAFE_ATTR"in c?u(W(fc),c.ADD_URI_SAFE_ATTR):fc,hc="FORBID_TAGS"in c?u({},c.FORBID_TAGS):{},Uc="FORBID_ATTR"in c?u({},c.FORBID_ATTR):{},Tc="USE_PROFILES"in c&&c.USE_PROFILES,Qc=!1!==c.ALLOW_ARIA_ATTR,uc=!1!==c.ALLOW_DATA_ATTR,Wc=c.ALLOW_UNKNOWN_PROTOCOLS||!1,mc=c.SAFE_FOR_JQUERY||!1,Rc=c.SAFE_FOR_TEMPLATES||!1,Jc=c.WHOLE_DOCUMENT||!1,Nc=c.RETURN_DOM||!1,Yc=c.RETURN_DOM_FRAGMENT||!1,yc=c.RETURN_DOM_IMPORT||!1,Sc=c.RETURN_TRUSTED_TYPE||!1,xc=c.FORCE_BODY||!1,kc=!1!==c.SANITIZE_DOM,Hc=!1!==c.KEEP_CONTENT,Ec=c.IN_PLACE||!1,Bc=c.ALLOWED_URI_REGEXP||Bc,Rc&&(uc=!1),Yc&&(Nc=!0),Tc&&(Vc=u({},[].concat(w(x))),Gc=[],!0===Tc.html&&(u(Vc,m),u(Gc,N)),!0===Tc.svg&&(u(Vc,R),u(Gc,Y),u(Gc,S)),!0===Tc.svgFilters&&(u(Vc,J),u(Gc,Y),u(Gc,S)),!0===Tc.mathMl&&(u(Vc,p),u(Gc,y),u(Gc,S))),c.ADD_TAGS&&(Vc===Ac&&(Vc=W(Vc)),u(Vc,c.ADD_TAGS)),c.ADD_ATTR&&(Gc===bc&&(Gc=W(Gc)),u(Gc,c.ADD_ATTR)),c.ADD_URI_SAFE_ATTR&&u(Dc,c.ADD_URI_SAFE_ATTR),Hc&&(Vc["#text"]=!0),Jc&&u(Vc,["html","head","body"]),Vc.table&&(u(Vc,["tbody"]),delete hc.tbody),l&&l(c),wc=c)},Mc=function(c){X(t.removed,{element:c});try{c.parentNode.removeChild(c)}catch(n){c.outerHTML=ec}},Oc=function(c,n){try{X(t.removed,{attribute:n.getAttributeNode(c),from:n})}catch(c){X(t.removed,{attribute:null,from:n})}n.removeAttribute(c)},Lc=function(c){var n=void 0,t=void 0;if(xc)c="<remove></remove>"+c;else{var e=Z(c,/^[\s]+/);t=e&&e[0]}var l=tc?tc.createHTML(c):c;if(I)try{n=(new $).parseFromString(l,"text/html")}catch(c){}if(a&&u(hc,["title"]),!n||!n.documentElement){var g=(n=gc.createHTMLDocument("")).body;g.parentNode.removeChild(g.parentNode.firstElementChild),g.outerHTML=l}return c&&t&&n.body.insertBefore(d.createTextNode(t),n.body.childNodes[0]||null),ac.call(n,Jc?"html":"body")[0]};t.isSupported&&(function(){try{Lc('<svg><p><textarea><img src="</textarea><img src=x abc=1//">').querySelector("svg img")&&(I=!0)}catch(c){}}(),function(){try{var c=Lc("<x/><title>&lt;/title&gt;&lt;img&gt;");G(/<\/title/,c.querySelector("title").innerHTML)&&(a=!0)}catch(c){}}());var Pc=function(c){return Ic.call(c.ownerDocument||c,c,O.SHOW_ELEMENT|O.SHOW_COMMENT|O.SHOW_TEXT,(function(){return O.FILTER_ACCEPT}),!1)},_c=function(c){return!(c instanceof _||c instanceof q||"string"==typeof c.nodeName&&"string"==typeof c.textContent&&"function"==typeof c.removeChild&&c.attributes instanceof P&&"function"==typeof c.removeAttribute&&"function"==typeof c.setAttribute&&"string"==typeof c.namespaceURI)},qc=function(c){return"object"===(void 0===M?"undefined":f(M))?c instanceof M:c&&"object"===(void 0===c?"undefined":f(c))&&"number"==typeof c.nodeType&&"string"==typeof c.nodeName},$c=function(c,n,e){Cc[c]&&i(Cc[c],(function(c){c.call(t,n,e,wc)}))},cn=function(c){var n=void 0;if($c("beforeSanitizeElements",c,null),_c(c))return Mc(c),!0;var e=s(c.nodeName);if($c("uponSanitizeElement",c,{tagName:e,allowedTags:Vc}),("svg"===e||"math"===e)&&0!==c.querySelectorAll("p, br").length)return Mc(c),!0;if(!Vc[e]||hc[e]){if(Hc&&!vc[e]&&"function"==typeof c.insertAdjacentHTML)try{var l=c.innerHTML;c.insertAdjacentHTML("AfterEnd",tc?tc.createHTML(l):l)}catch(c){}return Mc(c),!0}return"noscript"===e&&G(/<\/noscript/i,c.innerHTML)||"noembed"===e&&G(/<\/noembed/i,c.innerHTML)?(Mc(c),!0):(!mc||c.firstElementChild||c.content&&c.content.firstElementChild||!G(/</g,c.textContent)||(X(t.removed,{element:c.cloneNode()}),c.innerHTML?c.innerHTML=B(c.innerHTML,/</g,"&lt;"):c.innerHTML=B(c.textContent,/</g,"&lt;")),Rc&&3===c.nodeType&&(n=c.textContent,n=B(n,Fc," "),n=B(n,rc," "),c.textContent!==n&&(X(t.removed,{element:c.cloneNode()}),c.textContent=n)),$c("afterSanitizeElements",c,null),!1)},nn=function(c,n,t){if(kc&&("id"===n||"name"===n)&&(t in d||t in jc))return!1;if(uc&&G(Xc,n));else if(Qc&&G(oc,n));else{if(!Gc[n]||Uc[n])return!1;if(Dc[n]);else if(G(Bc,B(t,Zc,"")));else if("src"!==n&&"xlink:href"!==n&&"href"!==n||"script"===c||0!==V(t,"data:")||!zc[c])if(Wc&&!G(sc,B(t,Zc,"")));else if(t)return!1}return!0},tn=function(c){var n=void 0,l=void 0,g=void 0,I=void 0,a=void 0;$c("beforeSanitizeAttributes",c,null);var d=c.attributes;if(d){var i={attrName:"",attrValue:"",keepAttr:!0,allowedAttributes:Gc};for(a=d.length;a--;){var X=n=d[a],Z=X.name,V=X.namespaceURI;if(l=A(n.value),g=s(Z),i.attrName=g,i.attrValue=l,i.keepAttr=!0,i.forceKeepAttr=void 0,$c("uponSanitizeAttribute",c,i),l=i.attrValue,!i.forceKeepAttr){if("name"===g&&"IMG"===c.nodeName&&d.id)I=d.id,d=o(d,[]),Oc("id",c),Oc(Z,c),C(d,I)>a&&c.setAttribute("id",I.value);else{if("INPUT"===c.nodeName&&"type"===g&&"file"===l&&i.keepAttr&&(Gc[g]||!Uc[g]))continue;"id"===Z&&c.setAttribute(Z,""),Oc(Z,c)}if(i.keepAttr)if(mc&&G(/\/>/i,l))Oc(Z,c);else if(G(/svg|math/i,c.namespaceURI)&&G(b("</("+F(e(vc),"|")+")","i"),l))Oc(Z,c);else{Rc&&(l=B(l,Fc," "),l=B(l,rc," "));var h=c.nodeName.toLowerCase();if(nn(h,g,l))try{V?c.setAttributeNS(V,Z,l):c.setAttribute(Z,l),r(t.removed)}catch(c){}}}}$c("afterSanitizeAttributes",c,null)}},en=function c(n){var t=void 0,e=Pc(n);for($c("beforeSanitizeShadowDOM",n,null);t=e.nextNode();)$c("uponSanitizeShadowNode",t,null),cn(t)||(t.content instanceof U&&c(t.content),tn(t));$c("afterSanitizeShadowDOM",n,null)};return t.sanitize=function(c,e){var l=void 0,I=void 0,a=void 0,d=void 0,i=void 0;if(c||(c="\x3c!--\x3e"),"string"!=typeof c&&!qc(c)){if("function"!=typeof c.toString)throw h("toString is not a function");if("string"!=typeof(c=c.toString()))throw h("dirty is not a string, aborting")}if(!t.isSupported){if("object"===f(n.toStaticHTML)||"function"==typeof n.toStaticHTML){if("string"==typeof c)return n.toStaticHTML(c);if(qc(c))return n.toStaticHTML(c.outerHTML)}return c}if(pc||Kc(e),t.removed=[],"string"==typeof c&&(Ec=!1),Ec);else if(c instanceof M)1===(I=(l=Lc("\x3c!--\x3e")).ownerDocument.importNode(c,!0)).nodeType&&"BODY"===I.nodeName||"HTML"===I.nodeName?l=I:l.appendChild(I);else{if(!Nc&&!Rc&&!Jc&&Sc&&-1===c.indexOf("<"))return tc?tc.createHTML(c):c;if(!(l=Lc(c)))return Nc?null:ec}l&&xc&&Mc(l.firstChild);for(var C=Pc(Ec?c:l);a=C.nextNode();)3===a.nodeType&&a===d||cn(a)||(a.content instanceof U&&en(a.content),tn(a),d=a);if(d=null,Ec)return c;if(Nc){if(Yc)for(i=dc.call(l.ownerDocument);l.firstChild;)i.appendChild(l.firstChild);else i=l;return yc&&(i=ic.call(g,i,!0)),i}var F=Jc?l.outerHTML:l.innerHTML;return Rc&&(F=B(F,Fc," "),F=B(F,rc," ")),tc&&Sc?tc.createHTML(F):F},t.setConfig=function(c){Kc(c),pc=!0},t.clearConfig=function(){wc=null,pc=!1},t.isValidAttribute=function(c,n,t){wc||Kc({});var e=s(c),l=s(n);return nn(e,l,t)},t.addHook=function(c,n){"function"==typeof n&&(Cc[c]=Cc[c]||[],X(Cc[c],n))},t.removeHook=function(c){Cc[c]&&r(Cc[c])},t.removeHooks=function(c){Cc[c]&&(Cc[c]=[])},t.removeAllHooks=function(){Cc={}},t}()}()},function(c,n,t){"use strict";(function(n){var e=t(3),l=t(59),g={"Content-Type":"application/x-www-form-urlencoded"};function I(c,n){!e.isUndefined(c)&&e.isUndefined(c["Content-Type"])&&(c["Content-Type"]=n)}var a,d={adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==n)&&(a=t(33)),a),transformRequest:[function(c,n){return l(n,"Content-Type"),e.isFormData(c)||e.isArrayBuffer(c)||e.isBuffer(c)||e.isStream(c)||e.isFile(c)||e.isBlob(c)?c:e.isArrayBufferView(c)?c.buffer:e.isURLSearchParams(c)?(I(n,"application/x-www-form-urlencoded;charset=utf-8"),c.toString()):e.isObject(c)?(I(n,"application/json;charset=utf-8"),JSON.stringify(c)):c}],transformResponse:[function(c){if("string"==typeof c)try{c=JSON.parse(c)}catch(c){}return c}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,validateStatus:function(c){return c>=200&&c<300}};d.headers={common:{Accept:"application/json, text/plain, */*"}},e.forEach(["delete","get","head"],(function(c){d.headers[c]={}})),e.forEach(["post","put","patch"],(function(c){d.headers[c]=e.merge(g)})),c.exports=d}).call(this,t(29))},function(c,n,t){"use strict";var e=t(13);c.exports=new e({explicit:[t(76),t(77),t(78)]})},function(c,n,t){"use strict";var e=t(101),l=t(25),g=t(14),I=t(39),a=t(103);function d(c,n,t){var e=this._refs[t];if("string"==typeof e){if(!this._refs[e])return d.call(this,c,n,e);e=this._refs[e]}if((e=e||this._schemas[t])instanceof I)return o(e.schema,this._opts.inlineRefs)?e.schema:e.validate||this._compile(e);var l,g,a,C=i.call(this,n,t);return C&&(l=C.schema,n=C.root,a=C.baseId),l instanceof I?g=l.validate||c.call(this,l.schema,n,void 0,a):void 0!==l&&(g=o(l,this._opts.inlineRefs)?l:c.call(this,l,n,void 0,a)),g}function i(c,n){var t=e.parse(n),l=Z(t),g=s(this._getId(c.schema));if(0===Object.keys(c.schema).length||l!==g){var a=V(l),d=this._refs[a];if("string"==typeof d)return C.call(this,c,d,t);if(d instanceof I)d.validate||this._compile(d),c=d;else{if(!((d=this._schemas[a])instanceof I))return;if(d.validate||this._compile(d),a==V(n))return{schema:d,root:c,baseId:g};c=d}if(!c.schema)return;g=s(this._getId(c.schema))}return r.call(this,t,g,c.schema,c)}function C(c,n,t){var e=i.call(this,c,n);if(e){var l=e.schema,g=e.baseId;c=e.root;var I=this._getId(l);return I&&(g=A(g,I)),r.call(this,t,g,l,c)}}c.exports=d,d.normalizeId=V,d.fullPath=s,d.url=A,d.ids=function(c){var n=V(this._getId(c)),t={"":n},I={"":s(n,!1)},d={},i=this;return a(c,{allKeys:!0},(function(c,n,a,C,F,r,X){if(""!==n){var o=i._getId(c),s=t[C],Z=I[C]+"/"+F;if(void 0!==X&&(Z+="/"+("number"==typeof X?X:g.escapeFragment(X))),"string"==typeof o){o=s=V(s?e.resolve(s,o):o);var B=i._refs[o];if("string"==typeof B&&(B=i._refs[B]),B&&B.schema){if(!l(c,B.schema))throw new Error('id "'+o+'" resolves to more than one schema')}else if(o!=V(Z))if("#"==o[0]){if(d[o]&&!l(c,d[o]))throw new Error('id "'+o+'" resolves to more than one schema');d[o]=c}else i._refs[o]=Z}t[n]=s,I[n]=Z}})),d},d.inlineRef=o,d.schema=i;var F=g.toHash(["properties","patternProperties","enum","dependencies","definitions"]);function r(c,n,t,e){if(c.fragment=c.fragment||"","/"==c.fragment.slice(0,1)){for(var l=c.fragment.split("/"),I=1;I<l.length;I++){var a=l[I];if(a){if(void 0===(t=t[a=g.unescapeFragment(a)]))break;var d;if(!F[a]&&((d=this._getId(t))&&(n=A(n,d)),t.$ref)){var C=A(n,t.$ref),r=i.call(this,e,C);r&&(t=r.schema,e=r.root,n=r.baseId)}}}return void 0!==t&&t!==e.schema?{schema:t,root:e,baseId:n}:void 0}}var X=g.toHash(["type","format","pattern","maxLength","minLength","maxProperties","minProperties","maxItems","minItems","maximum","minimum","uniqueItems","multipleOf","required","enum"]);function o(c,n){return!1!==n&&(void 0===n||!0===n?function c(n){var t;if(Array.isArray(n)){for(var e=0;e<n.length;e++)if("object"==typeof(t=n[e])&&!c(t))return!1}else for(var l in n){if("$ref"==l)return!1;if("object"==typeof(t=n[l])&&!c(t))return!1}return!0}(c):n?function c(n){var t,e=0;if(Array.isArray(n)){for(var l=0;l<n.length;l++)if("object"==typeof(t=n[l])&&(e+=c(t)),e==1/0)return 1/0}else for(var g in n){if("$ref"==g)return 1/0;if(X[g])e++;else if("object"==typeof(t=n[g])&&(e+=c(t)+1),e==1/0)return 1/0}return e}(c)<=n:void 0)}function s(c,n){return!1!==n&&(c=V(c)),Z(e.parse(c))}function Z(c){return e.serialize(c).split("#")[0]+"#"}var B=/#\/?$/;function V(c){return c?c.replace(B,""):""}function A(c,n){return n=V(n),e.resolve(c,n)}},function(c,n,t){"use strict";c.exports=function c(n,t){if(n===t)return!0;if(n&&t&&"object"==typeof n&&"object"==typeof t){if(n.constructor!==t.constructor)return!1;var e,l,g;if(Array.isArray(n)){if((e=n.length)!=t.length)return!1;for(l=e;0!=l--;)if(!c(n[l],t[l]))return!1;return!0}if(n.constructor===RegExp)return n.source===t.source&&n.flags===t.flags;if(n.valueOf!==Object.prototype.valueOf)return n.valueOf()===t.valueOf();if(n.toString!==Object.prototype.toString)return n.toString()===t.toString();if((e=(g=Object.keys(n)).length)!==Object.keys(t).length)return!1;for(l=e;0!=l--;)if(!Object.prototype.hasOwnProperty.call(t,g[l]))return!1;for(l=e;0!=l--;){var I=g[l];if(!c(n[I],t[I]))return!1}return!0}return n!=n&&t!=t}},function(c,n,t){"use strict";var e=t(24);function l(c,n,t){this.message=t||l.message(c,n),this.missingRef=e.url(c,n),this.missingSchema=e.normalizeId(e.fullPath(this.missingRef))}function g(c){return c.prototype=Object.create(Error.prototype),c.prototype.constructor=c,c}c.exports={Validation:g((function(c){this.message="validation failed",this.errors=c,this.ajv=this.validation=!0})),MissingRef:g(l)},l.message=function(c,n){return"can't resolve reference "+n+" from id "+c}},function(c,n,t){var e=t(53),l=t(54),g=l;g.v1=e,g.v4=l,c.exports=g},function(c,n,t){"use strict";function e(c,n,t){var e=t[t.length-1];c===e.element&&(t.pop(),e=t[t.length-1]);var l=e.element,g=e.index;if(Array.isArray(l))l.push(c);else if(g===n.length-2){l[n.pop()]=c}else n.push(c)}n.stringify=function(c){var n=[];n.push({obj:c});for(var t,e,l,g,I,a,d,i,C,F,r="";t=n.pop();)if(e=t.obj,r+=t.prefix||"",l=t.val||"")r+=l;else if("object"!=typeof e)r+=void 0===e?null:JSON.stringify(e);else if(null===e)r+="null";else if(Array.isArray(e)){for(n.push({val:"]"}),g=e.length-1;g>=0;g--)I=0===g?"":",",n.push({obj:e[g],prefix:I});n.push({val:"["})}else{for(d in a=[],e)e.hasOwnProperty(d)&&a.push(d);for(n.push({val:"}"}),g=a.length-1;g>=0;g--)C=e[i=a[g]],F=g>0?",":"",F+=JSON.stringify(i)+":",n.push({obj:C,prefix:F});n.push({val:"{"})}return r},n.parse=function(c){for(var n,t,l,g,I,a,d,i,C,F=[],r=[],X=0;;)if("}"!==(n=c[X++])&&"]"!==n&&void 0!==n)switch(n){case" ":case"\t":case"\n":case":":case",":break;case"n":X+=3,e(null,F,r);break;case"t":X+=3,e(!0,F,r);break;case"f":X+=4,e(!1,F,r);break;case"0":case"1":case"2":case"3":case"4":case"5":case"6":case"7":case"8":case"9":case"-":for(t="",X--;;){if(l=c[X++],!/[\d\.\-e\+]/.test(l)){X--;break}t+=l}e(parseFloat(t),F,r);break;case'"':for(g="",I=void 0,a=0;'"'!==(d=c[X++])||"\\"===I&&a%2==1;)g+=d,"\\"===(I=d)?a++:a=0;e(JSON.parse('"'+g+'"'),F,r);break;case"[":i={element:[],index:F.length},F.push(i.element),r.push(i);break;case"{":C={element:{},index:F.length},F.push(C.element),r.push(C);break;default:throw new Error("unexpectedly reached end of input: "+n)}else{if(1===F.length)return F.pop();e(F.pop(),F,r)}}},function(c,n){var t,e,l=c.exports={};function g(){throw new Error("setTimeout has not been defined")}function I(){throw new Error("clearTimeout has not been defined")}function a(c){if(t===setTimeout)return setTimeout(c,0);if((t===g||!t)&&setTimeout)return t=setTimeout,setTimeout(c,0);try{return t(c,0)}catch(n){try{return t.call(null,c,0)}catch(n){return t.call(this,c,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:g}catch(c){t=g}try{e="function"==typeof clearTimeout?clearTimeout:I}catch(c){e=I}}();var d,i=[],C=!1,F=-1;function r(){C&&d&&(C=!1,d.length?i=d.concat(i):F=-1,i.length&&X())}function X(){if(!C){var c=a(r);C=!0;for(var n=i.length;n;){for(d=i,i=[];++F<n;)d&&d[F].run();F=-1,n=i.length}d=null,C=!1,function(c){if(e===clearTimeout)return clearTimeout(c);if((e===I||!e)&&clearTimeout)return e=clearTimeout,clearTimeout(c);try{e(c)}catch(n){try{return e.call(null,c)}catch(n){return e.call(this,c)}}}(c)}}function o(c,n){this.fun=c,this.array=n}function s(){}l.nextTick=function(c){var n=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)n[t-1]=arguments[t];i.push(new o(c,n)),1!==i.length||C||a(X)},o.prototype.run=function(){this.fun.apply(null,this.array)},l.title="browser",l.browser=!0,l.env={},l.argv=[],l.version="",l.versions={},l.on=s,l.addListener=s,l.once=s,l.off=s,l.removeListener=s,l.removeAllListeners=s,l.emit=s,l.prependListener=s,l.prependOnceListener=s,l.listeners=function(c){return[]},l.binding=function(c){throw new Error("process.binding is not supported")},l.cwd=function(){return"/"},l.chdir=function(c){throw new Error("process.chdir is not supported")},l.umask=function(){return 0}},function(c,n){var t="undefined"!=typeof crypto&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&msCrypto.getRandomValues.bind(msCrypto);if(t){var e=new Uint8Array(16);c.exports=function(){return t(e),e}}else{var l=new Array(16);c.exports=function(){for(var c,n=0;n<16;n++)0==(3&n)&&(c=4294967296*Math.random()),l[n]=c>>>((3&n)<<3)&255;return l}}},function(c,n){for(var t=[],e=0;e<256;++e)t[e]=(e+256).toString(16).substr(1);c.exports=function(c,n){var e=n||0,l=t;return l[c[e++]]+l[c[e++]]+l[c[e++]]+l[c[e++]]+"-"+l[c[e++]]+l[c[e++]]+"-"+l[c[e++]]+l[c[e++]]+"-"+l[c[e++]]+l[c[e++]]+"-"+l[c[e++]]+l[c[e++]]+l[c[e++]]+l[c[e++]]+l[c[e++]]+l[c[e++]]}},function(c,n,t){"use strict";c.exports=function(c,n){return function(){for(var t=new Array(arguments.length),e=0;e<t.length;e++)t[e]=arguments[e];return c.apply(n,t)}}},function(c,n,t){"use strict";var e=t(3),l=t(60),g=t(62),I=t(63),a=t(64),d=t(34);c.exports=function(c){return new Promise((function(n,i){var C=c.data,F=c.headers;e.isFormData(C)&&delete F["Content-Type"];var r=new XMLHttpRequest;if(c.auth){var X=c.auth.username||"",o=c.auth.password||"";F.Authorization="Basic "+btoa(X+":"+o)}if(r.open(c.method.toUpperCase(),g(c.url,c.params,c.paramsSerializer),!0),r.timeout=c.timeout,r.onreadystatechange=function(){if(r&&4===r.readyState&&(0!==r.status||r.responseURL&&0===r.responseURL.indexOf("file:"))){var t="getAllResponseHeaders"in r?I(r.getAllResponseHeaders()):null,e={data:c.responseType&&"text"!==c.responseType?r.response:r.responseText,status:r.status,statusText:r.statusText,headers:t,config:c,request:r};l(n,i,e),r=null}},r.onerror=function(){i(d("Network Error",c,null,r)),r=null},r.ontimeout=function(){i(d("timeout of "+c.timeout+"ms exceeded",c,"ECONNABORTED",r)),r=null},e.isStandardBrowserEnv()){var s=t(65),Z=(c.withCredentials||a(c.url))&&c.xsrfCookieName?s.read(c.xsrfCookieName):void 0;Z&&(F[c.xsrfHeaderName]=Z)}if("setRequestHeader"in r&&e.forEach(F,(function(c,n){void 0===C&&"content-type"===n.toLowerCase()?delete F[n]:r.setRequestHeader(n,c)})),c.withCredentials&&(r.withCredentials=!0),c.responseType)try{r.responseType=c.responseType}catch(n){if("json"!==c.responseType)throw n}"function"==typeof c.onDownloadProgress&&r.addEventListener("progress",c.onDownloadProgress),"function"==typeof c.onUploadProgress&&r.upload&&r.upload.addEventListener("progress",c.onUploadProgress),c.cancelToken&&c.cancelToken.promise.then((function(c){r&&(r.abort(),i(c),r=null)})),void 0===C&&(C=null),r.send(C)}))}},function(c,n,t){"use strict";var e=t(61);c.exports=function(c,n,t,l,g){var I=new Error(c);return e(I,n,t,l,g)}},function(c,n,t){"use strict";c.exports=function(c){return!(!c||!c.__CANCEL__)}},function(c,n,t){"use strict";function e(c){this.message=c}e.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},e.prototype.__CANCEL__=!0,c.exports=e},function(c,n,t){"use strict";var e=t(13);c.exports=new e({include:[t(38)]})},function(c,n,t){"use strict";var e=t(13);c.exports=new e({include:[t(23)],implicit:[t(79),t(80),t(81),t(82)]})},function(c,n,t){"use strict";var e=t(14);c.exports=function(c){e.copy(c,this)}},function(c,n,t){"use strict";c.exports=function(c,n){n||(n={}),"function"==typeof n&&(n={cmp:n});var t,e="boolean"==typeof n.cycles&&n.cycles,l=n.cmp&&(t=n.cmp,function(c){return function(n,e){var l={key:n,value:c[n]},g={key:e,value:c[e]};return t(l,g)}}),g=[];return function c(n){if(n&&n.toJSON&&"function"==typeof n.toJSON&&(n=n.toJSON()),void 0!==n){if("number"==typeof n)return isFinite(n)?""+n:"null";if("object"!=typeof n)return JSON.stringify(n);var t,I;if(Array.isArray(n)){for(I="[",t=0;t<n.length;t++)t&&(I+=","),I+=c(n[t])||"null";return I+"]"}if(null===n)return"null";if(-1!==g.indexOf(n)){if(e)return JSON.stringify("__cycle__");throw new TypeError("Converting circular structure to JSON")}var a=g.push(n)-1,d=Object.keys(n).sort(l&&l(n));for(I="",t=0;t<d.length;t++){var i=d[t],C=c(n[i]);C&&(I&&(I+=","),I+=JSON.stringify(i)+":"+C)}return g.splice(a,1),"{"+I+"}"}}(c)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e="",l=!0===c.schema.$async,g=c.util.schemaHasRulesExcept(c.schema,c.RULES.all,"$ref"),I=c.self._getId(c.schema);if(c.opts.strictKeywords){var a=c.util.schemaUnknownRules(c.schema,c.RULES.keywords);if(a){var d="unknown keyword: "+a;if("log"!==c.opts.strictKeywords)throw new Error(d);c.logger.warn(d)}}if(c.isTop&&(e+=" var validate = ",l&&(c.async=!0,e+="async "),e+="function(data, dataPath, parentData, parentDataProperty, rootData) { 'use strict'; ",I&&(c.opts.sourceCode||c.opts.processCode)&&(e+=" /*# sourceURL="+I+" */ ")),"boolean"==typeof c.schema||!g&&!c.schema.$ref){var i=c.level,C=c.dataLevel,F=c.schema["false schema"],r=c.schemaPath+c.util.getProperty("false schema"),X=c.errSchemaPath+"/false schema",o=!c.opts.allErrors,s="data"+(C||""),Z="valid"+i;if(!1===c.schema){c.isTop?o=!0:e+=" var "+Z+" = false; ",(_=_||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'false schema' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(X)+" , params: {} ",!1!==c.opts.messages&&(e+=" , message: 'boolean schema is false' "),c.opts.verbose&&(e+=" , schema: false , parentSchema: validate.schema"+c.schemaPath+" , data: "+s+" "),e+=" } "):e+=" {} ";var B=e;e=_.pop(),!c.compositeRule&&o?c.async?e+=" throw new ValidationError(["+B+"]); ":e+=" validate.errors = ["+B+"]; return false; ":e+=" var err = "+B+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}else c.isTop?e+=l?" return data; ":" validate.errors = null; return true; ":e+=" var "+Z+" = true; ";return c.isTop&&(e+=" }; return validate; "),e}if(c.isTop){var V=c.isTop;i=c.level=0,C=c.dataLevel=0,s="data";if(c.rootId=c.resolve.fullPath(c.self._getId(c.root.schema)),c.baseId=c.baseId||c.rootId,delete c.isTop,c.dataPathArr=[void 0],void 0!==c.schema.default&&c.opts.useDefaults&&c.opts.strictDefaults){var A="default is ignored in the schema root";if("log"!==c.opts.strictDefaults)throw new Error(A);c.logger.warn(A)}e+=" var vErrors = null; ",e+=" var errors = 0;     ",e+=" if (rootData === undefined) rootData = data; "}else{i=c.level,s="data"+((C=c.dataLevel)||"");if(I&&(c.baseId=c.resolve.url(c.baseId,I)),l&&!c.async)throw new Error("async schema in sync schema");e+=" var errs_"+i+" = errors;"}Z="valid"+i,o=!c.opts.allErrors;var G="",b="",h=c.schema.type,U=Array.isArray(h);if(h&&c.opts.nullable&&!0===c.schema.nullable&&(U?-1==h.indexOf("null")&&(h=h.concat("null")):"null"!=h&&(h=[h,"null"],U=!0)),U&&1==h.length&&(h=h[0],U=!1),c.schema.$ref&&g){if("fail"==c.opts.extendRefs)throw new Error('$ref: validation keywords used in schema at path "'+c.errSchemaPath+'" (see option extendRefs)');!0!==c.opts.extendRefs&&(g=!1,c.logger.warn('$ref: keywords ignored in schema at path "'+c.errSchemaPath+'"'))}if(c.schema.$comment&&c.opts.$comment&&(e+=" "+c.RULES.all.$comment.code(c,"$comment")),h){if(c.opts.coerceTypes)var Q=c.util.coerceToTypes(c.opts.coerceTypes,h);var u=c.RULES.types[h];if(Q||U||!0===u||u&&!q(u)){r=c.schemaPath+".type",X=c.errSchemaPath+"/type",r=c.schemaPath+".type",X=c.errSchemaPath+"/type";var W=U?"checkDataTypes":"checkDataType";if(e+=" if ("+c.util[W](h,s,!0)+") { ",Q){var m="dataType"+i,R="coerced"+i;e+=" var "+m+" = typeof "+s+"; ","array"==c.opts.coerceTypes&&(e+=" if ("+m+" == 'object' && Array.isArray("+s+")) "+m+" = 'array'; "),e+=" var "+R+" = undefined; ";var J="",p=Q;if(p)for(var x,N=-1,Y=p.length-1;N<Y;)x=p[N+=1],N&&(e+=" if ("+R+" === undefined) { ",J+="}"),"array"==c.opts.coerceTypes&&"array"!=x&&(e+=" if ("+m+" == 'array' && "+s+".length == 1) { "+R+" = "+s+" = "+s+"[0]; "+m+" = typeof "+s+";  } "),"string"==x?e+=" if ("+m+" == 'number' || "+m+" == 'boolean') "+R+" = '' + "+s+"; else if ("+s+" === null) "+R+" = ''; ":"number"==x||"integer"==x?(e+=" if ("+m+" == 'boolean' || "+s+" === null || ("+m+" == 'string' && "+s+" && "+s+" == +"+s+" ","integer"==x&&(e+=" && !("+s+" % 1)"),e+=")) "+R+" = +"+s+"; "):"boolean"==x?e+=" if ("+s+" === 'false' || "+s+" === 0 || "+s+" === null) "+R+" = false; else if ("+s+" === 'true' || "+s+" === 1) "+R+" = true; ":"null"==x?e+=" if ("+s+" === '' || "+s+" === 0 || "+s+" === false) "+R+" = null; ":"array"==c.opts.coerceTypes&&"array"==x&&(e+=" if ("+m+" == 'string' || "+m+" == 'number' || "+m+" == 'boolean' || "+s+" == null) "+R+" = ["+s+"]; ");e+=" "+J+" if ("+R+" === undefined) {   ",(_=_||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'type' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(X)+" , params: { type: '",e+=U?""+h.join(","):""+h,e+="' } ",!1!==c.opts.messages&&(e+=" , message: 'should be ",e+=U?""+h.join(","):""+h,e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+r+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+s+" "),e+=" } "):e+=" {} ";B=e;e=_.pop(),!c.compositeRule&&o?c.async?e+=" throw new ValidationError(["+B+"]); ":e+=" validate.errors = ["+B+"]; return false; ":e+=" var err = "+B+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } else {  ";var y=C?"data"+(C-1||""):"parentData";e+=" "+s+" = "+R+"; ",C||(e+="if ("+y+" !== undefined)"),e+=" "+y+"["+(C?c.dataPathArr[C]:"parentDataProperty")+"] = "+R+"; } "}else{(_=_||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'type' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(X)+" , params: { type: '",e+=U?""+h.join(","):""+h,e+="' } ",!1!==c.opts.messages&&(e+=" , message: 'should be ",e+=U?""+h.join(","):""+h,e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+r+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+s+" "),e+=" } "):e+=" {} ";B=e;e=_.pop(),!c.compositeRule&&o?c.async?e+=" throw new ValidationError(["+B+"]); ":e+=" validate.errors = ["+B+"]; return false; ":e+=" var err = "+B+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}e+=" } "}}if(c.schema.$ref&&!g)e+=" "+c.RULES.all.$ref.code(c,"$ref")+" ",o&&(e+=" } if (errors === ",e+=V?"0":"errs_"+i,e+=") { ",b+="}");else{var S=c.RULES;if(S)for(var k=-1,H=S.length-1;k<H;)if(q(u=S[k+=1])){if(u.type&&(e+=" if ("+c.util.checkDataType(u.type,s)+") { "),c.opts.useDefaults)if("object"==u.type&&c.schema.properties){F=c.schema.properties;var E=Object.keys(F);if(E)for(var T,v=-1,z=E.length-1;v<z;){if(void 0!==(w=F[T=E[v+=1]]).default){var D=s+c.util.getProperty(T);if(c.compositeRule){if(c.opts.strictDefaults){A="default is ignored for: "+D;if("log"!==c.opts.strictDefaults)throw new Error(A);c.logger.warn(A)}}else e+=" if ("+D+" === undefined ","empty"==c.opts.useDefaults&&(e+=" || "+D+" === null || "+D+" === '' "),e+=" ) "+D+" = ","shared"==c.opts.useDefaults?e+=" "+c.useDefault(w.default)+" ":e+=" "+JSON.stringify(w.default)+" ",e+="; "}}}else if("array"==u.type&&Array.isArray(c.schema.items)){var f=c.schema.items;if(f){N=-1;for(var w,j=f.length-1;N<j;)if(void 0!==(w=f[N+=1]).default){D=s+"["+N+"]";if(c.compositeRule){if(c.opts.strictDefaults){A="default is ignored for: "+D;if("log"!==c.opts.strictDefaults)throw new Error(A);c.logger.warn(A)}}else e+=" if ("+D+" === undefined ","empty"==c.opts.useDefaults&&(e+=" || "+D+" === null || "+D+" === '' "),e+=" ) "+D+" = ","shared"==c.opts.useDefaults?e+=" "+c.useDefault(w.default)+" ":e+=" "+JSON.stringify(w.default)+" ",e+="; "}}}var K=u.rules;if(K)for(var M,O=-1,L=K.length-1;O<L;)if($(M=K[O+=1])){var P=M.code(c,M.keyword,u.type);P&&(e+=" "+P+" ",o&&(G+="}"))}if(o&&(e+=" "+G+" ",G=""),u.type&&(e+=" } ",h&&h===u.type&&!Q)){e+=" else { ";var _;r=c.schemaPath+".type",X=c.errSchemaPath+"/type";(_=_||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'type' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(X)+" , params: { type: '",e+=U?""+h.join(","):""+h,e+="' } ",!1!==c.opts.messages&&(e+=" , message: 'should be ",e+=U?""+h.join(","):""+h,e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+r+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+s+" "),e+=" } "):e+=" {} ";B=e;e=_.pop(),!c.compositeRule&&o?c.async?e+=" throw new ValidationError(["+B+"]); ":e+=" validate.errors = ["+B+"]; return false; ":e+=" var err = "+B+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } "}o&&(e+=" if (errors === ",e+=V?"0":"errs_"+i,e+=") { ",b+="}")}}function q(c){for(var n=c.rules,t=0;t<n.length;t++)if($(n[t]))return!0}function $(n){return void 0!==c.schema[n.keyword]||n.implements&&function(n){for(var t=n.implements,e=0;e<t.length;e++)if(void 0!==c.schema[t[e]])return!0}(n)}return o&&(e+=" "+b+" "),V?(l?(e+=" if (errors === 0) return data;           ",e+=" else throw new ValidationError(vErrors); "):(e+=" validate.errors = vErrors; ",e+=" return errors === 0;       "),e+=" }; return validate;"):e+=" var "+Z+" = errors === errs_"+i+";",e=c.util.cleanUpCode(e),V&&(e=c.util.finalCleanUpCode(e,l)),e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l=" ",g=c.level,I=c.dataLevel,a=c.schema[n],d=c.schemaPath+c.util.getProperty(n),i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(I||""),r=c.opts.$data&&a&&a.$data;r?(l+=" var schema"+g+" = "+c.util.getData(a.$data,I,c.dataPathArr)+"; ",e="schema"+g):e=a;var X="maximum"==n,o=X?"exclusiveMaximum":"exclusiveMinimum",s=c.schema[o],Z=c.opts.$data&&s&&s.$data,B=X?"<":">",V=X?">":"<",A=void 0;if(Z){var G=c.util.getData(s.$data,I,c.dataPathArr),b="exclusive"+g,h="exclType"+g,U="exclIsNumber"+g,Q="' + "+(m="op"+g)+" + '";l+=" var schemaExcl"+g+" = "+G+"; ",l+=" var "+b+"; var "+h+" = typeof "+(G="schemaExcl"+g)+"; if ("+h+" != 'boolean' && "+h+" != 'undefined' && "+h+" != 'number') { ";var u;A=o;(u=u||[]).push(l),l="",!1!==c.createErrors?(l+=" { keyword: '"+(A||"_exclusiveLimit")+"' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: {} ",!1!==c.opts.messages&&(l+=" , message: '"+o+" should be boolean' "),c.opts.verbose&&(l+=" , schema: validate.schema"+d+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";var W=l;l=u.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+W+"]); ":l+=" validate.errors = ["+W+"]; return false; ":l+=" var err = "+W+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } else if ( ",r&&(l+=" ("+e+" !== undefined && typeof "+e+" != 'number') || "),l+=" "+h+" == 'number' ? ( ("+b+" = "+e+" === undefined || "+G+" "+B+"= "+e+") ? "+F+" "+V+"= "+G+" : "+F+" "+V+" "+e+" ) : ( ("+b+" = "+G+" === true) ? "+F+" "+V+"= "+e+" : "+F+" "+V+" "+e+" ) || "+F+" !== "+F+") { var op"+g+" = "+b+" ? '"+B+"' : '"+B+"='; ",void 0===a&&(A=o,i=c.errSchemaPath+"/"+o,e=G,r=Z)}else{Q=B;if((U="number"==typeof s)&&r){var m="'"+Q+"'";l+=" if ( ",r&&(l+=" ("+e+" !== undefined && typeof "+e+" != 'number') || "),l+=" ( "+e+" === undefined || "+s+" "+B+"= "+e+" ? "+F+" "+V+"= "+s+" : "+F+" "+V+" "+e+" ) || "+F+" !== "+F+") { "}else{U&&void 0===a?(b=!0,A=o,i=c.errSchemaPath+"/"+o,e=s,V+="="):(U&&(e=Math[X?"min":"max"](s,a)),s===(!U||e)?(b=!0,A=o,i=c.errSchemaPath+"/"+o,V+="="):(b=!1,Q+="="));m="'"+Q+"'";l+=" if ( ",r&&(l+=" ("+e+" !== undefined && typeof "+e+" != 'number') || "),l+=" "+F+" "+V+" "+e+" || "+F+" !== "+F+") { "}}A=A||n,(u=u||[]).push(l),l="",!1!==c.createErrors?(l+=" { keyword: '"+(A||"_limit")+"' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { comparison: "+m+", limit: "+e+", exclusive: "+b+" } ",!1!==c.opts.messages&&(l+=" , message: 'should be "+Q+" ",l+=r?"' + "+e:e+"'"),c.opts.verbose&&(l+=" , schema:  ",l+=r?"validate.schema"+d:""+a,l+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";W=l;return l=u.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+W+"]); ":l+=" validate.errors = ["+W+"]; return false; ":l+=" var err = "+W+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } ",C&&(l+=" else { "),l}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l=" ",g=c.level,I=c.dataLevel,a=c.schema[n],d=c.schemaPath+c.util.getProperty(n),i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(I||""),r=c.opts.$data&&a&&a.$data;r?(l+=" var schema"+g+" = "+c.util.getData(a.$data,I,c.dataPathArr)+"; ",e="schema"+g):e=a,l+="if ( ",r&&(l+=" ("+e+" !== undefined && typeof "+e+" != 'number') || "),l+=" "+F+".length "+("maxItems"==n?">":"<")+" "+e+") { ";var X=n,o=o||[];o.push(l),l="",!1!==c.createErrors?(l+=" { keyword: '"+(X||"_limitItems")+"' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { limit: "+e+" } ",!1!==c.opts.messages&&(l+=" , message: 'should NOT have ",l+="maxItems"==n?"more":"fewer",l+=" than ",l+=r?"' + "+e+" + '":""+a,l+=" items' "),c.opts.verbose&&(l+=" , schema:  ",l+=r?"validate.schema"+d:""+a,l+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";var s=l;return l=o.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+s+"]); ":l+=" validate.errors = ["+s+"]; return false; ":l+=" var err = "+s+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+="} ",C&&(l+=" else { "),l}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l=" ",g=c.level,I=c.dataLevel,a=c.schema[n],d=c.schemaPath+c.util.getProperty(n),i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(I||""),r=c.opts.$data&&a&&a.$data;r?(l+=" var schema"+g+" = "+c.util.getData(a.$data,I,c.dataPathArr)+"; ",e="schema"+g):e=a;var X="maxLength"==n?">":"<";l+="if ( ",r&&(l+=" ("+e+" !== undefined && typeof "+e+" != 'number') || "),!1===c.opts.unicode?l+=" "+F+".length ":l+=" ucs2length("+F+") ",l+=" "+X+" "+e+") { ";var o=n,s=s||[];s.push(l),l="",!1!==c.createErrors?(l+=" { keyword: '"+(o||"_limitLength")+"' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { limit: "+e+" } ",!1!==c.opts.messages&&(l+=" , message: 'should NOT be ",l+="maxLength"==n?"longer":"shorter",l+=" than ",l+=r?"' + "+e+" + '":""+a,l+=" characters' "),c.opts.verbose&&(l+=" , schema:  ",l+=r?"validate.schema"+d:""+a,l+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";var Z=l;return l=s.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+Z+"]); ":l+=" validate.errors = ["+Z+"]; return false; ":l+=" var err = "+Z+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+="} ",C&&(l+=" else { "),l}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l=" ",g=c.level,I=c.dataLevel,a=c.schema[n],d=c.schemaPath+c.util.getProperty(n),i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(I||""),r=c.opts.$data&&a&&a.$data;r?(l+=" var schema"+g+" = "+c.util.getData(a.$data,I,c.dataPathArr)+"; ",e="schema"+g):e=a,l+="if ( ",r&&(l+=" ("+e+" !== undefined && typeof "+e+" != 'number') || "),l+=" Object.keys("+F+").length "+("maxProperties"==n?">":"<")+" "+e+") { ";var X=n,o=o||[];o.push(l),l="",!1!==c.createErrors?(l+=" { keyword: '"+(X||"_limitProperties")+"' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { limit: "+e+" } ",!1!==c.opts.messages&&(l+=" , message: 'should NOT have ",l+="maxProperties"==n?"more":"fewer",l+=" than ",l+=r?"' + "+e+" + '":""+a,l+=" properties' "),c.opts.verbose&&(l+=" , schema:  ",l+=r?"validate.schema"+d:""+a,l+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";var s=l;return l=o.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+s+"]); ":l+=" validate.errors = ["+s+"]; return false; ":l+=" var err = "+s+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+="} ",C&&(l+=" else { "),l}},function(c){c.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"http://json-schema.org/draft-07/schema#","title":"Core schema meta-schema","definitions":{"schemaArray":{"type":"array","minItems":1,"items":{"$ref":"#"}},"nonNegativeInteger":{"type":"integer","minimum":0},"nonNegativeIntegerDefault0":{"allOf":[{"$ref":"#/definitions/nonNegativeInteger"},{"default":0}]},"simpleTypes":{"enum":["array","boolean","integer","null","number","object","string"]},"stringArray":{"type":"array","items":{"type":"string"},"uniqueItems":true,"default":[]}},"type":["object","boolean"],"properties":{"$id":{"type":"string","format":"uri-reference"},"$schema":{"type":"string","format":"uri"},"$ref":{"type":"string","format":"uri-reference"},"$comment":{"type":"string"},"title":{"type":"string"},"description":{"type":"string"},"default":true,"readOnly":{"type":"boolean","default":false},"examples":{"type":"array","items":true},"multipleOf":{"type":"number","exclusiveMinimum":0},"maximum":{"type":"number"},"exclusiveMaximum":{"type":"number"},"minimum":{"type":"number"},"exclusiveMinimum":{"type":"number"},"maxLength":{"$ref":"#/definitions/nonNegativeInteger"},"minLength":{"$ref":"#/definitions/nonNegativeIntegerDefault0"},"pattern":{"type":"string","format":"regex"},"additionalItems":{"$ref":"#"},"items":{"anyOf":[{"$ref":"#"},{"$ref":"#/definitions/schemaArray"}],"default":true},"maxItems":{"$ref":"#/definitions/nonNegativeInteger"},"minItems":{"$ref":"#/definitions/nonNegativeIntegerDefault0"},"uniqueItems":{"type":"boolean","default":false},"contains":{"$ref":"#"},"maxProperties":{"$ref":"#/definitions/nonNegativeInteger"},"minProperties":{"$ref":"#/definitions/nonNegativeIntegerDefault0"},"required":{"$ref":"#/definitions/stringArray"},"additionalProperties":{"$ref":"#"},"definitions":{"type":"object","additionalProperties":{"$ref":"#"},"default":{}},"properties":{"type":"object","additionalProperties":{"$ref":"#"},"default":{}},"patternProperties":{"type":"object","additionalProperties":{"$ref":"#"},"propertyNames":{"format":"regex"},"default":{}},"dependencies":{"type":"object","additionalProperties":{"anyOf":[{"$ref":"#"},{"$ref":"#/definitions/stringArray"}]}},"propertyNames":{"$ref":"#"},"const":true,"enum":{"type":"array","items":true,"minItems":1,"uniqueItems":true},"type":{"anyOf":[{"$ref":"#/definitions/simpleTypes"},{"type":"array","items":{"$ref":"#/definitions/simpleTypes"},"minItems":1,"uniqueItems":true}]},"format":{"type":"string"},"contentMediaType":{"type":"string"},"contentEncoding":{"type":"string"},"if":{"$ref":"#"},"then":{"$ref":"#"},"else":{"$ref":"#"},"allOf":{"$ref":"#/definitions/schemaArray"},"anyOf":{"$ref":"#/definitions/schemaArray"},"oneOf":{"$ref":"#/definitions/schemaArray"},"not":{"$ref":"#"}},"default":true}')},function(c){c.exports=JSON.parse('{"a":"0.12.0"}')},function(c,n,t){"use strict";var e=t(73);c.exports=e},function(c,n,t){var e,l=l||function(c){"use strict";if(!(void 0===c||"undefined"!=typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var n=c.document,t=function(){return c.URL||c.webkitURL||c},e=n.createElementNS("http://www.w3.org/1999/xhtml","a"),l="download"in e,g=/constructor/i.test(c.HTMLElement)||c.safari,I=/CriOS\/[\d]+/.test(navigator.userAgent),a=function(n){(c.setImmediate||c.setTimeout)((function(){throw n}),0)},d=function(c){setTimeout((function(){"string"==typeof c?t().revokeObjectURL(c):c.remove()}),4e4)},i=function(c){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(c.type)?new Blob([String.fromCharCode(65279),c],{type:c.type}):c},C=function(n,C,F){F||(n=i(n));var r,X=this,o="application/octet-stream"===n.type,s=function(){!function(c,n,t){for(var e=(n=[].concat(n)).length;e--;){var l=c["on"+n[e]];if("function"==typeof l)try{l.call(c,t||c)}catch(c){a(c)}}}(X,"writestart progress write writeend".split(" "))};if(X.readyState=X.INIT,l)return r=t().createObjectURL(n),void setTimeout((function(){var c,n;e.href=r,e.download=C,c=e,n=new MouseEvent("click"),c.dispatchEvent(n),s(),d(r),X.readyState=X.DONE}));!function(){if((I||o&&g)&&c.FileReader){var e=new FileReader;return e.onloadend=function(){var n=I?e.result:e.result.replace(/^data:[^;]*;/,"data:attachment/file;");c.open(n,"_blank")||(c.location.href=n),n=void 0,X.readyState=X.DONE,s()},e.readAsDataURL(n),void(X.readyState=X.INIT)}(r||(r=t().createObjectURL(n)),o)?c.location.href=r:c.open(r,"_blank")||(c.location.href=r);X.readyState=X.DONE,s(),d(r)}()},F=C.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(c,n,t){return n=n||c.name||"download",t||(c=i(c)),navigator.msSaveOrOpenBlob(c,n)}:(F.abort=function(){},F.readyState=F.INIT=0,F.WRITING=1,F.DONE=2,F.error=F.onwritestart=F.onprogress=F.onwrite=F.onabort=F.onerror=F.onwriteend=null,function(c,n,t){return new C(c,n||c.name||"download",t)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);
/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */c.exports?c.exports.saveAs=l:null!==t(98)&&null!==t(99)&&(void 0===(e=function(){return l}.call(n,t,n,c))||(c.exports=e))},function(c){c.exports=JSON.parse('{"BrowserFS":{"uri":"https://imjoy-team.github.io/imjoy-core-plugins/BrowserFS.imjoy.html","startup":false},"Jupyter-Engine-Manager":{"uri":"https://imjoy-team.github.io/jupyter-engine-manager/Jupyter-Engine-Manager.imjoy.html","startup":true},"Jupyter-Notebook":{"uri":"https://imjoy-team.github.io/jupyter-engine-manager/Jupyter-Notebook.imjoy.html","startup":false}}')},function(c,n,t){"use strict";var e=t(100),l=t(24),g=t(104),I=t(39),a=t(40),d=t(105),i=t(106),C=t(127),F=t(14);c.exports=B,B.prototype.validate=function(c,n){var t;if("string"==typeof c){if(!(t=this.getSchema(c)))throw new Error('no schema with key or ref "'+c+'"')}else{var e=this._addSchema(c);t=e.validate||this._compile(e)}var l=t(n);!0!==t.$async&&(this.errors=t.errors);return l},B.prototype.compile=function(c,n){var t=this._addSchema(c,void 0,n);return t.validate||this._compile(t)},B.prototype.addSchema=function(c,n,t,e){if(Array.isArray(c)){for(var g=0;g<c.length;g++)this.addSchema(c[g],void 0,t,e);return this}var I=this._getId(c);if(void 0!==I&&"string"!=typeof I)throw new Error("schema id must be string");return U(this,n=l.normalizeId(n||I)),this._schemas[n]=this._addSchema(c,t,e,!0),this},B.prototype.addMetaSchema=function(c,n,t){return this.addSchema(c,n,t,!0),this},B.prototype.validateSchema=function(c,n){var t=c.$schema;if(void 0!==t&&"string"!=typeof t)throw new Error("$schema must be a string");if(!(t=t||this._opts.defaultMeta||function(c){var n=c._opts.meta;return c._opts.defaultMeta="object"==typeof n?c._getId(n)||n:c.getSchema(o)?o:void 0,c._opts.defaultMeta}(this)))return this.logger.warn("meta-schema not available"),this.errors=null,!0;var e=this.validate(t,c);if(!e&&n){var l="schema is invalid: "+this.errorsText();if("log"!=this._opts.validateSchema)throw new Error(l);this.logger.error(l)}return e},B.prototype.getSchema=function(c){var n=V(this,c);switch(typeof n){case"object":return n.validate||this._compile(n);case"string":return this.getSchema(n);case"undefined":return function(c,n){var t=l.schema.call(c,{schema:{}},n);if(t){var g=t.schema,a=t.root,d=t.baseId,i=e.call(c,g,a,void 0,d);return c._fragments[n]=new I({ref:n,fragment:!0,schema:g,root:a,baseId:d,validate:i}),i}}(this,c)}},B.prototype.removeSchema=function(c){if(c instanceof RegExp)return A(this,this._schemas,c),A(this,this._refs,c),this;switch(typeof c){case"undefined":return A(this,this._schemas),A(this,this._refs),this._cache.clear(),this;case"string":var n=V(this,c);return n&&this._cache.del(n.cacheKey),delete this._schemas[c],delete this._refs[c],this;case"object":var t=this._opts.serialize,e=t?t(c):c;this._cache.del(e);var g=this._getId(c);g&&(g=l.normalizeId(g),delete this._schemas[g],delete this._refs[g])}return this},B.prototype.addFormat=function(c,n){"string"==typeof n&&(n=new RegExp(n));return this._formats[c]=n,this},B.prototype.errorsText=function(c,n){if(!(c=c||this.errors))return"No errors";for(var t=void 0===(n=n||{}).separator?", ":n.separator,e=void 0===n.dataVar?"data":n.dataVar,l="",g=0;g<c.length;g++){var I=c[g];I&&(l+=e+I.dataPath+" "+I.message+t)}return l.slice(0,-t.length)},B.prototype._addSchema=function(c,n,t,e){if("object"!=typeof c&&"boolean"!=typeof c)throw new Error("schema should be object or boolean");var g=this._opts.serialize,a=g?g(c):c,d=this._cache.get(a);if(d)return d;e=e||!1!==this._opts.addUsedSchema;var i=l.normalizeId(this._getId(c));i&&e&&U(this,i);var C,F=!1!==this._opts.validateSchema&&!n;F&&!(C=i&&i==l.normalizeId(c.$schema))&&this.validateSchema(c,!0);var r=l.ids.call(this,c),X=new I({id:i,schema:c,localRefs:r,cacheKey:a,meta:t});"#"!=i[0]&&e&&(this._refs[i]=X);this._cache.put(a,X),F&&C&&this.validateSchema(c,!0);return X},B.prototype._compile=function(c,n){if(c.compiling)return c.validate=g,g.schema=c.schema,g.errors=null,g.root=n||g,!0===c.schema.$async&&(g.$async=!0),g;var t,l;c.compiling=!0,c.meta&&(t=this._opts,this._opts=this._metaOpts);try{l=e.call(this,c.schema,n,c.localRefs)}catch(n){throw delete c.validate,n}finally{c.compiling=!1,c.meta&&(this._opts=t)}return c.validate=l,c.refs=l.refs,c.refVal=l.refVal,c.root=l.root,l;function g(){var n=c.validate,t=n.apply(this,arguments);return g.errors=n.errors,t}},B.prototype.compileAsync=t(128);var r=t(129);B.prototype.addKeyword=r.add,B.prototype.getKeyword=r.get,B.prototype.removeKeyword=r.remove,B.prototype.validateKeyword=r.validate;var X=t(26);B.ValidationError=X.Validation,B.MissingRefError=X.MissingRef,B.$dataMetaSchema=C;var o="http://json-schema.org/draft-07/schema",s=["removeAdditional","useDefaults","coerceTypes","strictDefaults"],Z=["/properties"];function B(c){if(!(this instanceof B))return new B(c);c=this._opts=F.copy(c)||{},function(c){var n=c._opts.logger;if(!1===n)c.logger={log:Q,warn:Q,error:Q};else{if(void 0===n&&(n=console),!("object"==typeof n&&n.log&&n.warn&&n.error))throw new Error("logger must implement log, warn and error methods");c.logger=n}}(this),this._schemas={},this._refs={},this._fragments={},this._formats=d(c.format),this._cache=c.cache||new g,this._loadingSchemas={},this._compilations=[],this.RULES=i(),this._getId=function(c){switch(c.schemaId){case"auto":return h;case"id":return G;default:return b}}(c),c.loopRequired=c.loopRequired||1/0,"property"==c.errorDataPath&&(c._errorDataPathProperty=!0),void 0===c.serialize&&(c.serialize=a),this._metaOpts=function(c){for(var n=F.copy(c._opts),t=0;t<s.length;t++)delete n[s[t]];return n}(this),c.formats&&function(c){for(var n in c._opts.formats){var t=c._opts.formats[n];c.addFormat(n,t)}}(this),c.keywords&&function(c){for(var n in c._opts.keywords){var t=c._opts.keywords[n];c.addKeyword(n,t)}}(this),function(c){var n;c._opts.$data&&(n=t(132),c.addMetaSchema(n,n.$id,!0));if(!1===c._opts.meta)return;var e=t(46);c._opts.$data&&(e=C(e,Z));c.addMetaSchema(e,o,!0),c._refs["http://json-schema.org/schema"]=o}(this),"object"==typeof c.meta&&this.addMetaSchema(c.meta),c.nullable&&this.addKeyword("nullable",{metaSchema:{type:"boolean"}}),function(c){var n=c._opts.schemas;if(!n)return;if(Array.isArray(n))c.addSchema(n);else for(var t in n)c.addSchema(n[t],t)}(this)}function V(c,n){return n=l.normalizeId(n),c._schemas[n]||c._refs[n]||c._fragments[n]}function A(c,n,t){for(var e in n){var l=n[e];l.meta||t&&!t.test(e)||(c._cache.del(l.cacheKey),delete n[e])}}function G(c){return c.$id&&this.logger.warn("schema $id ignored",c.$id),c.id}function b(c){return c.id&&this.logger.warn("schema id ignored",c.id),c.$id}function h(c){if(c.$id&&c.id&&c.$id!=c.id)throw new Error("schema $id is different from id");return c.$id||c.id}function U(c,n){if(c._schemas[n]||c._refs[n])throw new Error('schema with key or id "'+n+'" already exists')}function Q(){}},function(c,n,t){var e,l,g;
/*! minibus - v3.1.0 - 2014-11-22
 * https://github.com/axelpale/minibus
 *
 * Copyright (c) 2014 Akseli Palen <akseli.palen@gmail.com>;
 * Licensed under the MIT license */!function(t,I){"use strict";l=[n],void 0===(g="function"==typeof(e=function(c){var n=function(){this.eventMap={},this.routeMap={},this.busContext={}};c.create=function(){return new n},c.extension=n.prototype;var t=function(c){return"[object Array]"===Object.prototype.toString.call(c)},e=function(c){for(var n in c)if(c.hasOwnProperty(n))return!1;return!0},l=function(c){this.name="InvalidEventStringError",this.message="Invalid event string given: "+c},g=function(c){this.name="InvalidRouteStringError",this.message="Invalid route string given: "+c},I=function(c){this.name="InvalidEventHandlerError",this.message="Invalid event handler function given: "+c},a=function(c){var n,e,g,I,a,d;for(t(c)||(c=[c]),e=0;e<c.length;e+=1)if("string"!=typeof c[e])throw new l(c[e]);for(n=[],e=1;e<arguments.length;e+=1)n.push(arguments[e]);for(a=[],e=0;e<c.length;e+=1)if(this.eventMap.hasOwnProperty(c[e]))for(I in g=this.eventMap[c[e]])g.hasOwnProperty(I)&&a.push(g[I].eventHandler);for(d=this.busContext,e=0;e<a.length;e+=1)a[e].apply(d,n)};n.prototype.emit=a,n.prototype.trigger=a;var d=function(c,n){var e,g,a,d,i;for((e=t(c))||(c=[c]),g=0;g<c.length;g+=1)if("string"!=typeof c[g])throw new l(c[g]);if("function"!=typeof n)throw new I(n);for(i=[],g=0;g<c.length;g+=1)a={eventString:c[g],eventHandler:n},d=C.create(),i.push(d),this.eventMap.hasOwnProperty(c[g])||(this.eventMap[c[g]]={}),this.eventMap[c[g]][d]=a,this.routeMap[d]=a;return e?i:i[0]};n.prototype.on=d,n.prototype.listen=d;n.prototype.once=function(c,n){var t,e,l;if("function"!=typeof n)throw new I(n);return t=this,l=!1,e=this.on(c,(function(){l||(l=!0,t.off(e),n.apply(this,arguments))}))};var i=function(c){var n,l,I,a,d;if(void 0===c)return this.routeMap={},void(this.eventMap={});t(c)||(c=[c]);var i=[];for(c=i=i.concat.apply(i,c),n=0;n<c.length;n+=1)if("string"!=typeof c[n])throw new g(c[n]);for(n=0;n<c.length;n+=1)if(this.routeMap.hasOwnProperty(c[n]))l=this.routeMap[c[n]],delete this.routeMap[c[n]],delete this.eventMap[l.eventString][c[n]],e(this.eventMap[l.eventString])&&delete this.eventMap[l.eventString];else if(I=c[n],this.eventMap.hasOwnProperty(I)){for(d in a=this.eventMap[I])a.hasOwnProperty(d)&&delete this.routeMap[d];delete this.eventMap[I]}};n.prototype.off=i,n.prototype.removeListener=i;var C=function(){var c={create:function(){return Math.random().toString().substring(2)}};return c}();c.version="3.1.0"})?e.apply(n,l):e)||(c.exports=g)}()},function(c,n,t){var e,l,g=t(30),I=t(31),a=0,d=0;c.exports=function(c,n,t){var i=n&&t||0,C=n||[],F=(c=c||{}).node||e,r=void 0!==c.clockseq?c.clockseq:l;if(null==F||null==r){var X=g();null==F&&(F=e=[1|X[0],X[1],X[2],X[3],X[4],X[5]]),null==r&&(r=l=16383&(X[6]<<8|X[7]))}var o=void 0!==c.msecs?c.msecs:(new Date).getTime(),s=void 0!==c.nsecs?c.nsecs:d+1,Z=o-a+(s-d)/1e4;if(Z<0&&void 0===c.clockseq&&(r=r+1&16383),(Z<0||o>a)&&void 0===c.nsecs&&(s=0),s>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");a=o,d=s,l=r;var B=(1e4*(268435455&(o+=122192928e5))+s)%4294967296;C[i++]=B>>>24&255,C[i++]=B>>>16&255,C[i++]=B>>>8&255,C[i++]=255&B;var V=o/4294967296*1e4&268435455;C[i++]=V>>>8&255,C[i++]=255&V,C[i++]=V>>>24&15|16,C[i++]=V>>>16&255,C[i++]=r>>>8|128,C[i++]=255&r;for(var A=0;A<6;++A)C[i+A]=F[A];return n||I(C)}},function(c,n,t){var e=t(30),l=t(31);c.exports=function(c,n,t){var g=n&&t||0;"string"==typeof c&&(n="binary"===c?new Array(16):null,c=null);var I=(c=c||{}).random||(c.rng||e)();if(I[6]=15&I[6]|64,I[8]=63&I[8]|128,n)for(var a=0;a<16;++a)n[g+a]=I[a];return n||l(I)}},function(c,n){c.exports=function(c){return c.webpackPolyfill||(c.deprecate=function(){},c.paths=[],c.children||(c.children=[]),Object.defineProperty(c,"loaded",{enumerable:!0,get:function(){return c.l}}),Object.defineProperty(c,"id",{enumerable:!0,get:function(){return c.i}}),c.webpackPolyfill=1),c}},function(c,n,t){"use strict";var e=t(3),l=t(32),g=t(58),I=t(22);function a(c){var n=new g(c),t=l(g.prototype.request,n);return e.extend(t,g.prototype,n),e.extend(t,n),t}var d=a(I);d.Axios=g,d.create=function(c){return a(e.merge(I,c))},d.Cancel=t(36),d.CancelToken=t(71),d.isCancel=t(35),d.all=function(c){return Promise.all(c)},d.spread=t(72),c.exports=d,c.exports.default=d},function(c,n){
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
c.exports=function(c){return null!=c&&null!=c.constructor&&"function"==typeof c.constructor.isBuffer&&c.constructor.isBuffer(c)}},function(c,n,t){"use strict";var e=t(22),l=t(3),g=t(66),I=t(67);function a(c){this.defaults=c,this.interceptors={request:new g,response:new g}}a.prototype.request=function(c){"string"==typeof c&&(c=l.merge({url:arguments[0]},arguments[1])),(c=l.merge(e,{method:"get"},this.defaults,c)).method=c.method.toLowerCase();var n=[I,void 0],t=Promise.resolve(c);for(this.interceptors.request.forEach((function(c){n.unshift(c.fulfilled,c.rejected)})),this.interceptors.response.forEach((function(c){n.push(c.fulfilled,c.rejected)}));n.length;)t=t.then(n.shift(),n.shift());return t},l.forEach(["delete","get","head","options"],(function(c){a.prototype[c]=function(n,t){return this.request(l.merge(t||{},{method:c,url:n}))}})),l.forEach(["post","put","patch"],(function(c){a.prototype[c]=function(n,t,e){return this.request(l.merge(e||{},{method:c,url:n,data:t}))}})),c.exports=a},function(c,n,t){"use strict";var e=t(3);c.exports=function(c,n){e.forEach(c,(function(t,e){e!==n&&e.toUpperCase()===n.toUpperCase()&&(c[n]=t,delete c[e])}))}},function(c,n,t){"use strict";var e=t(34);c.exports=function(c,n,t){var l=t.config.validateStatus;t.status&&l&&!l(t.status)?n(e("Request failed with status code "+t.status,t.config,null,t.request,t)):c(t)}},function(c,n,t){"use strict";c.exports=function(c,n,t,e,l){return c.config=n,t&&(c.code=t),c.request=e,c.response=l,c}},function(c,n,t){"use strict";var e=t(3);function l(c){return encodeURIComponent(c).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}c.exports=function(c,n,t){if(!n)return c;var g;if(t)g=t(n);else if(e.isURLSearchParams(n))g=n.toString();else{var I=[];e.forEach(n,(function(c,n){null!=c&&(e.isArray(c)?n+="[]":c=[c],e.forEach(c,(function(c){e.isDate(c)?c=c.toISOString():e.isObject(c)&&(c=JSON.stringify(c)),I.push(l(n)+"="+l(c))})))})),g=I.join("&")}return g&&(c+=(-1===c.indexOf("?")?"?":"&")+g),c}},function(c,n,t){"use strict";var e=t(3),l=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];c.exports=function(c){var n,t,g,I={};return c?(e.forEach(c.split("\n"),(function(c){if(g=c.indexOf(":"),n=e.trim(c.substr(0,g)).toLowerCase(),t=e.trim(c.substr(g+1)),n){if(I[n]&&l.indexOf(n)>=0)return;I[n]="set-cookie"===n?(I[n]?I[n]:[]).concat([t]):I[n]?I[n]+", "+t:t}})),I):I}},function(c,n,t){"use strict";var e=t(3);c.exports=e.isStandardBrowserEnv()?function(){var c,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function l(c){var e=c;return n&&(t.setAttribute("href",e),e=t.href),t.setAttribute("href",e),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return c=l(window.location.href),function(n){var t=e.isString(n)?l(n):n;return t.protocol===c.protocol&&t.host===c.host}}():function(){return!0}},function(c,n,t){"use strict";var e=t(3);c.exports=e.isStandardBrowserEnv()?{write:function(c,n,t,l,g,I){var a=[];a.push(c+"="+encodeURIComponent(n)),e.isNumber(t)&&a.push("expires="+new Date(t).toGMTString()),e.isString(l)&&a.push("path="+l),e.isString(g)&&a.push("domain="+g),!0===I&&a.push("secure"),document.cookie=a.join("; ")},read:function(c){var n=document.cookie.match(new RegExp("(^|;\\s*)("+c+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(c){this.write(c,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(c,n,t){"use strict";var e=t(3);function l(){this.handlers=[]}l.prototype.use=function(c,n){return this.handlers.push({fulfilled:c,rejected:n}),this.handlers.length-1},l.prototype.eject=function(c){this.handlers[c]&&(this.handlers[c]=null)},l.prototype.forEach=function(c){e.forEach(this.handlers,(function(n){null!==n&&c(n)}))},c.exports=l},function(c,n,t){"use strict";var e=t(3),l=t(68),g=t(35),I=t(22),a=t(69),d=t(70);function i(c){c.cancelToken&&c.cancelToken.throwIfRequested()}c.exports=function(c){return i(c),c.baseURL&&!a(c.url)&&(c.url=d(c.baseURL,c.url)),c.headers=c.headers||{},c.data=l(c.data,c.headers,c.transformRequest),c.headers=e.merge(c.headers.common||{},c.headers[c.method]||{},c.headers||{}),e.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete c.headers[n]})),(c.adapter||I.adapter)(c).then((function(n){return i(c),n.data=l(n.data,n.headers,c.transformResponse),n}),(function(n){return g(n)||(i(c),n&&n.response&&(n.response.data=l(n.response.data,n.response.headers,c.transformResponse))),Promise.reject(n)}))}},function(c,n,t){"use strict";var e=t(3);c.exports=function(c,n,t){return e.forEach(t,(function(t){c=t(c,n)})),c}},function(c,n,t){"use strict";c.exports=function(c){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(c)}},function(c,n,t){"use strict";c.exports=function(c,n){return n?c.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):c}},function(c,n,t){"use strict";var e=t(36);function l(c){if("function"!=typeof c)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(c){n=c}));var t=this;c((function(c){t.reason||(t.reason=new e(c),n(t.reason))}))}l.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},l.source=function(){var c;return{token:new l((function(n){c=n})),cancel:c}},c.exports=l},function(c,n,t){"use strict";c.exports=function(c){return function(n){return c.apply(null,n)}}},function(c,n,t){"use strict";var e=t(74),l=t(97);function g(c){return function(){throw new Error("Function "+c+" is deprecated and cannot be used.")}}c.exports.Type=t(1),c.exports.Schema=t(13),c.exports.FAILSAFE_SCHEMA=t(23),c.exports.JSON_SCHEMA=t(38),c.exports.CORE_SCHEMA=t(37),c.exports.DEFAULT_SAFE_SCHEMA=t(16),c.exports.DEFAULT_FULL_SCHEMA=t(20),c.exports.load=e.load,c.exports.loadAll=e.loadAll,c.exports.safeLoad=e.safeLoad,c.exports.safeLoadAll=e.safeLoadAll,c.exports.dump=l.dump,c.exports.safeDump=l.safeDump,c.exports.YAMLException=t(15),c.exports.MINIMAL_SCHEMA=t(23),c.exports.SAFE_SCHEMA=t(16),c.exports.DEFAULT_SCHEMA=t(20),c.exports.scan=g("scan"),c.exports.parse=g("parse"),c.exports.compose=g("compose"),c.exports.addConstructor=g("addConstructor")},function(c,n,t){"use strict";var e=t(12),l=t(15),g=t(75),I=t(16),a=t(20),d=Object.prototype.hasOwnProperty,i=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,C=/[\x85\u2028\u2029]/,F=/[,\[\]\{\}]/,r=/^(?:!|!!|![a-z\-]+!)$/i,X=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function o(c){return Object.prototype.toString.call(c)}function s(c){return 10===c||13===c}function Z(c){return 9===c||32===c}function B(c){return 9===c||32===c||10===c||13===c}function V(c){return 44===c||91===c||93===c||123===c||125===c}function A(c){var n;return 48<=c&&c<=57?c-48:97<=(n=32|c)&&n<=102?n-97+10:-1}function G(c){return 48===c?"\0":97===c?"":98===c?"\b":116===c||9===c?"\t":110===c?"\n":118===c?"\v":102===c?"\f":114===c?"\r":101===c?"":32===c?" ":34===c?'"':47===c?"/":92===c?"\\":78===c?"Â":95===c?"Â ":76===c?"\u2028":80===c?"\u2029":""}function b(c){return c<=65535?String.fromCharCode(c):String.fromCharCode(55296+(c-65536>>10),56320+(c-65536&1023))}for(var h=new Array(256),U=new Array(256),Q=0;Q<256;Q++)h[Q]=G(Q)?1:0,U[Q]=G(Q);function u(c,n){this.input=c,this.filename=n.filename||null,this.schema=n.schema||a,this.onWarning=n.onWarning||null,this.legacy=n.legacy||!1,this.json=n.json||!1,this.listener=n.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=c.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.documents=[]}function W(c,n){return new l(n,new g(c.filename,c.input,c.position,c.line,c.position-c.lineStart))}function m(c,n){throw W(c,n)}function R(c,n){c.onWarning&&c.onWarning.call(null,W(c,n))}var J={YAML:function(c,n,t){var e,l,g;null!==c.version&&m(c,"duplication of %YAML directive"),1!==t.length&&m(c,"YAML directive accepts exactly one argument"),null===(e=/^([0-9]+)\.([0-9]+)$/.exec(t[0]))&&m(c,"ill-formed argument of the YAML directive"),l=parseInt(e[1],10),g=parseInt(e[2],10),1!==l&&m(c,"unacceptable YAML version of the document"),c.version=t[0],c.checkLineBreaks=g<2,1!==g&&2!==g&&R(c,"unsupported YAML version of the document")},TAG:function(c,n,t){var e,l;2!==t.length&&m(c,"TAG directive accepts exactly two arguments"),e=t[0],l=t[1],r.test(e)||m(c,"ill-formed tag handle (first argument) of the TAG directive"),d.call(c.tagMap,e)&&m(c,'there is a previously declared suffix for "'+e+'" tag handle'),X.test(l)||m(c,"ill-formed tag prefix (second argument) of the TAG directive"),c.tagMap[e]=l}};function p(c,n,t,e){var l,g,I,a;if(n<t){if(a=c.input.slice(n,t),e)for(l=0,g=a.length;l<g;l+=1)9===(I=a.charCodeAt(l))||32<=I&&I<=1114111||m(c,"expected valid JSON character");else i.test(a)&&m(c,"the stream contains non-printable characters");c.result+=a}}function x(c,n,t,l){var g,I,a,i;for(e.isObject(t)||m(c,"cannot merge mappings; the provided source object is unacceptable"),a=0,i=(g=Object.keys(t)).length;a<i;a+=1)I=g[a],d.call(n,I)||(n[I]=t[I],l[I]=!0)}function N(c,n,t,e,l,g,I,a){var i,C;if(Array.isArray(l))for(i=0,C=(l=Array.prototype.slice.call(l)).length;i<C;i+=1)Array.isArray(l[i])&&m(c,"nested arrays are not supported inside keys"),"object"==typeof l&&"[object Object]"===o(l[i])&&(l[i]="[object Object]");if("object"==typeof l&&"[object Object]"===o(l)&&(l="[object Object]"),l=String(l),null===n&&(n={}),"tag:yaml.org,2002:merge"===e)if(Array.isArray(g))for(i=0,C=g.length;i<C;i+=1)x(c,n,g[i],t);else x(c,n,g,t);else c.json||d.call(t,l)||!d.call(n,l)||(c.line=I||c.line,c.position=a||c.position,m(c,"duplicated mapping key")),n[l]=g,delete t[l];return n}function Y(c){var n;10===(n=c.input.charCodeAt(c.position))?c.position++:13===n?(c.position++,10===c.input.charCodeAt(c.position)&&c.position++):m(c,"a line break is expected"),c.line+=1,c.lineStart=c.position}function y(c,n,t){for(var e=0,l=c.input.charCodeAt(c.position);0!==l;){for(;Z(l);)l=c.input.charCodeAt(++c.position);if(n&&35===l)do{l=c.input.charCodeAt(++c.position)}while(10!==l&&13!==l&&0!==l);if(!s(l))break;for(Y(c),l=c.input.charCodeAt(c.position),e++,c.lineIndent=0;32===l;)c.lineIndent++,l=c.input.charCodeAt(++c.position)}return-1!==t&&0!==e&&c.lineIndent<t&&R(c,"deficient indentation"),e}function S(c){var n,t=c.position;return!(45!==(n=c.input.charCodeAt(t))&&46!==n||n!==c.input.charCodeAt(t+1)||n!==c.input.charCodeAt(t+2)||(t+=3,0!==(n=c.input.charCodeAt(t))&&!B(n)))}function k(c,n){1===n?c.result+=" ":n>1&&(c.result+=e.repeat("\n",n-1))}function H(c,n){var t,e,l=c.tag,g=c.anchor,I=[],a=!1;for(null!==c.anchor&&(c.anchorMap[c.anchor]=I),e=c.input.charCodeAt(c.position);0!==e&&45===e&&B(c.input.charCodeAt(c.position+1));)if(a=!0,c.position++,y(c,!0,-1)&&c.lineIndent<=n)I.push(null),e=c.input.charCodeAt(c.position);else if(t=c.line,v(c,n,3,!1,!0),I.push(c.result),y(c,!0,-1),e=c.input.charCodeAt(c.position),(c.line===t||c.lineIndent>n)&&0!==e)m(c,"bad indentation of a sequence entry");else if(c.lineIndent<n)break;return!!a&&(c.tag=l,c.anchor=g,c.kind="sequence",c.result=I,!0)}function E(c){var n,t,e,l,g=!1,I=!1;if(33!==(l=c.input.charCodeAt(c.position)))return!1;if(null!==c.tag&&m(c,"duplication of a tag property"),60===(l=c.input.charCodeAt(++c.position))?(g=!0,l=c.input.charCodeAt(++c.position)):33===l?(I=!0,t="!!",l=c.input.charCodeAt(++c.position)):t="!",n=c.position,g){do{l=c.input.charCodeAt(++c.position)}while(0!==l&&62!==l);c.position<c.length?(e=c.input.slice(n,c.position),l=c.input.charCodeAt(++c.position)):m(c,"unexpected end of the stream within a verbatim tag")}else{for(;0!==l&&!B(l);)33===l&&(I?m(c,"tag suffix cannot contain exclamation marks"):(t=c.input.slice(n-1,c.position+1),r.test(t)||m(c,"named tag handle cannot contain such characters"),I=!0,n=c.position+1)),l=c.input.charCodeAt(++c.position);e=c.input.slice(n,c.position),F.test(e)&&m(c,"tag suffix cannot contain flow indicator characters")}return e&&!X.test(e)&&m(c,"tag name cannot contain such characters: "+e),g?c.tag=e:d.call(c.tagMap,t)?c.tag=c.tagMap[t]+e:"!"===t?c.tag="!"+e:"!!"===t?c.tag="tag:yaml.org,2002:"+e:m(c,'undeclared tag handle "'+t+'"'),!0}function T(c){var n,t;if(38!==(t=c.input.charCodeAt(c.position)))return!1;for(null!==c.anchor&&m(c,"duplication of an anchor property"),t=c.input.charCodeAt(++c.position),n=c.position;0!==t&&!B(t)&&!V(t);)t=c.input.charCodeAt(++c.position);return c.position===n&&m(c,"name of an anchor node must contain at least one character"),c.anchor=c.input.slice(n,c.position),!0}function v(c,n,t,l,g){var I,a,i,C,F,r,X,o,G=1,Q=!1,u=!1;if(null!==c.listener&&c.listener("open",c),c.tag=null,c.anchor=null,c.kind=null,c.result=null,I=a=i=4===t||3===t,l&&y(c,!0,-1)&&(Q=!0,c.lineIndent>n?G=1:c.lineIndent===n?G=0:c.lineIndent<n&&(G=-1)),1===G)for(;E(c)||T(c);)y(c,!0,-1)?(Q=!0,i=I,c.lineIndent>n?G=1:c.lineIndent===n?G=0:c.lineIndent<n&&(G=-1)):i=!1;if(i&&(i=Q||g),1!==G&&4!==t||(X=1===t||2===t?n:n+1,o=c.position-c.lineStart,1===G?i&&(H(c,o)||function(c,n,t){var e,l,g,I,a,d=c.tag,i=c.anchor,C={},F={},r=null,X=null,o=null,s=!1,V=!1;for(null!==c.anchor&&(c.anchorMap[c.anchor]=C),a=c.input.charCodeAt(c.position);0!==a;){if(e=c.input.charCodeAt(c.position+1),g=c.line,I=c.position,63!==a&&58!==a||!B(e)){if(!v(c,t,2,!1,!0))break;if(c.line===g){for(a=c.input.charCodeAt(c.position);Z(a);)a=c.input.charCodeAt(++c.position);if(58===a)B(a=c.input.charCodeAt(++c.position))||m(c,"a whitespace character is expected after the key-value separator within a block mapping"),s&&(N(c,C,F,r,X,null),r=X=o=null),V=!0,s=!1,l=!1,r=c.tag,X=c.result;else{if(!V)return c.tag=d,c.anchor=i,!0;m(c,"can not read an implicit mapping pair; a colon is missed")}}else{if(!V)return c.tag=d,c.anchor=i,!0;m(c,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===a?(s&&(N(c,C,F,r,X,null),r=X=o=null),V=!0,s=!0,l=!0):s?(s=!1,l=!0):m(c,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),c.position+=1,a=e;if((c.line===g||c.lineIndent>n)&&(v(c,n,4,!0,l)&&(s?X=c.result:o=c.result),s||(N(c,C,F,r,X,o,g,I),r=X=o=null),y(c,!0,-1),a=c.input.charCodeAt(c.position)),c.lineIndent>n&&0!==a)m(c,"bad indentation of a mapping entry");else if(c.lineIndent<n)break}return s&&N(c,C,F,r,X,null),V&&(c.tag=d,c.anchor=i,c.kind="mapping",c.result=C),V}(c,o,X))||function(c,n){var t,e,l,g,I,a,d,i,C,F,r=!0,X=c.tag,o=c.anchor,s={};if(91===(F=c.input.charCodeAt(c.position)))l=93,a=!1,e=[];else{if(123!==F)return!1;l=125,a=!0,e={}}for(null!==c.anchor&&(c.anchorMap[c.anchor]=e),F=c.input.charCodeAt(++c.position);0!==F;){if(y(c,!0,n),(F=c.input.charCodeAt(c.position))===l)return c.position++,c.tag=X,c.anchor=o,c.kind=a?"mapping":"sequence",c.result=e,!0;r||m(c,"missed comma between flow collection entries"),C=null,g=I=!1,63===F&&B(c.input.charCodeAt(c.position+1))&&(g=I=!0,c.position++,y(c,!0,n)),t=c.line,v(c,n,1,!1,!0),i=c.tag,d=c.result,y(c,!0,n),F=c.input.charCodeAt(c.position),!I&&c.line!==t||58!==F||(g=!0,F=c.input.charCodeAt(++c.position),y(c,!0,n),v(c,n,1,!1,!0),C=c.result),a?N(c,e,s,i,d,C):g?e.push(N(c,null,s,i,d,C)):e.push(d),y(c,!0,n),44===(F=c.input.charCodeAt(c.position))?(r=!0,F=c.input.charCodeAt(++c.position)):r=!1}m(c,"unexpected end of the stream within a flow collection")}(c,X)?u=!0:(a&&function(c,n){var t,l,g,I,a,d=1,i=!1,C=!1,F=n,r=0,X=!1;if(124===(I=c.input.charCodeAt(c.position)))l=!1;else{if(62!==I)return!1;l=!0}for(c.kind="scalar",c.result="";0!==I;)if(43===(I=c.input.charCodeAt(++c.position))||45===I)1===d?d=43===I?3:2:m(c,"repeat of a chomping mode identifier");else{if(!((g=48<=(a=I)&&a<=57?a-48:-1)>=0))break;0===g?m(c,"bad explicit indentation width of a block scalar; it cannot be less than one"):C?m(c,"repeat of an indentation width identifier"):(F=n+g-1,C=!0)}if(Z(I)){do{I=c.input.charCodeAt(++c.position)}while(Z(I));if(35===I)do{I=c.input.charCodeAt(++c.position)}while(!s(I)&&0!==I)}for(;0!==I;){for(Y(c),c.lineIndent=0,I=c.input.charCodeAt(c.position);(!C||c.lineIndent<F)&&32===I;)c.lineIndent++,I=c.input.charCodeAt(++c.position);if(!C&&c.lineIndent>F&&(F=c.lineIndent),s(I))r++;else{if(c.lineIndent<F){3===d?c.result+=e.repeat("\n",i?1+r:r):1===d&&i&&(c.result+="\n");break}for(l?Z(I)?(X=!0,c.result+=e.repeat("\n",i?1+r:r)):X?(X=!1,c.result+=e.repeat("\n",r+1)):0===r?i&&(c.result+=" "):c.result+=e.repeat("\n",r):c.result+=e.repeat("\n",i?1+r:r),i=!0,C=!0,r=0,t=c.position;!s(I)&&0!==I;)I=c.input.charCodeAt(++c.position);p(c,t,c.position,!1)}}return!0}(c,X)||function(c,n){var t,e,l;if(39!==(t=c.input.charCodeAt(c.position)))return!1;for(c.kind="scalar",c.result="",c.position++,e=l=c.position;0!==(t=c.input.charCodeAt(c.position));)if(39===t){if(p(c,e,c.position,!0),39!==(t=c.input.charCodeAt(++c.position)))return!0;e=c.position,c.position++,l=c.position}else s(t)?(p(c,e,l,!0),k(c,y(c,!1,n)),e=l=c.position):c.position===c.lineStart&&S(c)?m(c,"unexpected end of the document within a single quoted scalar"):(c.position++,l=c.position);m(c,"unexpected end of the stream within a single quoted scalar")}(c,X)||function(c,n){var t,e,l,g,I,a,d;if(34!==(a=c.input.charCodeAt(c.position)))return!1;for(c.kind="scalar",c.result="",c.position++,t=e=c.position;0!==(a=c.input.charCodeAt(c.position));){if(34===a)return p(c,t,c.position,!0),c.position++,!0;if(92===a){if(p(c,t,c.position,!0),s(a=c.input.charCodeAt(++c.position)))y(c,!1,n);else if(a<256&&h[a])c.result+=U[a],c.position++;else if((I=120===(d=a)?2:117===d?4:85===d?8:0)>0){for(l=I,g=0;l>0;l--)(I=A(a=c.input.charCodeAt(++c.position)))>=0?g=(g<<4)+I:m(c,"expected hexadecimal character");c.result+=b(g),c.position++}else m(c,"unknown escape sequence");t=e=c.position}else s(a)?(p(c,t,e,!0),k(c,y(c,!1,n)),t=e=c.position):c.position===c.lineStart&&S(c)?m(c,"unexpected end of the document within a double quoted scalar"):(c.position++,e=c.position)}m(c,"unexpected end of the stream within a double quoted scalar")}(c,X)?u=!0:!function(c){var n,t,e;if(42!==(e=c.input.charCodeAt(c.position)))return!1;for(e=c.input.charCodeAt(++c.position),n=c.position;0!==e&&!B(e)&&!V(e);)e=c.input.charCodeAt(++c.position);return c.position===n&&m(c,"name of an alias node must contain at least one character"),t=c.input.slice(n,c.position),c.anchorMap.hasOwnProperty(t)||m(c,'unidentified alias "'+t+'"'),c.result=c.anchorMap[t],y(c,!0,-1),!0}(c)?function(c,n,t){var e,l,g,I,a,d,i,C,F=c.kind,r=c.result;if(B(C=c.input.charCodeAt(c.position))||V(C)||35===C||38===C||42===C||33===C||124===C||62===C||39===C||34===C||37===C||64===C||96===C)return!1;if((63===C||45===C)&&(B(e=c.input.charCodeAt(c.position+1))||t&&V(e)))return!1;for(c.kind="scalar",c.result="",l=g=c.position,I=!1;0!==C;){if(58===C){if(B(e=c.input.charCodeAt(c.position+1))||t&&V(e))break}else if(35===C){if(B(c.input.charCodeAt(c.position-1)))break}else{if(c.position===c.lineStart&&S(c)||t&&V(C))break;if(s(C)){if(a=c.line,d=c.lineStart,i=c.lineIndent,y(c,!1,-1),c.lineIndent>=n){I=!0,C=c.input.charCodeAt(c.position);continue}c.position=g,c.line=a,c.lineStart=d,c.lineIndent=i;break}}I&&(p(c,l,g,!1),k(c,c.line-a),l=g=c.position,I=!1),Z(C)||(g=c.position+1),C=c.input.charCodeAt(++c.position)}return p(c,l,g,!1),!!c.result||(c.kind=F,c.result=r,!1)}(c,X,1===t)&&(u=!0,null===c.tag&&(c.tag="?")):(u=!0,null===c.tag&&null===c.anchor||m(c,"alias node should not have any properties")),null!==c.anchor&&(c.anchorMap[c.anchor]=c.result)):0===G&&(u=i&&H(c,o))),null!==c.tag&&"!"!==c.tag)if("?"===c.tag){for(C=0,F=c.implicitTypes.length;C<F;C+=1)if((r=c.implicitTypes[C]).resolve(c.result)){c.result=r.construct(c.result),c.tag=r.tag,null!==c.anchor&&(c.anchorMap[c.anchor]=c.result);break}}else d.call(c.typeMap[c.kind||"fallback"],c.tag)?(r=c.typeMap[c.kind||"fallback"][c.tag],null!==c.result&&r.kind!==c.kind&&m(c,"unacceptable node kind for !<"+c.tag+'> tag; it should be "'+r.kind+'", not "'+c.kind+'"'),r.resolve(c.result)?(c.result=r.construct(c.result),null!==c.anchor&&(c.anchorMap[c.anchor]=c.result)):m(c,"cannot resolve a node with !<"+c.tag+"> explicit tag")):m(c,"unknown tag !<"+c.tag+">");return null!==c.listener&&c.listener("close",c),null!==c.tag||null!==c.anchor||u}function z(c){var n,t,e,l,g=c.position,I=!1;for(c.version=null,c.checkLineBreaks=c.legacy,c.tagMap={},c.anchorMap={};0!==(l=c.input.charCodeAt(c.position))&&(y(c,!0,-1),l=c.input.charCodeAt(c.position),!(c.lineIndent>0||37!==l));){for(I=!0,l=c.input.charCodeAt(++c.position),n=c.position;0!==l&&!B(l);)l=c.input.charCodeAt(++c.position);for(e=[],(t=c.input.slice(n,c.position)).length<1&&m(c,"directive name must not be less than one character in length");0!==l;){for(;Z(l);)l=c.input.charCodeAt(++c.position);if(35===l){do{l=c.input.charCodeAt(++c.position)}while(0!==l&&!s(l));break}if(s(l))break;for(n=c.position;0!==l&&!B(l);)l=c.input.charCodeAt(++c.position);e.push(c.input.slice(n,c.position))}0!==l&&Y(c),d.call(J,t)?J[t](c,t,e):R(c,'unknown document directive "'+t+'"')}y(c,!0,-1),0===c.lineIndent&&45===c.input.charCodeAt(c.position)&&45===c.input.charCodeAt(c.position+1)&&45===c.input.charCodeAt(c.position+2)?(c.position+=3,y(c,!0,-1)):I&&m(c,"directives end mark is expected"),v(c,c.lineIndent-1,4,!1,!0),y(c,!0,-1),c.checkLineBreaks&&C.test(c.input.slice(g,c.position))&&R(c,"non-ASCII line breaks are interpreted as content"),c.documents.push(c.result),c.position===c.lineStart&&S(c)?46===c.input.charCodeAt(c.position)&&(c.position+=3,y(c,!0,-1)):c.position<c.length-1&&m(c,"end of the stream or a document separator is expected")}function D(c,n){n=n||{},0!==(c=String(c)).length&&(10!==c.charCodeAt(c.length-1)&&13!==c.charCodeAt(c.length-1)&&(c+="\n"),65279===c.charCodeAt(0)&&(c=c.slice(1)));var t=new u(c,n);for(t.input+="\0";32===t.input.charCodeAt(t.position);)t.lineIndent+=1,t.position+=1;for(;t.position<t.length-1;)z(t);return t.documents}function f(c,n,t){var e,l,g=D(c,t);if("function"!=typeof n)return g;for(e=0,l=g.length;e<l;e+=1)n(g[e])}function w(c,n){var t=D(c,n);if(0!==t.length){if(1===t.length)return t[0];throw new l("expected a single document in the stream, but found more")}}c.exports.loadAll=f,c.exports.load=w,c.exports.safeLoadAll=function(c,n,t){if("function"!=typeof n)return f(c,e.extend({schema:I},t));f(c,n,e.extend({schema:I},t))},c.exports.safeLoad=function(c,n){return w(c,e.extend({schema:I},n))}},function(c,n,t){"use strict";var e=t(12);function l(c,n,t,e,l){this.name=c,this.buffer=n,this.position=t,this.line=e,this.column=l}l.prototype.getSnippet=function(c,n){var t,l,g,I,a;if(!this.buffer)return null;for(c=c||4,n=n||75,t="",l=this.position;l>0&&-1==="\0\r\nÂ\u2028\u2029".indexOf(this.buffer.charAt(l-1));)if(l-=1,this.position-l>n/2-1){t=" ... ",l+=5;break}for(g="",I=this.position;I<this.buffer.length&&-1==="\0\r\nÂ\u2028\u2029".indexOf(this.buffer.charAt(I));)if((I+=1)-this.position>n/2-1){g=" ... ",I-=5;break}return a=this.buffer.slice(l,I),e.repeat(" ",c)+t+a+g+"\n"+e.repeat(" ",c+this.position-l+t.length)+"^"},l.prototype.toString=function(c){var n,t="";return this.name&&(t+='in "'+this.name+'" '),t+="at line "+(this.line+1)+", column "+(this.column+1),c||(n=this.getSnippet())&&(t+=":\n"+n),t},c.exports=l},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:str",{kind:"scalar",construct:function(c){return null!==c?c:""}})},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(c){return null!==c?c:[]}})},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:map",{kind:"mapping",construct:function(c){return null!==c?c:{}}})},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(c){if(null===c)return!0;var n=c.length;return 1===n&&"~"===c||4===n&&("null"===c||"Null"===c||"NULL"===c)},construct:function(){return null},predicate:function(c){return null===c},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"}},defaultStyle:"lowercase"})},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(c){if(null===c)return!1;var n=c.length;return 4===n&&("true"===c||"True"===c||"TRUE"===c)||5===n&&("false"===c||"False"===c||"FALSE"===c)},construct:function(c){return"true"===c||"True"===c||"TRUE"===c},predicate:function(c){return"[object Boolean]"===Object.prototype.toString.call(c)},represent:{lowercase:function(c){return c?"true":"false"},uppercase:function(c){return c?"TRUE":"FALSE"},camelcase:function(c){return c?"True":"False"}},defaultStyle:"lowercase"})},function(c,n,t){"use strict";var e=t(12),l=t(1);function g(c){return 48<=c&&c<=55}function I(c){return 48<=c&&c<=57}c.exports=new l("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(c){if(null===c)return!1;var n,t,e=c.length,l=0,a=!1;if(!e)return!1;if("-"!==(n=c[l])&&"+"!==n||(n=c[++l]),"0"===n){if(l+1===e)return!0;if("b"===(n=c[++l])){for(l++;l<e;l++)if("_"!==(n=c[l])){if("0"!==n&&"1"!==n)return!1;a=!0}return a&&"_"!==n}if("x"===n){for(l++;l<e;l++)if("_"!==(n=c[l])){if(!(48<=(t=c.charCodeAt(l))&&t<=57||65<=t&&t<=70||97<=t&&t<=102))return!1;a=!0}return a&&"_"!==n}for(;l<e;l++)if("_"!==(n=c[l])){if(!g(c.charCodeAt(l)))return!1;a=!0}return a&&"_"!==n}if("_"===n)return!1;for(;l<e;l++)if("_"!==(n=c[l])){if(":"===n)break;if(!I(c.charCodeAt(l)))return!1;a=!0}return!(!a||"_"===n)&&(":"!==n||/^(:[0-5]?[0-9])+$/.test(c.slice(l)))},construct:function(c){var n,t,e=c,l=1,g=[];return-1!==e.indexOf("_")&&(e=e.replace(/_/g,"")),"-"!==(n=e[0])&&"+"!==n||("-"===n&&(l=-1),n=(e=e.slice(1))[0]),"0"===e?0:"0"===n?"b"===e[1]?l*parseInt(e.slice(2),2):"x"===e[1]?l*parseInt(e,16):l*parseInt(e,8):-1!==e.indexOf(":")?(e.split(":").forEach((function(c){g.unshift(parseInt(c,10))})),e=0,t=1,g.forEach((function(c){e+=c*t,t*=60})),l*e):l*parseInt(e,10)},predicate:function(c){return"[object Number]"===Object.prototype.toString.call(c)&&c%1==0&&!e.isNegativeZero(c)},represent:{binary:function(c){return c>=0?"0b"+c.toString(2):"-0b"+c.toString(2).slice(1)},octal:function(c){return c>=0?"0"+c.toString(8):"-0"+c.toString(8).slice(1)},decimal:function(c){return c.toString(10)},hexadecimal:function(c){return c>=0?"0x"+c.toString(16).toUpperCase():"-0x"+c.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},function(c,n,t){"use strict";var e=t(12),l=t(1),g=new RegExp("^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$");var I=/^[-+]?[0-9]+e/;c.exports=new l("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(c){return null!==c&&!(!g.test(c)||"_"===c[c.length-1])},construct:function(c){var n,t,e,l;return t="-"===(n=c.replace(/_/g,"").toLowerCase())[0]?-1:1,l=[],"+-".indexOf(n[0])>=0&&(n=n.slice(1)),".inf"===n?1===t?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===n?NaN:n.indexOf(":")>=0?(n.split(":").forEach((function(c){l.unshift(parseFloat(c,10))})),n=0,e=1,l.forEach((function(c){n+=c*e,e*=60})),t*n):t*parseFloat(n,10)},predicate:function(c){return"[object Number]"===Object.prototype.toString.call(c)&&(c%1!=0||e.isNegativeZero(c))},represent:function(c,n){var t;if(isNaN(c))switch(n){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===c)switch(n){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===c)switch(n){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(e.isNegativeZero(c))return"-0.0";return t=c.toString(10),I.test(t)?t.replace("e",".e"):t},defaultStyle:"lowercase"})},function(c,n,t){"use strict";var e=t(1),l=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),g=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");c.exports=new e("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(c){return null!==c&&(null!==l.exec(c)||null!==g.exec(c))},construct:function(c){var n,t,e,I,a,d,i,C,F=0,r=null;if(null===(n=l.exec(c))&&(n=g.exec(c)),null===n)throw new Error("Date resolve error");if(t=+n[1],e=+n[2]-1,I=+n[3],!n[4])return new Date(Date.UTC(t,e,I));if(a=+n[4],d=+n[5],i=+n[6],n[7]){for(F=n[7].slice(0,3);F.length<3;)F+="0";F=+F}return n[9]&&(r=6e4*(60*+n[10]+ +(n[11]||0)),"-"===n[9]&&(r=-r)),C=new Date(Date.UTC(t,e,I,a,d,i,F)),r&&C.setTime(C.getTime()-r),C},instanceOf:Date,represent:function(c){return c.toISOString()}})},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(c){return"<<"===c||null===c}})},function(c,n,t){"use strict";var e;try{e=t(86).Buffer}catch(c){}var l=t(1),g="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";c.exports=new l("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(c){if(null===c)return!1;var n,t,e=0,l=c.length,I=g;for(t=0;t<l;t++)if(!((n=I.indexOf(c.charAt(t)))>64)){if(n<0)return!1;e+=6}return e%8==0},construct:function(c){var n,t,l=c.replace(/[\r\n=]/g,""),I=l.length,a=g,d=0,i=[];for(n=0;n<I;n++)n%4==0&&n&&(i.push(d>>16&255),i.push(d>>8&255),i.push(255&d)),d=d<<6|a.indexOf(l.charAt(n));return 0===(t=I%4*6)?(i.push(d>>16&255),i.push(d>>8&255),i.push(255&d)):18===t?(i.push(d>>10&255),i.push(d>>2&255)):12===t&&i.push(d>>4&255),e?e.from?e.from(i):new e(i):i},predicate:function(c){return e&&e.isBuffer(c)},represent:function(c){var n,t,e="",l=0,I=c.length,a=g;for(n=0;n<I;n++)n%3==0&&n&&(e+=a[l>>18&63],e+=a[l>>12&63],e+=a[l>>6&63],e+=a[63&l]),l=(l<<8)+c[n];return 0===(t=I%3)?(e+=a[l>>18&63],e+=a[l>>12&63],e+=a[l>>6&63],e+=a[63&l]):2===t?(e+=a[l>>10&63],e+=a[l>>4&63],e+=a[l<<2&63],e+=a[64]):1===t&&(e+=a[l>>2&63],e+=a[l<<4&63],e+=a[64],e+=a[64]),e}})},function(c,n,t){"use strict";(function(c){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
var e=t(87),l=t(88),g=t(89);function I(){return d.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(c,n){if(I()<n)throw new RangeError("Invalid typed array length");return d.TYPED_ARRAY_SUPPORT?(c=new Uint8Array(n)).__proto__=d.prototype:(null===c&&(c=new d(n)),c.length=n),c}function d(c,n,t){if(!(d.TYPED_ARRAY_SUPPORT||this instanceof d))return new d(c,n,t);if("number"==typeof c){if("string"==typeof n)throw new Error("If encoding is specified then the first argument must be a string");return F(this,c)}return i(this,c,n,t)}function i(c,n,t,e){if("number"==typeof n)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&n instanceof ArrayBuffer?function(c,n,t,e){if(n.byteLength,t<0||n.byteLength<t)throw new RangeError("'offset' is out of bounds");if(n.byteLength<t+(e||0))throw new RangeError("'length' is out of bounds");n=void 0===t&&void 0===e?new Uint8Array(n):void 0===e?new Uint8Array(n,t):new Uint8Array(n,t,e);d.TYPED_ARRAY_SUPPORT?(c=n).__proto__=d.prototype:c=r(c,n);return c}(c,n,t,e):"string"==typeof n?function(c,n,t){"string"==typeof t&&""!==t||(t="utf8");if(!d.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');var e=0|o(n,t),l=(c=a(c,e)).write(n,t);l!==e&&(c=c.slice(0,l));return c}(c,n,t):function(c,n){if(d.isBuffer(n)){var t=0|X(n.length);return 0===(c=a(c,t)).length||n.copy(c,0,0,t),c}if(n){if("undefined"!=typeof ArrayBuffer&&n.buffer instanceof ArrayBuffer||"length"in n)return"number"!=typeof n.length||(e=n.length)!=e?a(c,0):r(c,n);if("Buffer"===n.type&&g(n.data))return r(c,n.data)}var e;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(c,n)}function C(c){if("number"!=typeof c)throw new TypeError('"size" argument must be a number');if(c<0)throw new RangeError('"size" argument must not be negative')}function F(c,n){if(C(n),c=a(c,n<0?0:0|X(n)),!d.TYPED_ARRAY_SUPPORT)for(var t=0;t<n;++t)c[t]=0;return c}function r(c,n){var t=n.length<0?0:0|X(n.length);c=a(c,t);for(var e=0;e<t;e+=1)c[e]=255&n[e];return c}function X(c){if(c>=I())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+I().toString(16)+" bytes");return 0|c}function o(c,n){if(d.isBuffer(c))return c.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(c)||c instanceof ArrayBuffer))return c.byteLength;"string"!=typeof c&&(c=""+c);var t=c.length;if(0===t)return 0;for(var e=!1;;)switch(n){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":case void 0:return v(c).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*t;case"hex":return t>>>1;case"base64":return z(c).length;default:if(e)return v(c).length;n=(""+n).toLowerCase(),e=!0}}function s(c,n,t){var e=!1;if((void 0===n||n<0)&&(n=0),n>this.length)return"";if((void 0===t||t>this.length)&&(t=this.length),t<=0)return"";if((t>>>=0)<=(n>>>=0))return"";for(c||(c="utf8");;)switch(c){case"hex":return J(this,n,t);case"utf8":case"utf-8":return W(this,n,t);case"ascii":return m(this,n,t);case"latin1":case"binary":return R(this,n,t);case"base64":return u(this,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return p(this,n,t);default:if(e)throw new TypeError("Unknown encoding: "+c);c=(c+"").toLowerCase(),e=!0}}function Z(c,n,t){var e=c[n];c[n]=c[t],c[t]=e}function B(c,n,t,e,l){if(0===c.length)return-1;if("string"==typeof t?(e=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,isNaN(t)&&(t=l?0:c.length-1),t<0&&(t=c.length+t),t>=c.length){if(l)return-1;t=c.length-1}else if(t<0){if(!l)return-1;t=0}if("string"==typeof n&&(n=d.from(n,e)),d.isBuffer(n))return 0===n.length?-1:V(c,n,t,e,l);if("number"==typeof n)return n&=255,d.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?l?Uint8Array.prototype.indexOf.call(c,n,t):Uint8Array.prototype.lastIndexOf.call(c,n,t):V(c,[n],t,e,l);throw new TypeError("val must be string, number or Buffer")}function V(c,n,t,e,l){var g,I=1,a=c.length,d=n.length;if(void 0!==e&&("ucs2"===(e=String(e).toLowerCase())||"ucs-2"===e||"utf16le"===e||"utf-16le"===e)){if(c.length<2||n.length<2)return-1;I=2,a/=2,d/=2,t/=2}function i(c,n){return 1===I?c[n]:c.readUInt16BE(n*I)}if(l){var C=-1;for(g=t;g<a;g++)if(i(c,g)===i(n,-1===C?0:g-C)){if(-1===C&&(C=g),g-C+1===d)return C*I}else-1!==C&&(g-=g-C),C=-1}else for(t+d>a&&(t=a-d),g=t;g>=0;g--){for(var F=!0,r=0;r<d;r++)if(i(c,g+r)!==i(n,r)){F=!1;break}if(F)return g}return-1}function A(c,n,t,e){t=Number(t)||0;var l=c.length-t;e?(e=Number(e))>l&&(e=l):e=l;var g=n.length;if(g%2!=0)throw new TypeError("Invalid hex string");e>g/2&&(e=g/2);for(var I=0;I<e;++I){var a=parseInt(n.substr(2*I,2),16);if(isNaN(a))return I;c[t+I]=a}return I}function G(c,n,t,e){return D(v(n,c.length-t),c,t,e)}function b(c,n,t,e){return D(function(c){for(var n=[],t=0;t<c.length;++t)n.push(255&c.charCodeAt(t));return n}(n),c,t,e)}function h(c,n,t,e){return b(c,n,t,e)}function U(c,n,t,e){return D(z(n),c,t,e)}function Q(c,n,t,e){return D(function(c,n){for(var t,e,l,g=[],I=0;I<c.length&&!((n-=2)<0);++I)t=c.charCodeAt(I),e=t>>8,l=t%256,g.push(l),g.push(e);return g}(n,c.length-t),c,t,e)}function u(c,n,t){return 0===n&&t===c.length?e.fromByteArray(c):e.fromByteArray(c.slice(n,t))}function W(c,n,t){t=Math.min(c.length,t);for(var e=[],l=n;l<t;){var g,I,a,d,i=c[l],C=null,F=i>239?4:i>223?3:i>191?2:1;if(l+F<=t)switch(F){case 1:i<128&&(C=i);break;case 2:128==(192&(g=c[l+1]))&&(d=(31&i)<<6|63&g)>127&&(C=d);break;case 3:g=c[l+1],I=c[l+2],128==(192&g)&&128==(192&I)&&(d=(15&i)<<12|(63&g)<<6|63&I)>2047&&(d<55296||d>57343)&&(C=d);break;case 4:g=c[l+1],I=c[l+2],a=c[l+3],128==(192&g)&&128==(192&I)&&128==(192&a)&&(d=(15&i)<<18|(63&g)<<12|(63&I)<<6|63&a)>65535&&d<1114112&&(C=d)}null===C?(C=65533,F=1):C>65535&&(C-=65536,e.push(C>>>10&1023|55296),C=56320|1023&C),e.push(C),l+=F}return function(c){var n=c.length;if(n<=4096)return String.fromCharCode.apply(String,c);var t="",e=0;for(;e<n;)t+=String.fromCharCode.apply(String,c.slice(e,e+=4096));return t}(e)}n.Buffer=d,n.SlowBuffer=function(c){+c!=c&&(c=0);return d.alloc(+c)},n.INSPECT_MAX_BYTES=50,d.TYPED_ARRAY_SUPPORT=void 0!==c.TYPED_ARRAY_SUPPORT?c.TYPED_ARRAY_SUPPORT:function(){try{var c=new Uint8Array(1);return c.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===c.foo()&&"function"==typeof c.subarray&&0===c.subarray(1,1).byteLength}catch(c){return!1}}(),n.kMaxLength=I(),d.poolSize=8192,d._augment=function(c){return c.__proto__=d.prototype,c},d.from=function(c,n,t){return i(null,c,n,t)},d.TYPED_ARRAY_SUPPORT&&(d.prototype.__proto__=Uint8Array.prototype,d.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&d[Symbol.species]===d&&Object.defineProperty(d,Symbol.species,{value:null,configurable:!0})),d.alloc=function(c,n,t){return function(c,n,t,e){return C(n),n<=0?a(c,n):void 0!==t?"string"==typeof e?a(c,n).fill(t,e):a(c,n).fill(t):a(c,n)}(null,c,n,t)},d.allocUnsafe=function(c){return F(null,c)},d.allocUnsafeSlow=function(c){return F(null,c)},d.isBuffer=function(c){return!(null==c||!c._isBuffer)},d.compare=function(c,n){if(!d.isBuffer(c)||!d.isBuffer(n))throw new TypeError("Arguments must be Buffers");if(c===n)return 0;for(var t=c.length,e=n.length,l=0,g=Math.min(t,e);l<g;++l)if(c[l]!==n[l]){t=c[l],e=n[l];break}return t<e?-1:e<t?1:0},d.isEncoding=function(c){switch(String(c).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},d.concat=function(c,n){if(!g(c))throw new TypeError('"list" argument must be an Array of Buffers');if(0===c.length)return d.alloc(0);var t;if(void 0===n)for(n=0,t=0;t<c.length;++t)n+=c[t].length;var e=d.allocUnsafe(n),l=0;for(t=0;t<c.length;++t){var I=c[t];if(!d.isBuffer(I))throw new TypeError('"list" argument must be an Array of Buffers');I.copy(e,l),l+=I.length}return e},d.byteLength=o,d.prototype._isBuffer=!0,d.prototype.swap16=function(){var c=this.length;if(c%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var n=0;n<c;n+=2)Z(this,n,n+1);return this},d.prototype.swap32=function(){var c=this.length;if(c%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var n=0;n<c;n+=4)Z(this,n,n+3),Z(this,n+1,n+2);return this},d.prototype.swap64=function(){var c=this.length;if(c%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var n=0;n<c;n+=8)Z(this,n,n+7),Z(this,n+1,n+6),Z(this,n+2,n+5),Z(this,n+3,n+4);return this},d.prototype.toString=function(){var c=0|this.length;return 0===c?"":0===arguments.length?W(this,0,c):s.apply(this,arguments)},d.prototype.equals=function(c){if(!d.isBuffer(c))throw new TypeError("Argument must be a Buffer");return this===c||0===d.compare(this,c)},d.prototype.inspect=function(){var c="",t=n.INSPECT_MAX_BYTES;return this.length>0&&(c=this.toString("hex",0,t).match(/.{2}/g).join(" "),this.length>t&&(c+=" ... ")),"<Buffer "+c+">"},d.prototype.compare=function(c,n,t,e,l){if(!d.isBuffer(c))throw new TypeError("Argument must be a Buffer");if(void 0===n&&(n=0),void 0===t&&(t=c?c.length:0),void 0===e&&(e=0),void 0===l&&(l=this.length),n<0||t>c.length||e<0||l>this.length)throw new RangeError("out of range index");if(e>=l&&n>=t)return 0;if(e>=l)return-1;if(n>=t)return 1;if(this===c)return 0;for(var g=(l>>>=0)-(e>>>=0),I=(t>>>=0)-(n>>>=0),a=Math.min(g,I),i=this.slice(e,l),C=c.slice(n,t),F=0;F<a;++F)if(i[F]!==C[F]){g=i[F],I=C[F];break}return g<I?-1:I<g?1:0},d.prototype.includes=function(c,n,t){return-1!==this.indexOf(c,n,t)},d.prototype.indexOf=function(c,n,t){return B(this,c,n,t,!0)},d.prototype.lastIndexOf=function(c,n,t){return B(this,c,n,t,!1)},d.prototype.write=function(c,n,t,e){if(void 0===n)e="utf8",t=this.length,n=0;else if(void 0===t&&"string"==typeof n)e=n,t=this.length,n=0;else{if(!isFinite(n))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");n|=0,isFinite(t)?(t|=0,void 0===e&&(e="utf8")):(e=t,t=void 0)}var l=this.length-n;if((void 0===t||t>l)&&(t=l),c.length>0&&(t<0||n<0)||n>this.length)throw new RangeError("Attempt to write outside buffer bounds");e||(e="utf8");for(var g=!1;;)switch(e){case"hex":return A(this,c,n,t);case"utf8":case"utf-8":return G(this,c,n,t);case"ascii":return b(this,c,n,t);case"latin1":case"binary":return h(this,c,n,t);case"base64":return U(this,c,n,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Q(this,c,n,t);default:if(g)throw new TypeError("Unknown encoding: "+e);e=(""+e).toLowerCase(),g=!0}},d.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function m(c,n,t){var e="";t=Math.min(c.length,t);for(var l=n;l<t;++l)e+=String.fromCharCode(127&c[l]);return e}function R(c,n,t){var e="";t=Math.min(c.length,t);for(var l=n;l<t;++l)e+=String.fromCharCode(c[l]);return e}function J(c,n,t){var e=c.length;(!n||n<0)&&(n=0),(!t||t<0||t>e)&&(t=e);for(var l="",g=n;g<t;++g)l+=T(c[g]);return l}function p(c,n,t){for(var e=c.slice(n,t),l="",g=0;g<e.length;g+=2)l+=String.fromCharCode(e[g]+256*e[g+1]);return l}function x(c,n,t){if(c%1!=0||c<0)throw new RangeError("offset is not uint");if(c+n>t)throw new RangeError("Trying to access beyond buffer length")}function N(c,n,t,e,l,g){if(!d.isBuffer(c))throw new TypeError('"buffer" argument must be a Buffer instance');if(n>l||n<g)throw new RangeError('"value" argument is out of bounds');if(t+e>c.length)throw new RangeError("Index out of range")}function Y(c,n,t,e){n<0&&(n=65535+n+1);for(var l=0,g=Math.min(c.length-t,2);l<g;++l)c[t+l]=(n&255<<8*(e?l:1-l))>>>8*(e?l:1-l)}function y(c,n,t,e){n<0&&(n=4294967295+n+1);for(var l=0,g=Math.min(c.length-t,4);l<g;++l)c[t+l]=n>>>8*(e?l:3-l)&255}function S(c,n,t,e,l,g){if(t+e>c.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}function k(c,n,t,e,g){return g||S(c,0,t,4),l.write(c,n,t,e,23,4),t+4}function H(c,n,t,e,g){return g||S(c,0,t,8),l.write(c,n,t,e,52,8),t+8}d.prototype.slice=function(c,n){var t,e=this.length;if((c=~~c)<0?(c+=e)<0&&(c=0):c>e&&(c=e),(n=void 0===n?e:~~n)<0?(n+=e)<0&&(n=0):n>e&&(n=e),n<c&&(n=c),d.TYPED_ARRAY_SUPPORT)(t=this.subarray(c,n)).__proto__=d.prototype;else{var l=n-c;t=new d(l,void 0);for(var g=0;g<l;++g)t[g]=this[g+c]}return t},d.prototype.readUIntLE=function(c,n,t){c|=0,n|=0,t||x(c,n,this.length);for(var e=this[c],l=1,g=0;++g<n&&(l*=256);)e+=this[c+g]*l;return e},d.prototype.readUIntBE=function(c,n,t){c|=0,n|=0,t||x(c,n,this.length);for(var e=this[c+--n],l=1;n>0&&(l*=256);)e+=this[c+--n]*l;return e},d.prototype.readUInt8=function(c,n){return n||x(c,1,this.length),this[c]},d.prototype.readUInt16LE=function(c,n){return n||x(c,2,this.length),this[c]|this[c+1]<<8},d.prototype.readUInt16BE=function(c,n){return n||x(c,2,this.length),this[c]<<8|this[c+1]},d.prototype.readUInt32LE=function(c,n){return n||x(c,4,this.length),(this[c]|this[c+1]<<8|this[c+2]<<16)+16777216*this[c+3]},d.prototype.readUInt32BE=function(c,n){return n||x(c,4,this.length),16777216*this[c]+(this[c+1]<<16|this[c+2]<<8|this[c+3])},d.prototype.readIntLE=function(c,n,t){c|=0,n|=0,t||x(c,n,this.length);for(var e=this[c],l=1,g=0;++g<n&&(l*=256);)e+=this[c+g]*l;return e>=(l*=128)&&(e-=Math.pow(2,8*n)),e},d.prototype.readIntBE=function(c,n,t){c|=0,n|=0,t||x(c,n,this.length);for(var e=n,l=1,g=this[c+--e];e>0&&(l*=256);)g+=this[c+--e]*l;return g>=(l*=128)&&(g-=Math.pow(2,8*n)),g},d.prototype.readInt8=function(c,n){return n||x(c,1,this.length),128&this[c]?-1*(255-this[c]+1):this[c]},d.prototype.readInt16LE=function(c,n){n||x(c,2,this.length);var t=this[c]|this[c+1]<<8;return 32768&t?4294901760|t:t},d.prototype.readInt16BE=function(c,n){n||x(c,2,this.length);var t=this[c+1]|this[c]<<8;return 32768&t?4294901760|t:t},d.prototype.readInt32LE=function(c,n){return n||x(c,4,this.length),this[c]|this[c+1]<<8|this[c+2]<<16|this[c+3]<<24},d.prototype.readInt32BE=function(c,n){return n||x(c,4,this.length),this[c]<<24|this[c+1]<<16|this[c+2]<<8|this[c+3]},d.prototype.readFloatLE=function(c,n){return n||x(c,4,this.length),l.read(this,c,!0,23,4)},d.prototype.readFloatBE=function(c,n){return n||x(c,4,this.length),l.read(this,c,!1,23,4)},d.prototype.readDoubleLE=function(c,n){return n||x(c,8,this.length),l.read(this,c,!0,52,8)},d.prototype.readDoubleBE=function(c,n){return n||x(c,8,this.length),l.read(this,c,!1,52,8)},d.prototype.writeUIntLE=function(c,n,t,e){(c=+c,n|=0,t|=0,e)||N(this,c,n,t,Math.pow(2,8*t)-1,0);var l=1,g=0;for(this[n]=255&c;++g<t&&(l*=256);)this[n+g]=c/l&255;return n+t},d.prototype.writeUIntBE=function(c,n,t,e){(c=+c,n|=0,t|=0,e)||N(this,c,n,t,Math.pow(2,8*t)-1,0);var l=t-1,g=1;for(this[n+l]=255&c;--l>=0&&(g*=256);)this[n+l]=c/g&255;return n+t},d.prototype.writeUInt8=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,1,255,0),d.TYPED_ARRAY_SUPPORT||(c=Math.floor(c)),this[n]=255&c,n+1},d.prototype.writeUInt16LE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,2,65535,0),d.TYPED_ARRAY_SUPPORT?(this[n]=255&c,this[n+1]=c>>>8):Y(this,c,n,!0),n+2},d.prototype.writeUInt16BE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,2,65535,0),d.TYPED_ARRAY_SUPPORT?(this[n]=c>>>8,this[n+1]=255&c):Y(this,c,n,!1),n+2},d.prototype.writeUInt32LE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,4,4294967295,0),d.TYPED_ARRAY_SUPPORT?(this[n+3]=c>>>24,this[n+2]=c>>>16,this[n+1]=c>>>8,this[n]=255&c):y(this,c,n,!0),n+4},d.prototype.writeUInt32BE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,4,4294967295,0),d.TYPED_ARRAY_SUPPORT?(this[n]=c>>>24,this[n+1]=c>>>16,this[n+2]=c>>>8,this[n+3]=255&c):y(this,c,n,!1),n+4},d.prototype.writeIntLE=function(c,n,t,e){if(c=+c,n|=0,!e){var l=Math.pow(2,8*t-1);N(this,c,n,t,l-1,-l)}var g=0,I=1,a=0;for(this[n]=255&c;++g<t&&(I*=256);)c<0&&0===a&&0!==this[n+g-1]&&(a=1),this[n+g]=(c/I>>0)-a&255;return n+t},d.prototype.writeIntBE=function(c,n,t,e){if(c=+c,n|=0,!e){var l=Math.pow(2,8*t-1);N(this,c,n,t,l-1,-l)}var g=t-1,I=1,a=0;for(this[n+g]=255&c;--g>=0&&(I*=256);)c<0&&0===a&&0!==this[n+g+1]&&(a=1),this[n+g]=(c/I>>0)-a&255;return n+t},d.prototype.writeInt8=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,1,127,-128),d.TYPED_ARRAY_SUPPORT||(c=Math.floor(c)),c<0&&(c=255+c+1),this[n]=255&c,n+1},d.prototype.writeInt16LE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,2,32767,-32768),d.TYPED_ARRAY_SUPPORT?(this[n]=255&c,this[n+1]=c>>>8):Y(this,c,n,!0),n+2},d.prototype.writeInt16BE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,2,32767,-32768),d.TYPED_ARRAY_SUPPORT?(this[n]=c>>>8,this[n+1]=255&c):Y(this,c,n,!1),n+2},d.prototype.writeInt32LE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,4,2147483647,-2147483648),d.TYPED_ARRAY_SUPPORT?(this[n]=255&c,this[n+1]=c>>>8,this[n+2]=c>>>16,this[n+3]=c>>>24):y(this,c,n,!0),n+4},d.prototype.writeInt32BE=function(c,n,t){return c=+c,n|=0,t||N(this,c,n,4,2147483647,-2147483648),c<0&&(c=4294967295+c+1),d.TYPED_ARRAY_SUPPORT?(this[n]=c>>>24,this[n+1]=c>>>16,this[n+2]=c>>>8,this[n+3]=255&c):y(this,c,n,!1),n+4},d.prototype.writeFloatLE=function(c,n,t){return k(this,c,n,!0,t)},d.prototype.writeFloatBE=function(c,n,t){return k(this,c,n,!1,t)},d.prototype.writeDoubleLE=function(c,n,t){return H(this,c,n,!0,t)},d.prototype.writeDoubleBE=function(c,n,t){return H(this,c,n,!1,t)},d.prototype.copy=function(c,n,t,e){if(t||(t=0),e||0===e||(e=this.length),n>=c.length&&(n=c.length),n||(n=0),e>0&&e<t&&(e=t),e===t)return 0;if(0===c.length||0===this.length)return 0;if(n<0)throw new RangeError("targetStart out of bounds");if(t<0||t>=this.length)throw new RangeError("sourceStart out of bounds");if(e<0)throw new RangeError("sourceEnd out of bounds");e>this.length&&(e=this.length),c.length-n<e-t&&(e=c.length-n+t);var l,g=e-t;if(this===c&&t<n&&n<e)for(l=g-1;l>=0;--l)c[l+n]=this[l+t];else if(g<1e3||!d.TYPED_ARRAY_SUPPORT)for(l=0;l<g;++l)c[l+n]=this[l+t];else Uint8Array.prototype.set.call(c,this.subarray(t,t+g),n);return g},d.prototype.fill=function(c,n,t,e){if("string"==typeof c){if("string"==typeof n?(e=n,n=0,t=this.length):"string"==typeof t&&(e=t,t=this.length),1===c.length){var l=c.charCodeAt(0);l<256&&(c=l)}if(void 0!==e&&"string"!=typeof e)throw new TypeError("encoding must be a string");if("string"==typeof e&&!d.isEncoding(e))throw new TypeError("Unknown encoding: "+e)}else"number"==typeof c&&(c&=255);if(n<0||this.length<n||this.length<t)throw new RangeError("Out of range index");if(t<=n)return this;var g;if(n>>>=0,t=void 0===t?this.length:t>>>0,c||(c=0),"number"==typeof c)for(g=n;g<t;++g)this[g]=c;else{var I=d.isBuffer(c)?c:v(new d(c,e).toString()),a=I.length;for(g=0;g<t-n;++g)this[g+n]=I[g%a]}return this};var E=/[^+\/0-9A-Za-z-_]/g;function T(c){return c<16?"0"+c.toString(16):c.toString(16)}function v(c,n){var t;n=n||1/0;for(var e=c.length,l=null,g=[],I=0;I<e;++I){if((t=c.charCodeAt(I))>55295&&t<57344){if(!l){if(t>56319){(n-=3)>-1&&g.push(239,191,189);continue}if(I+1===e){(n-=3)>-1&&g.push(239,191,189);continue}l=t;continue}if(t<56320){(n-=3)>-1&&g.push(239,191,189),l=t;continue}t=65536+(l-55296<<10|t-56320)}else l&&(n-=3)>-1&&g.push(239,191,189);if(l=null,t<128){if((n-=1)<0)break;g.push(t)}else if(t<2048){if((n-=2)<0)break;g.push(t>>6|192,63&t|128)}else if(t<65536){if((n-=3)<0)break;g.push(t>>12|224,t>>6&63|128,63&t|128)}else{if(!(t<1114112))throw new Error("Invalid code point");if((n-=4)<0)break;g.push(t>>18|240,t>>12&63|128,t>>6&63|128,63&t|128)}}return g}function z(c){return e.toByteArray(function(c){if((c=function(c){return c.trim?c.trim():c.replace(/^\s+|\s+$/g,"")}(c).replace(E,"")).length<2)return"";for(;c.length%4!=0;)c+="=";return c}(c))}function D(c,n,t,e){for(var l=0;l<e&&!(l+t>=n.length||l>=c.length);++l)n[l+t]=c[l];return l}}).call(this,t(19))},function(c,n,t){"use strict";n.byteLength=function(c){var n=i(c),t=n[0],e=n[1];return 3*(t+e)/4-e},n.toByteArray=function(c){var n,t,e=i(c),I=e[0],a=e[1],d=new g(function(c,n,t){return 3*(n+t)/4-t}(0,I,a)),C=0,F=a>0?I-4:I;for(t=0;t<F;t+=4)n=l[c.charCodeAt(t)]<<18|l[c.charCodeAt(t+1)]<<12|l[c.charCodeAt(t+2)]<<6|l[c.charCodeAt(t+3)],d[C++]=n>>16&255,d[C++]=n>>8&255,d[C++]=255&n;2===a&&(n=l[c.charCodeAt(t)]<<2|l[c.charCodeAt(t+1)]>>4,d[C++]=255&n);1===a&&(n=l[c.charCodeAt(t)]<<10|l[c.charCodeAt(t+1)]<<4|l[c.charCodeAt(t+2)]>>2,d[C++]=n>>8&255,d[C++]=255&n);return d},n.fromByteArray=function(c){for(var n,t=c.length,l=t%3,g=[],I=0,a=t-l;I<a;I+=16383)g.push(C(c,I,I+16383>a?a:I+16383));1===l?(n=c[t-1],g.push(e[n>>2]+e[n<<4&63]+"==")):2===l&&(n=(c[t-2]<<8)+c[t-1],g.push(e[n>>10]+e[n>>4&63]+e[n<<2&63]+"="));return g.join("")};for(var e=[],l=[],g="undefined"!=typeof Uint8Array?Uint8Array:Array,I="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,d=I.length;a<d;++a)e[a]=I[a],l[I.charCodeAt(a)]=a;function i(c){var n=c.length;if(n%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var t=c.indexOf("=");return-1===t&&(t=n),[t,t===n?0:4-t%4]}function C(c,n,t){for(var l,g,I=[],a=n;a<t;a+=3)l=(c[a]<<16&16711680)+(c[a+1]<<8&65280)+(255&c[a+2]),I.push(e[(g=l)>>18&63]+e[g>>12&63]+e[g>>6&63]+e[63&g]);return I.join("")}l["-".charCodeAt(0)]=62,l["_".charCodeAt(0)]=63},function(c,n){n.read=function(c,n,t,e,l){var g,I,a=8*l-e-1,d=(1<<a)-1,i=d>>1,C=-7,F=t?l-1:0,r=t?-1:1,X=c[n+F];for(F+=r,g=X&(1<<-C)-1,X>>=-C,C+=a;C>0;g=256*g+c[n+F],F+=r,C-=8);for(I=g&(1<<-C)-1,g>>=-C,C+=e;C>0;I=256*I+c[n+F],F+=r,C-=8);if(0===g)g=1-i;else{if(g===d)return I?NaN:1/0*(X?-1:1);I+=Math.pow(2,e),g-=i}return(X?-1:1)*I*Math.pow(2,g-e)},n.write=function(c,n,t,e,l,g){var I,a,d,i=8*g-l-1,C=(1<<i)-1,F=C>>1,r=23===l?Math.pow(2,-24)-Math.pow(2,-77):0,X=e?0:g-1,o=e?1:-1,s=n<0||0===n&&1/n<0?1:0;for(n=Math.abs(n),isNaN(n)||n===1/0?(a=isNaN(n)?1:0,I=C):(I=Math.floor(Math.log(n)/Math.LN2),n*(d=Math.pow(2,-I))<1&&(I--,d*=2),(n+=I+F>=1?r/d:r*Math.pow(2,1-F))*d>=2&&(I++,d/=2),I+F>=C?(a=0,I=C):I+F>=1?(a=(n*d-1)*Math.pow(2,l),I+=F):(a=n*Math.pow(2,F-1)*Math.pow(2,l),I=0));l>=8;c[t+X]=255&a,X+=o,a/=256,l-=8);for(I=I<<l|a,i+=l;i>0;c[t+X]=255&I,X+=o,I/=256,i-=8);c[t+X-o]|=128*s}},function(c,n){var t={}.toString;c.exports=Array.isArray||function(c){return"[object Array]"==t.call(c)}},function(c,n,t){"use strict";var e=t(1),l=Object.prototype.hasOwnProperty,g=Object.prototype.toString;c.exports=new e("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(c){if(null===c)return!0;var n,t,e,I,a,d=[],i=c;for(n=0,t=i.length;n<t;n+=1){if(e=i[n],a=!1,"[object Object]"!==g.call(e))return!1;for(I in e)if(l.call(e,I)){if(a)return!1;a=!0}if(!a)return!1;if(-1!==d.indexOf(I))return!1;d.push(I)}return!0},construct:function(c){return null!==c?c:[]}})},function(c,n,t){"use strict";var e=t(1),l=Object.prototype.toString;c.exports=new e("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(c){if(null===c)return!0;var n,t,e,g,I,a=c;for(I=new Array(a.length),n=0,t=a.length;n<t;n+=1){if(e=a[n],"[object Object]"!==l.call(e))return!1;if(1!==(g=Object.keys(e)).length)return!1;I[n]=[g[0],e[g[0]]]}return!0},construct:function(c){if(null===c)return[];var n,t,e,l,g,I=c;for(g=new Array(I.length),n=0,t=I.length;n<t;n+=1)e=I[n],l=Object.keys(e),g[n]=[l[0],e[l[0]]];return g}})},function(c,n,t){"use strict";var e=t(1),l=Object.prototype.hasOwnProperty;c.exports=new e("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(c){if(null===c)return!0;var n,t=c;for(n in t)if(l.call(t,n)&&null!==t[n])return!1;return!0},construct:function(c){return null!==c?c:{}}})},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:js/undefined",{kind:"scalar",resolve:function(){return!0},construct:function(){},predicate:function(c){return void 0===c},represent:function(){return""}})},function(c,n,t){"use strict";var e=t(1);c.exports=new e("tag:yaml.org,2002:js/regexp",{kind:"scalar",resolve:function(c){if(null===c)return!1;if(0===c.length)return!1;var n=c,t=/\/([gim]*)$/.exec(c),e="";if("/"===n[0]){if(t&&(e=t[1]),e.length>3)return!1;if("/"!==n[n.length-e.length-1])return!1}return!0},construct:function(c){var n=c,t=/\/([gim]*)$/.exec(c),e="";return"/"===n[0]&&(t&&(e=t[1]),n=n.slice(1,n.length-e.length-1)),new RegExp(n,e)},predicate:function(c){return"[object RegExp]"===Object.prototype.toString.call(c)},represent:function(c){var n="/"+c.source+"/";return c.global&&(n+="g"),c.multiline&&(n+="m"),c.ignoreCase&&(n+="i"),n}})},function(c,n,t){"use strict";var e;try{e=t(96)}catch(c){"undefined"!=typeof window&&(e=window.esprima)}var l=t(1);c.exports=new l("tag:yaml.org,2002:js/function",{kind:"scalar",resolve:function(c){if(null===c)return!1;try{var n="("+c+")",t=e.parse(n,{range:!0});return"Program"===t.type&&1===t.body.length&&"ExpressionStatement"===t.body[0].type&&("ArrowFunctionExpression"===t.body[0].expression.type||"FunctionExpression"===t.body[0].expression.type)}catch(c){return!1}},construct:function(c){var n,t="("+c+")",l=e.parse(t,{range:!0}),g=[];if("Program"!==l.type||1!==l.body.length||"ExpressionStatement"!==l.body[0].type||"ArrowFunctionExpression"!==l.body[0].expression.type&&"FunctionExpression"!==l.body[0].expression.type)throw new Error("Failed to resolve function");return l.body[0].expression.params.forEach((function(c){g.push(c.name)})),n=l.body[0].expression.body.range,"BlockStatement"===l.body[0].expression.body.type?new Function(g,t.slice(n[0]+1,n[1]-1)):new Function(g,"return "+t.slice(n[0],n[1]))},predicate:function(c){return"[object Function]"===Object.prototype.toString.call(c)},represent:function(c){return c.toString()}})},function(c,n,t){var e;e=function(){return function(c){var n={};function t(e){if(n[e])return n[e].exports;var l=n[e]={exports:{},id:e,loaded:!1};return c[e].call(l.exports,l,l.exports,t),l.loaded=!0,l.exports}return t.m=c,t.c=n,t.p="",t(0)}([function(c,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(1),l=t(3),g=t(8),I=t(15);function a(c,n,t){var I=null,a=function(c,n){t&&t(c,n),I&&I.visit(c,n)},d="function"==typeof t?a:null,i=!1;if(n){i="boolean"==typeof n.comment&&n.comment;var C="boolean"==typeof n.attachComment&&n.attachComment;(i||C)&&((I=new e.CommentHandler).attach=C,n.comment=!0,d=a)}var F,r=!1;n&&"string"==typeof n.sourceType&&(r="module"===n.sourceType),F=n&&"boolean"==typeof n.jsx&&n.jsx?new l.JSXParser(c,n,d):new g.Parser(c,n,d);var X=r?F.parseModule():F.parseScript();return i&&I&&(X.comments=I.comments),F.config.tokens&&(X.tokens=F.tokens),F.config.tolerant&&(X.errors=F.errorHandler.errors),X}n.parse=a,n.parseModule=function(c,n,t){var e=n||{};return e.sourceType="module",a(c,e,t)},n.parseScript=function(c,n,t){var e=n||{};return e.sourceType="script",a(c,e,t)},n.tokenize=function(c,n,t){var e,l=new I.Tokenizer(c,n);e=[];try{for(;;){var g=l.getNextToken();if(!g)break;t&&(g=t(g)),e.push(g)}}catch(c){l.errorHandler.tolerate(c)}return l.errorHandler.tolerant&&(e.errors=l.errors()),e};var d=t(2);n.Syntax=d.Syntax,n.version="4.0.1"},function(c,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(2),l=function(){function c(){this.attach=!1,this.comments=[],this.stack=[],this.leading=[],this.trailing=[]}return c.prototype.insertInnerComments=function(c,n){if(c.type===e.Syntax.BlockStatement&&0===c.body.length){for(var t=[],l=this.leading.length-1;l>=0;--l){var g=this.leading[l];n.end.offset>=g.start&&(t.unshift(g.comment),this.leading.splice(l,1),this.trailing.splice(l,1))}t.length&&(c.innerComments=t)}},c.prototype.findTrailingComments=function(c){var n=[];if(this.trailing.length>0){for(var t=this.trailing.length-1;t>=0;--t){var e=this.trailing[t];e.start>=c.end.offset&&n.unshift(e.comment)}return this.trailing.length=0,n}var l=this.stack[this.stack.length-1];if(l&&l.node.trailingComments){var g=l.node.trailingComments[0];g&&g.range[0]>=c.end.offset&&(n=l.node.trailingComments,delete l.node.trailingComments)}return n},c.prototype.findLeadingComments=function(c){for(var n,t=[];this.stack.length>0&&((g=this.stack[this.stack.length-1])&&g.start>=c.start.offset);)n=g.node,this.stack.pop();if(n){for(var e=(n.leadingComments?n.leadingComments.length:0)-1;e>=0;--e){var l=n.leadingComments[e];l.range[1]<=c.start.offset&&(t.unshift(l),n.leadingComments.splice(e,1))}return n.leadingComments&&0===n.leadingComments.length&&delete n.leadingComments,t}for(e=this.leading.length-1;e>=0;--e){var g;(g=this.leading[e]).start<=c.start.offset&&(t.unshift(g.comment),this.leading.splice(e,1))}return t},c.prototype.visitNode=function(c,n){if(!(c.type===e.Syntax.Program&&c.body.length>0)){this.insertInnerComments(c,n);var t=this.findTrailingComments(n),l=this.findLeadingComments(n);l.length>0&&(c.leadingComments=l),t.length>0&&(c.trailingComments=t),this.stack.push({node:c,start:n.start.offset})}},c.prototype.visitComment=function(c,n){var t="L"===c.type[0]?"Line":"Block",e={type:t,value:c.value};if(c.range&&(e.range=c.range),c.loc&&(e.loc=c.loc),this.comments.push(e),this.attach){var l={comment:{type:t,value:c.value,range:[n.start.offset,n.end.offset]},start:n.start.offset};c.loc&&(l.comment.loc=c.loc),c.type=t,this.leading.push(l),this.trailing.push(l)}},c.prototype.visit=function(c,n){"LineComment"===c.type||"BlockComment"===c.type?this.visitComment(c,n):this.attach&&this.visitNode(c,n)},c}();n.CommentHandler=l},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Syntax={AssignmentExpression:"AssignmentExpression",AssignmentPattern:"AssignmentPattern",ArrayExpression:"ArrayExpression",ArrayPattern:"ArrayPattern",ArrowFunctionExpression:"ArrowFunctionExpression",AwaitExpression:"AwaitExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ClassBody:"ClassBody",ClassDeclaration:"ClassDeclaration",ClassExpression:"ClassExpression",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExportAllDeclaration:"ExportAllDeclaration",ExportDefaultDeclaration:"ExportDefaultDeclaration",ExportNamedDeclaration:"ExportNamedDeclaration",ExportSpecifier:"ExportSpecifier",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForOfStatement:"ForOfStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",ImportDeclaration:"ImportDeclaration",ImportDefaultSpecifier:"ImportDefaultSpecifier",ImportNamespaceSpecifier:"ImportNamespaceSpecifier",ImportSpecifier:"ImportSpecifier",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",MetaProperty:"MetaProperty",MethodDefinition:"MethodDefinition",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",ObjectPattern:"ObjectPattern",Program:"Program",Property:"Property",RestElement:"RestElement",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SpreadElement:"SpreadElement",Super:"Super",SwitchCase:"SwitchCase",SwitchStatement:"SwitchStatement",TaggedTemplateExpression:"TaggedTemplateExpression",TemplateElement:"TemplateElement",TemplateLiteral:"TemplateLiteral",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement",YieldExpression:"YieldExpression"}},function(c,n,t){"use strict";var e,l=this&&this.__extends||(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(c,n){c.__proto__=n}||function(c,n){for(var t in n)n.hasOwnProperty(t)&&(c[t]=n[t])},function(c,n){function t(){this.constructor=c}e(c,n),c.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)});Object.defineProperty(n,"__esModule",{value:!0});var g=t(4),I=t(5),a=t(6),d=t(7),i=t(8),C=t(13),F=t(14);function r(c){var n;switch(c.type){case a.JSXSyntax.JSXIdentifier:n=c.name;break;case a.JSXSyntax.JSXNamespacedName:var t=c;n=r(t.namespace)+":"+r(t.name);break;case a.JSXSyntax.JSXMemberExpression:var e=c;n=r(e.object)+"."+r(e.property)}return n}C.TokenName[100]="JSXIdentifier",C.TokenName[101]="JSXText";var X=function(c){function n(n,t,e){return c.call(this,n,t,e)||this}return l(n,c),n.prototype.parsePrimaryExpression=function(){return this.match("<")?this.parseJSXRoot():c.prototype.parsePrimaryExpression.call(this)},n.prototype.startJSX=function(){this.scanner.index=this.startMarker.index,this.scanner.lineNumber=this.startMarker.line,this.scanner.lineStart=this.startMarker.index-this.startMarker.column},n.prototype.finishJSX=function(){this.nextToken()},n.prototype.reenterJSX=function(){this.startJSX(),this.expectJSX("}"),this.config.tokens&&this.tokens.pop()},n.prototype.createJSXNode=function(){return this.collectComments(),{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},n.prototype.createJSXChildNode=function(){return{index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}},n.prototype.scanXHTMLEntity=function(c){for(var n="&",t=!0,e=!1,l=!1,I=!1;!this.scanner.eof()&&t&&!e;){var a=this.scanner.source[this.scanner.index];if(a===c)break;if(e=";"===a,n+=a,++this.scanner.index,!e)switch(n.length){case 2:l="#"===a;break;case 3:l&&(t=(I="x"===a)||g.Character.isDecimalDigit(a.charCodeAt(0)),l=l&&!I);break;default:t=(t=t&&!(l&&!g.Character.isDecimalDigit(a.charCodeAt(0))))&&!(I&&!g.Character.isHexDigit(a.charCodeAt(0)))}}if(t&&e&&n.length>2){var d=n.substr(1,n.length-2);l&&d.length>1?n=String.fromCharCode(parseInt(d.substr(1),10)):I&&d.length>2?n=String.fromCharCode(parseInt("0"+d.substr(1),16)):l||I||!F.XHTMLEntities[d]||(n=F.XHTMLEntities[d])}return n},n.prototype.lexJSX=function(){var c=this.scanner.source.charCodeAt(this.scanner.index);if(60===c||62===c||47===c||58===c||61===c||123===c||125===c)return{type:7,value:a=this.scanner.source[this.scanner.index++],lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index-1,end:this.scanner.index};if(34===c||39===c){for(var n=this.scanner.index,t=this.scanner.source[this.scanner.index++],e="";!this.scanner.eof()&&(d=this.scanner.source[this.scanner.index++])!==t;)e+="&"===d?this.scanXHTMLEntity(t):d;return{type:8,value:e,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:n,end:this.scanner.index}}if(46===c){var l=this.scanner.source.charCodeAt(this.scanner.index+1),I=this.scanner.source.charCodeAt(this.scanner.index+2),a=46===l&&46===I?"...":".";return n=this.scanner.index,this.scanner.index+=a.length,{type:7,value:a,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:n,end:this.scanner.index}}if(96===c)return{type:10,value:"",lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:this.scanner.index,end:this.scanner.index};if(g.Character.isIdentifierStart(c)&&92!==c){for(n=this.scanner.index,++this.scanner.index;!this.scanner.eof();){var d=this.scanner.source.charCodeAt(this.scanner.index);if(g.Character.isIdentifierPart(d)&&92!==d)++this.scanner.index;else{if(45!==d)break;++this.scanner.index}}return{type:100,value:this.scanner.source.slice(n,this.scanner.index),lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:n,end:this.scanner.index}}return this.scanner.lex()},n.prototype.nextJSXToken=function(){this.collectComments(),this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;var c=this.lexJSX();return this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.config.tokens&&this.tokens.push(this.convertToken(c)),c},n.prototype.nextJSXText=function(){this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart;for(var c=this.scanner.index,n="";!this.scanner.eof();){var t=this.scanner.source[this.scanner.index];if("{"===t||"<"===t)break;++this.scanner.index,n+=t,g.Character.isLineTerminator(t.charCodeAt(0))&&(++this.scanner.lineNumber,"\r"===t&&"\n"===this.scanner.source[this.scanner.index]&&++this.scanner.index,this.scanner.lineStart=this.scanner.index)}this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart;var e={type:101,value:n,lineNumber:this.scanner.lineNumber,lineStart:this.scanner.lineStart,start:c,end:this.scanner.index};return n.length>0&&this.config.tokens&&this.tokens.push(this.convertToken(e)),e},n.prototype.peekJSXToken=function(){var c=this.scanner.saveState();this.scanner.scanComments();var n=this.lexJSX();return this.scanner.restoreState(c),n},n.prototype.expectJSX=function(c){var n=this.nextJSXToken();7===n.type&&n.value===c||this.throwUnexpectedToken(n)},n.prototype.matchJSX=function(c){var n=this.peekJSXToken();return 7===n.type&&n.value===c},n.prototype.parseJSXIdentifier=function(){var c=this.createJSXNode(),n=this.nextJSXToken();return 100!==n.type&&this.throwUnexpectedToken(n),this.finalize(c,new I.JSXIdentifier(n.value))},n.prototype.parseJSXElementName=function(){var c=this.createJSXNode(),n=this.parseJSXIdentifier();if(this.matchJSX(":")){var t=n;this.expectJSX(":");var e=this.parseJSXIdentifier();n=this.finalize(c,new I.JSXNamespacedName(t,e))}else if(this.matchJSX("."))for(;this.matchJSX(".");){var l=n;this.expectJSX(".");var g=this.parseJSXIdentifier();n=this.finalize(c,new I.JSXMemberExpression(l,g))}return n},n.prototype.parseJSXAttributeName=function(){var c,n=this.createJSXNode(),t=this.parseJSXIdentifier();if(this.matchJSX(":")){var e=t;this.expectJSX(":");var l=this.parseJSXIdentifier();c=this.finalize(n,new I.JSXNamespacedName(e,l))}else c=t;return c},n.prototype.parseJSXStringLiteralAttribute=function(){var c=this.createJSXNode(),n=this.nextJSXToken();8!==n.type&&this.throwUnexpectedToken(n);var t=this.getTokenRaw(n);return this.finalize(c,new d.Literal(n.value,t))},n.prototype.parseJSXExpressionAttribute=function(){var c=this.createJSXNode();this.expectJSX("{"),this.finishJSX(),this.match("}")&&this.tolerateError("JSX attributes must only be assigned a non-empty expression");var n=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(c,new I.JSXExpressionContainer(n))},n.prototype.parseJSXAttributeValue=function(){return this.matchJSX("{")?this.parseJSXExpressionAttribute():this.matchJSX("<")?this.parseJSXElement():this.parseJSXStringLiteralAttribute()},n.prototype.parseJSXNameValueAttribute=function(){var c=this.createJSXNode(),n=this.parseJSXAttributeName(),t=null;return this.matchJSX("=")&&(this.expectJSX("="),t=this.parseJSXAttributeValue()),this.finalize(c,new I.JSXAttribute(n,t))},n.prototype.parseJSXSpreadAttribute=function(){var c=this.createJSXNode();this.expectJSX("{"),this.expectJSX("..."),this.finishJSX();var n=this.parseAssignmentExpression();return this.reenterJSX(),this.finalize(c,new I.JSXSpreadAttribute(n))},n.prototype.parseJSXAttributes=function(){for(var c=[];!this.matchJSX("/")&&!this.matchJSX(">");){var n=this.matchJSX("{")?this.parseJSXSpreadAttribute():this.parseJSXNameValueAttribute();c.push(n)}return c},n.prototype.parseJSXOpeningElement=function(){var c=this.createJSXNode();this.expectJSX("<");var n=this.parseJSXElementName(),t=this.parseJSXAttributes(),e=this.matchJSX("/");return e&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(c,new I.JSXOpeningElement(n,e,t))},n.prototype.parseJSXBoundaryElement=function(){var c=this.createJSXNode();if(this.expectJSX("<"),this.matchJSX("/")){this.expectJSX("/");var n=this.parseJSXElementName();return this.expectJSX(">"),this.finalize(c,new I.JSXClosingElement(n))}var t=this.parseJSXElementName(),e=this.parseJSXAttributes(),l=this.matchJSX("/");return l&&this.expectJSX("/"),this.expectJSX(">"),this.finalize(c,new I.JSXOpeningElement(t,l,e))},n.prototype.parseJSXEmptyExpression=function(){var c=this.createJSXChildNode();return this.collectComments(),this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.finalize(c,new I.JSXEmptyExpression)},n.prototype.parseJSXExpressionContainer=function(){var c,n=this.createJSXNode();return this.expectJSX("{"),this.matchJSX("}")?(c=this.parseJSXEmptyExpression(),this.expectJSX("}")):(this.finishJSX(),c=this.parseAssignmentExpression(),this.reenterJSX()),this.finalize(n,new I.JSXExpressionContainer(c))},n.prototype.parseJSXChildren=function(){for(var c=[];!this.scanner.eof();){var n=this.createJSXChildNode(),t=this.nextJSXText();if(t.start<t.end){var e=this.getTokenRaw(t),l=this.finalize(n,new I.JSXText(t.value,e));c.push(l)}if("{"!==this.scanner.source[this.scanner.index])break;var g=this.parseJSXExpressionContainer();c.push(g)}return c},n.prototype.parseComplexJSXElement=function(c){for(var n=[];!this.scanner.eof();){c.children=c.children.concat(this.parseJSXChildren());var t=this.createJSXChildNode(),e=this.parseJSXBoundaryElement();if(e.type===a.JSXSyntax.JSXOpeningElement){var l=e;if(l.selfClosing){var g=this.finalize(t,new I.JSXElement(l,[],null));c.children.push(g)}else n.push(c),c={node:t,opening:l,closing:null,children:[]}}if(e.type===a.JSXSyntax.JSXClosingElement){c.closing=e;var d=r(c.opening.name);if(d!==r(c.closing.name)&&this.tolerateError("Expected corresponding JSX closing tag for %0",d),!(n.length>0))break;g=this.finalize(c.node,new I.JSXElement(c.opening,c.children,c.closing)),(c=n[n.length-1]).children.push(g),n.pop()}}return c},n.prototype.parseJSXElement=function(){var c=this.createJSXNode(),n=this.parseJSXOpeningElement(),t=[],e=null;if(!n.selfClosing){var l=this.parseComplexJSXElement({node:c,opening:n,closing:e,children:t});t=l.children,e=l.closing}return this.finalize(c,new I.JSXElement(n,t,e))},n.prototype.parseJSXRoot=function(){this.config.tokens&&this.tokens.pop(),this.startJSX();var c=this.parseJSXElement();return this.finishJSX(),c},n.prototype.isStartOfExpression=function(){return c.prototype.isStartOfExpression.call(this)||this.match("<")},n}(i.Parser);n.JSXParser=X},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t={NonAsciiIdentifierStart:/[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,NonAsciiIdentifierPart:/[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/};n.Character={fromCodePoint:function(c){return c<65536?String.fromCharCode(c):String.fromCharCode(55296+(c-65536>>10))+String.fromCharCode(56320+(c-65536&1023))},isWhiteSpace:function(c){return 32===c||9===c||11===c||12===c||160===c||c>=5760&&[5760,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(c)>=0},isLineTerminator:function(c){return 10===c||13===c||8232===c||8233===c},isIdentifierStart:function(c){return 36===c||95===c||c>=65&&c<=90||c>=97&&c<=122||92===c||c>=128&&t.NonAsciiIdentifierStart.test(n.Character.fromCodePoint(c))},isIdentifierPart:function(c){return 36===c||95===c||c>=65&&c<=90||c>=97&&c<=122||c>=48&&c<=57||92===c||c>=128&&t.NonAsciiIdentifierPart.test(n.Character.fromCodePoint(c))},isDecimalDigit:function(c){return c>=48&&c<=57},isHexDigit:function(c){return c>=48&&c<=57||c>=65&&c<=70||c>=97&&c<=102},isOctalDigit:function(c){return c>=48&&c<=55}}},function(c,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(6),l=function(c){this.type=e.JSXSyntax.JSXClosingElement,this.name=c};n.JSXClosingElement=l;var g=function(c,n,t){this.type=e.JSXSyntax.JSXElement,this.openingElement=c,this.children=n,this.closingElement=t};n.JSXElement=g;var I=function(){this.type=e.JSXSyntax.JSXEmptyExpression};n.JSXEmptyExpression=I;var a=function(c){this.type=e.JSXSyntax.JSXExpressionContainer,this.expression=c};n.JSXExpressionContainer=a;var d=function(c){this.type=e.JSXSyntax.JSXIdentifier,this.name=c};n.JSXIdentifier=d;var i=function(c,n){this.type=e.JSXSyntax.JSXMemberExpression,this.object=c,this.property=n};n.JSXMemberExpression=i;var C=function(c,n){this.type=e.JSXSyntax.JSXAttribute,this.name=c,this.value=n};n.JSXAttribute=C;var F=function(c,n){this.type=e.JSXSyntax.JSXNamespacedName,this.namespace=c,this.name=n};n.JSXNamespacedName=F;var r=function(c,n,t){this.type=e.JSXSyntax.JSXOpeningElement,this.name=c,this.selfClosing=n,this.attributes=t};n.JSXOpeningElement=r;var X=function(c){this.type=e.JSXSyntax.JSXSpreadAttribute,this.argument=c};n.JSXSpreadAttribute=X;var o=function(c,n){this.type=e.JSXSyntax.JSXText,this.value=c,this.raw=n};n.JSXText=o},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.JSXSyntax={JSXAttribute:"JSXAttribute",JSXClosingElement:"JSXClosingElement",JSXElement:"JSXElement",JSXEmptyExpression:"JSXEmptyExpression",JSXExpressionContainer:"JSXExpressionContainer",JSXIdentifier:"JSXIdentifier",JSXMemberExpression:"JSXMemberExpression",JSXNamespacedName:"JSXNamespacedName",JSXOpeningElement:"JSXOpeningElement",JSXSpreadAttribute:"JSXSpreadAttribute",JSXText:"JSXText"}},function(c,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(2),l=function(c){this.type=e.Syntax.ArrayExpression,this.elements=c};n.ArrayExpression=l;var g=function(c){this.type=e.Syntax.ArrayPattern,this.elements=c};n.ArrayPattern=g;var I=function(c,n,t){this.type=e.Syntax.ArrowFunctionExpression,this.id=null,this.params=c,this.body=n,this.generator=!1,this.expression=t,this.async=!1};n.ArrowFunctionExpression=I;var a=function(c,n,t){this.type=e.Syntax.AssignmentExpression,this.operator=c,this.left=n,this.right=t};n.AssignmentExpression=a;var d=function(c,n){this.type=e.Syntax.AssignmentPattern,this.left=c,this.right=n};n.AssignmentPattern=d;var i=function(c,n,t){this.type=e.Syntax.ArrowFunctionExpression,this.id=null,this.params=c,this.body=n,this.generator=!1,this.expression=t,this.async=!0};n.AsyncArrowFunctionExpression=i;var C=function(c,n,t){this.type=e.Syntax.FunctionDeclaration,this.id=c,this.params=n,this.body=t,this.generator=!1,this.expression=!1,this.async=!0};n.AsyncFunctionDeclaration=C;var F=function(c,n,t){this.type=e.Syntax.FunctionExpression,this.id=c,this.params=n,this.body=t,this.generator=!1,this.expression=!1,this.async=!0};n.AsyncFunctionExpression=F;var r=function(c){this.type=e.Syntax.AwaitExpression,this.argument=c};n.AwaitExpression=r;var X=function(c,n,t){var l="||"===c||"&&"===c;this.type=l?e.Syntax.LogicalExpression:e.Syntax.BinaryExpression,this.operator=c,this.left=n,this.right=t};n.BinaryExpression=X;var o=function(c){this.type=e.Syntax.BlockStatement,this.body=c};n.BlockStatement=o;var s=function(c){this.type=e.Syntax.BreakStatement,this.label=c};n.BreakStatement=s;var Z=function(c,n){this.type=e.Syntax.CallExpression,this.callee=c,this.arguments=n};n.CallExpression=Z;var B=function(c,n){this.type=e.Syntax.CatchClause,this.param=c,this.body=n};n.CatchClause=B;var V=function(c){this.type=e.Syntax.ClassBody,this.body=c};n.ClassBody=V;var A=function(c,n,t){this.type=e.Syntax.ClassDeclaration,this.id=c,this.superClass=n,this.body=t};n.ClassDeclaration=A;var G=function(c,n,t){this.type=e.Syntax.ClassExpression,this.id=c,this.superClass=n,this.body=t};n.ClassExpression=G;var b=function(c,n){this.type=e.Syntax.MemberExpression,this.computed=!0,this.object=c,this.property=n};n.ComputedMemberExpression=b;var h=function(c,n,t){this.type=e.Syntax.ConditionalExpression,this.test=c,this.consequent=n,this.alternate=t};n.ConditionalExpression=h;var U=function(c){this.type=e.Syntax.ContinueStatement,this.label=c};n.ContinueStatement=U;var Q=function(){this.type=e.Syntax.DebuggerStatement};n.DebuggerStatement=Q;var u=function(c,n){this.type=e.Syntax.ExpressionStatement,this.expression=c,this.directive=n};n.Directive=u;var W=function(c,n){this.type=e.Syntax.DoWhileStatement,this.body=c,this.test=n};n.DoWhileStatement=W;var m=function(){this.type=e.Syntax.EmptyStatement};n.EmptyStatement=m;var R=function(c){this.type=e.Syntax.ExportAllDeclaration,this.source=c};n.ExportAllDeclaration=R;var J=function(c){this.type=e.Syntax.ExportDefaultDeclaration,this.declaration=c};n.ExportDefaultDeclaration=J;var p=function(c,n,t){this.type=e.Syntax.ExportNamedDeclaration,this.declaration=c,this.specifiers=n,this.source=t};n.ExportNamedDeclaration=p;var x=function(c,n){this.type=e.Syntax.ExportSpecifier,this.exported=n,this.local=c};n.ExportSpecifier=x;var N=function(c){this.type=e.Syntax.ExpressionStatement,this.expression=c};n.ExpressionStatement=N;var Y=function(c,n,t){this.type=e.Syntax.ForInStatement,this.left=c,this.right=n,this.body=t,this.each=!1};n.ForInStatement=Y;var y=function(c,n,t){this.type=e.Syntax.ForOfStatement,this.left=c,this.right=n,this.body=t};n.ForOfStatement=y;var S=function(c,n,t,l){this.type=e.Syntax.ForStatement,this.init=c,this.test=n,this.update=t,this.body=l};n.ForStatement=S;var k=function(c,n,t,l){this.type=e.Syntax.FunctionDeclaration,this.id=c,this.params=n,this.body=t,this.generator=l,this.expression=!1,this.async=!1};n.FunctionDeclaration=k;var H=function(c,n,t,l){this.type=e.Syntax.FunctionExpression,this.id=c,this.params=n,this.body=t,this.generator=l,this.expression=!1,this.async=!1};n.FunctionExpression=H;var E=function(c){this.type=e.Syntax.Identifier,this.name=c};n.Identifier=E;var T=function(c,n,t){this.type=e.Syntax.IfStatement,this.test=c,this.consequent=n,this.alternate=t};n.IfStatement=T;var v=function(c,n){this.type=e.Syntax.ImportDeclaration,this.specifiers=c,this.source=n};n.ImportDeclaration=v;var z=function(c){this.type=e.Syntax.ImportDefaultSpecifier,this.local=c};n.ImportDefaultSpecifier=z;var D=function(c){this.type=e.Syntax.ImportNamespaceSpecifier,this.local=c};n.ImportNamespaceSpecifier=D;var f=function(c,n){this.type=e.Syntax.ImportSpecifier,this.local=c,this.imported=n};n.ImportSpecifier=f;var w=function(c,n){this.type=e.Syntax.LabeledStatement,this.label=c,this.body=n};n.LabeledStatement=w;var j=function(c,n){this.type=e.Syntax.Literal,this.value=c,this.raw=n};n.Literal=j;var K=function(c,n){this.type=e.Syntax.MetaProperty,this.meta=c,this.property=n};n.MetaProperty=K;var M=function(c,n,t,l,g){this.type=e.Syntax.MethodDefinition,this.key=c,this.computed=n,this.value=t,this.kind=l,this.static=g};n.MethodDefinition=M;var O=function(c){this.type=e.Syntax.Program,this.body=c,this.sourceType="module"};n.Module=O;var L=function(c,n){this.type=e.Syntax.NewExpression,this.callee=c,this.arguments=n};n.NewExpression=L;var P=function(c){this.type=e.Syntax.ObjectExpression,this.properties=c};n.ObjectExpression=P;var _=function(c){this.type=e.Syntax.ObjectPattern,this.properties=c};n.ObjectPattern=_;var q=function(c,n,t,l,g,I){this.type=e.Syntax.Property,this.key=n,this.computed=t,this.value=l,this.kind=c,this.method=g,this.shorthand=I};n.Property=q;var $=function(c,n,t,l){this.type=e.Syntax.Literal,this.value=c,this.raw=n,this.regex={pattern:t,flags:l}};n.RegexLiteral=$;var cc=function(c){this.type=e.Syntax.RestElement,this.argument=c};n.RestElement=cc;var nc=function(c){this.type=e.Syntax.ReturnStatement,this.argument=c};n.ReturnStatement=nc;var tc=function(c){this.type=e.Syntax.Program,this.body=c,this.sourceType="script"};n.Script=tc;var ec=function(c){this.type=e.Syntax.SequenceExpression,this.expressions=c};n.SequenceExpression=ec;var lc=function(c){this.type=e.Syntax.SpreadElement,this.argument=c};n.SpreadElement=lc;var gc=function(c,n){this.type=e.Syntax.MemberExpression,this.computed=!1,this.object=c,this.property=n};n.StaticMemberExpression=gc;var Ic=function(){this.type=e.Syntax.Super};n.Super=Ic;var ac=function(c,n){this.type=e.Syntax.SwitchCase,this.test=c,this.consequent=n};n.SwitchCase=ac;var dc=function(c,n){this.type=e.Syntax.SwitchStatement,this.discriminant=c,this.cases=n};n.SwitchStatement=dc;var ic=function(c,n){this.type=e.Syntax.TaggedTemplateExpression,this.tag=c,this.quasi=n};n.TaggedTemplateExpression=ic;var Cc=function(c,n){this.type=e.Syntax.TemplateElement,this.value=c,this.tail=n};n.TemplateElement=Cc;var Fc=function(c,n){this.type=e.Syntax.TemplateLiteral,this.quasis=c,this.expressions=n};n.TemplateLiteral=Fc;var rc=function(){this.type=e.Syntax.ThisExpression};n.ThisExpression=rc;var Xc=function(c){this.type=e.Syntax.ThrowStatement,this.argument=c};n.ThrowStatement=Xc;var oc=function(c,n,t){this.type=e.Syntax.TryStatement,this.block=c,this.handler=n,this.finalizer=t};n.TryStatement=oc;var sc=function(c,n){this.type=e.Syntax.UnaryExpression,this.operator=c,this.argument=n,this.prefix=!0};n.UnaryExpression=sc;var Zc=function(c,n,t){this.type=e.Syntax.UpdateExpression,this.operator=c,this.argument=n,this.prefix=t};n.UpdateExpression=Zc;var Bc=function(c,n){this.type=e.Syntax.VariableDeclaration,this.declarations=c,this.kind=n};n.VariableDeclaration=Bc;var Vc=function(c,n){this.type=e.Syntax.VariableDeclarator,this.id=c,this.init=n};n.VariableDeclarator=Vc;var Ac=function(c,n){this.type=e.Syntax.WhileStatement,this.test=c,this.body=n};n.WhileStatement=Ac;var Gc=function(c,n){this.type=e.Syntax.WithStatement,this.object=c,this.body=n};n.WithStatement=Gc;var bc=function(c,n){this.type=e.Syntax.YieldExpression,this.argument=c,this.delegate=n};n.YieldExpression=bc},function(c,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(9),l=t(10),g=t(11),I=t(7),a=t(12),d=t(2),i=t(13),C=function(){function c(c,n,t){void 0===n&&(n={}),this.config={range:"boolean"==typeof n.range&&n.range,loc:"boolean"==typeof n.loc&&n.loc,source:null,tokens:"boolean"==typeof n.tokens&&n.tokens,comment:"boolean"==typeof n.comment&&n.comment,tolerant:"boolean"==typeof n.tolerant&&n.tolerant},this.config.loc&&n.source&&null!==n.source&&(this.config.source=String(n.source)),this.delegate=t,this.errorHandler=new l.ErrorHandler,this.errorHandler.tolerant=this.config.tolerant,this.scanner=new a.Scanner(c,this.errorHandler),this.scanner.trackComment=this.config.comment,this.operatorPrecedence={")":0,";":0,",":0,"=":0,"]":0,"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":11,"/":11,"%":11},this.lookahead={type:2,value:"",lineNumber:this.scanner.lineNumber,lineStart:0,start:0,end:0},this.hasLineTerminator=!1,this.context={isModule:!1,await:!1,allowIn:!0,allowStrictDirective:!0,allowYield:!0,firstCoverInitializedNameError:null,isAssignmentTarget:!1,isBindingElement:!1,inFunctionBody:!1,inIteration:!1,inSwitch:!1,labelSet:{},strict:!1},this.tokens=[],this.startMarker={index:0,line:this.scanner.lineNumber,column:0},this.lastMarker={index:0,line:this.scanner.lineNumber,column:0},this.nextToken(),this.lastMarker={index:this.scanner.index,line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}return c.prototype.throwError=function(c){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];var l=Array.prototype.slice.call(arguments,1),g=c.replace(/%(\d)/g,(function(c,n){return e.assert(n<l.length,"Message reference must be in range"),l[n]})),I=this.lastMarker.index,a=this.lastMarker.line,d=this.lastMarker.column+1;throw this.errorHandler.createError(I,a,d,g)},c.prototype.tolerateError=function(c){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];var l=Array.prototype.slice.call(arguments,1),g=c.replace(/%(\d)/g,(function(c,n){return e.assert(n<l.length,"Message reference must be in range"),l[n]})),I=this.lastMarker.index,a=this.scanner.lineNumber,d=this.lastMarker.column+1;this.errorHandler.tolerateError(I,a,d,g)},c.prototype.unexpectedTokenError=function(c,n){var t,e=n||g.Messages.UnexpectedToken;if(c?(n||(e=2===c.type?g.Messages.UnexpectedEOS:3===c.type?g.Messages.UnexpectedIdentifier:6===c.type?g.Messages.UnexpectedNumber:8===c.type?g.Messages.UnexpectedString:10===c.type?g.Messages.UnexpectedTemplate:g.Messages.UnexpectedToken,4===c.type&&(this.scanner.isFutureReservedWord(c.value)?e=g.Messages.UnexpectedReserved:this.context.strict&&this.scanner.isStrictModeReservedWord(c.value)&&(e=g.Messages.StrictReservedWord))),t=c.value):t="ILLEGAL",e=e.replace("%0",t),c&&"number"==typeof c.lineNumber){var l=c.start,I=c.lineNumber,a=this.lastMarker.index-this.lastMarker.column,d=c.start-a+1;return this.errorHandler.createError(l,I,d,e)}return l=this.lastMarker.index,I=this.lastMarker.line,d=this.lastMarker.column+1,this.errorHandler.createError(l,I,d,e)},c.prototype.throwUnexpectedToken=function(c,n){throw this.unexpectedTokenError(c,n)},c.prototype.tolerateUnexpectedToken=function(c,n){this.errorHandler.tolerate(this.unexpectedTokenError(c,n))},c.prototype.collectComments=function(){if(this.config.comment){var c=this.scanner.scanComments();if(c.length>0&&this.delegate)for(var n=0;n<c.length;++n){var t=c[n],e=void 0;e={type:t.multiLine?"BlockComment":"LineComment",value:this.scanner.source.slice(t.slice[0],t.slice[1])},this.config.range&&(e.range=t.range),this.config.loc&&(e.loc=t.loc);var l={start:{line:t.loc.start.line,column:t.loc.start.column,offset:t.range[0]},end:{line:t.loc.end.line,column:t.loc.end.column,offset:t.range[1]}};this.delegate(e,l)}}else this.scanner.scanComments()},c.prototype.getTokenRaw=function(c){return this.scanner.source.slice(c.start,c.end)},c.prototype.convertToken=function(c){var n={type:i.TokenName[c.type],value:this.getTokenRaw(c)};if(this.config.range&&(n.range=[c.start,c.end]),this.config.loc&&(n.loc={start:{line:this.startMarker.line,column:this.startMarker.column},end:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart}}),9===c.type){var t=c.pattern,e=c.flags;n.regex={pattern:t,flags:e}}return n},c.prototype.nextToken=function(){var c=this.lookahead;this.lastMarker.index=this.scanner.index,this.lastMarker.line=this.scanner.lineNumber,this.lastMarker.column=this.scanner.index-this.scanner.lineStart,this.collectComments(),this.scanner.index!==this.startMarker.index&&(this.startMarker.index=this.scanner.index,this.startMarker.line=this.scanner.lineNumber,this.startMarker.column=this.scanner.index-this.scanner.lineStart);var n=this.scanner.lex();return this.hasLineTerminator=c.lineNumber!==n.lineNumber,n&&this.context.strict&&3===n.type&&this.scanner.isStrictModeReservedWord(n.value)&&(n.type=4),this.lookahead=n,this.config.tokens&&2!==n.type&&this.tokens.push(this.convertToken(n)),c},c.prototype.nextRegexToken=function(){this.collectComments();var c=this.scanner.scanRegExp();return this.config.tokens&&(this.tokens.pop(),this.tokens.push(this.convertToken(c))),this.lookahead=c,this.nextToken(),c},c.prototype.createNode=function(){return{index:this.startMarker.index,line:this.startMarker.line,column:this.startMarker.column}},c.prototype.startNode=function(c,n){void 0===n&&(n=0);var t=c.start-c.lineStart,e=c.lineNumber;return t<0&&(t+=n,e--),{index:c.start,line:e,column:t}},c.prototype.finalize=function(c,n){if(this.config.range&&(n.range=[c.index,this.lastMarker.index]),this.config.loc&&(n.loc={start:{line:c.line,column:c.column},end:{line:this.lastMarker.line,column:this.lastMarker.column}},this.config.source&&(n.loc.source=this.config.source)),this.delegate){var t={start:{line:c.line,column:c.column,offset:c.index},end:{line:this.lastMarker.line,column:this.lastMarker.column,offset:this.lastMarker.index}};this.delegate(n,t)}return n},c.prototype.expect=function(c){var n=this.nextToken();7===n.type&&n.value===c||this.throwUnexpectedToken(n)},c.prototype.expectCommaSeparator=function(){if(this.config.tolerant){var c=this.lookahead;7===c.type&&","===c.value?this.nextToken():7===c.type&&";"===c.value?(this.nextToken(),this.tolerateUnexpectedToken(c)):this.tolerateUnexpectedToken(c,g.Messages.UnexpectedToken)}else this.expect(",")},c.prototype.expectKeyword=function(c){var n=this.nextToken();4===n.type&&n.value===c||this.throwUnexpectedToken(n)},c.prototype.match=function(c){return 7===this.lookahead.type&&this.lookahead.value===c},c.prototype.matchKeyword=function(c){return 4===this.lookahead.type&&this.lookahead.value===c},c.prototype.matchContextualKeyword=function(c){return 3===this.lookahead.type&&this.lookahead.value===c},c.prototype.matchAssign=function(){if(7!==this.lookahead.type)return!1;var c=this.lookahead.value;return"="===c||"*="===c||"**="===c||"/="===c||"%="===c||"+="===c||"-="===c||"<<="===c||">>="===c||">>>="===c||"&="===c||"^="===c||"|="===c},c.prototype.isolateCoverGrammar=function(c){var n=this.context.isBindingElement,t=this.context.isAssignmentTarget,e=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var l=c.call(this);return null!==this.context.firstCoverInitializedNameError&&this.throwUnexpectedToken(this.context.firstCoverInitializedNameError),this.context.isBindingElement=n,this.context.isAssignmentTarget=t,this.context.firstCoverInitializedNameError=e,l},c.prototype.inheritCoverGrammar=function(c){var n=this.context.isBindingElement,t=this.context.isAssignmentTarget,e=this.context.firstCoverInitializedNameError;this.context.isBindingElement=!0,this.context.isAssignmentTarget=!0,this.context.firstCoverInitializedNameError=null;var l=c.call(this);return this.context.isBindingElement=this.context.isBindingElement&&n,this.context.isAssignmentTarget=this.context.isAssignmentTarget&&t,this.context.firstCoverInitializedNameError=e||this.context.firstCoverInitializedNameError,l},c.prototype.consumeSemicolon=function(){this.match(";")?this.nextToken():this.hasLineTerminator||(2===this.lookahead.type||this.match("}")||this.throwUnexpectedToken(this.lookahead),this.lastMarker.index=this.startMarker.index,this.lastMarker.line=this.startMarker.line,this.lastMarker.column=this.startMarker.column)},c.prototype.parsePrimaryExpression=function(){var c,n,t,e=this.createNode();switch(this.lookahead.type){case 3:(this.context.isModule||this.context.await)&&"await"===this.lookahead.value&&this.tolerateUnexpectedToken(this.lookahead),c=this.matchAsyncFunction()?this.parseFunctionExpression():this.finalize(e,new I.Identifier(this.nextToken().value));break;case 6:case 8:this.context.strict&&this.lookahead.octal&&this.tolerateUnexpectedToken(this.lookahead,g.Messages.StrictOctalLiteral),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,n=this.nextToken(),t=this.getTokenRaw(n),c=this.finalize(e,new I.Literal(n.value,t));break;case 1:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,n=this.nextToken(),t=this.getTokenRaw(n),c=this.finalize(e,new I.Literal("true"===n.value,t));break;case 5:this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,n=this.nextToken(),t=this.getTokenRaw(n),c=this.finalize(e,new I.Literal(null,t));break;case 10:c=this.parseTemplateLiteral();break;case 7:switch(this.lookahead.value){case"(":this.context.isBindingElement=!1,c=this.inheritCoverGrammar(this.parseGroupExpression);break;case"[":c=this.inheritCoverGrammar(this.parseArrayInitializer);break;case"{":c=this.inheritCoverGrammar(this.parseObjectInitializer);break;case"/":case"/=":this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.scanner.index=this.startMarker.index,n=this.nextRegexToken(),t=this.getTokenRaw(n),c=this.finalize(e,new I.RegexLiteral(n.regex,t,n.pattern,n.flags));break;default:c=this.throwUnexpectedToken(this.nextToken())}break;case 4:!this.context.strict&&this.context.allowYield&&this.matchKeyword("yield")?c=this.parseIdentifierName():!this.context.strict&&this.matchKeyword("let")?c=this.finalize(e,new I.Identifier(this.nextToken().value)):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.matchKeyword("function")?c=this.parseFunctionExpression():this.matchKeyword("this")?(this.nextToken(),c=this.finalize(e,new I.ThisExpression)):c=this.matchKeyword("class")?this.parseClassExpression():this.throwUnexpectedToken(this.nextToken()));break;default:c=this.throwUnexpectedToken(this.nextToken())}return c},c.prototype.parseSpreadElement=function(){var c=this.createNode();this.expect("...");var n=this.inheritCoverGrammar(this.parseAssignmentExpression);return this.finalize(c,new I.SpreadElement(n))},c.prototype.parseArrayInitializer=function(){var c=this.createNode(),n=[];for(this.expect("[");!this.match("]");)if(this.match(","))this.nextToken(),n.push(null);else if(this.match("...")){var t=this.parseSpreadElement();this.match("]")||(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1,this.expect(",")),n.push(t)}else n.push(this.inheritCoverGrammar(this.parseAssignmentExpression)),this.match("]")||this.expect(",");return this.expect("]"),this.finalize(c,new I.ArrayExpression(n))},c.prototype.parsePropertyMethod=function(c){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var n=this.context.strict,t=this.context.allowStrictDirective;this.context.allowStrictDirective=c.simple;var e=this.isolateCoverGrammar(this.parseFunctionSourceElements);return this.context.strict&&c.firstRestricted&&this.tolerateUnexpectedToken(c.firstRestricted,c.message),this.context.strict&&c.stricted&&this.tolerateUnexpectedToken(c.stricted,c.message),this.context.strict=n,this.context.allowStrictDirective=t,e},c.prototype.parsePropertyMethodFunction=function(){var c=this.createNode(),n=this.context.allowYield;this.context.allowYield=!0;var t=this.parseFormalParameters(),e=this.parsePropertyMethod(t);return this.context.allowYield=n,this.finalize(c,new I.FunctionExpression(null,t.params,e,!1))},c.prototype.parsePropertyMethodAsyncFunction=function(){var c=this.createNode(),n=this.context.allowYield,t=this.context.await;this.context.allowYield=!1,this.context.await=!0;var e=this.parseFormalParameters(),l=this.parsePropertyMethod(e);return this.context.allowYield=n,this.context.await=t,this.finalize(c,new I.AsyncFunctionExpression(null,e.params,l))},c.prototype.parseObjectPropertyKey=function(){var c,n=this.createNode(),t=this.nextToken();switch(t.type){case 8:case 6:this.context.strict&&t.octal&&this.tolerateUnexpectedToken(t,g.Messages.StrictOctalLiteral);var e=this.getTokenRaw(t);c=this.finalize(n,new I.Literal(t.value,e));break;case 3:case 1:case 5:case 4:c=this.finalize(n,new I.Identifier(t.value));break;case 7:"["===t.value?(c=this.isolateCoverGrammar(this.parseAssignmentExpression),this.expect("]")):c=this.throwUnexpectedToken(t);break;default:c=this.throwUnexpectedToken(t)}return c},c.prototype.isPropertyKey=function(c,n){return c.type===d.Syntax.Identifier&&c.name===n||c.type===d.Syntax.Literal&&c.value===n},c.prototype.parseObjectProperty=function(c){var n,t=this.createNode(),e=this.lookahead,l=null,a=null,d=!1,i=!1,C=!1,F=!1;if(3===e.type){var r=e.value;this.nextToken(),d=this.match("["),l=(F=!(this.hasLineTerminator||"async"!==r||this.match(":")||this.match("(")||this.match("*")||this.match(",")))?this.parseObjectPropertyKey():this.finalize(t,new I.Identifier(r))}else this.match("*")?this.nextToken():(d=this.match("["),l=this.parseObjectPropertyKey());var X=this.qualifiedPropertyName(this.lookahead);if(3===e.type&&!F&&"get"===e.value&&X)n="get",d=this.match("["),l=this.parseObjectPropertyKey(),this.context.allowYield=!1,a=this.parseGetterMethod();else if(3===e.type&&!F&&"set"===e.value&&X)n="set",d=this.match("["),l=this.parseObjectPropertyKey(),a=this.parseSetterMethod();else if(7===e.type&&"*"===e.value&&X)n="init",d=this.match("["),l=this.parseObjectPropertyKey(),a=this.parseGeneratorMethod(),i=!0;else if(l||this.throwUnexpectedToken(this.lookahead),n="init",this.match(":")&&!F)!d&&this.isPropertyKey(l,"__proto__")&&(c.value&&this.tolerateError(g.Messages.DuplicateProtoProperty),c.value=!0),this.nextToken(),a=this.inheritCoverGrammar(this.parseAssignmentExpression);else if(this.match("("))a=F?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),i=!0;else if(3===e.type)if(r=this.finalize(t,new I.Identifier(e.value)),this.match("=")){this.context.firstCoverInitializedNameError=this.lookahead,this.nextToken(),C=!0;var o=this.isolateCoverGrammar(this.parseAssignmentExpression);a=this.finalize(t,new I.AssignmentPattern(r,o))}else C=!0,a=r;else this.throwUnexpectedToken(this.nextToken());return this.finalize(t,new I.Property(n,l,d,a,i,C))},c.prototype.parseObjectInitializer=function(){var c=this.createNode();this.expect("{");for(var n=[],t={value:!1};!this.match("}");)n.push(this.parseObjectProperty(t)),this.match("}")||this.expectCommaSeparator();return this.expect("}"),this.finalize(c,new I.ObjectExpression(n))},c.prototype.parseTemplateHead=function(){e.assert(this.lookahead.head,"Template literal must start with a template head");var c=this.createNode(),n=this.nextToken(),t=n.value,l=n.cooked;return this.finalize(c,new I.TemplateElement({raw:t,cooked:l},n.tail))},c.prototype.parseTemplateElement=function(){10!==this.lookahead.type&&this.throwUnexpectedToken();var c=this.createNode(),n=this.nextToken(),t=n.value,e=n.cooked;return this.finalize(c,new I.TemplateElement({raw:t,cooked:e},n.tail))},c.prototype.parseTemplateLiteral=function(){var c=this.createNode(),n=[],t=[],e=this.parseTemplateHead();for(t.push(e);!e.tail;)n.push(this.parseExpression()),e=this.parseTemplateElement(),t.push(e);return this.finalize(c,new I.TemplateLiteral(t,n))},c.prototype.reinterpretExpressionAsPattern=function(c){switch(c.type){case d.Syntax.Identifier:case d.Syntax.MemberExpression:case d.Syntax.RestElement:case d.Syntax.AssignmentPattern:break;case d.Syntax.SpreadElement:c.type=d.Syntax.RestElement,this.reinterpretExpressionAsPattern(c.argument);break;case d.Syntax.ArrayExpression:c.type=d.Syntax.ArrayPattern;for(var n=0;n<c.elements.length;n++)null!==c.elements[n]&&this.reinterpretExpressionAsPattern(c.elements[n]);break;case d.Syntax.ObjectExpression:for(c.type=d.Syntax.ObjectPattern,n=0;n<c.properties.length;n++)this.reinterpretExpressionAsPattern(c.properties[n].value);break;case d.Syntax.AssignmentExpression:c.type=d.Syntax.AssignmentPattern,delete c.operator,this.reinterpretExpressionAsPattern(c.left)}},c.prototype.parseGroupExpression=function(){var c;if(this.expect("("),this.match(")"))this.nextToken(),this.match("=>")||this.expect("=>"),c={type:"ArrowParameterPlaceHolder",params:[],async:!1};else{var n=this.lookahead,t=[];if(this.match("..."))c=this.parseRestElement(t),this.expect(")"),this.match("=>")||this.expect("=>"),c={type:"ArrowParameterPlaceHolder",params:[c],async:!1};else{var e=!1;if(this.context.isBindingElement=!0,c=this.inheritCoverGrammar(this.parseAssignmentExpression),this.match(",")){var l=[];for(this.context.isAssignmentTarget=!1,l.push(c);2!==this.lookahead.type&&this.match(",");){if(this.nextToken(),this.match(")")){this.nextToken();for(var g=0;g<l.length;g++)this.reinterpretExpressionAsPattern(l[g]);e=!0,c={type:"ArrowParameterPlaceHolder",params:l,async:!1}}else if(this.match("...")){for(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),l.push(this.parseRestElement(t)),this.expect(")"),this.match("=>")||this.expect("=>"),this.context.isBindingElement=!1,g=0;g<l.length;g++)this.reinterpretExpressionAsPattern(l[g]);e=!0,c={type:"ArrowParameterPlaceHolder",params:l,async:!1}}else l.push(this.inheritCoverGrammar(this.parseAssignmentExpression));if(e)break}e||(c=this.finalize(this.startNode(n),new I.SequenceExpression(l)))}if(!e){if(this.expect(")"),this.match("=>")&&(c.type===d.Syntax.Identifier&&"yield"===c.name&&(e=!0,c={type:"ArrowParameterPlaceHolder",params:[c],async:!1}),!e)){if(this.context.isBindingElement||this.throwUnexpectedToken(this.lookahead),c.type===d.Syntax.SequenceExpression)for(g=0;g<c.expressions.length;g++)this.reinterpretExpressionAsPattern(c.expressions[g]);else this.reinterpretExpressionAsPattern(c);c={type:"ArrowParameterPlaceHolder",params:c.type===d.Syntax.SequenceExpression?c.expressions:[c],async:!1}}this.context.isBindingElement=!1}}}return c},c.prototype.parseArguments=function(){this.expect("(");var c=[];if(!this.match(")"))for(;;){var n=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAssignmentExpression);if(c.push(n),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),c},c.prototype.isIdentifierName=function(c){return 3===c.type||4===c.type||1===c.type||5===c.type},c.prototype.parseIdentifierName=function(){var c=this.createNode(),n=this.nextToken();return this.isIdentifierName(n)||this.throwUnexpectedToken(n),this.finalize(c,new I.Identifier(n.value))},c.prototype.parseNewExpression=function(){var c,n=this.createNode(),t=this.parseIdentifierName();if(e.assert("new"===t.name,"New expression must start with `new`"),this.match("."))if(this.nextToken(),3===this.lookahead.type&&this.context.inFunctionBody&&"target"===this.lookahead.value){var l=this.parseIdentifierName();c=new I.MetaProperty(t,l)}else this.throwUnexpectedToken(this.lookahead);else{var g=this.isolateCoverGrammar(this.parseLeftHandSideExpression),a=this.match("(")?this.parseArguments():[];c=new I.NewExpression(g,a),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return this.finalize(n,c)},c.prototype.parseAsyncArgument=function(){var c=this.parseAssignmentExpression();return this.context.firstCoverInitializedNameError=null,c},c.prototype.parseAsyncArguments=function(){this.expect("(");var c=[];if(!this.match(")"))for(;;){var n=this.match("...")?this.parseSpreadElement():this.isolateCoverGrammar(this.parseAsyncArgument);if(c.push(n),this.match(")"))break;if(this.expectCommaSeparator(),this.match(")"))break}return this.expect(")"),c},c.prototype.parseLeftHandSideExpressionAllowCall=function(){var c,n=this.lookahead,t=this.matchContextualKeyword("async"),e=this.context.allowIn;for(this.context.allowIn=!0,this.matchKeyword("super")&&this.context.inFunctionBody?(c=this.createNode(),this.nextToken(),c=this.finalize(c,new I.Super),this.match("(")||this.match(".")||this.match("[")||this.throwUnexpectedToken(this.lookahead)):c=this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match(".")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect(".");var l=this.parseIdentifierName();c=this.finalize(this.startNode(n),new I.StaticMemberExpression(c,l))}else if(this.match("(")){var g=t&&n.lineNumber===this.lookahead.lineNumber;this.context.isBindingElement=!1,this.context.isAssignmentTarget=!1;var a=g?this.parseAsyncArguments():this.parseArguments();if(c=this.finalize(this.startNode(n),new I.CallExpression(c,a)),g&&this.match("=>")){for(var d=0;d<a.length;++d)this.reinterpretExpressionAsPattern(a[d]);c={type:"ArrowParameterPlaceHolder",params:a,async:!0}}}else if(this.match("["))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("["),l=this.isolateCoverGrammar(this.parseExpression),this.expect("]"),c=this.finalize(this.startNode(n),new I.ComputedMemberExpression(c,l));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var i=this.parseTemplateLiteral();c=this.finalize(this.startNode(n),new I.TaggedTemplateExpression(c,i))}return this.context.allowIn=e,c},c.prototype.parseSuper=function(){var c=this.createNode();return this.expectKeyword("super"),this.match("[")||this.match(".")||this.throwUnexpectedToken(this.lookahead),this.finalize(c,new I.Super)},c.prototype.parseLeftHandSideExpression=function(){e.assert(this.context.allowIn,"callee of new expression always allow in keyword.");for(var c=this.startNode(this.lookahead),n=this.matchKeyword("super")&&this.context.inFunctionBody?this.parseSuper():this.inheritCoverGrammar(this.matchKeyword("new")?this.parseNewExpression:this.parsePrimaryExpression);;)if(this.match("[")){this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("[");var t=this.isolateCoverGrammar(this.parseExpression);this.expect("]"),n=this.finalize(c,new I.ComputedMemberExpression(n,t))}else if(this.match("."))this.context.isBindingElement=!1,this.context.isAssignmentTarget=!0,this.expect("."),t=this.parseIdentifierName(),n=this.finalize(c,new I.StaticMemberExpression(n,t));else{if(10!==this.lookahead.type||!this.lookahead.head)break;var l=this.parseTemplateLiteral();n=this.finalize(c,new I.TaggedTemplateExpression(n,l))}return n},c.prototype.parseUpdateExpression=function(){var c,n=this.lookahead;if(this.match("++")||this.match("--")){var t=this.startNode(n),e=this.nextToken();c=this.inheritCoverGrammar(this.parseUnaryExpression),this.context.strict&&c.type===d.Syntax.Identifier&&this.scanner.isRestrictedWord(c.name)&&this.tolerateError(g.Messages.StrictLHSPrefix),this.context.isAssignmentTarget||this.tolerateError(g.Messages.InvalidLHSInAssignment);var l=!0;c=this.finalize(t,new I.UpdateExpression(e.value,c,l)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else if(c=this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall),!this.hasLineTerminator&&7===this.lookahead.type&&(this.match("++")||this.match("--"))){this.context.strict&&c.type===d.Syntax.Identifier&&this.scanner.isRestrictedWord(c.name)&&this.tolerateError(g.Messages.StrictLHSPostfix),this.context.isAssignmentTarget||this.tolerateError(g.Messages.InvalidLHSInAssignment),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var a=this.nextToken().value;l=!1,c=this.finalize(this.startNode(n),new I.UpdateExpression(a,c,l))}return c},c.prototype.parseAwaitExpression=function(){var c=this.createNode();this.nextToken();var n=this.parseUnaryExpression();return this.finalize(c,new I.AwaitExpression(n))},c.prototype.parseUnaryExpression=function(){var c;if(this.match("+")||this.match("-")||this.match("~")||this.match("!")||this.matchKeyword("delete")||this.matchKeyword("void")||this.matchKeyword("typeof")){var n=this.startNode(this.lookahead),t=this.nextToken();c=this.inheritCoverGrammar(this.parseUnaryExpression),c=this.finalize(n,new I.UnaryExpression(t.value,c)),this.context.strict&&"delete"===c.operator&&c.argument.type===d.Syntax.Identifier&&this.tolerateError(g.Messages.StrictDelete),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}else c=this.context.await&&this.matchContextualKeyword("await")?this.parseAwaitExpression():this.parseUpdateExpression();return c},c.prototype.parseExponentiationExpression=function(){var c=this.lookahead,n=this.inheritCoverGrammar(this.parseUnaryExpression);if(n.type!==d.Syntax.UnaryExpression&&this.match("**")){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var t=n,e=this.isolateCoverGrammar(this.parseExponentiationExpression);n=this.finalize(this.startNode(c),new I.BinaryExpression("**",t,e))}return n},c.prototype.binaryPrecedence=function(c){var n=c.value;return 7===c.type?this.operatorPrecedence[n]||0:4===c.type&&("instanceof"===n||this.context.allowIn&&"in"===n)?7:0},c.prototype.parseBinaryExpression=function(){var c=this.lookahead,n=this.inheritCoverGrammar(this.parseExponentiationExpression),t=this.lookahead,e=this.binaryPrecedence(t);if(e>0){this.nextToken(),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;for(var l=[c,this.lookahead],g=n,a=this.isolateCoverGrammar(this.parseExponentiationExpression),d=[g,t.value,a],i=[e];!((e=this.binaryPrecedence(this.lookahead))<=0);){for(;d.length>2&&e<=i[i.length-1];){a=d.pop();var C=d.pop();i.pop(),g=d.pop(),l.pop();var F=this.startNode(l[l.length-1]);d.push(this.finalize(F,new I.BinaryExpression(C,g,a)))}d.push(this.nextToken().value),i.push(e),l.push(this.lookahead),d.push(this.isolateCoverGrammar(this.parseExponentiationExpression))}var r=d.length-1;n=d[r];for(var X=l.pop();r>1;){var o=l.pop(),s=X&&X.lineStart;F=this.startNode(o,s),C=d[r-1],n=this.finalize(F,new I.BinaryExpression(C,d[r-2],n)),r-=2,X=o}}return n},c.prototype.parseConditionalExpression=function(){var c=this.lookahead,n=this.inheritCoverGrammar(this.parseBinaryExpression);if(this.match("?")){this.nextToken();var t=this.context.allowIn;this.context.allowIn=!0;var e=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowIn=t,this.expect(":");var l=this.isolateCoverGrammar(this.parseAssignmentExpression);n=this.finalize(this.startNode(c),new I.ConditionalExpression(n,e,l)),this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1}return n},c.prototype.checkPatternParam=function(c,n){switch(n.type){case d.Syntax.Identifier:this.validateParam(c,n,n.name);break;case d.Syntax.RestElement:this.checkPatternParam(c,n.argument);break;case d.Syntax.AssignmentPattern:this.checkPatternParam(c,n.left);break;case d.Syntax.ArrayPattern:for(var t=0;t<n.elements.length;t++)null!==n.elements[t]&&this.checkPatternParam(c,n.elements[t]);break;case d.Syntax.ObjectPattern:for(t=0;t<n.properties.length;t++)this.checkPatternParam(c,n.properties[t].value)}c.simple=c.simple&&n instanceof I.Identifier},c.prototype.reinterpretAsCoverFormalsList=function(c){var n,t=[c],e=!1;switch(c.type){case d.Syntax.Identifier:break;case"ArrowParameterPlaceHolder":t=c.params,e=c.async;break;default:return null}n={simple:!0,paramSet:{}};for(var l=0;l<t.length;++l)(I=t[l]).type===d.Syntax.AssignmentPattern?I.right.type===d.Syntax.YieldExpression&&(I.right.argument&&this.throwUnexpectedToken(this.lookahead),I.right.type=d.Syntax.Identifier,I.right.name="yield",delete I.right.argument,delete I.right.delegate):e&&I.type===d.Syntax.Identifier&&"await"===I.name&&this.throwUnexpectedToken(this.lookahead),this.checkPatternParam(n,I),t[l]=I;if(this.context.strict||!this.context.allowYield)for(l=0;l<t.length;++l){var I;(I=t[l]).type===d.Syntax.YieldExpression&&this.throwUnexpectedToken(this.lookahead)}if(n.message===g.Messages.StrictParamDupe){var a=this.context.strict?n.stricted:n.firstRestricted;this.throwUnexpectedToken(a,n.message)}return{simple:n.simple,params:t,stricted:n.stricted,firstRestricted:n.firstRestricted,message:n.message}},c.prototype.parseAssignmentExpression=function(){var c;if(!this.context.allowYield&&this.matchKeyword("yield"))c=this.parseYieldExpression();else{var n=this.lookahead,t=n;if(c=this.parseConditionalExpression(),3===t.type&&t.lineNumber===this.lookahead.lineNumber&&"async"===t.value&&(3===this.lookahead.type||this.matchKeyword("yield"))){var e=this.parsePrimaryExpression();this.reinterpretExpressionAsPattern(e),c={type:"ArrowParameterPlaceHolder",params:[e],async:!0}}if("ArrowParameterPlaceHolder"===c.type||this.match("=>")){this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1;var l=c.async,a=this.reinterpretAsCoverFormalsList(c);if(a){this.hasLineTerminator&&this.tolerateUnexpectedToken(this.lookahead),this.context.firstCoverInitializedNameError=null;var i=this.context.strict,C=this.context.allowStrictDirective;this.context.allowStrictDirective=a.simple;var F=this.context.allowYield,r=this.context.await;this.context.allowYield=!0,this.context.await=l;var X=this.startNode(n);this.expect("=>");var o=void 0;if(this.match("{")){var s=this.context.allowIn;this.context.allowIn=!0,o=this.parseFunctionSourceElements(),this.context.allowIn=s}else o=this.isolateCoverGrammar(this.parseAssignmentExpression);var Z=o.type!==d.Syntax.BlockStatement;this.context.strict&&a.firstRestricted&&this.throwUnexpectedToken(a.firstRestricted,a.message),this.context.strict&&a.stricted&&this.tolerateUnexpectedToken(a.stricted,a.message),c=l?this.finalize(X,new I.AsyncArrowFunctionExpression(a.params,o,Z)):this.finalize(X,new I.ArrowFunctionExpression(a.params,o,Z)),this.context.strict=i,this.context.allowStrictDirective=C,this.context.allowYield=F,this.context.await=r}}else if(this.matchAssign()){if(this.context.isAssignmentTarget||this.tolerateError(g.Messages.InvalidLHSInAssignment),this.context.strict&&c.type===d.Syntax.Identifier){var B=c;this.scanner.isRestrictedWord(B.name)&&this.tolerateUnexpectedToken(t,g.Messages.StrictLHSAssignment),this.scanner.isStrictModeReservedWord(B.name)&&this.tolerateUnexpectedToken(t,g.Messages.StrictReservedWord)}this.match("=")?this.reinterpretExpressionAsPattern(c):(this.context.isAssignmentTarget=!1,this.context.isBindingElement=!1);var V=(t=this.nextToken()).value,A=this.isolateCoverGrammar(this.parseAssignmentExpression);c=this.finalize(this.startNode(n),new I.AssignmentExpression(V,c,A)),this.context.firstCoverInitializedNameError=null}}return c},c.prototype.parseExpression=function(){var c=this.lookahead,n=this.isolateCoverGrammar(this.parseAssignmentExpression);if(this.match(",")){var t=[];for(t.push(n);2!==this.lookahead.type&&this.match(",");)this.nextToken(),t.push(this.isolateCoverGrammar(this.parseAssignmentExpression));n=this.finalize(this.startNode(c),new I.SequenceExpression(t))}return n},c.prototype.parseStatementListItem=function(){var c;if(this.context.isAssignmentTarget=!0,this.context.isBindingElement=!0,4===this.lookahead.type)switch(this.lookahead.value){case"export":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,g.Messages.IllegalExportDeclaration),c=this.parseExportDeclaration();break;case"import":this.context.isModule||this.tolerateUnexpectedToken(this.lookahead,g.Messages.IllegalImportDeclaration),c=this.parseImportDeclaration();break;case"const":c=this.parseLexicalDeclaration({inFor:!1});break;case"function":c=this.parseFunctionDeclaration();break;case"class":c=this.parseClassDeclaration();break;case"let":c=this.isLexicalDeclaration()?this.parseLexicalDeclaration({inFor:!1}):this.parseStatement();break;default:c=this.parseStatement()}else c=this.parseStatement();return c},c.prototype.parseBlock=function(){var c=this.createNode();this.expect("{");for(var n=[];!this.match("}");)n.push(this.parseStatementListItem());return this.expect("}"),this.finalize(c,new I.BlockStatement(n))},c.prototype.parseLexicalBinding=function(c,n){var t=this.createNode(),e=this.parsePattern([],c);this.context.strict&&e.type===d.Syntax.Identifier&&this.scanner.isRestrictedWord(e.name)&&this.tolerateError(g.Messages.StrictVarName);var l=null;return"const"===c?this.matchKeyword("in")||this.matchContextualKeyword("of")||(this.match("=")?(this.nextToken(),l=this.isolateCoverGrammar(this.parseAssignmentExpression)):this.throwError(g.Messages.DeclarationMissingInitializer,"const")):(!n.inFor&&e.type!==d.Syntax.Identifier||this.match("="))&&(this.expect("="),l=this.isolateCoverGrammar(this.parseAssignmentExpression)),this.finalize(t,new I.VariableDeclarator(e,l))},c.prototype.parseBindingList=function(c,n){for(var t=[this.parseLexicalBinding(c,n)];this.match(",");)this.nextToken(),t.push(this.parseLexicalBinding(c,n));return t},c.prototype.isLexicalDeclaration=function(){var c=this.scanner.saveState();this.scanner.scanComments();var n=this.scanner.lex();return this.scanner.restoreState(c),3===n.type||7===n.type&&"["===n.value||7===n.type&&"{"===n.value||4===n.type&&"let"===n.value||4===n.type&&"yield"===n.value},c.prototype.parseLexicalDeclaration=function(c){var n=this.createNode(),t=this.nextToken().value;e.assert("let"===t||"const"===t,"Lexical declaration must be either let or const");var l=this.parseBindingList(t,c);return this.consumeSemicolon(),this.finalize(n,new I.VariableDeclaration(l,t))},c.prototype.parseBindingRestElement=function(c,n){var t=this.createNode();this.expect("...");var e=this.parsePattern(c,n);return this.finalize(t,new I.RestElement(e))},c.prototype.parseArrayPattern=function(c,n){var t=this.createNode();this.expect("[");for(var e=[];!this.match("]");)if(this.match(","))this.nextToken(),e.push(null);else{if(this.match("...")){e.push(this.parseBindingRestElement(c,n));break}e.push(this.parsePatternWithDefault(c,n)),this.match("]")||this.expect(",")}return this.expect("]"),this.finalize(t,new I.ArrayPattern(e))},c.prototype.parsePropertyPattern=function(c,n){var t,e,l=this.createNode(),g=!1,a=!1;if(3===this.lookahead.type){var d=this.lookahead;t=this.parseVariableIdentifier();var i=this.finalize(l,new I.Identifier(d.value));if(this.match("=")){c.push(d),a=!0,this.nextToken();var C=this.parseAssignmentExpression();e=this.finalize(this.startNode(d),new I.AssignmentPattern(i,C))}else this.match(":")?(this.expect(":"),e=this.parsePatternWithDefault(c,n)):(c.push(d),a=!0,e=i)}else g=this.match("["),t=this.parseObjectPropertyKey(),this.expect(":"),e=this.parsePatternWithDefault(c,n);return this.finalize(l,new I.Property("init",t,g,e,!1,a))},c.prototype.parseObjectPattern=function(c,n){var t=this.createNode(),e=[];for(this.expect("{");!this.match("}");)e.push(this.parsePropertyPattern(c,n)),this.match("}")||this.expect(",");return this.expect("}"),this.finalize(t,new I.ObjectPattern(e))},c.prototype.parsePattern=function(c,n){var t;return this.match("[")?t=this.parseArrayPattern(c,n):this.match("{")?t=this.parseObjectPattern(c,n):(!this.matchKeyword("let")||"const"!==n&&"let"!==n||this.tolerateUnexpectedToken(this.lookahead,g.Messages.LetInLexicalBinding),c.push(this.lookahead),t=this.parseVariableIdentifier(n)),t},c.prototype.parsePatternWithDefault=function(c,n){var t=this.lookahead,e=this.parsePattern(c,n);if(this.match("=")){this.nextToken();var l=this.context.allowYield;this.context.allowYield=!0;var g=this.isolateCoverGrammar(this.parseAssignmentExpression);this.context.allowYield=l,e=this.finalize(this.startNode(t),new I.AssignmentPattern(e,g))}return e},c.prototype.parseVariableIdentifier=function(c){var n=this.createNode(),t=this.nextToken();return 4===t.type&&"yield"===t.value?this.context.strict?this.tolerateUnexpectedToken(t,g.Messages.StrictReservedWord):this.context.allowYield||this.throwUnexpectedToken(t):3!==t.type?this.context.strict&&4===t.type&&this.scanner.isStrictModeReservedWord(t.value)?this.tolerateUnexpectedToken(t,g.Messages.StrictReservedWord):(this.context.strict||"let"!==t.value||"var"!==c)&&this.throwUnexpectedToken(t):(this.context.isModule||this.context.await)&&3===t.type&&"await"===t.value&&this.tolerateUnexpectedToken(t),this.finalize(n,new I.Identifier(t.value))},c.prototype.parseVariableDeclaration=function(c){var n=this.createNode(),t=this.parsePattern([],"var");this.context.strict&&t.type===d.Syntax.Identifier&&this.scanner.isRestrictedWord(t.name)&&this.tolerateError(g.Messages.StrictVarName);var e=null;return this.match("=")?(this.nextToken(),e=this.isolateCoverGrammar(this.parseAssignmentExpression)):t.type===d.Syntax.Identifier||c.inFor||this.expect("="),this.finalize(n,new I.VariableDeclarator(t,e))},c.prototype.parseVariableDeclarationList=function(c){var n={inFor:c.inFor},t=[];for(t.push(this.parseVariableDeclaration(n));this.match(",");)this.nextToken(),t.push(this.parseVariableDeclaration(n));return t},c.prototype.parseVariableStatement=function(){var c=this.createNode();this.expectKeyword("var");var n=this.parseVariableDeclarationList({inFor:!1});return this.consumeSemicolon(),this.finalize(c,new I.VariableDeclaration(n,"var"))},c.prototype.parseEmptyStatement=function(){var c=this.createNode();return this.expect(";"),this.finalize(c,new I.EmptyStatement)},c.prototype.parseExpressionStatement=function(){var c=this.createNode(),n=this.parseExpression();return this.consumeSemicolon(),this.finalize(c,new I.ExpressionStatement(n))},c.prototype.parseIfClause=function(){return this.context.strict&&this.matchKeyword("function")&&this.tolerateError(g.Messages.StrictFunction),this.parseStatement()},c.prototype.parseIfStatement=function(){var c,n=this.createNode(),t=null;this.expectKeyword("if"),this.expect("(");var e=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),c=this.finalize(this.createNode(),new I.EmptyStatement)):(this.expect(")"),c=this.parseIfClause(),this.matchKeyword("else")&&(this.nextToken(),t=this.parseIfClause())),this.finalize(n,new I.IfStatement(e,c,t))},c.prototype.parseDoWhileStatement=function(){var c=this.createNode();this.expectKeyword("do");var n=this.context.inIteration;this.context.inIteration=!0;var t=this.parseStatement();this.context.inIteration=n,this.expectKeyword("while"),this.expect("(");var e=this.parseExpression();return!this.match(")")&&this.config.tolerant?this.tolerateUnexpectedToken(this.nextToken()):(this.expect(")"),this.match(";")&&this.nextToken()),this.finalize(c,new I.DoWhileStatement(t,e))},c.prototype.parseWhileStatement=function(){var c,n=this.createNode();this.expectKeyword("while"),this.expect("(");var t=this.parseExpression();if(!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),c=this.finalize(this.createNode(),new I.EmptyStatement);else{this.expect(")");var e=this.context.inIteration;this.context.inIteration=!0,c=this.parseStatement(),this.context.inIteration=e}return this.finalize(n,new I.WhileStatement(t,c))},c.prototype.parseForStatement=function(){var c,n,t,e=null,l=null,a=null,i=!0,C=this.createNode();if(this.expectKeyword("for"),this.expect("("),this.match(";"))this.nextToken();else if(this.matchKeyword("var")){e=this.createNode(),this.nextToken();var F=this.context.allowIn;this.context.allowIn=!1;var r=this.parseVariableDeclarationList({inFor:!0});if(this.context.allowIn=F,1===r.length&&this.matchKeyword("in")){var X=r[0];X.init&&(X.id.type===d.Syntax.ArrayPattern||X.id.type===d.Syntax.ObjectPattern||this.context.strict)&&this.tolerateError(g.Messages.ForInOfLoopInitializer,"for-in"),e=this.finalize(e,new I.VariableDeclaration(r,"var")),this.nextToken(),c=e,n=this.parseExpression(),e=null}else 1===r.length&&null===r[0].init&&this.matchContextualKeyword("of")?(e=this.finalize(e,new I.VariableDeclaration(r,"var")),this.nextToken(),c=e,n=this.parseAssignmentExpression(),e=null,i=!1):(e=this.finalize(e,new I.VariableDeclaration(r,"var")),this.expect(";"))}else if(this.matchKeyword("const")||this.matchKeyword("let")){e=this.createNode();var o=this.nextToken().value;this.context.strict||"in"!==this.lookahead.value?(F=this.context.allowIn,this.context.allowIn=!1,r=this.parseBindingList(o,{inFor:!0}),this.context.allowIn=F,1===r.length&&null===r[0].init&&this.matchKeyword("in")?(e=this.finalize(e,new I.VariableDeclaration(r,o)),this.nextToken(),c=e,n=this.parseExpression(),e=null):1===r.length&&null===r[0].init&&this.matchContextualKeyword("of")?(e=this.finalize(e,new I.VariableDeclaration(r,o)),this.nextToken(),c=e,n=this.parseAssignmentExpression(),e=null,i=!1):(this.consumeSemicolon(),e=this.finalize(e,new I.VariableDeclaration(r,o)))):(e=this.finalize(e,new I.Identifier(o)),this.nextToken(),c=e,n=this.parseExpression(),e=null)}else{var s=this.lookahead;if(F=this.context.allowIn,this.context.allowIn=!1,e=this.inheritCoverGrammar(this.parseAssignmentExpression),this.context.allowIn=F,this.matchKeyword("in"))this.context.isAssignmentTarget&&e.type!==d.Syntax.AssignmentExpression||this.tolerateError(g.Messages.InvalidLHSInForIn),this.nextToken(),this.reinterpretExpressionAsPattern(e),c=e,n=this.parseExpression(),e=null;else if(this.matchContextualKeyword("of"))this.context.isAssignmentTarget&&e.type!==d.Syntax.AssignmentExpression||this.tolerateError(g.Messages.InvalidLHSInForLoop),this.nextToken(),this.reinterpretExpressionAsPattern(e),c=e,n=this.parseAssignmentExpression(),e=null,i=!1;else{if(this.match(",")){for(var Z=[e];this.match(",");)this.nextToken(),Z.push(this.isolateCoverGrammar(this.parseAssignmentExpression));e=this.finalize(this.startNode(s),new I.SequenceExpression(Z))}this.expect(";")}}if(void 0===c&&(this.match(";")||(l=this.parseExpression()),this.expect(";"),this.match(")")||(a=this.parseExpression())),!this.match(")")&&this.config.tolerant)this.tolerateUnexpectedToken(this.nextToken()),t=this.finalize(this.createNode(),new I.EmptyStatement);else{this.expect(")");var B=this.context.inIteration;this.context.inIteration=!0,t=this.isolateCoverGrammar(this.parseStatement),this.context.inIteration=B}return void 0===c?this.finalize(C,new I.ForStatement(e,l,a,t)):i?this.finalize(C,new I.ForInStatement(c,n,t)):this.finalize(C,new I.ForOfStatement(c,n,t))},c.prototype.parseContinueStatement=function(){var c=this.createNode();this.expectKeyword("continue");var n=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var t=this.parseVariableIdentifier();n=t;var e="$"+t.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,e)||this.throwError(g.Messages.UnknownLabel,t.name)}return this.consumeSemicolon(),null!==n||this.context.inIteration||this.throwError(g.Messages.IllegalContinue),this.finalize(c,new I.ContinueStatement(n))},c.prototype.parseBreakStatement=function(){var c=this.createNode();this.expectKeyword("break");var n=null;if(3===this.lookahead.type&&!this.hasLineTerminator){var t=this.parseVariableIdentifier(),e="$"+t.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,e)||this.throwError(g.Messages.UnknownLabel,t.name),n=t}return this.consumeSemicolon(),null!==n||this.context.inIteration||this.context.inSwitch||this.throwError(g.Messages.IllegalBreak),this.finalize(c,new I.BreakStatement(n))},c.prototype.parseReturnStatement=function(){this.context.inFunctionBody||this.tolerateError(g.Messages.IllegalReturn);var c=this.createNode();this.expectKeyword("return");var n=(this.match(";")||this.match("}")||this.hasLineTerminator||2===this.lookahead.type)&&8!==this.lookahead.type&&10!==this.lookahead.type?null:this.parseExpression();return this.consumeSemicolon(),this.finalize(c,new I.ReturnStatement(n))},c.prototype.parseWithStatement=function(){this.context.strict&&this.tolerateError(g.Messages.StrictModeWith);var c,n=this.createNode();this.expectKeyword("with"),this.expect("(");var t=this.parseExpression();return!this.match(")")&&this.config.tolerant?(this.tolerateUnexpectedToken(this.nextToken()),c=this.finalize(this.createNode(),new I.EmptyStatement)):(this.expect(")"),c=this.parseStatement()),this.finalize(n,new I.WithStatement(t,c))},c.prototype.parseSwitchCase=function(){var c,n=this.createNode();this.matchKeyword("default")?(this.nextToken(),c=null):(this.expectKeyword("case"),c=this.parseExpression()),this.expect(":");for(var t=[];!(this.match("}")||this.matchKeyword("default")||this.matchKeyword("case"));)t.push(this.parseStatementListItem());return this.finalize(n,new I.SwitchCase(c,t))},c.prototype.parseSwitchStatement=function(){var c=this.createNode();this.expectKeyword("switch"),this.expect("(");var n=this.parseExpression();this.expect(")");var t=this.context.inSwitch;this.context.inSwitch=!0;var e=[],l=!1;for(this.expect("{");!this.match("}");){var a=this.parseSwitchCase();null===a.test&&(l&&this.throwError(g.Messages.MultipleDefaultsInSwitch),l=!0),e.push(a)}return this.expect("}"),this.context.inSwitch=t,this.finalize(c,new I.SwitchStatement(n,e))},c.prototype.parseLabelledStatement=function(){var c,n=this.createNode(),t=this.parseExpression();if(t.type===d.Syntax.Identifier&&this.match(":")){this.nextToken();var e=t,l="$"+e.name;Object.prototype.hasOwnProperty.call(this.context.labelSet,l)&&this.throwError(g.Messages.Redeclaration,"Label",e.name),this.context.labelSet[l]=!0;var a=void 0;if(this.matchKeyword("class"))this.tolerateUnexpectedToken(this.lookahead),a=this.parseClassDeclaration();else if(this.matchKeyword("function")){var i=this.lookahead,C=this.parseFunctionDeclaration();this.context.strict?this.tolerateUnexpectedToken(i,g.Messages.StrictFunction):C.generator&&this.tolerateUnexpectedToken(i,g.Messages.GeneratorInLegacyContext),a=C}else a=this.parseStatement();delete this.context.labelSet[l],c=new I.LabeledStatement(e,a)}else this.consumeSemicolon(),c=new I.ExpressionStatement(t);return this.finalize(n,c)},c.prototype.parseThrowStatement=function(){var c=this.createNode();this.expectKeyword("throw"),this.hasLineTerminator&&this.throwError(g.Messages.NewlineAfterThrow);var n=this.parseExpression();return this.consumeSemicolon(),this.finalize(c,new I.ThrowStatement(n))},c.prototype.parseCatchClause=function(){var c=this.createNode();this.expectKeyword("catch"),this.expect("("),this.match(")")&&this.throwUnexpectedToken(this.lookahead);for(var n=[],t=this.parsePattern(n),e={},l=0;l<n.length;l++){var a="$"+n[l].value;Object.prototype.hasOwnProperty.call(e,a)&&this.tolerateError(g.Messages.DuplicateBinding,n[l].value),e[a]=!0}this.context.strict&&t.type===d.Syntax.Identifier&&this.scanner.isRestrictedWord(t.name)&&this.tolerateError(g.Messages.StrictCatchVariable),this.expect(")");var i=this.parseBlock();return this.finalize(c,new I.CatchClause(t,i))},c.prototype.parseFinallyClause=function(){return this.expectKeyword("finally"),this.parseBlock()},c.prototype.parseTryStatement=function(){var c=this.createNode();this.expectKeyword("try");var n=this.parseBlock(),t=this.matchKeyword("catch")?this.parseCatchClause():null,e=this.matchKeyword("finally")?this.parseFinallyClause():null;return t||e||this.throwError(g.Messages.NoCatchOrFinally),this.finalize(c,new I.TryStatement(n,t,e))},c.prototype.parseDebuggerStatement=function(){var c=this.createNode();return this.expectKeyword("debugger"),this.consumeSemicolon(),this.finalize(c,new I.DebuggerStatement)},c.prototype.parseStatement=function(){var c;switch(this.lookahead.type){case 1:case 5:case 6:case 8:case 10:case 9:c=this.parseExpressionStatement();break;case 7:var n=this.lookahead.value;c="{"===n?this.parseBlock():"("===n?this.parseExpressionStatement():";"===n?this.parseEmptyStatement():this.parseExpressionStatement();break;case 3:c=this.matchAsyncFunction()?this.parseFunctionDeclaration():this.parseLabelledStatement();break;case 4:switch(this.lookahead.value){case"break":c=this.parseBreakStatement();break;case"continue":c=this.parseContinueStatement();break;case"debugger":c=this.parseDebuggerStatement();break;case"do":c=this.parseDoWhileStatement();break;case"for":c=this.parseForStatement();break;case"function":c=this.parseFunctionDeclaration();break;case"if":c=this.parseIfStatement();break;case"return":c=this.parseReturnStatement();break;case"switch":c=this.parseSwitchStatement();break;case"throw":c=this.parseThrowStatement();break;case"try":c=this.parseTryStatement();break;case"var":c=this.parseVariableStatement();break;case"while":c=this.parseWhileStatement();break;case"with":c=this.parseWithStatement();break;default:c=this.parseExpressionStatement()}break;default:c=this.throwUnexpectedToken(this.lookahead)}return c},c.prototype.parseFunctionSourceElements=function(){var c=this.createNode();this.expect("{");var n=this.parseDirectivePrologues(),t=this.context.labelSet,e=this.context.inIteration,l=this.context.inSwitch,g=this.context.inFunctionBody;for(this.context.labelSet={},this.context.inIteration=!1,this.context.inSwitch=!1,this.context.inFunctionBody=!0;2!==this.lookahead.type&&!this.match("}");)n.push(this.parseStatementListItem());return this.expect("}"),this.context.labelSet=t,this.context.inIteration=e,this.context.inSwitch=l,this.context.inFunctionBody=g,this.finalize(c,new I.BlockStatement(n))},c.prototype.validateParam=function(c,n,t){var e="$"+t;this.context.strict?(this.scanner.isRestrictedWord(t)&&(c.stricted=n,c.message=g.Messages.StrictParamName),Object.prototype.hasOwnProperty.call(c.paramSet,e)&&(c.stricted=n,c.message=g.Messages.StrictParamDupe)):c.firstRestricted||(this.scanner.isRestrictedWord(t)?(c.firstRestricted=n,c.message=g.Messages.StrictParamName):this.scanner.isStrictModeReservedWord(t)?(c.firstRestricted=n,c.message=g.Messages.StrictReservedWord):Object.prototype.hasOwnProperty.call(c.paramSet,e)&&(c.stricted=n,c.message=g.Messages.StrictParamDupe)),"function"==typeof Object.defineProperty?Object.defineProperty(c.paramSet,e,{value:!0,enumerable:!0,writable:!0,configurable:!0}):c.paramSet[e]=!0},c.prototype.parseRestElement=function(c){var n=this.createNode();this.expect("...");var t=this.parsePattern(c);return this.match("=")&&this.throwError(g.Messages.DefaultRestParameter),this.match(")")||this.throwError(g.Messages.ParameterAfterRestParameter),this.finalize(n,new I.RestElement(t))},c.prototype.parseFormalParameter=function(c){for(var n=[],t=this.match("...")?this.parseRestElement(n):this.parsePatternWithDefault(n),e=0;e<n.length;e++)this.validateParam(c,n[e],n[e].value);c.simple=c.simple&&t instanceof I.Identifier,c.params.push(t)},c.prototype.parseFormalParameters=function(c){var n;if(n={simple:!0,params:[],firstRestricted:c},this.expect("("),!this.match(")"))for(n.paramSet={};2!==this.lookahead.type&&(this.parseFormalParameter(n),!this.match(")"))&&(this.expect(","),!this.match(")")););return this.expect(")"),{simple:n.simple,params:n.params,stricted:n.stricted,firstRestricted:n.firstRestricted,message:n.message}},c.prototype.matchAsyncFunction=function(){var c=this.matchContextualKeyword("async");if(c){var n=this.scanner.saveState();this.scanner.scanComments();var t=this.scanner.lex();this.scanner.restoreState(n),c=n.lineNumber===t.lineNumber&&4===t.type&&"function"===t.value}return c},c.prototype.parseFunctionDeclaration=function(c){var n=this.createNode(),t=this.matchContextualKeyword("async");t&&this.nextToken(),this.expectKeyword("function");var e,l=!t&&this.match("*");l&&this.nextToken();var a=null,d=null;if(!c||!this.match("(")){var i=this.lookahead;a=this.parseVariableIdentifier(),this.context.strict?this.scanner.isRestrictedWord(i.value)&&this.tolerateUnexpectedToken(i,g.Messages.StrictFunctionName):this.scanner.isRestrictedWord(i.value)?(d=i,e=g.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(i.value)&&(d=i,e=g.Messages.StrictReservedWord)}var C=this.context.await,F=this.context.allowYield;this.context.await=t,this.context.allowYield=!l;var r=this.parseFormalParameters(d),X=r.params,o=r.stricted;d=r.firstRestricted,r.message&&(e=r.message);var s=this.context.strict,Z=this.context.allowStrictDirective;this.context.allowStrictDirective=r.simple;var B=this.parseFunctionSourceElements();return this.context.strict&&d&&this.throwUnexpectedToken(d,e),this.context.strict&&o&&this.tolerateUnexpectedToken(o,e),this.context.strict=s,this.context.allowStrictDirective=Z,this.context.await=C,this.context.allowYield=F,t?this.finalize(n,new I.AsyncFunctionDeclaration(a,X,B)):this.finalize(n,new I.FunctionDeclaration(a,X,B,l))},c.prototype.parseFunctionExpression=function(){var c=this.createNode(),n=this.matchContextualKeyword("async");n&&this.nextToken(),this.expectKeyword("function");var t,e=!n&&this.match("*");e&&this.nextToken();var l,a=null,d=this.context.await,i=this.context.allowYield;if(this.context.await=n,this.context.allowYield=!e,!this.match("(")){var C=this.lookahead;a=this.context.strict||e||!this.matchKeyword("yield")?this.parseVariableIdentifier():this.parseIdentifierName(),this.context.strict?this.scanner.isRestrictedWord(C.value)&&this.tolerateUnexpectedToken(C,g.Messages.StrictFunctionName):this.scanner.isRestrictedWord(C.value)?(l=C,t=g.Messages.StrictFunctionName):this.scanner.isStrictModeReservedWord(C.value)&&(l=C,t=g.Messages.StrictReservedWord)}var F=this.parseFormalParameters(l),r=F.params,X=F.stricted;l=F.firstRestricted,F.message&&(t=F.message);var o=this.context.strict,s=this.context.allowStrictDirective;this.context.allowStrictDirective=F.simple;var Z=this.parseFunctionSourceElements();return this.context.strict&&l&&this.throwUnexpectedToken(l,t),this.context.strict&&X&&this.tolerateUnexpectedToken(X,t),this.context.strict=o,this.context.allowStrictDirective=s,this.context.await=d,this.context.allowYield=i,n?this.finalize(c,new I.AsyncFunctionExpression(a,r,Z)):this.finalize(c,new I.FunctionExpression(a,r,Z,e))},c.prototype.parseDirective=function(){var c=this.lookahead,n=this.createNode(),t=this.parseExpression(),e=t.type===d.Syntax.Literal?this.getTokenRaw(c).slice(1,-1):null;return this.consumeSemicolon(),this.finalize(n,e?new I.Directive(t,e):new I.ExpressionStatement(t))},c.prototype.parseDirectivePrologues=function(){for(var c=null,n=[];;){var t=this.lookahead;if(8!==t.type)break;var e=this.parseDirective();n.push(e);var l=e.directive;if("string"!=typeof l)break;"use strict"===l?(this.context.strict=!0,c&&this.tolerateUnexpectedToken(c,g.Messages.StrictOctalLiteral),this.context.allowStrictDirective||this.tolerateUnexpectedToken(t,g.Messages.IllegalLanguageModeDirective)):!c&&t.octal&&(c=t)}return n},c.prototype.qualifiedPropertyName=function(c){switch(c.type){case 3:case 8:case 1:case 5:case 6:case 4:return!0;case 7:return"["===c.value}return!1},c.prototype.parseGetterMethod=function(){var c=this.createNode(),n=this.context.allowYield;this.context.allowYield=!0;var t=this.parseFormalParameters();t.params.length>0&&this.tolerateError(g.Messages.BadGetterArity);var e=this.parsePropertyMethod(t);return this.context.allowYield=n,this.finalize(c,new I.FunctionExpression(null,t.params,e,!1))},c.prototype.parseSetterMethod=function(){var c=this.createNode(),n=this.context.allowYield;this.context.allowYield=!0;var t=this.parseFormalParameters();1!==t.params.length?this.tolerateError(g.Messages.BadSetterArity):t.params[0]instanceof I.RestElement&&this.tolerateError(g.Messages.BadSetterRestParameter);var e=this.parsePropertyMethod(t);return this.context.allowYield=n,this.finalize(c,new I.FunctionExpression(null,t.params,e,!1))},c.prototype.parseGeneratorMethod=function(){var c=this.createNode(),n=this.context.allowYield;this.context.allowYield=!0;var t=this.parseFormalParameters();this.context.allowYield=!1;var e=this.parsePropertyMethod(t);return this.context.allowYield=n,this.finalize(c,new I.FunctionExpression(null,t.params,e,!0))},c.prototype.isStartOfExpression=function(){var c=!0,n=this.lookahead.value;switch(this.lookahead.type){case 7:c="["===n||"("===n||"{"===n||"+"===n||"-"===n||"!"===n||"~"===n||"++"===n||"--"===n||"/"===n||"/="===n;break;case 4:c="class"===n||"delete"===n||"function"===n||"let"===n||"new"===n||"super"===n||"this"===n||"typeof"===n||"void"===n||"yield"===n}return c},c.prototype.parseYieldExpression=function(){var c=this.createNode();this.expectKeyword("yield");var n=null,t=!1;if(!this.hasLineTerminator){var e=this.context.allowYield;this.context.allowYield=!1,(t=this.match("*"))?(this.nextToken(),n=this.parseAssignmentExpression()):this.isStartOfExpression()&&(n=this.parseAssignmentExpression()),this.context.allowYield=e}return this.finalize(c,new I.YieldExpression(n,t))},c.prototype.parseClassElement=function(c){var n=this.lookahead,t=this.createNode(),e="",l=null,a=null,d=!1,i=!1,C=!1,F=!1;if(this.match("*"))this.nextToken();else if(d=this.match("["),"static"===(l=this.parseObjectPropertyKey()).name&&(this.qualifiedPropertyName(this.lookahead)||this.match("*"))&&(n=this.lookahead,C=!0,d=this.match("["),this.match("*")?this.nextToken():l=this.parseObjectPropertyKey()),3===n.type&&!this.hasLineTerminator&&"async"===n.value){var r=this.lookahead.value;":"!==r&&"("!==r&&"*"!==r&&(F=!0,n=this.lookahead,l=this.parseObjectPropertyKey(),3===n.type&&"constructor"===n.value&&this.tolerateUnexpectedToken(n,g.Messages.ConstructorIsAsync))}var X=this.qualifiedPropertyName(this.lookahead);return 3===n.type?"get"===n.value&&X?(e="get",d=this.match("["),l=this.parseObjectPropertyKey(),this.context.allowYield=!1,a=this.parseGetterMethod()):"set"===n.value&&X&&(e="set",d=this.match("["),l=this.parseObjectPropertyKey(),a=this.parseSetterMethod()):7===n.type&&"*"===n.value&&X&&(e="init",d=this.match("["),l=this.parseObjectPropertyKey(),a=this.parseGeneratorMethod(),i=!0),!e&&l&&this.match("(")&&(e="init",a=F?this.parsePropertyMethodAsyncFunction():this.parsePropertyMethodFunction(),i=!0),e||this.throwUnexpectedToken(this.lookahead),"init"===e&&(e="method"),d||(C&&this.isPropertyKey(l,"prototype")&&this.throwUnexpectedToken(n,g.Messages.StaticPrototype),!C&&this.isPropertyKey(l,"constructor")&&(("method"!==e||!i||a&&a.generator)&&this.throwUnexpectedToken(n,g.Messages.ConstructorSpecialMethod),c.value?this.throwUnexpectedToken(n,g.Messages.DuplicateConstructor):c.value=!0,e="constructor")),this.finalize(t,new I.MethodDefinition(l,d,a,e,C))},c.prototype.parseClassElementList=function(){var c=[],n={value:!1};for(this.expect("{");!this.match("}");)this.match(";")?this.nextToken():c.push(this.parseClassElement(n));return this.expect("}"),c},c.prototype.parseClassBody=function(){var c=this.createNode(),n=this.parseClassElementList();return this.finalize(c,new I.ClassBody(n))},c.prototype.parseClassDeclaration=function(c){var n=this.createNode(),t=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var e=c&&3!==this.lookahead.type?null:this.parseVariableIdentifier(),l=null;this.matchKeyword("extends")&&(this.nextToken(),l=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var g=this.parseClassBody();return this.context.strict=t,this.finalize(n,new I.ClassDeclaration(e,l,g))},c.prototype.parseClassExpression=function(){var c=this.createNode(),n=this.context.strict;this.context.strict=!0,this.expectKeyword("class");var t=3===this.lookahead.type?this.parseVariableIdentifier():null,e=null;this.matchKeyword("extends")&&(this.nextToken(),e=this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall));var l=this.parseClassBody();return this.context.strict=n,this.finalize(c,new I.ClassExpression(t,e,l))},c.prototype.parseModule=function(){this.context.strict=!0,this.context.isModule=!0,this.scanner.isModule=!0;for(var c=this.createNode(),n=this.parseDirectivePrologues();2!==this.lookahead.type;)n.push(this.parseStatementListItem());return this.finalize(c,new I.Module(n))},c.prototype.parseScript=function(){for(var c=this.createNode(),n=this.parseDirectivePrologues();2!==this.lookahead.type;)n.push(this.parseStatementListItem());return this.finalize(c,new I.Script(n))},c.prototype.parseModuleSpecifier=function(){var c=this.createNode();8!==this.lookahead.type&&this.throwError(g.Messages.InvalidModuleSpecifier);var n=this.nextToken(),t=this.getTokenRaw(n);return this.finalize(c,new I.Literal(n.value,t))},c.prototype.parseImportSpecifier=function(){var c,n,t=this.createNode();return 3===this.lookahead.type?(n=c=this.parseVariableIdentifier(),this.matchContextualKeyword("as")&&(this.nextToken(),n=this.parseVariableIdentifier())):(n=c=this.parseIdentifierName(),this.matchContextualKeyword("as")?(this.nextToken(),n=this.parseVariableIdentifier()):this.throwUnexpectedToken(this.nextToken())),this.finalize(t,new I.ImportSpecifier(n,c))},c.prototype.parseNamedImports=function(){this.expect("{");for(var c=[];!this.match("}");)c.push(this.parseImportSpecifier()),this.match("}")||this.expect(",");return this.expect("}"),c},c.prototype.parseImportDefaultSpecifier=function(){var c=this.createNode(),n=this.parseIdentifierName();return this.finalize(c,new I.ImportDefaultSpecifier(n))},c.prototype.parseImportNamespaceSpecifier=function(){var c=this.createNode();this.expect("*"),this.matchContextualKeyword("as")||this.throwError(g.Messages.NoAsAfterImportNamespace),this.nextToken();var n=this.parseIdentifierName();return this.finalize(c,new I.ImportNamespaceSpecifier(n))},c.prototype.parseImportDeclaration=function(){this.context.inFunctionBody&&this.throwError(g.Messages.IllegalImportDeclaration);var c,n=this.createNode();this.expectKeyword("import");var t=[];if(8===this.lookahead.type)c=this.parseModuleSpecifier();else{if(this.match("{")?t=t.concat(this.parseNamedImports()):this.match("*")?t.push(this.parseImportNamespaceSpecifier()):this.isIdentifierName(this.lookahead)&&!this.matchKeyword("default")?(t.push(this.parseImportDefaultSpecifier()),this.match(",")&&(this.nextToken(),this.match("*")?t.push(this.parseImportNamespaceSpecifier()):this.match("{")?t=t.concat(this.parseNamedImports()):this.throwUnexpectedToken(this.lookahead))):this.throwUnexpectedToken(this.nextToken()),!this.matchContextualKeyword("from")){var e=this.lookahead.value?g.Messages.UnexpectedToken:g.Messages.MissingFromClause;this.throwError(e,this.lookahead.value)}this.nextToken(),c=this.parseModuleSpecifier()}return this.consumeSemicolon(),this.finalize(n,new I.ImportDeclaration(t,c))},c.prototype.parseExportSpecifier=function(){var c=this.createNode(),n=this.parseIdentifierName(),t=n;return this.matchContextualKeyword("as")&&(this.nextToken(),t=this.parseIdentifierName()),this.finalize(c,new I.ExportSpecifier(n,t))},c.prototype.parseExportDeclaration=function(){this.context.inFunctionBody&&this.throwError(g.Messages.IllegalExportDeclaration);var c,n=this.createNode();if(this.expectKeyword("export"),this.matchKeyword("default"))if(this.nextToken(),this.matchKeyword("function")){var t=this.parseFunctionDeclaration(!0);c=this.finalize(n,new I.ExportDefaultDeclaration(t))}else this.matchKeyword("class")?(t=this.parseClassDeclaration(!0),c=this.finalize(n,new I.ExportDefaultDeclaration(t))):this.matchContextualKeyword("async")?(t=this.matchAsyncFunction()?this.parseFunctionDeclaration(!0):this.parseAssignmentExpression(),c=this.finalize(n,new I.ExportDefaultDeclaration(t))):(this.matchContextualKeyword("from")&&this.throwError(g.Messages.UnexpectedToken,this.lookahead.value),t=this.match("{")?this.parseObjectInitializer():this.match("[")?this.parseArrayInitializer():this.parseAssignmentExpression(),this.consumeSemicolon(),c=this.finalize(n,new I.ExportDefaultDeclaration(t)));else if(this.match("*")){if(this.nextToken(),!this.matchContextualKeyword("from")){var e=this.lookahead.value?g.Messages.UnexpectedToken:g.Messages.MissingFromClause;this.throwError(e,this.lookahead.value)}this.nextToken();var l=this.parseModuleSpecifier();this.consumeSemicolon(),c=this.finalize(n,new I.ExportAllDeclaration(l))}else if(4===this.lookahead.type){switch(t=void 0,this.lookahead.value){case"let":case"const":t=this.parseLexicalDeclaration({inFor:!1});break;case"var":case"class":case"function":t=this.parseStatementListItem();break;default:this.throwUnexpectedToken(this.lookahead)}c=this.finalize(n,new I.ExportNamedDeclaration(t,[],null))}else if(this.matchAsyncFunction())t=this.parseFunctionDeclaration(),c=this.finalize(n,new I.ExportNamedDeclaration(t,[],null));else{var a=[],d=null,i=!1;for(this.expect("{");!this.match("}");)i=i||this.matchKeyword("default"),a.push(this.parseExportSpecifier()),this.match("}")||this.expect(",");this.expect("}"),this.matchContextualKeyword("from")?(this.nextToken(),d=this.parseModuleSpecifier(),this.consumeSemicolon()):i?(e=this.lookahead.value?g.Messages.UnexpectedToken:g.Messages.MissingFromClause,this.throwError(e,this.lookahead.value)):this.consumeSemicolon(),c=this.finalize(n,new I.ExportNamedDeclaration(null,a,d))}return c},c}();n.Parser=C},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.assert=function(c,n){if(!c)throw new Error("ASSERT: "+n)}},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var t=function(){function c(){this.errors=[],this.tolerant=!1}return c.prototype.recordError=function(c){this.errors.push(c)},c.prototype.tolerate=function(c){if(!this.tolerant)throw c;this.recordError(c)},c.prototype.constructError=function(c,n){var t=new Error(c);try{throw t}catch(c){Object.create&&Object.defineProperty&&(t=Object.create(c),Object.defineProperty(t,"column",{value:n}))}return t},c.prototype.createError=function(c,n,t,e){var l="Line "+n+": "+e,g=this.constructError(l,t);return g.index=c,g.lineNumber=n,g.description=e,g},c.prototype.throwError=function(c,n,t,e){throw this.createError(c,n,t,e)},c.prototype.tolerateError=function(c,n,t,e){var l=this.createError(c,n,t,e);if(!this.tolerant)throw l;this.recordError(l)},c}();n.ErrorHandler=t},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.Messages={BadGetterArity:"Getter must not have any formal parameters",BadSetterArity:"Setter must have exactly one formal parameter",BadSetterRestParameter:"Setter function argument must not be a rest parameter",ConstructorIsAsync:"Class constructor may not be an async method",ConstructorSpecialMethod:"Class constructor may not be an accessor",DeclarationMissingInitializer:"Missing initializer in %0 declaration",DefaultRestParameter:"Unexpected token =",DuplicateBinding:"Duplicate binding %0",DuplicateConstructor:"A class may only have one constructor",DuplicateProtoProperty:"Duplicate __proto__ fields are not allowed in object literals",ForInOfLoopInitializer:"%0 loop variable declaration may not have an initializer",GeneratorInLegacyContext:"Generator declarations are not allowed in legacy contexts",IllegalBreak:"Illegal break statement",IllegalContinue:"Illegal continue statement",IllegalExportDeclaration:"Unexpected token",IllegalImportDeclaration:"Unexpected token",IllegalLanguageModeDirective:"Illegal 'use strict' directive in function with non-simple parameter list",IllegalReturn:"Illegal return statement",InvalidEscapedReservedWord:"Keyword must not contain escaped characters",InvalidHexEscapeSequence:"Invalid hexadecimal escape sequence",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",InvalidLHSInForLoop:"Invalid left-hand side in for-loop",InvalidModuleSpecifier:"Unexpected token",InvalidRegExp:"Invalid regular expression",LetInLexicalBinding:"let is disallowed as a lexically bound name",MissingFromClause:"Unexpected token",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NewlineAfterThrow:"Illegal newline after throw",NoAsAfterImportNamespace:"Unexpected token",NoCatchOrFinally:"Missing catch or finally after try",ParameterAfterRestParameter:"Rest parameter must be last formal parameter",Redeclaration:"%0 '%1' has already been declared",StaticPrototype:"Classes may not have static property named prototype",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictFunction:"In strict mode code, functions can only be declared at top level or inside a block",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictModeWith:"Strict mode code may not include a with statement",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictReservedWord:"Use of future reserved word in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",TemplateOctalLiteral:"Octal literals are not allowed in template strings.",UnexpectedEOS:"Unexpected end of input",UnexpectedIdentifier:"Unexpected identifier",UnexpectedNumber:"Unexpected number",UnexpectedReserved:"Unexpected reserved word",UnexpectedString:"Unexpected string",UnexpectedTemplate:"Unexpected quasi %0",UnexpectedToken:"Unexpected token %0",UnexpectedTokenIllegal:"Unexpected token ILLEGAL",UnknownLabel:"Undefined label '%0'",UnterminatedRegExp:"Invalid regular expression: missing /"}},function(c,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(9),l=t(4),g=t(11);function I(c){return"0123456789abcdef".indexOf(c.toLowerCase())}function a(c){return"01234567".indexOf(c)}var d=function(){function c(c,n){this.source=c,this.errorHandler=n,this.trackComment=!1,this.isModule=!1,this.length=c.length,this.index=0,this.lineNumber=c.length>0?1:0,this.lineStart=0,this.curlyStack=[]}return c.prototype.saveState=function(){return{index:this.index,lineNumber:this.lineNumber,lineStart:this.lineStart}},c.prototype.restoreState=function(c){this.index=c.index,this.lineNumber=c.lineNumber,this.lineStart=c.lineStart},c.prototype.eof=function(){return this.index>=this.length},c.prototype.throwUnexpectedToken=function(c){return void 0===c&&(c=g.Messages.UnexpectedTokenIllegal),this.errorHandler.throwError(this.index,this.lineNumber,this.index-this.lineStart+1,c)},c.prototype.tolerateUnexpectedToken=function(c){void 0===c&&(c=g.Messages.UnexpectedTokenIllegal),this.errorHandler.tolerateError(this.index,this.lineNumber,this.index-this.lineStart+1,c)},c.prototype.skipSingleLineComment=function(c){var n,t,e=[];for(this.trackComment&&(e=[],n=this.index-c,t={start:{line:this.lineNumber,column:this.index-this.lineStart-c},end:{}});!this.eof();){var g=this.source.charCodeAt(this.index);if(++this.index,l.Character.isLineTerminator(g)){if(this.trackComment){t.end={line:this.lineNumber,column:this.index-this.lineStart-1};var I={multiLine:!1,slice:[n+c,this.index-1],range:[n,this.index-1],loc:t};e.push(I)}return 13===g&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,e}}return this.trackComment&&(t.end={line:this.lineNumber,column:this.index-this.lineStart},I={multiLine:!1,slice:[n+c,this.index],range:[n,this.index],loc:t},e.push(I)),e},c.prototype.skipMultiLineComment=function(){var c,n,t=[];for(this.trackComment&&(t=[],c=this.index-2,n={start:{line:this.lineNumber,column:this.index-this.lineStart-2},end:{}});!this.eof();){var e=this.source.charCodeAt(this.index);if(l.Character.isLineTerminator(e))13===e&&10===this.source.charCodeAt(this.index+1)&&++this.index,++this.lineNumber,++this.index,this.lineStart=this.index;else if(42===e){if(47===this.source.charCodeAt(this.index+1)){if(this.index+=2,this.trackComment){n.end={line:this.lineNumber,column:this.index-this.lineStart};var g={multiLine:!0,slice:[c+2,this.index-2],range:[c,this.index],loc:n};t.push(g)}return t}++this.index}else++this.index}return this.trackComment&&(n.end={line:this.lineNumber,column:this.index-this.lineStart},g={multiLine:!0,slice:[c+2,this.index],range:[c,this.index],loc:n},t.push(g)),this.tolerateUnexpectedToken(),t},c.prototype.scanComments=function(){var c;this.trackComment&&(c=[]);for(var n=0===this.index;!this.eof();){var t=this.source.charCodeAt(this.index);if(l.Character.isWhiteSpace(t))++this.index;else if(l.Character.isLineTerminator(t))++this.index,13===t&&10===this.source.charCodeAt(this.index)&&++this.index,++this.lineNumber,this.lineStart=this.index,n=!0;else if(47===t)if(47===(t=this.source.charCodeAt(this.index+1))){this.index+=2;var e=this.skipSingleLineComment(2);this.trackComment&&(c=c.concat(e)),n=!0}else{if(42!==t)break;this.index+=2,e=this.skipMultiLineComment(),this.trackComment&&(c=c.concat(e))}else if(n&&45===t){if(45!==this.source.charCodeAt(this.index+1)||62!==this.source.charCodeAt(this.index+2))break;this.index+=3,e=this.skipSingleLineComment(3),this.trackComment&&(c=c.concat(e))}else{if(60!==t||this.isModule)break;if("!--"!==this.source.slice(this.index+1,this.index+4))break;this.index+=4,e=this.skipSingleLineComment(4),this.trackComment&&(c=c.concat(e))}}return c},c.prototype.isFutureReservedWord=function(c){switch(c){case"enum":case"export":case"import":case"super":return!0;default:return!1}},c.prototype.isStrictModeReservedWord=function(c){switch(c){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}},c.prototype.isRestrictedWord=function(c){return"eval"===c||"arguments"===c},c.prototype.isKeyword=function(c){switch(c.length){case 2:return"if"===c||"in"===c||"do"===c;case 3:return"var"===c||"for"===c||"new"===c||"try"===c||"let"===c;case 4:return"this"===c||"else"===c||"case"===c||"void"===c||"with"===c||"enum"===c;case 5:return"while"===c||"break"===c||"catch"===c||"throw"===c||"const"===c||"yield"===c||"class"===c||"super"===c;case 6:return"return"===c||"typeof"===c||"delete"===c||"switch"===c||"export"===c||"import"===c;case 7:return"default"===c||"finally"===c||"extends"===c;case 8:return"function"===c||"continue"===c||"debugger"===c;case 10:return"instanceof"===c;default:return!1}},c.prototype.codePointAt=function(c){var n=this.source.charCodeAt(c);if(n>=55296&&n<=56319){var t=this.source.charCodeAt(c+1);t>=56320&&t<=57343&&(n=1024*(n-55296)+t-56320+65536)}return n},c.prototype.scanHexEscape=function(c){for(var n="u"===c?4:2,t=0,e=0;e<n;++e){if(this.eof()||!l.Character.isHexDigit(this.source.charCodeAt(this.index)))return null;t=16*t+I(this.source[this.index++])}return String.fromCharCode(t)},c.prototype.scanUnicodeCodePointEscape=function(){var c=this.source[this.index],n=0;for("}"===c&&this.throwUnexpectedToken();!this.eof()&&(c=this.source[this.index++],l.Character.isHexDigit(c.charCodeAt(0)));)n=16*n+I(c);return(n>1114111||"}"!==c)&&this.throwUnexpectedToken(),l.Character.fromCodePoint(n)},c.prototype.getIdentifier=function(){for(var c=this.index++;!this.eof();){var n=this.source.charCodeAt(this.index);if(92===n)return this.index=c,this.getComplexIdentifier();if(n>=55296&&n<57343)return this.index=c,this.getComplexIdentifier();if(!l.Character.isIdentifierPart(n))break;++this.index}return this.source.slice(c,this.index)},c.prototype.getComplexIdentifier=function(){var c,n=this.codePointAt(this.index),t=l.Character.fromCodePoint(n);for(this.index+=t.length,92===n&&(117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,c=this.scanUnicodeCodePointEscape()):null!==(c=this.scanHexEscape("u"))&&"\\"!==c&&l.Character.isIdentifierStart(c.charCodeAt(0))||this.throwUnexpectedToken(),t=c);!this.eof()&&(n=this.codePointAt(this.index),l.Character.isIdentifierPart(n));)t+=c=l.Character.fromCodePoint(n),this.index+=c.length,92===n&&(t=t.substr(0,t.length-1),117!==this.source.charCodeAt(this.index)&&this.throwUnexpectedToken(),++this.index,"{"===this.source[this.index]?(++this.index,c=this.scanUnicodeCodePointEscape()):null!==(c=this.scanHexEscape("u"))&&"\\"!==c&&l.Character.isIdentifierPart(c.charCodeAt(0))||this.throwUnexpectedToken(),t+=c);return t},c.prototype.octalToDecimal=function(c){var n="0"!==c,t=a(c);return!this.eof()&&l.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(n=!0,t=8*t+a(this.source[this.index++]),"0123".indexOf(c)>=0&&!this.eof()&&l.Character.isOctalDigit(this.source.charCodeAt(this.index))&&(t=8*t+a(this.source[this.index++]))),{code:t,octal:n}},c.prototype.scanIdentifier=function(){var c,n=this.index,t=92===this.source.charCodeAt(n)?this.getComplexIdentifier():this.getIdentifier();if(3!=(c=1===t.length?3:this.isKeyword(t)?4:"null"===t?5:"true"===t||"false"===t?1:3)&&n+t.length!==this.index){var e=this.index;this.index=n,this.tolerateUnexpectedToken(g.Messages.InvalidEscapedReservedWord),this.index=e}return{type:c,value:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:n,end:this.index}},c.prototype.scanPunctuator=function(){var c=this.index,n=this.source[this.index];switch(n){case"(":case"{":"{"===n&&this.curlyStack.push("{"),++this.index;break;case".":++this.index,"."===this.source[this.index]&&"."===this.source[this.index+1]&&(this.index+=2,n="...");break;case"}":++this.index,this.curlyStack.pop();break;case")":case";":case",":case"[":case"]":case":":case"?":case"~":++this.index;break;default:">>>="===(n=this.source.substr(this.index,4))?this.index+=4:"==="===(n=n.substr(0,3))||"!=="===n||">>>"===n||"<<="===n||">>="===n||"**="===n?this.index+=3:"&&"===(n=n.substr(0,2))||"||"===n||"=="===n||"!="===n||"+="===n||"-="===n||"*="===n||"/="===n||"++"===n||"--"===n||"<<"===n||">>"===n||"&="===n||"|="===n||"^="===n||"%="===n||"<="===n||">="===n||"=>"===n||"**"===n?this.index+=2:(n=this.source[this.index],"<>=!+-*%&|^/".indexOf(n)>=0&&++this.index)}return this.index===c&&this.throwUnexpectedToken(),{type:7,value:n,lineNumber:this.lineNumber,lineStart:this.lineStart,start:c,end:this.index}},c.prototype.scanHexLiteral=function(c){for(var n="";!this.eof()&&l.Character.isHexDigit(this.source.charCodeAt(this.index));)n+=this.source[this.index++];return 0===n.length&&this.throwUnexpectedToken(),l.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseInt("0x"+n,16),lineNumber:this.lineNumber,lineStart:this.lineStart,start:c,end:this.index}},c.prototype.scanBinaryLiteral=function(c){for(var n,t="";!this.eof()&&("0"===(n=this.source[this.index])||"1"===n);)t+=this.source[this.index++];return 0===t.length&&this.throwUnexpectedToken(),this.eof()||(n=this.source.charCodeAt(this.index),(l.Character.isIdentifierStart(n)||l.Character.isDecimalDigit(n))&&this.throwUnexpectedToken()),{type:6,value:parseInt(t,2),lineNumber:this.lineNumber,lineStart:this.lineStart,start:c,end:this.index}},c.prototype.scanOctalLiteral=function(c,n){var t="",e=!1;for(l.Character.isOctalDigit(c.charCodeAt(0))?(e=!0,t="0"+this.source[this.index++]):++this.index;!this.eof()&&l.Character.isOctalDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];return e||0!==t.length||this.throwUnexpectedToken(),(l.Character.isIdentifierStart(this.source.charCodeAt(this.index))||l.Character.isDecimalDigit(this.source.charCodeAt(this.index)))&&this.throwUnexpectedToken(),{type:6,value:parseInt(t,8),octal:e,lineNumber:this.lineNumber,lineStart:this.lineStart,start:n,end:this.index}},c.prototype.isImplicitOctalLiteral=function(){for(var c=this.index+1;c<this.length;++c){var n=this.source[c];if("8"===n||"9"===n)return!1;if(!l.Character.isOctalDigit(n.charCodeAt(0)))return!0}return!0},c.prototype.scanNumericLiteral=function(){var c=this.index,n=this.source[c];e.assert(l.Character.isDecimalDigit(n.charCodeAt(0))||"."===n,"Numeric literal must start with a decimal digit or a decimal point");var t="";if("."!==n){if(t=this.source[this.index++],n=this.source[this.index],"0"===t){if("x"===n||"X"===n)return++this.index,this.scanHexLiteral(c);if("b"===n||"B"===n)return++this.index,this.scanBinaryLiteral(c);if("o"===n||"O"===n)return this.scanOctalLiteral(n,c);if(n&&l.Character.isOctalDigit(n.charCodeAt(0))&&this.isImplicitOctalLiteral())return this.scanOctalLiteral(n,c)}for(;l.Character.isDecimalDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];n=this.source[this.index]}if("."===n){for(t+=this.source[this.index++];l.Character.isDecimalDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];n=this.source[this.index]}if("e"===n||"E"===n)if(t+=this.source[this.index++],"+"!==(n=this.source[this.index])&&"-"!==n||(t+=this.source[this.index++]),l.Character.isDecimalDigit(this.source.charCodeAt(this.index)))for(;l.Character.isDecimalDigit(this.source.charCodeAt(this.index));)t+=this.source[this.index++];else this.throwUnexpectedToken();return l.Character.isIdentifierStart(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(),{type:6,value:parseFloat(t),lineNumber:this.lineNumber,lineStart:this.lineStart,start:c,end:this.index}},c.prototype.scanStringLiteral=function(){var c=this.index,n=this.source[c];e.assert("'"===n||'"'===n,"String literal must starts with a quote"),++this.index;for(var t=!1,I="";!this.eof();){var a=this.source[this.index++];if(a===n){n="";break}if("\\"===a)if((a=this.source[this.index++])&&l.Character.isLineTerminator(a.charCodeAt(0)))++this.lineNumber,"\r"===a&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(a){case"u":if("{"===this.source[this.index])++this.index,I+=this.scanUnicodeCodePointEscape();else{var d=this.scanHexEscape(a);null===d&&this.throwUnexpectedToken(),I+=d}break;case"x":var i=this.scanHexEscape(a);null===i&&this.throwUnexpectedToken(g.Messages.InvalidHexEscapeSequence),I+=i;break;case"n":I+="\n";break;case"r":I+="\r";break;case"t":I+="\t";break;case"b":I+="\b";break;case"f":I+="\f";break;case"v":I+="\v";break;case"8":case"9":I+=a,this.tolerateUnexpectedToken();break;default:if(a&&l.Character.isOctalDigit(a.charCodeAt(0))){var C=this.octalToDecimal(a);t=C.octal||t,I+=String.fromCharCode(C.code)}else I+=a}else{if(l.Character.isLineTerminator(a.charCodeAt(0)))break;I+=a}}return""!==n&&(this.index=c,this.throwUnexpectedToken()),{type:8,value:I,octal:t,lineNumber:this.lineNumber,lineStart:this.lineStart,start:c,end:this.index}},c.prototype.scanTemplate=function(){var c="",n=!1,t=this.index,e="`"===this.source[t],I=!1,a=2;for(++this.index;!this.eof();){var d=this.source[this.index++];if("`"===d){a=1,I=!0,n=!0;break}if("$"===d){if("{"===this.source[this.index]){this.curlyStack.push("${"),++this.index,n=!0;break}c+=d}else if("\\"===d)if(d=this.source[this.index++],l.Character.isLineTerminator(d.charCodeAt(0)))++this.lineNumber,"\r"===d&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index;else switch(d){case"n":c+="\n";break;case"r":c+="\r";break;case"t":c+="\t";break;case"u":if("{"===this.source[this.index])++this.index,c+=this.scanUnicodeCodePointEscape();else{var i=this.index,C=this.scanHexEscape(d);null!==C?c+=C:(this.index=i,c+=d)}break;case"x":var F=this.scanHexEscape(d);null===F&&this.throwUnexpectedToken(g.Messages.InvalidHexEscapeSequence),c+=F;break;case"b":c+="\b";break;case"f":c+="\f";break;case"v":c+="\v";break;default:"0"===d?(l.Character.isDecimalDigit(this.source.charCodeAt(this.index))&&this.throwUnexpectedToken(g.Messages.TemplateOctalLiteral),c+="\0"):l.Character.isOctalDigit(d.charCodeAt(0))?this.throwUnexpectedToken(g.Messages.TemplateOctalLiteral):c+=d}else l.Character.isLineTerminator(d.charCodeAt(0))?(++this.lineNumber,"\r"===d&&"\n"===this.source[this.index]&&++this.index,this.lineStart=this.index,c+="\n"):c+=d}return n||this.throwUnexpectedToken(),e||this.curlyStack.pop(),{type:10,value:this.source.slice(t+1,this.index-a),cooked:c,head:e,tail:I,lineNumber:this.lineNumber,lineStart:this.lineStart,start:t,end:this.index}},c.prototype.testRegExp=function(c,n){var t=c,e=this;n.indexOf("u")>=0&&(t=t.replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g,(function(c,n,t){var l=parseInt(n||t,16);return l>1114111&&e.throwUnexpectedToken(g.Messages.InvalidRegExp),l<=65535?String.fromCharCode(l):"ï¿¿"})).replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,"ï¿¿"));try{RegExp(t)}catch(c){this.throwUnexpectedToken(g.Messages.InvalidRegExp)}try{return new RegExp(c,n)}catch(c){return null}},c.prototype.scanRegExpBody=function(){var c=this.source[this.index];e.assert("/"===c,"Regular expression literal must start with a slash");for(var n=this.source[this.index++],t=!1,I=!1;!this.eof();)if(n+=c=this.source[this.index++],"\\"===c)c=this.source[this.index++],l.Character.isLineTerminator(c.charCodeAt(0))&&this.throwUnexpectedToken(g.Messages.UnterminatedRegExp),n+=c;else if(l.Character.isLineTerminator(c.charCodeAt(0)))this.throwUnexpectedToken(g.Messages.UnterminatedRegExp);else if(t)"]"===c&&(t=!1);else{if("/"===c){I=!0;break}"["===c&&(t=!0)}return I||this.throwUnexpectedToken(g.Messages.UnterminatedRegExp),n.substr(1,n.length-2)},c.prototype.scanRegExpFlags=function(){for(var c="";!this.eof();){var n=this.source[this.index];if(!l.Character.isIdentifierPart(n.charCodeAt(0)))break;if(++this.index,"\\"!==n||this.eof())c+=n;else if("u"===(n=this.source[this.index])){++this.index;var t=this.index,e=this.scanHexEscape("u");if(null!==e)for(c+=e;t<this.index;++t)this.source[t];else this.index=t,c+="u";this.tolerateUnexpectedToken()}else this.tolerateUnexpectedToken()}return c},c.prototype.scanRegExp=function(){var c=this.index,n=this.scanRegExpBody(),t=this.scanRegExpFlags();return{type:9,value:"",pattern:n,flags:t,regex:this.testRegExp(n,t),lineNumber:this.lineNumber,lineStart:this.lineStart,start:c,end:this.index}},c.prototype.lex=function(){if(this.eof())return{type:2,value:"",lineNumber:this.lineNumber,lineStart:this.lineStart,start:this.index,end:this.index};var c=this.source.charCodeAt(this.index);return l.Character.isIdentifierStart(c)?this.scanIdentifier():40===c||41===c||59===c?this.scanPunctuator():39===c||34===c?this.scanStringLiteral():46===c?l.Character.isDecimalDigit(this.source.charCodeAt(this.index+1))?this.scanNumericLiteral():this.scanPunctuator():l.Character.isDecimalDigit(c)?this.scanNumericLiteral():96===c||125===c&&"${"===this.curlyStack[this.curlyStack.length-1]?this.scanTemplate():c>=55296&&c<57343&&l.Character.isIdentifierStart(this.codePointAt(this.index))?this.scanIdentifier():this.scanPunctuator()},c}();n.Scanner=d},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.TokenName={},n.TokenName[1]="Boolean",n.TokenName[2]="<end>",n.TokenName[3]="Identifier",n.TokenName[4]="Keyword",n.TokenName[5]="Null",n.TokenName[6]="Numeric",n.TokenName[7]="Punctuator",n.TokenName[8]="String",n.TokenName[9]="RegularExpression",n.TokenName[10]="Template"},function(c,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.XHTMLEntities={quot:'"',amp:"&",apos:"'",gt:">",nbsp:"Â ",iexcl:"Â¡",cent:"Â¢",pound:"Â£",curren:"Â¤",yen:"Â¥",brvbar:"Â¦",sect:"Â§",uml:"Â¨",copy:"Â©",ordf:"Âª",laquo:"Â«",not:"Â¬",shy:"Â­",reg:"Â®",macr:"Â¯",deg:"Â°",plusmn:"Â±",sup2:"Â²",sup3:"Â³",acute:"Â´",micro:"Âµ",para:"Â¶",middot:"Â·",cedil:"Â¸",sup1:"Â¹",ordm:"Âº",raquo:"Â»",frac14:"Â¼",frac12:"Â½",frac34:"Â¾",iquest:"Â¿",Agrave:"Ã",Aacute:"Ã",Acirc:"Ã",Atilde:"Ã",Auml:"Ã",Aring:"Ã",AElig:"Ã",Ccedil:"Ã",Egrave:"Ã",Eacute:"Ã",Ecirc:"Ã",Euml:"Ã",Igrave:"Ã",Iacute:"Ã",Icirc:"Ã",Iuml:"Ã",ETH:"Ã",Ntilde:"Ã",Ograve:"Ã",Oacute:"Ã",Ocirc:"Ã",Otilde:"Ã",Ouml:"Ã",times:"Ã",Oslash:"Ã",Ugrave:"Ã",Uacute:"Ã",Ucirc:"Ã",Uuml:"Ã",Yacute:"Ã",THORN:"Ã",szlig:"Ã",agrave:"Ã ",aacute:"Ã¡",acirc:"Ã¢",atilde:"Ã£",auml:"Ã¤",aring:"Ã¥",aelig:"Ã¦",ccedil:"Ã§",egrave:"Ã¨",eacute:"Ã©",ecirc:"Ãª",euml:"Ã«",igrave:"Ã¬",iacute:"Ã­",icirc:"Ã®",iuml:"Ã¯",eth:"Ã°",ntilde:"Ã±",ograve:"Ã²",oacute:"Ã³",ocirc:"Ã´",otilde:"Ãµ",ouml:"Ã¶",divide:"Ã·",oslash:"Ã¸",ugrave:"Ã¹",uacute:"Ãº",ucirc:"Ã»",uuml:"Ã¼",yacute:"Ã½",thorn:"Ã¾",yuml:"Ã¿",OElig:"Å",oelig:"Å",Scaron:"Å ",scaron:"Å¡",Yuml:"Å¸",fnof:"Æ",circ:"Ë",tilde:"Ë",Alpha:"Î",Beta:"Î",Gamma:"Î",Delta:"Î",Epsilon:"Î",Zeta:"Î",Eta:"Î",Theta:"Î",Iota:"Î",Kappa:"Î",Lambda:"Î",Mu:"Î",Nu:"Î",Xi:"Î",Omicron:"Î",Pi:"Î ",Rho:"Î¡",Sigma:"Î£",Tau:"Î¤",Upsilon:"Î¥",Phi:"Î¦",Chi:"Î§",Psi:"Î¨",Omega:"Î©",alpha:"Î±",beta:"Î²",gamma:"Î³",delta:"Î´",epsilon:"Îµ",zeta:"Î¶",eta:"Î·",theta:"Î¸",iota:"Î¹",kappa:"Îº",lambda:"Î»",mu:"Î¼",nu:"Î½",xi:"Î¾",omicron:"Î¿",pi:"Ï",rho:"Ï",sigmaf:"Ï",sigma:"Ï",tau:"Ï",upsilon:"Ï",phi:"Ï",chi:"Ï",psi:"Ï",omega:"Ï",thetasym:"Ï",upsih:"Ï",piv:"Ï",ensp:"â",emsp:"â",thinsp:"â",zwnj:"â",zwj:"â",lrm:"â",rlm:"â",ndash:"â",mdash:"â",lsquo:"â",rsquo:"â",sbquo:"â",ldquo:"â",rdquo:"â",bdquo:"â",dagger:"â ",Dagger:"â¡",bull:"â¢",hellip:"â¦",permil:"â°",prime:"â²",Prime:"â³",lsaquo:"â¹",rsaquo:"âº",oline:"â¾",frasl:"â",euro:"â¬",image:"â",weierp:"â",real:"â",trade:"â¢",alefsym:"âµ",larr:"â",uarr:"â",rarr:"â",darr:"â",harr:"â",crarr:"âµ",lArr:"â",uArr:"â",rArr:"â",dArr:"â",hArr:"â",forall:"â",part:"â",exist:"â",empty:"â",nabla:"â",isin:"â",notin:"â",ni:"â",prod:"â",sum:"â",minus:"â",lowast:"â",radic:"â",prop:"â",infin:"â",ang:"â ",and:"â§",or:"â¨",cap:"â©",cup:"âª",int:"â«",there4:"â´",sim:"â¼",cong:"â",asymp:"â",ne:"â ",equiv:"â¡",le:"â¤",ge:"â¥",sub:"â",sup:"â",nsub:"â",sube:"â",supe:"â",oplus:"â",otimes:"â",perp:"â¥",sdot:"â",lceil:"â",rceil:"â",lfloor:"â",rfloor:"â",loz:"â",spades:"â ",clubs:"â£",hearts:"â¥",diams:"â¦",lang:"â¨",rang:"â©"}},function(c,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e=t(10),l=t(12),g=t(13),I=function(){function c(){this.values=[],this.curly=this.paren=-1}return c.prototype.beforeFunctionExpression=function(c){return["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","**=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","**","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="].indexOf(c)>=0},c.prototype.isRegexStart=function(){var c=this.values[this.values.length-1],n=null!==c;switch(c){case"this":case"]":n=!1;break;case")":var t=this.values[this.paren-1];n="if"===t||"while"===t||"for"===t||"with"===t;break;case"}":if(n=!1,"function"===this.values[this.curly-3])n=!!(e=this.values[this.curly-4])&&!this.beforeFunctionExpression(e);else if("function"===this.values[this.curly-4]){var e;n=!(e=this.values[this.curly-5])||!this.beforeFunctionExpression(e)}}return n},c.prototype.push=function(c){7===c.type||4===c.type?("{"===c.value?this.curly=this.values.length:"("===c.value&&(this.paren=this.values.length),this.values.push(c.value)):this.values.push(null)},c}(),a=function(){function c(c,n){this.errorHandler=new e.ErrorHandler,this.errorHandler.tolerant=!!n&&"boolean"==typeof n.tolerant&&n.tolerant,this.scanner=new l.Scanner(c,this.errorHandler),this.scanner.trackComment=!!n&&"boolean"==typeof n.comment&&n.comment,this.trackRange=!!n&&"boolean"==typeof n.range&&n.range,this.trackLoc=!!n&&"boolean"==typeof n.loc&&n.loc,this.buffer=[],this.reader=new I}return c.prototype.errors=function(){return this.errorHandler.errors},c.prototype.getNextToken=function(){if(0===this.buffer.length){var c=this.scanner.scanComments();if(this.scanner.trackComment)for(var n=0;n<c.length;++n){var t=c[n],e=this.scanner.source.slice(t.slice[0],t.slice[1]),l={type:t.multiLine?"BlockComment":"LineComment",value:e};this.trackRange&&(l.range=t.range),this.trackLoc&&(l.loc=t.loc),this.buffer.push(l)}if(!this.scanner.eof()){var I=void 0;this.trackLoc&&(I={start:{line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},end:{}});var a="/"===this.scanner.source[this.scanner.index]&&this.reader.isRegexStart()?this.scanner.scanRegExp():this.scanner.lex();this.reader.push(a);var d={type:g.TokenName[a.type],value:this.scanner.source.slice(a.start,a.end)};if(this.trackRange&&(d.range=[a.start,a.end]),this.trackLoc&&(I.end={line:this.scanner.lineNumber,column:this.scanner.index-this.scanner.lineStart},d.loc=I),9===a.type){var i=a.pattern,C=a.flags;d.regex={pattern:i,flags:C}}this.buffer.push(d)}}return this.buffer.shift()},c}();n.Tokenizer=a}])},c.exports=e()},function(c,n,t){"use strict";var e=t(12),l=t(15),g=t(20),I=t(16),a=Object.prototype.toString,d=Object.prototype.hasOwnProperty,i={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},C=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"];function F(c){var n,t,g;if(n=c.toString(16).toUpperCase(),c<=255)t="x",g=2;else if(c<=65535)t="u",g=4;else{if(!(c<=4294967295))throw new l("code point within a string may not be greater than 0xFFFFFFFF");t="U",g=8}return"\\"+t+e.repeat("0",g-n.length)+n}function r(c){this.schema=c.schema||g,this.indent=Math.max(1,c.indent||2),this.noArrayIndent=c.noArrayIndent||!1,this.skipInvalid=c.skipInvalid||!1,this.flowLevel=e.isNothing(c.flowLevel)?-1:c.flowLevel,this.styleMap=function(c,n){var t,e,l,g,I,a,i;if(null===n)return{};for(t={},l=0,g=(e=Object.keys(n)).length;l<g;l+=1)I=e[l],a=String(n[I]),"!!"===I.slice(0,2)&&(I="tag:yaml.org,2002:"+I.slice(2)),(i=c.compiledTypeMap.fallback[I])&&d.call(i.styleAliases,a)&&(a=i.styleAliases[a]),t[I]=a;return t}(this.schema,c.styles||null),this.sortKeys=c.sortKeys||!1,this.lineWidth=c.lineWidth||80,this.noRefs=c.noRefs||!1,this.noCompatMode=c.noCompatMode||!1,this.condenseFlow=c.condenseFlow||!1,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function X(c,n){for(var t,l=e.repeat(" ",n),g=0,I=-1,a="",d=c.length;g<d;)-1===(I=c.indexOf("\n",g))?(t=c.slice(g),g=d):(t=c.slice(g,I+1),g=I+1),t.length&&"\n"!==t&&(a+=l),a+=t;return a}function o(c,n){return"\n"+e.repeat(" ",c.indent*n)}function s(c){return 32===c||9===c}function Z(c){return 32<=c&&c<=126||161<=c&&c<=55295&&8232!==c&&8233!==c||57344<=c&&c<=65533&&65279!==c||65536<=c&&c<=1114111}function B(c){return Z(c)&&65279!==c&&44!==c&&91!==c&&93!==c&&123!==c&&125!==c&&58!==c&&35!==c}function V(c){return/^\n* /.test(c)}function A(c,n,t,e,l){var g,I,a,d=!1,i=!1,C=-1!==e,F=-1,r=Z(a=c.charCodeAt(0))&&65279!==a&&!s(a)&&45!==a&&63!==a&&58!==a&&44!==a&&91!==a&&93!==a&&123!==a&&125!==a&&35!==a&&38!==a&&42!==a&&33!==a&&124!==a&&62!==a&&39!==a&&34!==a&&37!==a&&64!==a&&96!==a&&!s(c.charCodeAt(c.length-1));if(n)for(g=0;g<c.length;g++){if(!Z(I=c.charCodeAt(g)))return 5;r=r&&B(I)}else{for(g=0;g<c.length;g++){if(10===(I=c.charCodeAt(g)))d=!0,C&&(i=i||g-F-1>e&&" "!==c[F+1],F=g);else if(!Z(I))return 5;r=r&&B(I)}i=i||C&&g-F-1>e&&" "!==c[F+1]}return d||i?t>9&&V(c)?5:i?4:3:r&&!l(c)?1:2}function G(c,n,t,e){c.dump=function(){if(0===n.length)return"''";if(!c.noCompatMode&&-1!==C.indexOf(n))return"'"+n+"'";var g=c.indent*Math.max(1,t),I=-1===c.lineWidth?-1:Math.max(Math.min(c.lineWidth,40),c.lineWidth-g),a=e||c.flowLevel>-1&&t>=c.flowLevel;switch(A(n,a,c.indent,I,(function(n){return function(c,n){var t,e;for(t=0,e=c.implicitTypes.length;t<e;t+=1)if(c.implicitTypes[t].resolve(n))return!0;return!1}(c,n)}))){case 1:return n;case 2:return"'"+n.replace(/'/g,"''")+"'";case 3:return"|"+b(n,c.indent)+h(X(n,g));case 4:return">"+b(n,c.indent)+h(X(function(c,n){var t,e,l=/(\n+)([^\n]*)/g,g=(a=c.indexOf("\n"),a=-1!==a?a:c.length,l.lastIndex=a,U(c.slice(0,a),n)),I="\n"===c[0]||" "===c[0];var a;for(;e=l.exec(c);){var d=e[1],i=e[2];t=" "===i[0],g+=d+(I||t||""===i?"":"\n")+U(i,n),I=t}return g}(n,I),g));case 5:return'"'+function(c){for(var n,t,e,l="",g=0;g<c.length;g++)(n=c.charCodeAt(g))>=55296&&n<=56319&&(t=c.charCodeAt(g+1))>=56320&&t<=57343?(l+=F(1024*(n-55296)+t-56320+65536),g++):(e=i[n],l+=!e&&Z(n)?c[g]:e||F(n));return l}(n)+'"';default:throw new l("impossible error: invalid scalar style")}}()}function b(c,n){var t=V(c)?String(n):"",e="\n"===c[c.length-1];return t+(e&&("\n"===c[c.length-2]||"\n"===c)?"+":e?"":"-")+"\n"}function h(c){return"\n"===c[c.length-1]?c.slice(0,-1):c}function U(c,n){if(""===c||" "===c[0])return c;for(var t,e,l=/ [^ ]/g,g=0,I=0,a=0,d="";t=l.exec(c);)(a=t.index)-g>n&&(e=I>g?I:a,d+="\n"+c.slice(g,e),g=e+1),I=a;return d+="\n",c.length-g>n&&I>g?d+=c.slice(g,I)+"\n"+c.slice(I+1):d+=c.slice(g),d.slice(1)}function Q(c,n,t){var e,g,I,i,C,F;for(I=0,i=(g=t?c.explicitTypes:c.implicitTypes).length;I<i;I+=1)if(((C=g[I]).instanceOf||C.predicate)&&(!C.instanceOf||"object"==typeof n&&n instanceof C.instanceOf)&&(!C.predicate||C.predicate(n))){if(c.tag=t?C.tag:"?",C.represent){if(F=c.styleMap[C.tag]||C.defaultStyle,"[object Function]"===a.call(C.represent))e=C.represent(n,F);else{if(!d.call(C.represent,F))throw new l("!<"+C.tag+'> tag resolver accepts not "'+F+'" style');e=C.represent[F](n,F)}c.dump=e}return!0}return!1}function u(c,n,t,e,g,I){c.tag=null,c.dump=t,Q(c,t,!1)||Q(c,t,!0);var d=a.call(c.dump);e&&(e=c.flowLevel<0||c.flowLevel>n);var i,C,F="[object Object]"===d||"[object Array]"===d;if(F&&(C=-1!==(i=c.duplicates.indexOf(t))),(null!==c.tag&&"?"!==c.tag||C||2!==c.indent&&n>0)&&(g=!1),C&&c.usedDuplicates[i])c.dump="*ref_"+i;else{if(F&&C&&!c.usedDuplicates[i]&&(c.usedDuplicates[i]=!0),"[object Object]"===d)e&&0!==Object.keys(c.dump).length?(!function(c,n,t,e){var g,I,a,d,i,C,F="",r=c.tag,X=Object.keys(t);if(!0===c.sortKeys)X.sort();else if("function"==typeof c.sortKeys)X.sort(c.sortKeys);else if(c.sortKeys)throw new l("sortKeys must be a boolean or a function");for(g=0,I=X.length;g<I;g+=1)C="",e&&0===g||(C+=o(c,n)),d=t[a=X[g]],u(c,n+1,a,!0,!0,!0)&&((i=null!==c.tag&&"?"!==c.tag||c.dump&&c.dump.length>1024)&&(c.dump&&10===c.dump.charCodeAt(0)?C+="?":C+="? "),C+=c.dump,i&&(C+=o(c,n)),u(c,n+1,d,!0,i)&&(c.dump&&10===c.dump.charCodeAt(0)?C+=":":C+=": ",F+=C+=c.dump));c.tag=r,c.dump=F||"{}"}(c,n,c.dump,g),C&&(c.dump="&ref_"+i+c.dump)):(!function(c,n,t){var e,l,g,I,a,d="",i=c.tag,C=Object.keys(t);for(e=0,l=C.length;e<l;e+=1)a=c.condenseFlow?'"':"",0!==e&&(a+=", "),I=t[g=C[e]],u(c,n,g,!1,!1)&&(c.dump.length>1024&&(a+="? "),a+=c.dump+(c.condenseFlow?'"':"")+":"+(c.condenseFlow?"":" "),u(c,n,I,!1,!1)&&(d+=a+=c.dump));c.tag=i,c.dump="{"+d+"}"}(c,n,c.dump),C&&(c.dump="&ref_"+i+" "+c.dump));else if("[object Array]"===d){var r=c.noArrayIndent&&n>0?n-1:n;e&&0!==c.dump.length?(!function(c,n,t,e){var l,g,I="",a=c.tag;for(l=0,g=t.length;l<g;l+=1)u(c,n+1,t[l],!0,!0)&&(e&&0===l||(I+=o(c,n)),c.dump&&10===c.dump.charCodeAt(0)?I+="-":I+="- ",I+=c.dump);c.tag=a,c.dump=I||"[]"}(c,r,c.dump,g),C&&(c.dump="&ref_"+i+c.dump)):(!function(c,n,t){var e,l,g="",I=c.tag;for(e=0,l=t.length;e<l;e+=1)u(c,n,t[e],!1,!1)&&(0!==e&&(g+=","+(c.condenseFlow?"":" ")),g+=c.dump);c.tag=I,c.dump="["+g+"]"}(c,r,c.dump),C&&(c.dump="&ref_"+i+" "+c.dump))}else{if("[object String]"!==d){if(c.skipInvalid)return!1;throw new l("unacceptable kind of an object to dump "+d)}"?"!==c.tag&&G(c,c.dump,n,I)}null!==c.tag&&"?"!==c.tag&&(c.dump="!<"+c.tag+"> "+c.dump)}return!0}function W(c,n){var t,e,l=[],g=[];for(function c(n,t,e){var l,g,I;if(null!==n&&"object"==typeof n)if(-1!==(g=t.indexOf(n)))-1===e.indexOf(g)&&e.push(g);else if(t.push(n),Array.isArray(n))for(g=0,I=n.length;g<I;g+=1)c(n[g],t,e);else for(l=Object.keys(n),g=0,I=l.length;g<I;g+=1)c(n[l[g]],t,e)}(c,l,g),t=0,e=g.length;t<e;t+=1)n.duplicates.push(l[g[t]]);n.usedDuplicates=new Array(e)}function m(c,n){var t=new r(n=n||{});return t.noRefs||W(c,t),u(t,0,c,!0,!0)?t.dump+"\n":""}c.exports.dump=m,c.exports.safeDump=function(c,n){return m(c,e.extend({schema:I},n))}},function(c,n){c.exports=function(){throw new Error("define cannot be used indirect")}},function(c,n){(function(n){c.exports=n}).call(this,{})},function(c,n,t){"use strict";var e=t(24),l=t(14),g=t(26),I=t(40),a=t(41),d=l.ucs2length,i=t(25),C=g.Validation;function F(c,n,t){var e=X.call(this,c,n,t);return e>=0?{index:e,compiling:!0}:(e=this._compilations.length,this._compilations[e]={schema:c,root:n,baseId:t},{index:e,compiling:!1})}function r(c,n,t){var e=X.call(this,c,n,t);e>=0&&this._compilations.splice(e,1)}function X(c,n,t){for(var e=0;e<this._compilations.length;e++){var l=this._compilations[e];if(l.schema==c&&l.root==n&&l.baseId==t)return e}return-1}function o(c,n){return"var pattern"+c+" = new RegExp("+l.toQuotedString(n[c])+");"}function s(c){return"var default"+c+" = defaults["+c+"];"}function Z(c,n){return void 0===n[c]?"":"var refVal"+c+" = refVal["+c+"];"}function B(c){return"var customRule"+c+" = customRules["+c+"];"}function V(c,n){if(!c.length)return"";for(var t="",e=0;e<c.length;e++)t+=n(e,c);return t}c.exports=function c(n,t,X,A){var G=this,b=this._opts,h=[void 0],U={},Q=[],u={},W=[],m={},R=[];t=t||{schema:n,refVal:h,refs:U};var J=F.call(this,n,t,A),p=this._compilations[J.index];if(J.compiling)return p.callValidate=function c(){var n=p.validate,t=n.apply(this,arguments);return c.errors=n.errors,t};var x=this._formats,N=this.RULES;try{var Y=S(n,t,X,A);p.validate=Y;var y=p.callValidate;return y&&(y.schema=Y.schema,y.errors=null,y.refs=Y.refs,y.refVal=Y.refVal,y.root=Y.root,y.$async=Y.$async,b.sourceCode&&(y.source=Y.source)),Y}finally{r.call(this,n,t,A)}function S(n,I,F,r){var X=!I||I&&I.schema==n;if(I.schema!=t.schema)return c.call(G,n,I,F,r);var A,u=!0===n.$async,m=a({isTop:!0,schema:n,isRoot:X,baseId:r,root:I,schemaPath:"",errSchemaPath:"#",errorPath:'""',MissingRefError:g.MissingRef,RULES:N,validate:a,util:l,resolve:e,resolveRef:k,usePattern:T,useDefault:v,useCustomRule:z,opts:b,formats:x,logger:G.logger,self:G});m=V(h,Z)+V(Q,o)+V(W,s)+V(R,B)+m,b.processCode&&(m=b.processCode(m));try{A=new Function("self","RULES","formats","root","refVal","defaults","customRules","equal","ucs2length","ValidationError",m)(G,N,x,t,h,W,R,i,d,C),h[0]=A}catch(c){throw G.logger.error("Error compiling schema, function code:",m),c}return A.schema=n,A.errors=null,A.refs=U,A.refVal=h,A.root=X?A:I,u&&(A.$async=!0),!0===b.sourceCode&&(A.source={code:m,patterns:Q,defaults:W}),A}function k(n,l,g){l=e.url(n,l);var I,a,d=U[l];if(void 0!==d)return E(I=h[d],a="refVal["+d+"]");if(!g&&t.refs){var i=t.refs[l];if(void 0!==i)return E(I=t.refVal[i],a=H(l,I))}a=H(l);var C=e.call(G,S,t,l);if(void 0===C){var F=X&&X[l];F&&(C=e.inlineRef(F,b.inlineRefs)?F:c.call(G,F,t,X,n))}if(void 0!==C)return function(c,n){var t=U[c];h[t]=n}(l,C),E(C,a);!function(c){delete U[c]}(l)}function H(c,n){var t=h.length;return h[t]=n,U[c]=t,"refVal"+t}function E(c,n){return"object"==typeof c||"boolean"==typeof c?{code:n,schema:c,inline:!0}:{code:n,$async:c&&!!c.$async}}function T(c){var n=u[c];return void 0===n&&(n=u[c]=Q.length,Q[n]=c),"pattern"+n}function v(c){switch(typeof c){case"boolean":case"number":return""+c;case"string":return l.toQuotedString(c);case"object":if(null===c)return"null";var n=I(c),t=m[n];return void 0===t&&(t=m[n]=W.length,W[t]=c),"default"+t}}function z(c,n,t,e){if(!1!==G._opts.validateSchema){var l=c.definition.dependencies;if(l&&!l.every((function(c){return Object.prototype.hasOwnProperty.call(t,c)})))throw new Error("parent schema must have all required keywords: "+l.join(","));var g=c.definition.validateSchema;if(g)if(!g(n)){var I="keyword schema is invalid: "+G.errorsText(g.errors);if("log"!=G._opts.validateSchema)throw new Error(I);G.logger.error(I)}}var a,d=c.definition.compile,i=c.definition.inline,C=c.definition.macro;if(d)a=d.call(G,n,t,e);else if(C)a=C.call(G,n,t,e),!1!==b.validateSchema&&G.validateSchema(a,!0);else if(i)a=i.call(G,e,c.keyword,n,t);else if(!(a=c.definition.validate))return;if(void 0===a)throw new Error('custom keyword "'+c.keyword+'"failed to compile');var F=R.length;return R[F]=a,{code:"customRule"+F,validate:a}}}},function(c,n,t){
/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */
!function(c){"use strict";function n(){for(var c=arguments.length,n=Array(c),t=0;t<c;t++)n[t]=arguments[t];if(n.length>1){n[0]=n[0].slice(0,-1);for(var e=n.length-1,l=1;l<e;++l)n[l]=n[l].slice(1,-1);return n[e]=n[e].slice(1),n.join("")}return n[0]}function t(c){return"(?:"+c+")"}function e(c){return void 0===c?"undefined":null===c?"null":Object.prototype.toString.call(c).split(" ").pop().split("]").shift().toLowerCase()}function l(c){return c.toUpperCase()}function g(c){var e=n("[0-9]","[A-Fa-f]"),l=t(t("%[EFef]"+e+"%"+e+e+"%"+e+e)+"|"+t("%[89A-Fa-f]"+e+"%"+e+e)+"|"+t("%"+e+e)),g="[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]",I=n("[\\:\\/\\?\\#\\[\\]\\@]",g),a=c?"[\\uE000-\\uF8FF]":"[]",d=n("[A-Za-z]","[0-9]","[\\-\\.\\_\\~]",c?"[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]":"[]"),i=t("[A-Za-z]"+n("[A-Za-z]","[0-9]","[\\+\\-\\.]")+"*"),C=t(t(l+"|"+n(d,g,"[\\:]"))+"*"),F=(t(t("25[0-5]")+"|"+t("2[0-4][0-9]")+"|"+t("1[0-9][0-9]")+"|"+t("[1-9][0-9]")+"|[0-9]"),t(t("25[0-5]")+"|"+t("2[0-4][0-9]")+"|"+t("1[0-9][0-9]")+"|"+t("0?[1-9][0-9]")+"|0?0?[0-9]")),r=t(F+"\\."+F+"\\."+F+"\\."+F),X=t(e+"{1,4}"),o=t(t(X+"\\:"+X)+"|"+r),s=t(t(X+"\\:")+"{6}"+o),Z=t("\\:\\:"+t(X+"\\:")+"{5}"+o),B=t(t(X)+"?\\:\\:"+t(X+"\\:")+"{4}"+o),V=t(t(t(X+"\\:")+"{0,1}"+X)+"?\\:\\:"+t(X+"\\:")+"{3}"+o),A=t(t(t(X+"\\:")+"{0,2}"+X)+"?\\:\\:"+t(X+"\\:")+"{2}"+o),G=t(t(t(X+"\\:")+"{0,3}"+X)+"?\\:\\:"+X+"\\:"+o),b=t(t(t(X+"\\:")+"{0,4}"+X)+"?\\:\\:"+o),h=t(t(t(X+"\\:")+"{0,5}"+X)+"?\\:\\:"+X),U=t(t(t(X+"\\:")+"{0,6}"+X)+"?\\:\\:"),Q=t([s,Z,B,V,A,G,b,h,U].join("|")),u=t(t(d+"|"+l)+"+"),W=(t(Q+"\\%25"+u),t(Q+t("\\%25|\\%(?!"+e+"{2})")+u)),m=t("[vV]"+e+"+\\."+n(d,g,"[\\:]")+"+"),R=t("\\["+t(W+"|"+Q+"|"+m)+"\\]"),J=t(t(l+"|"+n(d,g))+"*"),p=t(R+"|"+r+"(?!"+J+")|"+J),x=t("[0-9]*"),N=t(t(C+"@")+"?"+p+t("\\:"+x)+"?"),Y=t(l+"|"+n(d,g,"[\\:\\@]")),y=t(Y+"*"),S=t(Y+"+"),k=t(t(l+"|"+n(d,g,"[\\@]"))+"+"),H=t(t("\\/"+y)+"*"),E=t("\\/"+t(S+H)+"?"),T=t(k+H),v=t(S+H),z="(?!"+Y+")",D=(t(H+"|"+E+"|"+T+"|"+v+"|"+z),t(t(Y+"|"+n("[\\/\\?]",a))+"*")),f=t(t(Y+"|[\\/\\?]")+"*"),w=t(t("\\/\\/"+N+H)+"|"+E+"|"+v+"|"+z),j=t(i+"\\:"+w+t("\\?"+D)+"?"+t("\\#"+f)+"?"),K=t(t("\\/\\/"+N+H)+"|"+E+"|"+T+"|"+z),M=t(K+t("\\?"+D)+"?"+t("\\#"+f)+"?");return t(j+"|"+M),t(i+"\\:"+w+t("\\?"+D)+"?"),t(t("\\/\\/("+t("("+C+")@")+"?("+p+")"+t("\\:("+x+")")+"?)")+"?("+H+"|"+E+"|"+v+"|"+z+")"),t("\\?("+D+")"),t("\\#("+f+")"),t(t("\\/\\/("+t("("+C+")@")+"?("+p+")"+t("\\:("+x+")")+"?)")+"?("+H+"|"+E+"|"+T+"|"+z+")"),t("\\?("+D+")"),t("\\#("+f+")"),t(t("\\/\\/("+t("("+C+")@")+"?("+p+")"+t("\\:("+x+")")+"?)")+"?("+H+"|"+E+"|"+v+"|"+z+")"),t("\\?("+D+")"),t("\\#("+f+")"),t("("+C+")@"),t("\\:("+x+")"),{NOT_SCHEME:new RegExp(n("[^]","[A-Za-z]","[0-9]","[\\+\\-\\.]"),"g"),NOT_USERINFO:new RegExp(n("[^\\%\\:]",d,g),"g"),NOT_HOST:new RegExp(n("[^\\%\\[\\]\\:]",d,g),"g"),NOT_PATH:new RegExp(n("[^\\%\\/\\:\\@]",d,g),"g"),NOT_PATH_NOSCHEME:new RegExp(n("[^\\%\\/\\@]",d,g),"g"),NOT_QUERY:new RegExp(n("[^\\%]",d,g,"[\\:\\@\\/\\?]",a),"g"),NOT_FRAGMENT:new RegExp(n("[^\\%]",d,g,"[\\:\\@\\/\\?]"),"g"),ESCAPE:new RegExp(n("[^]",d,g),"g"),UNRESERVED:new RegExp(d,"g"),OTHER_CHARS:new RegExp(n("[^\\%]",d,I),"g"),PCT_ENCODED:new RegExp(l,"g"),IPV4ADDRESS:new RegExp("^("+r+")$"),IPV6ADDRESS:new RegExp("^\\[?("+Q+")"+t(t("\\%25|\\%(?!"+e+"{2})")+"("+u+")")+"?\\]?$")}}var I=g(!1),a=g(!0),d=function(c,n){if(Array.isArray(c))return c;if(Symbol.iterator in Object(c))return function(c,n){var t=[],e=!0,l=!1,g=void 0;try{for(var I,a=c[Symbol.iterator]();!(e=(I=a.next()).done)&&(t.push(I.value),!n||t.length!==n);e=!0);}catch(c){l=!0,g=c}finally{try{!e&&a.return&&a.return()}finally{if(l)throw g}}return t}(c,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")},i=2147483647,C=/^xn--/,F=/[^\0-\x7E]/,r=/[\x2E\u3002\uFF0E\uFF61]/g,X={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},o=Math.floor,s=String.fromCharCode;function Z(c){throw new RangeError(X[c])}function B(c,n){var t=c.split("@"),e="";t.length>1&&(e=t[0]+"@",c=t[1]);var l=function(c,n){for(var t=[],e=c.length;e--;)t[e]=n(c[e]);return t}((c=c.replace(r,".")).split("."),n).join(".");return e+l}function V(c){for(var n=[],t=0,e=c.length;t<e;){var l=c.charCodeAt(t++);if(l>=55296&&l<=56319&&t<e){var g=c.charCodeAt(t++);56320==(64512&g)?n.push(((1023&l)<<10)+(1023&g)+65536):(n.push(l),t--)}else n.push(l)}return n}var A=function(c,n){return c+22+75*(c<26)-((0!=n)<<5)},G=function(c,n,t){var e=0;for(c=t?o(c/700):c>>1,c+=o(c/n);c>455;e+=36)c=o(c/35);return o(e+36*c/(c+38))},b=function(c){var n,t=[],e=c.length,l=0,g=128,I=72,a=c.lastIndexOf("-");a<0&&(a=0);for(var d=0;d<a;++d)c.charCodeAt(d)>=128&&Z("not-basic"),t.push(c.charCodeAt(d));for(var C=a>0?a+1:0;C<e;){for(var F=l,r=1,X=36;;X+=36){C>=e&&Z("invalid-input");var s=(n=c.charCodeAt(C++))-48<10?n-22:n-65<26?n-65:n-97<26?n-97:36;(s>=36||s>o((i-l)/r))&&Z("overflow"),l+=s*r;var B=X<=I?1:X>=I+26?26:X-I;if(s<B)break;var V=36-B;r>o(i/V)&&Z("overflow"),r*=V}var A=t.length+1;I=G(l-F,A,0==F),o(l/A)>i-g&&Z("overflow"),g+=o(l/A),l%=A,t.splice(l++,0,g)}return String.fromCodePoint.apply(String,t)},h=function(c){var n=[],t=(c=V(c)).length,e=128,l=0,g=72,I=!0,a=!1,d=void 0;try{for(var C,F=c[Symbol.iterator]();!(I=(C=F.next()).done);I=!0){var r=C.value;r<128&&n.push(s(r))}}catch(c){a=!0,d=c}finally{try{!I&&F.return&&F.return()}finally{if(a)throw d}}var X=n.length,B=X;for(X&&n.push("-");B<t;){var b=i,h=!0,U=!1,Q=void 0;try{for(var u,W=c[Symbol.iterator]();!(h=(u=W.next()).done);h=!0){var m=u.value;m>=e&&m<b&&(b=m)}}catch(c){U=!0,Q=c}finally{try{!h&&W.return&&W.return()}finally{if(U)throw Q}}var R=B+1;b-e>o((i-l)/R)&&Z("overflow"),l+=(b-e)*R,e=b;var J=!0,p=!1,x=void 0;try{for(var N,Y=c[Symbol.iterator]();!(J=(N=Y.next()).done);J=!0){var y=N.value;if(y<e&&++l>i&&Z("overflow"),y==e){for(var S=l,k=36;;k+=36){var H=k<=g?1:k>=g+26?26:k-g;if(S<H)break;var E=S-H,T=36-H;n.push(s(A(H+E%T,0))),S=o(E/T)}n.push(s(A(S,0))),g=G(l,R,B==X),l=0,++B}}}catch(c){p=!0,x=c}finally{try{!J&&Y.return&&Y.return()}finally{if(p)throw x}}++l,++e}return n.join("")},U=function(c){return B(c,(function(c){return F.test(c)?"xn--"+h(c):c}))},Q=function(c){return B(c,(function(c){return C.test(c)?b(c.slice(4).toLowerCase()):c}))},u={};function W(c){var n=c.charCodeAt(0);return n<16?"%0"+n.toString(16).toUpperCase():n<128?"%"+n.toString(16).toUpperCase():n<2048?"%"+(n>>6|192).toString(16).toUpperCase()+"%"+(63&n|128).toString(16).toUpperCase():"%"+(n>>12|224).toString(16).toUpperCase()+"%"+(n>>6&63|128).toString(16).toUpperCase()+"%"+(63&n|128).toString(16).toUpperCase()}function m(c){for(var n="",t=0,e=c.length;t<e;){var l=parseInt(c.substr(t+1,2),16);if(l<128)n+=String.fromCharCode(l),t+=3;else if(l>=194&&l<224){if(e-t>=6){var g=parseInt(c.substr(t+4,2),16);n+=String.fromCharCode((31&l)<<6|63&g)}else n+=c.substr(t,6);t+=6}else if(l>=224){if(e-t>=9){var I=parseInt(c.substr(t+4,2),16),a=parseInt(c.substr(t+7,2),16);n+=String.fromCharCode((15&l)<<12|(63&I)<<6|63&a)}else n+=c.substr(t,9);t+=9}else n+=c.substr(t,3),t+=3}return n}function R(c,n){function t(c){var t=m(c);return t.match(n.UNRESERVED)?t:c}return c.scheme&&(c.scheme=String(c.scheme).replace(n.PCT_ENCODED,t).toLowerCase().replace(n.NOT_SCHEME,"")),void 0!==c.userinfo&&(c.userinfo=String(c.userinfo).replace(n.PCT_ENCODED,t).replace(n.NOT_USERINFO,W).replace(n.PCT_ENCODED,l)),void 0!==c.host&&(c.host=String(c.host).replace(n.PCT_ENCODED,t).toLowerCase().replace(n.NOT_HOST,W).replace(n.PCT_ENCODED,l)),void 0!==c.path&&(c.path=String(c.path).replace(n.PCT_ENCODED,t).replace(c.scheme?n.NOT_PATH:n.NOT_PATH_NOSCHEME,W).replace(n.PCT_ENCODED,l)),void 0!==c.query&&(c.query=String(c.query).replace(n.PCT_ENCODED,t).replace(n.NOT_QUERY,W).replace(n.PCT_ENCODED,l)),void 0!==c.fragment&&(c.fragment=String(c.fragment).replace(n.PCT_ENCODED,t).replace(n.NOT_FRAGMENT,W).replace(n.PCT_ENCODED,l)),c}function J(c){return c.replace(/^0*(.*)/,"$1")||"0"}function p(c,n){var t=c.match(n.IPV4ADDRESS)||[],e=d(t,2)[1];return e?e.split(".").map(J).join("."):c}function x(c,n){var t=c.match(n.IPV6ADDRESS)||[],e=d(t,3),l=e[1],g=e[2];if(l){for(var I=l.toLowerCase().split("::").reverse(),a=d(I,2),i=a[0],C=a[1],F=C?C.split(":").map(J):[],r=i.split(":").map(J),X=n.IPV4ADDRESS.test(r[r.length-1]),o=X?7:8,s=r.length-o,Z=Array(o),B=0;B<o;++B)Z[B]=F[B]||r[s+B]||"";X&&(Z[o-1]=p(Z[o-1],n));var V=Z.reduce((function(c,n,t){if(!n||"0"===n){var e=c[c.length-1];e&&e.index+e.length===t?e.length++:c.push({index:t,length:1})}return c}),[]).sort((function(c,n){return n.length-c.length}))[0],A=void 0;if(V&&V.length>1){var G=Z.slice(0,V.index),b=Z.slice(V.index+V.length);A=G.join(":")+"::"+b.join(":")}else A=Z.join(":");return g&&(A+="%"+g),A}return c}var N=/^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i,Y=void 0==="".match(/(){0}/)[1];function y(c){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t={},e=!1!==n.iri?a:I;"suffix"===n.reference&&(c=(n.scheme?n.scheme+":":"")+"//"+c);var l=c.match(N);if(l){Y?(t.scheme=l[1],t.userinfo=l[3],t.host=l[4],t.port=parseInt(l[5],10),t.path=l[6]||"",t.query=l[7],t.fragment=l[8],isNaN(t.port)&&(t.port=l[5])):(t.scheme=l[1]||void 0,t.userinfo=-1!==c.indexOf("@")?l[3]:void 0,t.host=-1!==c.indexOf("//")?l[4]:void 0,t.port=parseInt(l[5],10),t.path=l[6]||"",t.query=-1!==c.indexOf("?")?l[7]:void 0,t.fragment=-1!==c.indexOf("#")?l[8]:void 0,isNaN(t.port)&&(t.port=c.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/)?l[4]:void 0)),t.host&&(t.host=x(p(t.host,e),e)),void 0!==t.scheme||void 0!==t.userinfo||void 0!==t.host||void 0!==t.port||t.path||void 0!==t.query?void 0===t.scheme?t.reference="relative":void 0===t.fragment?t.reference="absolute":t.reference="uri":t.reference="same-document",n.reference&&"suffix"!==n.reference&&n.reference!==t.reference&&(t.error=t.error||"URI is not a "+n.reference+" reference.");var g=u[(n.scheme||t.scheme||"").toLowerCase()];if(n.unicodeSupport||g&&g.unicodeSupport)R(t,e);else{if(t.host&&(n.domainHost||g&&g.domainHost))try{t.host=U(t.host.replace(e.PCT_ENCODED,m).toLowerCase())}catch(c){t.error=t.error||"Host's domain name can not be converted to ASCII via punycode: "+c}R(t,I)}g&&g.parse&&g.parse(t,n)}else t.error=t.error||"URI can not be parsed.";return t}function S(c,n){var t=!1!==n.iri?a:I,e=[];return void 0!==c.userinfo&&(e.push(c.userinfo),e.push("@")),void 0!==c.host&&e.push(x(p(String(c.host),t),t).replace(t.IPV6ADDRESS,(function(c,n,t){return"["+n+(t?"%25"+t:"")+"]"}))),"number"==typeof c.port&&(e.push(":"),e.push(c.port.toString(10))),e.length?e.join(""):void 0}var k=/^\.\.?\//,H=/^\/\.(\/|$)/,E=/^\/\.\.(\/|$)/,T=/^\/?(?:.|\n)*?(?=\/|$)/;function v(c){for(var n=[];c.length;)if(c.match(k))c=c.replace(k,"");else if(c.match(H))c=c.replace(H,"/");else if(c.match(E))c=c.replace(E,"/"),n.pop();else if("."===c||".."===c)c="";else{var t=c.match(T);if(!t)throw new Error("Unexpected dot segment condition");var e=t[0];c=c.slice(e.length),n.push(e)}return n.join("")}function z(c){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=n.iri?a:I,e=[],l=u[(n.scheme||c.scheme||"").toLowerCase()];if(l&&l.serialize&&l.serialize(c,n),c.host)if(t.IPV6ADDRESS.test(c.host));else if(n.domainHost||l&&l.domainHost)try{c.host=n.iri?Q(c.host):U(c.host.replace(t.PCT_ENCODED,m).toLowerCase())}catch(t){c.error=c.error||"Host's domain name can not be converted to "+(n.iri?"Unicode":"ASCII")+" via punycode: "+t}R(c,t),"suffix"!==n.reference&&c.scheme&&(e.push(c.scheme),e.push(":"));var g=S(c,n);if(void 0!==g&&("suffix"!==n.reference&&e.push("//"),e.push(g),c.path&&"/"!==c.path.charAt(0)&&e.push("/")),void 0!==c.path){var d=c.path;n.absolutePath||l&&l.absolutePath||(d=v(d)),void 0===g&&(d=d.replace(/^\/\//,"/%2F")),e.push(d)}return void 0!==c.query&&(e.push("?"),e.push(c.query)),void 0!==c.fragment&&(e.push("#"),e.push(c.fragment)),e.join("")}function D(c,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},e=arguments[3],l={};return e||(c=y(z(c,t),t),n=y(z(n,t),t)),!(t=t||{}).tolerant&&n.scheme?(l.scheme=n.scheme,l.userinfo=n.userinfo,l.host=n.host,l.port=n.port,l.path=v(n.path||""),l.query=n.query):(void 0!==n.userinfo||void 0!==n.host||void 0!==n.port?(l.userinfo=n.userinfo,l.host=n.host,l.port=n.port,l.path=v(n.path||""),l.query=n.query):(n.path?("/"===n.path.charAt(0)?l.path=v(n.path):(void 0===c.userinfo&&void 0===c.host&&void 0===c.port||c.path?c.path?l.path=c.path.slice(0,c.path.lastIndexOf("/")+1)+n.path:l.path=n.path:l.path="/"+n.path,l.path=v(l.path)),l.query=n.query):(l.path=c.path,void 0!==n.query?l.query=n.query:l.query=c.query),l.userinfo=c.userinfo,l.host=c.host,l.port=c.port),l.scheme=c.scheme),l.fragment=n.fragment,l}function f(c,n){return c&&c.toString().replace(n&&n.iri?a.PCT_ENCODED:I.PCT_ENCODED,m)}var w={scheme:"http",domainHost:!0,parse:function(c,n){return c.host||(c.error=c.error||"HTTP URIs must have a host."),c},serialize:function(c,n){return c.port!==("https"!==String(c.scheme).toLowerCase()?80:443)&&""!==c.port||(c.port=void 0),c.path||(c.path="/"),c}},j={scheme:"https",domainHost:w.domainHost,parse:w.parse,serialize:w.serialize},K={},M="[A-Za-z0-9\\-\\.\\_\\~\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]",O="[0-9A-Fa-f]",L=t(t("%[EFef][0-9A-Fa-f]%"+O+O+"%"+O+O)+"|"+t("%[89A-Fa-f][0-9A-Fa-f]%"+O+O)+"|"+t("%"+O+O)),P=n("[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]",'[\\"\\\\]'),_=new RegExp(M,"g"),q=new RegExp(L,"g"),$=new RegExp(n("[^]","[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]","[\\.]",'[\\"]',P),"g"),cc=new RegExp(n("[^]",M,"[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]"),"g"),nc=cc;function tc(c){var n=m(c);return n.match(_)?n:c}var ec={scheme:"mailto",parse:function(c,n){var t=c,e=t.to=t.path?t.path.split(","):[];if(t.path=void 0,t.query){for(var l=!1,g={},I=t.query.split("&"),a=0,d=I.length;a<d;++a){var i=I[a].split("=");switch(i[0]){case"to":for(var C=i[1].split(","),F=0,r=C.length;F<r;++F)e.push(C[F]);break;case"subject":t.subject=f(i[1],n);break;case"body":t.body=f(i[1],n);break;default:l=!0,g[f(i[0],n)]=f(i[1],n)}}l&&(t.headers=g)}t.query=void 0;for(var X=0,o=e.length;X<o;++X){var s=e[X].split("@");if(s[0]=f(s[0]),n.unicodeSupport)s[1]=f(s[1],n).toLowerCase();else try{s[1]=U(f(s[1],n).toLowerCase())}catch(c){t.error=t.error||"Email address's domain name can not be converted to ASCII via punycode: "+c}e[X]=s.join("@")}return t},serialize:function(c,n){var t,e=c,g=null!=(t=c.to)?t instanceof Array?t:"number"!=typeof t.length||t.split||t.setInterval||t.call?[t]:Array.prototype.slice.call(t):[];if(g){for(var I=0,a=g.length;I<a;++I){var d=String(g[I]),i=d.lastIndexOf("@"),C=d.slice(0,i).replace(q,tc).replace(q,l).replace($,W),F=d.slice(i+1);try{F=n.iri?Q(F):U(f(F,n).toLowerCase())}catch(c){e.error=e.error||"Email address's domain name can not be converted to "+(n.iri?"Unicode":"ASCII")+" via punycode: "+c}g[I]=C+"@"+F}e.path=g.join(",")}var r=c.headers=c.headers||{};c.subject&&(r.subject=c.subject),c.body&&(r.body=c.body);var X=[];for(var o in r)r[o]!==K[o]&&X.push(o.replace(q,tc).replace(q,l).replace(cc,W)+"="+r[o].replace(q,tc).replace(q,l).replace(nc,W));return X.length&&(e.query=X.join("&")),e}},lc=/^([^\:]+)\:(.*)/,gc={scheme:"urn",parse:function(c,n){var t=c.path&&c.path.match(lc),e=c;if(t){var l=n.scheme||e.scheme||"urn",g=t[1].toLowerCase(),I=t[2],a=l+":"+(n.nid||g),d=u[a];e.nid=g,e.nss=I,e.path=void 0,d&&(e=d.parse(e,n))}else e.error=e.error||"URN can not be parsed.";return e},serialize:function(c,n){var t=n.scheme||c.scheme||"urn",e=c.nid,l=t+":"+(n.nid||e),g=u[l];g&&(c=g.serialize(c,n));var I=c,a=c.nss;return I.path=(e||n.nid)+":"+a,I}},Ic=/^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/,ac={scheme:"urn:uuid",parse:function(c,n){var t=c;return t.uuid=t.nss,t.nss=void 0,n.tolerant||t.uuid&&t.uuid.match(Ic)||(t.error=t.error||"UUID is not valid."),t},serialize:function(c,n){var t=c;return t.nss=(c.uuid||"").toLowerCase(),t}};u[w.scheme]=w,u[j.scheme]=j,u[ec.scheme]=ec,u[gc.scheme]=gc,u[ac.scheme]=ac,c.SCHEMES=u,c.pctEncChar=W,c.pctDecChars=m,c.parse=y,c.removeDotSegments=v,c.serialize=z,c.resolveComponents=D,c.resolve=function(c,n,t){var e=function(c,n){var t=c;if(n)for(var e in n)t[e]=n[e];return t}({scheme:"null"},t);return z(D(y(c,e),y(n,e),e,!0),e)},c.normalize=function(c,n){return"string"==typeof c?c=z(y(c,n),n):"object"===e(c)&&(c=y(z(c,n),n)),c},c.equal=function(c,n,t){return"string"==typeof c?c=z(y(c,t),t):"object"===e(c)&&(c=z(c,t)),"string"==typeof n?n=z(y(n,t),t):"object"===e(n)&&(n=z(n,t)),c===n},c.escapeComponent=function(c,n){return c&&c.toString().replace(n&&n.iri?a.ESCAPE:I.ESCAPE,W)},c.unescapeComponent=f,Object.defineProperty(c,"__esModule",{value:!0})}(n)},function(c,n,t){"use strict";c.exports=function(c){for(var n,t=0,e=c.length,l=0;l<e;)t++,(n=c.charCodeAt(l++))>=55296&&n<=56319&&l<e&&56320==(64512&(n=c.charCodeAt(l)))&&l++;return t}},function(c,n,t){"use strict";var e=c.exports=function(c,n,t){"function"==typeof n&&(t=n,n={}),function c(n,t,l,g,I,a,d,i,C,F){if(g&&"object"==typeof g&&!Array.isArray(g)){for(var r in t(g,I,a,d,i,C,F),g){var X=g[r];if(Array.isArray(X)){if(r in e.arrayKeywords)for(var o=0;o<X.length;o++)c(n,t,l,X[o],I+"/"+r+"/"+o,a,I,r,g,o)}else if(r in e.propsKeywords){if(X&&"object"==typeof X)for(var s in X)c(n,t,l,X[s],I+"/"+r+"/"+s.replace(/~/g,"~0").replace(/\//g,"~1"),a,I,r,g,s)}else(r in e.keywords||n.allKeys&&!(r in e.skipKeywords))&&c(n,t,l,X,I+"/"+r,a,I,r,g)}l(g,I,a,d,i,C,F)}}(n,"function"==typeof(t=n.cb||t)?t:t.pre||function(){},t.post||function(){},c,"",c)};e.keywords={additionalItems:!0,items:!0,contains:!0,additionalProperties:!0,propertyNames:!0,not:!0},e.arrayKeywords={items:!0,allOf:!0,anyOf:!0,oneOf:!0},e.propsKeywords={definitions:!0,properties:!0,patternProperties:!0,dependencies:!0},e.skipKeywords={default:!0,enum:!0,const:!0,required:!0,maximum:!0,minimum:!0,exclusiveMaximum:!0,exclusiveMinimum:!0,multipleOf:!0,maxLength:!0,minLength:!0,pattern:!0,format:!0,maxItems:!0,minItems:!0,uniqueItems:!0,maxProperties:!0,minProperties:!0}},function(c,n,t){"use strict";var e=c.exports=function(){this._cache={}};e.prototype.put=function(c,n){this._cache[c]=n},e.prototype.get=function(c){return this._cache[c]},e.prototype.del=function(c){delete this._cache[c]},e.prototype.clear=function(){this._cache={}}},function(c,n,t){"use strict";var e=t(14),l=/^(\d\d\d\d)-(\d\d)-(\d\d)$/,g=[0,31,28,31,30,31,30,31,31,30,31,30,31],I=/^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d(?::?\d\d)?)?$/i,a=/^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,d=/^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,i=/^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,C=/^(?:(?:http[s\u017F]?|ftp):\/\/)(?:(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+(?::(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?@)?(?:(?!10(?:\.[0-9]{1,3}){3})(?!127(?:\.[0-9]{1,3}){3})(?!169\.254(?:\.[0-9]{1,3}){2})(?!192\.168(?:\.[0-9]{1,3}){2})(?!172\.(?:1[6-9]|2[0-9]|3[01])(?:\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)(?:\.(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)*(?:\.(?:(?:[KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\/(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?$/i,F=/^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,r=/^(?:\/(?:[^~/]|~0|~1)*)*$/,X=/^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,o=/^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/;function s(c){return c="full"==c?"full":"fast",e.copy(s[c])}function Z(c){var n=c.match(l);if(!n)return!1;var t=+n[1],e=+n[2],I=+n[3];return e>=1&&e<=12&&I>=1&&I<=(2==e&&function(c){return c%4==0&&(c%100!=0||c%400==0)}(t)?29:g[e])}function B(c,n){var t=c.match(I);if(!t)return!1;var e=t[1],l=t[2],g=t[3],a=t[5];return(e<=23&&l<=59&&g<=59||23==e&&59==l&&60==g)&&(!n||a)}c.exports=s,s.fast={date:/^\d\d\d\d-[0-1]\d-[0-3]\d$/,time:/^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,"date-time":/^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,uri:/^(?:[a-z][a-z0-9+-.]*:)(?:\/?\/)?[^\s]*$/i,"uri-reference":/^(?:(?:[a-z][a-z0-9+-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,"uri-template":i,url:C,email:/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,hostname:a,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:b,uuid:F,"json-pointer":r,"json-pointer-uri-fragment":X,"relative-json-pointer":o},s.full={date:Z,time:B,"date-time":function(c){var n=c.split(V);return 2==n.length&&Z(n[0])&&B(n[1],!0)},uri:function(c){return A.test(c)&&d.test(c)},"uri-reference":/^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,"uri-template":i,url:C,email:/^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,hostname:a,ipv4:/^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,ipv6:/^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,regex:b,uuid:F,"json-pointer":r,"json-pointer-uri-fragment":X,"relative-json-pointer":o};var V=/t|\s/i;var A=/\/|:/;var G=/[^\\]\\Z/;function b(c){if(G.test(c))return!1;try{return new RegExp(c),!0}catch(c){return!1}}},function(c,n,t){"use strict";var e=t(107),l=t(14).toHash;c.exports=function(){var c=[{type:"number",rules:[{maximum:["exclusiveMaximum"]},{minimum:["exclusiveMinimum"]},"multipleOf","format"]},{type:"string",rules:["maxLength","minLength","pattern","format"]},{type:"array",rules:["maxItems","minItems","items","contains","uniqueItems"]},{type:"object",rules:["maxProperties","minProperties","required","dependencies","propertyNames",{properties:["additionalProperties","patternProperties"]}]},{rules:["$ref","const","enum","not","anyOf","oneOf","allOf","if"]}],n=["type","$comment"];return c.all=l(n),c.types=l(["number","integer","string","array","object","boolean","null"]),c.forEach((function(t){t.rules=t.rules.map((function(t){var l;if("object"==typeof t){var g=Object.keys(t)[0];l=t[g],t=g,l.forEach((function(t){n.push(t),c.all[t]=!0}))}return n.push(t),c.all[t]={keyword:t,code:e[t],implements:l}})),c.all.$comment={keyword:"$comment",code:e.$comment},t.type&&(c.types[t.type]=t)})),c.keywords=l(n.concat(["$schema","$id","id","$data","$async","title","description","default","definitions","examples","readOnly","writeOnly","contentMediaType","contentEncoding","additionalItems","then","else"])),c.custom={},c}},function(c,n,t){"use strict";c.exports={$ref:t(108),allOf:t(109),anyOf:t(110),$comment:t(111),const:t(112),contains:t(113),dependencies:t(114),enum:t(115),format:t(116),if:t(117),items:t(118),maximum:t(42),minimum:t(42),maxItems:t(43),minItems:t(43),maxLength:t(44),minLength:t(44),maxProperties:t(45),minProperties:t(45),multipleOf:t(119),not:t(120),oneOf:t(121),pattern:t(122),properties:t(123),propertyNames:t(124),required:t(125),uniqueItems:t(126),validate:t(41)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l,g=" ",I=c.level,a=c.dataLevel,d=c.schema[n],i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(a||""),r="valid"+I;if("#"==d||"#/"==d)c.isRoot?(e=c.async,l="validate"):(e=!0===c.root.schema.$async,l="root.refVal[0]");else{var X=c.resolveRef(c.baseId,d,c.isRoot);if(void 0===X){var o=c.MissingRefError.message(c.baseId,d);if("fail"==c.opts.missingRefs){c.logger.error(o),(V=V||[]).push(g),g="",!1!==c.createErrors?(g+=" { keyword: '$ref' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { ref: '"+c.util.escapeQuotes(d)+"' } ",!1!==c.opts.messages&&(g+=" , message: 'can\\'t resolve reference "+c.util.escapeQuotes(d)+"' "),c.opts.verbose&&(g+=" , schema: "+c.util.toQuotedString(d)+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),g+=" } "):g+=" {} ";var s=g;g=V.pop(),!c.compositeRule&&C?c.async?g+=" throw new ValidationError(["+s+"]); ":g+=" validate.errors = ["+s+"]; return false; ":g+=" var err = "+s+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",C&&(g+=" if (false) { ")}else{if("ignore"!=c.opts.missingRefs)throw new c.MissingRefError(c.baseId,d,o);c.logger.warn(o),C&&(g+=" if (true) { ")}}else if(X.inline){var Z=c.util.copy(c);Z.level++;var B="valid"+Z.level;Z.schema=X.schema,Z.schemaPath="",Z.errSchemaPath=d,g+=" "+c.validate(Z).replace(/validate\.schema/g,X.code)+" ",C&&(g+=" if ("+B+") { ")}else e=!0===X.$async||c.async&&!1!==X.$async,l=X.code}if(l){var V;(V=V||[]).push(g),g="",c.opts.passContext?g+=" "+l+".call(this, ":g+=" "+l+"( ",g+=" "+F+", (dataPath || '')",'""'!=c.errorPath&&(g+=" + "+c.errorPath);var A=g+=" , "+(a?"data"+(a-1||""):"parentData")+" , "+(a?c.dataPathArr[a]:"parentDataProperty")+", rootData)  ";if(g=V.pop(),e){if(!c.async)throw new Error("async schema referenced by sync schema");C&&(g+=" var "+r+"; "),g+=" try { await "+A+"; ",C&&(g+=" "+r+" = true; "),g+=" } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ",C&&(g+=" "+r+" = false; "),g+=" } ",C&&(g+=" if ("+r+") { ")}else g+=" if (!"+A+") { if (vErrors === null) vErrors = "+l+".errors; else vErrors = vErrors.concat("+l+".errors); errors = vErrors.length; } ",C&&(g+=" else { ")}return g}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.schema[n],g=c.schemaPath+c.util.getProperty(n),I=c.errSchemaPath+"/"+n,a=!c.opts.allErrors,d=c.util.copy(c),i="";d.level++;var C="valid"+d.level,F=d.baseId,r=!0,X=l;if(X)for(var o,s=-1,Z=X.length-1;s<Z;)o=X[s+=1],(c.opts.strictKeywords?"object"==typeof o&&Object.keys(o).length>0:c.util.schemaHasRules(o,c.RULES.all))&&(r=!1,d.schema=o,d.schemaPath=g+"["+s+"]",d.errSchemaPath=I+"/"+s,e+="  "+c.validate(d)+" ",d.baseId=F,a&&(e+=" if ("+C+") { ",i+="}"));return a&&(e+=r?" if (true) { ":" "+i.slice(0,-1)+" "),e=c.util.cleanUpCode(e)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r="errs__"+l,X=c.util.copy(c),o="";X.level++;var s="valid"+X.level;if(I.every((function(n){return c.opts.strictKeywords?"object"==typeof n&&Object.keys(n).length>0:c.util.schemaHasRules(n,c.RULES.all)}))){var Z=X.baseId;e+=" var "+r+" = errors; var "+F+" = false;  ";var B=c.compositeRule;c.compositeRule=X.compositeRule=!0;var V=I;if(V)for(var A,G=-1,b=V.length-1;G<b;)A=V[G+=1],X.schema=A,X.schemaPath=a+"["+G+"]",X.errSchemaPath=d+"/"+G,e+="  "+c.validate(X)+" ",X.baseId=Z,e+=" "+F+" = "+F+" || "+s+"; if (!"+F+") { ",o+="}";c.compositeRule=X.compositeRule=B,e+=" "+o+" if (!"+F+") {   var err =   ",!1!==c.createErrors?(e+=" { keyword: 'anyOf' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: {} ",!1!==c.opts.messages&&(e+=" , message: 'should match some schema in anyOf' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!c.compositeRule&&i&&(c.async?e+=" throw new ValidationError(vErrors); ":e+=" validate.errors = vErrors; return false; "),e+=" } else {  errors = "+r+"; if (vErrors !== null) { if ("+r+") vErrors.length = "+r+"; else vErrors = null; } ",c.opts.allErrors&&(e+=" } "),e=c.util.cleanUpCode(e)}else i&&(e+=" if (true) { ");return e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.schema[n],g=c.errSchemaPath+"/"+n,I=(c.opts.allErrors,c.util.toQuotedString(l));return!0===c.opts.$comment?e+=" console.log("+I+");":"function"==typeof c.opts.$comment&&(e+=" self._opts.$comment("+I+", "+c.util.toQuotedString(g)+", validate.root.schema);"),e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r=c.opts.$data&&I&&I.$data;r&&(e+=" var schema"+l+" = "+c.util.getData(I.$data,g,c.dataPathArr)+"; "),r||(e+=" var schema"+l+" = validate.schema"+a+";"),e+="var "+F+" = equal("+C+", schema"+l+"); if (!"+F+") {   ";var X=X||[];X.push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'const' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { allowedValue: schema"+l+" } ",!1!==c.opts.messages&&(e+=" , message: 'should be equal to constant' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var o=e;return e=X.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+o+"]); ":e+=" validate.errors = ["+o+"]; return false; ":e+=" var err = "+o+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" }",i&&(e+=" else { "),e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r="errs__"+l,X=c.util.copy(c);X.level++;var o="valid"+X.level,s="i"+l,Z=X.dataLevel=c.dataLevel+1,B="data"+Z,V=c.baseId,A=c.opts.strictKeywords?"object"==typeof I&&Object.keys(I).length>0:c.util.schemaHasRules(I,c.RULES.all);if(e+="var "+r+" = errors;var "+F+";",A){var G=c.compositeRule;c.compositeRule=X.compositeRule=!0,X.schema=I,X.schemaPath=a,X.errSchemaPath=d,e+=" var "+o+" = false; for (var "+s+" = 0; "+s+" < "+C+".length; "+s+"++) { ",X.errorPath=c.util.getPathExpr(c.errorPath,s,c.opts.jsonPointers,!0);var b=C+"["+s+"]";X.dataPathArr[Z]=s;var h=c.validate(X);X.baseId=V,c.util.varOccurences(h,B)<2?e+=" "+c.util.varReplace(h,B,b)+" ":e+=" var "+B+" = "+b+"; "+h+" ",e+=" if ("+o+") break; }  ",c.compositeRule=X.compositeRule=G,e+="  if (!"+o+") {"}else e+=" if ("+C+".length == 0) {";var U=U||[];U.push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'contains' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: {} ",!1!==c.opts.messages&&(e+=" , message: 'should contain a valid item' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var Q=e;return e=U.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+Q+"]); ":e+=" validate.errors = ["+Q+"]; return false; ":e+=" var err = "+Q+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } else { ",A&&(e+="  errors = "+r+"; if (vErrors !== null) { if ("+r+") vErrors.length = "+r+"; else vErrors = null; } "),c.opts.allErrors&&(e+=" } "),e=c.util.cleanUpCode(e)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="errs__"+l,r=c.util.copy(c),X="";r.level++;var o="valid"+r.level,s={},Z={},B=c.opts.ownProperties;for(b in I){var V=I[b],A=Array.isArray(V)?Z:s;A[b]=V}e+="var "+F+" = errors;";var G=c.errorPath;for(var b in e+="var missing"+l+";",Z)if((A=Z[b]).length){if(e+=" if ( "+C+c.util.getProperty(b)+" !== undefined ",B&&(e+=" && Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(b)+"') "),i){e+=" && ( ";var h=A;if(h)for(var U=-1,Q=h.length-1;U<Q;){p=h[U+=1],U&&(e+=" || "),e+=" ( ( "+(y=C+(Y=c.util.getProperty(p)))+" === undefined ",B&&(e+=" || ! Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(p)+"') "),e+=") && (missing"+l+" = "+c.util.toQuotedString(c.opts.jsonPointers?p:Y)+") ) "}e+=")) {  ";var u="missing"+l,W="' + "+u+" + '";c.opts._errorDataPathProperty&&(c.errorPath=c.opts.jsonPointers?c.util.getPathExpr(G,u,!0):G+" + "+u);var m=m||[];m.push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { property: '"+c.util.escapeQuotes(b)+"', missingProperty: '"+W+"', depsCount: "+A.length+", deps: '"+c.util.escapeQuotes(1==A.length?A[0]:A.join(", "))+"' } ",!1!==c.opts.messages&&(e+=" , message: 'should have ",1==A.length?e+="property "+c.util.escapeQuotes(A[0]):e+="properties "+c.util.escapeQuotes(A.join(", ")),e+=" when property "+c.util.escapeQuotes(b)+" is present' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var R=e;e=m.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+R+"]); ":e+=" validate.errors = ["+R+"]; return false; ":e+=" var err = "+R+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; "}else{e+=" ) { ";var J=A;if(J)for(var p,x=-1,N=J.length-1;x<N;){p=J[x+=1];var Y=c.util.getProperty(p),y=(W=c.util.escapeQuotes(p),C+Y);c.opts._errorDataPathProperty&&(c.errorPath=c.util.getPath(G,p,c.opts.jsonPointers)),e+=" if ( "+y+" === undefined ",B&&(e+=" || ! Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(p)+"') "),e+=") {  var err =   ",!1!==c.createErrors?(e+=" { keyword: 'dependencies' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { property: '"+c.util.escapeQuotes(b)+"', missingProperty: '"+W+"', depsCount: "+A.length+", deps: '"+c.util.escapeQuotes(1==A.length?A[0]:A.join(", "))+"' } ",!1!==c.opts.messages&&(e+=" , message: 'should have ",1==A.length?e+="property "+c.util.escapeQuotes(A[0]):e+="properties "+c.util.escapeQuotes(A.join(", ")),e+=" when property "+c.util.escapeQuotes(b)+" is present' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}e+=" }   ",i&&(X+="}",e+=" else { ")}c.errorPath=G;var S=r.baseId;for(var b in s){V=s[b];(c.opts.strictKeywords?"object"==typeof V&&Object.keys(V).length>0:c.util.schemaHasRules(V,c.RULES.all))&&(e+=" "+o+" = true; if ( "+C+c.util.getProperty(b)+" !== undefined ",B&&(e+=" && Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(b)+"') "),e+=") { ",r.schema=V,r.schemaPath=a+c.util.getProperty(b),r.errSchemaPath=d+"/"+c.util.escapeFragment(b),e+="  "+c.validate(r)+" ",r.baseId=S,e+=" }  ",i&&(e+=" if ("+o+") { ",X+="}"))}return i&&(e+="   "+X+" if ("+F+" == errors) {"),e=c.util.cleanUpCode(e)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r=c.opts.$data&&I&&I.$data;r&&(e+=" var schema"+l+" = "+c.util.getData(I.$data,g,c.dataPathArr)+"; ");var X="i"+l,o="schema"+l;r||(e+=" var "+o+" = validate.schema"+a+";"),e+="var "+F+";",r&&(e+=" if (schema"+l+" === undefined) "+F+" = true; else if (!Array.isArray(schema"+l+")) "+F+" = false; else {"),e+=F+" = false;for (var "+X+"=0; "+X+"<"+o+".length; "+X+"++) if (equal("+C+", "+o+"["+X+"])) { "+F+" = true; break; }",r&&(e+="  }  "),e+=" if (!"+F+") {   ";var s=s||[];s.push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'enum' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { allowedValues: schema"+l+" } ",!1!==c.opts.messages&&(e+=" , message: 'should be equal to one of the allowed values' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var Z=e;return e=s.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+Z+"]); ":e+=" validate.errors = ["+Z+"]; return false; ":e+=" var err = "+Z+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" }",i&&(e+=" else { "),e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||"");if(!1===c.opts.format)return i&&(e+=" if (true) { "),e;var F,r=c.opts.$data&&I&&I.$data;r?(e+=" var schema"+l+" = "+c.util.getData(I.$data,g,c.dataPathArr)+"; ",F="schema"+l):F=I;var X=c.opts.unknownFormats,o=Array.isArray(X);if(r){e+=" var "+(s="format"+l)+" = formats["+F+"]; var "+(Z="isObject"+l)+" = typeof "+s+" == 'object' && !("+s+" instanceof RegExp) && "+s+".validate; var "+(B="formatType"+l)+" = "+Z+" && "+s+".type || 'string'; if ("+Z+") { ",c.async&&(e+=" var async"+l+" = "+s+".async; "),e+=" "+s+" = "+s+".validate; } if (  ",r&&(e+=" ("+F+" !== undefined && typeof "+F+" != 'string') || "),e+=" (","ignore"!=X&&(e+=" ("+F+" && !"+s+" ",o&&(e+=" && self._opts.unknownFormats.indexOf("+F+") == -1 "),e+=") || "),e+=" ("+s+" && "+B+" == '"+t+"' && !(typeof "+s+" == 'function' ? ",c.async?e+=" (async"+l+" ? await "+s+"("+C+") : "+s+"("+C+")) ":e+=" "+s+"("+C+") ",e+=" : "+s+".test("+C+"))))) {"}else{var s;if(!(s=c.formats[I])){if("ignore"==X)return c.logger.warn('unknown format "'+I+'" ignored in schema at path "'+c.errSchemaPath+'"'),i&&(e+=" if (true) { "),e;if(o&&X.indexOf(I)>=0)return i&&(e+=" if (true) { "),e;throw new Error('unknown format "'+I+'" is used in schema at path "'+c.errSchemaPath+'"')}var Z,B=(Z="object"==typeof s&&!(s instanceof RegExp)&&s.validate)&&s.type||"string";if(Z){var V=!0===s.async;s=s.validate}if(B!=t)return i&&(e+=" if (true) { "),e;if(V){if(!c.async)throw new Error("async format in sync schema");e+=" if (!(await "+(A="formats"+c.util.getProperty(I)+".validate")+"("+C+"))) { "}else{e+=" if (! ";var A="formats"+c.util.getProperty(I);Z&&(A+=".validate"),e+="function"==typeof s?" "+A+"("+C+") ":" "+A+".test("+C+") ",e+=") { "}}var G=G||[];G.push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'format' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { format:  ",e+=r?""+F:""+c.util.toQuotedString(I),e+="  } ",!1!==c.opts.messages&&(e+=" , message: 'should match format \"",e+=r?"' + "+F+" + '":""+c.util.escapeQuotes(I),e+="\"' "),c.opts.verbose&&(e+=" , schema:  ",e+=r?"validate.schema"+a:""+c.util.toQuotedString(I),e+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var b=e;return e=G.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+b+"]); ":e+=" validate.errors = ["+b+"]; return false; ":e+=" var err = "+b+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } ",i&&(e+=" else { "),e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r="errs__"+l,X=c.util.copy(c);X.level++;var o="valid"+X.level,s=c.schema.then,Z=c.schema.else,B=void 0!==s&&(c.opts.strictKeywords?"object"==typeof s&&Object.keys(s).length>0:c.util.schemaHasRules(s,c.RULES.all)),V=void 0!==Z&&(c.opts.strictKeywords?"object"==typeof Z&&Object.keys(Z).length>0:c.util.schemaHasRules(Z,c.RULES.all)),A=X.baseId;if(B||V){var G;X.createErrors=!1,X.schema=I,X.schemaPath=a,X.errSchemaPath=d,e+=" var "+r+" = errors; var "+F+" = true;  ";var b=c.compositeRule;c.compositeRule=X.compositeRule=!0,e+="  "+c.validate(X)+" ",X.baseId=A,X.createErrors=!0,e+="  errors = "+r+"; if (vErrors !== null) { if ("+r+") vErrors.length = "+r+"; else vErrors = null; }  ",c.compositeRule=X.compositeRule=b,B?(e+=" if ("+o+") {  ",X.schema=c.schema.then,X.schemaPath=c.schemaPath+".then",X.errSchemaPath=c.errSchemaPath+"/then",e+="  "+c.validate(X)+" ",X.baseId=A,e+=" "+F+" = "+o+"; ",B&&V?e+=" var "+(G="ifClause"+l)+" = 'then'; ":G="'then'",e+=" } ",V&&(e+=" else { ")):e+=" if (!"+o+") { ",V&&(X.schema=c.schema.else,X.schemaPath=c.schemaPath+".else",X.errSchemaPath=c.errSchemaPath+"/else",e+="  "+c.validate(X)+" ",X.baseId=A,e+=" "+F+" = "+o+"; ",B&&V?e+=" var "+(G="ifClause"+l)+" = 'else'; ":G="'else'",e+=" } "),e+=" if (!"+F+") {   var err =   ",!1!==c.createErrors?(e+=" { keyword: 'if' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { failingKeyword: "+G+" } ",!1!==c.opts.messages&&(e+=" , message: 'should match \"' + "+G+" + '\" schema' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!c.compositeRule&&i&&(c.async?e+=" throw new ValidationError(vErrors); ":e+=" validate.errors = vErrors; return false; "),e+=" }   ",i&&(e+=" else { "),e=c.util.cleanUpCode(e)}else i&&(e+=" if (true) { ");return e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r="errs__"+l,X=c.util.copy(c),o="";X.level++;var s="valid"+X.level,Z="i"+l,B=X.dataLevel=c.dataLevel+1,V="data"+B,A=c.baseId;if(e+="var "+r+" = errors;var "+F+";",Array.isArray(I)){var G=c.schema.additionalItems;if(!1===G){e+=" "+F+" = "+C+".length <= "+I.length+"; ";var b=d;d=c.errSchemaPath+"/additionalItems",e+="  if (!"+F+") {   ";var h=h||[];h.push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'additionalItems' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { limit: "+I.length+" } ",!1!==c.opts.messages&&(e+=" , message: 'should NOT have more than "+I.length+" items' "),c.opts.verbose&&(e+=" , schema: false , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var U=e;e=h.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+U+"]); ":e+=" validate.errors = ["+U+"]; return false; ":e+=" var err = "+U+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } ",d=b,i&&(o+="}",e+=" else { ")}var Q=I;if(Q)for(var u,W=-1,m=Q.length-1;W<m;)if(u=Q[W+=1],c.opts.strictKeywords?"object"==typeof u&&Object.keys(u).length>0:c.util.schemaHasRules(u,c.RULES.all)){e+=" "+s+" = true; if ("+C+".length > "+W+") { ";var R=C+"["+W+"]";X.schema=u,X.schemaPath=a+"["+W+"]",X.errSchemaPath=d+"/"+W,X.errorPath=c.util.getPathExpr(c.errorPath,W,c.opts.jsonPointers,!0),X.dataPathArr[B]=W;var J=c.validate(X);X.baseId=A,c.util.varOccurences(J,V)<2?e+=" "+c.util.varReplace(J,V,R)+" ":e+=" var "+V+" = "+R+"; "+J+" ",e+=" }  ",i&&(e+=" if ("+s+") { ",o+="}")}if("object"==typeof G&&(c.opts.strictKeywords?"object"==typeof G&&Object.keys(G).length>0:c.util.schemaHasRules(G,c.RULES.all))){X.schema=G,X.schemaPath=c.schemaPath+".additionalItems",X.errSchemaPath=c.errSchemaPath+"/additionalItems",e+=" "+s+" = true; if ("+C+".length > "+I.length+") {  for (var "+Z+" = "+I.length+"; "+Z+" < "+C+".length; "+Z+"++) { ",X.errorPath=c.util.getPathExpr(c.errorPath,Z,c.opts.jsonPointers,!0);R=C+"["+Z+"]";X.dataPathArr[B]=Z;J=c.validate(X);X.baseId=A,c.util.varOccurences(J,V)<2?e+=" "+c.util.varReplace(J,V,R)+" ":e+=" var "+V+" = "+R+"; "+J+" ",i&&(e+=" if (!"+s+") break; "),e+=" } }  ",i&&(e+=" if ("+s+") { ",o+="}")}}else if(c.opts.strictKeywords?"object"==typeof I&&Object.keys(I).length>0:c.util.schemaHasRules(I,c.RULES.all)){X.schema=I,X.schemaPath=a,X.errSchemaPath=d,e+="  for (var "+Z+" = 0; "+Z+" < "+C+".length; "+Z+"++) { ",X.errorPath=c.util.getPathExpr(c.errorPath,Z,c.opts.jsonPointers,!0);R=C+"["+Z+"]";X.dataPathArr[B]=Z;J=c.validate(X);X.baseId=A,c.util.varOccurences(J,V)<2?e+=" "+c.util.varReplace(J,V,R)+" ":e+=" var "+V+" = "+R+"; "+J+" ",i&&(e+=" if (!"+s+") break; "),e+=" }"}return i&&(e+=" "+o+" if ("+r+" == errors) {"),e=c.util.cleanUpCode(e)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l=" ",g=c.level,I=c.dataLevel,a=c.schema[n],d=c.schemaPath+c.util.getProperty(n),i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(I||""),r=c.opts.$data&&a&&a.$data;r?(l+=" var schema"+g+" = "+c.util.getData(a.$data,I,c.dataPathArr)+"; ",e="schema"+g):e=a,l+="var division"+g+";if (",r&&(l+=" "+e+" !== undefined && ( typeof "+e+" != 'number' || "),l+=" (division"+g+" = "+F+" / "+e+", ",c.opts.multipleOfPrecision?l+=" Math.abs(Math.round(division"+g+") - division"+g+") > 1e-"+c.opts.multipleOfPrecision+" ":l+=" division"+g+" !== parseInt(division"+g+") ",l+=" ) ",r&&(l+="  )  "),l+=" ) {   ";var X=X||[];X.push(l),l="",!1!==c.createErrors?(l+=" { keyword: 'multipleOf' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { multipleOf: "+e+" } ",!1!==c.opts.messages&&(l+=" , message: 'should be multiple of ",l+=r?"' + "+e:e+"'"),c.opts.verbose&&(l+=" , schema:  ",l+=r?"validate.schema"+d:""+a,l+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";var o=l;return l=X.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+o+"]); ":l+=" validate.errors = ["+o+"]; return false; ":l+=" var err = "+o+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+="} ",C&&(l+=" else { "),l}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="errs__"+l,r=c.util.copy(c);r.level++;var X="valid"+r.level;if(c.opts.strictKeywords?"object"==typeof I&&Object.keys(I).length>0:c.util.schemaHasRules(I,c.RULES.all)){r.schema=I,r.schemaPath=a,r.errSchemaPath=d,e+=" var "+F+" = errors;  ";var o,s=c.compositeRule;c.compositeRule=r.compositeRule=!0,r.createErrors=!1,r.opts.allErrors&&(o=r.opts.allErrors,r.opts.allErrors=!1),e+=" "+c.validate(r)+" ",r.createErrors=!0,o&&(r.opts.allErrors=o),c.compositeRule=r.compositeRule=s,e+=" if ("+X+") {   ";var Z=Z||[];Z.push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'not' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: {} ",!1!==c.opts.messages&&(e+=" , message: 'should NOT be valid' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var B=e;e=Z.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+B+"]); ":e+=" validate.errors = ["+B+"]; return false; ":e+=" var err = "+B+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } else {  errors = "+F+"; if (vErrors !== null) { if ("+F+") vErrors.length = "+F+"; else vErrors = null; } ",c.opts.allErrors&&(e+=" } ")}else e+="  var err =   ",!1!==c.createErrors?(e+=" { keyword: 'not' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: {} ",!1!==c.opts.messages&&(e+=" , message: 'should NOT be valid' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",i&&(e+=" if (false) { ");return e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r="errs__"+l,X=c.util.copy(c),o="";X.level++;var s="valid"+X.level,Z=X.baseId,B="prevValid"+l,V="passingSchemas"+l;e+="var "+r+" = errors , "+B+" = false , "+F+" = false , "+V+" = null; ";var A=c.compositeRule;c.compositeRule=X.compositeRule=!0;var G=I;if(G)for(var b,h=-1,U=G.length-1;h<U;)b=G[h+=1],(c.opts.strictKeywords?"object"==typeof b&&Object.keys(b).length>0:c.util.schemaHasRules(b,c.RULES.all))?(X.schema=b,X.schemaPath=a+"["+h+"]",X.errSchemaPath=d+"/"+h,e+="  "+c.validate(X)+" ",X.baseId=Z):e+=" var "+s+" = true; ",h&&(e+=" if ("+s+" && "+B+") { "+F+" = false; "+V+" = ["+V+", "+h+"]; } else { ",o+="}"),e+=" if ("+s+") { "+F+" = "+B+" = true; "+V+" = "+h+"; }";return c.compositeRule=X.compositeRule=A,e+=o+"if (!"+F+") {   var err =   ",!1!==c.createErrors?(e+=" { keyword: 'oneOf' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { passingSchemas: "+V+" } ",!1!==c.opts.messages&&(e+=" , message: 'should match exactly one schema in oneOf' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!c.compositeRule&&i&&(c.async?e+=" throw new ValidationError(vErrors); ":e+=" validate.errors = vErrors; return false; "),e+="} else {  errors = "+r+"; if (vErrors !== null) { if ("+r+") vErrors.length = "+r+"; else vErrors = null; }",c.opts.allErrors&&(e+=" } "),e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l=" ",g=c.level,I=c.dataLevel,a=c.schema[n],d=c.schemaPath+c.util.getProperty(n),i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(I||""),r=c.opts.$data&&a&&a.$data;r?(l+=" var schema"+g+" = "+c.util.getData(a.$data,I,c.dataPathArr)+"; ",e="schema"+g):e=a,l+="if ( ",r&&(l+=" ("+e+" !== undefined && typeof "+e+" != 'string') || "),l+=" !"+(r?"(new RegExp("+e+"))":c.usePattern(a))+".test("+F+") ) {   ";var X=X||[];X.push(l),l="",!1!==c.createErrors?(l+=" { keyword: 'pattern' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { pattern:  ",l+=r?""+e:""+c.util.toQuotedString(a),l+="  } ",!1!==c.opts.messages&&(l+=" , message: 'should match pattern \"",l+=r?"' + "+e+" + '":""+c.util.escapeQuotes(a),l+="\"' "),c.opts.verbose&&(l+=" , schema:  ",l+=r?"validate.schema"+d:""+c.util.toQuotedString(a),l+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";var o=l;return l=X.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+o+"]); ":l+=" validate.errors = ["+o+"]; return false; ":l+=" var err = "+o+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+="} ",C&&(l+=" else { "),l}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="errs__"+l,r=c.util.copy(c),X="";r.level++;var o="valid"+r.level,s="key"+l,Z="idx"+l,B=r.dataLevel=c.dataLevel+1,V="data"+B,A="dataProperties"+l,G=Object.keys(I||{}),b=c.schema.patternProperties||{},h=Object.keys(b),U=c.schema.additionalProperties,Q=G.length||h.length,u=!1===U,W="object"==typeof U&&Object.keys(U).length,m=c.opts.removeAdditional,R=u||W||m,J=c.opts.ownProperties,p=c.baseId,x=c.schema.required;if(x&&(!c.opts.$data||!x.$data)&&x.length<c.opts.loopRequired)var N=c.util.toHash(x);if(e+="var "+F+" = errors;var "+o+" = true;",J&&(e+=" var "+A+" = undefined;"),R){if(e+=J?" "+A+" = "+A+" || Object.keys("+C+"); for (var "+Z+"=0; "+Z+"<"+A+".length; "+Z+"++) { var "+s+" = "+A+"["+Z+"]; ":" for (var "+s+" in "+C+") { ",Q){if(e+=" var isAdditional"+l+" = !(false ",G.length)if(G.length>8)e+=" || validate.schema"+a+".hasOwnProperty("+s+") ";else{var Y=G;if(Y)for(var y=-1,S=Y.length-1;y<S;)O=Y[y+=1],e+=" || "+s+" == "+c.util.toQuotedString(O)+" "}if(h.length){var k=h;if(k)for(var H=-1,E=k.length-1;H<E;)lc=k[H+=1],e+=" || "+c.usePattern(lc)+".test("+s+") "}e+=" ); if (isAdditional"+l+") { "}if("all"==m)e+=" delete "+C+"["+s+"]; ";else{var T=c.errorPath,v="' + "+s+" + '";if(c.opts._errorDataPathProperty&&(c.errorPath=c.util.getPathExpr(c.errorPath,s,c.opts.jsonPointers)),u)if(m)e+=" delete "+C+"["+s+"]; ";else{e+=" "+o+" = false; ";var z=d;d=c.errSchemaPath+"/additionalProperties",(nc=nc||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'additionalProperties' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { additionalProperty: '"+v+"' } ",!1!==c.opts.messages&&(e+=" , message: '",c.opts._errorDataPathProperty?e+="is an invalid additional property":e+="should NOT have additional properties",e+="' "),c.opts.verbose&&(e+=" , schema: false , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var D=e;e=nc.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+D+"]); ":e+=" validate.errors = ["+D+"]; return false; ":e+=" var err = "+D+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",d=z,i&&(e+=" break; ")}else if(W)if("failing"==m){e+=" var "+F+" = errors;  ";var f=c.compositeRule;c.compositeRule=r.compositeRule=!0,r.schema=U,r.schemaPath=c.schemaPath+".additionalProperties",r.errSchemaPath=c.errSchemaPath+"/additionalProperties",r.errorPath=c.opts._errorDataPathProperty?c.errorPath:c.util.getPathExpr(c.errorPath,s,c.opts.jsonPointers);var w=C+"["+s+"]";r.dataPathArr[B]=s;var j=c.validate(r);r.baseId=p,c.util.varOccurences(j,V)<2?e+=" "+c.util.varReplace(j,V,w)+" ":e+=" var "+V+" = "+w+"; "+j+" ",e+=" if (!"+o+") { errors = "+F+"; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete "+C+"["+s+"]; }  ",c.compositeRule=r.compositeRule=f}else{r.schema=U,r.schemaPath=c.schemaPath+".additionalProperties",r.errSchemaPath=c.errSchemaPath+"/additionalProperties",r.errorPath=c.opts._errorDataPathProperty?c.errorPath:c.util.getPathExpr(c.errorPath,s,c.opts.jsonPointers);w=C+"["+s+"]";r.dataPathArr[B]=s;j=c.validate(r);r.baseId=p,c.util.varOccurences(j,V)<2?e+=" "+c.util.varReplace(j,V,w)+" ":e+=" var "+V+" = "+w+"; "+j+" ",i&&(e+=" if (!"+o+") break; ")}c.errorPath=T}Q&&(e+=" } "),e+=" }  ",i&&(e+=" if ("+o+") { ",X+="}")}var K=c.opts.useDefaults&&!c.compositeRule;if(G.length){var M=G;if(M)for(var O,L=-1,P=M.length-1;L<P;){var _=I[O=M[L+=1]];if(c.opts.strictKeywords?"object"==typeof _&&Object.keys(_).length>0:c.util.schemaHasRules(_,c.RULES.all)){var q=c.util.getProperty(O),$=(w=C+q,K&&void 0!==_.default);r.schema=_,r.schemaPath=a+q,r.errSchemaPath=d+"/"+c.util.escapeFragment(O),r.errorPath=c.util.getPath(c.errorPath,O,c.opts.jsonPointers),r.dataPathArr[B]=c.util.toQuotedString(O);j=c.validate(r);if(r.baseId=p,c.util.varOccurences(j,V)<2){j=c.util.varReplace(j,V,w);var cc=w}else{cc=V;e+=" var "+V+" = "+w+"; "}if($)e+=" "+j+" ";else{if(N&&N[O]){e+=" if ( "+cc+" === undefined ",J&&(e+=" || ! Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(O)+"') "),e+=") { "+o+" = false; ";T=c.errorPath,z=d;var nc,tc=c.util.escapeQuotes(O);c.opts._errorDataPathProperty&&(c.errorPath=c.util.getPath(T,O,c.opts.jsonPointers)),d=c.errSchemaPath+"/required",(nc=nc||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'required' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { missingProperty: '"+tc+"' } ",!1!==c.opts.messages&&(e+=" , message: '",c.opts._errorDataPathProperty?e+="is a required property":e+="should have required property \\'"+tc+"\\'",e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";D=e;e=nc.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+D+"]); ":e+=" validate.errors = ["+D+"]; return false; ":e+=" var err = "+D+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",d=z,c.errorPath=T,e+=" } else { "}else i?(e+=" if ( "+cc+" === undefined ",J&&(e+=" || ! Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(O)+"') "),e+=") { "+o+" = true; } else { "):(e+=" if ("+cc+" !== undefined ",J&&(e+=" &&   Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(O)+"') "),e+=" ) { ");e+=" "+j+" } "}}i&&(e+=" if ("+o+") { ",X+="}")}}if(h.length){var ec=h;if(ec)for(var lc,gc=-1,Ic=ec.length-1;gc<Ic;){_=b[lc=ec[gc+=1]];if(c.opts.strictKeywords?"object"==typeof _&&Object.keys(_).length>0:c.util.schemaHasRules(_,c.RULES.all)){r.schema=_,r.schemaPath=c.schemaPath+".patternProperties"+c.util.getProperty(lc),r.errSchemaPath=c.errSchemaPath+"/patternProperties/"+c.util.escapeFragment(lc),e+=J?" "+A+" = "+A+" || Object.keys("+C+"); for (var "+Z+"=0; "+Z+"<"+A+".length; "+Z+"++) { var "+s+" = "+A+"["+Z+"]; ":" for (var "+s+" in "+C+") { ",e+=" if ("+c.usePattern(lc)+".test("+s+")) { ",r.errorPath=c.util.getPathExpr(c.errorPath,s,c.opts.jsonPointers);w=C+"["+s+"]";r.dataPathArr[B]=s;j=c.validate(r);r.baseId=p,c.util.varOccurences(j,V)<2?e+=" "+c.util.varReplace(j,V,w)+" ":e+=" var "+V+" = "+w+"; "+j+" ",i&&(e+=" if (!"+o+") break; "),e+=" } ",i&&(e+=" else "+o+" = true; "),e+=" }  ",i&&(e+=" if ("+o+") { ",X+="}")}}}return i&&(e+=" "+X+" if ("+F+" == errors) {"),e=c.util.cleanUpCode(e)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="errs__"+l,r=c.util.copy(c);r.level++;var X="valid"+r.level;if(e+="var "+F+" = errors;",c.opts.strictKeywords?"object"==typeof I&&Object.keys(I).length>0:c.util.schemaHasRules(I,c.RULES.all)){r.schema=I,r.schemaPath=a,r.errSchemaPath=d;var o="key"+l,s="idx"+l,Z="i"+l,B="' + "+o+" + '",V="data"+(r.dataLevel=c.dataLevel+1),A="dataProperties"+l,G=c.opts.ownProperties,b=c.baseId;G&&(e+=" var "+A+" = undefined; "),e+=G?" "+A+" = "+A+" || Object.keys("+C+"); for (var "+s+"=0; "+s+"<"+A+".length; "+s+"++) { var "+o+" = "+A+"["+s+"]; ":" for (var "+o+" in "+C+") { ",e+=" var startErrs"+l+" = errors; ";var h=o,U=c.compositeRule;c.compositeRule=r.compositeRule=!0;var Q=c.validate(r);r.baseId=b,c.util.varOccurences(Q,V)<2?e+=" "+c.util.varReplace(Q,V,h)+" ":e+=" var "+V+" = "+h+"; "+Q+" ",c.compositeRule=r.compositeRule=U,e+=" if (!"+X+") { for (var "+Z+"=startErrs"+l+"; "+Z+"<errors; "+Z+"++) { vErrors["+Z+"].propertyName = "+o+"; }   var err =   ",!1!==c.createErrors?(e+=" { keyword: 'propertyNames' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { propertyName: '"+B+"' } ",!1!==c.opts.messages&&(e+=" , message: 'property name \\'"+B+"\\' is invalid' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!c.compositeRule&&i&&(c.async?e+=" throw new ValidationError(vErrors); ":e+=" validate.errors = vErrors; return false; "),i&&(e+=" break; "),e+=" } }"}return i&&(e+="  if ("+F+" == errors) {"),e=c.util.cleanUpCode(e)}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e=" ",l=c.level,g=c.dataLevel,I=c.schema[n],a=c.schemaPath+c.util.getProperty(n),d=c.errSchemaPath+"/"+n,i=!c.opts.allErrors,C="data"+(g||""),F="valid"+l,r=c.opts.$data&&I&&I.$data;r&&(e+=" var schema"+l+" = "+c.util.getData(I.$data,g,c.dataPathArr)+"; ");var X="schema"+l;if(!r)if(I.length<c.opts.loopRequired&&c.schema.properties&&Object.keys(c.schema.properties).length){var o=[],s=I;if(s)for(var Z,B=-1,V=s.length-1;B<V;){Z=s[B+=1];var A=c.schema.properties[Z];A&&(c.opts.strictKeywords?"object"==typeof A&&Object.keys(A).length>0:c.util.schemaHasRules(A,c.RULES.all))||(o[o.length]=Z)}}else o=I;if(r||o.length){var G=c.errorPath,b=r||o.length>=c.opts.loopRequired,h=c.opts.ownProperties;if(i)if(e+=" var missing"+l+"; ",b){r||(e+=" var "+X+" = validate.schema"+a+"; ");var U="' + "+(J="schema"+l+"["+(W="i"+l)+"]")+" + '";c.opts._errorDataPathProperty&&(c.errorPath=c.util.getPathExpr(G,J,c.opts.jsonPointers)),e+=" var "+F+" = true; ",r&&(e+=" if (schema"+l+" === undefined) "+F+" = true; else if (!Array.isArray(schema"+l+")) "+F+" = false; else {"),e+=" for (var "+W+" = 0; "+W+" < "+X+".length; "+W+"++) { "+F+" = "+C+"["+X+"["+W+"]] !== undefined ",h&&(e+=" &&   Object.prototype.hasOwnProperty.call("+C+", "+X+"["+W+"]) "),e+="; if (!"+F+") break; } ",r&&(e+="  }  "),e+="  if (!"+F+") {   ",(R=R||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'required' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { missingProperty: '"+U+"' } ",!1!==c.opts.messages&&(e+=" , message: '",c.opts._errorDataPathProperty?e+="is a required property":e+="should have required property \\'"+U+"\\'",e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";var Q=e;e=R.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+Q+"]); ":e+=" validate.errors = ["+Q+"]; return false; ":e+=" var err = "+Q+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } else { "}else{e+=" if ( ";var u=o;if(u)for(var W=-1,m=u.length-1;W<m;){x=u[W+=1],W&&(e+=" || "),e+=" ( ( "+(S=C+(y=c.util.getProperty(x)))+" === undefined ",h&&(e+=" || ! Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(x)+"') "),e+=") && (missing"+l+" = "+c.util.toQuotedString(c.opts.jsonPointers?x:y)+") ) "}e+=") {  ";var R;U="' + "+(J="missing"+l)+" + '";c.opts._errorDataPathProperty&&(c.errorPath=c.opts.jsonPointers?c.util.getPathExpr(G,J,!0):G+" + "+J),(R=R||[]).push(e),e="",!1!==c.createErrors?(e+=" { keyword: 'required' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { missingProperty: '"+U+"' } ",!1!==c.opts.messages&&(e+=" , message: '",c.opts._errorDataPathProperty?e+="is a required property":e+="should have required property \\'"+U+"\\'",e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ";Q=e;e=R.pop(),!c.compositeRule&&i?c.async?e+=" throw new ValidationError(["+Q+"]); ":e+=" validate.errors = ["+Q+"]; return false; ":e+=" var err = "+Q+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",e+=" } else { "}else if(b){r||(e+=" var "+X+" = validate.schema"+a+"; ");var J;U="' + "+(J="schema"+l+"["+(W="i"+l)+"]")+" + '";c.opts._errorDataPathProperty&&(c.errorPath=c.util.getPathExpr(G,J,c.opts.jsonPointers)),r&&(e+=" if ("+X+" && !Array.isArray("+X+")) {  var err =   ",!1!==c.createErrors?(e+=" { keyword: 'required' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { missingProperty: '"+U+"' } ",!1!==c.opts.messages&&(e+=" , message: '",c.opts._errorDataPathProperty?e+="is a required property":e+="should have required property \\'"+U+"\\'",e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if ("+X+" !== undefined) { "),e+=" for (var "+W+" = 0; "+W+" < "+X+".length; "+W+"++) { if ("+C+"["+X+"["+W+"]] === undefined ",h&&(e+=" || ! Object.prototype.hasOwnProperty.call("+C+", "+X+"["+W+"]) "),e+=") {  var err =   ",!1!==c.createErrors?(e+=" { keyword: 'required' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { missingProperty: '"+U+"' } ",!1!==c.opts.messages&&(e+=" , message: '",c.opts._errorDataPathProperty?e+="is a required property":e+="should have required property \\'"+U+"\\'",e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ",r&&(e+="  }  ")}else{var p=o;if(p)for(var x,N=-1,Y=p.length-1;N<Y;){x=p[N+=1];var y=c.util.getProperty(x),S=(U=c.util.escapeQuotes(x),C+y);c.opts._errorDataPathProperty&&(c.errorPath=c.util.getPath(G,x,c.opts.jsonPointers)),e+=" if ( "+S+" === undefined ",h&&(e+=" || ! Object.prototype.hasOwnProperty.call("+C+", '"+c.util.escapeQuotes(x)+"') "),e+=") {  var err =   ",!1!==c.createErrors?(e+=" { keyword: 'required' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(d)+" , params: { missingProperty: '"+U+"' } ",!1!==c.opts.messages&&(e+=" , message: '",c.opts._errorDataPathProperty?e+="is a required property":e+="should have required property \\'"+U+"\\'",e+="' "),c.opts.verbose&&(e+=" , schema: validate.schema"+a+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+C+" "),e+=" } "):e+=" {} ",e+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } "}}c.errorPath=G}else i&&(e+=" if (true) {");return e}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l=" ",g=c.level,I=c.dataLevel,a=c.schema[n],d=c.schemaPath+c.util.getProperty(n),i=c.errSchemaPath+"/"+n,C=!c.opts.allErrors,F="data"+(I||""),r="valid"+g,X=c.opts.$data&&a&&a.$data;if(X?(l+=" var schema"+g+" = "+c.util.getData(a.$data,I,c.dataPathArr)+"; ",e="schema"+g):e=a,(a||X)&&!1!==c.opts.uniqueItems){X&&(l+=" var "+r+"; if ("+e+" === false || "+e+" === undefined) "+r+" = true; else if (typeof "+e+" != 'boolean') "+r+" = false; else { "),l+=" var i = "+F+".length , "+r+" = true , j; if (i > 1) { ";var o=c.schema.items&&c.schema.items.type,s=Array.isArray(o);if(!o||"object"==o||"array"==o||s&&(o.indexOf("object")>=0||o.indexOf("array")>=0))l+=" outer: for (;i--;) { for (j = i; j--;) { if (equal("+F+"[i], "+F+"[j])) { "+r+" = false; break outer; } } } ";else{l+=" var itemIndices = {}, item; for (;i--;) { var item = "+F+"[i]; ";var Z="checkDataType"+(s?"s":"");l+=" if ("+c.util[Z](o,"item",!0)+") continue; ",s&&(l+=" if (typeof item == 'string') item = '\"' + item; "),l+=" if (typeof itemIndices[item] == 'number') { "+r+" = false; j = itemIndices[item]; break; } itemIndices[item] = i; } "}l+=" } ",X&&(l+="  }  "),l+=" if (!"+r+") {   ";var B=B||[];B.push(l),l="",!1!==c.createErrors?(l+=" { keyword: 'uniqueItems' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(i)+" , params: { i: i, j: j } ",!1!==c.opts.messages&&(l+=" , message: 'should NOT have duplicate items (items ## ' + j + ' and ' + i + ' are identical)' "),c.opts.verbose&&(l+=" , schema:  ",l+=X?"validate.schema"+d:""+a,l+="         , parentSchema: validate.schema"+c.schemaPath+" , data: "+F+" "),l+=" } "):l+=" {} ";var V=l;l=B.pop(),!c.compositeRule&&C?c.async?l+=" throw new ValidationError(["+V+"]); ":l+=" validate.errors = ["+V+"]; return false; ":l+=" var err = "+V+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",l+=" } ",C&&(l+=" else { ")}else C&&(l+=" if (true) { ");return l}},function(c,n,t){"use strict";var e=["multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxLength","minLength","pattern","additionalItems","maxItems","minItems","uniqueItems","maxProperties","minProperties","required","additionalProperties","enum","format","const"];c.exports=function(c,n){for(var t=0;t<n.length;t++){c=JSON.parse(JSON.stringify(c));var l,g=n[t].split("/"),I=c;for(l=1;l<g.length;l++)I=I[g[l]];for(l=0;l<e.length;l++){var a=e[l],d=I[a];d&&(I[a]={anyOf:[d,{$ref:"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#"}]})}}return c}},function(c,n,t){"use strict";var e=t(26).MissingRef;c.exports=function c(n,t,l){var g=this;if("function"!=typeof this._opts.loadSchema)throw new Error("options.loadSchema should be a function");"function"==typeof t&&(l=t,t=void 0);var I=a(n).then((function(){var c=g._addSchema(n,void 0,t);return c.validate||function c(n){try{return g._compile(n)}catch(c){if(c instanceof e)return l(c);throw c}function l(e){var l=e.missingSchema;if(i(l))throw new Error("Schema "+l+" is loaded but "+e.missingRef+" cannot be resolved");var I=g._loadingSchemas[l];return I||(I=g._loadingSchemas[l]=g._opts.loadSchema(l)).then(d,d),I.then((function(c){if(!i(l))return a(c).then((function(){i(l)||g.addSchema(c,l,void 0,t)}))})).then((function(){return c(n)}));function d(){delete g._loadingSchemas[l]}function i(c){return g._refs[c]||g._schemas[c]}}}(c)}));l&&I.then((function(c){l(null,c)}),l);return I;function a(n){var t=n.$schema;return t&&!g.getSchema(t)?c.call(g,{$ref:t},!0):Promise.resolve()}}},function(c,n,t){"use strict";var e=/^[a-z_$][a-z0-9_$-]*$/i,l=t(130),g=t(131);c.exports={add:function(c,n){var t=this.RULES;if(t.keywords[c])throw new Error("Keyword "+c+" is already defined");if(!e.test(c))throw new Error("Keyword "+c+" is not a valid identifier");if(n){this.validateKeyword(n,!0);var g=n.type;if(Array.isArray(g))for(var I=0;I<g.length;I++)d(c,g[I],n);else d(c,g,n);var a=n.metaSchema;a&&(n.$data&&this._opts.$data&&(a={anyOf:[a,{$ref:"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#"}]}),n.validateSchema=this.compile(a,!0))}function d(c,n,e){for(var g,I=0;I<t.length;I++){var a=t[I];if(a.type==n){g=a;break}}g||(g={type:n,rules:[]},t.push(g));var d={keyword:c,definition:e,custom:!0,code:l,implements:e.implements};g.rules.push(d),t.custom[c]=d}return t.keywords[c]=t.all[c]=!0,this},get:function(c){var n=this.RULES.custom[c];return n?n.definition:this.RULES.keywords[c]||!1},remove:function(c){var n=this.RULES;delete n.keywords[c],delete n.all[c],delete n.custom[c];for(var t=0;t<n.length;t++)for(var e=n[t].rules,l=0;l<e.length;l++)if(e[l].keyword==c){e.splice(l,1);break}return this},validate:function c(n,t){c.errors=null;var e=this._validateKeyword=this._validateKeyword||this.compile(g,!0);if(e(n))return!0;if(c.errors=e.errors,t)throw new Error("custom keyword definition is invalid: "+this.errorsText(e.errors));return!1}}},function(c,n,t){"use strict";c.exports=function(c,n,t){var e,l,g=" ",I=c.level,a=c.dataLevel,d=c.schema[n],i=c.schemaPath+c.util.getProperty(n),C=c.errSchemaPath+"/"+n,F=!c.opts.allErrors,r="data"+(a||""),X="valid"+I,o="errs__"+I,s=c.opts.$data&&d&&d.$data;s?(g+=" var schema"+I+" = "+c.util.getData(d.$data,a,c.dataPathArr)+"; ",l="schema"+I):l=d;var Z,B,V,A,G,b="definition"+I,h=this.definition,U="";if(s&&h.$data){G="keywordValidate"+I;var Q=h.validateSchema;g+=" var "+b+" = RULES.custom['"+n+"'].definition; var "+G+" = "+b+".validate;"}else{if(!(A=c.useCustomRule(this,d,c.schema,c)))return;l="validate.schema"+i,G=A.code,Z=h.compile,B=h.inline,V=h.macro}var u=G+".errors",W="i"+I,m="ruleErr"+I,R=h.async;if(R&&!c.async)throw new Error("async keyword in sync schema");if(B||V||(g+=u+" = null;"),g+="var "+o+" = errors;var "+X+";",s&&h.$data&&(U+="}",g+=" if ("+l+" === undefined) { "+X+" = true; } else { ",Q&&(U+="}",g+=" "+X+" = "+b+".validateSchema("+l+"); if ("+X+") { ")),B)h.statements?g+=" "+A.validate+" ":g+=" "+X+" = "+A.validate+"; ";else if(V){var J=c.util.copy(c);U="";J.level++;var p="valid"+J.level;J.schema=A.validate,J.schemaPath="";var x=c.compositeRule;c.compositeRule=J.compositeRule=!0;var N=c.validate(J).replace(/validate\.schema/g,G);c.compositeRule=J.compositeRule=x,g+=" "+N}else{(k=k||[]).push(g),g="",g+="  "+G+".call( ",c.opts.passContext?g+="this":g+="self",Z||!1===h.schema?g+=" , "+r+" ":g+=" , "+l+" , "+r+" , validate.schema"+c.schemaPath+" ",g+=" , (dataPath || '')",'""'!=c.errorPath&&(g+=" + "+c.errorPath);var Y=a?"data"+(a-1||""):"parentData",y=a?c.dataPathArr[a]:"parentDataProperty",S=g+=" , "+Y+" , "+y+" , rootData )  ";g=k.pop(),!1===h.errors?(g+=" "+X+" = ",R&&(g+="await "),g+=S+"; "):g+=R?" var "+(u="customErrors"+I)+" = null; try { "+X+" = await "+S+"; } catch (e) { "+X+" = false; if (e instanceof ValidationError) "+u+" = e.errors; else throw e; } ":" "+u+" = null; "+X+" = "+S+"; "}if(h.modifying&&(g+=" if ("+Y+") "+r+" = "+Y+"["+y+"];"),g+=""+U,h.valid)F&&(g+=" if (true) { ");else{var k;g+=" if ( ",void 0===h.valid?(g+=" !",g+=V?""+p:""+X):g+=" "+!h.valid+" ",g+=") { ",e=this.keyword,(k=k||[]).push(g),g="",(k=k||[]).push(g),g="",!1!==c.createErrors?(g+=" { keyword: '"+(e||"custom")+"' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(C)+" , params: { keyword: '"+this.keyword+"' } ",!1!==c.opts.messages&&(g+=" , message: 'should pass \""+this.keyword+"\" keyword validation' "),c.opts.verbose&&(g+=" , schema: validate.schema"+i+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+r+" "),g+=" } "):g+=" {} ";var H=g;g=k.pop(),!c.compositeRule&&F?c.async?g+=" throw new ValidationError(["+H+"]); ":g+=" validate.errors = ["+H+"]; return false; ":g+=" var err = "+H+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ";var E=g;g=k.pop(),B?h.errors?"full"!=h.errors&&(g+="  for (var "+W+"="+o+"; "+W+"<errors; "+W+"++) { var "+m+" = vErrors["+W+"]; if ("+m+".dataPath === undefined) "+m+".dataPath = (dataPath || '') + "+c.errorPath+"; if ("+m+".schemaPath === undefined) { "+m+'.schemaPath = "'+C+'"; } ',c.opts.verbose&&(g+=" "+m+".schema = "+l+"; "+m+".data = "+r+"; "),g+=" } "):!1===h.errors?g+=" "+E+" ":(g+=" if ("+o+" == errors) { "+E+" } else {  for (var "+W+"="+o+"; "+W+"<errors; "+W+"++) { var "+m+" = vErrors["+W+"]; if ("+m+".dataPath === undefined) "+m+".dataPath = (dataPath || '') + "+c.errorPath+"; if ("+m+".schemaPath === undefined) { "+m+'.schemaPath = "'+C+'"; } ',c.opts.verbose&&(g+=" "+m+".schema = "+l+"; "+m+".data = "+r+"; "),g+=" } } "):V?(g+="   var err =   ",!1!==c.createErrors?(g+=" { keyword: '"+(e||"custom")+"' , dataPath: (dataPath || '') + "+c.errorPath+" , schemaPath: "+c.util.toQuotedString(C)+" , params: { keyword: '"+this.keyword+"' } ",!1!==c.opts.messages&&(g+=" , message: 'should pass \""+this.keyword+"\" keyword validation' "),c.opts.verbose&&(g+=" , schema: validate.schema"+i+" , parentSchema: validate.schema"+c.schemaPath+" , data: "+r+" "),g+=" } "):g+=" {} ",g+=";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",!c.compositeRule&&F&&(c.async?g+=" throw new ValidationError(vErrors); ":g+=" validate.errors = vErrors; return false; ")):!1===h.errors?g+=" "+E+" ":(g+=" if (Array.isArray("+u+")) { if (vErrors === null) vErrors = "+u+"; else vErrors = vErrors.concat("+u+"); errors = vErrors.length;  for (var "+W+"="+o+"; "+W+"<errors; "+W+"++) { var "+m+" = vErrors["+W+"]; if ("+m+".dataPath === undefined) "+m+".dataPath = (dataPath || '') + "+c.errorPath+";  "+m+'.schemaPath = "'+C+'";  ',c.opts.verbose&&(g+=" "+m+".schema = "+l+"; "+m+".data = "+r+"; "),g+=" } } else { "+E+" } "),g+=" } ",F&&(g+=" else { ")}return g}},function(c,n,t){"use strict";var e=t(46);c.exports={$id:"https://github.com/epoberezkin/ajv/blob/master/lib/definition_schema.js",definitions:{simpleTypes:e.definitions.simpleTypes},type:"object",dependencies:{schema:["validate"],$data:["validate"],statements:["inline"],valid:{not:{required:["macro"]}}},properties:{type:e.properties.type,schema:{type:"boolean"},statements:{type:"boolean"},dependencies:{type:"array",items:{type:"string"}},metaSchema:{type:"object"},modifying:{type:"boolean"},valid:{type:"boolean"},$data:{type:"boolean"},async:{type:"boolean"},errors:{anyOf:[{type:"boolean"},{const:"full"}]}}}},function(c){c.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#","description":"Meta-schema for $data reference (JSON Schema extension proposal)","type":"object","required":["$data"],"properties":{"$data":{"type":"string","anyOf":[{"format":"relative-json-pointer"},{"format":"json-pointer"}]}},"additionalProperties":false}')},function(module,exports){module.exports=function(c){var n={};function t(e){if(n[e])return n[e].exports;var l=n[e]={i:e,l:!1,exports:{}};return c[e].call(l.exports,l,l.exports,t),l.l=!0,l.exports}return t.m=c,t.c=n,t.d=function(c,n,e){t.o(c,n)||Object.defineProperty(c,n,{enumerable:!0,get:e})},t.r=function(c){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(c,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(c,"__esModule",{value:!0})},t.t=function(c,n){if(1&n&&(c=t(c)),8&n)return c;if(4&n&&"object"==typeof c&&c&&c.__esModule)return c;var e=Object.create(null);if(t.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:c}),2&n&&"string"!=typeof c)for(var l in c)t.d(e,l,function(n){return c[n]}.bind(null,l));return e},t.n=function(c){var n=c&&c.__esModule?function(){return c.default}:function(){return c};return t.d(n,"a",n),n},t.o=function(c,n){return Object.prototype.hasOwnProperty.call(c,n)},t.p="",t(t.s="./src/main.js")}({"./node_modules/ajv/lib/$data.js":
/*!***************************************!*\
  !*** ./node_modules/ajv/lib/$data.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar KEYWORDS = [\n  'multipleOf',\n  'maximum',\n  'exclusiveMaximum',\n  'minimum',\n  'exclusiveMinimum',\n  'maxLength',\n  'minLength',\n  'pattern',\n  'additionalItems',\n  'maxItems',\n  'minItems',\n  'uniqueItems',\n  'maxProperties',\n  'minProperties',\n  'required',\n  'additionalProperties',\n  'enum',\n  'format',\n  'const'\n];\n\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\n    var segments = keywordsJsonPointers[i].split('/');\n    var keywords = metaSchema;\n    var j;\n    for (j=1; j<segments.length; j++)\n      keywords = keywords[segments[j]];\n\n    for (j=0; j<KEYWORDS.length; j++) {\n      var key = KEYWORDS[j];\n      var schema = keywords[key];\n      if (schema) {\n        keywords[key] = {\n          anyOf: [\n            schema,\n            { $ref: 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#' }\n          ]\n        };\n      }\n    }\n  }\n\n  return metaSchema;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi8kZGF0YS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvJGRhdGEuanM/YWFhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBLRVlXT1JEUyA9IFtcbiAgJ211bHRpcGxlT2YnLFxuICAnbWF4aW11bScsXG4gICdleGNsdXNpdmVNYXhpbXVtJyxcbiAgJ21pbmltdW0nLFxuICAnZXhjbHVzaXZlTWluaW11bScsXG4gICdtYXhMZW5ndGgnLFxuICAnbWluTGVuZ3RoJyxcbiAgJ3BhdHRlcm4nLFxuICAnYWRkaXRpb25hbEl0ZW1zJyxcbiAgJ21heEl0ZW1zJyxcbiAgJ21pbkl0ZW1zJyxcbiAgJ3VuaXF1ZUl0ZW1zJyxcbiAgJ21heFByb3BlcnRpZXMnLFxuICAnbWluUHJvcGVydGllcycsXG4gICdyZXF1aXJlZCcsXG4gICdhZGRpdGlvbmFsUHJvcGVydGllcycsXG4gICdlbnVtJyxcbiAgJ2Zvcm1hdCcsXG4gICdjb25zdCdcbl07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1ldGFTY2hlbWEsIGtleXdvcmRzSnNvblBvaW50ZXJzKSB7XG4gIGZvciAodmFyIGk9MDsgaTxrZXl3b3Jkc0pzb25Qb2ludGVycy5sZW5ndGg7IGkrKykge1xuICAgIG1ldGFTY2hlbWEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG1ldGFTY2hlbWEpKTtcbiAgICB2YXIgc2VnbWVudHMgPSBrZXl3b3Jkc0pzb25Qb2ludGVyc1tpXS5zcGxpdCgnLycpO1xuICAgIHZhciBrZXl3b3JkcyA9IG1ldGFTY2hlbWE7XG4gICAgdmFyIGo7XG4gICAgZm9yIChqPTE7IGo8c2VnbWVudHMubGVuZ3RoOyBqKyspXG4gICAgICBrZXl3b3JkcyA9IGtleXdvcmRzW3NlZ21lbnRzW2pdXTtcblxuICAgIGZvciAoaj0wOyBqPEtFWVdPUkRTLmxlbmd0aDsgaisrKSB7XG4gICAgICB2YXIga2V5ID0gS0VZV09SRFNbal07XG4gICAgICB2YXIgc2NoZW1hID0ga2V5d29yZHNba2V5XTtcbiAgICAgIGlmIChzY2hlbWEpIHtcbiAgICAgICAga2V5d29yZHNba2V5XSA9IHtcbiAgICAgICAgICBhbnlPZjogW1xuICAgICAgICAgICAgc2NoZW1hLFxuICAgICAgICAgICAgeyAkcmVmOiAnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Vwb2JlcmV6a2luL2Fqdi9tYXN0ZXIvbGliL3JlZnMvJGRhdGEuanNvbiMnIH1cbiAgICAgICAgICBdXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1ldGFTY2hlbWE7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/$data.js\n")},"./node_modules/ajv/lib/ajv.js":
/*!*************************************!*\
  !*** ./node_modules/ajv/lib/ajv.js ***!
  \*************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar compileSchema = __webpack_require__(/*! ./compile */ \"./node_modules/ajv/lib/compile/index.js\")\n  , resolve = __webpack_require__(/*! ./compile/resolve */ \"./node_modules/ajv/lib/compile/resolve.js\")\n  , Cache = __webpack_require__(/*! ./cache */ \"./node_modules/ajv/lib/cache.js\")\n  , SchemaObject = __webpack_require__(/*! ./compile/schema_obj */ \"./node_modules/ajv/lib/compile/schema_obj.js\")\n  , stableStringify = __webpack_require__(/*! json-stable-stringify */ \"./node_modules/json-stable-stringify/index.js\")\n  , formats = __webpack_require__(/*! ./compile/formats */ \"./node_modules/ajv/lib/compile/formats.js\")\n  , rules = __webpack_require__(/*! ./compile/rules */ \"./node_modules/ajv/lib/compile/rules.js\")\n  , $dataMetaSchema = __webpack_require__(/*! ./$data */ \"./node_modules/ajv/lib/$data.js\")\n  , patternGroups = __webpack_require__(/*! ./patternGroups */ \"./node_modules/ajv/lib/patternGroups.js\")\n  , util = __webpack_require__(/*! ./compile/util */ \"./node_modules/ajv/lib/compile/util.js\")\n  , co = __webpack_require__(/*! co */ \"./node_modules/co/index.js\");\n\nmodule.exports = Ajv;\n\nAjv.prototype.validate = validate;\nAjv.prototype.compile = compile;\nAjv.prototype.addSchema = addSchema;\nAjv.prototype.addMetaSchema = addMetaSchema;\nAjv.prototype.validateSchema = validateSchema;\nAjv.prototype.getSchema = getSchema;\nAjv.prototype.removeSchema = removeSchema;\nAjv.prototype.addFormat = addFormat;\nAjv.prototype.errorsText = errorsText;\n\nAjv.prototype._addSchema = _addSchema;\nAjv.prototype._compile = _compile;\n\nAjv.prototype.compileAsync = __webpack_require__(/*! ./compile/async */ \"./node_modules/ajv/lib/compile/async.js\");\nvar customKeyword = __webpack_require__(/*! ./keyword */ \"./node_modules/ajv/lib/keyword.js\");\nAjv.prototype.addKeyword = customKeyword.add;\nAjv.prototype.getKeyword = customKeyword.get;\nAjv.prototype.removeKeyword = customKeyword.remove;\n\nvar errorClasses = __webpack_require__(/*! ./compile/error_classes */ \"./node_modules/ajv/lib/compile/error_classes.js\");\nAjv.ValidationError = errorClasses.Validation;\nAjv.MissingRefError = errorClasses.MissingRef;\nAjv.$dataMetaSchema = $dataMetaSchema;\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-06/schema';\n\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes' ];\nvar META_SUPPORT_DATA = ['/properties'];\n\n/**\n * Creates validator instance.\n * Usage: `Ajv(opts)`\n * @param {Object} opts optional options\n * @return {Object} ajv instance\n */\nfunction Ajv(opts) {\n  if (!(this instanceof Ajv)) return new Ajv(opts);\n  opts = this._opts = util.copy(opts) || {};\n  this._schemas = {};\n  this._refs = {};\n  this._fragments = {};\n  this._formats = formats(opts.format);\n  var schemaUriFormat = this._schemaUriFormat = this._formats['uri-reference'];\n  this._schemaUriFormatFunc = function (str) { return schemaUriFormat.test(str); };\n\n  this._cache = opts.cache || new Cache;\n  this._loadingSchemas = {};\n  this._compilations = [];\n  this.RULES = rules();\n  this._getId = chooseGetId(opts);\n\n  opts.loopRequired = opts.loopRequired || Infinity;\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\n  this._metaOpts = getMetaSchemaOptions(this);\n\n  if (opts.formats) addInitialFormats(this);\n  addDraft6MetaSchema(this);\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\n  addInitialSchemas(this);\n  if (opts.patternGroups) patternGroups(this);\n}\n\n\n\n/**\n * Validate data using schema\n * Schema will be compiled and cached (using serialized JSON as key. [json-stable-stringify](https://github.com/substack/json-stable-stringify) is used to serialize.\n * @this   Ajv\n * @param  {String|Object} schemaKeyRef key, ref or schema object\n * @param  {Any} data to be validated\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\n */\nfunction validate(schemaKeyRef, data) {\n  var v;\n  if (typeof schemaKeyRef == 'string') {\n    v = this.getSchema(schemaKeyRef);\n    if (!v) throw new Error('no schema with key or ref \"' + schemaKeyRef + '\"');\n  } else {\n    var schemaObj = this._addSchema(schemaKeyRef);\n    v = schemaObj.validate || this._compile(schemaObj);\n  }\n\n  var valid = v(data);\n  if (v.$async === true)\n    return this._opts.async == '*' ? co(valid) : valid;\n  this.errors = v.errors;\n  return valid;\n}\n\n\n/**\n * Create validating function for passed schema.\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\n * @return {Function} validating function\n */\nfunction compile(schema, _meta) {\n  var schemaObj = this._addSchema(schema, undefined, _meta);\n  return schemaObj.validate || this._compile(schemaObj);\n}\n\n\n/**\n * Adds schema to the instance.\n * @this   Ajv\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n */\nfunction addSchema(schema, key, _skipValidation, _meta) {\n  if (Array.isArray(schema)){\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\n    return;\n  }\n  var id = this._getId(schema);\n  if (id !== undefined && typeof id != 'string')\n    throw new Error('schema id must be string');\n  key = resolve.normalizeId(key || id);\n  checkUnique(this, key);\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\n}\n\n\n/**\n * Add schema that will be used to validate other schemas\n * options in META_IGNORE_OPTIONS are alway set to false\n * @this   Ajv\n * @param {Object} schema schema object\n * @param {String} key optional schema key\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\n */\nfunction addMetaSchema(schema, key, skipValidation) {\n  this.addSchema(schema, key, skipValidation, true);\n}\n\n\n/**\n * Validate schema\n * @this   Ajv\n * @param {Object} schema schema to validate\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\n * @return {Boolean} true if schema is valid\n */\nfunction validateSchema(schema, throwOrLogError) {\n  var $schema = schema.$schema;\n  if ($schema !== undefined && typeof $schema != 'string')\n    throw new Error('$schema must be a string');\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\n  if (!$schema) {\n    console.warn('meta-schema not available');\n    this.errors = null;\n    return true;\n  }\n  var currentUriFormat = this._formats.uri;\n  this._formats.uri = typeof currentUriFormat == 'function'\n                      ? this._schemaUriFormatFunc\n                      : this._schemaUriFormat;\n  var valid;\n  try { valid = this.validate($schema, schema); }\n  finally { this._formats.uri = currentUriFormat; }\n  if (!valid && throwOrLogError) {\n    var message = 'schema is invalid: ' + this.errorsText();\n    if (this._opts.validateSchema == 'log') console.error(message);\n    else throw new Error(message);\n  }\n  return valid;\n}\n\n\nfunction defaultMeta(self) {\n  var meta = self._opts.meta;\n  self._opts.defaultMeta = typeof meta == 'object'\n                            ? self._getId(meta) || meta\n                            : self.getSchema(META_SCHEMA_ID)\n                              ? META_SCHEMA_ID\n                              : undefined;\n  return self._opts.defaultMeta;\n}\n\n\n/**\n * Get compiled schema from the instance by `key` or `ref`.\n * @this   Ajv\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\n * @return {Function} schema validating function (with property `schema`).\n */\nfunction getSchema(keyRef) {\n  var schemaObj = _getSchemaObj(this, keyRef);\n  switch (typeof schemaObj) {\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\n    case 'string': return this.getSchema(schemaObj);\n    case 'undefined': return _getSchemaFragment(this, keyRef);\n  }\n}\n\n\nfunction _getSchemaFragment(self, ref) {\n  var res = resolve.schema.call(self, { schema: {} }, ref);\n  if (res) {\n    var schema = res.schema\n      , root = res.root\n      , baseId = res.baseId;\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\n    self._fragments[ref] = new SchemaObject({\n      ref: ref,\n      fragment: true,\n      schema: schema,\n      root: root,\n      baseId: baseId,\n      validate: v\n    });\n    return v;\n  }\n}\n\n\nfunction _getSchemaObj(self, keyRef) {\n  keyRef = resolve.normalizeId(keyRef);\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\n}\n\n\n/**\n * Remove cached schema(s).\n * If no parameter is passed all schemas but meta-schemas are removed.\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n * @this   Ajv\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\n */\nfunction removeSchema(schemaKeyRef) {\n  if (schemaKeyRef instanceof RegExp) {\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\n    return;\n  }\n  switch (typeof schemaKeyRef) {\n    case 'undefined':\n      _removeAllSchemas(this, this._schemas);\n      _removeAllSchemas(this, this._refs);\n      this._cache.clear();\n      return;\n    case 'string':\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\n      delete this._schemas[schemaKeyRef];\n      delete this._refs[schemaKeyRef];\n      return;\n    case 'object':\n      var serialize = this._opts.serialize;\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\n      this._cache.del(cacheKey);\n      var id = this._getId(schemaKeyRef);\n      if (id) {\n        id = resolve.normalizeId(id);\n        delete this._schemas[id];\n        delete this._refs[id];\n      }\n  }\n}\n\n\nfunction _removeAllSchemas(self, schemas, regex) {\n  for (var keyRef in schemas) {\n    var schemaObj = schemas[keyRef];\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\n      self._cache.del(schemaObj.cacheKey);\n      delete schemas[keyRef];\n    }\n  }\n}\n\n\n/* @this   Ajv */\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\n  if (typeof schema != 'object' && typeof schema != 'boolean')\n    throw new Error('schema should be object or boolean');\n  var serialize = this._opts.serialize;\n  var cacheKey = serialize ? serialize(schema) : schema;\n  var cached = this._cache.get(cacheKey);\n  if (cached) return cached;\n\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\n\n  var id = resolve.normalizeId(this._getId(schema));\n  if (id && shouldAddSchema) checkUnique(this, id);\n\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\n  var recursiveMeta;\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\n    this.validateSchema(schema, true);\n\n  var localRefs = resolve.ids.call(this, schema);\n\n  var schemaObj = new SchemaObject({\n    id: id,\n    schema: schema,\n    localRefs: localRefs,\n    cacheKey: cacheKey,\n    meta: meta\n  });\n\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\n  this._cache.put(cacheKey, schemaObj);\n\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\n\n  return schemaObj;\n}\n\n\n/* @this   Ajv */\nfunction _compile(schemaObj, root) {\n  if (schemaObj.compiling) {\n    schemaObj.validate = callValidate;\n    callValidate.schema = schemaObj.schema;\n    callValidate.errors = null;\n    callValidate.root = root ? root : callValidate;\n    if (schemaObj.schema.$async === true)\n      callValidate.$async = true;\n    return callValidate;\n  }\n  schemaObj.compiling = true;\n\n  var currentOpts;\n  if (schemaObj.meta) {\n    currentOpts = this._opts;\n    this._opts = this._metaOpts;\n  }\n\n  var v;\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\n  finally {\n    schemaObj.compiling = false;\n    if (schemaObj.meta) this._opts = currentOpts;\n  }\n\n  schemaObj.validate = v;\n  schemaObj.refs = v.refs;\n  schemaObj.refVal = v.refVal;\n  schemaObj.root = v.root;\n  return v;\n\n\n  function callValidate() {\n    var _validate = schemaObj.validate;\n    var result = _validate.apply(null, arguments);\n    callValidate.errors = _validate.errors;\n    return result;\n  }\n}\n\n\nfunction chooseGetId(opts) {\n  switch (opts.schemaId) {\n    case '$id': return _get$Id;\n    case 'id': return _getId;\n    default: return _get$IdOrId;\n  }\n}\n\n\nfunction _getId(schema) {\n  if (schema.$id) console.warn('schema $id ignored', schema.$id);\n  return schema.id;\n}\n\n\nfunction _get$Id(schema) {\n  if (schema.id) console.warn('schema id ignored', schema.id);\n  return schema.$id;\n}\n\n\nfunction _get$IdOrId(schema) {\n  if (schema.$id && schema.id && schema.$id != schema.id)\n    throw new Error('schema $id is different from id');\n  return schema.$id || schema.id;\n}\n\n\n/**\n * Convert array of error message objects to string\n * @this   Ajv\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\n * @return {String} human readable string with all errors descriptions\n */\nfunction errorsText(errors, options) {\n  errors = errors || this.errors;\n  if (!errors) return 'No errors';\n  options = options || {};\n  var separator = options.separator === undefined ? ', ' : options.separator;\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\n\n  var text = '';\n  for (var i=0; i<errors.length; i++) {\n    var e = errors[i];\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\n  }\n  return text.slice(0, -separator.length);\n}\n\n\n/**\n * Add custom format\n * @this   Ajv\n * @param {String} name format name\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\n */\nfunction addFormat(name, format) {\n  if (typeof format == 'string') format = new RegExp(format);\n  this._formats[name] = format;\n}\n\n\nfunction addDraft6MetaSchema(self) {\n  var $dataSchema;\n  if (self._opts.$data) {\n    $dataSchema = __webpack_require__(/*! ./refs/$data.json */ \"./node_modules/ajv/lib/refs/$data.json\");\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\n  }\n  if (self._opts.meta === false) return;\n  var metaSchema = __webpack_require__(/*! ./refs/json-schema-draft-06.json */ \"./node_modules/ajv/lib/refs/json-schema-draft-06.json\");\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\n}\n\n\nfunction addInitialSchemas(self) {\n  var optsSchemas = self._opts.schemas;\n  if (!optsSchemas) return;\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\n}\n\n\nfunction addInitialFormats(self) {\n  for (var name in self._opts.formats) {\n    var format = self._opts.formats[name];\n    self.addFormat(name, format);\n  }\n}\n\n\nfunction checkUnique(self, id) {\n  if (self._schemas[id] || self._refs[id])\n    throw new Error('schema with key or id \"' + id + '\" already exists');\n}\n\n\nfunction getMetaSchemaOptions(self) {\n  var metaOpts = util.copy(self._opts);\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\n  return metaOpts;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9hanYuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2Fqdi5qcz83ODNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNvbXBpbGVTY2hlbWEgPSByZXF1aXJlKCcuL2NvbXBpbGUnKVxuICAsIHJlc29sdmUgPSByZXF1aXJlKCcuL2NvbXBpbGUvcmVzb2x2ZScpXG4gICwgQ2FjaGUgPSByZXF1aXJlKCcuL2NhY2hlJylcbiAgLCBTY2hlbWFPYmplY3QgPSByZXF1aXJlKCcuL2NvbXBpbGUvc2NoZW1hX29iaicpXG4gICwgc3RhYmxlU3RyaW5naWZ5ID0gcmVxdWlyZSgnanNvbi1zdGFibGUtc3RyaW5naWZ5JylcbiAgLCBmb3JtYXRzID0gcmVxdWlyZSgnLi9jb21waWxlL2Zvcm1hdHMnKVxuICAsIHJ1bGVzID0gcmVxdWlyZSgnLi9jb21waWxlL3J1bGVzJylcbiAgLCAkZGF0YU1ldGFTY2hlbWEgPSByZXF1aXJlKCcuLyRkYXRhJylcbiAgLCBwYXR0ZXJuR3JvdXBzID0gcmVxdWlyZSgnLi9wYXR0ZXJuR3JvdXBzJylcbiAgLCB1dGlsID0gcmVxdWlyZSgnLi9jb21waWxlL3V0aWwnKVxuICAsIGNvID0gcmVxdWlyZSgnY28nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBBanY7XG5cbkFqdi5wcm90b3R5cGUudmFsaWRhdGUgPSB2YWxpZGF0ZTtcbkFqdi5wcm90b3R5cGUuY29tcGlsZSA9IGNvbXBpbGU7XG5BanYucHJvdG90eXBlLmFkZFNjaGVtYSA9IGFkZFNjaGVtYTtcbkFqdi5wcm90b3R5cGUuYWRkTWV0YVNjaGVtYSA9IGFkZE1ldGFTY2hlbWE7XG5BanYucHJvdG90eXBlLnZhbGlkYXRlU2NoZW1hID0gdmFsaWRhdGVTY2hlbWE7XG5BanYucHJvdG90eXBlLmdldFNjaGVtYSA9IGdldFNjaGVtYTtcbkFqdi5wcm90b3R5cGUucmVtb3ZlU2NoZW1hID0gcmVtb3ZlU2NoZW1hO1xuQWp2LnByb3RvdHlwZS5hZGRGb3JtYXQgPSBhZGRGb3JtYXQ7XG5BanYucHJvdG90eXBlLmVycm9yc1RleHQgPSBlcnJvcnNUZXh0O1xuXG5BanYucHJvdG90eXBlLl9hZGRTY2hlbWEgPSBfYWRkU2NoZW1hO1xuQWp2LnByb3RvdHlwZS5fY29tcGlsZSA9IF9jb21waWxlO1xuXG5BanYucHJvdG90eXBlLmNvbXBpbGVBc3luYyA9IHJlcXVpcmUoJy4vY29tcGlsZS9hc3luYycpO1xudmFyIGN1c3RvbUtleXdvcmQgPSByZXF1aXJlKCcuL2tleXdvcmQnKTtcbkFqdi5wcm90b3R5cGUuYWRkS2V5d29yZCA9IGN1c3RvbUtleXdvcmQuYWRkO1xuQWp2LnByb3RvdHlwZS5nZXRLZXl3b3JkID0gY3VzdG9tS2V5d29yZC5nZXQ7XG5BanYucHJvdG90eXBlLnJlbW92ZUtleXdvcmQgPSBjdXN0b21LZXl3b3JkLnJlbW92ZTtcblxudmFyIGVycm9yQ2xhc3NlcyA9IHJlcXVpcmUoJy4vY29tcGlsZS9lcnJvcl9jbGFzc2VzJyk7XG5BanYuVmFsaWRhdGlvbkVycm9yID0gZXJyb3JDbGFzc2VzLlZhbGlkYXRpb247XG5BanYuTWlzc2luZ1JlZkVycm9yID0gZXJyb3JDbGFzc2VzLk1pc3NpbmdSZWY7XG5BanYuJGRhdGFNZXRhU2NoZW1hID0gJGRhdGFNZXRhU2NoZW1hO1xuXG52YXIgTUVUQV9TQ0hFTUFfSUQgPSAnaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNi9zY2hlbWEnO1xuXG52YXIgTUVUQV9JR05PUkVfT1BUSU9OUyA9IFsgJ3JlbW92ZUFkZGl0aW9uYWwnLCAndXNlRGVmYXVsdHMnLCAnY29lcmNlVHlwZXMnIF07XG52YXIgTUVUQV9TVVBQT1JUX0RBVEEgPSBbJy9wcm9wZXJ0aWVzJ107XG5cbi8qKlxuICogQ3JlYXRlcyB2YWxpZGF0b3IgaW5zdGFuY2UuXG4gKiBVc2FnZTogYEFqdihvcHRzKWBcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIG9wdGlvbmFsIG9wdGlvbnNcbiAqIEByZXR1cm4ge09iamVjdH0gYWp2IGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIEFqdihvcHRzKSB7XG4gIGlmICghKHRoaXMgaW5zdGFuY2VvZiBBanYpKSByZXR1cm4gbmV3IEFqdihvcHRzKTtcbiAgb3B0cyA9IHRoaXMuX29wdHMgPSB1dGlsLmNvcHkob3B0cykgfHwge307XG4gIHRoaXMuX3NjaGVtYXMgPSB7fTtcbiAgdGhpcy5fcmVmcyA9IHt9O1xuICB0aGlzLl9mcmFnbWVudHMgPSB7fTtcbiAgdGhpcy5fZm9ybWF0cyA9IGZvcm1hdHMob3B0cy5mb3JtYXQpO1xuICB2YXIgc2NoZW1hVXJpRm9ybWF0ID0gdGhpcy5fc2NoZW1hVXJpRm9ybWF0ID0gdGhpcy5fZm9ybWF0c1sndXJpLXJlZmVyZW5jZSddO1xuICB0aGlzLl9zY2hlbWFVcmlGb3JtYXRGdW5jID0gZnVuY3Rpb24gKHN0cikgeyByZXR1cm4gc2NoZW1hVXJpRm9ybWF0LnRlc3Qoc3RyKTsgfTtcblxuICB0aGlzLl9jYWNoZSA9IG9wdHMuY2FjaGUgfHwgbmV3IENhY2hlO1xuICB0aGlzLl9sb2FkaW5nU2NoZW1hcyA9IHt9O1xuICB0aGlzLl9jb21waWxhdGlvbnMgPSBbXTtcbiAgdGhpcy5SVUxFUyA9IHJ1bGVzKCk7XG4gIHRoaXMuX2dldElkID0gY2hvb3NlR2V0SWQob3B0cyk7XG5cbiAgb3B0cy5sb29wUmVxdWlyZWQgPSBvcHRzLmxvb3BSZXF1aXJlZCB8fCBJbmZpbml0eTtcbiAgaWYgKG9wdHMuZXJyb3JEYXRhUGF0aCA9PSAncHJvcGVydHknKSBvcHRzLl9lcnJvckRhdGFQYXRoUHJvcGVydHkgPSB0cnVlO1xuICBpZiAob3B0cy5zZXJpYWxpemUgPT09IHVuZGVmaW5lZCkgb3B0cy5zZXJpYWxpemUgPSBzdGFibGVTdHJpbmdpZnk7XG4gIHRoaXMuX21ldGFPcHRzID0gZ2V0TWV0YVNjaGVtYU9wdGlvbnModGhpcyk7XG5cbiAgaWYgKG9wdHMuZm9ybWF0cykgYWRkSW5pdGlhbEZvcm1hdHModGhpcyk7XG4gIGFkZERyYWZ0Nk1ldGFTY2hlbWEodGhpcyk7XG4gIGlmICh0eXBlb2Ygb3B0cy5tZXRhID09ICdvYmplY3QnKSB0aGlzLmFkZE1ldGFTY2hlbWEob3B0cy5tZXRhKTtcbiAgYWRkSW5pdGlhbFNjaGVtYXModGhpcyk7XG4gIGlmIChvcHRzLnBhdHRlcm5Hcm91cHMpIHBhdHRlcm5Hcm91cHModGhpcyk7XG59XG5cblxuXG4vKipcbiAqIFZhbGlkYXRlIGRhdGEgdXNpbmcgc2NoZW1hXG4gKiBTY2hlbWEgd2lsbCBiZSBjb21waWxlZCBhbmQgY2FjaGVkICh1c2luZyBzZXJpYWxpemVkIEpTT04gYXMga2V5LiBbanNvbi1zdGFibGUtc3RyaW5naWZ5XShodHRwczovL2dpdGh1Yi5jb20vc3Vic3RhY2svanNvbi1zdGFibGUtc3RyaW5naWZ5KSBpcyB1c2VkIHRvIHNlcmlhbGl6ZS5cbiAqIEB0aGlzICAgQWp2XG4gKiBAcGFyYW0gIHtTdHJpbmd8T2JqZWN0fSBzY2hlbWFLZXlSZWYga2V5LCByZWYgb3Igc2NoZW1hIG9iamVjdFxuICogQHBhcmFtICB7QW55fSBkYXRhIHRvIGJlIHZhbGlkYXRlZFxuICogQHJldHVybiB7Qm9vbGVhbn0gdmFsaWRhdGlvbiByZXN1bHQuIEVycm9ycyBmcm9tIHRoZSBsYXN0IHZhbGlkYXRpb24gd2lsbCBiZSBhdmFpbGFibGUgaW4gYGFqdi5lcnJvcnNgIChhbmQgYWxzbyBpbiBjb21waWxlZCBzY2hlbWE6IGBzY2hlbWEuZXJyb3JzYCkuXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlKHNjaGVtYUtleVJlZiwgZGF0YSkge1xuICB2YXIgdjtcbiAgaWYgKHR5cGVvZiBzY2hlbWFLZXlSZWYgPT0gJ3N0cmluZycpIHtcbiAgICB2ID0gdGhpcy5nZXRTY2hlbWEoc2NoZW1hS2V5UmVmKTtcbiAgICBpZiAoIXYpIHRocm93IG5ldyBFcnJvcignbm8gc2NoZW1hIHdpdGgga2V5IG9yIHJlZiBcIicgKyBzY2hlbWFLZXlSZWYgKyAnXCInKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgc2NoZW1hT2JqID0gdGhpcy5fYWRkU2NoZW1hKHNjaGVtYUtleVJlZik7XG4gICAgdiA9IHNjaGVtYU9iai52YWxpZGF0ZSB8fCB0aGlzLl9jb21waWxlKHNjaGVtYU9iaik7XG4gIH1cblxuICB2YXIgdmFsaWQgPSB2KGRhdGEpO1xuICBpZiAodi4kYXN5bmMgPT09IHRydWUpXG4gICAgcmV0dXJuIHRoaXMuX29wdHMuYXN5bmMgPT0gJyonID8gY28odmFsaWQpIDogdmFsaWQ7XG4gIHRoaXMuZXJyb3JzID0gdi5lcnJvcnM7XG4gIHJldHVybiB2YWxpZDtcbn1cblxuXG4vKipcbiAqIENyZWF0ZSB2YWxpZGF0aW5nIGZ1bmN0aW9uIGZvciBwYXNzZWQgc2NoZW1hLlxuICogQHRoaXMgICBBanZcbiAqIEBwYXJhbSAge09iamVjdH0gc2NoZW1hIHNjaGVtYSBvYmplY3RcbiAqIEBwYXJhbSAge0Jvb2xlYW59IF9tZXRhIHRydWUgaWYgc2NoZW1hIGlzIGEgbWV0YS1zY2hlbWEuIFVzZWQgaW50ZXJuYWxseSB0byBjb21waWxlIG1ldGEgc2NoZW1hcyBvZiBjdXN0b20ga2V5d29yZHMuXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gdmFsaWRhdGluZyBmdW5jdGlvblxuICovXG5mdW5jdGlvbiBjb21waWxlKHNjaGVtYSwgX21ldGEpIHtcbiAgdmFyIHNjaGVtYU9iaiA9IHRoaXMuX2FkZFNjaGVtYShzY2hlbWEsIHVuZGVmaW5lZCwgX21ldGEpO1xuICByZXR1cm4gc2NoZW1hT2JqLnZhbGlkYXRlIHx8IHRoaXMuX2NvbXBpbGUoc2NoZW1hT2JqKTtcbn1cblxuXG4vKipcbiAqIEFkZHMgc2NoZW1hIHRvIHRoZSBpbnN0YW5jZS5cbiAqIEB0aGlzICAgQWp2XG4gKiBAcGFyYW0ge09iamVjdHxBcnJheX0gc2NoZW1hIHNjaGVtYSBvciBhcnJheSBvZiBzY2hlbWFzLiBJZiBhcnJheSBpcyBwYXNzZWQsIGBrZXlgIGFuZCBvdGhlciBwYXJhbWV0ZXJzIHdpbGwgYmUgaWdub3JlZC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBrZXkgT3B0aW9uYWwgc2NoZW1hIGtleS4gQ2FuIGJlIHBhc3NlZCB0byBgdmFsaWRhdGVgIG1ldGhvZCBpbnN0ZWFkIG9mIHNjaGVtYSBvYmplY3Qgb3IgaWQvcmVmLiBPbmUgc2NoZW1hIHBlciBpbnN0YW5jZSBjYW4gaGF2ZSBlbXB0eSBgaWRgIGFuZCBga2V5YC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gX3NraXBWYWxpZGF0aW9uIHRydWUgdG8gc2tpcCBzY2hlbWEgdmFsaWRhdGlvbi4gVXNlZCBpbnRlcm5hbGx5LCBvcHRpb24gdmFsaWRhdGVTY2hlbWEgc2hvdWxkIGJlIHVzZWQgaW5zdGVhZC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gX21ldGEgdHJ1ZSBpZiBzY2hlbWEgaXMgYSBtZXRhLXNjaGVtYS4gVXNlZCBpbnRlcm5hbGx5LCBhZGRNZXRhU2NoZW1hIHNob3VsZCBiZSB1c2VkIGluc3RlYWQuXG4gKi9cbmZ1bmN0aW9uIGFkZFNjaGVtYShzY2hlbWEsIGtleSwgX3NraXBWYWxpZGF0aW9uLCBfbWV0YSkge1xuICBpZiAoQXJyYXkuaXNBcnJheShzY2hlbWEpKXtcbiAgICBmb3IgKHZhciBpPTA7IGk8c2NoZW1hLmxlbmd0aDsgaSsrKSB0aGlzLmFkZFNjaGVtYShzY2hlbWFbaV0sIHVuZGVmaW5lZCwgX3NraXBWYWxpZGF0aW9uLCBfbWV0YSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBpZCA9IHRoaXMuX2dldElkKHNjaGVtYSk7XG4gIGlmIChpZCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBpZCAhPSAnc3RyaW5nJylcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NjaGVtYSBpZCBtdXN0IGJlIHN0cmluZycpO1xuICBrZXkgPSByZXNvbHZlLm5vcm1hbGl6ZUlkKGtleSB8fCBpZCk7XG4gIGNoZWNrVW5pcXVlKHRoaXMsIGtleSk7XG4gIHRoaXMuX3NjaGVtYXNba2V5XSA9IHRoaXMuX2FkZFNjaGVtYShzY2hlbWEsIF9za2lwVmFsaWRhdGlvbiwgX21ldGEsIHRydWUpO1xufVxuXG5cbi8qKlxuICogQWRkIHNjaGVtYSB0aGF0IHdpbGwgYmUgdXNlZCB0byB2YWxpZGF0ZSBvdGhlciBzY2hlbWFzXG4gKiBvcHRpb25zIGluIE1FVEFfSUdOT1JFX09QVElPTlMgYXJlIGFsd2F5IHNldCB0byBmYWxzZVxuICogQHRoaXMgICBBanZcbiAqIEBwYXJhbSB7T2JqZWN0fSBzY2hlbWEgc2NoZW1hIG9iamVjdFxuICogQHBhcmFtIHtTdHJpbmd9IGtleSBvcHRpb25hbCBzY2hlbWEga2V5XG4gKiBAcGFyYW0ge0Jvb2xlYW59IHNraXBWYWxpZGF0aW9uIHRydWUgdG8gc2tpcCBzY2hlbWEgdmFsaWRhdGlvbiwgY2FuIGJlIHVzZWQgdG8gb3ZlcnJpZGUgdmFsaWRhdGVTY2hlbWEgb3B0aW9uIGZvciBtZXRhLXNjaGVtYVxuICovXG5mdW5jdGlvbiBhZGRNZXRhU2NoZW1hKHNjaGVtYSwga2V5LCBza2lwVmFsaWRhdGlvbikge1xuICB0aGlzLmFkZFNjaGVtYShzY2hlbWEsIGtleSwgc2tpcFZhbGlkYXRpb24sIHRydWUpO1xufVxuXG5cbi8qKlxuICogVmFsaWRhdGUgc2NoZW1hXG4gKiBAdGhpcyAgIEFqdlxuICogQHBhcmFtIHtPYmplY3R9IHNjaGVtYSBzY2hlbWEgdG8gdmFsaWRhdGVcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gdGhyb3dPckxvZ0Vycm9yIHBhc3MgdHJ1ZSB0byB0aHJvdyAob3IgbG9nKSBhbiBlcnJvciBpZiBpbnZhbGlkXG4gKiBAcmV0dXJuIHtCb29sZWFufSB0cnVlIGlmIHNjaGVtYSBpcyB2YWxpZFxuICovXG5mdW5jdGlvbiB2YWxpZGF0ZVNjaGVtYShzY2hlbWEsIHRocm93T3JMb2dFcnJvcikge1xuICB2YXIgJHNjaGVtYSA9IHNjaGVtYS4kc2NoZW1hO1xuICBpZiAoJHNjaGVtYSAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAkc2NoZW1hICE9ICdzdHJpbmcnKVxuICAgIHRocm93IG5ldyBFcnJvcignJHNjaGVtYSBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gICRzY2hlbWEgPSAkc2NoZW1hIHx8IHRoaXMuX29wdHMuZGVmYXVsdE1ldGEgfHwgZGVmYXVsdE1ldGEodGhpcyk7XG4gIGlmICghJHNjaGVtYSkge1xuICAgIGNvbnNvbGUud2FybignbWV0YS1zY2hlbWEgbm90IGF2YWlsYWJsZScpO1xuICAgIHRoaXMuZXJyb3JzID0gbnVsbDtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICB2YXIgY3VycmVudFVyaUZvcm1hdCA9IHRoaXMuX2Zvcm1hdHMudXJpO1xuICB0aGlzLl9mb3JtYXRzLnVyaSA9IHR5cGVvZiBjdXJyZW50VXJpRm9ybWF0ID09ICdmdW5jdGlvbidcbiAgICAgICAgICAgICAgICAgICAgICA/IHRoaXMuX3NjaGVtYVVyaUZvcm1hdEZ1bmNcbiAgICAgICAgICAgICAgICAgICAgICA6IHRoaXMuX3NjaGVtYVVyaUZvcm1hdDtcbiAgdmFyIHZhbGlkO1xuICB0cnkgeyB2YWxpZCA9IHRoaXMudmFsaWRhdGUoJHNjaGVtYSwgc2NoZW1hKTsgfVxuICBmaW5hbGx5IHsgdGhpcy5fZm9ybWF0cy51cmkgPSBjdXJyZW50VXJpRm9ybWF0OyB9XG4gIGlmICghdmFsaWQgJiYgdGhyb3dPckxvZ0Vycm9yKSB7XG4gICAgdmFyIG1lc3NhZ2UgPSAnc2NoZW1hIGlzIGludmFsaWQ6ICcgKyB0aGlzLmVycm9yc1RleHQoKTtcbiAgICBpZiAodGhpcy5fb3B0cy52YWxpZGF0ZVNjaGVtYSA9PSAnbG9nJykgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICBlbHNlIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfVxuICByZXR1cm4gdmFsaWQ7XG59XG5cblxuZnVuY3Rpb24gZGVmYXVsdE1ldGEoc2VsZikge1xuICB2YXIgbWV0YSA9IHNlbGYuX29wdHMubWV0YTtcbiAgc2VsZi5fb3B0cy5kZWZhdWx0TWV0YSA9IHR5cGVvZiBtZXRhID09ICdvYmplY3QnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBzZWxmLl9nZXRJZChtZXRhKSB8fCBtZXRhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBzZWxmLmdldFNjaGVtYShNRVRBX1NDSEVNQV9JRClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gTUVUQV9TQ0hFTUFfSURcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICByZXR1cm4gc2VsZi5fb3B0cy5kZWZhdWx0TWV0YTtcbn1cblxuXG4vKipcbiAqIEdldCBjb21waWxlZCBzY2hlbWEgZnJvbSB0aGUgaW5zdGFuY2UgYnkgYGtleWAgb3IgYHJlZmAuXG4gKiBAdGhpcyAgIEFqdlxuICogQHBhcmFtICB7U3RyaW5nfSBrZXlSZWYgYGtleWAgdGhhdCB3YXMgcGFzc2VkIHRvIGBhZGRTY2hlbWFgIG9yIGZ1bGwgc2NoZW1hIHJlZmVyZW5jZSAoYHNjaGVtYS5pZGAgb3IgcmVzb2x2ZWQgaWQpLlxuICogQHJldHVybiB7RnVuY3Rpb259IHNjaGVtYSB2YWxpZGF0aW5nIGZ1bmN0aW9uICh3aXRoIHByb3BlcnR5IGBzY2hlbWFgKS5cbiAqL1xuZnVuY3Rpb24gZ2V0U2NoZW1hKGtleVJlZikge1xuICB2YXIgc2NoZW1hT2JqID0gX2dldFNjaGVtYU9iaih0aGlzLCBrZXlSZWYpO1xuICBzd2l0Y2ggKHR5cGVvZiBzY2hlbWFPYmopIHtcbiAgICBjYXNlICdvYmplY3QnOiByZXR1cm4gc2NoZW1hT2JqLnZhbGlkYXRlIHx8IHRoaXMuX2NvbXBpbGUoc2NoZW1hT2JqKTtcbiAgICBjYXNlICdzdHJpbmcnOiByZXR1cm4gdGhpcy5nZXRTY2hlbWEoc2NoZW1hT2JqKTtcbiAgICBjYXNlICd1bmRlZmluZWQnOiByZXR1cm4gX2dldFNjaGVtYUZyYWdtZW50KHRoaXMsIGtleVJlZik7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBfZ2V0U2NoZW1hRnJhZ21lbnQoc2VsZiwgcmVmKSB7XG4gIHZhciByZXMgPSByZXNvbHZlLnNjaGVtYS5jYWxsKHNlbGYsIHsgc2NoZW1hOiB7fSB9LCByZWYpO1xuICBpZiAocmVzKSB7XG4gICAgdmFyIHNjaGVtYSA9IHJlcy5zY2hlbWFcbiAgICAgICwgcm9vdCA9IHJlcy5yb290XG4gICAgICAsIGJhc2VJZCA9IHJlcy5iYXNlSWQ7XG4gICAgdmFyIHYgPSBjb21waWxlU2NoZW1hLmNhbGwoc2VsZiwgc2NoZW1hLCByb290LCB1bmRlZmluZWQsIGJhc2VJZCk7XG4gICAgc2VsZi5fZnJhZ21lbnRzW3JlZl0gPSBuZXcgU2NoZW1hT2JqZWN0KHtcbiAgICAgIHJlZjogcmVmLFxuICAgICAgZnJhZ21lbnQ6IHRydWUsXG4gICAgICBzY2hlbWE6IHNjaGVtYSxcbiAgICAgIHJvb3Q6IHJvb3QsXG4gICAgICBiYXNlSWQ6IGJhc2VJZCxcbiAgICAgIHZhbGlkYXRlOiB2XG4gICAgfSk7XG4gICAgcmV0dXJuIHY7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBfZ2V0U2NoZW1hT2JqKHNlbGYsIGtleVJlZikge1xuICBrZXlSZWYgPSByZXNvbHZlLm5vcm1hbGl6ZUlkKGtleVJlZik7XG4gIHJldHVybiBzZWxmLl9zY2hlbWFzW2tleVJlZl0gfHwgc2VsZi5fcmVmc1trZXlSZWZdIHx8IHNlbGYuX2ZyYWdtZW50c1trZXlSZWZdO1xufVxuXG5cbi8qKlxuICogUmVtb3ZlIGNhY2hlZCBzY2hlbWEocykuXG4gKiBJZiBubyBwYXJhbWV0ZXIgaXMgcGFzc2VkIGFsbCBzY2hlbWFzIGJ1dCBtZXRhLXNjaGVtYXMgYXJlIHJlbW92ZWQuXG4gKiBJZiBSZWdFeHAgaXMgcGFzc2VkIGFsbCBzY2hlbWFzIHdpdGgga2V5L2lkIG1hdGNoaW5nIHBhdHRlcm4gYnV0IG1ldGEtc2NoZW1hcyBhcmUgcmVtb3ZlZC5cbiAqIEV2ZW4gaWYgc2NoZW1hIGlzIHJlZmVyZW5jZWQgYnkgb3RoZXIgc2NoZW1hcyBpdCBzdGlsbCBjYW4gYmUgcmVtb3ZlZCBhcyBvdGhlciBzY2hlbWFzIGhhdmUgbG9jYWwgcmVmZXJlbmNlcy5cbiAqIEB0aGlzICAgQWp2XG4gKiBAcGFyYW0gIHtTdHJpbmd8T2JqZWN0fFJlZ0V4cH0gc2NoZW1hS2V5UmVmIGtleSwgcmVmLCBwYXR0ZXJuIHRvIG1hdGNoIGtleS9yZWYgb3Igc2NoZW1hIG9iamVjdFxuICovXG5mdW5jdGlvbiByZW1vdmVTY2hlbWEoc2NoZW1hS2V5UmVmKSB7XG4gIGlmIChzY2hlbWFLZXlSZWYgaW5zdGFuY2VvZiBSZWdFeHApIHtcbiAgICBfcmVtb3ZlQWxsU2NoZW1hcyh0aGlzLCB0aGlzLl9zY2hlbWFzLCBzY2hlbWFLZXlSZWYpO1xuICAgIF9yZW1vdmVBbGxTY2hlbWFzKHRoaXMsIHRoaXMuX3JlZnMsIHNjaGVtYUtleVJlZik7XG4gICAgcmV0dXJuO1xuICB9XG4gIHN3aXRjaCAodHlwZW9mIHNjaGVtYUtleVJlZikge1xuICAgIGNhc2UgJ3VuZGVmaW5lZCc6XG4gICAgICBfcmVtb3ZlQWxsU2NoZW1hcyh0aGlzLCB0aGlzLl9zY2hlbWFzKTtcbiAgICAgIF9yZW1vdmVBbGxTY2hlbWFzKHRoaXMsIHRoaXMuX3JlZnMpO1xuICAgICAgdGhpcy5fY2FjaGUuY2xlYXIoKTtcbiAgICAgIHJldHVybjtcbiAgICBjYXNlICdzdHJpbmcnOlxuICAgICAgdmFyIHNjaGVtYU9iaiA9IF9nZXRTY2hlbWFPYmoodGhpcywgc2NoZW1hS2V5UmVmKTtcbiAgICAgIGlmIChzY2hlbWFPYmopIHRoaXMuX2NhY2hlLmRlbChzY2hlbWFPYmouY2FjaGVLZXkpO1xuICAgICAgZGVsZXRlIHRoaXMuX3NjaGVtYXNbc2NoZW1hS2V5UmVmXTtcbiAgICAgIGRlbGV0ZSB0aGlzLl9yZWZzW3NjaGVtYUtleVJlZl07XG4gICAgICByZXR1cm47XG4gICAgY2FzZSAnb2JqZWN0JzpcbiAgICAgIHZhciBzZXJpYWxpemUgPSB0aGlzLl9vcHRzLnNlcmlhbGl6ZTtcbiAgICAgIHZhciBjYWNoZUtleSA9IHNlcmlhbGl6ZSA/IHNlcmlhbGl6ZShzY2hlbWFLZXlSZWYpIDogc2NoZW1hS2V5UmVmO1xuICAgICAgdGhpcy5fY2FjaGUuZGVsKGNhY2hlS2V5KTtcbiAgICAgIHZhciBpZCA9IHRoaXMuX2dldElkKHNjaGVtYUtleVJlZik7XG4gICAgICBpZiAoaWQpIHtcbiAgICAgICAgaWQgPSByZXNvbHZlLm5vcm1hbGl6ZUlkKGlkKTtcbiAgICAgICAgZGVsZXRlIHRoaXMuX3NjaGVtYXNbaWRdO1xuICAgICAgICBkZWxldGUgdGhpcy5fcmVmc1tpZF07XG4gICAgICB9XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBfcmVtb3ZlQWxsU2NoZW1hcyhzZWxmLCBzY2hlbWFzLCByZWdleCkge1xuICBmb3IgKHZhciBrZXlSZWYgaW4gc2NoZW1hcykge1xuICAgIHZhciBzY2hlbWFPYmogPSBzY2hlbWFzW2tleVJlZl07XG4gICAgaWYgKCFzY2hlbWFPYmoubWV0YSAmJiAoIXJlZ2V4IHx8IHJlZ2V4LnRlc3Qoa2V5UmVmKSkpIHtcbiAgICAgIHNlbGYuX2NhY2hlLmRlbChzY2hlbWFPYmouY2FjaGVLZXkpO1xuICAgICAgZGVsZXRlIHNjaGVtYXNba2V5UmVmXTtcbiAgICB9XG4gIH1cbn1cblxuXG4vKiBAdGhpcyAgIEFqdiAqL1xuZnVuY3Rpb24gX2FkZFNjaGVtYShzY2hlbWEsIHNraXBWYWxpZGF0aW9uLCBtZXRhLCBzaG91bGRBZGRTY2hlbWEpIHtcbiAgaWYgKHR5cGVvZiBzY2hlbWEgIT0gJ29iamVjdCcgJiYgdHlwZW9mIHNjaGVtYSAhPSAnYm9vbGVhbicpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdzY2hlbWEgc2hvdWxkIGJlIG9iamVjdCBvciBib29sZWFuJyk7XG4gIHZhciBzZXJpYWxpemUgPSB0aGlzLl9vcHRzLnNlcmlhbGl6ZTtcbiAgdmFyIGNhY2hlS2V5ID0gc2VyaWFsaXplID8gc2VyaWFsaXplKHNjaGVtYSkgOiBzY2hlbWE7XG4gIHZhciBjYWNoZWQgPSB0aGlzLl9jYWNoZS5nZXQoY2FjaGVLZXkpO1xuICBpZiAoY2FjaGVkKSByZXR1cm4gY2FjaGVkO1xuXG4gIHNob3VsZEFkZFNjaGVtYSA9IHNob3VsZEFkZFNjaGVtYSB8fCB0aGlzLl9vcHRzLmFkZFVzZWRTY2hlbWEgIT09IGZhbHNlO1xuXG4gIHZhciBpZCA9IHJlc29sdmUubm9ybWFsaXplSWQodGhpcy5fZ2V0SWQoc2NoZW1hKSk7XG4gIGlmIChpZCAmJiBzaG91bGRBZGRTY2hlbWEpIGNoZWNrVW5pcXVlKHRoaXMsIGlkKTtcblxuICB2YXIgd2lsbFZhbGlkYXRlID0gdGhpcy5fb3B0cy52YWxpZGF0ZVNjaGVtYSAhPT0gZmFsc2UgJiYgIXNraXBWYWxpZGF0aW9uO1xuICB2YXIgcmVjdXJzaXZlTWV0YTtcbiAgaWYgKHdpbGxWYWxpZGF0ZSAmJiAhKHJlY3Vyc2l2ZU1ldGEgPSBpZCAmJiBpZCA9PSByZXNvbHZlLm5vcm1hbGl6ZUlkKHNjaGVtYS4kc2NoZW1hKSkpXG4gICAgdGhpcy52YWxpZGF0ZVNjaGVtYShzY2hlbWEsIHRydWUpO1xuXG4gIHZhciBsb2NhbFJlZnMgPSByZXNvbHZlLmlkcy5jYWxsKHRoaXMsIHNjaGVtYSk7XG5cbiAgdmFyIHNjaGVtYU9iaiA9IG5ldyBTY2hlbWFPYmplY3Qoe1xuICAgIGlkOiBpZCxcbiAgICBzY2hlbWE6IHNjaGVtYSxcbiAgICBsb2NhbFJlZnM6IGxvY2FsUmVmcyxcbiAgICBjYWNoZUtleTogY2FjaGVLZXksXG4gICAgbWV0YTogbWV0YVxuICB9KTtcblxuICBpZiAoaWRbMF0gIT0gJyMnICYmIHNob3VsZEFkZFNjaGVtYSkgdGhpcy5fcmVmc1tpZF0gPSBzY2hlbWFPYmo7XG4gIHRoaXMuX2NhY2hlLnB1dChjYWNoZUtleSwgc2NoZW1hT2JqKTtcblxuICBpZiAod2lsbFZhbGlkYXRlICYmIHJlY3Vyc2l2ZU1ldGEpIHRoaXMudmFsaWRhdGVTY2hlbWEoc2NoZW1hLCB0cnVlKTtcblxuICByZXR1cm4gc2NoZW1hT2JqO1xufVxuXG5cbi8qIEB0aGlzICAgQWp2ICovXG5mdW5jdGlvbiBfY29tcGlsZShzY2hlbWFPYmosIHJvb3QpIHtcbiAgaWYgKHNjaGVtYU9iai5jb21waWxpbmcpIHtcbiAgICBzY2hlbWFPYmoudmFsaWRhdGUgPSBjYWxsVmFsaWRhdGU7XG4gICAgY2FsbFZhbGlkYXRlLnNjaGVtYSA9IHNjaGVtYU9iai5zY2hlbWE7XG4gICAgY2FsbFZhbGlkYXRlLmVycm9ycyA9IG51bGw7XG4gICAgY2FsbFZhbGlkYXRlLnJvb3QgPSByb290ID8gcm9vdCA6IGNhbGxWYWxpZGF0ZTtcbiAgICBpZiAoc2NoZW1hT2JqLnNjaGVtYS4kYXN5bmMgPT09IHRydWUpXG4gICAgICBjYWxsVmFsaWRhdGUuJGFzeW5jID0gdHJ1ZTtcbiAgICByZXR1cm4gY2FsbFZhbGlkYXRlO1xuICB9XG4gIHNjaGVtYU9iai5jb21waWxpbmcgPSB0cnVlO1xuXG4gIHZhciBjdXJyZW50T3B0cztcbiAgaWYgKHNjaGVtYU9iai5tZXRhKSB7XG4gICAgY3VycmVudE9wdHMgPSB0aGlzLl9vcHRzO1xuICAgIHRoaXMuX29wdHMgPSB0aGlzLl9tZXRhT3B0cztcbiAgfVxuXG4gIHZhciB2O1xuICB0cnkgeyB2ID0gY29tcGlsZVNjaGVtYS5jYWxsKHRoaXMsIHNjaGVtYU9iai5zY2hlbWEsIHJvb3QsIHNjaGVtYU9iai5sb2NhbFJlZnMpOyB9XG4gIGZpbmFsbHkge1xuICAgIHNjaGVtYU9iai5jb21waWxpbmcgPSBmYWxzZTtcbiAgICBpZiAoc2NoZW1hT2JqLm1ldGEpIHRoaXMuX29wdHMgPSBjdXJyZW50T3B0cztcbiAgfVxuXG4gIHNjaGVtYU9iai52YWxpZGF0ZSA9IHY7XG4gIHNjaGVtYU9iai5yZWZzID0gdi5yZWZzO1xuICBzY2hlbWFPYmoucmVmVmFsID0gdi5yZWZWYWw7XG4gIHNjaGVtYU9iai5yb290ID0gdi5yb290O1xuICByZXR1cm4gdjtcblxuXG4gIGZ1bmN0aW9uIGNhbGxWYWxpZGF0ZSgpIHtcbiAgICB2YXIgX3ZhbGlkYXRlID0gc2NoZW1hT2JqLnZhbGlkYXRlO1xuICAgIHZhciByZXN1bHQgPSBfdmFsaWRhdGUuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgICBjYWxsVmFsaWRhdGUuZXJyb3JzID0gX3ZhbGlkYXRlLmVycm9ycztcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59XG5cblxuZnVuY3Rpb24gY2hvb3NlR2V0SWQob3B0cykge1xuICBzd2l0Y2ggKG9wdHMuc2NoZW1hSWQpIHtcbiAgICBjYXNlICckaWQnOiByZXR1cm4gX2dldCRJZDtcbiAgICBjYXNlICdpZCc6IHJldHVybiBfZ2V0SWQ7XG4gICAgZGVmYXVsdDogcmV0dXJuIF9nZXQkSWRPcklkO1xuICB9XG59XG5cblxuZnVuY3Rpb24gX2dldElkKHNjaGVtYSkge1xuICBpZiAoc2NoZW1hLiRpZCkgY29uc29sZS53YXJuKCdzY2hlbWEgJGlkIGlnbm9yZWQnLCBzY2hlbWEuJGlkKTtcbiAgcmV0dXJuIHNjaGVtYS5pZDtcbn1cblxuXG5mdW5jdGlvbiBfZ2V0JElkKHNjaGVtYSkge1xuICBpZiAoc2NoZW1hLmlkKSBjb25zb2xlLndhcm4oJ3NjaGVtYSBpZCBpZ25vcmVkJywgc2NoZW1hLmlkKTtcbiAgcmV0dXJuIHNjaGVtYS4kaWQ7XG59XG5cblxuZnVuY3Rpb24gX2dldCRJZE9ySWQoc2NoZW1hKSB7XG4gIGlmIChzY2hlbWEuJGlkICYmIHNjaGVtYS5pZCAmJiBzY2hlbWEuJGlkICE9IHNjaGVtYS5pZClcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NjaGVtYSAkaWQgaXMgZGlmZmVyZW50IGZyb20gaWQnKTtcbiAgcmV0dXJuIHNjaGVtYS4kaWQgfHwgc2NoZW1hLmlkO1xufVxuXG5cbi8qKlxuICogQ29udmVydCBhcnJheSBvZiBlcnJvciBtZXNzYWdlIG9iamVjdHMgdG8gc3RyaW5nXG4gKiBAdGhpcyAgIEFqdlxuICogQHBhcmFtICB7QXJyYXk8T2JqZWN0Pn0gZXJyb3JzIG9wdGlvbmFsIGFycmF5IG9mIHZhbGlkYXRpb24gZXJyb3JzLCBpZiBub3QgcGFzc2VkIGVycm9ycyBmcm9tIHRoZSBpbnN0YW5jZSBhcmUgdXNlZC5cbiAqIEBwYXJhbSAge09iamVjdH0gb3B0aW9ucyBvcHRpb25hbCBvcHRpb25zIHdpdGggcHJvcGVydGllcyBgc2VwYXJhdG9yYCBhbmQgYGRhdGFWYXJgLlxuICogQHJldHVybiB7U3RyaW5nfSBodW1hbiByZWFkYWJsZSBzdHJpbmcgd2l0aCBhbGwgZXJyb3JzIGRlc2NyaXB0aW9uc1xuICovXG5mdW5jdGlvbiBlcnJvcnNUZXh0KGVycm9ycywgb3B0aW9ucykge1xuICBlcnJvcnMgPSBlcnJvcnMgfHwgdGhpcy5lcnJvcnM7XG4gIGlmICghZXJyb3JzKSByZXR1cm4gJ05vIGVycm9ycyc7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgc2VwYXJhdG9yID0gb3B0aW9ucy5zZXBhcmF0b3IgPT09IHVuZGVmaW5lZCA/ICcsICcgOiBvcHRpb25zLnNlcGFyYXRvcjtcbiAgdmFyIGRhdGFWYXIgPSBvcHRpb25zLmRhdGFWYXIgPT09IHVuZGVmaW5lZCA/ICdkYXRhJyA6IG9wdGlvbnMuZGF0YVZhcjtcblxuICB2YXIgdGV4dCA9ICcnO1xuICBmb3IgKHZhciBpPTA7IGk8ZXJyb3JzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGUgPSBlcnJvcnNbaV07XG4gICAgaWYgKGUpIHRleHQgKz0gZGF0YVZhciArIGUuZGF0YVBhdGggKyAnICcgKyBlLm1lc3NhZ2UgKyBzZXBhcmF0b3I7XG4gIH1cbiAgcmV0dXJuIHRleHQuc2xpY2UoMCwgLXNlcGFyYXRvci5sZW5ndGgpO1xufVxuXG5cbi8qKlxuICogQWRkIGN1c3RvbSBmb3JtYXRcbiAqIEB0aGlzICAgQWp2XG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBmb3JtYXQgbmFtZVxuICogQHBhcmFtIHtTdHJpbmd8UmVnRXhwfEZ1bmN0aW9ufSBmb3JtYXQgc3RyaW5nIGlzIGNvbnZlcnRlZCB0byBSZWdFeHA7IGZ1bmN0aW9uIHNob3VsZCByZXR1cm4gYm9vbGVhbiAodHJ1ZSB3aGVuIHZhbGlkKVxuICovXG5mdW5jdGlvbiBhZGRGb3JtYXQobmFtZSwgZm9ybWF0KSB7XG4gIGlmICh0eXBlb2YgZm9ybWF0ID09ICdzdHJpbmcnKSBmb3JtYXQgPSBuZXcgUmVnRXhwKGZvcm1hdCk7XG4gIHRoaXMuX2Zvcm1hdHNbbmFtZV0gPSBmb3JtYXQ7XG59XG5cblxuZnVuY3Rpb24gYWRkRHJhZnQ2TWV0YVNjaGVtYShzZWxmKSB7XG4gIHZhciAkZGF0YVNjaGVtYTtcbiAgaWYgKHNlbGYuX29wdHMuJGRhdGEpIHtcbiAgICAkZGF0YVNjaGVtYSA9IHJlcXVpcmUoJy4vcmVmcy8kZGF0YS5qc29uJyk7XG4gICAgc2VsZi5hZGRNZXRhU2NoZW1hKCRkYXRhU2NoZW1hLCAkZGF0YVNjaGVtYS4kaWQsIHRydWUpO1xuICB9XG4gIGlmIChzZWxmLl9vcHRzLm1ldGEgPT09IGZhbHNlKSByZXR1cm47XG4gIHZhciBtZXRhU2NoZW1hID0gcmVxdWlyZSgnLi9yZWZzL2pzb24tc2NoZW1hLWRyYWZ0LTA2Lmpzb24nKTtcbiAgaWYgKHNlbGYuX29wdHMuJGRhdGEpIG1ldGFTY2hlbWEgPSAkZGF0YU1ldGFTY2hlbWEobWV0YVNjaGVtYSwgTUVUQV9TVVBQT1JUX0RBVEEpO1xuICBzZWxmLmFkZE1ldGFTY2hlbWEobWV0YVNjaGVtYSwgTUVUQV9TQ0hFTUFfSUQsIHRydWUpO1xuICBzZWxmLl9yZWZzWydodHRwOi8vanNvbi1zY2hlbWEub3JnL3NjaGVtYSddID0gTUVUQV9TQ0hFTUFfSUQ7XG59XG5cblxuZnVuY3Rpb24gYWRkSW5pdGlhbFNjaGVtYXMoc2VsZikge1xuICB2YXIgb3B0c1NjaGVtYXMgPSBzZWxmLl9vcHRzLnNjaGVtYXM7XG4gIGlmICghb3B0c1NjaGVtYXMpIHJldHVybjtcbiAgaWYgKEFycmF5LmlzQXJyYXkob3B0c1NjaGVtYXMpKSBzZWxmLmFkZFNjaGVtYShvcHRzU2NoZW1hcyk7XG4gIGVsc2UgZm9yICh2YXIga2V5IGluIG9wdHNTY2hlbWFzKSBzZWxmLmFkZFNjaGVtYShvcHRzU2NoZW1hc1trZXldLCBrZXkpO1xufVxuXG5cbmZ1bmN0aW9uIGFkZEluaXRpYWxGb3JtYXRzKHNlbGYpIHtcbiAgZm9yICh2YXIgbmFtZSBpbiBzZWxmLl9vcHRzLmZvcm1hdHMpIHtcbiAgICB2YXIgZm9ybWF0ID0gc2VsZi5fb3B0cy5mb3JtYXRzW25hbWVdO1xuICAgIHNlbGYuYWRkRm9ybWF0KG5hbWUsIGZvcm1hdCk7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBjaGVja1VuaXF1ZShzZWxmLCBpZCkge1xuICBpZiAoc2VsZi5fc2NoZW1hc1tpZF0gfHwgc2VsZi5fcmVmc1tpZF0pXG4gICAgdGhyb3cgbmV3IEVycm9yKCdzY2hlbWEgd2l0aCBrZXkgb3IgaWQgXCInICsgaWQgKyAnXCIgYWxyZWFkeSBleGlzdHMnKTtcbn1cblxuXG5mdW5jdGlvbiBnZXRNZXRhU2NoZW1hT3B0aW9ucyhzZWxmKSB7XG4gIHZhciBtZXRhT3B0cyA9IHV0aWwuY29weShzZWxmLl9vcHRzKTtcbiAgZm9yICh2YXIgaT0wOyBpPE1FVEFfSUdOT1JFX09QVElPTlMubGVuZ3RoOyBpKyspXG4gICAgZGVsZXRlIG1ldGFPcHRzW01FVEFfSUdOT1JFX09QVElPTlNbaV1dO1xuICByZXR1cm4gbWV0YU9wdHM7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/ajv.js\n")},"./node_modules/ajv/lib/cache.js":
/*!***************************************!*\
  !*** ./node_modules/ajv/lib/cache.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n\nvar Cache = module.exports = function Cache() {\n  this._cache = {};\n};\n\n\nCache.prototype.put = function Cache_put(key, value) {\n  this._cache[key] = value;\n};\n\n\nCache.prototype.get = function Cache_get(key) {\n  return this._cache[key];\n};\n\n\nCache.prototype.del = function Cache_del(key) {\n  delete this._cache[key];\n};\n\n\nCache.prototype.clear = function Cache_clear() {\n  this._cache = {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jYWNoZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY2FjaGUuanM/ZWE5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cblxudmFyIENhY2hlID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBDYWNoZSgpIHtcbiAgdGhpcy5fY2FjaGUgPSB7fTtcbn07XG5cblxuQ2FjaGUucHJvdG90eXBlLnB1dCA9IGZ1bmN0aW9uIENhY2hlX3B1dChrZXksIHZhbHVlKSB7XG4gIHRoaXMuX2NhY2hlW2tleV0gPSB2YWx1ZTtcbn07XG5cblxuQ2FjaGUucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIENhY2hlX2dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX2NhY2hlW2tleV07XG59O1xuXG5cbkNhY2hlLnByb3RvdHlwZS5kZWwgPSBmdW5jdGlvbiBDYWNoZV9kZWwoa2V5KSB7XG4gIGRlbGV0ZSB0aGlzLl9jYWNoZVtrZXldO1xufTtcblxuXG5DYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiBDYWNoZV9jbGVhcigpIHtcbiAgdGhpcy5fY2FjaGUgPSB7fTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/cache.js\n")},"./node_modules/ajv/lib/compile/_rules.js":
/*!************************************************!*\
  !*** ./node_modules/ajv/lib/compile/_rules.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\n//all requires must be explicit because browserify won\'t work with dynamic requires\nmodule.exports = {\n  \'$ref\': __webpack_require__(/*! ../dotjs/ref */ "./node_modules/ajv/lib/dotjs/ref.js"),\n  allOf: __webpack_require__(/*! ../dotjs/allOf */ "./node_modules/ajv/lib/dotjs/allOf.js"),\n  anyOf: __webpack_require__(/*! ../dotjs/anyOf */ "./node_modules/ajv/lib/dotjs/anyOf.js"),\n  const: __webpack_require__(/*! ../dotjs/const */ "./node_modules/ajv/lib/dotjs/const.js"),\n  contains: __webpack_require__(/*! ../dotjs/contains */ "./node_modules/ajv/lib/dotjs/contains.js"),\n  dependencies: __webpack_require__(/*! ../dotjs/dependencies */ "./node_modules/ajv/lib/dotjs/dependencies.js"),\n  \'enum\': __webpack_require__(/*! ../dotjs/enum */ "./node_modules/ajv/lib/dotjs/enum.js"),\n  format: __webpack_require__(/*! ../dotjs/format */ "./node_modules/ajv/lib/dotjs/format.js"),\n  items: __webpack_require__(/*! ../dotjs/items */ "./node_modules/ajv/lib/dotjs/items.js"),\n  maximum: __webpack_require__(/*! ../dotjs/_limit */ "./node_modules/ajv/lib/dotjs/_limit.js"),\n  minimum: __webpack_require__(/*! ../dotjs/_limit */ "./node_modules/ajv/lib/dotjs/_limit.js"),\n  maxItems: __webpack_require__(/*! ../dotjs/_limitItems */ "./node_modules/ajv/lib/dotjs/_limitItems.js"),\n  minItems: __webpack_require__(/*! ../dotjs/_limitItems */ "./node_modules/ajv/lib/dotjs/_limitItems.js"),\n  maxLength: __webpack_require__(/*! ../dotjs/_limitLength */ "./node_modules/ajv/lib/dotjs/_limitLength.js"),\n  minLength: __webpack_require__(/*! ../dotjs/_limitLength */ "./node_modules/ajv/lib/dotjs/_limitLength.js"),\n  maxProperties: __webpack_require__(/*! ../dotjs/_limitProperties */ "./node_modules/ajv/lib/dotjs/_limitProperties.js"),\n  minProperties: __webpack_require__(/*! ../dotjs/_limitProperties */ "./node_modules/ajv/lib/dotjs/_limitProperties.js"),\n  multipleOf: __webpack_require__(/*! ../dotjs/multipleOf */ "./node_modules/ajv/lib/dotjs/multipleOf.js"),\n  not: __webpack_require__(/*! ../dotjs/not */ "./node_modules/ajv/lib/dotjs/not.js"),\n  oneOf: __webpack_require__(/*! ../dotjs/oneOf */ "./node_modules/ajv/lib/dotjs/oneOf.js"),\n  pattern: __webpack_require__(/*! ../dotjs/pattern */ "./node_modules/ajv/lib/dotjs/pattern.js"),\n  properties: __webpack_require__(/*! ../dotjs/properties */ "./node_modules/ajv/lib/dotjs/properties.js"),\n  propertyNames: __webpack_require__(/*! ../dotjs/propertyNames */ "./node_modules/ajv/lib/dotjs/propertyNames.js"),\n  required: __webpack_require__(/*! ../dotjs/required */ "./node_modules/ajv/lib/dotjs/required.js"),\n  uniqueItems: __webpack_require__(/*! ../dotjs/uniqueItems */ "./node_modules/ajv/lib/dotjs/uniqueItems.js"),\n  validate: __webpack_require__(/*! ../dotjs/validate */ "./node_modules/ajv/lib/dotjs/validate.js")\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL19ydWxlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9fcnVsZXMuanM/ZjJjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vYWxsIHJlcXVpcmVzIG11c3QgYmUgZXhwbGljaXQgYmVjYXVzZSBicm93c2VyaWZ5IHdvbid0IHdvcmsgd2l0aCBkeW5hbWljIHJlcXVpcmVzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgJyRyZWYnOiByZXF1aXJlKCcuLi9kb3Rqcy9yZWYnKSxcbiAgYWxsT2Y6IHJlcXVpcmUoJy4uL2RvdGpzL2FsbE9mJyksXG4gIGFueU9mOiByZXF1aXJlKCcuLi9kb3Rqcy9hbnlPZicpLFxuICBjb25zdDogcmVxdWlyZSgnLi4vZG90anMvY29uc3QnKSxcbiAgY29udGFpbnM6IHJlcXVpcmUoJy4uL2RvdGpzL2NvbnRhaW5zJyksXG4gIGRlcGVuZGVuY2llczogcmVxdWlyZSgnLi4vZG90anMvZGVwZW5kZW5jaWVzJyksXG4gICdlbnVtJzogcmVxdWlyZSgnLi4vZG90anMvZW51bScpLFxuICBmb3JtYXQ6IHJlcXVpcmUoJy4uL2RvdGpzL2Zvcm1hdCcpLFxuICBpdGVtczogcmVxdWlyZSgnLi4vZG90anMvaXRlbXMnKSxcbiAgbWF4aW11bTogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0JyksXG4gIG1pbmltdW06IHJlcXVpcmUoJy4uL2RvdGpzL19saW1pdCcpLFxuICBtYXhJdGVtczogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0SXRlbXMnKSxcbiAgbWluSXRlbXM6IHJlcXVpcmUoJy4uL2RvdGpzL19saW1pdEl0ZW1zJyksXG4gIG1heExlbmd0aDogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0TGVuZ3RoJyksXG4gIG1pbkxlbmd0aDogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0TGVuZ3RoJyksXG4gIG1heFByb3BlcnRpZXM6IHJlcXVpcmUoJy4uL2RvdGpzL19saW1pdFByb3BlcnRpZXMnKSxcbiAgbWluUHJvcGVydGllczogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0UHJvcGVydGllcycpLFxuICBtdWx0aXBsZU9mOiByZXF1aXJlKCcuLi9kb3Rqcy9tdWx0aXBsZU9mJyksXG4gIG5vdDogcmVxdWlyZSgnLi4vZG90anMvbm90JyksXG4gIG9uZU9mOiByZXF1aXJlKCcuLi9kb3Rqcy9vbmVPZicpLFxuICBwYXR0ZXJuOiByZXF1aXJlKCcuLi9kb3Rqcy9wYXR0ZXJuJyksXG4gIHByb3BlcnRpZXM6IHJlcXVpcmUoJy4uL2RvdGpzL3Byb3BlcnRpZXMnKSxcbiAgcHJvcGVydHlOYW1lczogcmVxdWlyZSgnLi4vZG90anMvcHJvcGVydHlOYW1lcycpLFxuICByZXF1aXJlZDogcmVxdWlyZSgnLi4vZG90anMvcmVxdWlyZWQnKSxcbiAgdW5pcXVlSXRlbXM6IHJlcXVpcmUoJy4uL2RvdGpzL3VuaXF1ZUl0ZW1zJyksXG4gIHZhbGlkYXRlOiByZXF1aXJlKCcuLi9kb3Rqcy92YWxpZGF0ZScpXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/_rules.js\n')},"./node_modules/ajv/lib/compile/async.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/compile/async.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar MissingRefError = __webpack_require__(/*! ./error_classes */ \"./node_modules/ajv/lib/compile/error_classes.js\").MissingRef;\n\nmodule.exports = compileAsync;\n\n\n/**\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n * @this  Ajv\n * @param {Object}   schema schema object\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\n * @return {Promise} promise that resolves with a validating function.\n */\nfunction compileAsync(schema, meta, callback) {\n  /* eslint no-shadow: 0 */\n  /* global Promise */\n  /* jshint validthis: true */\n  var self = this;\n  if (typeof this._opts.loadSchema != 'function')\n    throw new Error('options.loadSchema should be a function');\n\n  if (typeof meta == 'function') {\n    callback = meta;\n    meta = undefined;\n  }\n\n  var p = loadMetaSchemaOf(schema).then(function () {\n    var schemaObj = self._addSchema(schema, undefined, meta);\n    return schemaObj.validate || _compileAsync(schemaObj);\n  });\n\n  if (callback) {\n    p.then(\n      function(v) { callback(null, v); },\n      callback\n    );\n  }\n\n  return p;\n\n\n  function loadMetaSchemaOf(sch) {\n    var $schema = sch.$schema;\n    return $schema && !self.getSchema($schema)\n            ? compileAsync.call(self, { $ref: $schema }, true)\n            : Promise.resolve();\n  }\n\n\n  function _compileAsync(schemaObj) {\n    try { return self._compile(schemaObj); }\n    catch(e) {\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\n      throw e;\n    }\n\n\n    function loadMissingSchema(e) {\n      var ref = e.missingSchema;\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\n\n      var schemaPromise = self._loadingSchemas[ref];\n      if (!schemaPromise) {\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\n        schemaPromise.then(removePromise, removePromise);\n      }\n\n      return schemaPromise.then(function (sch) {\n        if (!added(ref)) {\n          return loadMetaSchemaOf(sch).then(function () {\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\n          });\n        }\n      }).then(function() {\n        return _compileAsync(schemaObj);\n      });\n\n      function removePromise() {\n        delete self._loadingSchemas[ref];\n      }\n\n      function added(ref) {\n        return self._refs[ref] || self._schemas[ref];\n      }\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2FzeW5jLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2FzeW5jLmpzP2IxYTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgTWlzc2luZ1JlZkVycm9yID0gcmVxdWlyZSgnLi9lcnJvcl9jbGFzc2VzJykuTWlzc2luZ1JlZjtcblxubW9kdWxlLmV4cG9ydHMgPSBjb21waWxlQXN5bmM7XG5cblxuLyoqXG4gKiBDcmVhdGVzIHZhbGlkYXRpbmcgZnVuY3Rpb24gZm9yIHBhc3NlZCBzY2hlbWEgd2l0aCBhc3luY2hyb25vdXMgbG9hZGluZyBvZiBtaXNzaW5nIHNjaGVtYXMuXG4gKiBgbG9hZFNjaGVtYWAgb3B0aW9uIHNob3VsZCBiZSBhIGZ1bmN0aW9uIHRoYXQgYWNjZXB0cyBzY2hlbWEgdXJpIGFuZCByZXR1cm5zIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBzY2hlbWEuXG4gKiBAdGhpcyAgQWp2XG4gKiBAcGFyYW0ge09iamVjdH0gICBzY2hlbWEgc2NoZW1hIG9iamVjdFxuICogQHBhcmFtIHtCb29sZWFufSAgbWV0YSBvcHRpb25hbCB0cnVlIHRvIGNvbXBpbGUgbWV0YS1zY2hlbWE7IHRoaXMgcGFyYW1ldGVyIGNhbiBiZSBza2lwcGVkXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBhbiBvcHRpb25hbCBub2RlLXN0eWxlIGNhbGxiYWNrLCBpdCBpcyBjYWxsZWQgd2l0aCAyIHBhcmFtZXRlcnM6IGVycm9yIChvciBudWxsKSBhbmQgdmFsaWRhdGluZyBmdW5jdGlvbi5cbiAqIEByZXR1cm4ge1Byb21pc2V9IHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgdmFsaWRhdGluZyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY29tcGlsZUFzeW5jKHNjaGVtYSwgbWV0YSwgY2FsbGJhY2spIHtcbiAgLyogZXNsaW50IG5vLXNoYWRvdzogMCAqL1xuICAvKiBnbG9iYWwgUHJvbWlzZSAqL1xuICAvKiBqc2hpbnQgdmFsaWR0aGlzOiB0cnVlICovXG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKHR5cGVvZiB0aGlzLl9vcHRzLmxvYWRTY2hlbWEgIT0gJ2Z1bmN0aW9uJylcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ29wdGlvbnMubG9hZFNjaGVtYSBzaG91bGQgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICh0eXBlb2YgbWV0YSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBtZXRhO1xuICAgIG1ldGEgPSB1bmRlZmluZWQ7XG4gIH1cblxuICB2YXIgcCA9IGxvYWRNZXRhU2NoZW1hT2Yoc2NoZW1hKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2NoZW1hT2JqID0gc2VsZi5fYWRkU2NoZW1hKHNjaGVtYSwgdW5kZWZpbmVkLCBtZXRhKTtcbiAgICByZXR1cm4gc2NoZW1hT2JqLnZhbGlkYXRlIHx8IF9jb21waWxlQXN5bmMoc2NoZW1hT2JqKTtcbiAgfSk7XG5cbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgcC50aGVuKFxuICAgICAgZnVuY3Rpb24odikgeyBjYWxsYmFjayhudWxsLCB2KTsgfSxcbiAgICAgIGNhbGxiYWNrXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBwO1xuXG5cbiAgZnVuY3Rpb24gbG9hZE1ldGFTY2hlbWFPZihzY2gpIHtcbiAgICB2YXIgJHNjaGVtYSA9IHNjaC4kc2NoZW1hO1xuICAgIHJldHVybiAkc2NoZW1hICYmICFzZWxmLmdldFNjaGVtYSgkc2NoZW1hKVxuICAgICAgICAgICAgPyBjb21waWxlQXN5bmMuY2FsbChzZWxmLCB7ICRyZWY6ICRzY2hlbWEgfSwgdHJ1ZSlcbiAgICAgICAgICAgIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuXG4gIGZ1bmN0aW9uIF9jb21waWxlQXN5bmMoc2NoZW1hT2JqKSB7XG4gICAgdHJ5IHsgcmV0dXJuIHNlbGYuX2NvbXBpbGUoc2NoZW1hT2JqKTsgfVxuICAgIGNhdGNoKGUpIHtcbiAgICAgIGlmIChlIGluc3RhbmNlb2YgTWlzc2luZ1JlZkVycm9yKSByZXR1cm4gbG9hZE1pc3NpbmdTY2hlbWEoZSk7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gbG9hZE1pc3NpbmdTY2hlbWEoZSkge1xuICAgICAgdmFyIHJlZiA9IGUubWlzc2luZ1NjaGVtYTtcbiAgICAgIGlmIChhZGRlZChyZWYpKSB0aHJvdyBuZXcgRXJyb3IoJ1NjaGVtYSAnICsgcmVmICsgJyBpcyBsb2FkZWQgYnV0ICcgKyBlLm1pc3NpbmdSZWYgKyAnIGNhbm5vdCBiZSByZXNvbHZlZCcpO1xuXG4gICAgICB2YXIgc2NoZW1hUHJvbWlzZSA9IHNlbGYuX2xvYWRpbmdTY2hlbWFzW3JlZl07XG4gICAgICBpZiAoIXNjaGVtYVByb21pc2UpIHtcbiAgICAgICAgc2NoZW1hUHJvbWlzZSA9IHNlbGYuX2xvYWRpbmdTY2hlbWFzW3JlZl0gPSBzZWxmLl9vcHRzLmxvYWRTY2hlbWEocmVmKTtcbiAgICAgICAgc2NoZW1hUHJvbWlzZS50aGVuKHJlbW92ZVByb21pc2UsIHJlbW92ZVByb21pc2UpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2NoZW1hUHJvbWlzZS50aGVuKGZ1bmN0aW9uIChzY2gpIHtcbiAgICAgICAgaWYgKCFhZGRlZChyZWYpKSB7XG4gICAgICAgICAgcmV0dXJuIGxvYWRNZXRhU2NoZW1hT2Yoc2NoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghYWRkZWQocmVmKSkgc2VsZi5hZGRTY2hlbWEoc2NoLCByZWYsIHVuZGVmaW5lZCwgbWV0YSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfY29tcGlsZUFzeW5jKHNjaGVtYU9iaik7XG4gICAgICB9KTtcblxuICAgICAgZnVuY3Rpb24gcmVtb3ZlUHJvbWlzZSgpIHtcbiAgICAgICAgZGVsZXRlIHNlbGYuX2xvYWRpbmdTY2hlbWFzW3JlZl07XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGFkZGVkKHJlZikge1xuICAgICAgICByZXR1cm4gc2VsZi5fcmVmc1tyZWZdIHx8IHNlbGYuX3NjaGVtYXNbcmVmXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/async.js\n")},"./node_modules/ajv/lib/compile/equal.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/compile/equal.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n/*eslint complexity: 0*/\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!equal(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var keys = Object.keys(a);\n    if (keys.length !== Object.keys(b).length) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!equal(a[keys[i]], b[keys[i]])) return false;\n\n    return true;\n  }\n\n  return false;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2VxdWFsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2VxdWFsLmpzPzgxMGUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKmVzbGludCBjb21wbGV4aXR5OiAwKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICB2YXIgYXJyQSA9IEFycmF5LmlzQXJyYXkoYSlcbiAgICAsIGFyckIgPSBBcnJheS5pc0FycmF5KGIpXG4gICAgLCBpO1xuXG4gIGlmIChhcnJBICYmIGFyckIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT0gYi5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKylcbiAgICAgIGlmICghZXF1YWwoYVtpXSwgYltpXSkpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChhcnJBICE9IGFyckIpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIGlmIChrZXlzLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoYikubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICB2YXIgZGF0ZUEgPSBhIGluc3RhbmNlb2YgRGF0ZVxuICAgICAgLCBkYXRlQiA9IGIgaW5zdGFuY2VvZiBEYXRlO1xuICAgIGlmIChkYXRlQSAmJiBkYXRlQikgcmV0dXJuIGEuZ2V0VGltZSgpID09IGIuZ2V0VGltZSgpO1xuICAgIGlmIChkYXRlQSAhPSBkYXRlQikgcmV0dXJuIGZhbHNlO1xuXG4gICAgdmFyIHJlZ2V4cEEgPSBhIGluc3RhbmNlb2YgUmVnRXhwXG4gICAgICAsIHJlZ2V4cEIgPSBiIGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIGlmIChyZWdleHBBICYmIHJlZ2V4cEIpIHJldHVybiBhLnRvU3RyaW5nKCkgPT0gYi50b1N0cmluZygpO1xuICAgIGlmIChyZWdleHBBICE9IHJlZ2V4cEIpIHJldHVybiBmYWxzZTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKVxuICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKVxuICAgICAgaWYoIWVxdWFsKGFba2V5c1tpXV0sIGJba2V5c1tpXV0pKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/equal.js\n")},"./node_modules/ajv/lib/compile/error_classes.js":
/*!*******************************************************!*\
  !*** ./node_modules/ajv/lib/compile/error_classes.js ***!
  \*******************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar resolve = __webpack_require__(/*! ./resolve */ \"./node_modules/ajv/lib/compile/resolve.js\");\n\nmodule.exports = {\n  Validation: errorSubclass(ValidationError),\n  MissingRef: errorSubclass(MissingRefError)\n};\n\n\nfunction ValidationError(errors) {\n  this.message = 'validation failed';\n  this.errors = errors;\n  this.ajv = this.validation = true;\n}\n\n\nMissingRefError.message = function (baseId, ref) {\n  return 'can\\'t resolve reference ' + ref + ' from id ' + baseId;\n};\n\n\nfunction MissingRefError(baseId, ref, message) {\n  this.message = message || MissingRefError.message(baseId, ref);\n  this.missingRef = resolve.url(baseId, ref);\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\n}\n\n\nfunction errorSubclass(Subclass) {\n  Subclass.prototype = Object.create(Error.prototype);\n  Subclass.prototype.constructor = Subclass;\n  return Subclass;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2Vycm9yX2NsYXNzZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXJyb3JfY2xhc3Nlcy5qcz84OTlhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHJlc29sdmUgPSByZXF1aXJlKCcuL3Jlc29sdmUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFZhbGlkYXRpb246IGVycm9yU3ViY2xhc3MoVmFsaWRhdGlvbkVycm9yKSxcbiAgTWlzc2luZ1JlZjogZXJyb3JTdWJjbGFzcyhNaXNzaW5nUmVmRXJyb3IpXG59O1xuXG5cbmZ1bmN0aW9uIFZhbGlkYXRpb25FcnJvcihlcnJvcnMpIHtcbiAgdGhpcy5tZXNzYWdlID0gJ3ZhbGlkYXRpb24gZmFpbGVkJztcbiAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XG4gIHRoaXMuYWp2ID0gdGhpcy52YWxpZGF0aW9uID0gdHJ1ZTtcbn1cblxuXG5NaXNzaW5nUmVmRXJyb3IubWVzc2FnZSA9IGZ1bmN0aW9uIChiYXNlSWQsIHJlZikge1xuICByZXR1cm4gJ2NhblxcJ3QgcmVzb2x2ZSByZWZlcmVuY2UgJyArIHJlZiArICcgZnJvbSBpZCAnICsgYmFzZUlkO1xufTtcblxuXG5mdW5jdGlvbiBNaXNzaW5nUmVmRXJyb3IoYmFzZUlkLCByZWYsIG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSB8fCBNaXNzaW5nUmVmRXJyb3IubWVzc2FnZShiYXNlSWQsIHJlZik7XG4gIHRoaXMubWlzc2luZ1JlZiA9IHJlc29sdmUudXJsKGJhc2VJZCwgcmVmKTtcbiAgdGhpcy5taXNzaW5nU2NoZW1hID0gcmVzb2x2ZS5ub3JtYWxpemVJZChyZXNvbHZlLmZ1bGxQYXRoKHRoaXMubWlzc2luZ1JlZikpO1xufVxuXG5cbmZ1bmN0aW9uIGVycm9yU3ViY2xhc3MoU3ViY2xhc3MpIHtcbiAgU3ViY2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpO1xuICBTdWJjbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTdWJjbGFzcztcbiAgcmV0dXJuIFN1YmNsYXNzO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/error_classes.js\n")},"./node_modules/ajv/lib/compile/formats.js":
/*!*************************************************!*\
  !*** ./node_modules/ajv/lib/compile/formats.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\");\n\nvar DATE = /^\\d\\d\\d\\d-(\\d\\d)-(\\d\\d)$/;\nvar DAYS = [0,31,29,31,30,31,30,31,31,30,31,30,31];\nvar TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d:\\d\\d)?$/i;\nvar HOSTNAME = /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i;\nvar URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?(?:\\#(?:[a-z0-9\\-._~!$&'()*+,;=:@\\/?]|%[0-9a-f]{2})*)?$/i;\nvar URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@\\/?]|%[0-9a-f]{2})*)?(?:\\#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@\\/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nvar URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#.\\/;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?:\\:[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?:\\:[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\n// var URL = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nvar URL = /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+\\-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+\\-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i;\nvar UUID = /^(?:urn\\:uuid\\:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nvar JSON_POINTER = /^(?:\\/(?:[^~\\/]|~0|~1)*)*$|^\\#(?:\\/(?:[a-z0-9_\\-\\.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:\\#|(?:\\/(?:[^~\\/]|~0|~1)*)*)$/;\n\n\nmodule.exports = formats;\n\nfunction formats(mode) {\n  mode = mode == 'full' ? 'full' : 'fast';\n  return util.copy(formats[mode]);\n}\n\n\nformats.fast = {\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\n  date: /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\n  time: /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)$/i,\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  uri: /^(?:[a-z][a-z0-9+-.]*)(?:\\:|\\/)\\/?[^\\s]*$/i,\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  email: /^[a-z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n  hostname: HOSTNAME,\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  // uuid: http://tools.ietf.org/html/rfc4122\n  uuid: UUID,\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'json-pointer': JSON_POINTER,\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nformats.full = {\n  date: date,\n  time: time,\n  'date-time': date_time,\n  uri: uri,\n  'uri-reference': URIREF,\n  'uri-template': URITEMPLATE,\n  url: URL,\n  email: /^[a-z0-9!#$%&'*+\\/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&''*+\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\n  hostname: hostname,\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n  ipv6: /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n  regex: regex,\n  uuid: UUID,\n  'json-pointer': JSON_POINTER,\n  'relative-json-pointer': RELATIVE_JSON_POINTER\n};\n\n\nfunction date(str) {\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n  var matches = str.match(DATE);\n  if (!matches) return false;\n\n  var month = +matches[1];\n  var day = +matches[2];\n  return month >= 1 && month <= 12 && day >= 1 && day <= DAYS[month];\n}\n\n\nfunction time(str, full) {\n  var matches = str.match(TIME);\n  if (!matches) return false;\n\n  var hour = matches[1];\n  var minute = matches[2];\n  var second = matches[3];\n  var timeZone = matches[5];\n  return hour <= 23 && minute <= 59 && second <= 59 && (!full || timeZone);\n}\n\n\nvar DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n  // http://tools.ietf.org/html/rfc3339#section-5.6\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\n}\n\n\nfunction hostname(str) {\n  // https://tools.ietf.org/html/rfc1034#section-3.5\n  // https://tools.ietf.org/html/rfc1123#section-2\n  return str.length <= 255 && HOSTNAME.test(str);\n}\n\n\nvar NOT_URI_FRAGMENT = /\\/|\\:/;\nfunction uri(str) {\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\n}\n\n\nvar Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n  if (Z_ANCHOR.test(str)) return false;\n  try {\n    new RegExp(str);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/formats.js\n")},"./node_modules/ajv/lib/compile/index.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/compile/index.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar resolve = __webpack_require__(/*! ./resolve */ \"./node_modules/ajv/lib/compile/resolve.js\")\n  , util = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\")\n  , errorClasses = __webpack_require__(/*! ./error_classes */ \"./node_modules/ajv/lib/compile/error_classes.js\")\n  , stableStringify = __webpack_require__(/*! json-stable-stringify */ \"./node_modules/json-stable-stringify/index.js\");\n\nvar validateGenerator = __webpack_require__(/*! ../dotjs/validate */ \"./node_modules/ajv/lib/dotjs/validate.js\");\n\n/**\n * Functions below are used inside compiled validations function\n */\n\nvar co = __webpack_require__(/*! co */ \"./node_modules/co/index.js\");\nvar ucs2length = util.ucs2length;\nvar equal = __webpack_require__(/*! ./equal */ \"./node_modules/ajv/lib/compile/equal.js\");\n\n// this error is thrown by async schemas to return validation errors via exception\nvar ValidationError = errorClasses.Validation;\n\nmodule.exports = compile;\n\n\n/**\n * Compiles schema to validation function\n * @this   Ajv\n * @param  {Object} schema schema object\n * @param  {Object} root object with information about the root schema for this schema\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\n * @param  {String} baseId base ID for IDs in the schema\n * @return {Function} validation function\n */\nfunction compile(schema, root, localRefs, baseId) {\n  /* jshint validthis: true, evil: true */\n  /* eslint no-shadow: 0 */\n  var self = this\n    , opts = this._opts\n    , refVal = [ undefined ]\n    , refs = {}\n    , patterns = []\n    , patternsHash = {}\n    , defaults = []\n    , defaultsHash = {}\n    , customRules = [];\n\n  root = root || { schema: schema, refVal: refVal, refs: refs };\n\n  var c = checkCompiling.call(this, schema, root, baseId);\n  var compilation = this._compilations[c.index];\n  if (c.compiling) return (compilation.callValidate = callValidate);\n\n  var formats = this._formats;\n  var RULES = this.RULES;\n\n  try {\n    var v = localCompile(schema, root, localRefs, baseId);\n    compilation.validate = v;\n    var cv = compilation.callValidate;\n    if (cv) {\n      cv.schema = v.schema;\n      cv.errors = null;\n      cv.refs = v.refs;\n      cv.refVal = v.refVal;\n      cv.root = v.root;\n      cv.$async = v.$async;\n      if (opts.sourceCode) cv.source = v.source;\n    }\n    return v;\n  } finally {\n    endCompiling.call(this, schema, root, baseId);\n  }\n\n  function callValidate() {\n    var validate = compilation.validate;\n    var result = validate.apply(null, arguments);\n    callValidate.errors = validate.errors;\n    return result;\n  }\n\n  function localCompile(_schema, _root, localRefs, baseId) {\n    var isRoot = !_root || (_root && _root.schema == _schema);\n    if (_root.schema != root.schema)\n      return compile.call(self, _schema, _root, localRefs, baseId);\n\n    var $async = _schema.$async === true;\n\n    var sourceCode = validateGenerator({\n      isTop: true,\n      schema: _schema,\n      isRoot: isRoot,\n      baseId: baseId,\n      root: _root,\n      schemaPath: '',\n      errSchemaPath: '#',\n      errorPath: '\"\"',\n      MissingRefError: errorClasses.MissingRef,\n      RULES: RULES,\n      validate: validateGenerator,\n      util: util,\n      resolve: resolve,\n      resolveRef: resolveRef,\n      usePattern: usePattern,\n      useDefault: useDefault,\n      useCustomRule: useCustomRule,\n      opts: opts,\n      formats: formats,\n      self: self\n    });\n\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\n                   + sourceCode;\n\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode);\n    // console.log('\\n\\n\\n *** \\n', JSON.stringify(sourceCode));\n    var validate;\n    try {\n      var makeValidate = new Function(\n        'self',\n        'RULES',\n        'formats',\n        'root',\n        'refVal',\n        'defaults',\n        'customRules',\n        'co',\n        'equal',\n        'ucs2length',\n        'ValidationError',\n        sourceCode\n      );\n\n      validate = makeValidate(\n        self,\n        RULES,\n        formats,\n        root,\n        refVal,\n        defaults,\n        customRules,\n        co,\n        equal,\n        ucs2length,\n        ValidationError\n      );\n\n      refVal[0] = validate;\n    } catch(e) {\n      console.error('Error compiling schema, function code:', sourceCode);\n      throw e;\n    }\n\n    validate.schema = _schema;\n    validate.errors = null;\n    validate.refs = refs;\n    validate.refVal = refVal;\n    validate.root = isRoot ? validate : _root;\n    if ($async) validate.$async = true;\n    if (opts.sourceCode === true) {\n      validate.source = {\n        code: sourceCode,\n        patterns: patterns,\n        defaults: defaults\n      };\n    }\n\n    return validate;\n  }\n\n  function resolveRef(baseId, ref, isRoot) {\n    ref = resolve.url(baseId, ref);\n    var refIndex = refs[ref];\n    var _refVal, refCode;\n    if (refIndex !== undefined) {\n      _refVal = refVal[refIndex];\n      refCode = 'refVal[' + refIndex + ']';\n      return resolvedRef(_refVal, refCode);\n    }\n    if (!isRoot && root.refs) {\n      var rootRefId = root.refs[ref];\n      if (rootRefId !== undefined) {\n        _refVal = root.refVal[rootRefId];\n        refCode = addLocalRef(ref, _refVal);\n        return resolvedRef(_refVal, refCode);\n      }\n    }\n\n    refCode = addLocalRef(ref);\n    var v = resolve.call(self, localCompile, root, ref);\n    if (v === undefined) {\n      var localSchema = localRefs && localRefs[ref];\n      if (localSchema) {\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\n            ? localSchema\n            : compile.call(self, localSchema, root, localRefs, baseId);\n      }\n    }\n\n    if (v !== undefined) {\n      replaceLocalRef(ref, v);\n      return resolvedRef(v, refCode);\n    }\n  }\n\n  function addLocalRef(ref, v) {\n    var refId = refVal.length;\n    refVal[refId] = v;\n    refs[ref] = refId;\n    return 'refVal' + refId;\n  }\n\n  function replaceLocalRef(ref, v) {\n    var refId = refs[ref];\n    refVal[refId] = v;\n  }\n\n  function resolvedRef(refVal, code) {\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\n            ? { code: code, schema: refVal, inline: true }\n            : { code: code, $async: refVal && refVal.$async };\n  }\n\n  function usePattern(regexStr) {\n    var index = patternsHash[regexStr];\n    if (index === undefined) {\n      index = patternsHash[regexStr] = patterns.length;\n      patterns[index] = regexStr;\n    }\n    return 'pattern' + index;\n  }\n\n  function useDefault(value) {\n    switch (typeof value) {\n      case 'boolean':\n      case 'number':\n        return '' + value;\n      case 'string':\n        return util.toQuotedString(value);\n      case 'object':\n        if (value === null) return 'null';\n        var valueStr = stableStringify(value);\n        var index = defaultsHash[valueStr];\n        if (index === undefined) {\n          index = defaultsHash[valueStr] = defaults.length;\n          defaults[index] = value;\n        }\n        return 'default' + index;\n    }\n  }\n\n  function useCustomRule(rule, schema, parentSchema, it) {\n    var validateSchema = rule.definition.validateSchema;\n    if (validateSchema && self._opts.validateSchema !== false) {\n      var valid = validateSchema(schema);\n      if (!valid) {\n        var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\n        if (self._opts.validateSchema == 'log') console.error(message);\n        else throw new Error(message);\n      }\n    }\n\n    var compile = rule.definition.compile\n      , inline = rule.definition.inline\n      , macro = rule.definition.macro;\n\n    var validate;\n    if (compile) {\n      validate = compile.call(self, schema, parentSchema, it);\n    } else if (macro) {\n      validate = macro.call(self, schema, parentSchema, it);\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\n    } else if (inline) {\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\n    } else {\n      validate = rule.definition.validate;\n      if (!validate) return;\n    }\n\n    if (validate === undefined)\n      throw new Error('custom keyword \"' + rule.keyword + '\"failed to compile');\n\n    var index = customRules.length;\n    customRules[index] = validate;\n\n    return {\n      code: 'customRule' + index,\n      validate: validate\n    };\n  }\n}\n\n\n/**\n * Checks if the schema is currently compiled\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Object} object with properties \"index\" (compilation index) and \"compiling\" (boolean)\n */\nfunction checkCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var index = compIndex.call(this, schema, root, baseId);\n  if (index >= 0) return { index: index, compiling: true };\n  index = this._compilations.length;\n  this._compilations[index] = {\n    schema: schema,\n    root: root,\n    baseId: baseId\n  };\n  return { index: index, compiling: false };\n}\n\n\n/**\n * Removes the schema from the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n */\nfunction endCompiling(schema, root, baseId) {\n  /* jshint validthis: true */\n  var i = compIndex.call(this, schema, root, baseId);\n  if (i >= 0) this._compilations.splice(i, 1);\n}\n\n\n/**\n * Index of schema compilation in the currently compiled list\n * @this   Ajv\n * @param  {Object} schema schema to compile\n * @param  {Object} root root object\n * @param  {String} baseId base schema ID\n * @return {Integer} compilation index\n */\nfunction compIndex(schema, root, baseId) {\n  /* jshint validthis: true */\n  for (var i=0; i<this._compilations.length; i++) {\n    var c = this._compilations[i];\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\n  }\n  return -1;\n}\n\n\nfunction patternCode(i, patterns) {\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\n}\n\n\nfunction defaultCode(i) {\n  return 'var default' + i + ' = defaults[' + i + '];';\n}\n\n\nfunction refValCode(i, refVal) {\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\n}\n\n\nfunction customRuleCode(i) {\n  return 'var customRule' + i + ' = customRules[' + i + '];';\n}\n\n\nfunction vars(arr, statement) {\n  if (!arr.length) return '';\n  var code = '';\n  for (var i=0; i<arr.length; i++)\n    code += statement(i, arr);\n  return code;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/index.js\n")},"./node_modules/ajv/lib/compile/resolve.js":
/*!*************************************************!*\
  !*** ./node_modules/ajv/lib/compile/resolve.js ***!
  \*************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar url = __webpack_require__(/*! url */ \"./node_modules/url/url.js\")\n  , equal = __webpack_require__(/*! ./equal */ \"./node_modules/ajv/lib/compile/equal.js\")\n  , util = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\")\n  , SchemaObject = __webpack_require__(/*! ./schema_obj */ \"./node_modules/ajv/lib/compile/schema_obj.js\")\n  , traverse = __webpack_require__(/*! json-schema-traverse */ \"./node_modules/json-schema-traverse/index.js\");\n\nmodule.exports = resolve;\n\nresolve.normalizeId = normalizeId;\nresolve.fullPath = getFullPath;\nresolve.url = resolveUrl;\nresolve.ids = resolveIds;\nresolve.inlineRef = inlineRef;\nresolve.schema = resolveSchema;\n\n/**\n * [resolve and compile the references ($ref)]\n * @this   Ajv\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\n * @param  {Object} root object with information about the root schema for the current schema\n * @param  {String} ref reference to resolve\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\n */\nfunction resolve(compile, root, ref) {\n  /* jshint validthis: true */\n  var refVal = this._refs[ref];\n  if (typeof refVal == 'string') {\n    if (this._refs[refVal]) refVal = this._refs[refVal];\n    else return resolve.call(this, compile, root, refVal);\n  }\n\n  refVal = refVal || this._schemas[ref];\n  if (refVal instanceof SchemaObject) {\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\n            ? refVal.schema\n            : refVal.validate || this._compile(refVal);\n  }\n\n  var res = resolveSchema.call(this, root, ref);\n  var schema, v, baseId;\n  if (res) {\n    schema = res.schema;\n    root = res.root;\n    baseId = res.baseId;\n  }\n\n  if (schema instanceof SchemaObject) {\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\n  } else if (schema !== undefined) {\n    v = inlineRef(schema, this._opts.inlineRefs)\n        ? schema\n        : compile.call(this, schema, root, undefined, baseId);\n  }\n\n  return v;\n}\n\n\n/**\n * Resolve schema, its root and baseId\n * @this Ajv\n * @param  {Object} root root object with properties schema, refVal, refs\n * @param  {String} ref  reference to resolve\n * @return {Object} object with properties schema, root, baseId\n */\nfunction resolveSchema(root, ref) {\n  /* jshint validthis: true */\n  var p = url.parse(ref, false, true)\n    , refPath = _getFullPath(p)\n    , baseId = getFullPath(this._getId(root.schema));\n  if (refPath !== baseId) {\n    var id = normalizeId(refPath);\n    var refVal = this._refs[id];\n    if (typeof refVal == 'string') {\n      return resolveRecursive.call(this, root, refVal, p);\n    } else if (refVal instanceof SchemaObject) {\n      if (!refVal.validate) this._compile(refVal);\n      root = refVal;\n    } else {\n      refVal = this._schemas[id];\n      if (refVal instanceof SchemaObject) {\n        if (!refVal.validate) this._compile(refVal);\n        if (id == normalizeId(ref))\n          return { schema: refVal, root: root, baseId: baseId };\n        root = refVal;\n      } else {\n        return;\n      }\n    }\n    if (!root.schema) return;\n    baseId = getFullPath(this._getId(root.schema));\n  }\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\n}\n\n\n/* @this Ajv */\nfunction resolveRecursive(root, ref, parsedRef) {\n  /* jshint validthis: true */\n  var res = resolveSchema.call(this, root, ref);\n  if (res) {\n    var schema = res.schema;\n    var baseId = res.baseId;\n    root = res.root;\n    var id = this._getId(schema);\n    if (id) baseId = resolveUrl(baseId, id);\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\n  }\n}\n\n\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\n/* @this Ajv */\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\n  /* jshint validthis: true */\n  parsedRef.hash = parsedRef.hash || '';\n  if (parsedRef.hash.slice(0,2) != '#/') return;\n  var parts = parsedRef.hash.split('/');\n\n  for (var i = 1; i < parts.length; i++) {\n    var part = parts[i];\n    if (part) {\n      part = util.unescapeFragment(part);\n      schema = schema[part];\n      if (schema === undefined) break;\n      var id;\n      if (!PREVENT_SCOPE_CHANGE[part]) {\n        id = this._getId(schema);\n        if (id) baseId = resolveUrl(baseId, id);\n        if (schema.$ref) {\n          var $ref = resolveUrl(baseId, schema.$ref);\n          var res = resolveSchema.call(this, root, $ref);\n          if (res) {\n            schema = res.schema;\n            root = res.root;\n            baseId = res.baseId;\n          }\n        }\n      }\n    }\n  }\n  if (schema !== undefined && schema !== root.schema)\n    return { schema: schema, root: root, baseId: baseId };\n}\n\n\nvar SIMPLE_INLINED = util.toHash([\n  'type', 'format', 'pattern',\n  'maxLength', 'minLength',\n  'maxProperties', 'minProperties',\n  'maxItems', 'minItems',\n  'maximum', 'minimum',\n  'uniqueItems', 'multipleOf',\n  'required', 'enum'\n]);\nfunction inlineRef(schema, limit) {\n  if (limit === false) return false;\n  if (limit === undefined || limit === true) return checkNoRef(schema);\n  else if (limit) return countKeys(schema) <= limit;\n}\n\n\nfunction checkNoRef(schema) {\n  var item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return false;\n      item = schema[key];\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\n    }\n  }\n  return true;\n}\n\n\nfunction countKeys(schema) {\n  var count = 0, item;\n  if (Array.isArray(schema)) {\n    for (var i=0; i<schema.length; i++) {\n      item = schema[i];\n      if (typeof item == 'object') count += countKeys(item);\n      if (count == Infinity) return Infinity;\n    }\n  } else {\n    for (var key in schema) {\n      if (key == '$ref') return Infinity;\n      if (SIMPLE_INLINED[key]) {\n        count++;\n      } else {\n        item = schema[key];\n        if (typeof item == 'object') count += countKeys(item) + 1;\n        if (count == Infinity) return Infinity;\n      }\n    }\n  }\n  return count;\n}\n\n\nfunction getFullPath(id, normalize) {\n  if (normalize !== false) id = normalizeId(id);\n  var p = url.parse(id, false, true);\n  return _getFullPath(p);\n}\n\n\nfunction _getFullPath(p) {\n  var protocolSeparator = p.protocol || p.href.slice(0,2) == '//' ? '//' : '';\n  return (p.protocol||'') + protocolSeparator + (p.host||'') + (p.path||'')  + '#';\n}\n\n\nvar TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\n}\n\n\nfunction resolveUrl(baseId, id) {\n  id = normalizeId(id);\n  return url.resolve(baseId, id);\n}\n\n\n/* @this Ajv */\nfunction resolveIds(schema) {\n  var schemaId = normalizeId(this._getId(schema));\n  var baseIds = {'': schemaId};\n  var fullPaths = {'': getFullPath(schemaId, false)};\n  var localRefs = {};\n  var self = this;\n\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n    if (jsonPtr === '') return;\n    var id = self._getId(sch);\n    var baseId = baseIds[parentJsonPtr];\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\n    if (keyIndex !== undefined)\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\n\n    if (typeof id == 'string') {\n      id = baseId = normalizeId(baseId ? url.resolve(baseId, id) : id);\n\n      var refVal = self._refs[id];\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\n      if (refVal && refVal.schema) {\n        if (!equal(sch, refVal.schema))\n          throw new Error('id \"' + id + '\" resolves to more than one schema');\n      } else if (id != normalizeId(fullPath)) {\n        if (id[0] == '#') {\n          if (localRefs[id] && !equal(sch, localRefs[id]))\n            throw new Error('id \"' + id + '\" resolves to more than one schema');\n          localRefs[id] = sch;\n        } else {\n          self._refs[id] = fullPath;\n        }\n      }\n    }\n    baseIds[jsonPtr] = baseId;\n    fullPaths[jsonPtr] = fullPath;\n  });\n\n  return localRefs;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/resolve.js\n")},"./node_modules/ajv/lib/compile/rules.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/compile/rules.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar ruleModules = __webpack_require__(/*! ./_rules */ \"./node_modules/ajv/lib/compile/_rules.js\")\n  , toHash = __webpack_require__(/*! ./util */ \"./node_modules/ajv/lib/compile/util.js\").toHash;\n\nmodule.exports = function rules() {\n  var RULES = [\n    { type: 'number',\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\n    { type: 'string',\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\n    { type: 'array',\n      rules: [ 'maxItems', 'minItems', 'uniqueItems', 'contains', 'items' ] },\n    { type: 'object',\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf' ] }\n  ];\n\n  var ALL = [ 'type' ];\n  var KEYWORDS = [\n    'additionalItems', '$schema', 'id', 'title',\n    'description', 'default', 'definitions'\n  ];\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\n  RULES.all = toHash(ALL);\n  RULES.types = toHash(TYPES);\n\n  RULES.forEach(function (group) {\n    group.rules = group.rules.map(function (keyword) {\n      var implKeywords;\n      if (typeof keyword == 'object') {\n        var key = Object.keys(keyword)[0];\n        implKeywords = keyword[key];\n        keyword = key;\n        implKeywords.forEach(function (k) {\n          ALL.push(k);\n          RULES.all[k] = true;\n        });\n      }\n      ALL.push(keyword);\n      var rule = RULES.all[keyword] = {\n        keyword: keyword,\n        code: ruleModules[keyword],\n        implements: implKeywords\n      };\n      return rule;\n    });\n\n    if (group.type) RULES.types[group.type] = group;\n  });\n\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\n  RULES.custom = {};\n\n  return RULES;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3J1bGVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3J1bGVzLmpzP2MxN2MiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcnVsZU1vZHVsZXMgPSByZXF1aXJlKCcuL19ydWxlcycpXG4gICwgdG9IYXNoID0gcmVxdWlyZSgnLi91dGlsJykudG9IYXNoO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJ1bGVzKCkge1xuICB2YXIgUlVMRVMgPSBbXG4gICAgeyB0eXBlOiAnbnVtYmVyJyxcbiAgICAgIHJ1bGVzOiBbIHsgJ21heGltdW0nOiBbJ2V4Y2x1c2l2ZU1heGltdW0nXSB9LFxuICAgICAgICAgICAgICAgeyAnbWluaW11bSc6IFsnZXhjbHVzaXZlTWluaW11bSddIH0sICdtdWx0aXBsZU9mJywgJ2Zvcm1hdCddIH0sXG4gICAgeyB0eXBlOiAnc3RyaW5nJyxcbiAgICAgIHJ1bGVzOiBbICdtYXhMZW5ndGgnLCAnbWluTGVuZ3RoJywgJ3BhdHRlcm4nLCAnZm9ybWF0JyBdIH0sXG4gICAgeyB0eXBlOiAnYXJyYXknLFxuICAgICAgcnVsZXM6IFsgJ21heEl0ZW1zJywgJ21pbkl0ZW1zJywgJ3VuaXF1ZUl0ZW1zJywgJ2NvbnRhaW5zJywgJ2l0ZW1zJyBdIH0sXG4gICAgeyB0eXBlOiAnb2JqZWN0JyxcbiAgICAgIHJ1bGVzOiBbICdtYXhQcm9wZXJ0aWVzJywgJ21pblByb3BlcnRpZXMnLCAncmVxdWlyZWQnLCAnZGVwZW5kZW5jaWVzJywgJ3Byb3BlcnR5TmFtZXMnLFxuICAgICAgICAgICAgICAgeyAncHJvcGVydGllcyc6IFsnYWRkaXRpb25hbFByb3BlcnRpZXMnLCAncGF0dGVyblByb3BlcnRpZXMnXSB9IF0gfSxcbiAgICB7IHJ1bGVzOiBbICckcmVmJywgJ2NvbnN0JywgJ2VudW0nLCAnbm90JywgJ2FueU9mJywgJ29uZU9mJywgJ2FsbE9mJyBdIH1cbiAgXTtcblxuICB2YXIgQUxMID0gWyAndHlwZScgXTtcbiAgdmFyIEtFWVdPUkRTID0gW1xuICAgICdhZGRpdGlvbmFsSXRlbXMnLCAnJHNjaGVtYScsICdpZCcsICd0aXRsZScsXG4gICAgJ2Rlc2NyaXB0aW9uJywgJ2RlZmF1bHQnLCAnZGVmaW5pdGlvbnMnXG4gIF07XG4gIHZhciBUWVBFUyA9IFsgJ251bWJlcicsICdpbnRlZ2VyJywgJ3N0cmluZycsICdhcnJheScsICdvYmplY3QnLCAnYm9vbGVhbicsICdudWxsJyBdO1xuICBSVUxFUy5hbGwgPSB0b0hhc2goQUxMKTtcbiAgUlVMRVMudHlwZXMgPSB0b0hhc2goVFlQRVMpO1xuXG4gIFJVTEVTLmZvckVhY2goZnVuY3Rpb24gKGdyb3VwKSB7XG4gICAgZ3JvdXAucnVsZXMgPSBncm91cC5ydWxlcy5tYXAoZnVuY3Rpb24gKGtleXdvcmQpIHtcbiAgICAgIHZhciBpbXBsS2V5d29yZHM7XG4gICAgICBpZiAodHlwZW9mIGtleXdvcmQgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdmFyIGtleSA9IE9iamVjdC5rZXlzKGtleXdvcmQpWzBdO1xuICAgICAgICBpbXBsS2V5d29yZHMgPSBrZXl3b3JkW2tleV07XG4gICAgICAgIGtleXdvcmQgPSBrZXk7XG4gICAgICAgIGltcGxLZXl3b3Jkcy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgQUxMLnB1c2goayk7XG4gICAgICAgICAgUlVMRVMuYWxsW2tdID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBBTEwucHVzaChrZXl3b3JkKTtcbiAgICAgIHZhciBydWxlID0gUlVMRVMuYWxsW2tleXdvcmRdID0ge1xuICAgICAgICBrZXl3b3JkOiBrZXl3b3JkLFxuICAgICAgICBjb2RlOiBydWxlTW9kdWxlc1trZXl3b3JkXSxcbiAgICAgICAgaW1wbGVtZW50czogaW1wbEtleXdvcmRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgfSk7XG5cbiAgICBpZiAoZ3JvdXAudHlwZSkgUlVMRVMudHlwZXNbZ3JvdXAudHlwZV0gPSBncm91cDtcbiAgfSk7XG5cbiAgUlVMRVMua2V5d29yZHMgPSB0b0hhc2goQUxMLmNvbmNhdChLRVlXT1JEUykpO1xuICBSVUxFUy5jdXN0b20gPSB7fTtcblxuICByZXR1cm4gUlVMRVM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/rules.js\n")},"./node_modules/ajv/lib/compile/schema_obj.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/compile/schema_obj.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nvar util = __webpack_require__(/*! ./util */ "./node_modules/ajv/lib/compile/util.js");\n\nmodule.exports = SchemaObject;\n\nfunction SchemaObject(obj) {\n  util.copy(obj, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3NjaGVtYV9vYmouanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvc2NoZW1hX29iai5qcz9iYTAwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWwgPSByZXF1aXJlKCcuL3V0aWwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBTY2hlbWFPYmplY3Q7XG5cbmZ1bmN0aW9uIFNjaGVtYU9iamVjdChvYmopIHtcbiAgdXRpbC5jb3B5KG9iaiwgdGhpcyk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/schema_obj.js\n')},"./node_modules/ajv/lib/compile/ucs2length.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/compile/ucs2length.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nmodule.exports = function ucs2length(str) {\n  var length = 0\n    , len = str.length\n    , pos = 0\n    , value;\n  while (pos < len) {\n    length++;\n    value = str.charCodeAt(pos++);\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos);\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\n    }\n  }\n  return length;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3VjczJsZW5ndGguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvdWNzMmxlbmd0aC5qcz83NzVlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmdcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iZXN0aWVqcy9wdW55Y29kZS5qcyAtIHB1bnljb2RlLnVjczIuZGVjb2RlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHVjczJsZW5ndGgoc3RyKSB7XG4gIHZhciBsZW5ndGggPSAwXG4gICAgLCBsZW4gPSBzdHIubGVuZ3RoXG4gICAgLCBwb3MgPSAwXG4gICAgLCB2YWx1ZTtcbiAgd2hpbGUgKHBvcyA8IGxlbikge1xuICAgIGxlbmd0aCsrO1xuICAgIHZhbHVlID0gc3RyLmNoYXJDb2RlQXQocG9zKyspO1xuICAgIGlmICh2YWx1ZSA+PSAweEQ4MDAgJiYgdmFsdWUgPD0gMHhEQkZGICYmIHBvcyA8IGxlbikge1xuICAgICAgLy8gaGlnaCBzdXJyb2dhdGUsIGFuZCB0aGVyZSBpcyBhIG5leHQgY2hhcmFjdGVyXG4gICAgICB2YWx1ZSA9IHN0ci5jaGFyQ29kZUF0KHBvcyk7XG4gICAgICBpZiAoKHZhbHVlICYgMHhGQzAwKSA9PSAweERDMDApIHBvcysrOyAvLyBsb3cgc3Vycm9nYXRlXG4gICAgfVxuICB9XG4gIHJldHVybiBsZW5ndGg7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/ucs2length.js\n")},"./node_modules/ajv/lib/compile/util.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/compile/util.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n\nmodule.exports = {\n  copy: copy,\n  checkDataType: checkDataType,\n  checkDataTypes: checkDataTypes,\n  coerceToTypes: coerceToTypes,\n  toHash: toHash,\n  getProperty: getProperty,\n  escapeQuotes: escapeQuotes,\n  equal: __webpack_require__(/*! ./equal */ \"./node_modules/ajv/lib/compile/equal.js\"),\n  ucs2length: __webpack_require__(/*! ./ucs2length */ \"./node_modules/ajv/lib/compile/ucs2length.js\"),\n  varOccurences: varOccurences,\n  varReplace: varReplace,\n  cleanUpCode: cleanUpCode,\n  finalCleanUpCode: finalCleanUpCode,\n  schemaHasRules: schemaHasRules,\n  schemaHasRulesExcept: schemaHasRulesExcept,\n  toQuotedString: toQuotedString,\n  getPathExpr: getPathExpr,\n  getPath: getPath,\n  getData: getData,\n  unescapeFragment: unescapeFragment,\n  escapeFragment: escapeFragment,\n  escapeJsonPointer: escapeJsonPointer\n};\n\n\nfunction copy(o, to) {\n  to = to || {};\n  for (var key in o) to[key] = o[key];\n  return to;\n}\n\n\nfunction checkDataType(dataType, data, negate) {\n  var EQUAL = negate ? ' !== ' : ' === '\n    , AND = negate ? ' || ' : ' && '\n    , OK = negate ? '!' : ''\n    , NOT = negate ? '' : '!';\n  switch (dataType) {\n    case 'null': return data + EQUAL + 'null';\n    case 'array': return OK + 'Array.isArray(' + data + ')';\n    case 'object': return '(' + OK + data + AND +\n                          'typeof ' + data + EQUAL + '\"object\"' + AND +\n                          NOT + 'Array.isArray(' + data + '))';\n    case 'integer': return '(typeof ' + data + EQUAL + '\"number\"' + AND +\n                           NOT + '(' + data + ' % 1)' +\n                           AND + data + EQUAL + data + ')';\n    default: return 'typeof ' + data + EQUAL + '\"' + dataType + '\"';\n  }\n}\n\n\nfunction checkDataTypes(dataTypes, data) {\n  switch (dataTypes.length) {\n    case 1: return checkDataType(dataTypes[0], data, true);\n    default:\n      var code = '';\n      var types = toHash(dataTypes);\n      if (types.array && types.object) {\n        code = types.null ? '(': '(!' + data + ' || ';\n        code += 'typeof ' + data + ' !== \"object\")';\n        delete types.null;\n        delete types.array;\n        delete types.object;\n      }\n      if (types.number) delete types.integer;\n      for (var t in types)\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);\n\n      return code;\n  }\n}\n\n\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\n  if (Array.isArray(dataTypes)) {\n    var types = [];\n    for (var i=0; i<dataTypes.length; i++) {\n      var t = dataTypes[i];\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\n    }\n    if (types.length) return types;\n  } else if (COERCE_TO_TYPES[dataTypes]) {\n    return [dataTypes];\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\n    return ['array'];\n  }\n}\n\n\nfunction toHash(arr) {\n  var hash = {};\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\n  return hash;\n}\n\n\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nvar SINGLE_QUOTE = /'|\\\\/g;\nfunction getProperty(key) {\n  return typeof key == 'number'\n          ? '[' + key + ']'\n          : IDENTIFIER.test(key)\n            ? '.' + key\n            : \"['\" + escapeQuotes(key) + \"']\";\n}\n\n\nfunction escapeQuotes(str) {\n  return str.replace(SINGLE_QUOTE, '\\\\$&')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\t/g, '\\\\t');\n}\n\n\nfunction varOccurences(str, dataVar) {\n  dataVar += '[^0-9]';\n  var matches = str.match(new RegExp(dataVar, 'g'));\n  return matches ? matches.length : 0;\n}\n\n\nfunction varReplace(str, dataVar, expr) {\n  dataVar += '([^0-9])';\n  expr = expr.replace(/\\$/g, '$$$$');\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\n}\n\n\nvar EMPTY_ELSE = /else\\s*{\\s*}/g\n  , EMPTY_IF_NO_ELSE = /if\\s*\\([^)]+\\)\\s*\\{\\s*\\}(?!\\s*else)/g\n  , EMPTY_IF_WITH_ELSE = /if\\s*\\(([^)]+)\\)\\s*\\{\\s*\\}\\s*else(?!\\s*if)/g;\nfunction cleanUpCode(out) {\n  return out.replace(EMPTY_ELSE, '')\n            .replace(EMPTY_IF_NO_ELSE, '')\n            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\n}\n\n\nvar ERRORS_REGEXP = /[^v\\.]errors/g\n  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g\n  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g\n  , RETURN_VALID = 'return errors === 0;'\n  , RETURN_TRUE = 'validate.errors = null; return true;'\n  , RETURN_ASYNC = /if \\(errors === 0\\) return data;\\s*else throw new ValidationError\\(vErrors\\);/\n  , RETURN_DATA_ASYNC = 'return data;'\n  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g\n  , REMOVE_ROOTDATA = /if \\(rootData === undefined\\) rootData = data;/;\n\nfunction finalCleanUpCode(out, async) {\n  var matches = out.match(ERRORS_REGEXP);\n  if (matches && matches.length == 2) {\n    out = async\n          ? out.replace(REMOVE_ERRORS_ASYNC, '')\n               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)\n          : out.replace(REMOVE_ERRORS, '')\n               .replace(RETURN_VALID, RETURN_TRUE);\n  }\n\n  matches = out.match(ROOTDATA_REGEXP);\n  if (!matches || matches.length !== 3) return out;\n  return out.replace(REMOVE_ROOTDATA, '');\n}\n\n\nfunction schemaHasRules(schema, rules) {\n  if (typeof schema == 'boolean') return !schema;\n  for (var key in schema) if (rules[key]) return true;\n}\n\n\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\n}\n\n\nfunction toQuotedString(str) {\n  return '\\'' + escapeQuotes(str) + '\\'';\n}\n\n\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\n  var path = jsonPointers // false by default\n              ? '\\'/\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\'~0\\').replace(/\\\\//g, \\'~1\\')')\n              : (isNumber ? '\\'[\\' + ' + expr + ' + \\']\\'' : '\\'[\\\\\\'\\' + ' + expr + ' + \\'\\\\\\']\\'');\n  return joinPaths(currentPath, path);\n}\n\n\nfunction getPath(currentPath, prop, jsonPointers) {\n  var path = jsonPointers // false by default\n              ? toQuotedString('/' + escapeJsonPointer(prop))\n              : toQuotedString(getProperty(prop));\n  return joinPaths(currentPath, path);\n}\n\n\nvar JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, lvl, paths) {\n  var up, jsonPointer, data, matches;\n  if ($data === '') return 'rootData';\n  if ($data[0] == '/') {\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\n    jsonPointer = $data;\n    data = 'rootData';\n  } else {\n    matches = $data.match(RELATIVE_JSON_POINTER);\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\n    up = +matches[1];\n    jsonPointer = matches[2];\n    if (jsonPointer == '#') {\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\n      return paths[lvl - up];\n    }\n\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\n    data = 'data' + ((lvl - up) || '');\n    if (!jsonPointer) return data;\n  }\n\n  var expr = data;\n  var segments = jsonPointer.split('/');\n  for (var i=0; i<segments.length; i++) {\n    var segment = segments[i];\n    if (segment) {\n      data += getProperty(unescapeJsonPointer(segment));\n      expr += ' && ' + data;\n    }\n  }\n  return expr;\n}\n\n\nfunction joinPaths (a, b) {\n  if (a == '\"\"') return b;\n  return (a + ' + ' + b).replace(/' \\+ '/g, '');\n}\n\n\nfunction unescapeFragment(str) {\n  return unescapeJsonPointer(decodeURIComponent(str));\n}\n\n\nfunction escapeFragment(str) {\n  return encodeURIComponent(escapeJsonPointer(str));\n}\n\n\nfunction escapeJsonPointer(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n\nfunction unescapeJsonPointer(str) {\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/util.js\n")},"./node_modules/ajv/lib/dotjs/_limit.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limit.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $isMax = $keyword == 'maximum',\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\n    $schemaExcl = it.schema[$exclusiveKeyword],\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\n    $op = $isMax ? '<' : '>',\n    $notOp = $isMax ? '>' : '<',\n    $errorKeyword = undefined;\n  if ($isDataExcl) {\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\n      $exclusive = 'exclusive' + $lvl,\n      $exclType = 'exclType' + $lvl,\n      $exclIsNumber = 'exclIsNumber' + $lvl,\n      $opExpr = 'op' + $lvl,\n      $opStr = '\\' + ' + $opExpr + ' + \\'';\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\n    $schemaValueExcl = 'schemaExcl' + $lvl;\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\'boolean\\' && ' + ($exclType) + ' != \\'undefined\\' && ' + ($exclType) + ' != \\'number\\') { ';\n    var $errorKeyword = $exclusiveKeyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || '_exclusiveLimit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'' + ($exclusiveKeyword) + ' should be boolean\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else if ( ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n    }\n    out += ' ' + ($exclType) + ' == \\'number\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\'' + ($op) + '\\' : \\'' + ($op) + '=\\';';\n  } else {\n    var $exclIsNumber = typeof $schemaExcl == 'number',\n      $opStr = $op;\n    if ($exclIsNumber && $isData) {\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\n    } else {\n      if ($exclIsNumber && $schema === undefined) {\n        $exclusive = true;\n        $errorKeyword = $exclusiveKeyword;\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n        $schemaValue = $schemaExcl;\n        $notOp += '=';\n      } else {\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\n          $exclusive = true;\n          $errorKeyword = $exclusiveKeyword;\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\n          $notOp += '=';\n        } else {\n          $exclusive = false;\n          $opStr += '=';\n        }\n      }\n      var $opExpr = '\\'' + $opStr + '\\'';\n      out += ' if ( ';\n      if ($isData) {\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n      }\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\n    }\n  }\n  $errorKeyword = $errorKeyword || $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limit') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be ' + ($opStr) + ' ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limit.js\n")},"./node_modules/ajv/lib/dotjs/_limitItems.js":
/*!***************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limitItems.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxItems' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxItems') {\n        out += 'more';\n      } else {\n        out += 'less';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' items\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRJdGVtcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0SXRlbXMuanM/ZGEzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX19saW1pdEl0ZW1zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZXJyb3JLZXl3b3JkO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxuICAgICRzY2hlbWFWYWx1ZTtcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xuICB9IGVsc2Uge1xuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XG4gIH1cbiAgdmFyICRvcCA9ICRrZXl3b3JkID09ICdtYXhJdGVtcycgPyAnPicgOiAnPCc7XG4gIG91dCArPSAnaWYgKCAnO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnICgnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mICcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT0gXFwnbnVtYmVyXFwnKSB8fCAnO1xuICB9XG4gIG91dCArPSAnICcgKyAoJGRhdGEpICsgJy5sZW5ndGggJyArICgkb3ApICsgJyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnKSB7ICc7XG4gIHZhciAkZXJyb3JLZXl3b3JkID0gJGtleXdvcmQ7XG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgkZXJyb3JLZXl3b3JkIHx8ICdfbGltaXRJdGVtcycpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgbGltaXQ6ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgfSAnO1xuICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgTk9UIGhhdmUgJztcbiAgICAgIGlmICgka2V5d29yZCA9PSAnbWF4SXRlbXMnKSB7XG4gICAgICAgIG91dCArPSAnbW9yZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJ2xlc3MnO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgdGhhbiAnO1xuICAgICAgaWYgKCRpc0RhdGEpIHtcbiAgICAgICAgb3V0ICs9ICdcXCcgKyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICsgXFwnJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnJyArICgkc2NoZW1hKTtcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIGl0ZW1zXFwnICc7XG4gICAgfVxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJ30gJztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limitItems.js\n")},"./node_modules/ajv/lib/dotjs/_limitLength.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limitLength.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxLength' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  if (it.opts.unicode === false) {\n    out += ' ' + ($data) + '.length ';\n  } else {\n    out += ' ucs2length(' + ($data) + ') ';\n  }\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitLength') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT be ';\n      if ($keyword == 'maxLength') {\n        out += 'longer';\n      } else {\n        out += 'shorter';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' characters\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRMZW5ndGguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdExlbmd0aC5qcz85OTA2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfX2xpbWl0TGVuZ3RoKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZXJyb3JLZXl3b3JkO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxuICAgICRzY2hlbWFWYWx1ZTtcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xuICB9IGVsc2Uge1xuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XG4gIH1cbiAgdmFyICRvcCA9ICRrZXl3b3JkID09ICdtYXhMZW5ndGgnID8gJz4nIDogJzwnO1xuICBvdXQgKz0gJ2lmICggJztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ251bWJlclxcJykgfHwgJztcbiAgfVxuICBpZiAoaXQub3B0cy51bmljb2RlID09PSBmYWxzZSkge1xuICAgIG91dCArPSAnICcgKyAoJGRhdGEpICsgJy5sZW5ndGggJztcbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB1Y3MybGVuZ3RoKCcgKyAoJGRhdGEpICsgJykgJztcbiAgfVxuICBvdXQgKz0gJyAnICsgKCRvcCkgKyAnICcgKyAoJHNjaGVtYVZhbHVlKSArICcpIHsgJztcbiAgdmFyICRlcnJvcktleXdvcmQgPSAka2V5d29yZDtcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCRlcnJvcktleXdvcmQgfHwgJ19saW1pdExlbmd0aCcpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgbGltaXQ6ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgfSAnO1xuICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgTk9UIGJlICc7XG4gICAgICBpZiAoJGtleXdvcmQgPT0gJ21heExlbmd0aCcpIHtcbiAgICAgICAgb3V0ICs9ICdsb25nZXInO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICdzaG9ydGVyJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIHRoYW4gJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyBjaGFyYWN0ZXJzXFwnICc7XG4gICAgfVxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJ30gJztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limitLength.js\n")},"./node_modules/ajv/lib/dotjs/_limitProperties.js":
/*!********************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/_limitProperties.js ***!
  \********************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'number\\') || ';\n  }\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\n  var $errorKeyword = $keyword;\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ($errorKeyword || '_limitProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should NOT have ';\n      if ($keyword == 'maxProperties') {\n        out += 'more';\n      } else {\n        out += 'less';\n      }\n      out += ' than ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + ($schema);\n      }\n      out += ' properties\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzLmpzPzc3ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9fbGltaXRQcm9wZXJ0aWVzKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZXJyb3JLZXl3b3JkO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxuICAgICRzY2hlbWFWYWx1ZTtcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xuICB9IGVsc2Uge1xuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XG4gIH1cbiAgdmFyICRvcCA9ICRrZXl3b3JkID09ICdtYXhQcm9wZXJ0aWVzJyA/ICc+JyA6ICc8JztcbiAgb3V0ICs9ICdpZiAoICc7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPSBcXCdudW1iZXJcXCcpIHx8ICc7XG4gIH1cbiAgb3V0ICs9ICcgT2JqZWN0LmtleXMoJyArICgkZGF0YSkgKyAnKS5sZW5ndGggJyArICgkb3ApICsgJyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnKSB7ICc7XG4gIHZhciAkZXJyb3JLZXl3b3JkID0gJGtleXdvcmQ7XG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgkZXJyb3JLZXl3b3JkIHx8ICdfbGltaXRQcm9wZXJ0aWVzJykgKyAnXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXCdcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBsaW1pdDogJyArICgkc2NoZW1hVmFsdWUpICsgJyB9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBOT1QgaGF2ZSAnO1xuICAgICAgaWYgKCRrZXl3b3JkID09ICdtYXhQcm9wZXJ0aWVzJykge1xuICAgICAgICBvdXQgKz0gJ21vcmUnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICdsZXNzJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIHRoYW4gJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyBwcm9wZXJ0aWVzXFwnICc7XG4gICAgfVxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJ30gJztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limitProperties.js\n")},"./node_modules/ajv/lib/dotjs/allOf.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/allOf.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $currentBaseId = $it.baseId,\n    $allSchemasEmpty = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $allSchemasEmpty = false;\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    if ($allSchemasEmpty) {\n      out += ' if (true) { ';\n    } else {\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\n    }\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9hbGxPZi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYWxsT2YuanM/ZWEwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2FsbE9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcbiAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJGtleXdvcmQpO1xuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIHZhciAkY3VycmVudEJhc2VJZCA9ICRpdC5iYXNlSWQsXG4gICAgJGFsbFNjaGVtYXNFbXB0eSA9IHRydWU7XG4gIHZhciBhcnIxID0gJHNjaGVtYTtcbiAgaWYgKGFycjEpIHtcbiAgICB2YXIgJHNjaCwgJGkgPSAtMSxcbiAgICAgIGwxID0gYXJyMS5sZW5ndGggLSAxO1xuICAgIHdoaWxlICgkaSA8IGwxKSB7XG4gICAgICAkc2NoID0gYXJyMVskaSArPSAxXTtcbiAgICAgIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2gsIGl0LlJVTEVTLmFsbCkpIHtcbiAgICAgICAgJGFsbFNjaGVtYXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcbiAgICAgICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aCArICdbJyArICRpICsgJ10nO1xuICAgICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoICsgJy8nICsgJGk7XG4gICAgICAgIG91dCArPSAnICAnICsgKGl0LnZhbGlkYXRlKCRpdCkpICsgJyAnO1xuICAgICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XG4gICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XG4gICAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgaWYgKCRhbGxTY2hlbWFzRW1wdHkpIHtcbiAgICAgIG91dCArPSAnIGlmICh0cnVlKSB7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnICcgKyAoJGNsb3NpbmdCcmFjZXMuc2xpY2UoMCwgLTEpKSArICcgJztcbiAgICB9XG4gIH1cbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/allOf.js\n")},"./node_modules/ajv/lib/dotjs/anyOf.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/anyOf.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $noEmptySchema = $schema.every(function($sch) {\n    return it.util.schemaHasRules($sch, it.RULES.all);\n  });\n  if ($noEmptySchema) {\n    var $currentBaseId = $it.baseId;\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('anyOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should match some schema in anyOf\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n    out = it.util.cleanUpCode(out);\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9hbnlPZi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYW55T2YuanM/NjBmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2FueU9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIHZhciAkbm9FbXB0eVNjaGVtYSA9ICRzY2hlbWEuZXZlcnkoZnVuY3Rpb24oJHNjaCkge1xuICAgIHJldHVybiBpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2gsIGl0LlJVTEVTLmFsbCk7XG4gIH0pO1xuICBpZiAoJG5vRW1wdHlTY2hlbWEpIHtcbiAgICB2YXIgJGN1cnJlbnRCYXNlSWQgPSAkaXQuYmFzZUlkO1xuICAgIG91dCArPSAnIHZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7IHZhciAnICsgKCR2YWxpZCkgKyAnID0gZmFsc2U7ICAnO1xuICAgIHZhciAkd2FzQ29tcG9zaXRlID0gaXQuY29tcG9zaXRlUnVsZTtcbiAgICBpdC5jb21wb3NpdGVSdWxlID0gJGl0LmNvbXBvc2l0ZVJ1bGUgPSB0cnVlO1xuICAgIHZhciBhcnIxID0gJHNjaGVtYTtcbiAgICBpZiAoYXJyMSkge1xuICAgICAgdmFyICRzY2gsICRpID0gLTEsXG4gICAgICAgIGwxID0gYXJyMS5sZW5ndGggLSAxO1xuICAgICAgd2hpbGUgKCRpIDwgbDEpIHtcbiAgICAgICAgJHNjaCA9IGFycjFbJGkgKz0gMV07XG4gICAgICAgICRpdC5zY2hlbWEgPSAkc2NoO1xuICAgICAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoICsgJ1snICsgJGkgKyAnXSc7XG4gICAgICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGggKyAnLycgKyAkaTtcbiAgICAgICAgb3V0ICs9ICcgICcgKyAoaXQudmFsaWRhdGUoJGl0KSkgKyAnICc7XG4gICAgICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcbiAgICAgICAgb3V0ICs9ICcgJyArICgkdmFsaWQpICsgJyA9ICcgKyAoJHZhbGlkKSArICcgfHwgJyArICgkbmV4dFZhbGlkKSArICc7IGlmICghJyArICgkdmFsaWQpICsgJykgeyAnO1xuICAgICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XG4gICAgICB9XG4gICAgfVxuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XG4gICAgb3V0ICs9ICcgJyArICgkY2xvc2luZ0JyYWNlcykgKyAnIGlmICghJyArICgkdmFsaWQpICsgJykgeyAgIHZhciBlcnIgPSAgICc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgnYW55T2YnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7fSAnO1xuICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIG1hdGNoIHNvbWUgc2NoZW1hIGluIGFueU9mXFwnICc7XG4gICAgICB9XG4gICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyB9ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgfVxuICAgIG91dCArPSAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcih2RXJyb3JzKTsgJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IHZFcnJvcnM7IHJldHVybiBmYWxzZTsgJztcbiAgICAgIH1cbiAgICB9XG4gICAgb3V0ICs9ICcgfSBlbHNlIHsgIGVycm9ycyA9ICcgKyAoJGVycnMpICsgJzsgaWYgKHZFcnJvcnMgIT09IG51bGwpIHsgaWYgKCcgKyAoJGVycnMpICsgJykgdkVycm9ycy5sZW5ndGggPSAnICsgKCRlcnJzKSArICc7IGVsc2UgdkVycm9ycyA9IG51bGw7IH0gJztcbiAgICBpZiAoaXQub3B0cy5hbGxFcnJvcnMpIHtcbiAgICAgIG91dCArPSAnIH0gJztcbiAgICB9XG4gICAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xuICB9IGVsc2Uge1xuICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICBvdXQgKz0gJyBpZiAodHJ1ZSkgeyAnO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/anyOf.js\n")},"./node_modules/ajv/lib/dotjs/const.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/const.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (!$isData) {\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('const') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to constant\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jb25zdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY29uc3QuanM/MDMwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2NvbnN0KGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcbiAgICAkc2NoZW1hVmFsdWU7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcbiAgfSBlbHNlIHtcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xuICB9XG4gIGlmICghJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJzsnO1xuICB9XG4gIG91dCArPSAndmFyICcgKyAoJHZhbGlkKSArICcgPSBlcXVhbCgnICsgKCRkYXRhKSArICcsIHNjaGVtYScgKyAoJGx2bCkgKyAnKTsgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgJztcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCdjb25zdCcpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBiZSBlcXVhbCB0byBjb25zdGFudFxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJyB9JztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/const.js\n")},"./node_modules/ajv/lib/dotjs/contains.js":
/*!************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/contains.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId,\n    $nonEmptySchema = it.util.schemaHasRules($schema, it.RULES.all);\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($nonEmptySchema) {\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    out += ' if (' + ($nextValid) + ') break; }  ';\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\n  } else {\n    out += ' if (' + ($data) + '.length == 0) {';\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('contains') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should contain a valid item\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } else { ';\n  if ($nonEmptySchema) {\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n  }\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jb250YWlucy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY29udGFpbnMuanM/NWNmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2NvbnRhaW5zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIHZhciAkaWR4ID0gJ2knICsgJGx2bCxcbiAgICAkZGF0YU54dCA9ICRpdC5kYXRhTGV2ZWwgPSBpdC5kYXRhTGV2ZWwgKyAxLFxuICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxuICAgICRjdXJyZW50QmFzZUlkID0gaXQuYmFzZUlkLFxuICAgICRub25FbXB0eVNjaGVtYSA9IGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaGVtYSwgaXQuUlVMRVMuYWxsKTtcbiAgb3V0ICs9ICd2YXIgJyArICgkZXJycykgKyAnID0gZXJyb3JzO3ZhciAnICsgKCR2YWxpZCkgKyAnOyc7XG4gIGlmICgkbm9uRW1wdHlTY2hlbWEpIHtcbiAgICB2YXIgJHdhc0NvbXBvc2l0ZSA9IGl0LmNvbXBvc2l0ZVJ1bGU7XG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcbiAgICAkaXQuc2NoZW1hID0gJHNjaGVtYTtcbiAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoO1xuICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHRWYWxpZCkgKyAnID0gZmFsc2U7IGZvciAodmFyICcgKyAoJGlkeCkgKyAnID0gMDsgJyArICgkaWR4KSArICcgPCAnICsgKCRkYXRhKSArICcubGVuZ3RoOyAnICsgKCRpZHgpICsgJysrKSB7ICc7XG4gICAgJGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aEV4cHIoaXQuZXJyb3JQYXRoLCAkaWR4LCBpdC5vcHRzLmpzb25Qb2ludGVycywgdHJ1ZSk7XG4gICAgdmFyICRwYXNzRGF0YSA9ICRkYXRhICsgJ1snICsgJGlkeCArICddJztcbiAgICAkaXQuZGF0YVBhdGhBcnJbJGRhdGFOeHRdID0gJGlkeDtcbiAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xuICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcbiAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xuICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XG4gICAgfVxuICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJykgYnJlYWs7IH0gICc7XG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gJHdhc0NvbXBvc2l0ZTtcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgeyc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcgaWYgKCcgKyAoJGRhdGEpICsgJy5sZW5ndGggPT0gMCkgeyc7XG4gIH1cbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCdjb250YWlucycpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBjb250YWluIGEgdmFsaWQgaXRlbVxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJyB9IGVsc2UgeyAnO1xuICBpZiAoJG5vbkVtcHR5U2NoZW1hKSB7XG4gICAgb3V0ICs9ICcgIGVycm9ycyA9ICcgKyAoJGVycnMpICsgJzsgaWYgKHZFcnJvcnMgIT09IG51bGwpIHsgaWYgKCcgKyAoJGVycnMpICsgJykgdkVycm9ycy5sZW5ndGggPSAnICsgKCRlcnJzKSArICc7IGVsc2UgdkVycm9ycyA9IG51bGw7IH0gJztcbiAgfVxuICBpZiAoaXQub3B0cy5hbGxFcnJvcnMpIHtcbiAgICBvdXQgKz0gJyB9ICc7XG4gIH1cbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/contains.js\n")},"./node_modules/ajv/lib/dotjs/custom.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/custom.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $errorKeyword;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $rule = this,\n    $definition = 'definition' + $lvl,\n    $rDef = $rule.definition,\n    $closingBraces = '';\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\n  if ($isData && $rDef.$data) {\n    $validateCode = 'keywordValidate' + $lvl;\n    var $validateSchema = $rDef.validateSchema;\n    out += ' var ' + ($definition) + ' = RULES.custom[\\'' + ($keyword) + '\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\n  } else {\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\n    if (!$ruleValidate) return;\n    $schemaValue = 'validate.schema' + $schemaPath;\n    $validateCode = $ruleValidate.code;\n    $compile = $rDef.compile;\n    $inline = $rDef.inline;\n    $macro = $rDef.macro;\n  }\n  var $ruleErrs = $validateCode + '.errors',\n    $i = 'i' + $lvl,\n    $ruleErr = 'ruleErr' + $lvl,\n    $asyncKeyword = $rDef.async;\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\n  if (!($inline || $macro)) {\n    out += '' + ($ruleErrs) + ' = null;';\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if ($isData && $rDef.$data) {\n    $closingBraces += '}';\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\n    if ($validateSchema) {\n      $closingBraces += '}';\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\n    }\n  }\n  if ($inline) {\n    if ($rDef.statements) {\n      out += ' ' + ($ruleValidate.validate) + ' ';\n    } else {\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\n    }\n  } else if ($macro) {\n    var $it = it.util.copy(it);\n    var $closingBraces = '';\n    $it.level++;\n    var $nextValid = 'valid' + $it.level;\n    $it.schema = $ruleValidate.validate;\n    $it.schemaPath = '';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it).replace(/validate\\.schema/g, $validateCode);\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' ' + ($code);\n  } else {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    out += '  ' + ($validateCode) + '.call( ';\n    if (it.opts.passContext) {\n      out += 'this';\n    } else {\n      out += 'self';\n    }\n    if ($compile || $rDef.schema === false) {\n      out += ' , ' + ($data) + ' ';\n    } else {\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\n    }\n    out += ' , (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\n    var def_callRuleValidate = out;\n    out = $$outStack.pop();\n    if ($rDef.errors === false) {\n      out += ' ' + ($valid) + ' = ';\n      if ($asyncKeyword) {\n        out += '' + (it.yieldAwait);\n      }\n      out += '' + (def_callRuleValidate) + '; ';\n    } else {\n      if ($asyncKeyword) {\n        $ruleErrs = 'customErrors' + $lvl;\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = ' + (it.yieldAwait) + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\n      } else {\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\n      }\n    }\n  }\n  if ($rDef.modifying) {\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\n  }\n  out += '' + ($closingBraces);\n  if ($rDef.valid) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  } else {\n    out += ' if ( ';\n    if ($rDef.valid === undefined) {\n      out += ' !';\n      if ($macro) {\n        out += '' + ($nextValid);\n      } else {\n        out += '' + ($valid);\n      }\n    } else {\n      out += ' ' + (!$rDef.valid) + ' ';\n    }\n    out += ') { ';\n    $errorKeyword = $rule.keyword;\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    var def_customError = out;\n    out = $$outStack.pop();\n    if ($inline) {\n      if ($rDef.errors) {\n        if ($rDef.errors != 'full') {\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } ';\n        }\n      } else {\n        if ($rDef.errors === false) {\n          out += ' ' + (def_customError) + ' ';\n        } else {\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\"; } ';\n          if (it.opts.verbose) {\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n          }\n          out += ' } } ';\n        }\n      }\n    } else if ($macro) {\n      out += '   var err =   '; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'custom') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\'' + ($rule.keyword) + '\\' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should pass \"' + ($rule.keyword) + '\" keyword validation\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError(vErrors); ';\n        } else {\n          out += ' validate.errors = vErrors; return false; ';\n        }\n      }\n    } else {\n      if ($rDef.errors === false) {\n        out += ' ' + (def_customError) + ' ';\n      } else {\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\'\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \"' + ($errSchemaPath) + '\";  ';\n        if (it.opts.verbose) {\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\n        }\n        out += ' } } else { ' + (def_customError) + ' } ';\n      }\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/custom.js\n")},"./node_modules/ajv/lib/dotjs/dependencies.js":
/*!****************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/dependencies.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $schemaDeps = {},\n    $propertyDeps = {},\n    $ownProperties = it.opts.ownProperties;\n  for ($property in $schema) {\n    var $sch = $schema[$property];\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\n    $deps[$property] = $sch;\n  }\n  out += 'var ' + ($errs) + ' = errors;';\n  var $currentErrorPath = it.errorPath;\n  out += 'var missing' + ($lvl) + ';';\n  for (var $property in $propertyDeps) {\n    $deps = $propertyDeps[$property];\n    if ($deps.length) {\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      if ($breakOnError) {\n        out += ' && ( ';\n        var arr1 = $deps;\n        if (arr1) {\n          var $propertyKey, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $propertyKey = arr1[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ')) {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should have ';\n            if ($deps.length == 1) {\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\n            } else {\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n            }\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      } else {\n        out += ' ) { ';\n        var arr2 = $deps;\n        if (arr2) {\n          var $propertyKey, i2 = -1,\n            l2 = arr2.length - 1;\n          while (i2 < l2) {\n            $propertyKey = arr2[i2 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('dependencies') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\'' + (it.util.escapeQuotes($property)) + '\\', missingProperty: \\'' + ($missingProperty) + '\\', depsCount: ' + ($deps.length) + ', deps: \\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\", \"))) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should have ';\n                if ($deps.length == 1) {\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\n                } else {\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\", \")));\n                }\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n      out += ' }   ';\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n  }\n  it.errorPath = $currentErrorPath;\n  var $currentBaseId = $it.baseId;\n  for (var $property in $schemaDeps) {\n    var $sch = $schemaDeps[$property];\n    if (it.util.schemaHasRules($sch, it.RULES.all)) {\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\n      if ($ownProperties) {\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($property)) + '\\') ';\n      }\n      out += ') { ';\n      $it.schema = $sch;\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\n      out += '  ' + (it.validate($it)) + ' ';\n      $it.baseId = $currentBaseId;\n      out += ' }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/dependencies.js\n")},"./node_modules/ajv/lib/dotjs/enum.js":
/*!********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/enum.js ***!
  \********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $i = 'i' + $lvl,\n    $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\n  }\n  out += 'var ' + ($valid) + ';';\n  if ($isData) {\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n  }\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\n  if ($isData) {\n    out += '  }  ';\n  }\n  out += ' if (!' + ($valid) + ') {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('enum') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be equal to one of the allowed values\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' }';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9lbnVtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9lbnVtLmpzP2U4YzIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9lbnVtKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcbiAgICAkc2NoZW1hVmFsdWU7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcbiAgfSBlbHNlIHtcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xuICB9XG4gIHZhciAkaSA9ICdpJyArICRsdmwsXG4gICAgJHZTY2hlbWEgPSAnc2NoZW1hJyArICRsdmw7XG4gIGlmICghJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciAnICsgKCR2U2NoZW1hKSArICcgPSB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICc7JztcbiAgfVxuICBvdXQgKz0gJ3ZhciAnICsgKCR2YWxpZCkgKyAnOyc7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgaWYgKHNjaGVtYScgKyAoJGx2bCkgKyAnID09PSB1bmRlZmluZWQpICcgKyAoJHZhbGlkKSArICcgPSB0cnVlOyBlbHNlIGlmICghQXJyYXkuaXNBcnJheShzY2hlbWEnICsgKCRsdmwpICsgJykpICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgZWxzZSB7JztcbiAgfVxuICBvdXQgKz0gJycgKyAoJHZhbGlkKSArICcgPSBmYWxzZTtmb3IgKHZhciAnICsgKCRpKSArICc9MDsgJyArICgkaSkgKyAnPCcgKyAoJHZTY2hlbWEpICsgJy5sZW5ndGg7ICcgKyAoJGkpICsgJysrKSBpZiAoZXF1YWwoJyArICgkZGF0YSkgKyAnLCAnICsgKCR2U2NoZW1hKSArICdbJyArICgkaSkgKyAnXSkpIHsgJyArICgkdmFsaWQpICsgJyA9IHRydWU7IGJyZWFrOyB9JztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAgfSAgJztcbiAgfVxuICBvdXQgKz0gJyBpZiAoIScgKyAoJHZhbGlkKSArICcpIHsgICAnO1xuICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XG4gICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ2VudW0nKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IGFsbG93ZWRWYWx1ZXM6IHNjaGVtYScgKyAoJGx2bCkgKyAnIH0gJztcbiAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIGJlIGVxdWFsIHRvIG9uZSBvZiB0aGUgYWxsb3dlZCB2YWx1ZXNcXCcgJztcbiAgICB9XG4gICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xuICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICB9XG4gICAgb3V0ICs9ICcgfSAnO1xuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHt9ICc7XG4gIH1cbiAgdmFyIF9fZXJyID0gb3V0O1xuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gIH1cbiAgb3V0ICs9ICcgfSc7XG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/enum.js\n")},"./node_modules/ajv/lib/dotjs/format.js":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/format.js ***!
  \**********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  if (it.opts.format === false) {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n    return out;\n  }\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $unknownFormats = it.opts.unknownFormats,\n    $allowUnknown = Array.isArray($unknownFormats);\n  if ($isData) {\n    var $format = 'format' + $lvl,\n      $isObject = 'isObject' + $lvl,\n      $formatType = 'formatType' + $lvl;\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\'object\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\'string\\'; if (' + ($isObject) + ') { ';\n    if (it.async) {\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\n    }\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\n    if ($isData) {\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n    }\n    out += ' (';\n    if ($unknownFormats != 'ignore') {\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\n      if ($allowUnknown) {\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\n      }\n      out += ') || ';\n    }\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\'' + ($ruleType) + '\\' && !(typeof ' + ($format) + ' == \\'function\\' ? ';\n    if (it.async) {\n      out += ' (async' + ($lvl) + ' ? ' + (it.yieldAwait) + ' ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\n    } else {\n      out += ' ' + ($format) + '(' + ($data) + ') ';\n    }\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\n  } else {\n    var $format = it.formats[$schema];\n    if (!$format) {\n      if ($unknownFormats == 'ignore') {\n        console.warn('unknown format \"' + $schema + '\" ignored in schema at path \"' + it.errSchemaPath + '\"');\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n        return out;\n      } else {\n        throw new Error('unknown format \"' + $schema + '\" is used in schema at path \"' + it.errSchemaPath + '\"');\n      }\n    }\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\n    var $formatType = $isObject && $format.type || 'string';\n    if ($isObject) {\n      var $async = $format.async === true;\n      $format = $format.validate;\n    }\n    if ($formatType != $ruleType) {\n      if ($breakOnError) {\n        out += ' if (true) { ';\n      }\n      return out;\n    }\n    if ($async) {\n      if (!it.async) throw new Error('async format in sync schema');\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\n      out += ' if (!(' + (it.yieldAwait) + ' ' + ($formatRef) + '(' + ($data) + '))) { ';\n    } else {\n      out += ' if (! ';\n      var $formatRef = 'formats' + it.util.getProperty($schema);\n      if ($isObject) $formatRef += '.validate';\n      if (typeof $format == 'function') {\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\n      } else {\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\n      }\n      out += ') { ';\n    }\n  }\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('format') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match format \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += ' } ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/format.js\n")},"./node_modules/ajv/lib/dotjs/items.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/items.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $idx = 'i' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $currentBaseId = it.baseId;\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\n  if (Array.isArray($schema)) {\n    var $additionalItems = it.schema.additionalItems;\n    if ($additionalItems === false) {\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\n      var $currErrSchemaPath = $errSchemaPath;\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += '  if (!' + ($valid) + ') {   ';\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ('additionalItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'should NOT have more than ' + ($schema.length) + ' items\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n      out += ' } ';\n      $errSchemaPath = $currErrSchemaPath;\n      if ($breakOnError) {\n        $closingBraces += '}';\n        out += ' else { ';\n      }\n    }\n    var arr1 = $schema;\n    if (arr1) {\n      var $sch, $i = -1,\n        l1 = arr1.length - 1;\n      while ($i < l1) {\n        $sch = arr1[$i += 1];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\n          var $passData = $data + '[' + $i + ']';\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\n          $it.dataPathArr[$dataNxt] = $i;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {\n      $it.schema = $additionalItems;\n      $it.schemaPath = it.schemaPath + '.additionalItems';\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n      var $passData = $data + '[' + $idx + ']';\n      $it.dataPathArr[$dataNxt] = $idx;\n      var $code = it.validate($it);\n      $it.baseId = $currentBaseId;\n      if (it.util.varOccurences($code, $nextData) < 2) {\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n      } else {\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n      }\n      if ($breakOnError) {\n        out += ' if (!' + ($nextValid) + ') break; ';\n      }\n      out += ' } }  ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n        $closingBraces += '}';\n      }\n    }\n  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\n    var $passData = $data + '[' + $idx + ']';\n    $it.dataPathArr[$dataNxt] = $idx;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    if ($breakOnError) {\n      out += ' if (!' + ($nextValid) + ') break; ';\n    }\n    out += ' }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9pdGVtcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvaXRlbXMuanM/Nzk4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2l0ZW1zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIHZhciAkaWR4ID0gJ2knICsgJGx2bCxcbiAgICAkZGF0YU54dCA9ICRpdC5kYXRhTGV2ZWwgPSBpdC5kYXRhTGV2ZWwgKyAxLFxuICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxuICAgICRjdXJyZW50QmFzZUlkID0gaXQuYmFzZUlkO1xuICBvdXQgKz0gJ3ZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7dmFyICcgKyAoJHZhbGlkKSArICc7JztcbiAgaWYgKEFycmF5LmlzQXJyYXkoJHNjaGVtYSkpIHtcbiAgICB2YXIgJGFkZGl0aW9uYWxJdGVtcyA9IGl0LnNjaGVtYS5hZGRpdGlvbmFsSXRlbXM7XG4gICAgaWYgKCRhZGRpdGlvbmFsSXRlbXMgPT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gJyArICgkZGF0YSkgKyAnLmxlbmd0aCA8PSAnICsgKCRzY2hlbWEubGVuZ3RoKSArICc7ICc7XG4gICAgICB2YXIgJGN1cnJFcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XG4gICAgICAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnL2FkZGl0aW9uYWxJdGVtcyc7XG4gICAgICBvdXQgKz0gJyAgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgJztcbiAgICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICAgICAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ2FkZGl0aW9uYWxJdGVtcycpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgbGltaXQ6ICcgKyAoJHNjaGVtYS5sZW5ndGgpICsgJyB9ICc7XG4gICAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIE5PVCBoYXZlIG1vcmUgdGhhbiAnICsgKCRzY2hlbWEubGVuZ3RoKSArICcgaXRlbXNcXCcgJztcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IGZhbHNlICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgICAgICB9XG4gICAgICAgIG91dCArPSAnIH0gJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgICB9XG4gICAgICB2YXIgX19lcnIgPSBvdXQ7XG4gICAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICAgIGlmIChpdC5hc3luYykge1xuICAgICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIH0gJztcbiAgICAgICRlcnJTY2hlbWFQYXRoID0gJGN1cnJFcnJTY2hlbWFQYXRoO1xuICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xuICAgICAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIGFycjEgPSAkc2NoZW1hO1xuICAgIGlmIChhcnIxKSB7XG4gICAgICB2YXIgJHNjaCwgJGkgPSAtMSxcbiAgICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XG4gICAgICB3aGlsZSAoJGkgPCBsMSkge1xuICAgICAgICAkc2NoID0gYXJyMVskaSArPSAxXTtcbiAgICAgICAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKSkge1xuICAgICAgICAgIG91dCArPSAnICcgKyAoJG5leHRWYWxpZCkgKyAnID0gdHJ1ZTsgaWYgKCcgKyAoJGRhdGEpICsgJy5sZW5ndGggPiAnICsgKCRpKSArICcpIHsgJztcbiAgICAgICAgICB2YXIgJHBhc3NEYXRhID0gJGRhdGEgKyAnWycgKyAkaSArICddJztcbiAgICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcbiAgICAgICAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoICsgJ1snICsgJGkgKyAnXSc7XG4gICAgICAgICAgJGl0LmVyclNjaGVtYVBhdGggPSAkZXJyU2NoZW1hUGF0aCArICcvJyArICRpO1xuICAgICAgICAgICRpdC5lcnJvclBhdGggPSBpdC51dGlsLmdldFBhdGhFeHByKGl0LmVycm9yUGF0aCwgJGksIGl0Lm9wdHMuanNvblBvaW50ZXJzLCB0cnVlKTtcbiAgICAgICAgICAkaXQuZGF0YVBhdGhBcnJbJGRhdGFOeHRdID0gJGk7XG4gICAgICAgICAgdmFyICRjb2RlID0gaXQudmFsaWRhdGUoJGl0KTtcbiAgICAgICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XG4gICAgICAgICAgaWYgKGl0LnV0aWwudmFyT2NjdXJlbmNlcygkY29kZSwgJG5leHREYXRhKSA8IDIpIHtcbiAgICAgICAgICAgIG91dCArPSAnICcgKyAoaXQudXRpbC52YXJSZXBsYWNlKCRjb2RlLCAkbmV4dERhdGEsICRwYXNzRGF0YSkpICsgJyAnO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkbmV4dERhdGEpICsgJyA9ICcgKyAoJHBhc3NEYXRhKSArICc7ICcgKyAoJGNvZGUpICsgJyAnO1xuICAgICAgICAgIH1cbiAgICAgICAgICBvdXQgKz0gJyB9ICAnO1xuICAgICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkbmV4dFZhbGlkKSArICcpIHsgJztcbiAgICAgICAgICAgICRjbG9zaW5nQnJhY2VzICs9ICd9JztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHR5cGVvZiAkYWRkaXRpb25hbEl0ZW1zID09ICdvYmplY3QnICYmIGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJGFkZGl0aW9uYWxJdGVtcywgaXQuUlVMRVMuYWxsKSkge1xuICAgICAgJGl0LnNjaGVtYSA9ICRhZGRpdGlvbmFsSXRlbXM7XG4gICAgICAkaXQuc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyAnLmFkZGl0aW9uYWxJdGVtcyc7XG4gICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnL2FkZGl0aW9uYWxJdGVtcyc7XG4gICAgICBvdXQgKz0gJyAnICsgKCRuZXh0VmFsaWQpICsgJyA9IHRydWU7IGlmICgnICsgKCRkYXRhKSArICcubGVuZ3RoID4gJyArICgkc2NoZW1hLmxlbmd0aCkgKyAnKSB7ICBmb3IgKHZhciAnICsgKCRpZHgpICsgJyA9ICcgKyAoJHNjaGVtYS5sZW5ndGgpICsgJzsgJyArICgkaWR4KSArICcgPCAnICsgKCRkYXRhKSArICcubGVuZ3RoOyAnICsgKCRpZHgpICsgJysrKSB7ICc7XG4gICAgICAkaXQuZXJyb3JQYXRoID0gaXQudXRpbC5nZXRQYXRoRXhwcihpdC5lcnJvclBhdGgsICRpZHgsIGl0Lm9wdHMuanNvblBvaW50ZXJzLCB0cnVlKTtcbiAgICAgIHZhciAkcGFzc0RhdGEgPSAkZGF0YSArICdbJyArICRpZHggKyAnXSc7XG4gICAgICAkaXQuZGF0YVBhdGhBcnJbJGRhdGFOeHRdID0gJGlkeDtcbiAgICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCk7XG4gICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XG4gICAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xuICAgICAgICBvdXQgKz0gJyAnICsgKGl0LnV0aWwudmFyUmVwbGFjZSgkY29kZSwgJG5leHREYXRhLCAkcGFzc0RhdGEpKSArICcgJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XG4gICAgICB9XG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgICBvdXQgKz0gJyBpZiAoIScgKyAoJG5leHRWYWxpZCkgKyAnKSBicmVhazsgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIH0gfSAgJztcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJykgeyAnO1xuICAgICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XG4gICAgICB9XG4gICAgfVxuICB9IGVsc2UgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaGVtYSwgaXQuUlVMRVMuYWxsKSkge1xuICAgICRpdC5zY2hlbWEgPSAkc2NoZW1hO1xuICAgICRpdC5zY2hlbWFQYXRoID0gJHNjaGVtYVBhdGg7XG4gICAgJGl0LmVyclNjaGVtYVBhdGggPSAkZXJyU2NoZW1hUGF0aDtcbiAgICBvdXQgKz0gJyAgZm9yICh2YXIgJyArICgkaWR4KSArICcgPSAnICsgKDApICsgJzsgJyArICgkaWR4KSArICcgPCAnICsgKCRkYXRhKSArICcubGVuZ3RoOyAnICsgKCRpZHgpICsgJysrKSB7ICc7XG4gICAgJGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aEV4cHIoaXQuZXJyb3JQYXRoLCAkaWR4LCBpdC5vcHRzLmpzb25Qb2ludGVycywgdHJ1ZSk7XG4gICAgdmFyICRwYXNzRGF0YSA9ICRkYXRhICsgJ1snICsgJGlkeCArICddJztcbiAgICAkaXQuZGF0YVBhdGhBcnJbJGRhdGFOeHRdID0gJGlkeDtcbiAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xuICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcbiAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xuICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XG4gICAgfVxuICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICBvdXQgKz0gJyBpZiAoIScgKyAoJG5leHRWYWxpZCkgKyAnKSBicmVhazsgJztcbiAgICB9XG4gICAgb3V0ICs9ICcgfSc7XG4gIH1cbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCcgKyAoJGVycnMpICsgJyA9PSBlcnJvcnMpIHsnO1xuICB9XG4gIG91dCA9IGl0LnV0aWwuY2xlYW5VcENvZGUob3V0KTtcbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/items.js\n")},"./node_modules/ajv/lib/dotjs/multipleOf.js":
/*!**************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/multipleOf.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  out += 'var division' + ($lvl) + ';if (';\n  if ($isData) {\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\'number\\' || ';\n  }\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\n  if (it.opts.multipleOfPrecision) {\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\n  } else {\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\n  }\n  out += ' ) ';\n  if ($isData) {\n    out += '  )  ';\n  }\n  out += ' ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('multipleOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should be multiple of ';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue);\n      } else {\n        out += '' + ($schemaValue) + '\\'';\n      }\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + ($schema);\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9tdWx0aXBsZU9mLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9tdWx0aXBsZU9mLmpzP2E5MzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9tdWx0aXBsZU9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXG4gICAgJHNjaGVtYVZhbHVlO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XG4gIH0gZWxzZSB7XG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcbiAgfVxuICBvdXQgKz0gJ3ZhciBkaXZpc2lvbicgKyAoJGx2bCkgKyAnO2lmICgnO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnICcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT09IHVuZGVmaW5lZCAmJiAoIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ251bWJlclxcJyB8fCAnO1xuICB9XG4gIG91dCArPSAnIChkaXZpc2lvbicgKyAoJGx2bCkgKyAnID0gJyArICgkZGF0YSkgKyAnIC8gJyArICgkc2NoZW1hVmFsdWUpICsgJywgJztcbiAgaWYgKGl0Lm9wdHMubXVsdGlwbGVPZlByZWNpc2lvbikge1xuICAgIG91dCArPSAnIE1hdGguYWJzKE1hdGgucm91bmQoZGl2aXNpb24nICsgKCRsdmwpICsgJykgLSBkaXZpc2lvbicgKyAoJGx2bCkgKyAnKSA+IDFlLScgKyAoaXQub3B0cy5tdWx0aXBsZU9mUHJlY2lzaW9uKSArICcgJztcbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyBkaXZpc2lvbicgKyAoJGx2bCkgKyAnICE9PSBwYXJzZUludChkaXZpc2lvbicgKyAoJGx2bCkgKyAnKSAnO1xuICB9XG4gIG91dCArPSAnICkgJztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAgKSAgJztcbiAgfVxuICBvdXQgKz0gJyApIHsgICAnO1xuICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XG4gICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ211bHRpcGxlT2YnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IG11bHRpcGxlT2Y6ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgfSAnO1xuICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgYmUgbXVsdGlwbGUgb2YgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWFWYWx1ZSkgKyAnXFwnJztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xuICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6ICAnO1xuICAgICAgaWYgKCRpc0RhdGEpIHtcbiAgICAgICAgb3V0ICs9ICd2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnJyArICgkc2NoZW1hKTtcbiAgICAgIH1cbiAgICAgIG91dCArPSAnICAgICAgICAgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgfVxuICAgIG91dCArPSAnIH0gJztcbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB7fSAnO1xuICB9XG4gIHZhciBfX2VyciA9IG91dDtcbiAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcbiAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKGl0LmFzeW5jKSB7XG4gICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICB9XG4gIG91dCArPSAnfSAnO1xuICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgIG91dCArPSAnIGVsc2UgeyAnO1xuICB9XG4gIHJldHVybiBvdXQ7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/multipleOf.js\n")},"./node_modules/ajv/lib/dotjs/not.js":
/*!*******************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/not.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    out += ' var ' + ($errs) + ' = errors;  ';\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    $it.createErrors = false;\n    var $allErrorsOption;\n    if ($it.opts.allErrors) {\n      $allErrorsOption = $it.opts.allErrors;\n      $it.opts.allErrors = false;\n    }\n    out += ' ' + (it.validate($it)) + ' ';\n    $it.createErrors = true;\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (' + ($nextValid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\n    if (it.opts.allErrors) {\n      out += ' } ';\n    }\n  } else {\n    out += '  var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('not') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT be valid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if ($breakOnError) {\n      out += ' if (false) { ';\n    }\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9ub3QuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL25vdC5qcz8wMGY1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfbm90KGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkZXJycyA9ICdlcnJzX18nICsgJGx2bDtcbiAgdmFyICRpdCA9IGl0LnV0aWwuY29weShpdCk7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2hlbWEsIGl0LlJVTEVTLmFsbCkpIHtcbiAgICAkaXQuc2NoZW1hID0gJHNjaGVtYTtcbiAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoO1xuICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJGVycnMpICsgJyA9IGVycm9yczsgICc7XG4gICAgdmFyICR3YXNDb21wb3NpdGUgPSBpdC5jb21wb3NpdGVSdWxlO1xuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9IHRydWU7XG4gICAgJGl0LmNyZWF0ZUVycm9ycyA9IGZhbHNlO1xuICAgIHZhciAkYWxsRXJyb3JzT3B0aW9uO1xuICAgIGlmICgkaXQub3B0cy5hbGxFcnJvcnMpIHtcbiAgICAgICRhbGxFcnJvcnNPcHRpb24gPSAkaXQub3B0cy5hbGxFcnJvcnM7XG4gICAgICAkaXQub3B0cy5hbGxFcnJvcnMgPSBmYWxzZTtcbiAgICB9XG4gICAgb3V0ICs9ICcgJyArIChpdC52YWxpZGF0ZSgkaXQpKSArICcgJztcbiAgICAkaXQuY3JlYXRlRXJyb3JzID0gdHJ1ZTtcbiAgICBpZiAoJGFsbEVycm9yc09wdGlvbikgJGl0Lm9wdHMuYWxsRXJyb3JzID0gJGFsbEVycm9yc09wdGlvbjtcbiAgICBpdC5jb21wb3NpdGVSdWxlID0gJGl0LmNvbXBvc2l0ZVJ1bGUgPSAkd2FzQ29tcG9zaXRlO1xuICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJykgeyAgICc7XG4gICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ25vdCcpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XG4gICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgTk9UIGJlIHZhbGlkXFwnICc7XG4gICAgICB9XG4gICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyB9ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgfVxuICAgIHZhciBfX2VyciA9IG91dDtcbiAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGl0LmFzeW5jKSB7XG4gICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9IGVsc2UgeyAgZXJyb3JzID0gJyArICgkZXJycykgKyAnOyBpZiAodkVycm9ycyAhPT0gbnVsbCkgeyBpZiAoJyArICgkZXJycykgKyAnKSB2RXJyb3JzLmxlbmd0aCA9ICcgKyAoJGVycnMpICsgJzsgZWxzZSB2RXJyb3JzID0gbnVsbDsgfSAnO1xuICAgIGlmIChpdC5vcHRzLmFsbEVycm9ycykge1xuICAgICAgb3V0ICs9ICcgfSAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCdub3QnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7fSAnO1xuICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIE5PVCBiZSB2YWxpZFxcJyAnO1xuICAgICAgfVxuICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xuICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgfSAnO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJyB7fSAnO1xuICAgIH1cbiAgICBvdXQgKz0gJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICBvdXQgKz0gJyBpZiAoZmFsc2UpIHsgJztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/not.js\n")},"./node_modules/ajv/lib/dotjs/oneOf.js":
/*!*********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/oneOf.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  out += 'var ' + ($errs) + ' = errors;var prevValid' + ($lvl) + ' = false;var ' + ($valid) + ' = false;';\n  var $currentBaseId = $it.baseId;\n  var $wasComposite = it.compositeRule;\n  it.compositeRule = $it.compositeRule = true;\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $i = -1,\n      l1 = arr1.length - 1;\n    while ($i < l1) {\n      $sch = arr1[$i += 1];\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\n        $it.schema = $sch;\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n      } else {\n        out += ' var ' + ($nextValid) + ' = true; ';\n      }\n      if ($i) {\n        out += ' if (' + ($nextValid) + ' && prevValid' + ($lvl) + ') ' + ($valid) + ' = false; else { ';\n        $closingBraces += '}';\n      }\n      out += ' if (' + ($nextValid) + ') ' + ($valid) + ' = prevValid' + ($lvl) + ' = true;';\n    }\n  }\n  it.compositeRule = $it.compositeRule = $wasComposite;\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('oneOf') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match exactly one schema in oneOf\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; return false; ';\n    }\n  }\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\n  if (it.opts.allErrors) {\n    out += ' } ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9vbmVPZi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvb25lT2YuanM/NGRiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX29uZU9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIG91dCArPSAndmFyICcgKyAoJGVycnMpICsgJyA9IGVycm9yczt2YXIgcHJldlZhbGlkJyArICgkbHZsKSArICcgPSBmYWxzZTt2YXIgJyArICgkdmFsaWQpICsgJyA9IGZhbHNlOyc7XG4gIHZhciAkY3VycmVudEJhc2VJZCA9ICRpdC5iYXNlSWQ7XG4gIHZhciAkd2FzQ29tcG9zaXRlID0gaXQuY29tcG9zaXRlUnVsZTtcbiAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcbiAgdmFyIGFycjEgPSAkc2NoZW1hO1xuICBpZiAoYXJyMSkge1xuICAgIHZhciAkc2NoLCAkaSA9IC0xLFxuICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XG4gICAgd2hpbGUgKCRpIDwgbDEpIHtcbiAgICAgICRzY2ggPSBhcnIxWyRpICs9IDFdO1xuICAgICAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKSkge1xuICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcbiAgICAgICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aCArICdbJyArICRpICsgJ10nO1xuICAgICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoICsgJy8nICsgJGk7XG4gICAgICAgIG91dCArPSAnICAnICsgKGl0LnZhbGlkYXRlKCRpdCkpICsgJyAnO1xuICAgICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkbmV4dFZhbGlkKSArICcgPSB0cnVlOyAnO1xuICAgICAgfVxuICAgICAgaWYgKCRpKSB7XG4gICAgICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJyAmJiBwcmV2VmFsaWQnICsgKCRsdmwpICsgJykgJyArICgkdmFsaWQpICsgJyA9IGZhbHNlOyBlbHNlIHsgJztcbiAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSAnICsgKCR2YWxpZCkgKyAnID0gcHJldlZhbGlkJyArICgkbHZsKSArICcgPSB0cnVlOyc7XG4gICAgfVxuICB9XG4gIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XG4gIG91dCArPSAnJyArICgkY2xvc2luZ0JyYWNlcykgKyAnaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ29uZU9mJykgKyAnXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXCdcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczoge30gJztcbiAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIG1hdGNoIGV4YWN0bHkgb25lIHNjaGVtYSBpbiBvbmVPZlxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICBvdXQgKz0gJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IodkVycm9ycyk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IHZFcnJvcnM7IHJldHVybiBmYWxzZTsgJztcbiAgICB9XG4gIH1cbiAgb3V0ICs9ICd9IGVsc2UgeyAgZXJyb3JzID0gJyArICgkZXJycykgKyAnOyBpZiAodkVycm9ycyAhPT0gbnVsbCkgeyBpZiAoJyArICgkZXJycykgKyAnKSB2RXJyb3JzLmxlbmd0aCA9ICcgKyAoJGVycnMpICsgJzsgZWxzZSB2RXJyb3JzID0gbnVsbDsgfSc7XG4gIGlmIChpdC5vcHRzLmFsbEVycm9ycykge1xuICAgIG91dCArPSAnIH0gJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/oneOf.js\n")},"./node_modules/ajv/lib/dotjs/pattern.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/pattern.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\n  out += 'if ( ';\n  if ($isData) {\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\'string\\') || ';\n  }\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\n  var $$outStack = $$outStack || [];\n  $$outStack.push(out);\n  out = ''; /* istanbul ignore else */\n  if (it.createErrors !== false) {\n    out += ' { keyword: \\'' + ('pattern') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\n    if ($isData) {\n      out += '' + ($schemaValue);\n    } else {\n      out += '' + (it.util.toQuotedString($schema));\n    }\n    out += '  } ';\n    if (it.opts.messages !== false) {\n      out += ' , message: \\'should match pattern \"';\n      if ($isData) {\n        out += '\\' + ' + ($schemaValue) + ' + \\'';\n      } else {\n        out += '' + (it.util.escapeQuotes($schema));\n      }\n      out += '\"\\' ';\n    }\n    if (it.opts.verbose) {\n      out += ' , schema:  ';\n      if ($isData) {\n        out += 'validate.schema' + ($schemaPath);\n      } else {\n        out += '' + (it.util.toQuotedString($schema));\n      }\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n    }\n    out += ' } ';\n  } else {\n    out += ' {} ';\n  }\n  var __err = out;\n  out = $$outStack.pop();\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n    if (it.async) {\n      out += ' throw new ValidationError([' + (__err) + ']); ';\n    } else {\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\n    }\n  } else {\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n  }\n  out += '} ';\n  if ($breakOnError) {\n    out += ' else { ';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wYXR0ZXJuLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wYXR0ZXJuLmpzPzcxNGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9wYXR0ZXJuKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXG4gICAgJHNjaGVtYVZhbHVlO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XG4gIH0gZWxzZSB7XG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcbiAgfVxuICB2YXIgJHJlZ2V4cCA9ICRpc0RhdGEgPyAnKG5ldyBSZWdFeHAoJyArICRzY2hlbWFWYWx1ZSArICcpKScgOiBpdC51c2VQYXR0ZXJuKCRzY2hlbWEpO1xuICBvdXQgKz0gJ2lmICggJztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ3N0cmluZ1xcJykgfHwgJztcbiAgfVxuICBvdXQgKz0gJyAhJyArICgkcmVnZXhwKSArICcudGVzdCgnICsgKCRkYXRhKSArICcpICkgeyAgICc7XG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgncGF0dGVybicpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgcGF0dGVybjogICc7XG4gICAgaWYgKCRpc0RhdGEpIHtcbiAgICAgIG91dCArPSAnJyArICgkc2NoZW1hVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkc2NoZW1hKSk7XG4gICAgfVxuICAgIG91dCArPSAnICB9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBtYXRjaCBwYXR0ZXJuIFwiJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJHNjaGVtYSkpO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICdcIlxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogICc7XG4gICAgICBpZiAoJGlzRGF0YSkge1xuICAgICAgICBvdXQgKz0gJ3ZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJHNjaGVtYSkpO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgICAgICAgICAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICB9XG4gICAgb3V0ICs9ICcgfSAnO1xuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHt9ICc7XG4gIH1cbiAgdmFyIF9fZXJyID0gb3V0O1xuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gIH1cbiAgb3V0ICs9ICd9ICc7XG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/pattern.js\n")},"./node_modules/ajv/lib/dotjs/properties.js":
/*!**************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/properties.js ***!
  \**************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $key = 'key' + $lvl,\n    $idx = 'idx' + $lvl,\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\n    $nextData = 'data' + $dataNxt,\n    $dataProperties = 'dataProperties' + $lvl;\n  var $schemaKeys = Object.keys($schema || {}),\n    $pProperties = it.schema.patternProperties || {},\n    $pPropertyKeys = Object.keys($pProperties),\n    $aProperties = it.schema.additionalProperties,\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\n    $noAdditional = $aProperties === false,\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\n    $removeAdditional = it.opts.removeAdditional,\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\n    $ownProperties = it.opts.ownProperties,\n    $currentBaseId = it.baseId;\n  var $required = it.schema.required;\n  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\n  if (it.opts.patternGroups) {\n    var $pgProperties = it.schema.patternGroups || {},\n      $pgPropertyKeys = Object.keys($pgProperties);\n  }\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\n  if ($ownProperties) {\n    out += ' var ' + ($dataProperties) + ' = undefined;';\n  }\n  if ($checkAdditional) {\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    if ($someProperties) {\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\n      if ($schemaKeys.length) {\n        if ($schemaKeys.length > 5) {\n          out += ' || validate.schema' + ($schemaPath) + '[' + ($key) + '] ';\n        } else {\n          var arr1 = $schemaKeys;\n          if (arr1) {\n            var $propertyKey, i1 = -1,\n              l1 = arr1.length - 1;\n            while (i1 < l1) {\n              $propertyKey = arr1[i1 += 1];\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\n            }\n          }\n        }\n      }\n      if ($pPropertyKeys.length) {\n        var arr2 = $pPropertyKeys;\n        if (arr2) {\n          var $pProperty, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $pProperty = arr2[$i += 1];\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      if (it.opts.patternGroups && $pgPropertyKeys.length) {\n        var arr3 = $pgPropertyKeys;\n        if (arr3) {\n          var $pgProperty, $i = -1,\n            l3 = arr3.length - 1;\n          while ($i < l3) {\n            $pgProperty = arr3[$i += 1];\n            out += ' || ' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ') ';\n          }\n        }\n      }\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\n    }\n    if ($removeAdditional == 'all') {\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n    } else {\n      var $currentErrorPath = it.errorPath;\n      var $additionalProperty = '\\' + ' + $key + ' + \\'';\n      if (it.opts._errorDataPathProperty) {\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n      }\n      if ($noAdditional) {\n        if ($removeAdditional) {\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\n        } else {\n          out += ' ' + ($nextValid) + ' = false; ';\n          var $currErrSchemaPath = $errSchemaPath;\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          var $$outStack = $$outStack || [];\n          $$outStack.push(out);\n          out = ''; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('additionalProperties') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\'' + ($additionalProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'should NOT have additional properties\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          var __err = out;\n          out = $$outStack.pop();\n          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n            if (it.async) {\n              out += ' throw new ValidationError([' + (__err) + ']); ';\n            } else {\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\n            }\n          } else {\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n          }\n          $errSchemaPath = $currErrSchemaPath;\n          if ($breakOnError) {\n            out += ' break; ';\n          }\n        }\n      } else if ($additionalIsSchema) {\n        if ($removeAdditional == 'failing') {\n          out += ' var ' + ($errs) + ' = errors;  ';\n          var $wasComposite = it.compositeRule;\n          it.compositeRule = $it.compositeRule = true;\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\n          it.compositeRule = $it.compositeRule = $wasComposite;\n        } else {\n          $it.schema = $aProperties;\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n        }\n      }\n      it.errorPath = $currentErrorPath;\n    }\n    if ($someProperties) {\n      out += ' } ';\n    }\n    out += ' }  ';\n    if ($breakOnError) {\n      out += ' if (' + ($nextValid) + ') { ';\n      $closingBraces += '}';\n    }\n  }\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\n  if ($schemaKeys.length) {\n    var arr4 = $schemaKeys;\n    if (arr4) {\n      var $propertyKey, i4 = -1,\n        l4 = arr4.length - 1;\n      while (i4 < l4) {\n        $propertyKey = arr4[i4 += 1];\n        var $sch = $schema[$propertyKey];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          var $prop = it.util.getProperty($propertyKey),\n            $passData = $data + $prop,\n            $hasDefault = $useDefaults && $sch.default !== undefined;\n          $it.schema = $sch;\n          $it.schemaPath = $schemaPath + $prop;\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            $code = it.util.varReplace($code, $nextData, $passData);\n            var $useData = $passData;\n          } else {\n            var $useData = $nextData;\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\n          }\n          if ($hasDefault) {\n            out += ' ' + ($code) + ' ';\n          } else {\n            if ($requiredHash && $requiredHash[$propertyKey]) {\n              out += ' if ( ' + ($useData) + ' === undefined ';\n              if ($ownProperties) {\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n              }\n              out += ') { ' + ($nextValid) + ' = false; ';\n              var $currentErrorPath = it.errorPath,\n                $currErrSchemaPath = $errSchemaPath,\n                $missingProperty = it.util.escapeQuotes($propertyKey);\n              if (it.opts._errorDataPathProperty) {\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n              }\n              $errSchemaPath = it.errSchemaPath + '/required';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'';\n                  if (it.opts._errorDataPathProperty) {\n                    out += 'is a required property';\n                  } else {\n                    out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              $errSchemaPath = $currErrSchemaPath;\n              it.errorPath = $currentErrorPath;\n              out += ' } else { ';\n            } else {\n              if ($breakOnError) {\n                out += ' if ( ' + ($useData) + ' === undefined ';\n                if ($ownProperties) {\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\n              } else {\n                out += ' if (' + ($useData) + ' !== undefined ';\n                if ($ownProperties) {\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n                }\n                out += ' ) { ';\n              }\n            }\n            out += ' ' + ($code) + ' } ';\n          }\n        }\n        if ($breakOnError) {\n          out += ' if (' + ($nextValid) + ') { ';\n          $closingBraces += '}';\n        }\n      }\n    }\n  }\n  if ($pPropertyKeys.length) {\n    var arr5 = $pPropertyKeys;\n    if (arr5) {\n      var $pProperty, i5 = -1,\n        l5 = arr5.length - 1;\n      while (i5 < l5) {\n        $pProperty = arr5[i5 += 1];\n        var $sch = $pProperties[$pProperty];\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n        }\n      }\n    }\n  }\n  if (it.opts.patternGroups && $pgPropertyKeys.length) {\n    var arr6 = $pgPropertyKeys;\n    if (arr6) {\n      var $pgProperty, i6 = -1,\n        l6 = arr6.length - 1;\n      while (i6 < l6) {\n        $pgProperty = arr6[i6 += 1];\n        var $pgSchema = $pgProperties[$pgProperty],\n          $sch = $pgSchema.schema;\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\n          $it.schema = $sch;\n          $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';\n          $it.errSchemaPath = it.errSchemaPath + '/patternGroups/' + it.util.escapeFragment($pgProperty) + '/schema';\n          out += ' var pgPropCount' + ($lvl) + ' = 0;  ';\n          if ($ownProperties) {\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n          } else {\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n          }\n          out += ' if (' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ')) { pgPropCount' + ($lvl) + '++; ';\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\n          var $passData = $data + '[' + $key + ']';\n          $it.dataPathArr[$dataNxt] = $key;\n          var $code = it.validate($it);\n          $it.baseId = $currentBaseId;\n          if (it.util.varOccurences($code, $nextData) < 2) {\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n          } else {\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n          }\n          if ($breakOnError) {\n            out += ' if (!' + ($nextValid) + ') break; ';\n          }\n          out += ' } ';\n          if ($breakOnError) {\n            out += ' else ' + ($nextValid) + ' = true; ';\n          }\n          out += ' }  ';\n          if ($breakOnError) {\n            out += ' if (' + ($nextValid) + ') { ';\n            $closingBraces += '}';\n          }\n          var $pgMin = $pgSchema.minimum,\n            $pgMax = $pgSchema.maximum;\n          if ($pgMin !== undefined || $pgMax !== undefined) {\n            out += ' var ' + ($valid) + ' = true; ';\n            var $currErrSchemaPath = $errSchemaPath;\n            if ($pgMin !== undefined) {\n              var $limit = $pgMin,\n                $reason = 'minimum',\n                $moreOrLess = 'less';\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' >= ' + ($pgMin) + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum';\n              out += '  if (!' + ($valid) + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('patternGroups') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\'' + ($reason) + '\\', limit: ' + ($limit) + ', pattern: \\'' + (it.util.escapeQuotes($pgProperty)) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \"' + (it.util.escapeQuotes($pgProperty)) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n              if ($pgMax !== undefined) {\n                out += ' else ';\n              }\n            }\n            if ($pgMax !== undefined) {\n              var $limit = $pgMax,\n                $reason = 'maximum',\n                $moreOrLess = 'more';\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' <= ' + ($pgMax) + '; ';\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum';\n              out += '  if (!' + ($valid) + ') {   ';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ('patternGroups') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\'' + ($reason) + '\\', limit: ' + ($limit) + ', pattern: \\'' + (it.util.escapeQuotes($pgProperty)) + '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \"' + (it.util.escapeQuotes($pgProperty)) + '\"\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n            $errSchemaPath = $currErrSchemaPath;\n            if ($breakOnError) {\n              out += ' if (' + ($valid) + ') { ';\n              $closingBraces += '}';\n            }\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/properties.js\n")},"./node_modules/ajv/lib/dotjs/propertyNames.js":
/*!*****************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/propertyNames.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\n    $it.schema = $schema;\n    $it.schemaPath = $schemaPath;\n    $it.errSchemaPath = $errSchemaPath;\n    var $key = 'key' + $lvl,\n      $idx = 'idx' + $lvl,\n      $i = 'i' + $lvl,\n      $invalidName = '\\' + ' + $key + ' + \\'',\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\n      $nextData = 'data' + $dataNxt,\n      $dataProperties = 'dataProperties' + $lvl,\n      $ownProperties = it.opts.ownProperties,\n      $currentBaseId = it.baseId;\n    out += ' var ' + ($errs) + ' = errors; ';\n    if ($ownProperties) {\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\n    }\n    if ($ownProperties) {\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\n    } else {\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\n    }\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\n    var $passData = $key;\n    var $wasComposite = it.compositeRule;\n    it.compositeRule = $it.compositeRule = true;\n    var $code = it.validate($it);\n    $it.baseId = $currentBaseId;\n    if (it.util.varOccurences($code, $nextData) < 2) {\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\n    } else {\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\n    }\n    it.compositeRule = $it.compositeRule = $wasComposite;\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('propertyNames') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\'' + ($invalidName) + '\\' } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'property name \\\\\\'' + ($invalidName) + '\\\\\\' is invalid\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError(vErrors); ';\n      } else {\n        out += ' validate.errors = vErrors; return false; ';\n      }\n    }\n    if ($breakOnError) {\n      out += ' break; ';\n    }\n    out += ' } }';\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\n  }\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0eU5hbWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0eU5hbWVzLmpzPzZkNjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9wcm9wZXJ0eU5hbWVzKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkZXJycyA9ICdlcnJzX18nICsgJGx2bDtcbiAgdmFyICRpdCA9IGl0LnV0aWwuY29weShpdCk7XG4gIHZhciAkY2xvc2luZ0JyYWNlcyA9ICcnO1xuICAkaXQubGV2ZWwrKztcbiAgdmFyICRuZXh0VmFsaWQgPSAndmFsaWQnICsgJGl0LmxldmVsO1xuICBpZiAoaXQudXRpbC5zY2hlbWFIYXNSdWxlcygkc2NoZW1hLCBpdC5SVUxFUy5hbGwpKSB7XG4gICAgJGl0LnNjaGVtYSA9ICRzY2hlbWE7XG4gICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aDtcbiAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoO1xuICAgIHZhciAka2V5ID0gJ2tleScgKyAkbHZsLFxuICAgICAgJGlkeCA9ICdpZHgnICsgJGx2bCxcbiAgICAgICRpID0gJ2knICsgJGx2bCxcbiAgICAgICRpbnZhbGlkTmFtZSA9ICdcXCcgKyAnICsgJGtleSArICcgKyBcXCcnLFxuICAgICAgJGRhdGFOeHQgPSAkaXQuZGF0YUxldmVsID0gaXQuZGF0YUxldmVsICsgMSxcbiAgICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxuICAgICAgJGRhdGFQcm9wZXJ0aWVzID0gJ2RhdGFQcm9wZXJ0aWVzJyArICRsdmwsXG4gICAgICAkb3duUHJvcGVydGllcyA9IGl0Lm9wdHMub3duUHJvcGVydGllcyxcbiAgICAgICRjdXJyZW50QmFzZUlkID0gaXQuYmFzZUlkO1xuICAgIG91dCArPSAnIHZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7ICc7XG4gICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XG4gICAgICBvdXQgKz0gJyB2YXIgJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyA9IHVuZGVmaW5lZDsgJztcbiAgICB9XG4gICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XG4gICAgICBvdXQgKz0gJyAnICsgKCRkYXRhUHJvcGVydGllcykgKyAnID0gJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyB8fCBPYmplY3Qua2V5cygnICsgKCRkYXRhKSArICcpOyBmb3IgKHZhciAnICsgKCRpZHgpICsgJz0wOyAnICsgKCRpZHgpICsgJzwnICsgKCRkYXRhUHJvcGVydGllcykgKyAnLmxlbmd0aDsgJyArICgkaWR4KSArICcrKykgeyB2YXIgJyArICgka2V5KSArICcgPSAnICsgKCRkYXRhUHJvcGVydGllcykgKyAnWycgKyAoJGlkeCkgKyAnXTsgJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgZm9yICh2YXIgJyArICgka2V5KSArICcgaW4gJyArICgkZGF0YSkgKyAnKSB7ICc7XG4gICAgfVxuICAgIG91dCArPSAnIHZhciBzdGFydEVycnMnICsgKCRsdmwpICsgJyA9IGVycm9yczsgJztcbiAgICB2YXIgJHBhc3NEYXRhID0gJGtleTtcbiAgICB2YXIgJHdhc0NvbXBvc2l0ZSA9IGl0LmNvbXBvc2l0ZVJ1bGU7XG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcbiAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xuICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcbiAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xuICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XG4gICAgfVxuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XG4gICAgb3V0ICs9ICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgeyBmb3IgKHZhciAnICsgKCRpKSArICc9c3RhcnRFcnJzJyArICgkbHZsKSArICc7ICcgKyAoJGkpICsgJzxlcnJvcnM7ICcgKyAoJGkpICsgJysrKSB7IHZFcnJvcnNbJyArICgkaSkgKyAnXS5wcm9wZXJ0eU5hbWUgPSAnICsgKCRrZXkpICsgJzsgfSAgIHZhciBlcnIgPSAgICc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgncHJvcGVydHlOYW1lcycpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgcHJvcGVydHlOYW1lOiBcXCcnICsgKCRpbnZhbGlkTmFtZSkgKyAnXFwnIH0gJztcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Byb3BlcnR5IG5hbWUgXFxcXFxcJycgKyAoJGludmFsaWROYW1lKSArICdcXFxcXFwnIGlzIGludmFsaWRcXCcgJztcbiAgICAgIH1cbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIH0gJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcge30gJztcbiAgICB9XG4gICAgb3V0ICs9ICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmIChpdC5hc3luYykge1xuICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKHZFcnJvcnMpOyAnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gdkVycm9yczsgcmV0dXJuIGZhbHNlOyAnO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgb3V0ICs9ICcgYnJlYWs7ICc7XG4gICAgfVxuICAgIG91dCArPSAnIH0gfSc7XG4gIH1cbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCcgKyAoJGVycnMpICsgJyA9PSBlcnJvcnMpIHsnO1xuICB9XG4gIG91dCA9IGl0LnV0aWwuY2xlYW5VcENvZGUob3V0KTtcbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/propertyNames.js\n")},"./node_modules/ajv/lib/dotjs/ref.js":
/*!*******************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/ref.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $async, $refCode;\n  if ($schema == '#' || $schema == '#/') {\n    if (it.isRoot) {\n      $async = it.async;\n      $refCode = 'validate';\n    } else {\n      $async = it.root.schema.$async === true;\n      $refCode = 'root.refVal[0]';\n    }\n  } else {\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\n    if ($refVal === undefined) {\n      var $message = it.MissingRefError.message(it.baseId, $schema);\n      if (it.opts.missingRefs == 'fail') {\n        console.error($message);\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('$ref') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\'' + (it.util.escapeQuotes($schema)) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'can\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        if ($breakOnError) {\n          out += ' if (false) { ';\n        }\n      } else if (it.opts.missingRefs == 'ignore') {\n        console.warn($message);\n        if ($breakOnError) {\n          out += ' if (true) { ';\n        }\n      } else {\n        throw new it.MissingRefError(it.baseId, $schema, $message);\n      }\n    } else if ($refVal.inline) {\n      var $it = it.util.copy(it);\n      $it.level++;\n      var $nextValid = 'valid' + $it.level;\n      $it.schema = $refVal.schema;\n      $it.schemaPath = '';\n      $it.errSchemaPath = $schema;\n      var $code = it.validate($it).replace(/validate\\.schema/g, $refVal.code);\n      out += ' ' + ($code) + ' ';\n      if ($breakOnError) {\n        out += ' if (' + ($nextValid) + ') { ';\n      }\n    } else {\n      $async = $refVal.$async === true;\n      $refCode = $refVal.code;\n    }\n  }\n  if ($refCode) {\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = '';\n    if (it.opts.passContext) {\n      out += ' ' + ($refCode) + '.call(this, ';\n    } else {\n      out += ' ' + ($refCode) + '( ';\n    }\n    out += ' ' + ($data) + ', (dataPath || \\'\\')';\n    if (it.errorPath != '\"\"') {\n      out += ' + ' + (it.errorPath);\n    }\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\n    var __callValidate = out;\n    out = $$outStack.pop();\n    if ($async) {\n      if (!it.async) throw new Error('async schema referenced by sync schema');\n      if ($breakOnError) {\n        out += ' var ' + ($valid) + '; ';\n      }\n      out += ' try { ' + (it.yieldAwait) + ' ' + (__callValidate) + '; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = true; ';\n      }\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\n      if ($breakOnError) {\n        out += ' ' + ($valid) + ' = false; ';\n      }\n      out += ' } ';\n      if ($breakOnError) {\n        out += ' if (' + ($valid) + ') { ';\n      }\n    } else {\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\n      if ($breakOnError) {\n        out += ' else { ';\n      }\n    }\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9yZWYuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3JlZi5qcz82ZWY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfcmVmKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJHZhbGlkID0gJ3ZhbGlkJyArICRsdmw7XG4gIHZhciAkYXN5bmMsICRyZWZDb2RlO1xuICBpZiAoJHNjaGVtYSA9PSAnIycgfHwgJHNjaGVtYSA9PSAnIy8nKSB7XG4gICAgaWYgKGl0LmlzUm9vdCkge1xuICAgICAgJGFzeW5jID0gaXQuYXN5bmM7XG4gICAgICAkcmVmQ29kZSA9ICd2YWxpZGF0ZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgICRhc3luYyA9IGl0LnJvb3Quc2NoZW1hLiRhc3luYyA9PT0gdHJ1ZTtcbiAgICAgICRyZWZDb2RlID0gJ3Jvb3QucmVmVmFsWzBdJztcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyICRyZWZWYWwgPSBpdC5yZXNvbHZlUmVmKGl0LmJhc2VJZCwgJHNjaGVtYSwgaXQuaXNSb290KTtcbiAgICBpZiAoJHJlZlZhbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YXIgJG1lc3NhZ2UgPSBpdC5NaXNzaW5nUmVmRXJyb3IubWVzc2FnZShpdC5iYXNlSWQsICRzY2hlbWEpO1xuICAgICAgaWYgKGl0Lm9wdHMubWlzc2luZ1JlZnMgPT0gJ2ZhaWwnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJG1lc3NhZ2UpO1xuICAgICAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XG4gICAgICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICAgICAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJyRyZWYnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IHJlZjogXFwnJyArIChpdC51dGlsLmVzY2FwZVF1b3Rlcygkc2NoZW1hKSkgKyAnXFwnIH0gJztcbiAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnY2FuXFxcXFxcJ3QgcmVzb2x2ZSByZWZlcmVuY2UgJyArIChpdC51dGlsLmVzY2FwZVF1b3Rlcygkc2NoZW1hKSkgKyAnXFwnICc7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJHNjaGVtYSkpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICAgICAgICB9XG4gICAgICAgICAgb3V0ICs9ICcgfSAnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9fZXJyID0gb3V0O1xuICAgICAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICAgICAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgICAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICAgICAgICBvdXQgKz0gJyBpZiAoZmFsc2UpIHsgJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChpdC5vcHRzLm1pc3NpbmdSZWZzID09ICdpZ25vcmUnKSB7XG4gICAgICAgIGNvbnNvbGUud2FybigkbWVzc2FnZSk7XG4gICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgICAgb3V0ICs9ICcgaWYgKHRydWUpIHsgJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IGl0Lk1pc3NpbmdSZWZFcnJvcihpdC5iYXNlSWQsICRzY2hlbWEsICRtZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCRyZWZWYWwuaW5saW5lKSB7XG4gICAgICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgICAgICRpdC5sZXZlbCsrO1xuICAgICAgdmFyICRuZXh0VmFsaWQgPSAndmFsaWQnICsgJGl0LmxldmVsO1xuICAgICAgJGl0LnNjaGVtYSA9ICRyZWZWYWwuc2NoZW1hO1xuICAgICAgJGl0LnNjaGVtYVBhdGggPSAnJztcbiAgICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJHNjaGVtYTtcbiAgICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCkucmVwbGFjZSgvdmFsaWRhdGVcXC5zY2hlbWEvZywgJHJlZlZhbC5jb2RlKTtcbiAgICAgIG91dCArPSAnICcgKyAoJGNvZGUpICsgJyAnO1xuICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICRhc3luYyA9ICRyZWZWYWwuJGFzeW5jID09PSB0cnVlO1xuICAgICAgJHJlZkNvZGUgPSAkcmVmVmFsLmNvZGU7XG4gICAgfVxuICB9XG4gIGlmICgkcmVmQ29kZSkge1xuICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgICBvdXQgPSAnJztcbiAgICBpZiAoaXQub3B0cy5wYXNzQ29udGV4dCkge1xuICAgICAgb3V0ICs9ICcgJyArICgkcmVmQ29kZSkgKyAnLmNhbGwodGhpcywgJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgJyArICgkcmVmQ29kZSkgKyAnKCAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyAnICsgKCRkYXRhKSArICcsIChkYXRhUGF0aCB8fCBcXCdcXCcpJztcbiAgICBpZiAoaXQuZXJyb3JQYXRoICE9ICdcIlwiJykge1xuICAgICAgb3V0ICs9ICcgKyAnICsgKGl0LmVycm9yUGF0aCk7XG4gICAgfVxuICAgIHZhciAkcGFyZW50RGF0YSA9ICRkYXRhTHZsID8gJ2RhdGEnICsgKCgkZGF0YUx2bCAtIDEpIHx8ICcnKSA6ICdwYXJlbnREYXRhJyxcbiAgICAgICRwYXJlbnREYXRhUHJvcGVydHkgPSAkZGF0YUx2bCA/IGl0LmRhdGFQYXRoQXJyWyRkYXRhTHZsXSA6ICdwYXJlbnREYXRhUHJvcGVydHknO1xuICAgIG91dCArPSAnICwgJyArICgkcGFyZW50RGF0YSkgKyAnICwgJyArICgkcGFyZW50RGF0YVByb3BlcnR5KSArICcsIHJvb3REYXRhKSAgJztcbiAgICB2YXIgX19jYWxsVmFsaWRhdGUgPSBvdXQ7XG4gICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcbiAgICBpZiAoJGFzeW5jKSB7XG4gICAgICBpZiAoIWl0LmFzeW5jKSB0aHJvdyBuZXcgRXJyb3IoJ2FzeW5jIHNjaGVtYSByZWZlcmVuY2VkIGJ5IHN5bmMgc2NoZW1hJyk7XG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJzsgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIHRyeSB7ICcgKyAoaXQueWllbGRBd2FpdCkgKyAnICcgKyAoX19jYWxsVmFsaWRhdGUpICsgJzsgJztcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgIG91dCArPSAnICcgKyAoJHZhbGlkKSArICcgPSB0cnVlOyAnO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgfSBjYXRjaCAoZSkgeyBpZiAoIShlIGluc3RhbmNlb2YgVmFsaWRhdGlvbkVycm9yKSkgdGhyb3cgZTsgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBlLmVycm9yczsgZWxzZSB2RXJyb3JzID0gdkVycm9ycy5jb25jYXQoZS5lcnJvcnMpOyBlcnJvcnMgPSB2RXJyb3JzLmxlbmd0aDsgJztcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgIG91dCArPSAnICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIH0gJztcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgIG91dCArPSAnIGlmICgnICsgKCR2YWxpZCkgKyAnKSB7ICc7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIGlmICghJyArIChfX2NhbGxWYWxpZGF0ZSkgKyAnKSB7IGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gJyArICgkcmVmQ29kZSkgKyAnLmVycm9yczsgZWxzZSB2RXJyb3JzID0gdkVycm9ycy5jb25jYXQoJyArICgkcmVmQ29kZSkgKyAnLmVycm9ycyk7IGVycm9ycyA9IHZFcnJvcnMubGVuZ3RoOyB9ICc7XG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/ref.js\n")},"./node_modules/ajv/lib/dotjs/required.js":
/*!************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/required.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  var $vSchema = 'schema' + $lvl;\n  if (!$isData) {\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\n      var $required = [];\n      var arr1 = $schema;\n      if (arr1) {\n        var $property, i1 = -1,\n          l1 = arr1.length - 1;\n        while (i1 < l1) {\n          $property = arr1[i1 += 1];\n          var $propertySch = it.schema.properties[$property];\n          if (!($propertySch && it.util.schemaHasRules($propertySch, it.RULES.all))) {\n            $required[$required.length] = $property;\n          }\n        }\n      }\n    } else {\n      var $required = $schema;\n    }\n  }\n  if ($isData || $required.length) {\n    var $currentErrorPath = it.errorPath,\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\n      $ownProperties = it.opts.ownProperties;\n    if ($breakOnError) {\n      out += ' var missing' + ($lvl) + '; ';\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        out += ' var ' + ($valid) + ' = true; ';\n        if ($isData) {\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\n        if ($ownProperties) {\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += '; if (!' + ($valid) + ') break; } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n        out += '  if (!' + ($valid) + ') {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      } else {\n        out += ' if ( ';\n        var arr2 = $required;\n        if (arr2) {\n          var $propertyKey, $i = -1,\n            l2 = arr2.length - 1;\n          while ($i < l2) {\n            $propertyKey = arr2[$i += 1];\n            if ($i) {\n              out += ' || ';\n            }\n            var $prop = it.util.getProperty($propertyKey),\n              $useData = $data + $prop;\n            out += ' ( ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\n          }\n        }\n        out += ') {  ';\n        var $propertyPath = 'missing' + $lvl,\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\n        }\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else { ';\n      }\n    } else {\n      if ($loopRequired) {\n        if (!$isData) {\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\n        }\n        var $i = 'i' + $lvl,\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\n          $missingProperty = '\\' + ' + $propertyPath + ' + \\'';\n        if (it.opts._errorDataPathProperty) {\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\n        }\n        if ($isData) {\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\n          if (it.createErrors !== false) {\n            out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n            if (it.opts.messages !== false) {\n              out += ' , message: \\'';\n              if (it.opts._errorDataPathProperty) {\n                out += 'is a required property';\n              } else {\n                out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n              }\n              out += '\\' ';\n            }\n            if (it.opts.verbose) {\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n            }\n            out += ' } ';\n          } else {\n            out += ' {} ';\n          }\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\n        }\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\n        if ($ownProperties) {\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\n        }\n        out += ') {  var err =   '; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'';\n            if (it.opts._errorDataPathProperty) {\n              out += 'is a required property';\n            } else {\n              out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\n        if ($isData) {\n          out += '  }  ';\n        }\n      } else {\n        var arr3 = $required;\n        if (arr3) {\n          var $propertyKey, i3 = -1,\n            l3 = arr3.length - 1;\n          while (i3 < l3) {\n            $propertyKey = arr3[i3 += 1];\n            var $prop = it.util.getProperty($propertyKey),\n              $missingProperty = it.util.escapeQuotes($propertyKey),\n              $useData = $data + $prop;\n            if (it.opts._errorDataPathProperty) {\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\n            }\n            out += ' if ( ' + ($useData) + ' === undefined ';\n            if ($ownProperties) {\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\'' + (it.util.escapeQuotes($propertyKey)) + '\\') ';\n            }\n            out += ') {  var err =   '; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('required') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\'' + ($missingProperty) + '\\' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'';\n                if (it.opts._errorDataPathProperty) {\n                  out += 'is a required property';\n                } else {\n                  out += 'should have required property \\\\\\'' + ($missingProperty) + '\\\\\\'';\n                }\n                out += '\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\n          }\n        }\n      }\n    }\n    it.errorPath = $currentErrorPath;\n  } else if ($breakOnError) {\n    out += ' if (true) {';\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/required.js\n")},"./node_modules/ajv/lib/dotjs/uniqueItems.js":
/*!***************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/uniqueItems.js ***!
  \***************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $isData = it.opts.$data && $schema && $schema.$data,\n    $schemaValue;\n  if ($isData) {\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\n    $schemaValue = 'schema' + $lvl;\n  } else {\n    $schemaValue = $schema;\n  }\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\n    if ($isData) {\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\'boolean\\') ' + ($valid) + ' = false; else { ';\n    }\n    out += ' var ' + ($valid) + ' = true; if (' + ($data) + '.length > 1) { var i = ' + ($data) + '.length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } } ';\n    if ($isData) {\n      out += '  }  ';\n    }\n    out += ' if (!' + ($valid) + ') {   ';\n    var $$outStack = $$outStack || [];\n    $$outStack.push(out);\n    out = ''; /* istanbul ignore else */\n    if (it.createErrors !== false) {\n      out += ' { keyword: \\'' + ('uniqueItems') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\n      if (it.opts.messages !== false) {\n        out += ' , message: \\'should NOT have duplicate items (items ## \\' + j + \\' and \\' + i + \\' are identical)\\' ';\n      }\n      if (it.opts.verbose) {\n        out += ' , schema:  ';\n        if ($isData) {\n          out += 'validate.schema' + ($schemaPath);\n        } else {\n          out += '' + ($schema);\n        }\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n      }\n      out += ' } ';\n    } else {\n      out += ' {} ';\n    }\n    var __err = out;\n    out = $$outStack.pop();\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n      if (it.async) {\n        out += ' throw new ValidationError([' + (__err) + ']); ';\n      } else {\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\n      }\n    } else {\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n    }\n    out += ' } ';\n    if ($breakOnError) {\n      out += ' else { ';\n    }\n  } else {\n    if ($breakOnError) {\n      out += ' if (true) { ';\n    }\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy91bmlxdWVJdGVtcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvdW5pcXVlSXRlbXMuanM/ZDMwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX3VuaXF1ZUl0ZW1zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcbiAgICAkc2NoZW1hVmFsdWU7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcbiAgfSBlbHNlIHtcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xuICB9XG4gIGlmICgoJHNjaGVtYSB8fCAkaXNEYXRhKSAmJiBpdC5vcHRzLnVuaXF1ZUl0ZW1zICE9PSBmYWxzZSkge1xuICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJzsgaWYgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgPT09IGZhbHNlIHx8ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgPT09IHVuZGVmaW5lZCkgJyArICgkdmFsaWQpICsgJyA9IHRydWU7IGVsc2UgaWYgKHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ2Jvb2xlYW5cXCcpICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgZWxzZSB7ICc7XG4gICAgfVxuICAgIG91dCArPSAnIHZhciAnICsgKCR2YWxpZCkgKyAnID0gdHJ1ZTsgaWYgKCcgKyAoJGRhdGEpICsgJy5sZW5ndGggPiAxKSB7IHZhciBpID0gJyArICgkZGF0YSkgKyAnLmxlbmd0aCwgajsgb3V0ZXI6IGZvciAoO2ktLTspIHsgZm9yIChqID0gaTsgai0tOykgeyBpZiAoZXF1YWwoJyArICgkZGF0YSkgKyAnW2ldLCAnICsgKCRkYXRhKSArICdbal0pKSB7ICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgYnJlYWsgb3V0ZXI7IH0gfSB9IH0gJztcbiAgICBpZiAoJGlzRGF0YSkge1xuICAgICAgb3V0ICs9ICcgIH0gICc7XG4gICAgfVxuICAgIG91dCArPSAnIGlmICghJyArICgkdmFsaWQpICsgJykgeyAgICc7XG4gICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ3VuaXF1ZUl0ZW1zJykgKyAnXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXCdcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBpOiBpLCBqOiBqIH0gJztcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBOT1QgaGF2ZSBkdXBsaWNhdGUgaXRlbXMgKGl0ZW1zICMjIFxcJyArIGogKyBcXCcgYW5kIFxcJyArIGkgKyBcXCcgYXJlIGlkZW50aWNhbClcXCcgJztcbiAgICAgIH1cbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6ICAnO1xuICAgICAgICBpZiAoJGlzRGF0YSkge1xuICAgICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWEpO1xuICAgICAgICB9XG4gICAgICAgIG91dCArPSAnICAgICAgICAgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyB9ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgfVxuICAgIHZhciBfX2VyciA9IG91dDtcbiAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGl0LmFzeW5jKSB7XG4gICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICAgIG91dCArPSAnIGVsc2UgeyAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgb3V0ICs9ICcgaWYgKHRydWUpIHsgJztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/uniqueItems.js\n")},"./node_modules/ajv/lib/dotjs/validate.js":
/*!************************************************!*\
  !*** ./node_modules/ajv/lib/dotjs/validate.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\n  var out = '';\n  var $async = it.schema.$async === true,\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\n    $id = it.self._getId(it.schema);\n  if (it.isTop) {\n    if ($async) {\n      it.async = true;\n      var $es7 = it.opts.async == 'es7';\n      it.yieldAwait = $es7 ? 'await' : 'yield';\n    }\n    out += ' var validate = ';\n    if ($async) {\n      if ($es7) {\n        out += ' (async function ';\n      } else {\n        if (it.opts.async != '*') {\n          out += 'co.wrap';\n        }\n        out += '(function* ';\n      }\n    } else {\n      out += ' (function ';\n    }\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\'use strict\\'; ';\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\n      out += ' ' + ('/\\*# sourceURL=' + $id + ' */') + ' ';\n    }\n  }\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\n    var $keyword = 'false schema';\n    var $lvl = it.level;\n    var $dataLvl = it.dataLevel;\n    var $schema = it.schema[$keyword];\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n    var $breakOnError = !it.opts.allErrors;\n    var $errorKeyword;\n    var $data = 'data' + ($dataLvl || '');\n    var $valid = 'valid' + $lvl;\n    if (it.schema === false) {\n      if (it.isTop) {\n        $breakOnError = true;\n      } else {\n        out += ' var ' + ($valid) + ' = false; ';\n      }\n      var $$outStack = $$outStack || [];\n      $$outStack.push(out);\n      out = ''; /* istanbul ignore else */\n      if (it.createErrors !== false) {\n        out += ' { keyword: \\'' + ($errorKeyword || 'false schema') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\n        if (it.opts.messages !== false) {\n          out += ' , message: \\'boolean schema is false\\' ';\n        }\n        if (it.opts.verbose) {\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n        }\n        out += ' } ';\n      } else {\n        out += ' {} ';\n      }\n      var __err = out;\n      out = $$outStack.pop();\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n        if (it.async) {\n          out += ' throw new ValidationError([' + (__err) + ']); ';\n        } else {\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\n        }\n      } else {\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n      }\n    } else {\n      if (it.isTop) {\n        if ($async) {\n          out += ' return data; ';\n        } else {\n          out += ' validate.errors = null; return true; ';\n        }\n      } else {\n        out += ' var ' + ($valid) + ' = true; ';\n      }\n    }\n    if (it.isTop) {\n      out += ' }); return validate; ';\n    }\n    return out;\n  }\n  if (it.isTop) {\n    var $top = it.isTop,\n      $lvl = it.level = 0,\n      $dataLvl = it.dataLevel = 0,\n      $data = 'data';\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\n    it.baseId = it.baseId || it.rootId;\n    delete it.isTop;\n    it.dataPathArr = [undefined];\n    out += ' var vErrors = null; ';\n    out += ' var errors = 0;     ';\n    out += ' if (rootData === undefined) rootData = data; ';\n  } else {\n    var $lvl = it.level,\n      $dataLvl = it.dataLevel,\n      $data = 'data' + ($dataLvl || '');\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\n    if ($async && !it.async) throw new Error('async schema in sync schema');\n    out += ' var errs_' + ($lvl) + ' = errors;';\n  }\n  var $valid = 'valid' + $lvl,\n    $breakOnError = !it.opts.allErrors,\n    $closingBraces1 = '',\n    $closingBraces2 = '';\n  var $errorKeyword;\n  var $typeSchema = it.schema.type,\n    $typeIsArray = Array.isArray($typeSchema);\n  if ($typeIsArray && $typeSchema.length == 1) {\n    $typeSchema = $typeSchema[0];\n    $typeIsArray = false;\n  }\n  if (it.schema.$ref && $refKeywords) {\n    if (it.opts.extendRefs == 'fail') {\n      throw new Error('$ref: validation keywords used in schema at path \"' + it.errSchemaPath + '\" (see option extendRefs)');\n    } else if (it.opts.extendRefs !== true) {\n      $refKeywords = false;\n      console.warn('$ref: keywords ignored in schema at path \"' + it.errSchemaPath + '\"');\n    }\n  }\n  if ($typeSchema) {\n    if (it.opts.coerceTypes) {\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\n    }\n    var $rulesGroup = it.RULES.types[$typeSchema];\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type';\n      var $schemaPath = it.schemaPath + '.type',\n        $errSchemaPath = it.errSchemaPath + '/type',\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\n      if ($coerceToTypes) {\n        var $dataType = 'dataType' + $lvl,\n          $coerced = 'coerced' + $lvl;\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\n        if (it.opts.coerceTypes == 'array') {\n          out += ' if (' + ($dataType) + ' == \\'object\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\'array\\'; ';\n        }\n        out += ' var ' + ($coerced) + ' = undefined; ';\n        var $bracesCoercion = '';\n        var arr1 = $coerceToTypes;\n        if (arr1) {\n          var $type, $i = -1,\n            l1 = arr1.length - 1;\n          while ($i < l1) {\n            $type = arr1[$i += 1];\n            if ($i) {\n              out += ' if (' + ($coerced) + ' === undefined) { ';\n              $bracesCoercion += '}';\n            }\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\n              out += ' if (' + ($dataType) + ' == \\'array\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\n            }\n            if ($type == 'string') {\n              out += ' if (' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\') ' + ($coerced) + ' = \\'\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\'\\'; ';\n            } else if ($type == 'number' || $type == 'integer') {\n              out += ' if (' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\'string\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\n              if ($type == 'integer') {\n                out += ' && !(' + ($data) + ' % 1)';\n              }\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\n            } else if ($type == 'boolean') {\n              out += ' if (' + ($data) + ' === \\'false\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\'true\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\n            } else if ($type == 'null') {\n              out += ' if (' + ($data) + ' === \\'\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\n              out += ' if (' + ($dataType) + ' == \\'string\\' || ' + ($dataType) + ' == \\'number\\' || ' + ($dataType) + ' == \\'boolean\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\n            }\n          }\n        }\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n        out += ' } else {  ';\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\n        if (!$dataLvl) {\n          out += 'if (' + ($parentData) + ' !== undefined)';\n        }\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\n      } else {\n        var $$outStack = $$outStack || [];\n        $$outStack.push(out);\n        out = ''; /* istanbul ignore else */\n        if (it.createErrors !== false) {\n          out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n          if ($typeIsArray) {\n            out += '' + ($typeSchema.join(\",\"));\n          } else {\n            out += '' + ($typeSchema);\n          }\n          out += '\\' } ';\n          if (it.opts.messages !== false) {\n            out += ' , message: \\'should be ';\n            if ($typeIsArray) {\n              out += '' + ($typeSchema.join(\",\"));\n            } else {\n              out += '' + ($typeSchema);\n            }\n            out += '\\' ';\n          }\n          if (it.opts.verbose) {\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n          }\n          out += ' } ';\n        } else {\n          out += ' {} ';\n        }\n        var __err = out;\n        out = $$outStack.pop();\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n          if (it.async) {\n            out += ' throw new ValidationError([' + (__err) + ']); ';\n          } else {\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\n          }\n        } else {\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n        }\n      }\n      out += ' } ';\n    }\n  }\n  if (it.schema.$ref && !$refKeywords) {\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\n    if ($breakOnError) {\n      out += ' } if (errors === ';\n      if ($top) {\n        out += '0';\n      } else {\n        out += 'errs_' + ($lvl);\n      }\n      out += ') { ';\n      $closingBraces2 += '}';\n    }\n  } else {\n    if (it.opts.v5 && it.schema.patternGroups) {\n      console.warn('keyword \"patternGroups\" is deprecated and disabled. Use option patternGroups: true to enable.');\n    }\n    var arr2 = it.RULES;\n    if (arr2) {\n      var $rulesGroup, i2 = -1,\n        l2 = arr2.length - 1;\n      while (i2 < l2) {\n        $rulesGroup = arr2[i2 += 1];\n        if ($shouldUseGroup($rulesGroup)) {\n          if ($rulesGroup.type) {\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\n          }\n          if (it.opts.useDefaults && !it.compositeRule) {\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\n              var $schema = it.schema.properties,\n                $schemaKeys = Object.keys($schema);\n              var arr3 = $schemaKeys;\n              if (arr3) {\n                var $propertyKey, i3 = -1,\n                  l3 = arr3.length - 1;\n                while (i3 < l3) {\n                  $propertyKey = arr3[i3 += 1];\n                  var $sch = $schema[$propertyKey];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + it.util.getProperty($propertyKey);\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\n              var arr4 = it.schema.items;\n              if (arr4) {\n                var $sch, $i = -1,\n                  l4 = arr4.length - 1;\n                while ($i < l4) {\n                  $sch = arr4[$i += 1];\n                  if ($sch.default !== undefined) {\n                    var $passData = $data + '[' + $i + ']';\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\n                    if (it.opts.useDefaults == 'shared') {\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\n                    } else {\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\n                    }\n                    out += '; ';\n                  }\n                }\n              }\n            }\n          }\n          var arr5 = $rulesGroup.rules;\n          if (arr5) {\n            var $rule, i5 = -1,\n              l5 = arr5.length - 1;\n            while (i5 < l5) {\n              $rule = arr5[i5 += 1];\n              if ($shouldUseRule($rule)) {\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\n                if ($code) {\n                  out += ' ' + ($code) + ' ';\n                  if ($breakOnError) {\n                    $closingBraces1 += '}';\n                  }\n                }\n              }\n            }\n          }\n          if ($breakOnError) {\n            out += ' ' + ($closingBraces1) + ' ';\n            $closingBraces1 = '';\n          }\n          if ($rulesGroup.type) {\n            out += ' } ';\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\n              out += ' else { ';\n              var $schemaPath = it.schemaPath + '.type',\n                $errSchemaPath = it.errSchemaPath + '/type';\n              var $$outStack = $$outStack || [];\n              $$outStack.push(out);\n              out = ''; /* istanbul ignore else */\n              if (it.createErrors !== false) {\n                out += ' { keyword: \\'' + ($errorKeyword || 'type') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\'';\n                if ($typeIsArray) {\n                  out += '' + ($typeSchema.join(\",\"));\n                } else {\n                  out += '' + ($typeSchema);\n                }\n                out += '\\' } ';\n                if (it.opts.messages !== false) {\n                  out += ' , message: \\'should be ';\n                  if ($typeIsArray) {\n                    out += '' + ($typeSchema.join(\",\"));\n                  } else {\n                    out += '' + ($typeSchema);\n                  }\n                  out += '\\' ';\n                }\n                if (it.opts.verbose) {\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n                }\n                out += ' } ';\n              } else {\n                out += ' {} ';\n              }\n              var __err = out;\n              out = $$outStack.pop();\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\n                if (it.async) {\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\n                } else {\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\n                }\n              } else {\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n              }\n              out += ' } ';\n            }\n          }\n          if ($breakOnError) {\n            out += ' if (errors === ';\n            if ($top) {\n              out += '0';\n            } else {\n              out += 'errs_' + ($lvl);\n            }\n            out += ') { ';\n            $closingBraces2 += '}';\n          }\n        }\n      }\n    }\n  }\n  if ($breakOnError) {\n    out += ' ' + ($closingBraces2) + ' ';\n  }\n  if ($top) {\n    if ($async) {\n      out += ' if (errors === 0) return data;           ';\n      out += ' else throw new ValidationError(vErrors); ';\n    } else {\n      out += ' validate.errors = vErrors; ';\n      out += ' return errors === 0;       ';\n    }\n    out += ' }); return validate;';\n  } else {\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\n  }\n  out = it.util.cleanUpCode(out);\n  if ($top) {\n    out = it.util.finalCleanUpCode(out, $async);\n  }\n\n  function $shouldUseGroup($rulesGroup) {\n    var rules = $rulesGroup.rules;\n    for (var i = 0; i < rules.length; i++)\n      if ($shouldUseRule(rules[i])) return true;\n  }\n\n  function $shouldUseRule($rule) {\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImlementsSomeKeyword($rule));\n  }\n\n  function $ruleImlementsSomeKeyword($rule) {\n    var impl = $rule.implements;\n    for (var i = 0; i < impl.length; i++)\n      if (it.schema[impl[i]] !== undefined) return true;\n  }\n  return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/validate.js\n")},"./node_modules/ajv/lib/keyword.js":
/*!*****************************************!*\
  !*** ./node_modules/ajv/lib/keyword.js ***!
  \*****************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$\\-]*$/i;\nvar customRuleCode = __webpack_require__(/*! ./dotjs/custom */ \"./node_modules/ajv/lib/dotjs/custom.js\");\n\nmodule.exports = {\n  add: addKeyword,\n  get: getKeyword,\n  remove: removeKeyword\n};\n\n/**\n * Define custom keyword\n * @this  Ajv\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\n */\nfunction addKeyword(keyword, definition) {\n  /* jshint validthis: true */\n  /* eslint no-shadow: 0 */\n  var RULES = this.RULES;\n\n  if (RULES.keywords[keyword])\n    throw new Error('Keyword ' + keyword + ' is already defined');\n\n  if (!IDENTIFIER.test(keyword))\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\n\n  if (definition) {\n    if (definition.macro && definition.valid !== undefined)\n      throw new Error('\"valid\" option cannot be used with macro keywords');\n\n    var dataType = definition.type;\n    if (Array.isArray(dataType)) {\n      var i, len = dataType.length;\n      for (i=0; i<len; i++) checkDataType(dataType[i]);\n      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);\n    } else {\n      if (dataType) checkDataType(dataType);\n      _addRule(keyword, dataType, definition);\n    }\n\n    var $data = definition.$data === true && this._opts.$data;\n    if ($data && !definition.validate)\n      throw new Error('$data support: \"validate\" function is not defined');\n\n    var metaSchema = definition.metaSchema;\n    if (metaSchema) {\n      if ($data) {\n        metaSchema = {\n          anyOf: [\n            metaSchema,\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#' }\n          ]\n        };\n      }\n      definition.validateSchema = this.compile(metaSchema, true);\n    }\n  }\n\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\n\n\n  function _addRule(keyword, dataType, definition) {\n    var ruleGroup;\n    for (var i=0; i<RULES.length; i++) {\n      var rg = RULES[i];\n      if (rg.type == dataType) {\n        ruleGroup = rg;\n        break;\n      }\n    }\n\n    if (!ruleGroup) {\n      ruleGroup = { type: dataType, rules: [] };\n      RULES.push(ruleGroup);\n    }\n\n    var rule = {\n      keyword: keyword,\n      definition: definition,\n      custom: true,\n      code: customRuleCode,\n      implements: definition.implements\n    };\n    ruleGroup.rules.push(rule);\n    RULES.custom[keyword] = rule;\n  }\n\n\n  function checkDataType(dataType) {\n    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);\n  }\n}\n\n\n/**\n * Get keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\n */\nfunction getKeyword(keyword) {\n  /* jshint validthis: true */\n  var rule = this.RULES.custom[keyword];\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\n}\n\n\n/**\n * Remove keyword\n * @this  Ajv\n * @param {String} keyword pre-defined or custom keyword.\n */\nfunction removeKeyword(keyword) {\n  /* jshint validthis: true */\n  var RULES = this.RULES;\n  delete RULES.keywords[keyword];\n  delete RULES.all[keyword];\n  delete RULES.custom[keyword];\n  for (var i=0; i<RULES.length; i++) {\n    var rules = RULES[i].rules;\n    for (var j=0; j<rules.length; j++) {\n      if (rules[j].keyword == keyword) {\n        rules.splice(j, 1);\n        break;\n      }\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9rZXl3b3JkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9rZXl3b3JkLmpzP2ZmZjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgSURFTlRJRklFUiA9IC9eW2Etel8kXVthLXowLTlfJFxcLV0qJC9pO1xudmFyIGN1c3RvbVJ1bGVDb2RlID0gcmVxdWlyZSgnLi9kb3Rqcy9jdXN0b20nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFkZDogYWRkS2V5d29yZCxcbiAgZ2V0OiBnZXRLZXl3b3JkLFxuICByZW1vdmU6IHJlbW92ZUtleXdvcmRcbn07XG5cbi8qKlxuICogRGVmaW5lIGN1c3RvbSBrZXl3b3JkXG4gKiBAdGhpcyAgQWp2XG4gKiBAcGFyYW0ge1N0cmluZ30ga2V5d29yZCBjdXN0b20ga2V5d29yZCwgc2hvdWxkIGJlIHVuaXF1ZSAoaW5jbHVkaW5nIGRpZmZlcmVudCBmcm9tIGFsbCBzdGFuZGFyZCwgY3VzdG9tIGFuZCBtYWNybyBrZXl3b3JkcykuXG4gKiBAcGFyYW0ge09iamVjdH0gZGVmaW5pdGlvbiBrZXl3b3JkIGRlZmluaXRpb24gb2JqZWN0IHdpdGggcHJvcGVydGllcyBgdHlwZWAgKHR5cGUocykgd2hpY2ggdGhlIGtleXdvcmQgYXBwbGllcyB0byksIGB2YWxpZGF0ZWAgb3IgYGNvbXBpbGVgLlxuICovXG5mdW5jdGlvbiBhZGRLZXl3b3JkKGtleXdvcmQsIGRlZmluaXRpb24pIHtcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuICAvKiBlc2xpbnQgbm8tc2hhZG93OiAwICovXG4gIHZhciBSVUxFUyA9IHRoaXMuUlVMRVM7XG5cbiAgaWYgKFJVTEVTLmtleXdvcmRzW2tleXdvcmRdKVxuICAgIHRocm93IG5ldyBFcnJvcignS2V5d29yZCAnICsga2V5d29yZCArICcgaXMgYWxyZWFkeSBkZWZpbmVkJyk7XG5cbiAgaWYgKCFJREVOVElGSUVSLnRlc3Qoa2V5d29yZCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdLZXl3b3JkICcgKyBrZXl3b3JkICsgJyBpcyBub3QgYSB2YWxpZCBpZGVudGlmaWVyJyk7XG5cbiAgaWYgKGRlZmluaXRpb24pIHtcbiAgICBpZiAoZGVmaW5pdGlvbi5tYWNybyAmJiBkZWZpbml0aW9uLnZhbGlkICE9PSB1bmRlZmluZWQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1widmFsaWRcIiBvcHRpb24gY2Fubm90IGJlIHVzZWQgd2l0aCBtYWNybyBrZXl3b3JkcycpO1xuXG4gICAgdmFyIGRhdGFUeXBlID0gZGVmaW5pdGlvbi50eXBlO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGFUeXBlKSkge1xuICAgICAgdmFyIGksIGxlbiA9IGRhdGFUeXBlLmxlbmd0aDtcbiAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSsrKSBjaGVja0RhdGFUeXBlKGRhdGFUeXBlW2ldKTtcbiAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSsrKSBfYWRkUnVsZShrZXl3b3JkLCBkYXRhVHlwZVtpXSwgZGVmaW5pdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChkYXRhVHlwZSkgY2hlY2tEYXRhVHlwZShkYXRhVHlwZSk7XG4gICAgICBfYWRkUnVsZShrZXl3b3JkLCBkYXRhVHlwZSwgZGVmaW5pdGlvbik7XG4gICAgfVxuXG4gICAgdmFyICRkYXRhID0gZGVmaW5pdGlvbi4kZGF0YSA9PT0gdHJ1ZSAmJiB0aGlzLl9vcHRzLiRkYXRhO1xuICAgIGlmICgkZGF0YSAmJiAhZGVmaW5pdGlvbi52YWxpZGF0ZSlcbiAgICAgIHRocm93IG5ldyBFcnJvcignJGRhdGEgc3VwcG9ydDogXCJ2YWxpZGF0ZVwiIGZ1bmN0aW9uIGlzIG5vdCBkZWZpbmVkJyk7XG5cbiAgICB2YXIgbWV0YVNjaGVtYSA9IGRlZmluaXRpb24ubWV0YVNjaGVtYTtcbiAgICBpZiAobWV0YVNjaGVtYSkge1xuICAgICAgaWYgKCRkYXRhKSB7XG4gICAgICAgIG1ldGFTY2hlbWEgPSB7XG4gICAgICAgICAgYW55T2Y6IFtcbiAgICAgICAgICAgIG1ldGFTY2hlbWEsXG4gICAgICAgICAgICB7ICckcmVmJzogJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9lcG9iZXJlemtpbi9hanYvbWFzdGVyL2xpYi9yZWZzLyRkYXRhLmpzb24jJyB9XG4gICAgICAgICAgXVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZGVmaW5pdGlvbi52YWxpZGF0ZVNjaGVtYSA9IHRoaXMuY29tcGlsZShtZXRhU2NoZW1hLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBSVUxFUy5rZXl3b3Jkc1trZXl3b3JkXSA9IFJVTEVTLmFsbFtrZXl3b3JkXSA9IHRydWU7XG5cblxuICBmdW5jdGlvbiBfYWRkUnVsZShrZXl3b3JkLCBkYXRhVHlwZSwgZGVmaW5pdGlvbikge1xuICAgIHZhciBydWxlR3JvdXA7XG4gICAgZm9yICh2YXIgaT0wOyBpPFJVTEVTLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcmcgPSBSVUxFU1tpXTtcbiAgICAgIGlmIChyZy50eXBlID09IGRhdGFUeXBlKSB7XG4gICAgICAgIHJ1bGVHcm91cCA9IHJnO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXJ1bGVHcm91cCkge1xuICAgICAgcnVsZUdyb3VwID0geyB0eXBlOiBkYXRhVHlwZSwgcnVsZXM6IFtdIH07XG4gICAgICBSVUxFUy5wdXNoKHJ1bGVHcm91cCk7XG4gICAgfVxuXG4gICAgdmFyIHJ1bGUgPSB7XG4gICAgICBrZXl3b3JkOiBrZXl3b3JkLFxuICAgICAgZGVmaW5pdGlvbjogZGVmaW5pdGlvbixcbiAgICAgIGN1c3RvbTogdHJ1ZSxcbiAgICAgIGNvZGU6IGN1c3RvbVJ1bGVDb2RlLFxuICAgICAgaW1wbGVtZW50czogZGVmaW5pdGlvbi5pbXBsZW1lbnRzXG4gICAgfTtcbiAgICBydWxlR3JvdXAucnVsZXMucHVzaChydWxlKTtcbiAgICBSVUxFUy5jdXN0b21ba2V5d29yZF0gPSBydWxlO1xuICB9XG5cblxuICBmdW5jdGlvbiBjaGVja0RhdGFUeXBlKGRhdGFUeXBlKSB7XG4gICAgaWYgKCFSVUxFUy50eXBlc1tkYXRhVHlwZV0pIHRocm93IG5ldyBFcnJvcignVW5rbm93biB0eXBlICcgKyBkYXRhVHlwZSk7XG4gIH1cbn1cblxuXG4vKipcbiAqIEdldCBrZXl3b3JkXG4gKiBAdGhpcyAgQWp2XG4gKiBAcGFyYW0ge1N0cmluZ30ga2V5d29yZCBwcmUtZGVmaW5lZCBvciBjdXN0b20ga2V5d29yZC5cbiAqIEByZXR1cm4ge09iamVjdHxCb29sZWFufSBjdXN0b20ga2V5d29yZCBkZWZpbml0aW9uLCBgdHJ1ZWAgaWYgaXQgaXMgYSBwcmVkZWZpbmVkIGtleXdvcmQsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBnZXRLZXl3b3JkKGtleXdvcmQpIHtcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuICB2YXIgcnVsZSA9IHRoaXMuUlVMRVMuY3VzdG9tW2tleXdvcmRdO1xuICByZXR1cm4gcnVsZSA/IHJ1bGUuZGVmaW5pdGlvbiA6IHRoaXMuUlVMRVMua2V5d29yZHNba2V5d29yZF0gfHwgZmFsc2U7XG59XG5cblxuLyoqXG4gKiBSZW1vdmUga2V5d29yZFxuICogQHRoaXMgIEFqdlxuICogQHBhcmFtIHtTdHJpbmd9IGtleXdvcmQgcHJlLWRlZmluZWQgb3IgY3VzdG9tIGtleXdvcmQuXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZUtleXdvcmQoa2V5d29yZCkge1xuICAvKiBqc2hpbnQgdmFsaWR0aGlzOiB0cnVlICovXG4gIHZhciBSVUxFUyA9IHRoaXMuUlVMRVM7XG4gIGRlbGV0ZSBSVUxFUy5rZXl3b3Jkc1trZXl3b3JkXTtcbiAgZGVsZXRlIFJVTEVTLmFsbFtrZXl3b3JkXTtcbiAgZGVsZXRlIFJVTEVTLmN1c3RvbVtrZXl3b3JkXTtcbiAgZm9yICh2YXIgaT0wOyBpPFJVTEVTLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHJ1bGVzID0gUlVMRVNbaV0ucnVsZXM7XG4gICAgZm9yICh2YXIgaj0wOyBqPHJ1bGVzLmxlbmd0aDsgaisrKSB7XG4gICAgICBpZiAocnVsZXNbal0ua2V5d29yZCA9PSBrZXl3b3JkKSB7XG4gICAgICAgIHJ1bGVzLnNwbGljZShqLCAxKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/keyword.js\n")},"./node_modules/ajv/lib/patternGroups.js":
/*!***********************************************!*\
  !*** ./node_modules/ajv/lib/patternGroups.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-06/schema';\n\nmodule.exports = function (ajv) {\n  var defaultMeta = ajv._opts.defaultMeta;\n  var metaSchemaRef = typeof defaultMeta == 'string'\n                      ? { $ref: defaultMeta }\n                      : ajv.getSchema(META_SCHEMA_ID)\n                        ? { $ref: META_SCHEMA_ID }\n                        : {};\n\n  ajv.addKeyword('patternGroups', {\n    // implemented in properties.jst\n    metaSchema: {\n      type: 'object',\n      additionalProperties: {\n        type: 'object',\n        required: [ 'schema' ],\n        properties: {\n          maximum: {\n            type: 'integer',\n            minimum: 0\n          },\n          minimum: {\n            type: 'integer',\n            minimum: 0\n          },\n          schema: metaSchemaRef\n        },\n        additionalProperties: false\n      }\n    }\n  });\n  ajv.RULES.all.properties.implements.push('patternGroups');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9wYXR0ZXJuR3JvdXBzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9wYXR0ZXJuR3JvdXBzLmpzP2RhZTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgTUVUQV9TQ0hFTUFfSUQgPSAnaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNi9zY2hlbWEnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhanYpIHtcbiAgdmFyIGRlZmF1bHRNZXRhID0gYWp2Ll9vcHRzLmRlZmF1bHRNZXRhO1xuICB2YXIgbWV0YVNjaGVtYVJlZiA9IHR5cGVvZiBkZWZhdWx0TWV0YSA9PSAnc3RyaW5nJ1xuICAgICAgICAgICAgICAgICAgICAgID8geyAkcmVmOiBkZWZhdWx0TWV0YSB9XG4gICAgICAgICAgICAgICAgICAgICAgOiBhanYuZ2V0U2NoZW1hKE1FVEFfU0NIRU1BX0lEKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyB7ICRyZWY6IE1FVEFfU0NIRU1BX0lEIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDoge307XG5cbiAgYWp2LmFkZEtleXdvcmQoJ3BhdHRlcm5Hcm91cHMnLCB7XG4gICAgLy8gaW1wbGVtZW50ZWQgaW4gcHJvcGVydGllcy5qc3RcbiAgICBtZXRhU2NoZW1hOiB7XG4gICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiB7XG4gICAgICAgIHR5cGU6ICdvYmplY3QnLFxuICAgICAgICByZXF1aXJlZDogWyAnc2NoZW1hJyBdLFxuICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgbWF4aW11bToge1xuICAgICAgICAgICAgdHlwZTogJ2ludGVnZXInLFxuICAgICAgICAgICAgbWluaW11bTogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgbWluaW11bToge1xuICAgICAgICAgICAgdHlwZTogJ2ludGVnZXInLFxuICAgICAgICAgICAgbWluaW11bTogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2NoZW1hOiBtZXRhU2NoZW1hUmVmXG4gICAgICAgIH0sXG4gICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIGFqdi5SVUxFUy5hbGwucHJvcGVydGllcy5pbXBsZW1lbnRzLnB1c2goJ3BhdHRlcm5Hcm91cHMnKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/patternGroups.js\n")},"./node_modules/ajv/lib/refs/$data.json":
/*!**********************************************!*\
  !*** ./node_modules/ajv/lib/refs/$data.json ***!
  \**********************************************/
/*! exports provided: $schema, $id, description, type, required, properties, additionalProperties, default */function(module){eval('module.exports = JSON.parse("{\\"$schema\\":\\"http://json-schema.org/draft-06/schema#\\",\\"$id\\":\\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#\\",\\"description\\":\\"Meta-schema for $data reference (JSON-schema extension proposal)\\",\\"type\\":\\"object\\",\\"required\\":[\\"$data\\"],\\"properties\\":{\\"$data\\":{\\"type\\":\\"string\\",\\"anyOf\\":[{\\"format\\":\\"relative-json-pointer\\"},{\\"format\\":\\"json-pointer\\"}]}},\\"additionalProperties\\":false}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9yZWZzLyRkYXRhLmpzb24uanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/refs/$data.json\n')},"./node_modules/ajv/lib/refs/json-schema-draft-06.json":
/*!*************************************************************!*\
  !*** ./node_modules/ajv/lib/refs/json-schema-draft-06.json ***!
  \*************************************************************/
/*! exports provided: $schema, $id, title, definitions, type, properties, default */function(module){eval('module.exports = JSON.parse("{\\"$schema\\":\\"http://json-schema.org/draft-06/schema#\\",\\"$id\\":\\"http://json-schema.org/draft-06/schema#\\",\\"title\\":\\"Core schema meta-schema\\",\\"definitions\\":{\\"schemaArray\\":{\\"type\\":\\"array\\",\\"minItems\\":1,\\"items\\":{\\"$ref\\":\\"#\\"}},\\"nonNegativeInteger\\":{\\"type\\":\\"integer\\",\\"minimum\\":0},\\"nonNegativeIntegerDefault0\\":{\\"allOf\\":[{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},{\\"default\\":0}]},\\"simpleTypes\\":{\\"enum\\":[\\"array\\",\\"boolean\\",\\"integer\\",\\"null\\",\\"number\\",\\"object\\",\\"string\\"]},\\"stringArray\\":{\\"type\\":\\"array\\",\\"items\\":{\\"type\\":\\"string\\"},\\"uniqueItems\\":true,\\"default\\":[]}},\\"type\\":[\\"object\\",\\"boolean\\"],\\"properties\\":{\\"$id\\":{\\"type\\":\\"string\\",\\"format\\":\\"uri-reference\\"},\\"$schema\\":{\\"type\\":\\"string\\",\\"format\\":\\"uri\\"},\\"$ref\\":{\\"type\\":\\"string\\",\\"format\\":\\"uri-reference\\"},\\"title\\":{\\"type\\":\\"string\\"},\\"description\\":{\\"type\\":\\"string\\"},\\"default\\":{},\\"multipleOf\\":{\\"type\\":\\"number\\",\\"exclusiveMinimum\\":0},\\"maximum\\":{\\"type\\":\\"number\\"},\\"exclusiveMaximum\\":{\\"type\\":\\"number\\"},\\"minimum\\":{\\"type\\":\\"number\\"},\\"exclusiveMinimum\\":{\\"type\\":\\"number\\"},\\"maxLength\\":{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},\\"minLength\\":{\\"$ref\\":\\"#/definitions/nonNegativeIntegerDefault0\\"},\\"pattern\\":{\\"type\\":\\"string\\",\\"format\\":\\"regex\\"},\\"additionalItems\\":{\\"$ref\\":\\"#\\"},\\"items\\":{\\"anyOf\\":[{\\"$ref\\":\\"#\\"},{\\"$ref\\":\\"#/definitions/schemaArray\\"}],\\"default\\":{}},\\"maxItems\\":{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},\\"minItems\\":{\\"$ref\\":\\"#/definitions/nonNegativeIntegerDefault0\\"},\\"uniqueItems\\":{\\"type\\":\\"boolean\\",\\"default\\":false},\\"contains\\":{\\"$ref\\":\\"#\\"},\\"maxProperties\\":{\\"$ref\\":\\"#/definitions/nonNegativeInteger\\"},\\"minProperties\\":{\\"$ref\\":\\"#/definitions/nonNegativeIntegerDefault0\\"},\\"required\\":{\\"$ref\\":\\"#/definitions/stringArray\\"},\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"definitions\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"default\\":{}},\\"properties\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"default\\":{}},\\"patternProperties\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"$ref\\":\\"#\\"},\\"default\\":{}},\\"dependencies\\":{\\"type\\":\\"object\\",\\"additionalProperties\\":{\\"anyOf\\":[{\\"$ref\\":\\"#\\"},{\\"$ref\\":\\"#/definitions/stringArray\\"}]}},\\"propertyNames\\":{\\"$ref\\":\\"#\\"},\\"const\\":{},\\"enum\\":{\\"type\\":\\"array\\",\\"minItems\\":1,\\"uniqueItems\\":true},\\"type\\":{\\"anyOf\\":[{\\"$ref\\":\\"#/definitions/simpleTypes\\"},{\\"type\\":\\"array\\",\\"items\\":{\\"$ref\\":\\"#/definitions/simpleTypes\\"},\\"minItems\\":1,\\"uniqueItems\\":true}]},\\"format\\":{\\"type\\":\\"string\\"},\\"allOf\\":{\\"$ref\\":\\"#/definitions/schemaArray\\"},\\"anyOf\\":{\\"$ref\\":\\"#/definitions/schemaArray\\"},\\"oneOf\\":{\\"$ref\\":\\"#/definitions/schemaArray\\"},\\"not\\":{\\"$ref\\":\\"#\\"}},\\"default\\":{}}");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9yZWZzL2pzb24tc2NoZW1hLWRyYWZ0LTA2Lmpzb24uanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/refs/json-schema-draft-06.json\n')},"./node_modules/co/index.js":
/*!**********************************!*\
  !*** ./node_modules/co/index.js ***!
  \**********************************/
/*! no static exports found */function(module,exports){eval("\n/**\n * slice() reference.\n */\n\nvar slice = Array.prototype.slice;\n\n/**\n * Expose `co`.\n */\n\nmodule.exports = co['default'] = co.co = co;\n\n/**\n * Wrap the given generator `fn` into a\n * function that returns a promise.\n * This is a separate function so that\n * every `co()` call doesn't create a new,\n * unnecessary closure.\n *\n * @param {GeneratorFunction} fn\n * @return {Function}\n * @api public\n */\n\nco.wrap = function (fn) {\n  createPromise.__generatorFunction__ = fn;\n  return createPromise;\n  function createPromise() {\n    return co.call(this, fn.apply(this, arguments));\n  }\n};\n\n/**\n * Execute the generator function or a generator\n * and return a promise.\n *\n * @param {Function} fn\n * @return {Promise}\n * @api public\n */\n\nfunction co(gen) {\n  var ctx = this;\n  var args = slice.call(arguments, 1)\n\n  // we wrap everything in a promise to avoid promise chaining,\n  // which leads to memory leak errors.\n  // see https://github.com/tj/co/issues/180\n  return new Promise(function(resolve, reject) {\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\n\n    onFulfilled();\n\n    /**\n     * @param {Mixed} res\n     * @return {Promise}\n     * @api private\n     */\n\n    function onFulfilled(res) {\n      var ret;\n      try {\n        ret = gen.next(res);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * @param {Error} err\n     * @return {Promise}\n     * @api private\n     */\n\n    function onRejected(err) {\n      var ret;\n      try {\n        ret = gen.throw(err);\n      } catch (e) {\n        return reject(e);\n      }\n      next(ret);\n    }\n\n    /**\n     * Get the next value in the generator,\n     * return a promise.\n     *\n     * @param {Object} ret\n     * @return {Promise}\n     * @api private\n     */\n\n    function next(ret) {\n      if (ret.done) return resolve(ret.value);\n      var value = toPromise.call(ctx, ret.value);\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\n        + 'but the following object was passed: \"' + String(ret.value) + '\"'));\n    }\n  });\n}\n\n/**\n * Convert a `yield`ed value into a promise.\n *\n * @param {Mixed} obj\n * @return {Promise}\n * @api private\n */\n\nfunction toPromise(obj) {\n  if (!obj) return obj;\n  if (isPromise(obj)) return obj;\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\n  if (isObject(obj)) return objectToPromise.call(this, obj);\n  return obj;\n}\n\n/**\n * Convert a thunk to a promise.\n *\n * @param {Function}\n * @return {Promise}\n * @api private\n */\n\nfunction thunkToPromise(fn) {\n  var ctx = this;\n  return new Promise(function (resolve, reject) {\n    fn.call(ctx, function (err, res) {\n      if (err) return reject(err);\n      if (arguments.length > 2) res = slice.call(arguments, 1);\n      resolve(res);\n    });\n  });\n}\n\n/**\n * Convert an array of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Array} obj\n * @return {Promise}\n * @api private\n */\n\nfunction arrayToPromise(obj) {\n  return Promise.all(obj.map(toPromise, this));\n}\n\n/**\n * Convert an object of \"yieldables\" to a promise.\n * Uses `Promise.all()` internally.\n *\n * @param {Object} obj\n * @return {Promise}\n * @api private\n */\n\nfunction objectToPromise(obj){\n  var results = new obj.constructor();\n  var keys = Object.keys(obj);\n  var promises = [];\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var promise = toPromise.call(this, obj[key]);\n    if (promise && isPromise(promise)) defer(promise, key);\n    else results[key] = obj[key];\n  }\n  return Promise.all(promises).then(function () {\n    return results;\n  });\n\n  function defer(promise, key) {\n    // predefine the key in the result\n    results[key] = undefined;\n    promises.push(promise.then(function (res) {\n      results[key] = res;\n    }));\n  }\n}\n\n/**\n * Check if `obj` is a promise.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isPromise(obj) {\n  return 'function' == typeof obj.then;\n}\n\n/**\n * Check if `obj` is a generator.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isGenerator(obj) {\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\n}\n\n/**\n * Check if `obj` is a generator function.\n *\n * @param {Mixed} obj\n * @return {Boolean}\n * @api private\n */\nfunction isGeneratorFunction(obj) {\n  var constructor = obj.constructor;\n  if (!constructor) return false;\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\n  return isGenerator(constructor.prototype);\n}\n\n/**\n * Check for plain object.\n *\n * @param {Mixed} val\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(val) {\n  return Object == val.constructor;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/co/index.js\n")},"./node_modules/json-schema-traverse/index.js":
/*!****************************************************!*\
  !*** ./node_modules/json-schema-traverse/index.js ***!
  \****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n  _traverse(opts, cb, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, cb, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    cb(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, cb, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, cb, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, cb, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbi1zY2hlbWEtdHJhdmVyc2UvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9qc29uLXNjaGVtYS10cmF2ZXJzZS9pbmRleC5qcz84OWE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHRyYXZlcnNlID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc2NoZW1hLCBvcHRzLCBjYikge1xuICBpZiAodHlwZW9mIG9wdHMgPT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gb3B0cztcbiAgICBvcHRzID0ge307XG4gIH1cbiAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hlbWEsICcnLCBzY2hlbWEpO1xufTtcblxuXG50cmF2ZXJzZS5rZXl3b3JkcyA9IHtcbiAgYWRkaXRpb25hbEl0ZW1zOiB0cnVlLFxuICBpdGVtczogdHJ1ZSxcbiAgY29udGFpbnM6IHRydWUsXG4gIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiB0cnVlLFxuICBwcm9wZXJ0eU5hbWVzOiB0cnVlLFxuICBub3Q6IHRydWVcbn07XG5cbnRyYXZlcnNlLmFycmF5S2V5d29yZHMgPSB7XG4gIGl0ZW1zOiB0cnVlLFxuICBhbGxPZjogdHJ1ZSxcbiAgYW55T2Y6IHRydWUsXG4gIG9uZU9mOiB0cnVlXG59O1xuXG50cmF2ZXJzZS5wcm9wc0tleXdvcmRzID0ge1xuICBkZWZpbml0aW9uczogdHJ1ZSxcbiAgcHJvcGVydGllczogdHJ1ZSxcbiAgcGF0dGVyblByb3BlcnRpZXM6IHRydWUsXG4gIGRlcGVuZGVuY2llczogdHJ1ZVxufTtcblxudHJhdmVyc2Uuc2tpcEtleXdvcmRzID0ge1xuICBlbnVtOiB0cnVlLFxuICBjb25zdDogdHJ1ZSxcbiAgcmVxdWlyZWQ6IHRydWUsXG4gIG1heGltdW06IHRydWUsXG4gIG1pbmltdW06IHRydWUsXG4gIGV4Y2x1c2l2ZU1heGltdW06IHRydWUsXG4gIGV4Y2x1c2l2ZU1pbmltdW06IHRydWUsXG4gIG11bHRpcGxlT2Y6IHRydWUsXG4gIG1heExlbmd0aDogdHJ1ZSxcbiAgbWluTGVuZ3RoOiB0cnVlLFxuICBwYXR0ZXJuOiB0cnVlLFxuICBmb3JtYXQ6IHRydWUsXG4gIG1heEl0ZW1zOiB0cnVlLFxuICBtaW5JdGVtczogdHJ1ZSxcbiAgdW5pcXVlSXRlbXM6IHRydWUsXG4gIG1heFByb3BlcnRpZXM6IHRydWUsXG4gIG1pblByb3BlcnRpZXM6IHRydWVcbn07XG5cblxuZnVuY3Rpb24gX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hlbWEsIGpzb25QdHIsIHJvb3RTY2hlbWEsIHBhcmVudEpzb25QdHIsIHBhcmVudEtleXdvcmQsIHBhcmVudFNjaGVtYSwga2V5SW5kZXgpIHtcbiAgaWYgKHNjaGVtYSAmJiB0eXBlb2Ygc2NoZW1hID09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KHNjaGVtYSkpIHtcbiAgICBjYihzY2hlbWEsIGpzb25QdHIsIHJvb3RTY2hlbWEsIHBhcmVudEpzb25QdHIsIHBhcmVudEtleXdvcmQsIHBhcmVudFNjaGVtYSwga2V5SW5kZXgpO1xuICAgIGZvciAodmFyIGtleSBpbiBzY2hlbWEpIHtcbiAgICAgIHZhciBzY2ggPSBzY2hlbWFba2V5XTtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHNjaCkpIHtcbiAgICAgICAgaWYgKGtleSBpbiB0cmF2ZXJzZS5hcnJheUtleXdvcmRzKSB7XG4gICAgICAgICAgZm9yICh2YXIgaT0wOyBpPHNjaC5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIF90cmF2ZXJzZShvcHRzLCBjYiwgc2NoW2ldLCBqc29uUHRyICsgJy8nICsga2V5ICsgJy8nICsgaSwgcm9vdFNjaGVtYSwganNvblB0ciwga2V5LCBzY2hlbWEsIGkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGtleSBpbiB0cmF2ZXJzZS5wcm9wc0tleXdvcmRzKSB7XG4gICAgICAgIGlmIChzY2ggJiYgdHlwZW9mIHNjaCA9PSAnb2JqZWN0Jykge1xuICAgICAgICAgIGZvciAodmFyIHByb3AgaW4gc2NoKVxuICAgICAgICAgICAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hbcHJvcF0sIGpzb25QdHIgKyAnLycgKyBrZXkgKyAnLycgKyBlc2NhcGVKc29uUHRyKHByb3ApLCByb290U2NoZW1hLCBqc29uUHRyLCBrZXksIHNjaGVtYSwgcHJvcCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoa2V5IGluIHRyYXZlcnNlLmtleXdvcmRzIHx8IChvcHRzLmFsbEtleXMgJiYgIShrZXkgaW4gdHJhdmVyc2Uuc2tpcEtleXdvcmRzKSkpIHtcbiAgICAgICAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2gsIGpzb25QdHIgKyAnLycgKyBrZXksIHJvb3RTY2hlbWEsIGpzb25QdHIsIGtleSwgc2NoZW1hKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBlc2NhcGVKc29uUHRyKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL34vZywgJ34wJykucmVwbGFjZSgvXFwvL2csICd+MScpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/json-schema-traverse/index.js\n")},"./node_modules/json-stable-stringify/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/json-stable-stringify/index.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("var json = typeof JSON !== 'undefined' ? JSON : __webpack_require__(/*! jsonify */ \"./node_modules/jsonify/index.js\");\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbi1zdGFibGUtc3RyaW5naWZ5L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvanNvbi1zdGFibGUtc3RyaW5naWZ5L2luZGV4LmpzP2FjNGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGpzb24gPSB0eXBlb2YgSlNPTiAhPT0gJ3VuZGVmaW5lZCcgPyBKU09OIDogcmVxdWlyZSgnanNvbmlmeScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICBpZiAoIW9wdHMpIG9wdHMgPSB7fTtcbiAgICBpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIG9wdHMgPSB7IGNtcDogb3B0cyB9O1xuICAgIHZhciBzcGFjZSA9IG9wdHMuc3BhY2UgfHwgJyc7XG4gICAgaWYgKHR5cGVvZiBzcGFjZSA9PT0gJ251bWJlcicpIHNwYWNlID0gQXJyYXkoc3BhY2UrMSkuam9pbignICcpO1xuICAgIHZhciBjeWNsZXMgPSAodHlwZW9mIG9wdHMuY3ljbGVzID09PSAnYm9vbGVhbicpID8gb3B0cy5jeWNsZXMgOiBmYWxzZTtcbiAgICB2YXIgcmVwbGFjZXIgPSBvcHRzLnJlcGxhY2VyIHx8IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9O1xuXG4gICAgdmFyIGNtcCA9IG9wdHMuY21wICYmIChmdW5jdGlvbiAoZikge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgIHZhciBhb2JqID0geyBrZXk6IGEsIHZhbHVlOiBub2RlW2FdIH07XG4gICAgICAgICAgICAgICAgdmFyIGJvYmogPSB7IGtleTogYiwgdmFsdWU6IG5vZGVbYl0gfTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZihhb2JqLCBib2JqKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfSkob3B0cy5jbXApO1xuXG4gICAgdmFyIHNlZW4gPSBbXTtcbiAgICByZXR1cm4gKGZ1bmN0aW9uIHN0cmluZ2lmeSAocGFyZW50LCBrZXksIG5vZGUsIGxldmVsKSB7XG4gICAgICAgIHZhciBpbmRlbnQgPSBzcGFjZSA/ICgnXFxuJyArIG5ldyBBcnJheShsZXZlbCArIDEpLmpvaW4oc3BhY2UpKSA6ICcnO1xuICAgICAgICB2YXIgY29sb25TZXBhcmF0b3IgPSBzcGFjZSA/ICc6ICcgOiAnOic7XG5cbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS50b0pTT04gJiYgdHlwZW9mIG5vZGUudG9KU09OID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBub2RlID0gbm9kZS50b0pTT04oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIG5vZGUgPSByZXBsYWNlci5jYWxsKHBhcmVudCwga2V5LCBub2RlKTtcblxuICAgICAgICBpZiAobm9kZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBub2RlICE9PSAnb2JqZWN0JyB8fCBub2RlID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4ganNvbi5zdHJpbmdpZnkobm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQXJyYXkobm9kZSkpIHtcbiAgICAgICAgICAgIHZhciBvdXQgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gc3RyaW5naWZ5KG5vZGUsIGksIG5vZGVbaV0sIGxldmVsKzEpIHx8IGpzb24uc3RyaW5naWZ5KG51bGwpO1xuICAgICAgICAgICAgICAgIG91dC5wdXNoKGluZGVudCArIHNwYWNlICsgaXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gJ1snICsgb3V0LmpvaW4oJywnKSArIGluZGVudCArICddJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChzZWVuLmluZGV4T2Yobm9kZSkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgaWYgKGN5Y2xlcykgcmV0dXJuIGpzb24uc3RyaW5naWZ5KCdfX2N5Y2xlX18nKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDb252ZXJ0aW5nIGNpcmN1bGFyIHN0cnVjdHVyZSB0byBKU09OJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHNlZW4ucHVzaChub2RlKTtcblxuICAgICAgICAgICAgdmFyIGtleXMgPSBvYmplY3RLZXlzKG5vZGUpLnNvcnQoY21wICYmIGNtcChub2RlKSk7XG4gICAgICAgICAgICB2YXIgb3V0ID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBzdHJpbmdpZnkobm9kZSwga2V5LCBub2RlW2tleV0sIGxldmVsKzEpO1xuXG4gICAgICAgICAgICAgICAgaWYoIXZhbHVlKSBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgIHZhciBrZXlWYWx1ZSA9IGpzb24uc3RyaW5naWZ5KGtleSlcbiAgICAgICAgICAgICAgICAgICAgKyBjb2xvblNlcGFyYXRvclxuICAgICAgICAgICAgICAgICAgICArIHZhbHVlO1xuICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICBvdXQucHVzaChpbmRlbnQgKyBzcGFjZSArIGtleVZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlZW4uc3BsaWNlKHNlZW4uaW5kZXhPZihub2RlKSwgMSk7XG4gICAgICAgICAgICByZXR1cm4gJ3snICsgb3V0LmpvaW4oJywnKSArIGluZGVudCArICd9JztcbiAgICAgICAgfVxuICAgIH0pKHsgJyc6IG9iaiB9LCAnJywgb2JqLCAwKTtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeCkge1xuICAgIHJldHVybiB7fS50b1N0cmluZy5jYWxsKHgpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcblxudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gICAgdmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkgfHwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdHJ1ZSB9O1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgICBpZiAoaGFzLmNhbGwob2JqLCBrZXkpKSBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gICAgcmV0dXJuIGtleXM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/json-stable-stringify/index.js\n")},"./node_modules/jsonify/index.js":
/*!***************************************!*\
  !*** ./node_modules/jsonify/index.js ***!
  \***************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports.parse = __webpack_require__(/*! ./lib/parse */ "./node_modules/jsonify/lib/parse.js");\nexports.stringify = __webpack_require__(/*! ./lib/stringify */ "./node_modules/jsonify/lib/stringify.js");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbmlmeS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2pzb25pZnkvaW5kZXguanM/NzZjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnBhcnNlID0gcmVxdWlyZSgnLi9saWIvcGFyc2UnKTtcbmV4cG9ydHMuc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9saWIvc3RyaW5naWZ5Jyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/jsonify/index.js\n')},"./node_modules/jsonify/lib/parse.js":
/*!*******************************************!*\
  !*** ./node_modules/jsonify/lib/parse.js ***!
  \*******************************************/
/*! no static exports found */function(module,exports){eval("var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jsonify/lib/parse.js\n")},"./node_modules/jsonify/lib/stringify.js":
/*!***********************************************!*\
  !*** ./node_modules/jsonify/lib/stringify.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports){eval("var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jsonify/lib/stringify.js\n")},"./node_modules/node-libs-browser/node_modules/punycode/punycode.js":
/*!**************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/punycode/punycode.js ***!
  \**************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports =  true && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule =  true && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\t\treturn punycode;\n\t\t}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js\n")},"./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2RlY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9kZWNvZGUuanM/OTFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vLyBJZiBvYmouaGFzT3duUHJvcGVydHkgaGFzIGJlZW4gb3ZlcnJpZGRlbiwgdGhlbiBjYWxsaW5nXG4vLyBvYmouaGFzT3duUHJvcGVydHkocHJvcCkgd2lsbCBicmVhay5cbi8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2pveWVudC9ub2RlL2lzc3Vlcy8xNzA3XG5mdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHFzLCBzZXAsIGVxLCBvcHRpb25zKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICB2YXIgb2JqID0ge307XG5cbiAgaWYgKHR5cGVvZiBxcyAhPT0gJ3N0cmluZycgfHwgcXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIHZhciByZWdleHAgPSAvXFwrL2c7XG4gIHFzID0gcXMuc3BsaXQoc2VwKTtcblxuICB2YXIgbWF4S2V5cyA9IDEwMDA7XG4gIGlmIChvcHRpb25zICYmIHR5cGVvZiBvcHRpb25zLm1heEtleXMgPT09ICdudW1iZXInKSB7XG4gICAgbWF4S2V5cyA9IG9wdGlvbnMubWF4S2V5cztcbiAgfVxuXG4gIHZhciBsZW4gPSBxcy5sZW5ndGg7XG4gIC8vIG1heEtleXMgPD0gMCBtZWFucyB0aGF0IHdlIHNob3VsZCBub3QgbGltaXQga2V5cyBjb3VudFxuICBpZiAobWF4S2V5cyA+IDAgJiYgbGVuID4gbWF4S2V5cykge1xuICAgIGxlbiA9IG1heEtleXM7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHggPSBxc1tpXS5yZXBsYWNlKHJlZ2V4cCwgJyUyMCcpLFxuICAgICAgICBpZHggPSB4LmluZGV4T2YoZXEpLFxuICAgICAgICBrc3RyLCB2c3RyLCBrLCB2O1xuXG4gICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICBrc3RyID0geC5zdWJzdHIoMCwgaWR4KTtcbiAgICAgIHZzdHIgPSB4LnN1YnN0cihpZHggKyAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAga3N0ciA9IHg7XG4gICAgICB2c3RyID0gJyc7XG4gICAgfVxuXG4gICAgayA9IGRlY29kZVVSSUNvbXBvbmVudChrc3RyKTtcbiAgICB2ID0gZGVjb2RlVVJJQ29tcG9uZW50KHZzdHIpO1xuXG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eShvYmosIGspKSB7XG4gICAgICBvYmpba10gPSB2O1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShvYmpba10pKSB7XG4gICAgICBvYmpba10ucHVzaCh2KTtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqW2tdID0gW29ialtrXSwgdl07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9iajtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeHMpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/decode.js\n")},"./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9lbmNvZGUuanM/ZTA5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5UHJpbWl0aXZlID0gZnVuY3Rpb24odikge1xuICBzd2l0Y2ggKHR5cGVvZiB2KSB7XG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIHJldHVybiB2O1xuXG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICByZXR1cm4gdiA/ICd0cnVlJyA6ICdmYWxzZSc7XG5cbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgcmV0dXJuIGlzRmluaXRlKHYpID8gdiA6ICcnO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnJztcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmosIHNlcCwgZXEsIG5hbWUpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIGlmIChvYmogPT09IG51bGwpIHtcbiAgICBvYmogPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gbWFwKG9iamVjdEtleXMob2JqKSwgZnVuY3Rpb24oaykge1xuICAgICAgdmFyIGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShrKSkgKyBlcTtcbiAgICAgIGlmIChpc0FycmF5KG9ialtrXSkpIHtcbiAgICAgICAgcmV0dXJuIG1hcChvYmpba10sIGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKHYpKTtcbiAgICAgICAgfSkuam9pbihzZXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKTtcbiAgICAgIH1cbiAgICB9KS5qb2luKHNlcCk7XG5cbiAgfVxuXG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXG4gICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9iaikpO1xufTtcblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbmZ1bmN0aW9uIG1hcCAoeHMsIGYpIHtcbiAgaWYgKHhzLm1hcCkgcmV0dXJuIHhzLm1hcChmKTtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHhzLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzLnB1c2goZih4c1tpXSwgaSkpO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICB2YXIgcmVzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgcmVzLnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/encode.js\n")},"./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval('\n\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/querystring-es3/decode.js");\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/querystring-es3/encode.js");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzP2IzODMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/index.js\n')},"./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar punycode = __webpack_require__(/*! punycode */ \"./node_modules/node-libs-browser/node_modules/punycode/punycode.js\");\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/url/util.js\");\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = __webpack_require__(/*! querystring */ \"./node_modules/querystring-es3/index.js\");\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/url/url.js\n")},"./node_modules/url/util.js":
/*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy91cmwvdXRpbC5qcz8zNWU4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzU3RyaW5nOiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gdHlwZW9mKGFyZykgPT09ICdzdHJpbmcnO1xuICB9LFxuICBpc09iamVjdDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG4gIH0sXG4gIGlzTnVsbDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbiAgfSxcbiAgaXNOdWxsT3JVbmRlZmluZWQ6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBhcmcgPT0gbnVsbDtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/url/util.js\n")},"./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcz9jZDAwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n')},"./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */function(module,exports){eval('module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLyh3ZWJwYWNrKS9idWlsZGluL21vZHVsZS5qcz9jZWQyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XG5cdGlmICghbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdG1vZHVsZS5kZXByZWNhdGUgPSBmdW5jdGlvbigpIHt9O1xuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\n')},"./node_modules/worker-loader/dist/workers/InlineWorker.js":
/*!*****************************************************************!*\
  !*** ./node_modules/worker-loader/dist/workers/InlineWorker.js ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){"use strict";eval("\n\n// http://stackoverflow.com/questions/10343913/how-to-create-a-web-worker-from-a-string\n\nvar URL = window.URL || window.webkitURL;\n\nmodule.exports = function (content, url) {\n  try {\n    try {\n      var blob;\n\n      try {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n\n        blob = new BlobBuilder();\n\n        blob.append(content);\n\n        blob = blob.getBlob();\n      } catch (e) {\n        // The proposed API\n        blob = new Blob([content]);\n      }\n\n      return new Worker(URL.createObjectURL(blob));\n    } catch (e) {\n      return new Worker('data:application/javascript,' + encodeURIComponent(content));\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error('Inline worker is not supported');\n    }\n\n    return new Worker(url);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd29ya2VyLWxvYWRlci9kaXN0L3dvcmtlcnMvSW5saW5lV29ya2VyLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvd29ya2VyLWxvYWRlci9kaXN0L3dvcmtlcnMvSW5saW5lV29ya2VyLmpzPzc3ODUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzEwMzQzOTEzL2hvdy10by1jcmVhdGUtYS13ZWItd29ya2VyLWZyb20tYS1zdHJpbmdcblxudmFyIFVSTCA9IHdpbmRvdy5VUkwgfHwgd2luZG93LndlYmtpdFVSTDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29udGVudCwgdXJsKSB7XG4gIHRyeSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBibG9iO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyBCbG9iQnVpbGRlciA9IERlcHJlY2F0ZWQsIGJ1dCB3aWRlbHkgaW1wbGVtZW50ZWRcbiAgICAgICAgdmFyIEJsb2JCdWlsZGVyID0gd2luZG93LkJsb2JCdWlsZGVyIHx8IHdpbmRvdy5XZWJLaXRCbG9iQnVpbGRlciB8fCB3aW5kb3cuTW96QmxvYkJ1aWxkZXIgfHwgd2luZG93Lk1TQmxvYkJ1aWxkZXI7XG5cbiAgICAgICAgYmxvYiA9IG5ldyBCbG9iQnVpbGRlcigpO1xuXG4gICAgICAgIGJsb2IuYXBwZW5kKGNvbnRlbnQpO1xuXG4gICAgICAgIGJsb2IgPSBibG9iLmdldEJsb2IoKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gVGhlIHByb3Bvc2VkIEFQSVxuICAgICAgICBibG9iID0gbmV3IEJsb2IoW2NvbnRlbnRdKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5ldyBXb3JrZXIoVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIG5ldyBXb3JrZXIoJ2RhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdCwnICsgZW5jb2RlVVJJQ29tcG9uZW50KGNvbnRlbnQpKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoIXVybCkge1xuICAgICAgdGhyb3cgRXJyb3IoJ0lubGluZSB3b3JrZXIgaXMgbm90IHN1cHBvcnRlZCcpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgV29ya2VyKHVybCk7XG4gIH1cbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/worker-loader/dist/workers/InlineWorker.js\n")},"./src/connection.js":
/*!***************************!*\
  !*** ./src/connection.js ***!
  \***************************/
/*! exports provided: BasicConnection */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BasicConnection", function() { return BasicConnection; });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./src/utils.js");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc.js */ "./src/rpc.js");\n\n\nclass BasicConnection {\n  constructor(sourceIframe) {\n    this._init = new _utils_js__WEBPACK_IMPORTED_MODULE_0__["Whenable"](true);\n    this._fail = new _utils_js__WEBPACK_IMPORTED_MODULE_0__["Whenable"](true);\n    this._disconnected = false;\n    this.pluginConfig = {};\n\n    this._getConfigSCb = function () {};\n\n    this._executeSCb = function () {};\n\n    this._executeFCb = function () {};\n\n    this._messageHandler = function () {};\n\n    this._frame = sourceIframe; // TODO: remove listener when disconnected\n\n    window.addEventListener("message", e => {\n      if (this._frame.contentWindow && e.source === this._frame.contentWindow) {\n        const m = e.data;\n\n        switch (m && m.type) {\n          case "config":\n            this.pluginConfig = m.config;\n\n            this._checkConfig(this.pluginConfig);\n\n            this._getConfigSCb(m.config);\n\n            break;\n\n          case "initialized":\n            this.pluginConfig = m.config;\n\n            this._checkConfig(this.pluginConfig);\n\n            this._init.emit(this.pluginConfig);\n\n            break;\n\n          case "executeSuccess":\n            this._executeSCb();\n\n            break;\n\n          case "executeFailure":\n            this._executeFCb(m.error);\n\n            break;\n\n          default:\n            this._messageHandler(m);\n\n        }\n      }\n    });\n  }\n\n  _checkConfig(pluginConfig) {\n    pluginConfig = pluginConfig || {};\n\n    if (!Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["CONFIG_SCHEMA"])(pluginConfig)) {\n      const error = _utils_js__WEBPACK_IMPORTED_MODULE_0__["CONFIG_SCHEMA"].errors;\n      console.error("Invalid config: " + pluginConfig.name || false, error);\n      throw error;\n    }\n\n    if (Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["compareVersions"])(pluginConfig.api_version, "<", _rpc_js__WEBPACK_IMPORTED_MODULE_1__["API_VERSION"])) {\n      console.warn(`The imjoy-rpc version of the peer (${pluginConfig.api_version}) is older than the one used by the imjoy-core.`);\n    } else if (Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["compareVersions"])(pluginConfig.api_version, ">", _rpc_js__WEBPACK_IMPORTED_MODULE_1__["API_VERSION"])) {\n      throw new Error(`The imjoy-rpc version of the peer (${pluginConfig.api_version}) is newer than the one used by imjoy-core.`);\n    }\n  }\n\n  getConfig() {\n    return new Promise((resolve, reject) => {\n      this._getConfigSCb = resolve;\n\n      try {\n        this.send({\n          type: "getConfig"\n        });\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  execute(code) {\n    return new Promise((resolve, reject) => {\n      this._executeSCb = resolve;\n      this._executeFCb = reject;\n\n      if (this.pluginConfig.allow_execution) {\n        this.send({\n          type: "execute",\n          code: code\n        });\n      } else {\n        reject("Connection does not allow execution");\n      }\n    });\n  }\n  /**\n   * Sets-up the handler to be called upon the BasicConnection\n   * initialization is completed.\n   *\n   * For the web-browser environment, the handler is issued when\n   * the plugin worker successfully imported and executed the\n   * _pluginWebWorker.js or _pluginWebIframe.js, and replied to\n   * the application site with the initImprotSuccess message.\n   *\n   * @param {Function} handler to be called upon connection init\n   */\n\n\n  onInit(handler) {\n    this._init.whenEmitted(handler);\n  }\n  /**\n   * Sets-up the handler to be called upon the BasicConnection\n   * failed.\n   *\n   * For the web-browser environment, the handler is issued when\n   * the plugin worker successfully imported and executed the\n   * _pluginWebWorker.js or _pluginWebIframe.js, and replied to\n   * the application site with the initImprotSuccess message.\n   *\n   * @param {Function} handler to be called upon connection init\n   */\n\n\n  onFailed(handler) {\n    this._fail.whenEmitted(handler);\n  }\n  /**\n   * Sends a message to the plugin site\n   *\n   * @param {Object} data to send\n   */\n\n\n  send(data, transferables) {\n    this._frame.contentWindow && this._frame.contentWindow.postMessage(data, "*", transferables);\n  }\n  /**\n   * Adds a handler for a message received from the plugin site\n   *\n   * @param {Function} handler to call upon a message\n   */\n\n\n  onMessage(handler) {\n    this._messageHandler = handler;\n  }\n  /**\n   * Adds a handler for the event of plugin disconnection\n   * (not used in case of Worker)\n   *\n   * @param {Function} handler to call upon a disconnect\n   */\n\n\n  onDisconnect(handler) {\n    this._disconnectHandler = handler;\n  }\n  /**\n   * Disconnects the plugin (= kills the frame)\n   */\n\n\n  disconnect() {\n    if (!this._disconnected) {\n      this._disconnected = true;\n\n      if (typeof this._frame !== "undefined") {\n        this._frame.parentNode.removeChild(this._frame);\n      } // otherwise farme is not yet created\n\n\n      if (this._disconnectHandler) this._disconnectHandler();\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29ubmVjdGlvbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDL3NyYy9jb25uZWN0aW9uLmpzPzg4NWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV2hlbmFibGUsIGNvbXBhcmVWZXJzaW9ucywgQ09ORklHX1NDSEVNQSB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBBUElfVkVSU0lPTiB9IGZyb20gXCIuL3JwYy5qc1wiO1xuXG5leHBvcnQgY2xhc3MgQmFzaWNDb25uZWN0aW9uIHtcbiAgY29uc3RydWN0b3Ioc291cmNlSWZyYW1lKSB7XG4gICAgdGhpcy5faW5pdCA9IG5ldyBXaGVuYWJsZSh0cnVlKTtcbiAgICB0aGlzLl9mYWlsID0gbmV3IFdoZW5hYmxlKHRydWUpO1xuICAgIHRoaXMuX2Rpc2Nvbm5lY3RlZCA9IGZhbHNlO1xuICAgIHRoaXMucGx1Z2luQ29uZmlnID0ge307XG4gICAgdGhpcy5fZ2V0Q29uZmlnU0NiID0gZnVuY3Rpb24oKSB7fTtcbiAgICB0aGlzLl9leGVjdXRlU0NiID0gZnVuY3Rpb24oKSB7fTtcbiAgICB0aGlzLl9leGVjdXRlRkNiID0gZnVuY3Rpb24oKSB7fTtcbiAgICB0aGlzLl9tZXNzYWdlSGFuZGxlciA9IGZ1bmN0aW9uKCkge307XG4gICAgdGhpcy5fZnJhbWUgPSBzb3VyY2VJZnJhbWU7XG5cbiAgICAvLyBUT0RPOiByZW1vdmUgbGlzdGVuZXIgd2hlbiBkaXNjb25uZWN0ZWRcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgZSA9PiB7XG4gICAgICBpZiAodGhpcy5fZnJhbWUuY29udGVudFdpbmRvdyAmJiBlLnNvdXJjZSA9PT0gdGhpcy5fZnJhbWUuY29udGVudFdpbmRvdykge1xuICAgICAgICBjb25zdCBtID0gZS5kYXRhO1xuICAgICAgICBzd2l0Y2ggKG0gJiYgbS50eXBlKSB7XG4gICAgICAgICAgY2FzZSBcImNvbmZpZ1wiOlxuICAgICAgICAgICAgdGhpcy5wbHVnaW5Db25maWcgPSBtLmNvbmZpZztcbiAgICAgICAgICAgIHRoaXMuX2NoZWNrQ29uZmlnKHRoaXMucGx1Z2luQ29uZmlnKTtcbiAgICAgICAgICAgIHRoaXMuX2dldENvbmZpZ1NDYihtLmNvbmZpZyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiaW5pdGlhbGl6ZWRcIjpcbiAgICAgICAgICAgIHRoaXMucGx1Z2luQ29uZmlnID0gbS5jb25maWc7XG4gICAgICAgICAgICB0aGlzLl9jaGVja0NvbmZpZyh0aGlzLnBsdWdpbkNvbmZpZyk7XG4gICAgICAgICAgICB0aGlzLl9pbml0LmVtaXQodGhpcy5wbHVnaW5Db25maWcpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcImV4ZWN1dGVTdWNjZXNzXCI6XG4gICAgICAgICAgICB0aGlzLl9leGVjdXRlU0NiKCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlIFwiZXhlY3V0ZUZhaWx1cmVcIjpcbiAgICAgICAgICAgIHRoaXMuX2V4ZWN1dGVGQ2IobS5lcnJvcik7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhpcy5fbWVzc2FnZUhhbmRsZXIobSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9jaGVja0NvbmZpZyhwbHVnaW5Db25maWcpIHtcbiAgICBwbHVnaW5Db25maWcgPSBwbHVnaW5Db25maWcgfHwge307XG4gICAgaWYgKCFDT05GSUdfU0NIRU1BKHBsdWdpbkNvbmZpZykpIHtcbiAgICAgIGNvbnN0IGVycm9yID0gQ09ORklHX1NDSEVNQS5lcnJvcnM7XG4gICAgICBjb25zb2xlLmVycm9yKFwiSW52YWxpZCBjb25maWc6IFwiICsgcGx1Z2luQ29uZmlnLm5hbWUgfHwgXCJ1bmtvd25cIiwgZXJyb3IpO1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICAgIGlmIChjb21wYXJlVmVyc2lvbnMocGx1Z2luQ29uZmlnLmFwaV92ZXJzaW9uLCBcIjxcIiwgQVBJX1ZFUlNJT04pKSB7XG4gICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgIGBUaGUgaW1qb3ktcnBjIHZlcnNpb24gb2YgdGhlIHBlZXIgKCR7cGx1Z2luQ29uZmlnLmFwaV92ZXJzaW9ufSkgaXMgb2xkZXIgdGhhbiB0aGUgb25lIHVzZWQgYnkgdGhlIGltam95LWNvcmUuYFxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKGNvbXBhcmVWZXJzaW9ucyhwbHVnaW5Db25maWcuYXBpX3ZlcnNpb24sIFwiPlwiLCBBUElfVkVSU0lPTikpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFRoZSBpbWpveS1ycGMgdmVyc2lvbiBvZiB0aGUgcGVlciAoJHtwbHVnaW5Db25maWcuYXBpX3ZlcnNpb259KSBpcyBuZXdlciB0aGFuIHRoZSBvbmUgdXNlZCBieSBpbWpveS1jb3JlLmBcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgZ2V0Q29uZmlnKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB0aGlzLl9nZXRDb25maWdTQ2IgPSByZXNvbHZlO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdGhpcy5zZW5kKHsgdHlwZTogXCJnZXRDb25maWdcIiB9KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZXhlY3V0ZShjb2RlKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuX2V4ZWN1dGVTQ2IgPSByZXNvbHZlO1xuICAgICAgdGhpcy5fZXhlY3V0ZUZDYiA9IHJlamVjdDtcbiAgICAgIGlmICh0aGlzLnBsdWdpbkNvbmZpZy5hbGxvd19leGVjdXRpb24pIHtcbiAgICAgICAgdGhpcy5zZW5kKHsgdHlwZTogXCJleGVjdXRlXCIsIGNvZGU6IGNvZGUgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZWplY3QoXCJDb25uZWN0aW9uIGRvZXMgbm90IGFsbG93IGV4ZWN1dGlvblwiKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXRzLXVwIHRoZSBoYW5kbGVyIHRvIGJlIGNhbGxlZCB1cG9uIHRoZSBCYXNpY0Nvbm5lY3Rpb25cbiAgICogaW5pdGlhbGl6YXRpb24gaXMgY29tcGxldGVkLlxuICAgKlxuICAgKiBGb3IgdGhlIHdlYi1icm93c2VyIGVudmlyb25tZW50LCB0aGUgaGFuZGxlciBpcyBpc3N1ZWQgd2hlblxuICAgKiB0aGUgcGx1Z2luIHdvcmtlciBzdWNjZXNzZnVsbHkgaW1wb3J0ZWQgYW5kIGV4ZWN1dGVkIHRoZVxuICAgKiBfcGx1Z2luV2ViV29ya2VyLmpzIG9yIF9wbHVnaW5XZWJJZnJhbWUuanMsIGFuZCByZXBsaWVkIHRvXG4gICAqIHRoZSBhcHBsaWNhdGlvbiBzaXRlIHdpdGggdGhlIGluaXRJbXByb3RTdWNjZXNzIG1lc3NhZ2UuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgdG8gYmUgY2FsbGVkIHVwb24gY29ubmVjdGlvbiBpbml0XG4gICAqL1xuICBvbkluaXQoaGFuZGxlcikge1xuICAgIHRoaXMuX2luaXQud2hlbkVtaXR0ZWQoaGFuZGxlcik7XG4gIH1cblxuICAvKipcbiAgICogU2V0cy11cCB0aGUgaGFuZGxlciB0byBiZSBjYWxsZWQgdXBvbiB0aGUgQmFzaWNDb25uZWN0aW9uXG4gICAqIGZhaWxlZC5cbiAgICpcbiAgICogRm9yIHRoZSB3ZWItYnJvd3NlciBlbnZpcm9ubWVudCwgdGhlIGhhbmRsZXIgaXMgaXNzdWVkIHdoZW5cbiAgICogdGhlIHBsdWdpbiB3b3JrZXIgc3VjY2Vzc2Z1bGx5IGltcG9ydGVkIGFuZCBleGVjdXRlZCB0aGVcbiAgICogX3BsdWdpbldlYldvcmtlci5qcyBvciBfcGx1Z2luV2ViSWZyYW1lLmpzLCBhbmQgcmVwbGllZCB0b1xuICAgKiB0aGUgYXBwbGljYXRpb24gc2l0ZSB3aXRoIHRoZSBpbml0SW1wcm90U3VjY2VzcyBtZXNzYWdlLlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIHRvIGJlIGNhbGxlZCB1cG9uIGNvbm5lY3Rpb24gaW5pdFxuICAgKi9cbiAgb25GYWlsZWQoaGFuZGxlcikge1xuICAgIHRoaXMuX2ZhaWwud2hlbkVtaXR0ZWQoaGFuZGxlcik7XG4gIH1cblxuICAvKipcbiAgICogU2VuZHMgYSBtZXNzYWdlIHRvIHRoZSBwbHVnaW4gc2l0ZVxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YSB0byBzZW5kXG4gICAqL1xuICBzZW5kKGRhdGEsIHRyYW5zZmVyYWJsZXMpIHtcbiAgICB0aGlzLl9mcmFtZS5jb250ZW50V2luZG93ICYmXG4gICAgICB0aGlzLl9mcmFtZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKGRhdGEsIFwiKlwiLCB0cmFuc2ZlcmFibGVzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRzIGEgaGFuZGxlciBmb3IgYSBtZXNzYWdlIHJlY2VpdmVkIGZyb20gdGhlIHBsdWdpbiBzaXRlXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgdG8gY2FsbCB1cG9uIGEgbWVzc2FnZVxuICAgKi9cbiAgb25NZXNzYWdlKGhhbmRsZXIpIHtcbiAgICB0aGlzLl9tZXNzYWdlSGFuZGxlciA9IGhhbmRsZXI7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBhIGhhbmRsZXIgZm9yIHRoZSBldmVudCBvZiBwbHVnaW4gZGlzY29ubmVjdGlvblxuICAgKiAobm90IHVzZWQgaW4gY2FzZSBvZiBXb3JrZXIpXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgdG8gY2FsbCB1cG9uIGEgZGlzY29ubmVjdFxuICAgKi9cbiAgb25EaXNjb25uZWN0KGhhbmRsZXIpIHtcbiAgICB0aGlzLl9kaXNjb25uZWN0SGFuZGxlciA9IGhhbmRsZXI7XG4gIH1cblxuICAvKipcbiAgICogRGlzY29ubmVjdHMgdGhlIHBsdWdpbiAoPSBraWxscyB0aGUgZnJhbWUpXG4gICAqL1xuICBkaXNjb25uZWN0KCkge1xuICAgIGlmICghdGhpcy5fZGlzY29ubmVjdGVkKSB7XG4gICAgICB0aGlzLl9kaXNjb25uZWN0ZWQgPSB0cnVlO1xuICAgICAgaWYgKHR5cGVvZiB0aGlzLl9mcmFtZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICB0aGlzLl9mcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMuX2ZyYW1lKTtcbiAgICAgIH0gLy8gb3RoZXJ3aXNlIGZhcm1lIGlzIG5vdCB5ZXQgY3JlYXRlZFxuICAgICAgaWYgKHRoaXMuX2Rpc2Nvbm5lY3RIYW5kbGVyKSB0aGlzLl9kaXNjb25uZWN0SGFuZGxlcigpO1xuICAgIH1cbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBbkJBO0FBb0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7Ozs7OztBQVdBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7O0FBS0E7QUFDQTtBQUVBO0FBRUE7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQXhKQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/connection.js\n')},"./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! exports provided: RPC, BasicConnection, Whenable, randId, setupBaseFrame, setupRPC */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupBaseFrame", function() { return setupBaseFrame; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupRPC", function() { return setupRPC; });\n/* harmony import */ var _plugin_webworker_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plugin.webworker.js */ "./src/plugin.webworker.js");\n/* harmony import */ var _plugin_webworker_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_plugin_webworker_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pluginIframe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pluginIframe.js */ "./src/pluginIframe.js");\n/* harmony import */ var _pluginWebPython_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pluginWebPython.js */ "./src/pluginWebPython.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ "./src/utils.js");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rpc.js */ "./src/rpc.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RPC", function() { return _rpc_js__WEBPACK_IMPORTED_MODULE_4__["RPC"]; });\n\n/* harmony import */ var _connection_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./connection.js */ "./src/connection.js");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BasicConnection", function() { return _connection_js__WEBPACK_IMPORTED_MODULE_5__["BasicConnection"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Whenable", function() { return _utils_js__WEBPACK_IMPORTED_MODULE_3__["Whenable"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "randId", function() { return _utils_js__WEBPACK_IMPORTED_MODULE_3__["randId"]; });\n\n/**\n * Contains the code executed in the sandboxed frame under web-browser\n *\n * Tries to create a Web-Worker inside the frame and set up the\n * communication between the worker and the parent window. Some\n * browsers restrict creating a worker inside a sandboxed iframe - if\n * this happens, the plugin initialized right inside the frame (in the\n * same thread)\n */\n\n\n\n\n\n\n\n\nfunction inIframe() {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n}\n\nfunction getParamValue(paramName) {\n  const url = window.location.search.substring(1); //get rid of "?" in querystring\n\n  const qArray = url.split("&"); //get key-value pairs\n\n  for (let i = 0; i < qArray.length; i++) {\n    const pArr = qArray[i].split("="); //split key and value\n\n    if (pArr[0] === paramName) return pArr[1]; //return value\n  }\n}\n/**\n * Initializes the plugin inside a web worker. May throw an exception\n * in case this was not permitted by the browser.\n */\n\n\nfunction setupWebWorker(config) {\n  if (!config.allow_execution) throw new Error("web-worker plugin can only work with allow_execution=true");\n  const worker = new _plugin_webworker_js__WEBPACK_IMPORTED_MODULE_0___default.a(); // mixed content warning in Chrome silently skips worker\n  // initialization without exception, handling this with timeout\n\n  const fallbackTimeout = setTimeout(function () {\n    worker.terminate();\n    console.warn(`Plugin failed to start as a web-worker, running in an iframe instead.`);\n    Object(_pluginIframe_js__WEBPACK_IMPORTED_MODULE_1__["default"])(config);\n  }, 2000); // forwarding messages between the worker and parent window\n\n  worker.addEventListener("message", function (e) {\n    let transferables = undefined;\n    const m = e.data;\n\n    if (m.type === "initialized") {\n      // send config to the worker\n      worker.postMessage({\n        type: "connectRPC",\n        config: config\n      });\n      clearTimeout(fallbackTimeout); // complete the missing fields\n\n      m.config = Object.assign({}, config, m.config);\n    } else if (m.type === "imjoy_remote_api_ready") {\n      // if it\'s a webworker, there will be no api object returned\n      window.dispatchEvent(new CustomEvent("imjoy_remote_api_ready", {\n        detail: null\n      }));\n    } else if (m.type === "cacheRequirements" && typeof cache_requirements === "function") {\n      cache_requirements(m.requirements);\n    } else if (m.type === "disconnect") {\n      worker.terminate();\n    } else {\n      if (m.__transferables__) {\n        transferables = m.__transferables__;\n        delete m.__transferables__;\n      }\n    }\n\n    parent.postMessage(m, "*", transferables);\n  });\n  window.addEventListener("message", function (e) {\n    let transferables = undefined;\n    const m = e.data;\n\n    if (m.__transferables__) {\n      transferables = m.__transferables__;\n      delete m.__transferables__;\n    }\n\n    worker.postMessage(m, transferables);\n  });\n}\n\nasync function setupBaseFrame(config) {\n  config = config || {};\n  config.allow_execution = config.allow_execution || true;\n  config.enable_service_worker = config.enable_service_worker || true;\n\n  if (config.enable_service_worker) {\n    Object(_utils_js__WEBPACK_IMPORTED_MODULE_3__["setupServiceWorker"])(config.target_origin, config.cache_requirements);\n  }\n\n  if (config.cache_requirements) {\n    delete config.cache_requirements;\n  } // expose the api object to window globally.\n  // note: the returned value will be null for webworker\n\n\n  window.api = await imjoyRPC.setupRPC(config);\n  return window.api;\n}\nfunction setupRPC(config) {\n  config = config || {};\n  const plugin_type = config.type || getParamValue("_plugin_type") || "window";\n  config.type = plugin_type;\n  config.id = config.id || Object(_utils_js__WEBPACK_IMPORTED_MODULE_3__["randId"])();\n  config.allow_execution = config.allow_execution || false;\n  config.token = config.token = Object(_utils_js__WEBPACK_IMPORTED_MODULE_3__["randId"])(); // remove functions\n\n  config = Object.keys(config).reduce((p, c) => {\n    if (typeof config[c] !== "function") p[c] = config[c];\n    return p;\n  }, {});\n  return new Promise((resolve, reject) => {\n    if (inIframe()) {\n      if (plugin_type === "web-worker") {\n        try {\n          setupWebWorker(config);\n        } catch (e) {\n          // fallback to iframe\n          Object(_pluginIframe_js__WEBPACK_IMPORTED_MODULE_1__["default"])(config);\n        }\n      } else if (plugin_type === "web-python" || plugin_type === "web-python-window") {\n        Object(_pluginWebPython_js__WEBPACK_IMPORTED_MODULE_2__["default"])(config);\n      } else if (plugin_type === "iframe" || plugin_type === "window") {\n        Object(_pluginIframe_js__WEBPACK_IMPORTED_MODULE_1__["default"])(config);\n      } else {\n        console.error("Unsupported plugin type: " + plugin_type);\n        reject("Unsupported plugin type: " + plugin_type);\n      }\n\n      try {\n        window.addEventListener("imjoy_remote_api_ready", e => {\n          // imjoy plugin api\n          resolve(e.detail);\n        });\n      } catch (e) {\n        reject(e);\n      }\n    } else {\n      reject(new Error("imjoy-rpc should only run inside an iframe."));\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n')},"./src/plugin.webworker.js":
/*!*********************************!*\
  !*** ./src/plugin.webworker.js ***!
  \*********************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("module.exports = function() {\n  return __webpack_require__(/*! !./node_modules/worker-loader/dist/workers/InlineWorker.js */ \"./node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"/******/ (function(modules) { // webpackBootstrap\\n/******/ \\t// The module cache\\n/******/ \\tvar installedModules = {};\\n/******/\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tif(installedModules[moduleId]) {\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\n/******/ \\t\\t\\ti: moduleId,\\n/******/ \\t\\t\\tl: false,\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n/******/\\n/******/ \\t\\t// Flag the module as loaded\\n/******/ \\t\\tmodule.l = true;\\n/******/\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/\\n/******/\\n/******/ \\t// expose the modules object (__webpack_modules__)\\n/******/ \\t__webpack_require__.m = modules;\\n/******/\\n/******/ \\t// expose the module cache\\n/******/ \\t__webpack_require__.c = installedModules;\\n/******/\\n/******/ \\t// define getter function for harmony exports\\n/******/ \\t__webpack_require__.d = function(exports, name, getter) {\\n/******/ \\t\\tif(!__webpack_require__.o(exports, name)) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n/******/ \\t\\t}\\n/******/ \\t};\\n/******/\\n/******/ \\t// define __esModule on exports\\n/******/ \\t__webpack_require__.r = function(exports) {\\n/******/ \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t}\\n/******/ \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t};\\n/******/\\n/******/ \\t// create a fake namespace object\\n/******/ \\t// mode & 1: value is a module id, require it\\n/******/ \\t// mode & 2: merge all properties of value into the ns\\n/******/ \\t// mode & 4: return value when already ns object\\n/******/ \\t// mode & 8|1: behave like require\\n/******/ \\t__webpack_require__.t = function(value, mode) {\\n/******/ \\t\\tif(mode & 1) value = __webpack_require__(value);\\n/******/ \\t\\tif(mode & 8) return value;\\n/******/ \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n/******/ \\t\\tvar ns = Object.create(null);\\n/******/ \\t\\t__webpack_require__.r(ns);\\n/******/ \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n/******/ \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n/******/ \\t\\treturn ns;\\n/******/ \\t};\\n/******/\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\n/******/ \\t__webpack_require__.n = function(module) {\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\n/******/ \\t\\t__webpack_require__.d(getter, 'a', getter);\\n/******/ \\t\\treturn getter;\\n/******/ \\t};\\n/******/\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\n/******/ \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n/******/\\n/******/ \\t// __webpack_public_path__\\n/******/ \\t__webpack_require__.p = \\\"\\\";\\n/******/\\n/******/\\n/******/ \\t// Load entry module and return exports\\n/******/ \\treturn __webpack_require__(__webpack_require__.s = \\\"./src/plugin.webworker.js\\\");\\n/******/ })\\n/************************************************************************/\\n/******/ ({\\n\\n/***/ \\\"./node_modules/ajv/lib/$data.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/$data.js ***!\\n  \\\\***************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar KEYWORDS = [\\\\n  'multipleOf',\\\\n  'maximum',\\\\n  'exclusiveMaximum',\\\\n  'minimum',\\\\n  'exclusiveMinimum',\\\\n  'maxLength',\\\\n  'minLength',\\\\n  'pattern',\\\\n  'additionalItems',\\\\n  'maxItems',\\\\n  'minItems',\\\\n  'uniqueItems',\\\\n  'maxProperties',\\\\n  'minProperties',\\\\n  'required',\\\\n  'additionalProperties',\\\\n  'enum',\\\\n  'format',\\\\n  'const'\\\\n];\\\\n\\\\nmodule.exports = function (metaSchema, keywordsJsonPointers) {\\\\n  for (var i=0; i<keywordsJsonPointers.length; i++) {\\\\n    metaSchema = JSON.parse(JSON.stringify(metaSchema));\\\\n    var segments = keywordsJsonPointers[i].split('/');\\\\n    var keywords = metaSchema;\\\\n    var j;\\\\n    for (j=1; j<segments.length; j++)\\\\n      keywords = keywords[segments[j]];\\\\n\\\\n    for (j=0; j<KEYWORDS.length; j++) {\\\\n      var key = KEYWORDS[j];\\\\n      var schema = keywords[key];\\\\n      if (schema) {\\\\n        keywords[key] = {\\\\n          anyOf: [\\\\n            schema,\\\\n            { $ref: 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#' }\\\\n          ]\\\\n        };\\\\n      }\\\\n    }\\\\n  }\\\\n\\\\n  return metaSchema;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi8kZGF0YS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvJGRhdGEuanM/YWFhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBLRVlXT1JEUyA9IFtcbiAgJ211bHRpcGxlT2YnLFxuICAnbWF4aW11bScsXG4gICdleGNsdXNpdmVNYXhpbXVtJyxcbiAgJ21pbmltdW0nLFxuICAnZXhjbHVzaXZlTWluaW11bScsXG4gICdtYXhMZW5ndGgnLFxuICAnbWluTGVuZ3RoJyxcbiAgJ3BhdHRlcm4nLFxuICAnYWRkaXRpb25hbEl0ZW1zJyxcbiAgJ21heEl0ZW1zJyxcbiAgJ21pbkl0ZW1zJyxcbiAgJ3VuaXF1ZUl0ZW1zJyxcbiAgJ21heFByb3BlcnRpZXMnLFxuICAnbWluUHJvcGVydGllcycsXG4gICdyZXF1aXJlZCcsXG4gICdhZGRpdGlvbmFsUHJvcGVydGllcycsXG4gICdlbnVtJyxcbiAgJ2Zvcm1hdCcsXG4gICdjb25zdCdcbl07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1ldGFTY2hlbWEsIGtleXdvcmRzSnNvblBvaW50ZXJzKSB7XG4gIGZvciAodmFyIGk9MDsgaTxrZXl3b3Jkc0pzb25Qb2ludGVycy5sZW5ndGg7IGkrKykge1xuICAgIG1ldGFTY2hlbWEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG1ldGFTY2hlbWEpKTtcbiAgICB2YXIgc2VnbWVudHMgPSBrZXl3b3Jkc0pzb25Qb2ludGVyc1tpXS5zcGxpdCgnLycpO1xuICAgIHZhciBrZXl3b3JkcyA9IG1ldGFTY2hlbWE7XG4gICAgdmFyIGo7XG4gICAgZm9yIChqPTE7IGo8c2VnbWVudHMubGVuZ3RoOyBqKyspXG4gICAgICBrZXl3b3JkcyA9IGtleXdvcmRzW3NlZ21lbnRzW2pdXTtcblxuICAgIGZvciAoaj0wOyBqPEtFWVdPUkRTLmxlbmd0aDsgaisrKSB7XG4gICAgICB2YXIga2V5ID0gS0VZV09SRFNbal07XG4gICAgICB2YXIgc2NoZW1hID0ga2V5d29yZHNba2V5XTtcbiAgICAgIGlmIChzY2hlbWEpIHtcbiAgICAgICAga2V5d29yZHNba2V5XSA9IHtcbiAgICAgICAgICBhbnlPZjogW1xuICAgICAgICAgICAgc2NoZW1hLFxuICAgICAgICAgICAgeyAkcmVmOiAnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2Vwb2JlcmV6a2luL2Fqdi9tYXN0ZXIvbGliL3JlZnMvJGRhdGEuanNvbiMnIH1cbiAgICAgICAgICBdXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1ldGFTY2hlbWE7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/$data.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/ajv.js\\\":\\n/*!*************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/ajv.js ***!\\n  \\\\*************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar compileSchema = __webpack_require__(/*! ./compile */ \\\\\\\"./node_modules/ajv/lib/compile/index.js\\\\\\\")\\\\n  , resolve = __webpack_require__(/*! ./compile/resolve */ \\\\\\\"./node_modules/ajv/lib/compile/resolve.js\\\\\\\")\\\\n  , Cache = __webpack_require__(/*! ./cache */ \\\\\\\"./node_modules/ajv/lib/cache.js\\\\\\\")\\\\n  , SchemaObject = __webpack_require__(/*! ./compile/schema_obj */ \\\\\\\"./node_modules/ajv/lib/compile/schema_obj.js\\\\\\\")\\\\n  , stableStringify = __webpack_require__(/*! json-stable-stringify */ \\\\\\\"./node_modules/json-stable-stringify/index.js\\\\\\\")\\\\n  , formats = __webpack_require__(/*! ./compile/formats */ \\\\\\\"./node_modules/ajv/lib/compile/formats.js\\\\\\\")\\\\n  , rules = __webpack_require__(/*! ./compile/rules */ \\\\\\\"./node_modules/ajv/lib/compile/rules.js\\\\\\\")\\\\n  , $dataMetaSchema = __webpack_require__(/*! ./$data */ \\\\\\\"./node_modules/ajv/lib/$data.js\\\\\\\")\\\\n  , patternGroups = __webpack_require__(/*! ./patternGroups */ \\\\\\\"./node_modules/ajv/lib/patternGroups.js\\\\\\\")\\\\n  , util = __webpack_require__(/*! ./compile/util */ \\\\\\\"./node_modules/ajv/lib/compile/util.js\\\\\\\")\\\\n  , co = __webpack_require__(/*! co */ \\\\\\\"./node_modules/co/index.js\\\\\\\");\\\\n\\\\nmodule.exports = Ajv;\\\\n\\\\nAjv.prototype.validate = validate;\\\\nAjv.prototype.compile = compile;\\\\nAjv.prototype.addSchema = addSchema;\\\\nAjv.prototype.addMetaSchema = addMetaSchema;\\\\nAjv.prototype.validateSchema = validateSchema;\\\\nAjv.prototype.getSchema = getSchema;\\\\nAjv.prototype.removeSchema = removeSchema;\\\\nAjv.prototype.addFormat = addFormat;\\\\nAjv.prototype.errorsText = errorsText;\\\\n\\\\nAjv.prototype._addSchema = _addSchema;\\\\nAjv.prototype._compile = _compile;\\\\n\\\\nAjv.prototype.compileAsync = __webpack_require__(/*! ./compile/async */ \\\\\\\"./node_modules/ajv/lib/compile/async.js\\\\\\\");\\\\nvar customKeyword = __webpack_require__(/*! ./keyword */ \\\\\\\"./node_modules/ajv/lib/keyword.js\\\\\\\");\\\\nAjv.prototype.addKeyword = customKeyword.add;\\\\nAjv.prototype.getKeyword = customKeyword.get;\\\\nAjv.prototype.removeKeyword = customKeyword.remove;\\\\n\\\\nvar errorClasses = __webpack_require__(/*! ./compile/error_classes */ \\\\\\\"./node_modules/ajv/lib/compile/error_classes.js\\\\\\\");\\\\nAjv.ValidationError = errorClasses.Validation;\\\\nAjv.MissingRefError = errorClasses.MissingRef;\\\\nAjv.$dataMetaSchema = $dataMetaSchema;\\\\n\\\\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-06/schema';\\\\n\\\\nvar META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes' ];\\\\nvar META_SUPPORT_DATA = ['/properties'];\\\\n\\\\n/**\\\\n * Creates validator instance.\\\\n * Usage: `Ajv(opts)`\\\\n * @param {Object} opts optional options\\\\n * @return {Object} ajv instance\\\\n */\\\\nfunction Ajv(opts) {\\\\n  if (!(this instanceof Ajv)) return new Ajv(opts);\\\\n  opts = this._opts = util.copy(opts) || {};\\\\n  this._schemas = {};\\\\n  this._refs = {};\\\\n  this._fragments = {};\\\\n  this._formats = formats(opts.format);\\\\n  var schemaUriFormat = this._schemaUriFormat = this._formats['uri-reference'];\\\\n  this._schemaUriFormatFunc = function (str) { return schemaUriFormat.test(str); };\\\\n\\\\n  this._cache = opts.cache || new Cache;\\\\n  this._loadingSchemas = {};\\\\n  this._compilations = [];\\\\n  this.RULES = rules();\\\\n  this._getId = chooseGetId(opts);\\\\n\\\\n  opts.loopRequired = opts.loopRequired || Infinity;\\\\n  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;\\\\n  if (opts.serialize === undefined) opts.serialize = stableStringify;\\\\n  this._metaOpts = getMetaSchemaOptions(this);\\\\n\\\\n  if (opts.formats) addInitialFormats(this);\\\\n  addDraft6MetaSchema(this);\\\\n  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);\\\\n  addInitialSchemas(this);\\\\n  if (opts.patternGroups) patternGroups(this);\\\\n}\\\\n\\\\n\\\\n\\\\n/**\\\\n * Validate data using schema\\\\n * Schema will be compiled and cached (using serialized JSON as key. [json-stable-stringify](https://github.com/substack/json-stable-stringify) is used to serialize.\\\\n * @this   Ajv\\\\n * @param  {String|Object} schemaKeyRef key, ref or schema object\\\\n * @param  {Any} data to be validated\\\\n * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).\\\\n */\\\\nfunction validate(schemaKeyRef, data) {\\\\n  var v;\\\\n  if (typeof schemaKeyRef == 'string') {\\\\n    v = this.getSchema(schemaKeyRef);\\\\n    if (!v) throw new Error('no schema with key or ref \\\\\\\"' + schemaKeyRef + '\\\\\\\"');\\\\n  } else {\\\\n    var schemaObj = this._addSchema(schemaKeyRef);\\\\n    v = schemaObj.validate || this._compile(schemaObj);\\\\n  }\\\\n\\\\n  var valid = v(data);\\\\n  if (v.$async === true)\\\\n    return this._opts.async == '*' ? co(valid) : valid;\\\\n  this.errors = v.errors;\\\\n  return valid;\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Create validating function for passed schema.\\\\n * @this   Ajv\\\\n * @param  {Object} schema schema object\\\\n * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.\\\\n * @return {Function} validating function\\\\n */\\\\nfunction compile(schema, _meta) {\\\\n  var schemaObj = this._addSchema(schema, undefined, _meta);\\\\n  return schemaObj.validate || this._compile(schemaObj);\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Adds schema to the instance.\\\\n * @this   Ajv\\\\n * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.\\\\n * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\\\\n * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.\\\\n * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\\\\n */\\\\nfunction addSchema(schema, key, _skipValidation, _meta) {\\\\n  if (Array.isArray(schema)){\\\\n    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);\\\\n    return;\\\\n  }\\\\n  var id = this._getId(schema);\\\\n  if (id !== undefined && typeof id != 'string')\\\\n    throw new Error('schema id must be string');\\\\n  key = resolve.normalizeId(key || id);\\\\n  checkUnique(this, key);\\\\n  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Add schema that will be used to validate other schemas\\\\n * options in META_IGNORE_OPTIONS are alway set to false\\\\n * @this   Ajv\\\\n * @param {Object} schema schema object\\\\n * @param {String} key optional schema key\\\\n * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema\\\\n */\\\\nfunction addMetaSchema(schema, key, skipValidation) {\\\\n  this.addSchema(schema, key, skipValidation, true);\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Validate schema\\\\n * @this   Ajv\\\\n * @param {Object} schema schema to validate\\\\n * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid\\\\n * @return {Boolean} true if schema is valid\\\\n */\\\\nfunction validateSchema(schema, throwOrLogError) {\\\\n  var $schema = schema.$schema;\\\\n  if ($schema !== undefined && typeof $schema != 'string')\\\\n    throw new Error('$schema must be a string');\\\\n  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);\\\\n  if (!$schema) {\\\\n    console.warn('meta-schema not available');\\\\n    this.errors = null;\\\\n    return true;\\\\n  }\\\\n  var currentUriFormat = this._formats.uri;\\\\n  this._formats.uri = typeof currentUriFormat == 'function'\\\\n                      ? this._schemaUriFormatFunc\\\\n                      : this._schemaUriFormat;\\\\n  var valid;\\\\n  try { valid = this.validate($schema, schema); }\\\\n  finally { this._formats.uri = currentUriFormat; }\\\\n  if (!valid && throwOrLogError) {\\\\n    var message = 'schema is invalid: ' + this.errorsText();\\\\n    if (this._opts.validateSchema == 'log') console.error(message);\\\\n    else throw new Error(message);\\\\n  }\\\\n  return valid;\\\\n}\\\\n\\\\n\\\\nfunction defaultMeta(self) {\\\\n  var meta = self._opts.meta;\\\\n  self._opts.defaultMeta = typeof meta == 'object'\\\\n                            ? self._getId(meta) || meta\\\\n                            : self.getSchema(META_SCHEMA_ID)\\\\n                              ? META_SCHEMA_ID\\\\n                              : undefined;\\\\n  return self._opts.defaultMeta;\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Get compiled schema from the instance by `key` or `ref`.\\\\n * @this   Ajv\\\\n * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).\\\\n * @return {Function} schema validating function (with property `schema`).\\\\n */\\\\nfunction getSchema(keyRef) {\\\\n  var schemaObj = _getSchemaObj(this, keyRef);\\\\n  switch (typeof schemaObj) {\\\\n    case 'object': return schemaObj.validate || this._compile(schemaObj);\\\\n    case 'string': return this.getSchema(schemaObj);\\\\n    case 'undefined': return _getSchemaFragment(this, keyRef);\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction _getSchemaFragment(self, ref) {\\\\n  var res = resolve.schema.call(self, { schema: {} }, ref);\\\\n  if (res) {\\\\n    var schema = res.schema\\\\n      , root = res.root\\\\n      , baseId = res.baseId;\\\\n    var v = compileSchema.call(self, schema, root, undefined, baseId);\\\\n    self._fragments[ref] = new SchemaObject({\\\\n      ref: ref,\\\\n      fragment: true,\\\\n      schema: schema,\\\\n      root: root,\\\\n      baseId: baseId,\\\\n      validate: v\\\\n    });\\\\n    return v;\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction _getSchemaObj(self, keyRef) {\\\\n  keyRef = resolve.normalizeId(keyRef);\\\\n  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Remove cached schema(s).\\\\n * If no parameter is passed all schemas but meta-schemas are removed.\\\\n * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\\\\n * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\\\\n * @this   Ajv\\\\n * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object\\\\n */\\\\nfunction removeSchema(schemaKeyRef) {\\\\n  if (schemaKeyRef instanceof RegExp) {\\\\n    _removeAllSchemas(this, this._schemas, schemaKeyRef);\\\\n    _removeAllSchemas(this, this._refs, schemaKeyRef);\\\\n    return;\\\\n  }\\\\n  switch (typeof schemaKeyRef) {\\\\n    case 'undefined':\\\\n      _removeAllSchemas(this, this._schemas);\\\\n      _removeAllSchemas(this, this._refs);\\\\n      this._cache.clear();\\\\n      return;\\\\n    case 'string':\\\\n      var schemaObj = _getSchemaObj(this, schemaKeyRef);\\\\n      if (schemaObj) this._cache.del(schemaObj.cacheKey);\\\\n      delete this._schemas[schemaKeyRef];\\\\n      delete this._refs[schemaKeyRef];\\\\n      return;\\\\n    case 'object':\\\\n      var serialize = this._opts.serialize;\\\\n      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;\\\\n      this._cache.del(cacheKey);\\\\n      var id = this._getId(schemaKeyRef);\\\\n      if (id) {\\\\n        id = resolve.normalizeId(id);\\\\n        delete this._schemas[id];\\\\n        delete this._refs[id];\\\\n      }\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction _removeAllSchemas(self, schemas, regex) {\\\\n  for (var keyRef in schemas) {\\\\n    var schemaObj = schemas[keyRef];\\\\n    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {\\\\n      self._cache.del(schemaObj.cacheKey);\\\\n      delete schemas[keyRef];\\\\n    }\\\\n  }\\\\n}\\\\n\\\\n\\\\n/* @this   Ajv */\\\\nfunction _addSchema(schema, skipValidation, meta, shouldAddSchema) {\\\\n  if (typeof schema != 'object' && typeof schema != 'boolean')\\\\n    throw new Error('schema should be object or boolean');\\\\n  var serialize = this._opts.serialize;\\\\n  var cacheKey = serialize ? serialize(schema) : schema;\\\\n  var cached = this._cache.get(cacheKey);\\\\n  if (cached) return cached;\\\\n\\\\n  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;\\\\n\\\\n  var id = resolve.normalizeId(this._getId(schema));\\\\n  if (id && shouldAddSchema) checkUnique(this, id);\\\\n\\\\n  var willValidate = this._opts.validateSchema !== false && !skipValidation;\\\\n  var recursiveMeta;\\\\n  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))\\\\n    this.validateSchema(schema, true);\\\\n\\\\n  var localRefs = resolve.ids.call(this, schema);\\\\n\\\\n  var schemaObj = new SchemaObject({\\\\n    id: id,\\\\n    schema: schema,\\\\n    localRefs: localRefs,\\\\n    cacheKey: cacheKey,\\\\n    meta: meta\\\\n  });\\\\n\\\\n  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;\\\\n  this._cache.put(cacheKey, schemaObj);\\\\n\\\\n  if (willValidate && recursiveMeta) this.validateSchema(schema, true);\\\\n\\\\n  return schemaObj;\\\\n}\\\\n\\\\n\\\\n/* @this   Ajv */\\\\nfunction _compile(schemaObj, root) {\\\\n  if (schemaObj.compiling) {\\\\n    schemaObj.validate = callValidate;\\\\n    callValidate.schema = schemaObj.schema;\\\\n    callValidate.errors = null;\\\\n    callValidate.root = root ? root : callValidate;\\\\n    if (schemaObj.schema.$async === true)\\\\n      callValidate.$async = true;\\\\n    return callValidate;\\\\n  }\\\\n  schemaObj.compiling = true;\\\\n\\\\n  var currentOpts;\\\\n  if (schemaObj.meta) {\\\\n    currentOpts = this._opts;\\\\n    this._opts = this._metaOpts;\\\\n  }\\\\n\\\\n  var v;\\\\n  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }\\\\n  finally {\\\\n    schemaObj.compiling = false;\\\\n    if (schemaObj.meta) this._opts = currentOpts;\\\\n  }\\\\n\\\\n  schemaObj.validate = v;\\\\n  schemaObj.refs = v.refs;\\\\n  schemaObj.refVal = v.refVal;\\\\n  schemaObj.root = v.root;\\\\n  return v;\\\\n\\\\n\\\\n  function callValidate() {\\\\n    var _validate = schemaObj.validate;\\\\n    var result = _validate.apply(null, arguments);\\\\n    callValidate.errors = _validate.errors;\\\\n    return result;\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction chooseGetId(opts) {\\\\n  switch (opts.schemaId) {\\\\n    case '$id': return _get$Id;\\\\n    case 'id': return _getId;\\\\n    default: return _get$IdOrId;\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction _getId(schema) {\\\\n  if (schema.$id) console.warn('schema $id ignored', schema.$id);\\\\n  return schema.id;\\\\n}\\\\n\\\\n\\\\nfunction _get$Id(schema) {\\\\n  if (schema.id) console.warn('schema id ignored', schema.id);\\\\n  return schema.$id;\\\\n}\\\\n\\\\n\\\\nfunction _get$IdOrId(schema) {\\\\n  if (schema.$id && schema.id && schema.$id != schema.id)\\\\n    throw new Error('schema $id is different from id');\\\\n  return schema.$id || schema.id;\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Convert array of error message objects to string\\\\n * @this   Ajv\\\\n * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.\\\\n * @param  {Object} options optional options with properties `separator` and `dataVar`.\\\\n * @return {String} human readable string with all errors descriptions\\\\n */\\\\nfunction errorsText(errors, options) {\\\\n  errors = errors || this.errors;\\\\n  if (!errors) return 'No errors';\\\\n  options = options || {};\\\\n  var separator = options.separator === undefined ? ', ' : options.separator;\\\\n  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;\\\\n\\\\n  var text = '';\\\\n  for (var i=0; i<errors.length; i++) {\\\\n    var e = errors[i];\\\\n    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;\\\\n  }\\\\n  return text.slice(0, -separator.length);\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Add custom format\\\\n * @this   Ajv\\\\n * @param {String} name format name\\\\n * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)\\\\n */\\\\nfunction addFormat(name, format) {\\\\n  if (typeof format == 'string') format = new RegExp(format);\\\\n  this._formats[name] = format;\\\\n}\\\\n\\\\n\\\\nfunction addDraft6MetaSchema(self) {\\\\n  var $dataSchema;\\\\n  if (self._opts.$data) {\\\\n    $dataSchema = __webpack_require__(/*! ./refs/$data.json */ \\\\\\\"./node_modules/ajv/lib/refs/$data.json\\\\\\\");\\\\n    self.addMetaSchema($dataSchema, $dataSchema.$id, true);\\\\n  }\\\\n  if (self._opts.meta === false) return;\\\\n  var metaSchema = __webpack_require__(/*! ./refs/json-schema-draft-06.json */ \\\\\\\"./node_modules/ajv/lib/refs/json-schema-draft-06.json\\\\\\\");\\\\n  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);\\\\n  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);\\\\n  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;\\\\n}\\\\n\\\\n\\\\nfunction addInitialSchemas(self) {\\\\n  var optsSchemas = self._opts.schemas;\\\\n  if (!optsSchemas) return;\\\\n  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);\\\\n  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);\\\\n}\\\\n\\\\n\\\\nfunction addInitialFormats(self) {\\\\n  for (var name in self._opts.formats) {\\\\n    var format = self._opts.formats[name];\\\\n    self.addFormat(name, format);\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction checkUnique(self, id) {\\\\n  if (self._schemas[id] || self._refs[id])\\\\n    throw new Error('schema with key or id \\\\\\\"' + id + '\\\\\\\" already exists');\\\\n}\\\\n\\\\n\\\\nfunction getMetaSchemaOptions(self) {\\\\n  var metaOpts = util.copy(self._opts);\\\\n  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)\\\\n    delete metaOpts[META_IGNORE_OPTIONS[i]];\\\\n  return metaOpts;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/ajv.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/cache.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/cache.js ***!\\n  \\\\***************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\n\\\\nvar Cache = module.exports = function Cache() {\\\\n  this._cache = {};\\\\n};\\\\n\\\\n\\\\nCache.prototype.put = function Cache_put(key, value) {\\\\n  this._cache[key] = value;\\\\n};\\\\n\\\\n\\\\nCache.prototype.get = function Cache_get(key) {\\\\n  return this._cache[key];\\\\n};\\\\n\\\\n\\\\nCache.prototype.del = function Cache_del(key) {\\\\n  delete this._cache[key];\\\\n};\\\\n\\\\n\\\\nCache.prototype.clear = function Cache_clear() {\\\\n  this._cache = {};\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jYWNoZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY2FjaGUuanM/ZWE5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cblxudmFyIENhY2hlID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBDYWNoZSgpIHtcbiAgdGhpcy5fY2FjaGUgPSB7fTtcbn07XG5cblxuQ2FjaGUucHJvdG90eXBlLnB1dCA9IGZ1bmN0aW9uIENhY2hlX3B1dChrZXksIHZhbHVlKSB7XG4gIHRoaXMuX2NhY2hlW2tleV0gPSB2YWx1ZTtcbn07XG5cblxuQ2FjaGUucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIENhY2hlX2dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX2NhY2hlW2tleV07XG59O1xuXG5cbkNhY2hlLnByb3RvdHlwZS5kZWwgPSBmdW5jdGlvbiBDYWNoZV9kZWwoa2V5KSB7XG4gIGRlbGV0ZSB0aGlzLl9jYWNoZVtrZXldO1xufTtcblxuXG5DYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiBDYWNoZV9jbGVhcigpIHtcbiAgdGhpcy5fY2FjaGUgPSB7fTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/cache.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/_rules.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/_rules.js ***!\\n  \\\\************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\n//all requires must be explicit because browserify won't work with dynamic requires\\\\nmodule.exports = {\\\\n  '$ref': __webpack_require__(/*! ../dotjs/ref */ \\\\\\\"./node_modules/ajv/lib/dotjs/ref.js\\\\\\\"),\\\\n  allOf: __webpack_require__(/*! ../dotjs/allOf */ \\\\\\\"./node_modules/ajv/lib/dotjs/allOf.js\\\\\\\"),\\\\n  anyOf: __webpack_require__(/*! ../dotjs/anyOf */ \\\\\\\"./node_modules/ajv/lib/dotjs/anyOf.js\\\\\\\"),\\\\n  const: __webpack_require__(/*! ../dotjs/const */ \\\\\\\"./node_modules/ajv/lib/dotjs/const.js\\\\\\\"),\\\\n  contains: __webpack_require__(/*! ../dotjs/contains */ \\\\\\\"./node_modules/ajv/lib/dotjs/contains.js\\\\\\\"),\\\\n  dependencies: __webpack_require__(/*! ../dotjs/dependencies */ \\\\\\\"./node_modules/ajv/lib/dotjs/dependencies.js\\\\\\\"),\\\\n  'enum': __webpack_require__(/*! ../dotjs/enum */ \\\\\\\"./node_modules/ajv/lib/dotjs/enum.js\\\\\\\"),\\\\n  format: __webpack_require__(/*! ../dotjs/format */ \\\\\\\"./node_modules/ajv/lib/dotjs/format.js\\\\\\\"),\\\\n  items: __webpack_require__(/*! ../dotjs/items */ \\\\\\\"./node_modules/ajv/lib/dotjs/items.js\\\\\\\"),\\\\n  maximum: __webpack_require__(/*! ../dotjs/_limit */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limit.js\\\\\\\"),\\\\n  minimum: __webpack_require__(/*! ../dotjs/_limit */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limit.js\\\\\\\"),\\\\n  maxItems: __webpack_require__(/*! ../dotjs/_limitItems */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limitItems.js\\\\\\\"),\\\\n  minItems: __webpack_require__(/*! ../dotjs/_limitItems */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limitItems.js\\\\\\\"),\\\\n  maxLength: __webpack_require__(/*! ../dotjs/_limitLength */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limitLength.js\\\\\\\"),\\\\n  minLength: __webpack_require__(/*! ../dotjs/_limitLength */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limitLength.js\\\\\\\"),\\\\n  maxProperties: __webpack_require__(/*! ../dotjs/_limitProperties */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limitProperties.js\\\\\\\"),\\\\n  minProperties: __webpack_require__(/*! ../dotjs/_limitProperties */ \\\\\\\"./node_modules/ajv/lib/dotjs/_limitProperties.js\\\\\\\"),\\\\n  multipleOf: __webpack_require__(/*! ../dotjs/multipleOf */ \\\\\\\"./node_modules/ajv/lib/dotjs/multipleOf.js\\\\\\\"),\\\\n  not: __webpack_require__(/*! ../dotjs/not */ \\\\\\\"./node_modules/ajv/lib/dotjs/not.js\\\\\\\"),\\\\n  oneOf: __webpack_require__(/*! ../dotjs/oneOf */ \\\\\\\"./node_modules/ajv/lib/dotjs/oneOf.js\\\\\\\"),\\\\n  pattern: __webpack_require__(/*! ../dotjs/pattern */ \\\\\\\"./node_modules/ajv/lib/dotjs/pattern.js\\\\\\\"),\\\\n  properties: __webpack_require__(/*! ../dotjs/properties */ \\\\\\\"./node_modules/ajv/lib/dotjs/properties.js\\\\\\\"),\\\\n  propertyNames: __webpack_require__(/*! ../dotjs/propertyNames */ \\\\\\\"./node_modules/ajv/lib/dotjs/propertyNames.js\\\\\\\"),\\\\n  required: __webpack_require__(/*! ../dotjs/required */ \\\\\\\"./node_modules/ajv/lib/dotjs/required.js\\\\\\\"),\\\\n  uniqueItems: __webpack_require__(/*! ../dotjs/uniqueItems */ \\\\\\\"./node_modules/ajv/lib/dotjs/uniqueItems.js\\\\\\\"),\\\\n  validate: __webpack_require__(/*! ../dotjs/validate */ \\\\\\\"./node_modules/ajv/lib/dotjs/validate.js\\\\\\\")\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL19ydWxlcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9fcnVsZXMuanM/ZjJjMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vYWxsIHJlcXVpcmVzIG11c3QgYmUgZXhwbGljaXQgYmVjYXVzZSBicm93c2VyaWZ5IHdvbid0IHdvcmsgd2l0aCBkeW5hbWljIHJlcXVpcmVzXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgJyRyZWYnOiByZXF1aXJlKCcuLi9kb3Rqcy9yZWYnKSxcbiAgYWxsT2Y6IHJlcXVpcmUoJy4uL2RvdGpzL2FsbE9mJyksXG4gIGFueU9mOiByZXF1aXJlKCcuLi9kb3Rqcy9hbnlPZicpLFxuICBjb25zdDogcmVxdWlyZSgnLi4vZG90anMvY29uc3QnKSxcbiAgY29udGFpbnM6IHJlcXVpcmUoJy4uL2RvdGpzL2NvbnRhaW5zJyksXG4gIGRlcGVuZGVuY2llczogcmVxdWlyZSgnLi4vZG90anMvZGVwZW5kZW5jaWVzJyksXG4gICdlbnVtJzogcmVxdWlyZSgnLi4vZG90anMvZW51bScpLFxuICBmb3JtYXQ6IHJlcXVpcmUoJy4uL2RvdGpzL2Zvcm1hdCcpLFxuICBpdGVtczogcmVxdWlyZSgnLi4vZG90anMvaXRlbXMnKSxcbiAgbWF4aW11bTogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0JyksXG4gIG1pbmltdW06IHJlcXVpcmUoJy4uL2RvdGpzL19saW1pdCcpLFxuICBtYXhJdGVtczogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0SXRlbXMnKSxcbiAgbWluSXRlbXM6IHJlcXVpcmUoJy4uL2RvdGpzL19saW1pdEl0ZW1zJyksXG4gIG1heExlbmd0aDogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0TGVuZ3RoJyksXG4gIG1pbkxlbmd0aDogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0TGVuZ3RoJyksXG4gIG1heFByb3BlcnRpZXM6IHJlcXVpcmUoJy4uL2RvdGpzL19saW1pdFByb3BlcnRpZXMnKSxcbiAgbWluUHJvcGVydGllczogcmVxdWlyZSgnLi4vZG90anMvX2xpbWl0UHJvcGVydGllcycpLFxuICBtdWx0aXBsZU9mOiByZXF1aXJlKCcuLi9kb3Rqcy9tdWx0aXBsZU9mJyksXG4gIG5vdDogcmVxdWlyZSgnLi4vZG90anMvbm90JyksXG4gIG9uZU9mOiByZXF1aXJlKCcuLi9kb3Rqcy9vbmVPZicpLFxuICBwYXR0ZXJuOiByZXF1aXJlKCcuLi9kb3Rqcy9wYXR0ZXJuJyksXG4gIHByb3BlcnRpZXM6IHJlcXVpcmUoJy4uL2RvdGpzL3Byb3BlcnRpZXMnKSxcbiAgcHJvcGVydHlOYW1lczogcmVxdWlyZSgnLi4vZG90anMvcHJvcGVydHlOYW1lcycpLFxuICByZXF1aXJlZDogcmVxdWlyZSgnLi4vZG90anMvcmVxdWlyZWQnKSxcbiAgdW5pcXVlSXRlbXM6IHJlcXVpcmUoJy4uL2RvdGpzL3VuaXF1ZUl0ZW1zJyksXG4gIHZhbGlkYXRlOiByZXF1aXJlKCcuLi9kb3Rqcy92YWxpZGF0ZScpXG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/_rules.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/async.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/async.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar MissingRefError = __webpack_require__(/*! ./error_classes */ \\\\\\\"./node_modules/ajv/lib/compile/error_classes.js\\\\\\\").MissingRef;\\\\n\\\\nmodule.exports = compileAsync;\\\\n\\\\n\\\\n/**\\\\n * Creates validating function for passed schema with asynchronous loading of missing schemas.\\\\n * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\\\\n * @this  Ajv\\\\n * @param {Object}   schema schema object\\\\n * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped\\\\n * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.\\\\n * @return {Promise} promise that resolves with a validating function.\\\\n */\\\\nfunction compileAsync(schema, meta, callback) {\\\\n  /* eslint no-shadow: 0 */\\\\n  /* global Promise */\\\\n  /* jshint validthis: true */\\\\n  var self = this;\\\\n  if (typeof this._opts.loadSchema != 'function')\\\\n    throw new Error('options.loadSchema should be a function');\\\\n\\\\n  if (typeof meta == 'function') {\\\\n    callback = meta;\\\\n    meta = undefined;\\\\n  }\\\\n\\\\n  var p = loadMetaSchemaOf(schema).then(function () {\\\\n    var schemaObj = self._addSchema(schema, undefined, meta);\\\\n    return schemaObj.validate || _compileAsync(schemaObj);\\\\n  });\\\\n\\\\n  if (callback) {\\\\n    p.then(\\\\n      function(v) { callback(null, v); },\\\\n      callback\\\\n    );\\\\n  }\\\\n\\\\n  return p;\\\\n\\\\n\\\\n  function loadMetaSchemaOf(sch) {\\\\n    var $schema = sch.$schema;\\\\n    return $schema && !self.getSchema($schema)\\\\n            ? compileAsync.call(self, { $ref: $schema }, true)\\\\n            : Promise.resolve();\\\\n  }\\\\n\\\\n\\\\n  function _compileAsync(schemaObj) {\\\\n    try { return self._compile(schemaObj); }\\\\n    catch(e) {\\\\n      if (e instanceof MissingRefError) return loadMissingSchema(e);\\\\n      throw e;\\\\n    }\\\\n\\\\n\\\\n    function loadMissingSchema(e) {\\\\n      var ref = e.missingSchema;\\\\n      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');\\\\n\\\\n      var schemaPromise = self._loadingSchemas[ref];\\\\n      if (!schemaPromise) {\\\\n        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);\\\\n        schemaPromise.then(removePromise, removePromise);\\\\n      }\\\\n\\\\n      return schemaPromise.then(function (sch) {\\\\n        if (!added(ref)) {\\\\n          return loadMetaSchemaOf(sch).then(function () {\\\\n            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);\\\\n          });\\\\n        }\\\\n      }).then(function() {\\\\n        return _compileAsync(schemaObj);\\\\n      });\\\\n\\\\n      function removePromise() {\\\\n        delete self._loadingSchemas[ref];\\\\n      }\\\\n\\\\n      function added(ref) {\\\\n        return self._refs[ref] || self._schemas[ref];\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2FzeW5jLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2FzeW5jLmpzP2IxYTgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgTWlzc2luZ1JlZkVycm9yID0gcmVxdWlyZSgnLi9lcnJvcl9jbGFzc2VzJykuTWlzc2luZ1JlZjtcblxubW9kdWxlLmV4cG9ydHMgPSBjb21waWxlQXN5bmM7XG5cblxuLyoqXG4gKiBDcmVhdGVzIHZhbGlkYXRpbmcgZnVuY3Rpb24gZm9yIHBhc3NlZCBzY2hlbWEgd2l0aCBhc3luY2hyb25vdXMgbG9hZGluZyBvZiBtaXNzaW5nIHNjaGVtYXMuXG4gKiBgbG9hZFNjaGVtYWAgb3B0aW9uIHNob3VsZCBiZSBhIGZ1bmN0aW9uIHRoYXQgYWNjZXB0cyBzY2hlbWEgdXJpIGFuZCByZXR1cm5zIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBzY2hlbWEuXG4gKiBAdGhpcyAgQWp2XG4gKiBAcGFyYW0ge09iamVjdH0gICBzY2hlbWEgc2NoZW1hIG9iamVjdFxuICogQHBhcmFtIHtCb29sZWFufSAgbWV0YSBvcHRpb25hbCB0cnVlIHRvIGNvbXBpbGUgbWV0YS1zY2hlbWE7IHRoaXMgcGFyYW1ldGVyIGNhbiBiZSBza2lwcGVkXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBhbiBvcHRpb25hbCBub2RlLXN0eWxlIGNhbGxiYWNrLCBpdCBpcyBjYWxsZWQgd2l0aCAyIHBhcmFtZXRlcnM6IGVycm9yIChvciBudWxsKSBhbmQgdmFsaWRhdGluZyBmdW5jdGlvbi5cbiAqIEByZXR1cm4ge1Byb21pc2V9IHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgdmFsaWRhdGluZyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY29tcGlsZUFzeW5jKHNjaGVtYSwgbWV0YSwgY2FsbGJhY2spIHtcbiAgLyogZXNsaW50IG5vLXNoYWRvdzogMCAqL1xuICAvKiBnbG9iYWwgUHJvbWlzZSAqL1xuICAvKiBqc2hpbnQgdmFsaWR0aGlzOiB0cnVlICovXG4gIHZhciBzZWxmID0gdGhpcztcbiAgaWYgKHR5cGVvZiB0aGlzLl9vcHRzLmxvYWRTY2hlbWEgIT0gJ2Z1bmN0aW9uJylcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ29wdGlvbnMubG9hZFNjaGVtYSBzaG91bGQgYmUgYSBmdW5jdGlvbicpO1xuXG4gIGlmICh0eXBlb2YgbWV0YSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgY2FsbGJhY2sgPSBtZXRhO1xuICAgIG1ldGEgPSB1bmRlZmluZWQ7XG4gIH1cblxuICB2YXIgcCA9IGxvYWRNZXRhU2NoZW1hT2Yoc2NoZW1hKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2NoZW1hT2JqID0gc2VsZi5fYWRkU2NoZW1hKHNjaGVtYSwgdW5kZWZpbmVkLCBtZXRhKTtcbiAgICByZXR1cm4gc2NoZW1hT2JqLnZhbGlkYXRlIHx8IF9jb21waWxlQXN5bmMoc2NoZW1hT2JqKTtcbiAgfSk7XG5cbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgcC50aGVuKFxuICAgICAgZnVuY3Rpb24odikgeyBjYWxsYmFjayhudWxsLCB2KTsgfSxcbiAgICAgIGNhbGxiYWNrXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBwO1xuXG5cbiAgZnVuY3Rpb24gbG9hZE1ldGFTY2hlbWFPZihzY2gpIHtcbiAgICB2YXIgJHNjaGVtYSA9IHNjaC4kc2NoZW1hO1xuICAgIHJldHVybiAkc2NoZW1hICYmICFzZWxmLmdldFNjaGVtYSgkc2NoZW1hKVxuICAgICAgICAgICAgPyBjb21waWxlQXN5bmMuY2FsbChzZWxmLCB7ICRyZWY6ICRzY2hlbWEgfSwgdHJ1ZSlcbiAgICAgICAgICAgIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuXG4gIGZ1bmN0aW9uIF9jb21waWxlQXN5bmMoc2NoZW1hT2JqKSB7XG4gICAgdHJ5IHsgcmV0dXJuIHNlbGYuX2NvbXBpbGUoc2NoZW1hT2JqKTsgfVxuICAgIGNhdGNoKGUpIHtcbiAgICAgIGlmIChlIGluc3RhbmNlb2YgTWlzc2luZ1JlZkVycm9yKSByZXR1cm4gbG9hZE1pc3NpbmdTY2hlbWEoZSk7XG4gICAgICB0aHJvdyBlO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gbG9hZE1pc3NpbmdTY2hlbWEoZSkge1xuICAgICAgdmFyIHJlZiA9IGUubWlzc2luZ1NjaGVtYTtcbiAgICAgIGlmIChhZGRlZChyZWYpKSB0aHJvdyBuZXcgRXJyb3IoJ1NjaGVtYSAnICsgcmVmICsgJyBpcyBsb2FkZWQgYnV0ICcgKyBlLm1pc3NpbmdSZWYgKyAnIGNhbm5vdCBiZSByZXNvbHZlZCcpO1xuXG4gICAgICB2YXIgc2NoZW1hUHJvbWlzZSA9IHNlbGYuX2xvYWRpbmdTY2hlbWFzW3JlZl07XG4gICAgICBpZiAoIXNjaGVtYVByb21pc2UpIHtcbiAgICAgICAgc2NoZW1hUHJvbWlzZSA9IHNlbGYuX2xvYWRpbmdTY2hlbWFzW3JlZl0gPSBzZWxmLl9vcHRzLmxvYWRTY2hlbWEocmVmKTtcbiAgICAgICAgc2NoZW1hUHJvbWlzZS50aGVuKHJlbW92ZVByb21pc2UsIHJlbW92ZVByb21pc2UpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc2NoZW1hUHJvbWlzZS50aGVuKGZ1bmN0aW9uIChzY2gpIHtcbiAgICAgICAgaWYgKCFhZGRlZChyZWYpKSB7XG4gICAgICAgICAgcmV0dXJuIGxvYWRNZXRhU2NoZW1hT2Yoc2NoKS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICghYWRkZWQocmVmKSkgc2VsZi5hZGRTY2hlbWEoc2NoLCByZWYsIHVuZGVmaW5lZCwgbWV0YSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfY29tcGlsZUFzeW5jKHNjaGVtYU9iaik7XG4gICAgICB9KTtcblxuICAgICAgZnVuY3Rpb24gcmVtb3ZlUHJvbWlzZSgpIHtcbiAgICAgICAgZGVsZXRlIHNlbGYuX2xvYWRpbmdTY2hlbWFzW3JlZl07XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGFkZGVkKHJlZikge1xuICAgICAgICByZXR1cm4gc2VsZi5fcmVmc1tyZWZdIHx8IHNlbGYuX3NjaGVtYXNbcmVmXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/async.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/equal.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/equal.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\n/*eslint complexity: 0*/\\\\n\\\\nmodule.exports = function equal(a, b) {\\\\n  if (a === b) return true;\\\\n\\\\n  var arrA = Array.isArray(a)\\\\n    , arrB = Array.isArray(b)\\\\n    , i;\\\\n\\\\n  if (arrA && arrB) {\\\\n    if (a.length != b.length) return false;\\\\n    for (i = 0; i < a.length; i++)\\\\n      if (!equal(a[i], b[i])) return false;\\\\n    return true;\\\\n  }\\\\n\\\\n  if (arrA != arrB) return false;\\\\n\\\\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\\\\n    var keys = Object.keys(a);\\\\n    if (keys.length !== Object.keys(b).length) return false;\\\\n\\\\n    var dateA = a instanceof Date\\\\n      , dateB = b instanceof Date;\\\\n    if (dateA && dateB) return a.getTime() == b.getTime();\\\\n    if (dateA != dateB) return false;\\\\n\\\\n    var regexpA = a instanceof RegExp\\\\n      , regexpB = b instanceof RegExp;\\\\n    if (regexpA && regexpB) return a.toString() == b.toString();\\\\n    if (regexpA != regexpB) return false;\\\\n\\\\n    for (i = 0; i < keys.length; i++)\\\\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\\\\n\\\\n    for (i = 0; i < keys.length; i++)\\\\n      if(!equal(a[keys[i]], b[keys[i]])) return false;\\\\n\\\\n    return true;\\\\n  }\\\\n\\\\n  return false;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2VxdWFsLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2VxdWFsLmpzPzgxMGUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKmVzbGludCBjb21wbGV4aXR5OiAwKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBlcXVhbChhLCBiKSB7XG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICB2YXIgYXJyQSA9IEFycmF5LmlzQXJyYXkoYSlcbiAgICAsIGFyckIgPSBBcnJheS5pc0FycmF5KGIpXG4gICAgLCBpO1xuXG4gIGlmIChhcnJBICYmIGFyckIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT0gYi5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKylcbiAgICAgIGlmICghZXF1YWwoYVtpXSwgYltpXSkpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmIChhcnJBICE9IGFyckIpIHJldHVybiBmYWxzZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGEpO1xuICAgIGlmIChrZXlzLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoYikubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG5cbiAgICB2YXIgZGF0ZUEgPSBhIGluc3RhbmNlb2YgRGF0ZVxuICAgICAgLCBkYXRlQiA9IGIgaW5zdGFuY2VvZiBEYXRlO1xuICAgIGlmIChkYXRlQSAmJiBkYXRlQikgcmV0dXJuIGEuZ2V0VGltZSgpID09IGIuZ2V0VGltZSgpO1xuICAgIGlmIChkYXRlQSAhPSBkYXRlQikgcmV0dXJuIGZhbHNlO1xuXG4gICAgdmFyIHJlZ2V4cEEgPSBhIGluc3RhbmNlb2YgUmVnRXhwXG4gICAgICAsIHJlZ2V4cEIgPSBiIGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIGlmIChyZWdleHBBICYmIHJlZ2V4cEIpIHJldHVybiBhLnRvU3RyaW5nKCkgPT0gYi50b1N0cmluZygpO1xuICAgIGlmIChyZWdleHBBICE9IHJlZ2V4cEIpIHJldHVybiBmYWxzZTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKVxuICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKVxuICAgICAgaWYoIWVxdWFsKGFba2V5c1tpXV0sIGJba2V5c1tpXV0pKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/equal.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/error_classes.js\\\":\\n/*!*******************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/error_classes.js ***!\\n  \\\\*******************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar resolve = __webpack_require__(/*! ./resolve */ \\\\\\\"./node_modules/ajv/lib/compile/resolve.js\\\\\\\");\\\\n\\\\nmodule.exports = {\\\\n  Validation: errorSubclass(ValidationError),\\\\n  MissingRef: errorSubclass(MissingRefError)\\\\n};\\\\n\\\\n\\\\nfunction ValidationError(errors) {\\\\n  this.message = 'validation failed';\\\\n  this.errors = errors;\\\\n  this.ajv = this.validation = true;\\\\n}\\\\n\\\\n\\\\nMissingRefError.message = function (baseId, ref) {\\\\n  return 'can\\\\\\\\'t resolve reference ' + ref + ' from id ' + baseId;\\\\n};\\\\n\\\\n\\\\nfunction MissingRefError(baseId, ref, message) {\\\\n  this.message = message || MissingRefError.message(baseId, ref);\\\\n  this.missingRef = resolve.url(baseId, ref);\\\\n  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));\\\\n}\\\\n\\\\n\\\\nfunction errorSubclass(Subclass) {\\\\n  Subclass.prototype = Object.create(Error.prototype);\\\\n  Subclass.prototype.constructor = Subclass;\\\\n  return Subclass;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2Vycm9yX2NsYXNzZXMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXJyb3JfY2xhc3Nlcy5qcz84OTlhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHJlc29sdmUgPSByZXF1aXJlKCcuL3Jlc29sdmUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFZhbGlkYXRpb246IGVycm9yU3ViY2xhc3MoVmFsaWRhdGlvbkVycm9yKSxcbiAgTWlzc2luZ1JlZjogZXJyb3JTdWJjbGFzcyhNaXNzaW5nUmVmRXJyb3IpXG59O1xuXG5cbmZ1bmN0aW9uIFZhbGlkYXRpb25FcnJvcihlcnJvcnMpIHtcbiAgdGhpcy5tZXNzYWdlID0gJ3ZhbGlkYXRpb24gZmFpbGVkJztcbiAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XG4gIHRoaXMuYWp2ID0gdGhpcy52YWxpZGF0aW9uID0gdHJ1ZTtcbn1cblxuXG5NaXNzaW5nUmVmRXJyb3IubWVzc2FnZSA9IGZ1bmN0aW9uIChiYXNlSWQsIHJlZikge1xuICByZXR1cm4gJ2NhblxcJ3QgcmVzb2x2ZSByZWZlcmVuY2UgJyArIHJlZiArICcgZnJvbSBpZCAnICsgYmFzZUlkO1xufTtcblxuXG5mdW5jdGlvbiBNaXNzaW5nUmVmRXJyb3IoYmFzZUlkLCByZWYsIG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSB8fCBNaXNzaW5nUmVmRXJyb3IubWVzc2FnZShiYXNlSWQsIHJlZik7XG4gIHRoaXMubWlzc2luZ1JlZiA9IHJlc29sdmUudXJsKGJhc2VJZCwgcmVmKTtcbiAgdGhpcy5taXNzaW5nU2NoZW1hID0gcmVzb2x2ZS5ub3JtYWxpemVJZChyZXNvbHZlLmZ1bGxQYXRoKHRoaXMubWlzc2luZ1JlZikpO1xufVxuXG5cbmZ1bmN0aW9uIGVycm9yU3ViY2xhc3MoU3ViY2xhc3MpIHtcbiAgU3ViY2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpO1xuICBTdWJjbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTdWJjbGFzcztcbiAgcmV0dXJuIFN1YmNsYXNzO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/error_classes.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/formats.js\\\":\\n/*!*************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/formats.js ***!\\n  \\\\*************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar util = __webpack_require__(/*! ./util */ \\\\\\\"./node_modules/ajv/lib/compile/util.js\\\\\\\");\\\\n\\\\nvar DATE = /^\\\\\\\\d\\\\\\\\d\\\\\\\\d\\\\\\\\d-(\\\\\\\\d\\\\\\\\d)-(\\\\\\\\d\\\\\\\\d)$/;\\\\nvar DAYS = [0,31,29,31,30,31,30,31,31,30,31,30,31];\\\\nvar TIME = /^(\\\\\\\\d\\\\\\\\d):(\\\\\\\\d\\\\\\\\d):(\\\\\\\\d\\\\\\\\d)(\\\\\\\\.\\\\\\\\d+)?(z|[+-]\\\\\\\\d\\\\\\\\d:\\\\\\\\d\\\\\\\\d)?$/i;\\\\nvar HOSTNAME = /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\\\\\\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i;\\\\nvar URI = /^(?:[a-z][a-z0-9+\\\\\\\\-.]*:)(?:\\\\\\\\/?\\\\\\\\/(?:(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\\\\\\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)\\\\\\\\.){3}(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\\\\\\\.[a-z0-9\\\\\\\\-._~!$&'()*+,;=:]+)\\\\\\\\]|(?:(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)\\\\\\\\.){3}(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)|(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\\\\\\\d*)?(?:\\\\\\\\/(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\\\\\\\/(?:(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\\\\\/(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\\\\\/(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\\\\\\\?(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:@\\\\\\\\/?]|%[0-9a-f]{2})*)?(?:\\\\\\\\#(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:@\\\\\\\\/?]|%[0-9a-f]{2})*)?$/i;\\\\nvar URIREF = /^(?:[a-z][a-z0-9+\\\\\\\\-.]*:)?(?:\\\\\\\\/?\\\\\\\\/(?:(?:[a-z0-9\\\\\\\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\\\\\\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)\\\\\\\\.){3}(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\\\\\\\.[a-z0-9\\\\\\\\-._~!$&'()*+,;=:]+)\\\\\\\\]|(?:(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)\\\\\\\\.){3}(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)|(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=]|%[0-9a-f]{2})*)(?::\\\\\\\\d*)?(?:\\\\\\\\/(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\\\\\\\/(?:(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\\\\\/(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\\\\\\\/(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\\\\\\\?(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=:@\\\\\\\\/?]|%[0-9a-f]{2})*)?(?:\\\\\\\\#(?:[a-z0-9\\\\\\\\-._~!$&'\\\\\\\"()*+,;=:@\\\\\\\\/?]|%[0-9a-f]{2})*)?$/i;\\\\n// uri-template: https://tools.ietf.org/html/rfc6570\\\\nvar URITEMPLATE = /^(?:(?:[^\\\\\\\\x00-\\\\\\\\x20\\\\\\\"'<>%\\\\\\\\\\\\\\\\^`{|}]|%[0-9a-f]{2})|\\\\\\\\{[+#.\\\\\\\\/;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?:\\\\\\\\:[1-9][0-9]{0,3}|\\\\\\\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?:\\\\\\\\:[1-9][0-9]{0,3}|\\\\\\\\*)?)*\\\\\\\\})*$/i;\\\\n// For the source: https://gist.github.com/dperini/729294\\\\n// For test cases: https://mathiasbynens.be/demo/url-regex\\\\n// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.\\\\n// var URL = /^(?:(?:https?|ftp):\\\\\\\\/\\\\\\\\/)(?:\\\\\\\\S+(?::\\\\\\\\S*)?@)?(?:(?!10(?:\\\\\\\\.\\\\\\\\d{1,3}){3})(?!127(?:\\\\\\\\.\\\\\\\\d{1,3}){3})(?!169\\\\\\\\.254(?:\\\\\\\\.\\\\\\\\d{1,3}){2})(?!192\\\\\\\\.168(?:\\\\\\\\.\\\\\\\\d{1,3}){2})(?!172\\\\\\\\.(?:1[6-9]|2\\\\\\\\d|3[0-1])(?:\\\\\\\\.\\\\\\\\d{1,3}){2})(?:[1-9]\\\\\\\\d?|1\\\\\\\\d\\\\\\\\d|2[01]\\\\\\\\d|22[0-3])(?:\\\\\\\\.(?:1?\\\\\\\\d{1,2}|2[0-4]\\\\\\\\d|25[0-5])){2}(?:\\\\\\\\.(?:[1-9]\\\\\\\\d?|1\\\\\\\\d\\\\\\\\d|2[0-4]\\\\\\\\d|25[0-4]))|(?:(?:[a-z\\\\\\\\u{00a1}-\\\\\\\\u{ffff}0-9]+-?)*[a-z\\\\\\\\u{00a1}-\\\\\\\\u{ffff}0-9]+)(?:\\\\\\\\.(?:[a-z\\\\\\\\u{00a1}-\\\\\\\\u{ffff}0-9]+-?)*[a-z\\\\\\\\u{00a1}-\\\\\\\\u{ffff}0-9]+)*(?:\\\\\\\\.(?:[a-z\\\\\\\\u{00a1}-\\\\\\\\u{ffff}]{2,})))(?::\\\\\\\\d{2,5})?(?:\\\\\\\\/[^\\\\\\\\s]*)?$/iu;\\\\nvar URL = /^(?:(?:http[s\\\\\\\\u017F]?|ftp):\\\\\\\\/\\\\\\\\/)(?:(?:[\\\\\\\\0-\\\\\\\\x08\\\\\\\\x0E-\\\\\\\\x1F!-\\\\\\\\x9F\\\\\\\\xA1-\\\\\\\\u167F\\\\\\\\u1681-\\\\\\\\u1FFF\\\\\\\\u200B-\\\\\\\\u2027\\\\\\\\u202A-\\\\\\\\u202E\\\\\\\\u2030-\\\\\\\\u205E\\\\\\\\u2060-\\\\\\\\u2FFF\\\\\\\\u3001-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFEFE\\\\\\\\uFF00-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF][\\\\\\\\uDC00-\\\\\\\\uDFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF])+(?::(?:[\\\\\\\\0-\\\\\\\\x08\\\\\\\\x0E-\\\\\\\\x1F!-\\\\\\\\x9F\\\\\\\\xA1-\\\\\\\\u167F\\\\\\\\u1681-\\\\\\\\u1FFF\\\\\\\\u200B-\\\\\\\\u2027\\\\\\\\u202A-\\\\\\\\u202E\\\\\\\\u2030-\\\\\\\\u205E\\\\\\\\u2060-\\\\\\\\u2FFF\\\\\\\\u3001-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFEFE\\\\\\\\uFF00-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF][\\\\\\\\uDC00-\\\\\\\\uDFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF])*)?@)?(?:(?!10(?:\\\\\\\\.[0-9]{1,3}){3})(?!127(?:\\\\\\\\.[0-9]{1,3}){3})(?!169\\\\\\\\.254(?:\\\\\\\\.[0-9]{1,3}){2})(?!192\\\\\\\\.168(?:\\\\\\\\.[0-9]{1,3}){2})(?!172\\\\\\\\.(?:1[6-9]|2[0-9]|3[01])(?:\\\\\\\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\\\\\\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\\\\\\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\\\\\\\xA1-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF])+\\\\\\\\-?)*(?:[0-9KSa-z\\\\\\\\xA1-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF])+)(?:\\\\\\\\.(?:(?:[0-9KSa-z\\\\\\\\xA1-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF])+\\\\\\\\-?)*(?:[0-9KSa-z\\\\\\\\xA1-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF])+)*(?:\\\\\\\\.(?:(?:[KSa-z\\\\\\\\xA1-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\\\\\\\/(?:[\\\\\\\\0-\\\\\\\\x08\\\\\\\\x0E-\\\\\\\\x1F!-\\\\\\\\x9F\\\\\\\\xA1-\\\\\\\\u167F\\\\\\\\u1681-\\\\\\\\u1FFF\\\\\\\\u200B-\\\\\\\\u2027\\\\\\\\u202A-\\\\\\\\u202E\\\\\\\\u2030-\\\\\\\\u205E\\\\\\\\u2060-\\\\\\\\u2FFF\\\\\\\\u3001-\\\\\\\\uD7FF\\\\\\\\uE000-\\\\\\\\uFEFE\\\\\\\\uFF00-\\\\\\\\uFFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF][\\\\\\\\uDC00-\\\\\\\\uDFFF]|[\\\\\\\\uD800-\\\\\\\\uDBFF](?![\\\\\\\\uDC00-\\\\\\\\uDFFF])|(?:[^\\\\\\\\uD800-\\\\\\\\uDBFF]|^)[\\\\\\\\uDC00-\\\\\\\\uDFFF])*)?$/i;\\\\nvar UUID = /^(?:urn\\\\\\\\:uuid\\\\\\\\:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\\\\nvar JSON_POINTER = /^(?:\\\\\\\\/(?:[^~\\\\\\\\/]|~0|~1)*)*$|^\\\\\\\\#(?:\\\\\\\\/(?:[a-z0-9_\\\\\\\\-\\\\\\\\.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\\\\nvar RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:\\\\\\\\#|(?:\\\\\\\\/(?:[^~\\\\\\\\/]|~0|~1)*)*)$/;\\\\n\\\\n\\\\nmodule.exports = formats;\\\\n\\\\nfunction formats(mode) {\\\\n  mode = mode == 'full' ? 'full' : 'fast';\\\\n  return util.copy(formats[mode]);\\\\n}\\\\n\\\\n\\\\nformats.fast = {\\\\n  // date: http://tools.ietf.org/html/rfc3339#section-5.6\\\\n  date: /^\\\\\\\\d\\\\\\\\d\\\\\\\\d\\\\\\\\d-[0-1]\\\\\\\\d-[0-3]\\\\\\\\d$/,\\\\n  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6\\\\n  time: /^[0-2]\\\\\\\\d:[0-5]\\\\\\\\d:[0-5]\\\\\\\\d(?:\\\\\\\\.\\\\\\\\d+)?(?:z|[+-]\\\\\\\\d\\\\\\\\d:\\\\\\\\d\\\\\\\\d)?$/i,\\\\n  'date-time': /^\\\\\\\\d\\\\\\\\d\\\\\\\\d\\\\\\\\d-[0-1]\\\\\\\\d-[0-3]\\\\\\\\d[t\\\\\\\\s][0-2]\\\\\\\\d:[0-5]\\\\\\\\d:[0-5]\\\\\\\\d(?:\\\\\\\\.\\\\\\\\d+)?(?:z|[+-]\\\\\\\\d\\\\\\\\d:\\\\\\\\d\\\\\\\\d)$/i,\\\\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\\\\n  uri: /^(?:[a-z][a-z0-9+-.]*)(?:\\\\\\\\:|\\\\\\\\/)\\\\\\\\/?[^\\\\\\\\s]*$/i,\\\\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\\\\\\\/\\\\\\\\/)?[^\\\\\\\\s]*$/i,\\\\n  'uri-template': URITEMPLATE,\\\\n  url: URL,\\\\n  // email (sources from jsen validator):\\\\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\\\\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\\\\n  email: /^[a-z0-9.!#$%&'*+\\\\\\\\/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\\\\\\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\\\\n  hostname: HOSTNAME,\\\\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\\\\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)\\\\\\\\.){3}(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)$/,\\\\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\\\\n  ipv6: /^\\\\\\\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:)))(?:%.+)?\\\\\\\\s*$/i,\\\\n  regex: regex,\\\\n  // uuid: http://tools.ietf.org/html/rfc4122\\\\n  uuid: UUID,\\\\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\\\\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\\\\n  'json-pointer': JSON_POINTER,\\\\n  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00\\\\n  'relative-json-pointer': RELATIVE_JSON_POINTER\\\\n};\\\\n\\\\n\\\\nformats.full = {\\\\n  date: date,\\\\n  time: time,\\\\n  'date-time': date_time,\\\\n  uri: uri,\\\\n  'uri-reference': URIREF,\\\\n  'uri-template': URITEMPLATE,\\\\n  url: URL,\\\\n  email: /^[a-z0-9!#$%&'*+\\\\\\\\/=?^_`{|}~-]+(?:\\\\\\\\.[a-z0-9!#$%&''*+\\\\\\\\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\\\\n  hostname: hostname,\\\\n  ipv4: /^(?:(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)\\\\\\\\.){3}(?:25[0-5]|2[0-4]\\\\\\\\d|[01]?\\\\\\\\d\\\\\\\\d?)$/,\\\\n  ipv6: /^\\\\\\\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)(?:\\\\\\\\.(?:25[0-5]|2[0-4]\\\\\\\\d|1\\\\\\\\d\\\\\\\\d|[1-9]?\\\\\\\\d)){3}))|:)))(?:%.+)?\\\\\\\\s*$/i,\\\\n  regex: regex,\\\\n  uuid: UUID,\\\\n  'json-pointer': JSON_POINTER,\\\\n  'relative-json-pointer': RELATIVE_JSON_POINTER\\\\n};\\\\n\\\\n\\\\nfunction date(str) {\\\\n  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\\\\n  var matches = str.match(DATE);\\\\n  if (!matches) return false;\\\\n\\\\n  var month = +matches[1];\\\\n  var day = +matches[2];\\\\n  return month >= 1 && month <= 12 && day >= 1 && day <= DAYS[month];\\\\n}\\\\n\\\\n\\\\nfunction time(str, full) {\\\\n  var matches = str.match(TIME);\\\\n  if (!matches) return false;\\\\n\\\\n  var hour = matches[1];\\\\n  var minute = matches[2];\\\\n  var second = matches[3];\\\\n  var timeZone = matches[5];\\\\n  return hour <= 23 && minute <= 59 && second <= 59 && (!full || timeZone);\\\\n}\\\\n\\\\n\\\\nvar DATE_TIME_SEPARATOR = /t|\\\\\\\\s/i;\\\\nfunction date_time(str) {\\\\n  // http://tools.ietf.org/html/rfc3339#section-5.6\\\\n  var dateTime = str.split(DATE_TIME_SEPARATOR);\\\\n  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);\\\\n}\\\\n\\\\n\\\\nfunction hostname(str) {\\\\n  // https://tools.ietf.org/html/rfc1034#section-3.5\\\\n  // https://tools.ietf.org/html/rfc1123#section-2\\\\n  return str.length <= 255 && HOSTNAME.test(str);\\\\n}\\\\n\\\\n\\\\nvar NOT_URI_FRAGMENT = /\\\\\\\\/|\\\\\\\\:/;\\\\nfunction uri(str) {\\\\n  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \\\\\\\".\\\\\\\"\\\\n  return NOT_URI_FRAGMENT.test(str) && URI.test(str);\\\\n}\\\\n\\\\n\\\\nvar Z_ANCHOR = /[^\\\\\\\\\\\\\\\\]\\\\\\\\\\\\\\\\Z/;\\\\nfunction regex(str) {\\\\n  if (Z_ANCHOR.test(str)) return false;\\\\n  try {\\\\n    new RegExp(str);\\\\n    return true;\\\\n  } catch(e) {\\\\n    return false;\\\\n  }\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/formats.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/index.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/index.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar resolve = __webpack_require__(/*! ./resolve */ \\\\\\\"./node_modules/ajv/lib/compile/resolve.js\\\\\\\")\\\\n  , util = __webpack_require__(/*! ./util */ \\\\\\\"./node_modules/ajv/lib/compile/util.js\\\\\\\")\\\\n  , errorClasses = __webpack_require__(/*! ./error_classes */ \\\\\\\"./node_modules/ajv/lib/compile/error_classes.js\\\\\\\")\\\\n  , stableStringify = __webpack_require__(/*! json-stable-stringify */ \\\\\\\"./node_modules/json-stable-stringify/index.js\\\\\\\");\\\\n\\\\nvar validateGenerator = __webpack_require__(/*! ../dotjs/validate */ \\\\\\\"./node_modules/ajv/lib/dotjs/validate.js\\\\\\\");\\\\n\\\\n/**\\\\n * Functions below are used inside compiled validations function\\\\n */\\\\n\\\\nvar co = __webpack_require__(/*! co */ \\\\\\\"./node_modules/co/index.js\\\\\\\");\\\\nvar ucs2length = util.ucs2length;\\\\nvar equal = __webpack_require__(/*! ./equal */ \\\\\\\"./node_modules/ajv/lib/compile/equal.js\\\\\\\");\\\\n\\\\n// this error is thrown by async schemas to return validation errors via exception\\\\nvar ValidationError = errorClasses.Validation;\\\\n\\\\nmodule.exports = compile;\\\\n\\\\n\\\\n/**\\\\n * Compiles schema to validation function\\\\n * @this   Ajv\\\\n * @param  {Object} schema schema object\\\\n * @param  {Object} root object with information about the root schema for this schema\\\\n * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution\\\\n * @param  {String} baseId base ID for IDs in the schema\\\\n * @return {Function} validation function\\\\n */\\\\nfunction compile(schema, root, localRefs, baseId) {\\\\n  /* jshint validthis: true, evil: true */\\\\n  /* eslint no-shadow: 0 */\\\\n  var self = this\\\\n    , opts = this._opts\\\\n    , refVal = [ undefined ]\\\\n    , refs = {}\\\\n    , patterns = []\\\\n    , patternsHash = {}\\\\n    , defaults = []\\\\n    , defaultsHash = {}\\\\n    , customRules = [];\\\\n\\\\n  root = root || { schema: schema, refVal: refVal, refs: refs };\\\\n\\\\n  var c = checkCompiling.call(this, schema, root, baseId);\\\\n  var compilation = this._compilations[c.index];\\\\n  if (c.compiling) return (compilation.callValidate = callValidate);\\\\n\\\\n  var formats = this._formats;\\\\n  var RULES = this.RULES;\\\\n\\\\n  try {\\\\n    var v = localCompile(schema, root, localRefs, baseId);\\\\n    compilation.validate = v;\\\\n    var cv = compilation.callValidate;\\\\n    if (cv) {\\\\n      cv.schema = v.schema;\\\\n      cv.errors = null;\\\\n      cv.refs = v.refs;\\\\n      cv.refVal = v.refVal;\\\\n      cv.root = v.root;\\\\n      cv.$async = v.$async;\\\\n      if (opts.sourceCode) cv.source = v.source;\\\\n    }\\\\n    return v;\\\\n  } finally {\\\\n    endCompiling.call(this, schema, root, baseId);\\\\n  }\\\\n\\\\n  function callValidate() {\\\\n    var validate = compilation.validate;\\\\n    var result = validate.apply(null, arguments);\\\\n    callValidate.errors = validate.errors;\\\\n    return result;\\\\n  }\\\\n\\\\n  function localCompile(_schema, _root, localRefs, baseId) {\\\\n    var isRoot = !_root || (_root && _root.schema == _schema);\\\\n    if (_root.schema != root.schema)\\\\n      return compile.call(self, _schema, _root, localRefs, baseId);\\\\n\\\\n    var $async = _schema.$async === true;\\\\n\\\\n    var sourceCode = validateGenerator({\\\\n      isTop: true,\\\\n      schema: _schema,\\\\n      isRoot: isRoot,\\\\n      baseId: baseId,\\\\n      root: _root,\\\\n      schemaPath: '',\\\\n      errSchemaPath: '#',\\\\n      errorPath: '\\\\\\\"\\\\\\\"',\\\\n      MissingRefError: errorClasses.MissingRef,\\\\n      RULES: RULES,\\\\n      validate: validateGenerator,\\\\n      util: util,\\\\n      resolve: resolve,\\\\n      resolveRef: resolveRef,\\\\n      usePattern: usePattern,\\\\n      useDefault: useDefault,\\\\n      useCustomRule: useCustomRule,\\\\n      opts: opts,\\\\n      formats: formats,\\\\n      self: self\\\\n    });\\\\n\\\\n    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)\\\\n                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)\\\\n                   + sourceCode;\\\\n\\\\n    if (opts.processCode) sourceCode = opts.processCode(sourceCode);\\\\n    // console.log('\\\\\\\\n\\\\\\\\n\\\\\\\\n *** \\\\\\\\n', JSON.stringify(sourceCode));\\\\n    var validate;\\\\n    try {\\\\n      var makeValidate = new Function(\\\\n        'self',\\\\n        'RULES',\\\\n        'formats',\\\\n        'root',\\\\n        'refVal',\\\\n        'defaults',\\\\n        'customRules',\\\\n        'co',\\\\n        'equal',\\\\n        'ucs2length',\\\\n        'ValidationError',\\\\n        sourceCode\\\\n      );\\\\n\\\\n      validate = makeValidate(\\\\n        self,\\\\n        RULES,\\\\n        formats,\\\\n        root,\\\\n        refVal,\\\\n        defaults,\\\\n        customRules,\\\\n        co,\\\\n        equal,\\\\n        ucs2length,\\\\n        ValidationError\\\\n      );\\\\n\\\\n      refVal[0] = validate;\\\\n    } catch(e) {\\\\n      console.error('Error compiling schema, function code:', sourceCode);\\\\n      throw e;\\\\n    }\\\\n\\\\n    validate.schema = _schema;\\\\n    validate.errors = null;\\\\n    validate.refs = refs;\\\\n    validate.refVal = refVal;\\\\n    validate.root = isRoot ? validate : _root;\\\\n    if ($async) validate.$async = true;\\\\n    if (opts.sourceCode === true) {\\\\n      validate.source = {\\\\n        code: sourceCode,\\\\n        patterns: patterns,\\\\n        defaults: defaults\\\\n      };\\\\n    }\\\\n\\\\n    return validate;\\\\n  }\\\\n\\\\n  function resolveRef(baseId, ref, isRoot) {\\\\n    ref = resolve.url(baseId, ref);\\\\n    var refIndex = refs[ref];\\\\n    var _refVal, refCode;\\\\n    if (refIndex !== undefined) {\\\\n      _refVal = refVal[refIndex];\\\\n      refCode = 'refVal[' + refIndex + ']';\\\\n      return resolvedRef(_refVal, refCode);\\\\n    }\\\\n    if (!isRoot && root.refs) {\\\\n      var rootRefId = root.refs[ref];\\\\n      if (rootRefId !== undefined) {\\\\n        _refVal = root.refVal[rootRefId];\\\\n        refCode = addLocalRef(ref, _refVal);\\\\n        return resolvedRef(_refVal, refCode);\\\\n      }\\\\n    }\\\\n\\\\n    refCode = addLocalRef(ref);\\\\n    var v = resolve.call(self, localCompile, root, ref);\\\\n    if (v === undefined) {\\\\n      var localSchema = localRefs && localRefs[ref];\\\\n      if (localSchema) {\\\\n        v = resolve.inlineRef(localSchema, opts.inlineRefs)\\\\n            ? localSchema\\\\n            : compile.call(self, localSchema, root, localRefs, baseId);\\\\n      }\\\\n    }\\\\n\\\\n    if (v !== undefined) {\\\\n      replaceLocalRef(ref, v);\\\\n      return resolvedRef(v, refCode);\\\\n    }\\\\n  }\\\\n\\\\n  function addLocalRef(ref, v) {\\\\n    var refId = refVal.length;\\\\n    refVal[refId] = v;\\\\n    refs[ref] = refId;\\\\n    return 'refVal' + refId;\\\\n  }\\\\n\\\\n  function replaceLocalRef(ref, v) {\\\\n    var refId = refs[ref];\\\\n    refVal[refId] = v;\\\\n  }\\\\n\\\\n  function resolvedRef(refVal, code) {\\\\n    return typeof refVal == 'object' || typeof refVal == 'boolean'\\\\n            ? { code: code, schema: refVal, inline: true }\\\\n            : { code: code, $async: refVal && refVal.$async };\\\\n  }\\\\n\\\\n  function usePattern(regexStr) {\\\\n    var index = patternsHash[regexStr];\\\\n    if (index === undefined) {\\\\n      index = patternsHash[regexStr] = patterns.length;\\\\n      patterns[index] = regexStr;\\\\n    }\\\\n    return 'pattern' + index;\\\\n  }\\\\n\\\\n  function useDefault(value) {\\\\n    switch (typeof value) {\\\\n      case 'boolean':\\\\n      case 'number':\\\\n        return '' + value;\\\\n      case 'string':\\\\n        return util.toQuotedString(value);\\\\n      case 'object':\\\\n        if (value === null) return 'null';\\\\n        var valueStr = stableStringify(value);\\\\n        var index = defaultsHash[valueStr];\\\\n        if (index === undefined) {\\\\n          index = defaultsHash[valueStr] = defaults.length;\\\\n          defaults[index] = value;\\\\n        }\\\\n        return 'default' + index;\\\\n    }\\\\n  }\\\\n\\\\n  function useCustomRule(rule, schema, parentSchema, it) {\\\\n    var validateSchema = rule.definition.validateSchema;\\\\n    if (validateSchema && self._opts.validateSchema !== false) {\\\\n      var valid = validateSchema(schema);\\\\n      if (!valid) {\\\\n        var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);\\\\n        if (self._opts.validateSchema == 'log') console.error(message);\\\\n        else throw new Error(message);\\\\n      }\\\\n    }\\\\n\\\\n    var compile = rule.definition.compile\\\\n      , inline = rule.definition.inline\\\\n      , macro = rule.definition.macro;\\\\n\\\\n    var validate;\\\\n    if (compile) {\\\\n      validate = compile.call(self, schema, parentSchema, it);\\\\n    } else if (macro) {\\\\n      validate = macro.call(self, schema, parentSchema, it);\\\\n      if (opts.validateSchema !== false) self.validateSchema(validate, true);\\\\n    } else if (inline) {\\\\n      validate = inline.call(self, it, rule.keyword, schema, parentSchema);\\\\n    } else {\\\\n      validate = rule.definition.validate;\\\\n      if (!validate) return;\\\\n    }\\\\n\\\\n    if (validate === undefined)\\\\n      throw new Error('custom keyword \\\\\\\"' + rule.keyword + '\\\\\\\"failed to compile');\\\\n\\\\n    var index = customRules.length;\\\\n    customRules[index] = validate;\\\\n\\\\n    return {\\\\n      code: 'customRule' + index,\\\\n      validate: validate\\\\n    };\\\\n  }\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Checks if the schema is currently compiled\\\\n * @this   Ajv\\\\n * @param  {Object} schema schema to compile\\\\n * @param  {Object} root root object\\\\n * @param  {String} baseId base schema ID\\\\n * @return {Object} object with properties \\\\\\\"index\\\\\\\" (compilation index) and \\\\\\\"compiling\\\\\\\" (boolean)\\\\n */\\\\nfunction checkCompiling(schema, root, baseId) {\\\\n  /* jshint validthis: true */\\\\n  var index = compIndex.call(this, schema, root, baseId);\\\\n  if (index >= 0) return { index: index, compiling: true };\\\\n  index = this._compilations.length;\\\\n  this._compilations[index] = {\\\\n    schema: schema,\\\\n    root: root,\\\\n    baseId: baseId\\\\n  };\\\\n  return { index: index, compiling: false };\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Removes the schema from the currently compiled list\\\\n * @this   Ajv\\\\n * @param  {Object} schema schema to compile\\\\n * @param  {Object} root root object\\\\n * @param  {String} baseId base schema ID\\\\n */\\\\nfunction endCompiling(schema, root, baseId) {\\\\n  /* jshint validthis: true */\\\\n  var i = compIndex.call(this, schema, root, baseId);\\\\n  if (i >= 0) this._compilations.splice(i, 1);\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Index of schema compilation in the currently compiled list\\\\n * @this   Ajv\\\\n * @param  {Object} schema schema to compile\\\\n * @param  {Object} root root object\\\\n * @param  {String} baseId base schema ID\\\\n * @return {Integer} compilation index\\\\n */\\\\nfunction compIndex(schema, root, baseId) {\\\\n  /* jshint validthis: true */\\\\n  for (var i=0; i<this._compilations.length; i++) {\\\\n    var c = this._compilations[i];\\\\n    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;\\\\n  }\\\\n  return -1;\\\\n}\\\\n\\\\n\\\\nfunction patternCode(i, patterns) {\\\\n  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';\\\\n}\\\\n\\\\n\\\\nfunction defaultCode(i) {\\\\n  return 'var default' + i + ' = defaults[' + i + '];';\\\\n}\\\\n\\\\n\\\\nfunction refValCode(i, refVal) {\\\\n  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';\\\\n}\\\\n\\\\n\\\\nfunction customRuleCode(i) {\\\\n  return 'var customRule' + i + ' = customRules[' + i + '];';\\\\n}\\\\n\\\\n\\\\nfunction vars(arr, statement) {\\\\n  if (!arr.length) return '';\\\\n  var code = '';\\\\n  for (var i=0; i<arr.length; i++)\\\\n    code += statement(i, arr);\\\\n  return code;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/index.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/resolve.js\\\":\\n/*!*************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/resolve.js ***!\\n  \\\\*************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar url = __webpack_require__(/*! url */ \\\\\\\"./node_modules/url/url.js\\\\\\\")\\\\n  , equal = __webpack_require__(/*! ./equal */ \\\\\\\"./node_modules/ajv/lib/compile/equal.js\\\\\\\")\\\\n  , util = __webpack_require__(/*! ./util */ \\\\\\\"./node_modules/ajv/lib/compile/util.js\\\\\\\")\\\\n  , SchemaObject = __webpack_require__(/*! ./schema_obj */ \\\\\\\"./node_modules/ajv/lib/compile/schema_obj.js\\\\\\\")\\\\n  , traverse = __webpack_require__(/*! json-schema-traverse */ \\\\\\\"./node_modules/json-schema-traverse/index.js\\\\\\\");\\\\n\\\\nmodule.exports = resolve;\\\\n\\\\nresolve.normalizeId = normalizeId;\\\\nresolve.fullPath = getFullPath;\\\\nresolve.url = resolveUrl;\\\\nresolve.ids = resolveIds;\\\\nresolve.inlineRef = inlineRef;\\\\nresolve.schema = resolveSchema;\\\\n\\\\n/**\\\\n * [resolve and compile the references ($ref)]\\\\n * @this   Ajv\\\\n * @param  {Function} compile reference to schema compilation funciton (localCompile)\\\\n * @param  {Object} root object with information about the root schema for the current schema\\\\n * @param  {String} ref reference to resolve\\\\n * @return {Object|Function} schema object (if the schema can be inlined) or validation function\\\\n */\\\\nfunction resolve(compile, root, ref) {\\\\n  /* jshint validthis: true */\\\\n  var refVal = this._refs[ref];\\\\n  if (typeof refVal == 'string') {\\\\n    if (this._refs[refVal]) refVal = this._refs[refVal];\\\\n    else return resolve.call(this, compile, root, refVal);\\\\n  }\\\\n\\\\n  refVal = refVal || this._schemas[ref];\\\\n  if (refVal instanceof SchemaObject) {\\\\n    return inlineRef(refVal.schema, this._opts.inlineRefs)\\\\n            ? refVal.schema\\\\n            : refVal.validate || this._compile(refVal);\\\\n  }\\\\n\\\\n  var res = resolveSchema.call(this, root, ref);\\\\n  var schema, v, baseId;\\\\n  if (res) {\\\\n    schema = res.schema;\\\\n    root = res.root;\\\\n    baseId = res.baseId;\\\\n  }\\\\n\\\\n  if (schema instanceof SchemaObject) {\\\\n    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);\\\\n  } else if (schema !== undefined) {\\\\n    v = inlineRef(schema, this._opts.inlineRefs)\\\\n        ? schema\\\\n        : compile.call(this, schema, root, undefined, baseId);\\\\n  }\\\\n\\\\n  return v;\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Resolve schema, its root and baseId\\\\n * @this Ajv\\\\n * @param  {Object} root root object with properties schema, refVal, refs\\\\n * @param  {String} ref  reference to resolve\\\\n * @return {Object} object with properties schema, root, baseId\\\\n */\\\\nfunction resolveSchema(root, ref) {\\\\n  /* jshint validthis: true */\\\\n  var p = url.parse(ref, false, true)\\\\n    , refPath = _getFullPath(p)\\\\n    , baseId = getFullPath(this._getId(root.schema));\\\\n  if (refPath !== baseId) {\\\\n    var id = normalizeId(refPath);\\\\n    var refVal = this._refs[id];\\\\n    if (typeof refVal == 'string') {\\\\n      return resolveRecursive.call(this, root, refVal, p);\\\\n    } else if (refVal instanceof SchemaObject) {\\\\n      if (!refVal.validate) this._compile(refVal);\\\\n      root = refVal;\\\\n    } else {\\\\n      refVal = this._schemas[id];\\\\n      if (refVal instanceof SchemaObject) {\\\\n        if (!refVal.validate) this._compile(refVal);\\\\n        if (id == normalizeId(ref))\\\\n          return { schema: refVal, root: root, baseId: baseId };\\\\n        root = refVal;\\\\n      } else {\\\\n        return;\\\\n      }\\\\n    }\\\\n    if (!root.schema) return;\\\\n    baseId = getFullPath(this._getId(root.schema));\\\\n  }\\\\n  return getJsonPointer.call(this, p, baseId, root.schema, root);\\\\n}\\\\n\\\\n\\\\n/* @this Ajv */\\\\nfunction resolveRecursive(root, ref, parsedRef) {\\\\n  /* jshint validthis: true */\\\\n  var res = resolveSchema.call(this, root, ref);\\\\n  if (res) {\\\\n    var schema = res.schema;\\\\n    var baseId = res.baseId;\\\\n    root = res.root;\\\\n    var id = this._getId(schema);\\\\n    if (id) baseId = resolveUrl(baseId, id);\\\\n    return getJsonPointer.call(this, parsedRef, baseId, schema, root);\\\\n  }\\\\n}\\\\n\\\\n\\\\nvar PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);\\\\n/* @this Ajv */\\\\nfunction getJsonPointer(parsedRef, baseId, schema, root) {\\\\n  /* jshint validthis: true */\\\\n  parsedRef.hash = parsedRef.hash || '';\\\\n  if (parsedRef.hash.slice(0,2) != '#/') return;\\\\n  var parts = parsedRef.hash.split('/');\\\\n\\\\n  for (var i = 1; i < parts.length; i++) {\\\\n    var part = parts[i];\\\\n    if (part) {\\\\n      part = util.unescapeFragment(part);\\\\n      schema = schema[part];\\\\n      if (schema === undefined) break;\\\\n      var id;\\\\n      if (!PREVENT_SCOPE_CHANGE[part]) {\\\\n        id = this._getId(schema);\\\\n        if (id) baseId = resolveUrl(baseId, id);\\\\n        if (schema.$ref) {\\\\n          var $ref = resolveUrl(baseId, schema.$ref);\\\\n          var res = resolveSchema.call(this, root, $ref);\\\\n          if (res) {\\\\n            schema = res.schema;\\\\n            root = res.root;\\\\n            baseId = res.baseId;\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n  if (schema !== undefined && schema !== root.schema)\\\\n    return { schema: schema, root: root, baseId: baseId };\\\\n}\\\\n\\\\n\\\\nvar SIMPLE_INLINED = util.toHash([\\\\n  'type', 'format', 'pattern',\\\\n  'maxLength', 'minLength',\\\\n  'maxProperties', 'minProperties',\\\\n  'maxItems', 'minItems',\\\\n  'maximum', 'minimum',\\\\n  'uniqueItems', 'multipleOf',\\\\n  'required', 'enum'\\\\n]);\\\\nfunction inlineRef(schema, limit) {\\\\n  if (limit === false) return false;\\\\n  if (limit === undefined || limit === true) return checkNoRef(schema);\\\\n  else if (limit) return countKeys(schema) <= limit;\\\\n}\\\\n\\\\n\\\\nfunction checkNoRef(schema) {\\\\n  var item;\\\\n  if (Array.isArray(schema)) {\\\\n    for (var i=0; i<schema.length; i++) {\\\\n      item = schema[i];\\\\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\\\\n    }\\\\n  } else {\\\\n    for (var key in schema) {\\\\n      if (key == '$ref') return false;\\\\n      item = schema[key];\\\\n      if (typeof item == 'object' && !checkNoRef(item)) return false;\\\\n    }\\\\n  }\\\\n  return true;\\\\n}\\\\n\\\\n\\\\nfunction countKeys(schema) {\\\\n  var count = 0, item;\\\\n  if (Array.isArray(schema)) {\\\\n    for (var i=0; i<schema.length; i++) {\\\\n      item = schema[i];\\\\n      if (typeof item == 'object') count += countKeys(item);\\\\n      if (count == Infinity) return Infinity;\\\\n    }\\\\n  } else {\\\\n    for (var key in schema) {\\\\n      if (key == '$ref') return Infinity;\\\\n      if (SIMPLE_INLINED[key]) {\\\\n        count++;\\\\n      } else {\\\\n        item = schema[key];\\\\n        if (typeof item == 'object') count += countKeys(item) + 1;\\\\n        if (count == Infinity) return Infinity;\\\\n      }\\\\n    }\\\\n  }\\\\n  return count;\\\\n}\\\\n\\\\n\\\\nfunction getFullPath(id, normalize) {\\\\n  if (normalize !== false) id = normalizeId(id);\\\\n  var p = url.parse(id, false, true);\\\\n  return _getFullPath(p);\\\\n}\\\\n\\\\n\\\\nfunction _getFullPath(p) {\\\\n  var protocolSeparator = p.protocol || p.href.slice(0,2) == '//' ? '//' : '';\\\\n  return (p.protocol||'') + protocolSeparator + (p.host||'') + (p.path||'')  + '#';\\\\n}\\\\n\\\\n\\\\nvar TRAILING_SLASH_HASH = /#\\\\\\\\/?$/;\\\\nfunction normalizeId(id) {\\\\n  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';\\\\n}\\\\n\\\\n\\\\nfunction resolveUrl(baseId, id) {\\\\n  id = normalizeId(id);\\\\n  return url.resolve(baseId, id);\\\\n}\\\\n\\\\n\\\\n/* @this Ajv */\\\\nfunction resolveIds(schema) {\\\\n  var schemaId = normalizeId(this._getId(schema));\\\\n  var baseIds = {'': schemaId};\\\\n  var fullPaths = {'': getFullPath(schemaId, false)};\\\\n  var localRefs = {};\\\\n  var self = this;\\\\n\\\\n  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\\\\n    if (jsonPtr === '') return;\\\\n    var id = self._getId(sch);\\\\n    var baseId = baseIds[parentJsonPtr];\\\\n    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;\\\\n    if (keyIndex !== undefined)\\\\n      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));\\\\n\\\\n    if (typeof id == 'string') {\\\\n      id = baseId = normalizeId(baseId ? url.resolve(baseId, id) : id);\\\\n\\\\n      var refVal = self._refs[id];\\\\n      if (typeof refVal == 'string') refVal = self._refs[refVal];\\\\n      if (refVal && refVal.schema) {\\\\n        if (!equal(sch, refVal.schema))\\\\n          throw new Error('id \\\\\\\"' + id + '\\\\\\\" resolves to more than one schema');\\\\n      } else if (id != normalizeId(fullPath)) {\\\\n        if (id[0] == '#') {\\\\n          if (localRefs[id] && !equal(sch, localRefs[id]))\\\\n            throw new Error('id \\\\\\\"' + id + '\\\\\\\" resolves to more than one schema');\\\\n          localRefs[id] = sch;\\\\n        } else {\\\\n          self._refs[id] = fullPath;\\\\n        }\\\\n      }\\\\n    }\\\\n    baseIds[jsonPtr] = baseId;\\\\n    fullPaths[jsonPtr] = fullPath;\\\\n  });\\\\n\\\\n  return localRefs;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3Jlc29sdmUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvcmVzb2x2ZS5qcz9hOTcxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHVybCA9IHJlcXVpcmUoJ3VybCcpXG4gICwgZXF1YWwgPSByZXF1aXJlKCcuL2VxdWFsJylcbiAgLCB1dGlsID0gcmVxdWlyZSgnLi91dGlsJylcbiAgLCBTY2hlbWFPYmplY3QgPSByZXF1aXJlKCcuL3NjaGVtYV9vYmonKVxuICAsIHRyYXZlcnNlID0gcmVxdWlyZSgnanNvbi1zY2hlbWEtdHJhdmVyc2UnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXNvbHZlO1xuXG5yZXNvbHZlLm5vcm1hbGl6ZUlkID0gbm9ybWFsaXplSWQ7XG5yZXNvbHZlLmZ1bGxQYXRoID0gZ2V0RnVsbFBhdGg7XG5yZXNvbHZlLnVybCA9IHJlc29sdmVVcmw7XG5yZXNvbHZlLmlkcyA9IHJlc29sdmVJZHM7XG5yZXNvbHZlLmlubGluZVJlZiA9IGlubGluZVJlZjtcbnJlc29sdmUuc2NoZW1hID0gcmVzb2x2ZVNjaGVtYTtcblxuLyoqXG4gKiBbcmVzb2x2ZSBhbmQgY29tcGlsZSB0aGUgcmVmZXJlbmNlcyAoJHJlZildXG4gKiBAdGhpcyAgIEFqdlxuICogQHBhcmFtICB7RnVuY3Rpb259IGNvbXBpbGUgcmVmZXJlbmNlIHRvIHNjaGVtYSBjb21waWxhdGlvbiBmdW5jaXRvbiAobG9jYWxDb21waWxlKVxuICogQHBhcmFtICB7T2JqZWN0fSByb290IG9iamVjdCB3aXRoIGluZm9ybWF0aW9uIGFib3V0IHRoZSByb290IHNjaGVtYSBmb3IgdGhlIGN1cnJlbnQgc2NoZW1hXG4gKiBAcGFyYW0gIHtTdHJpbmd9IHJlZiByZWZlcmVuY2UgdG8gcmVzb2x2ZVxuICogQHJldHVybiB7T2JqZWN0fEZ1bmN0aW9ufSBzY2hlbWEgb2JqZWN0IChpZiB0aGUgc2NoZW1hIGNhbiBiZSBpbmxpbmVkKSBvciB2YWxpZGF0aW9uIGZ1bmN0aW9uXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmUoY29tcGlsZSwgcm9vdCwgcmVmKSB7XG4gIC8qIGpzaGludCB2YWxpZHRoaXM6IHRydWUgKi9cbiAgdmFyIHJlZlZhbCA9IHRoaXMuX3JlZnNbcmVmXTtcbiAgaWYgKHR5cGVvZiByZWZWYWwgPT0gJ3N0cmluZycpIHtcbiAgICBpZiAodGhpcy5fcmVmc1tyZWZWYWxdKSByZWZWYWwgPSB0aGlzLl9yZWZzW3JlZlZhbF07XG4gICAgZWxzZSByZXR1cm4gcmVzb2x2ZS5jYWxsKHRoaXMsIGNvbXBpbGUsIHJvb3QsIHJlZlZhbCk7XG4gIH1cblxuICByZWZWYWwgPSByZWZWYWwgfHwgdGhpcy5fc2NoZW1hc1tyZWZdO1xuICBpZiAocmVmVmFsIGluc3RhbmNlb2YgU2NoZW1hT2JqZWN0KSB7XG4gICAgcmV0dXJuIGlubGluZVJlZihyZWZWYWwuc2NoZW1hLCB0aGlzLl9vcHRzLmlubGluZVJlZnMpXG4gICAgICAgICAgICA/IHJlZlZhbC5zY2hlbWFcbiAgICAgICAgICAgIDogcmVmVmFsLnZhbGlkYXRlIHx8IHRoaXMuX2NvbXBpbGUocmVmVmFsKTtcbiAgfVxuXG4gIHZhciByZXMgPSByZXNvbHZlU2NoZW1hLmNhbGwodGhpcywgcm9vdCwgcmVmKTtcbiAgdmFyIHNjaGVtYSwgdiwgYmFzZUlkO1xuICBpZiAocmVzKSB7XG4gICAgc2NoZW1hID0gcmVzLnNjaGVtYTtcbiAgICByb290ID0gcmVzLnJvb3Q7XG4gICAgYmFzZUlkID0gcmVzLmJhc2VJZDtcbiAgfVxuXG4gIGlmIChzY2hlbWEgaW5zdGFuY2VvZiBTY2hlbWFPYmplY3QpIHtcbiAgICB2ID0gc2NoZW1hLnZhbGlkYXRlIHx8IGNvbXBpbGUuY2FsbCh0aGlzLCBzY2hlbWEuc2NoZW1hLCByb290LCB1bmRlZmluZWQsIGJhc2VJZCk7XG4gIH0gZWxzZSBpZiAoc2NoZW1hICE9PSB1bmRlZmluZWQpIHtcbiAgICB2ID0gaW5saW5lUmVmKHNjaGVtYSwgdGhpcy5fb3B0cy5pbmxpbmVSZWZzKVxuICAgICAgICA/IHNjaGVtYVxuICAgICAgICA6IGNvbXBpbGUuY2FsbCh0aGlzLCBzY2hlbWEsIHJvb3QsIHVuZGVmaW5lZCwgYmFzZUlkKTtcbiAgfVxuXG4gIHJldHVybiB2O1xufVxuXG5cbi8qKlxuICogUmVzb2x2ZSBzY2hlbWEsIGl0cyByb290IGFuZCBiYXNlSWRcbiAqIEB0aGlzIEFqdlxuICogQHBhcmFtICB7T2JqZWN0fSByb290IHJvb3Qgb2JqZWN0IHdpdGggcHJvcGVydGllcyBzY2hlbWEsIHJlZlZhbCwgcmVmc1xuICogQHBhcmFtICB7U3RyaW5nfSByZWYgIHJlZmVyZW5jZSB0byByZXNvbHZlXG4gKiBAcmV0dXJuIHtPYmplY3R9IG9iamVjdCB3aXRoIHByb3BlcnRpZXMgc2NoZW1hLCByb290LCBiYXNlSWRcbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZVNjaGVtYShyb290LCByZWYpIHtcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuICB2YXIgcCA9IHVybC5wYXJzZShyZWYsIGZhbHNlLCB0cnVlKVxuICAgICwgcmVmUGF0aCA9IF9nZXRGdWxsUGF0aChwKVxuICAgICwgYmFzZUlkID0gZ2V0RnVsbFBhdGgodGhpcy5fZ2V0SWQocm9vdC5zY2hlbWEpKTtcbiAgaWYgKHJlZlBhdGggIT09IGJhc2VJZCkge1xuICAgIHZhciBpZCA9IG5vcm1hbGl6ZUlkKHJlZlBhdGgpO1xuICAgIHZhciByZWZWYWwgPSB0aGlzLl9yZWZzW2lkXTtcbiAgICBpZiAodHlwZW9mIHJlZlZhbCA9PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIHJlc29sdmVSZWN1cnNpdmUuY2FsbCh0aGlzLCByb290LCByZWZWYWwsIHApO1xuICAgIH0gZWxzZSBpZiAocmVmVmFsIGluc3RhbmNlb2YgU2NoZW1hT2JqZWN0KSB7XG4gICAgICBpZiAoIXJlZlZhbC52YWxpZGF0ZSkgdGhpcy5fY29tcGlsZShyZWZWYWwpO1xuICAgICAgcm9vdCA9IHJlZlZhbDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVmVmFsID0gdGhpcy5fc2NoZW1hc1tpZF07XG4gICAgICBpZiAocmVmVmFsIGluc3RhbmNlb2YgU2NoZW1hT2JqZWN0KSB7XG4gICAgICAgIGlmICghcmVmVmFsLnZhbGlkYXRlKSB0aGlzLl9jb21waWxlKHJlZlZhbCk7XG4gICAgICAgIGlmIChpZCA9PSBub3JtYWxpemVJZChyZWYpKVxuICAgICAgICAgIHJldHVybiB7IHNjaGVtYTogcmVmVmFsLCByb290OiByb290LCBiYXNlSWQ6IGJhc2VJZCB9O1xuICAgICAgICByb290ID0gcmVmVmFsO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIXJvb3Quc2NoZW1hKSByZXR1cm47XG4gICAgYmFzZUlkID0gZ2V0RnVsbFBhdGgodGhpcy5fZ2V0SWQocm9vdC5zY2hlbWEpKTtcbiAgfVxuICByZXR1cm4gZ2V0SnNvblBvaW50ZXIuY2FsbCh0aGlzLCBwLCBiYXNlSWQsIHJvb3Quc2NoZW1hLCByb290KTtcbn1cblxuXG4vKiBAdGhpcyBBanYgKi9cbmZ1bmN0aW9uIHJlc29sdmVSZWN1cnNpdmUocm9vdCwgcmVmLCBwYXJzZWRSZWYpIHtcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuICB2YXIgcmVzID0gcmVzb2x2ZVNjaGVtYS5jYWxsKHRoaXMsIHJvb3QsIHJlZik7XG4gIGlmIChyZXMpIHtcbiAgICB2YXIgc2NoZW1hID0gcmVzLnNjaGVtYTtcbiAgICB2YXIgYmFzZUlkID0gcmVzLmJhc2VJZDtcbiAgICByb290ID0gcmVzLnJvb3Q7XG4gICAgdmFyIGlkID0gdGhpcy5fZ2V0SWQoc2NoZW1hKTtcbiAgICBpZiAoaWQpIGJhc2VJZCA9IHJlc29sdmVVcmwoYmFzZUlkLCBpZCk7XG4gICAgcmV0dXJuIGdldEpzb25Qb2ludGVyLmNhbGwodGhpcywgcGFyc2VkUmVmLCBiYXNlSWQsIHNjaGVtYSwgcm9vdCk7XG4gIH1cbn1cblxuXG52YXIgUFJFVkVOVF9TQ09QRV9DSEFOR0UgPSB1dGlsLnRvSGFzaChbJ3Byb3BlcnRpZXMnLCAncGF0dGVyblByb3BlcnRpZXMnLCAnZW51bScsICdkZXBlbmRlbmNpZXMnLCAnZGVmaW5pdGlvbnMnXSk7XG4vKiBAdGhpcyBBanYgKi9cbmZ1bmN0aW9uIGdldEpzb25Qb2ludGVyKHBhcnNlZFJlZiwgYmFzZUlkLCBzY2hlbWEsIHJvb3QpIHtcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuICBwYXJzZWRSZWYuaGFzaCA9IHBhcnNlZFJlZi5oYXNoIHx8ICcnO1xuICBpZiAocGFyc2VkUmVmLmhhc2guc2xpY2UoMCwyKSAhPSAnIy8nKSByZXR1cm47XG4gIHZhciBwYXJ0cyA9IHBhcnNlZFJlZi5oYXNoLnNwbGl0KCcvJyk7XG5cbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBwYXJ0ID0gcGFydHNbaV07XG4gICAgaWYgKHBhcnQpIHtcbiAgICAgIHBhcnQgPSB1dGlsLnVuZXNjYXBlRnJhZ21lbnQocGFydCk7XG4gICAgICBzY2hlbWEgPSBzY2hlbWFbcGFydF07XG4gICAgICBpZiAoc2NoZW1hID09PSB1bmRlZmluZWQpIGJyZWFrO1xuICAgICAgdmFyIGlkO1xuICAgICAgaWYgKCFQUkVWRU5UX1NDT1BFX0NIQU5HRVtwYXJ0XSkge1xuICAgICAgICBpZCA9IHRoaXMuX2dldElkKHNjaGVtYSk7XG4gICAgICAgIGlmIChpZCkgYmFzZUlkID0gcmVzb2x2ZVVybChiYXNlSWQsIGlkKTtcbiAgICAgICAgaWYgKHNjaGVtYS4kcmVmKSB7XG4gICAgICAgICAgdmFyICRyZWYgPSByZXNvbHZlVXJsKGJhc2VJZCwgc2NoZW1hLiRyZWYpO1xuICAgICAgICAgIHZhciByZXMgPSByZXNvbHZlU2NoZW1hLmNhbGwodGhpcywgcm9vdCwgJHJlZik7XG4gICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgc2NoZW1hID0gcmVzLnNjaGVtYTtcbiAgICAgICAgICAgIHJvb3QgPSByZXMucm9vdDtcbiAgICAgICAgICAgIGJhc2VJZCA9IHJlcy5iYXNlSWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmIChzY2hlbWEgIT09IHVuZGVmaW5lZCAmJiBzY2hlbWEgIT09IHJvb3Quc2NoZW1hKVxuICAgIHJldHVybiB7IHNjaGVtYTogc2NoZW1hLCByb290OiByb290LCBiYXNlSWQ6IGJhc2VJZCB9O1xufVxuXG5cbnZhciBTSU1QTEVfSU5MSU5FRCA9IHV0aWwudG9IYXNoKFtcbiAgJ3R5cGUnLCAnZm9ybWF0JywgJ3BhdHRlcm4nLFxuICAnbWF4TGVuZ3RoJywgJ21pbkxlbmd0aCcsXG4gICdtYXhQcm9wZXJ0aWVzJywgJ21pblByb3BlcnRpZXMnLFxuICAnbWF4SXRlbXMnLCAnbWluSXRlbXMnLFxuICAnbWF4aW11bScsICdtaW5pbXVtJyxcbiAgJ3VuaXF1ZUl0ZW1zJywgJ211bHRpcGxlT2YnLFxuICAncmVxdWlyZWQnLCAnZW51bSdcbl0pO1xuZnVuY3Rpb24gaW5saW5lUmVmKHNjaGVtYSwgbGltaXQpIHtcbiAgaWYgKGxpbWl0ID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xuICBpZiAobGltaXQgPT09IHVuZGVmaW5lZCB8fCBsaW1pdCA9PT0gdHJ1ZSkgcmV0dXJuIGNoZWNrTm9SZWYoc2NoZW1hKTtcbiAgZWxzZSBpZiAobGltaXQpIHJldHVybiBjb3VudEtleXMoc2NoZW1hKSA8PSBsaW1pdDtcbn1cblxuXG5mdW5jdGlvbiBjaGVja05vUmVmKHNjaGVtYSkge1xuICB2YXIgaXRlbTtcbiAgaWYgKEFycmF5LmlzQXJyYXkoc2NoZW1hKSkge1xuICAgIGZvciAodmFyIGk9MDsgaTxzY2hlbWEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGl0ZW0gPSBzY2hlbWFbaV07XG4gICAgICBpZiAodHlwZW9mIGl0ZW0gPT0gJ29iamVjdCcgJiYgIWNoZWNrTm9SZWYoaXRlbSkpIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZm9yICh2YXIga2V5IGluIHNjaGVtYSkge1xuICAgICAgaWYgKGtleSA9PSAnJHJlZicpIHJldHVybiBmYWxzZTtcbiAgICAgIGl0ZW0gPSBzY2hlbWFba2V5XTtcbiAgICAgIGlmICh0eXBlb2YgaXRlbSA9PSAnb2JqZWN0JyAmJiAhY2hlY2tOb1JlZihpdGVtKSkgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuXG5mdW5jdGlvbiBjb3VudEtleXMoc2NoZW1hKSB7XG4gIHZhciBjb3VudCA9IDAsIGl0ZW07XG4gIGlmIChBcnJheS5pc0FycmF5KHNjaGVtYSkpIHtcbiAgICBmb3IgKHZhciBpPTA7IGk8c2NoZW1hLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpdGVtID0gc2NoZW1hW2ldO1xuICAgICAgaWYgKHR5cGVvZiBpdGVtID09ICdvYmplY3QnKSBjb3VudCArPSBjb3VudEtleXMoaXRlbSk7XG4gICAgICBpZiAoY291bnQgPT0gSW5maW5pdHkpIHJldHVybiBJbmZpbml0eTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZm9yICh2YXIga2V5IGluIHNjaGVtYSkge1xuICAgICAgaWYgKGtleSA9PSAnJHJlZicpIHJldHVybiBJbmZpbml0eTtcbiAgICAgIGlmIChTSU1QTEVfSU5MSU5FRFtrZXldKSB7XG4gICAgICAgIGNvdW50Kys7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpdGVtID0gc2NoZW1hW2tleV07XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbSA9PSAnb2JqZWN0JykgY291bnQgKz0gY291bnRLZXlzKGl0ZW0pICsgMTtcbiAgICAgICAgaWYgKGNvdW50ID09IEluZmluaXR5KSByZXR1cm4gSW5maW5pdHk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBjb3VudDtcbn1cblxuXG5mdW5jdGlvbiBnZXRGdWxsUGF0aChpZCwgbm9ybWFsaXplKSB7XG4gIGlmIChub3JtYWxpemUgIT09IGZhbHNlKSBpZCA9IG5vcm1hbGl6ZUlkKGlkKTtcbiAgdmFyIHAgPSB1cmwucGFyc2UoaWQsIGZhbHNlLCB0cnVlKTtcbiAgcmV0dXJuIF9nZXRGdWxsUGF0aChwKTtcbn1cblxuXG5mdW5jdGlvbiBfZ2V0RnVsbFBhdGgocCkge1xuICB2YXIgcHJvdG9jb2xTZXBhcmF0b3IgPSBwLnByb3RvY29sIHx8IHAuaHJlZi5zbGljZSgwLDIpID09ICcvLycgPyAnLy8nIDogJyc7XG4gIHJldHVybiAocC5wcm90b2NvbHx8JycpICsgcHJvdG9jb2xTZXBhcmF0b3IgKyAocC5ob3N0fHwnJykgKyAocC5wYXRofHwnJykgICsgJyMnO1xufVxuXG5cbnZhciBUUkFJTElOR19TTEFTSF9IQVNIID0gLyNcXC8/JC87XG5mdW5jdGlvbiBub3JtYWxpemVJZChpZCkge1xuICByZXR1cm4gaWQgPyBpZC5yZXBsYWNlKFRSQUlMSU5HX1NMQVNIX0hBU0gsICcnKSA6ICcnO1xufVxuXG5cbmZ1bmN0aW9uIHJlc29sdmVVcmwoYmFzZUlkLCBpZCkge1xuICBpZCA9IG5vcm1hbGl6ZUlkKGlkKTtcbiAgcmV0dXJuIHVybC5yZXNvbHZlKGJhc2VJZCwgaWQpO1xufVxuXG5cbi8qIEB0aGlzIEFqdiAqL1xuZnVuY3Rpb24gcmVzb2x2ZUlkcyhzY2hlbWEpIHtcbiAgdmFyIHNjaGVtYUlkID0gbm9ybWFsaXplSWQodGhpcy5fZ2V0SWQoc2NoZW1hKSk7XG4gIHZhciBiYXNlSWRzID0geycnOiBzY2hlbWFJZH07XG4gIHZhciBmdWxsUGF0aHMgPSB7Jyc6IGdldEZ1bGxQYXRoKHNjaGVtYUlkLCBmYWxzZSl9O1xuICB2YXIgbG9jYWxSZWZzID0ge307XG4gIHZhciBzZWxmID0gdGhpcztcblxuICB0cmF2ZXJzZShzY2hlbWEsIHthbGxLZXlzOiB0cnVlfSwgZnVuY3Rpb24oc2NoLCBqc29uUHRyLCByb290U2NoZW1hLCBwYXJlbnRKc29uUHRyLCBwYXJlbnRLZXl3b3JkLCBwYXJlbnRTY2hlbWEsIGtleUluZGV4KSB7XG4gICAgaWYgKGpzb25QdHIgPT09ICcnKSByZXR1cm47XG4gICAgdmFyIGlkID0gc2VsZi5fZ2V0SWQoc2NoKTtcbiAgICB2YXIgYmFzZUlkID0gYmFzZUlkc1twYXJlbnRKc29uUHRyXTtcbiAgICB2YXIgZnVsbFBhdGggPSBmdWxsUGF0aHNbcGFyZW50SnNvblB0cl0gKyAnLycgKyBwYXJlbnRLZXl3b3JkO1xuICAgIGlmIChrZXlJbmRleCAhPT0gdW5kZWZpbmVkKVxuICAgICAgZnVsbFBhdGggKz0gJy8nICsgKHR5cGVvZiBrZXlJbmRleCA9PSAnbnVtYmVyJyA/IGtleUluZGV4IDogdXRpbC5lc2NhcGVGcmFnbWVudChrZXlJbmRleCkpO1xuXG4gICAgaWYgKHR5cGVvZiBpZCA9PSAnc3RyaW5nJykge1xuICAgICAgaWQgPSBiYXNlSWQgPSBub3JtYWxpemVJZChiYXNlSWQgPyB1cmwucmVzb2x2ZShiYXNlSWQsIGlkKSA6IGlkKTtcblxuICAgICAgdmFyIHJlZlZhbCA9IHNlbGYuX3JlZnNbaWRdO1xuICAgICAgaWYgKHR5cGVvZiByZWZWYWwgPT0gJ3N0cmluZycpIHJlZlZhbCA9IHNlbGYuX3JlZnNbcmVmVmFsXTtcbiAgICAgIGlmIChyZWZWYWwgJiYgcmVmVmFsLnNjaGVtYSkge1xuICAgICAgICBpZiAoIWVxdWFsKHNjaCwgcmVmVmFsLnNjaGVtYSkpXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpZCBcIicgKyBpZCArICdcIiByZXNvbHZlcyB0byBtb3JlIHRoYW4gb25lIHNjaGVtYScpO1xuICAgICAgfSBlbHNlIGlmIChpZCAhPSBub3JtYWxpemVJZChmdWxsUGF0aCkpIHtcbiAgICAgICAgaWYgKGlkWzBdID09ICcjJykge1xuICAgICAgICAgIGlmIChsb2NhbFJlZnNbaWRdICYmICFlcXVhbChzY2gsIGxvY2FsUmVmc1tpZF0pKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpZCBcIicgKyBpZCArICdcIiByZXNvbHZlcyB0byBtb3JlIHRoYW4gb25lIHNjaGVtYScpO1xuICAgICAgICAgIGxvY2FsUmVmc1tpZF0gPSBzY2g7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2VsZi5fcmVmc1tpZF0gPSBmdWxsUGF0aDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBiYXNlSWRzW2pzb25QdHJdID0gYmFzZUlkO1xuICAgIGZ1bGxQYXRoc1tqc29uUHRyXSA9IGZ1bGxQYXRoO1xuICB9KTtcblxuICByZXR1cm4gbG9jYWxSZWZzO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/resolve.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/rules.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/rules.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar ruleModules = __webpack_require__(/*! ./_rules */ \\\\\\\"./node_modules/ajv/lib/compile/_rules.js\\\\\\\")\\\\n  , toHash = __webpack_require__(/*! ./util */ \\\\\\\"./node_modules/ajv/lib/compile/util.js\\\\\\\").toHash;\\\\n\\\\nmodule.exports = function rules() {\\\\n  var RULES = [\\\\n    { type: 'number',\\\\n      rules: [ { 'maximum': ['exclusiveMaximum'] },\\\\n               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },\\\\n    { type: 'string',\\\\n      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },\\\\n    { type: 'array',\\\\n      rules: [ 'maxItems', 'minItems', 'uniqueItems', 'contains', 'items' ] },\\\\n    { type: 'object',\\\\n      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',\\\\n               { 'properties': ['additionalProperties', 'patternProperties'] } ] },\\\\n    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf' ] }\\\\n  ];\\\\n\\\\n  var ALL = [ 'type' ];\\\\n  var KEYWORDS = [\\\\n    'additionalItems', '$schema', 'id', 'title',\\\\n    'description', 'default', 'definitions'\\\\n  ];\\\\n  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];\\\\n  RULES.all = toHash(ALL);\\\\n  RULES.types = toHash(TYPES);\\\\n\\\\n  RULES.forEach(function (group) {\\\\n    group.rules = group.rules.map(function (keyword) {\\\\n      var implKeywords;\\\\n      if (typeof keyword == 'object') {\\\\n        var key = Object.keys(keyword)[0];\\\\n        implKeywords = keyword[key];\\\\n        keyword = key;\\\\n        implKeywords.forEach(function (k) {\\\\n          ALL.push(k);\\\\n          RULES.all[k] = true;\\\\n        });\\\\n      }\\\\n      ALL.push(keyword);\\\\n      var rule = RULES.all[keyword] = {\\\\n        keyword: keyword,\\\\n        code: ruleModules[keyword],\\\\n        implements: implKeywords\\\\n      };\\\\n      return rule;\\\\n    });\\\\n\\\\n    if (group.type) RULES.types[group.type] = group;\\\\n  });\\\\n\\\\n  RULES.keywords = toHash(ALL.concat(KEYWORDS));\\\\n  RULES.custom = {};\\\\n\\\\n  return RULES;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3J1bGVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3J1bGVzLmpzP2MxN2MiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcnVsZU1vZHVsZXMgPSByZXF1aXJlKCcuL19ydWxlcycpXG4gICwgdG9IYXNoID0gcmVxdWlyZSgnLi91dGlsJykudG9IYXNoO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJ1bGVzKCkge1xuICB2YXIgUlVMRVMgPSBbXG4gICAgeyB0eXBlOiAnbnVtYmVyJyxcbiAgICAgIHJ1bGVzOiBbIHsgJ21heGltdW0nOiBbJ2V4Y2x1c2l2ZU1heGltdW0nXSB9LFxuICAgICAgICAgICAgICAgeyAnbWluaW11bSc6IFsnZXhjbHVzaXZlTWluaW11bSddIH0sICdtdWx0aXBsZU9mJywgJ2Zvcm1hdCddIH0sXG4gICAgeyB0eXBlOiAnc3RyaW5nJyxcbiAgICAgIHJ1bGVzOiBbICdtYXhMZW5ndGgnLCAnbWluTGVuZ3RoJywgJ3BhdHRlcm4nLCAnZm9ybWF0JyBdIH0sXG4gICAgeyB0eXBlOiAnYXJyYXknLFxuICAgICAgcnVsZXM6IFsgJ21heEl0ZW1zJywgJ21pbkl0ZW1zJywgJ3VuaXF1ZUl0ZW1zJywgJ2NvbnRhaW5zJywgJ2l0ZW1zJyBdIH0sXG4gICAgeyB0eXBlOiAnb2JqZWN0JyxcbiAgICAgIHJ1bGVzOiBbICdtYXhQcm9wZXJ0aWVzJywgJ21pblByb3BlcnRpZXMnLCAncmVxdWlyZWQnLCAnZGVwZW5kZW5jaWVzJywgJ3Byb3BlcnR5TmFtZXMnLFxuICAgICAgICAgICAgICAgeyAncHJvcGVydGllcyc6IFsnYWRkaXRpb25hbFByb3BlcnRpZXMnLCAncGF0dGVyblByb3BlcnRpZXMnXSB9IF0gfSxcbiAgICB7IHJ1bGVzOiBbICckcmVmJywgJ2NvbnN0JywgJ2VudW0nLCAnbm90JywgJ2FueU9mJywgJ29uZU9mJywgJ2FsbE9mJyBdIH1cbiAgXTtcblxuICB2YXIgQUxMID0gWyAndHlwZScgXTtcbiAgdmFyIEtFWVdPUkRTID0gW1xuICAgICdhZGRpdGlvbmFsSXRlbXMnLCAnJHNjaGVtYScsICdpZCcsICd0aXRsZScsXG4gICAgJ2Rlc2NyaXB0aW9uJywgJ2RlZmF1bHQnLCAnZGVmaW5pdGlvbnMnXG4gIF07XG4gIHZhciBUWVBFUyA9IFsgJ251bWJlcicsICdpbnRlZ2VyJywgJ3N0cmluZycsICdhcnJheScsICdvYmplY3QnLCAnYm9vbGVhbicsICdudWxsJyBdO1xuICBSVUxFUy5hbGwgPSB0b0hhc2goQUxMKTtcbiAgUlVMRVMudHlwZXMgPSB0b0hhc2goVFlQRVMpO1xuXG4gIFJVTEVTLmZvckVhY2goZnVuY3Rpb24gKGdyb3VwKSB7XG4gICAgZ3JvdXAucnVsZXMgPSBncm91cC5ydWxlcy5tYXAoZnVuY3Rpb24gKGtleXdvcmQpIHtcbiAgICAgIHZhciBpbXBsS2V5d29yZHM7XG4gICAgICBpZiAodHlwZW9mIGtleXdvcmQgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdmFyIGtleSA9IE9iamVjdC5rZXlzKGtleXdvcmQpWzBdO1xuICAgICAgICBpbXBsS2V5d29yZHMgPSBrZXl3b3JkW2tleV07XG4gICAgICAgIGtleXdvcmQgPSBrZXk7XG4gICAgICAgIGltcGxLZXl3b3Jkcy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgQUxMLnB1c2goayk7XG4gICAgICAgICAgUlVMRVMuYWxsW2tdID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBBTEwucHVzaChrZXl3b3JkKTtcbiAgICAgIHZhciBydWxlID0gUlVMRVMuYWxsW2tleXdvcmRdID0ge1xuICAgICAgICBrZXl3b3JkOiBrZXl3b3JkLFxuICAgICAgICBjb2RlOiBydWxlTW9kdWxlc1trZXl3b3JkXSxcbiAgICAgICAgaW1wbGVtZW50czogaW1wbEtleXdvcmRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHJ1bGU7XG4gICAgfSk7XG5cbiAgICBpZiAoZ3JvdXAudHlwZSkgUlVMRVMudHlwZXNbZ3JvdXAudHlwZV0gPSBncm91cDtcbiAgfSk7XG5cbiAgUlVMRVMua2V5d29yZHMgPSB0b0hhc2goQUxMLmNvbmNhdChLRVlXT1JEUykpO1xuICBSVUxFUy5jdXN0b20gPSB7fTtcblxuICByZXR1cm4gUlVMRVM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/rules.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/schema_obj.js\\\":\\n/*!****************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/schema_obj.js ***!\\n  \\\\****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar util = __webpack_require__(/*! ./util */ \\\\\\\"./node_modules/ajv/lib/compile/util.js\\\\\\\");\\\\n\\\\nmodule.exports = SchemaObject;\\\\n\\\\nfunction SchemaObject(obj) {\\\\n  util.copy(obj, this);\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3NjaGVtYV9vYmouanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvc2NoZW1hX29iai5qcz9iYTAwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWwgPSByZXF1aXJlKCcuL3V0aWwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBTY2hlbWFPYmplY3Q7XG5cbmZ1bmN0aW9uIFNjaGVtYU9iamVjdChvYmopIHtcbiAgdXRpbC5jb3B5KG9iaiwgdGhpcyk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/schema_obj.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/ucs2length.js\\\":\\n/*!****************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/ucs2length.js ***!\\n  \\\\****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\n// https://mathiasbynens.be/notes/javascript-encoding\\\\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\\\\nmodule.exports = function ucs2length(str) {\\\\n  var length = 0\\\\n    , len = str.length\\\\n    , pos = 0\\\\n    , value;\\\\n  while (pos < len) {\\\\n    length++;\\\\n    value = str.charCodeAt(pos++);\\\\n    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {\\\\n      // high surrogate, and there is a next character\\\\n      value = str.charCodeAt(pos);\\\\n      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate\\\\n    }\\\\n  }\\\\n  return length;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3VjczJsZW5ndGguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvdWNzMmxlbmd0aC5qcz83NzVlIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmdcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iZXN0aWVqcy9wdW55Y29kZS5qcyAtIHB1bnljb2RlLnVjczIuZGVjb2RlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHVjczJsZW5ndGgoc3RyKSB7XG4gIHZhciBsZW5ndGggPSAwXG4gICAgLCBsZW4gPSBzdHIubGVuZ3RoXG4gICAgLCBwb3MgPSAwXG4gICAgLCB2YWx1ZTtcbiAgd2hpbGUgKHBvcyA8IGxlbikge1xuICAgIGxlbmd0aCsrO1xuICAgIHZhbHVlID0gc3RyLmNoYXJDb2RlQXQocG9zKyspO1xuICAgIGlmICh2YWx1ZSA+PSAweEQ4MDAgJiYgdmFsdWUgPD0gMHhEQkZGICYmIHBvcyA8IGxlbikge1xuICAgICAgLy8gaGlnaCBzdXJyb2dhdGUsIGFuZCB0aGVyZSBpcyBhIG5leHQgY2hhcmFjdGVyXG4gICAgICB2YWx1ZSA9IHN0ci5jaGFyQ29kZUF0KHBvcyk7XG4gICAgICBpZiAoKHZhbHVlICYgMHhGQzAwKSA9PSAweERDMDApIHBvcysrOyAvLyBsb3cgc3Vycm9nYXRlXG4gICAgfVxuICB9XG4gIHJldHVybiBsZW5ndGg7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/ucs2length.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/compile/util.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/compile/util.js ***!\\n  \\\\**********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\n\\\\nmodule.exports = {\\\\n  copy: copy,\\\\n  checkDataType: checkDataType,\\\\n  checkDataTypes: checkDataTypes,\\\\n  coerceToTypes: coerceToTypes,\\\\n  toHash: toHash,\\\\n  getProperty: getProperty,\\\\n  escapeQuotes: escapeQuotes,\\\\n  equal: __webpack_require__(/*! ./equal */ \\\\\\\"./node_modules/ajv/lib/compile/equal.js\\\\\\\"),\\\\n  ucs2length: __webpack_require__(/*! ./ucs2length */ \\\\\\\"./node_modules/ajv/lib/compile/ucs2length.js\\\\\\\"),\\\\n  varOccurences: varOccurences,\\\\n  varReplace: varReplace,\\\\n  cleanUpCode: cleanUpCode,\\\\n  finalCleanUpCode: finalCleanUpCode,\\\\n  schemaHasRules: schemaHasRules,\\\\n  schemaHasRulesExcept: schemaHasRulesExcept,\\\\n  toQuotedString: toQuotedString,\\\\n  getPathExpr: getPathExpr,\\\\n  getPath: getPath,\\\\n  getData: getData,\\\\n  unescapeFragment: unescapeFragment,\\\\n  escapeFragment: escapeFragment,\\\\n  escapeJsonPointer: escapeJsonPointer\\\\n};\\\\n\\\\n\\\\nfunction copy(o, to) {\\\\n  to = to || {};\\\\n  for (var key in o) to[key] = o[key];\\\\n  return to;\\\\n}\\\\n\\\\n\\\\nfunction checkDataType(dataType, data, negate) {\\\\n  var EQUAL = negate ? ' !== ' : ' === '\\\\n    , AND = negate ? ' || ' : ' && '\\\\n    , OK = negate ? '!' : ''\\\\n    , NOT = negate ? '' : '!';\\\\n  switch (dataType) {\\\\n    case 'null': return data + EQUAL + 'null';\\\\n    case 'array': return OK + 'Array.isArray(' + data + ')';\\\\n    case 'object': return '(' + OK + data + AND +\\\\n                          'typeof ' + data + EQUAL + '\\\\\\\"object\\\\\\\"' + AND +\\\\n                          NOT + 'Array.isArray(' + data + '))';\\\\n    case 'integer': return '(typeof ' + data + EQUAL + '\\\\\\\"number\\\\\\\"' + AND +\\\\n                           NOT + '(' + data + ' % 1)' +\\\\n                           AND + data + EQUAL + data + ')';\\\\n    default: return 'typeof ' + data + EQUAL + '\\\\\\\"' + dataType + '\\\\\\\"';\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction checkDataTypes(dataTypes, data) {\\\\n  switch (dataTypes.length) {\\\\n    case 1: return checkDataType(dataTypes[0], data, true);\\\\n    default:\\\\n      var code = '';\\\\n      var types = toHash(dataTypes);\\\\n      if (types.array && types.object) {\\\\n        code = types.null ? '(': '(!' + data + ' || ';\\\\n        code += 'typeof ' + data + ' !== \\\\\\\"object\\\\\\\")';\\\\n        delete types.null;\\\\n        delete types.array;\\\\n        delete types.object;\\\\n      }\\\\n      if (types.number) delete types.integer;\\\\n      for (var t in types)\\\\n        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);\\\\n\\\\n      return code;\\\\n  }\\\\n}\\\\n\\\\n\\\\nvar COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);\\\\nfunction coerceToTypes(optionCoerceTypes, dataTypes) {\\\\n  if (Array.isArray(dataTypes)) {\\\\n    var types = [];\\\\n    for (var i=0; i<dataTypes.length; i++) {\\\\n      var t = dataTypes[i];\\\\n      if (COERCE_TO_TYPES[t]) types[types.length] = t;\\\\n      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;\\\\n    }\\\\n    if (types.length) return types;\\\\n  } else if (COERCE_TO_TYPES[dataTypes]) {\\\\n    return [dataTypes];\\\\n  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {\\\\n    return ['array'];\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction toHash(arr) {\\\\n  var hash = {};\\\\n  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;\\\\n  return hash;\\\\n}\\\\n\\\\n\\\\nvar IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\\\\nvar SINGLE_QUOTE = /'|\\\\\\\\\\\\\\\\/g;\\\\nfunction getProperty(key) {\\\\n  return typeof key == 'number'\\\\n          ? '[' + key + ']'\\\\n          : IDENTIFIER.test(key)\\\\n            ? '.' + key\\\\n            : \\\\\\\"['\\\\\\\" + escapeQuotes(key) + \\\\\\\"']\\\\\\\";\\\\n}\\\\n\\\\n\\\\nfunction escapeQuotes(str) {\\\\n  return str.replace(SINGLE_QUOTE, '\\\\\\\\\\\\\\\\$&')\\\\n            .replace(/\\\\\\\\n/g, '\\\\\\\\\\\\\\\\n')\\\\n            .replace(/\\\\\\\\r/g, '\\\\\\\\\\\\\\\\r')\\\\n            .replace(/\\\\\\\\f/g, '\\\\\\\\\\\\\\\\f')\\\\n            .replace(/\\\\\\\\t/g, '\\\\\\\\\\\\\\\\t');\\\\n}\\\\n\\\\n\\\\nfunction varOccurences(str, dataVar) {\\\\n  dataVar += '[^0-9]';\\\\n  var matches = str.match(new RegExp(dataVar, 'g'));\\\\n  return matches ? matches.length : 0;\\\\n}\\\\n\\\\n\\\\nfunction varReplace(str, dataVar, expr) {\\\\n  dataVar += '([^0-9])';\\\\n  expr = expr.replace(/\\\\\\\\$/g, '$$$$');\\\\n  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');\\\\n}\\\\n\\\\n\\\\nvar EMPTY_ELSE = /else\\\\\\\\s*{\\\\\\\\s*}/g\\\\n  , EMPTY_IF_NO_ELSE = /if\\\\\\\\s*\\\\\\\\([^)]+\\\\\\\\)\\\\\\\\s*\\\\\\\\{\\\\\\\\s*\\\\\\\\}(?!\\\\\\\\s*else)/g\\\\n  , EMPTY_IF_WITH_ELSE = /if\\\\\\\\s*\\\\\\\\(([^)]+)\\\\\\\\)\\\\\\\\s*\\\\\\\\{\\\\\\\\s*\\\\\\\\}\\\\\\\\s*else(?!\\\\\\\\s*if)/g;\\\\nfunction cleanUpCode(out) {\\\\n  return out.replace(EMPTY_ELSE, '')\\\\n            .replace(EMPTY_IF_NO_ELSE, '')\\\\n            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');\\\\n}\\\\n\\\\n\\\\nvar ERRORS_REGEXP = /[^v\\\\\\\\.]errors/g\\\\n  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g\\\\n  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g\\\\n  , RETURN_VALID = 'return errors === 0;'\\\\n  , RETURN_TRUE = 'validate.errors = null; return true;'\\\\n  , RETURN_ASYNC = /if \\\\\\\\(errors === 0\\\\\\\\) return data;\\\\\\\\s*else throw new ValidationError\\\\\\\\(vErrors\\\\\\\\);/\\\\n  , RETURN_DATA_ASYNC = 'return data;'\\\\n  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g\\\\n  , REMOVE_ROOTDATA = /if \\\\\\\\(rootData === undefined\\\\\\\\) rootData = data;/;\\\\n\\\\nfunction finalCleanUpCode(out, async) {\\\\n  var matches = out.match(ERRORS_REGEXP);\\\\n  if (matches && matches.length == 2) {\\\\n    out = async\\\\n          ? out.replace(REMOVE_ERRORS_ASYNC, '')\\\\n               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)\\\\n          : out.replace(REMOVE_ERRORS, '')\\\\n               .replace(RETURN_VALID, RETURN_TRUE);\\\\n  }\\\\n\\\\n  matches = out.match(ROOTDATA_REGEXP);\\\\n  if (!matches || matches.length !== 3) return out;\\\\n  return out.replace(REMOVE_ROOTDATA, '');\\\\n}\\\\n\\\\n\\\\nfunction schemaHasRules(schema, rules) {\\\\n  if (typeof schema == 'boolean') return !schema;\\\\n  for (var key in schema) if (rules[key]) return true;\\\\n}\\\\n\\\\n\\\\nfunction schemaHasRulesExcept(schema, rules, exceptKeyword) {\\\\n  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';\\\\n  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;\\\\n}\\\\n\\\\n\\\\nfunction toQuotedString(str) {\\\\n  return '\\\\\\\\'' + escapeQuotes(str) + '\\\\\\\\'';\\\\n}\\\\n\\\\n\\\\nfunction getPathExpr(currentPath, expr, jsonPointers, isNumber) {\\\\n  var path = jsonPointers // false by default\\\\n              ? '\\\\\\\\'/\\\\\\\\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \\\\\\\\'~0\\\\\\\\').replace(/\\\\\\\\\\\\\\\\//g, \\\\\\\\'~1\\\\\\\\')')\\\\n              : (isNumber ? '\\\\\\\\'[\\\\\\\\' + ' + expr + ' + \\\\\\\\']\\\\\\\\'' : '\\\\\\\\'[\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\' + ' + expr + ' + \\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\']\\\\\\\\'');\\\\n  return joinPaths(currentPath, path);\\\\n}\\\\n\\\\n\\\\nfunction getPath(currentPath, prop, jsonPointers) {\\\\n  var path = jsonPointers // false by default\\\\n              ? toQuotedString('/' + escapeJsonPointer(prop))\\\\n              : toQuotedString(getProperty(prop));\\\\n  return joinPaths(currentPath, path);\\\\n}\\\\n\\\\n\\\\nvar JSON_POINTER = /^\\\\\\\\/(?:[^~]|~0|~1)*$/;\\\\nvar RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\\\\\\\/(?:[^~]|~0|~1)*)?$/;\\\\nfunction getData($data, lvl, paths) {\\\\n  var up, jsonPointer, data, matches;\\\\n  if ($data === '') return 'rootData';\\\\n  if ($data[0] == '/') {\\\\n    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);\\\\n    jsonPointer = $data;\\\\n    data = 'rootData';\\\\n  } else {\\\\n    matches = $data.match(RELATIVE_JSON_POINTER);\\\\n    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);\\\\n    up = +matches[1];\\\\n    jsonPointer = matches[2];\\\\n    if (jsonPointer == '#') {\\\\n      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);\\\\n      return paths[lvl - up];\\\\n    }\\\\n\\\\n    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);\\\\n    data = 'data' + ((lvl - up) || '');\\\\n    if (!jsonPointer) return data;\\\\n  }\\\\n\\\\n  var expr = data;\\\\n  var segments = jsonPointer.split('/');\\\\n  for (var i=0; i<segments.length; i++) {\\\\n    var segment = segments[i];\\\\n    if (segment) {\\\\n      data += getProperty(unescapeJsonPointer(segment));\\\\n      expr += ' && ' + data;\\\\n    }\\\\n  }\\\\n  return expr;\\\\n}\\\\n\\\\n\\\\nfunction joinPaths (a, b) {\\\\n  if (a == '\\\\\\\"\\\\\\\"') return b;\\\\n  return (a + ' + ' + b).replace(/' \\\\\\\\+ '/g, '');\\\\n}\\\\n\\\\n\\\\nfunction unescapeFragment(str) {\\\\n  return unescapeJsonPointer(decodeURIComponent(str));\\\\n}\\\\n\\\\n\\\\nfunction escapeFragment(str) {\\\\n  return encodeURIComponent(escapeJsonPointer(str));\\\\n}\\\\n\\\\n\\\\nfunction escapeJsonPointer(str) {\\\\n  return str.replace(/~/g, '~0').replace(/\\\\\\\\//g, '~1');\\\\n}\\\\n\\\\n\\\\nfunction unescapeJsonPointer(str) {\\\\n  return str.replace(/~1/g, '/').replace(/~0/g, '~');\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvdXRpbC5qcz9mYmRhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY29weTogY29weSxcbiAgY2hlY2tEYXRhVHlwZTogY2hlY2tEYXRhVHlwZSxcbiAgY2hlY2tEYXRhVHlwZXM6IGNoZWNrRGF0YVR5cGVzLFxuICBjb2VyY2VUb1R5cGVzOiBjb2VyY2VUb1R5cGVzLFxuICB0b0hhc2g6IHRvSGFzaCxcbiAgZ2V0UHJvcGVydHk6IGdldFByb3BlcnR5LFxuICBlc2NhcGVRdW90ZXM6IGVzY2FwZVF1b3RlcyxcbiAgZXF1YWw6IHJlcXVpcmUoJy4vZXF1YWwnKSxcbiAgdWNzMmxlbmd0aDogcmVxdWlyZSgnLi91Y3MybGVuZ3RoJyksXG4gIHZhck9jY3VyZW5jZXM6IHZhck9jY3VyZW5jZXMsXG4gIHZhclJlcGxhY2U6IHZhclJlcGxhY2UsXG4gIGNsZWFuVXBDb2RlOiBjbGVhblVwQ29kZSxcbiAgZmluYWxDbGVhblVwQ29kZTogZmluYWxDbGVhblVwQ29kZSxcbiAgc2NoZW1hSGFzUnVsZXM6IHNjaGVtYUhhc1J1bGVzLFxuICBzY2hlbWFIYXNSdWxlc0V4Y2VwdDogc2NoZW1hSGFzUnVsZXNFeGNlcHQsXG4gIHRvUXVvdGVkU3RyaW5nOiB0b1F1b3RlZFN0cmluZyxcbiAgZ2V0UGF0aEV4cHI6IGdldFBhdGhFeHByLFxuICBnZXRQYXRoOiBnZXRQYXRoLFxuICBnZXREYXRhOiBnZXREYXRhLFxuICB1bmVzY2FwZUZyYWdtZW50OiB1bmVzY2FwZUZyYWdtZW50LFxuICBlc2NhcGVGcmFnbWVudDogZXNjYXBlRnJhZ21lbnQsXG4gIGVzY2FwZUpzb25Qb2ludGVyOiBlc2NhcGVKc29uUG9pbnRlclxufTtcblxuXG5mdW5jdGlvbiBjb3B5KG8sIHRvKSB7XG4gIHRvID0gdG8gfHwge307XG4gIGZvciAodmFyIGtleSBpbiBvKSB0b1trZXldID0gb1trZXldO1xuICByZXR1cm4gdG87XG59XG5cblxuZnVuY3Rpb24gY2hlY2tEYXRhVHlwZShkYXRhVHlwZSwgZGF0YSwgbmVnYXRlKSB7XG4gIHZhciBFUVVBTCA9IG5lZ2F0ZSA/ICcgIT09ICcgOiAnID09PSAnXG4gICAgLCBBTkQgPSBuZWdhdGUgPyAnIHx8ICcgOiAnICYmICdcbiAgICAsIE9LID0gbmVnYXRlID8gJyEnIDogJydcbiAgICAsIE5PVCA9IG5lZ2F0ZSA/ICcnIDogJyEnO1xuICBzd2l0Y2ggKGRhdGFUeXBlKSB7XG4gICAgY2FzZSAnbnVsbCc6IHJldHVybiBkYXRhICsgRVFVQUwgKyAnbnVsbCc7XG4gICAgY2FzZSAnYXJyYXknOiByZXR1cm4gT0sgKyAnQXJyYXkuaXNBcnJheSgnICsgZGF0YSArICcpJztcbiAgICBjYXNlICdvYmplY3QnOiByZXR1cm4gJygnICsgT0sgKyBkYXRhICsgQU5EICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3R5cGVvZiAnICsgZGF0YSArIEVRVUFMICsgJ1wib2JqZWN0XCInICsgQU5EICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgTk9UICsgJ0FycmF5LmlzQXJyYXkoJyArIGRhdGEgKyAnKSknO1xuICAgIGNhc2UgJ2ludGVnZXInOiByZXR1cm4gJyh0eXBlb2YgJyArIGRhdGEgKyBFUVVBTCArICdcIm51bWJlclwiJyArIEFORCArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBOT1QgKyAnKCcgKyBkYXRhICsgJyAlIDEpJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICBBTkQgKyBkYXRhICsgRVFVQUwgKyBkYXRhICsgJyknO1xuICAgIGRlZmF1bHQ6IHJldHVybiAndHlwZW9mICcgKyBkYXRhICsgRVFVQUwgKyAnXCInICsgZGF0YVR5cGUgKyAnXCInO1xuICB9XG59XG5cblxuZnVuY3Rpb24gY2hlY2tEYXRhVHlwZXMoZGF0YVR5cGVzLCBkYXRhKSB7XG4gIHN3aXRjaCAoZGF0YVR5cGVzLmxlbmd0aCkge1xuICAgIGNhc2UgMTogcmV0dXJuIGNoZWNrRGF0YVR5cGUoZGF0YVR5cGVzWzBdLCBkYXRhLCB0cnVlKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdmFyIGNvZGUgPSAnJztcbiAgICAgIHZhciB0eXBlcyA9IHRvSGFzaChkYXRhVHlwZXMpO1xuICAgICAgaWYgKHR5cGVzLmFycmF5ICYmIHR5cGVzLm9iamVjdCkge1xuICAgICAgICBjb2RlID0gdHlwZXMubnVsbCA/ICcoJzogJyghJyArIGRhdGEgKyAnIHx8ICc7XG4gICAgICAgIGNvZGUgKz0gJ3R5cGVvZiAnICsgZGF0YSArICcgIT09IFwib2JqZWN0XCIpJztcbiAgICAgICAgZGVsZXRlIHR5cGVzLm51bGw7XG4gICAgICAgIGRlbGV0ZSB0eXBlcy5hcnJheTtcbiAgICAgICAgZGVsZXRlIHR5cGVzLm9iamVjdDtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlcy5udW1iZXIpIGRlbGV0ZSB0eXBlcy5pbnRlZ2VyO1xuICAgICAgZm9yICh2YXIgdCBpbiB0eXBlcylcbiAgICAgICAgY29kZSArPSAoY29kZSA/ICcgJiYgJyA6ICcnICkgKyBjaGVja0RhdGFUeXBlKHQsIGRhdGEsIHRydWUpO1xuXG4gICAgICByZXR1cm4gY29kZTtcbiAgfVxufVxuXG5cbnZhciBDT0VSQ0VfVE9fVFlQRVMgPSB0b0hhc2goWyAnc3RyaW5nJywgJ251bWJlcicsICdpbnRlZ2VyJywgJ2Jvb2xlYW4nLCAnbnVsbCcgXSk7XG5mdW5jdGlvbiBjb2VyY2VUb1R5cGVzKG9wdGlvbkNvZXJjZVR5cGVzLCBkYXRhVHlwZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoZGF0YVR5cGVzKSkge1xuICAgIHZhciB0eXBlcyA9IFtdO1xuICAgIGZvciAodmFyIGk9MDsgaTxkYXRhVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciB0ID0gZGF0YVR5cGVzW2ldO1xuICAgICAgaWYgKENPRVJDRV9UT19UWVBFU1t0XSkgdHlwZXNbdHlwZXMubGVuZ3RoXSA9IHQ7XG4gICAgICBlbHNlIGlmIChvcHRpb25Db2VyY2VUeXBlcyA9PT0gJ2FycmF5JyAmJiB0ID09PSAnYXJyYXknKSB0eXBlc1t0eXBlcy5sZW5ndGhdID0gdDtcbiAgICB9XG4gICAgaWYgKHR5cGVzLmxlbmd0aCkgcmV0dXJuIHR5cGVzO1xuICB9IGVsc2UgaWYgKENPRVJDRV9UT19UWVBFU1tkYXRhVHlwZXNdKSB7XG4gICAgcmV0dXJuIFtkYXRhVHlwZXNdO1xuICB9IGVsc2UgaWYgKG9wdGlvbkNvZXJjZVR5cGVzID09PSAnYXJyYXknICYmIGRhdGFUeXBlcyA9PT0gJ2FycmF5Jykge1xuICAgIHJldHVybiBbJ2FycmF5J107XG4gIH1cbn1cblxuXG5mdW5jdGlvbiB0b0hhc2goYXJyKSB7XG4gIHZhciBoYXNoID0ge307XG4gIGZvciAodmFyIGk9MDsgaTxhcnIubGVuZ3RoOyBpKyspIGhhc2hbYXJyW2ldXSA9IHRydWU7XG4gIHJldHVybiBoYXNoO1xufVxuXG5cbnZhciBJREVOVElGSUVSID0gL15bYS16JF9dW2EteiRfMC05XSokL2k7XG52YXIgU0lOR0xFX1FVT1RFID0gLyd8XFxcXC9nO1xuZnVuY3Rpb24gZ2V0UHJvcGVydHkoa2V5KSB7XG4gIHJldHVybiB0eXBlb2Yga2V5ID09ICdudW1iZXInXG4gICAgICAgICAgPyAnWycgKyBrZXkgKyAnXSdcbiAgICAgICAgICA6IElERU5USUZJRVIudGVzdChrZXkpXG4gICAgICAgICAgICA/ICcuJyArIGtleVxuICAgICAgICAgICAgOiBcIlsnXCIgKyBlc2NhcGVRdW90ZXMoa2V5KSArIFwiJ11cIjtcbn1cblxuXG5mdW5jdGlvbiBlc2NhcGVRdW90ZXMoc3RyKSB7XG4gIHJldHVybiBzdHIucmVwbGFjZShTSU5HTEVfUVVPVEUsICdcXFxcJCYnKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcbi9nLCAnXFxcXG4nKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcci9nLCAnXFxcXHInKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcZi9nLCAnXFxcXGYnKVxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcdC9nLCAnXFxcXHQnKTtcbn1cblxuXG5mdW5jdGlvbiB2YXJPY2N1cmVuY2VzKHN0ciwgZGF0YVZhcikge1xuICBkYXRhVmFyICs9ICdbXjAtOV0nO1xuICB2YXIgbWF0Y2hlcyA9IHN0ci5tYXRjaChuZXcgUmVnRXhwKGRhdGFWYXIsICdnJykpO1xuICByZXR1cm4gbWF0Y2hlcyA/IG1hdGNoZXMubGVuZ3RoIDogMDtcbn1cblxuXG5mdW5jdGlvbiB2YXJSZXBsYWNlKHN0ciwgZGF0YVZhciwgZXhwcikge1xuICBkYXRhVmFyICs9ICcoW14wLTldKSc7XG4gIGV4cHIgPSBleHByLnJlcGxhY2UoL1xcJC9nLCAnJCQkJCcpO1xuICByZXR1cm4gc3RyLnJlcGxhY2UobmV3IFJlZ0V4cChkYXRhVmFyLCAnZycpLCBleHByICsgJyQxJyk7XG59XG5cblxudmFyIEVNUFRZX0VMU0UgPSAvZWxzZVxccyp7XFxzKn0vZ1xuICAsIEVNUFRZX0lGX05PX0VMU0UgPSAvaWZcXHMqXFwoW14pXStcXClcXHMqXFx7XFxzKlxcfSg/IVxccyplbHNlKS9nXG4gICwgRU1QVFlfSUZfV0lUSF9FTFNFID0gL2lmXFxzKlxcKChbXildKylcXClcXHMqXFx7XFxzKlxcfVxccyplbHNlKD8hXFxzKmlmKS9nO1xuZnVuY3Rpb24gY2xlYW5VcENvZGUob3V0KSB7XG4gIHJldHVybiBvdXQucmVwbGFjZShFTVBUWV9FTFNFLCAnJylcbiAgICAgICAgICAgIC5yZXBsYWNlKEVNUFRZX0lGX05PX0VMU0UsICcnKVxuICAgICAgICAgICAgLnJlcGxhY2UoRU1QVFlfSUZfV0lUSF9FTFNFLCAnaWYgKCEoJDEpKScpO1xufVxuXG5cbnZhciBFUlJPUlNfUkVHRVhQID0gL1tedlxcLl1lcnJvcnMvZ1xuICAsIFJFTU9WRV9FUlJPUlMgPSAvdmFyIGVycm9ycyA9IDA7fHZhciB2RXJyb3JzID0gbnVsbDt8dmFsaWRhdGUuZXJyb3JzID0gdkVycm9yczsvZ1xuICAsIFJFTU9WRV9FUlJPUlNfQVNZTkMgPSAvdmFyIGVycm9ycyA9IDA7fHZhciB2RXJyb3JzID0gbnVsbDsvZ1xuICAsIFJFVFVSTl9WQUxJRCA9ICdyZXR1cm4gZXJyb3JzID09PSAwOydcbiAgLCBSRVRVUk5fVFJVRSA9ICd2YWxpZGF0ZS5lcnJvcnMgPSBudWxsOyByZXR1cm4gdHJ1ZTsnXG4gICwgUkVUVVJOX0FTWU5DID0gL2lmIFxcKGVycm9ycyA9PT0gMFxcKSByZXR1cm4gZGF0YTtcXHMqZWxzZSB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yXFwodkVycm9yc1xcKTsvXG4gICwgUkVUVVJOX0RBVEFfQVNZTkMgPSAncmV0dXJuIGRhdGE7J1xuICAsIFJPT1REQVRBX1JFR0VYUCA9IC9bXkEtWmEtel8kXXJvb3REYXRhW15BLVphLXowLTlfJF0vZ1xuICAsIFJFTU9WRV9ST09UREFUQSA9IC9pZiBcXChyb290RGF0YSA9PT0gdW5kZWZpbmVkXFwpIHJvb3REYXRhID0gZGF0YTsvO1xuXG5mdW5jdGlvbiBmaW5hbENsZWFuVXBDb2RlKG91dCwgYXN5bmMpIHtcbiAgdmFyIG1hdGNoZXMgPSBvdXQubWF0Y2goRVJST1JTX1JFR0VYUCk7XG4gIGlmIChtYXRjaGVzICYmIG1hdGNoZXMubGVuZ3RoID09IDIpIHtcbiAgICBvdXQgPSBhc3luY1xuICAgICAgICAgID8gb3V0LnJlcGxhY2UoUkVNT1ZFX0VSUk9SU19BU1lOQywgJycpXG4gICAgICAgICAgICAgICAucmVwbGFjZShSRVRVUk5fQVNZTkMsIFJFVFVSTl9EQVRBX0FTWU5DKVxuICAgICAgICAgIDogb3V0LnJlcGxhY2UoUkVNT1ZFX0VSUk9SUywgJycpXG4gICAgICAgICAgICAgICAucmVwbGFjZShSRVRVUk5fVkFMSUQsIFJFVFVSTl9UUlVFKTtcbiAgfVxuXG4gIG1hdGNoZXMgPSBvdXQubWF0Y2goUk9PVERBVEFfUkVHRVhQKTtcbiAgaWYgKCFtYXRjaGVzIHx8IG1hdGNoZXMubGVuZ3RoICE9PSAzKSByZXR1cm4gb3V0O1xuICByZXR1cm4gb3V0LnJlcGxhY2UoUkVNT1ZFX1JPT1REQVRBLCAnJyk7XG59XG5cblxuZnVuY3Rpb24gc2NoZW1hSGFzUnVsZXMoc2NoZW1hLCBydWxlcykge1xuICBpZiAodHlwZW9mIHNjaGVtYSA9PSAnYm9vbGVhbicpIHJldHVybiAhc2NoZW1hO1xuICBmb3IgKHZhciBrZXkgaW4gc2NoZW1hKSBpZiAocnVsZXNba2V5XSkgcmV0dXJuIHRydWU7XG59XG5cblxuZnVuY3Rpb24gc2NoZW1hSGFzUnVsZXNFeGNlcHQoc2NoZW1hLCBydWxlcywgZXhjZXB0S2V5d29yZCkge1xuICBpZiAodHlwZW9mIHNjaGVtYSA9PSAnYm9vbGVhbicpIHJldHVybiAhc2NoZW1hICYmIGV4Y2VwdEtleXdvcmQgIT0gJ25vdCc7XG4gIGZvciAodmFyIGtleSBpbiBzY2hlbWEpIGlmIChrZXkgIT0gZXhjZXB0S2V5d29yZCAmJiBydWxlc1trZXldKSByZXR1cm4gdHJ1ZTtcbn1cblxuXG5mdW5jdGlvbiB0b1F1b3RlZFN0cmluZyhzdHIpIHtcbiAgcmV0dXJuICdcXCcnICsgZXNjYXBlUXVvdGVzKHN0cikgKyAnXFwnJztcbn1cblxuXG5mdW5jdGlvbiBnZXRQYXRoRXhwcihjdXJyZW50UGF0aCwgZXhwciwganNvblBvaW50ZXJzLCBpc051bWJlcikge1xuICB2YXIgcGF0aCA9IGpzb25Qb2ludGVycyAvLyBmYWxzZSBieSBkZWZhdWx0XG4gICAgICAgICAgICAgID8gJ1xcJy9cXCcgKyAnICsgZXhwciArIChpc051bWJlciA/ICcnIDogJy5yZXBsYWNlKC9+L2csIFxcJ34wXFwnKS5yZXBsYWNlKC9cXFxcLy9nLCBcXCd+MVxcJyknKVxuICAgICAgICAgICAgICA6IChpc051bWJlciA/ICdcXCdbXFwnICsgJyArIGV4cHIgKyAnICsgXFwnXVxcJycgOiAnXFwnW1xcXFxcXCdcXCcgKyAnICsgZXhwciArICcgKyBcXCdcXFxcXFwnXVxcJycpO1xuICByZXR1cm4gam9pblBhdGhzKGN1cnJlbnRQYXRoLCBwYXRoKTtcbn1cblxuXG5mdW5jdGlvbiBnZXRQYXRoKGN1cnJlbnRQYXRoLCBwcm9wLCBqc29uUG9pbnRlcnMpIHtcbiAgdmFyIHBhdGggPSBqc29uUG9pbnRlcnMgLy8gZmFsc2UgYnkgZGVmYXVsdFxuICAgICAgICAgICAgICA/IHRvUXVvdGVkU3RyaW5nKCcvJyArIGVzY2FwZUpzb25Qb2ludGVyKHByb3ApKVxuICAgICAgICAgICAgICA6IHRvUXVvdGVkU3RyaW5nKGdldFByb3BlcnR5KHByb3ApKTtcbiAgcmV0dXJuIGpvaW5QYXRocyhjdXJyZW50UGF0aCwgcGF0aCk7XG59XG5cblxudmFyIEpTT05fUE9JTlRFUiA9IC9eXFwvKD86W15+XXx+MHx+MSkqJC87XG52YXIgUkVMQVRJVkVfSlNPTl9QT0lOVEVSID0gL14oWzAtOV0rKSgjfFxcLyg/Oltefl18fjB8fjEpKik/JC87XG5mdW5jdGlvbiBnZXREYXRhKCRkYXRhLCBsdmwsIHBhdGhzKSB7XG4gIHZhciB1cCwganNvblBvaW50ZXIsIGRhdGEsIG1hdGNoZXM7XG4gIGlmICgkZGF0YSA9PT0gJycpIHJldHVybiAncm9vdERhdGEnO1xuICBpZiAoJGRhdGFbMF0gPT0gJy8nKSB7XG4gICAgaWYgKCFKU09OX1BPSU5URVIudGVzdCgkZGF0YSkpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBKU09OLXBvaW50ZXI6ICcgKyAkZGF0YSk7XG4gICAganNvblBvaW50ZXIgPSAkZGF0YTtcbiAgICBkYXRhID0gJ3Jvb3REYXRhJztcbiAgfSBlbHNlIHtcbiAgICBtYXRjaGVzID0gJGRhdGEubWF0Y2goUkVMQVRJVkVfSlNPTl9QT0lOVEVSKTtcbiAgICBpZiAoIW1hdGNoZXMpIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBKU09OLXBvaW50ZXI6ICcgKyAkZGF0YSk7XG4gICAgdXAgPSArbWF0Y2hlc1sxXTtcbiAgICBqc29uUG9pbnRlciA9IG1hdGNoZXNbMl07XG4gICAgaWYgKGpzb25Qb2ludGVyID09ICcjJykge1xuICAgICAgaWYgKHVwID49IGx2bCkgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgYWNjZXNzIHByb3BlcnR5L2luZGV4ICcgKyB1cCArICcgbGV2ZWxzIHVwLCBjdXJyZW50IGxldmVsIGlzICcgKyBsdmwpO1xuICAgICAgcmV0dXJuIHBhdGhzW2x2bCAtIHVwXTtcbiAgICB9XG5cbiAgICBpZiAodXAgPiBsdmwpIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGFjY2VzcyBkYXRhICcgKyB1cCArICcgbGV2ZWxzIHVwLCBjdXJyZW50IGxldmVsIGlzICcgKyBsdmwpO1xuICAgIGRhdGEgPSAnZGF0YScgKyAoKGx2bCAtIHVwKSB8fCAnJyk7XG4gICAgaWYgKCFqc29uUG9pbnRlcikgcmV0dXJuIGRhdGE7XG4gIH1cblxuICB2YXIgZXhwciA9IGRhdGE7XG4gIHZhciBzZWdtZW50cyA9IGpzb25Qb2ludGVyLnNwbGl0KCcvJyk7XG4gIGZvciAodmFyIGk9MDsgaTxzZWdtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzZWdtZW50ID0gc2VnbWVudHNbaV07XG4gICAgaWYgKHNlZ21lbnQpIHtcbiAgICAgIGRhdGEgKz0gZ2V0UHJvcGVydHkodW5lc2NhcGVKc29uUG9pbnRlcihzZWdtZW50KSk7XG4gICAgICBleHByICs9ICcgJiYgJyArIGRhdGE7XG4gICAgfVxuICB9XG4gIHJldHVybiBleHByO1xufVxuXG5cbmZ1bmN0aW9uIGpvaW5QYXRocyAoYSwgYikge1xuICBpZiAoYSA9PSAnXCJcIicpIHJldHVybiBiO1xuICByZXR1cm4gKGEgKyAnICsgJyArIGIpLnJlcGxhY2UoLycgXFwrICcvZywgJycpO1xufVxuXG5cbmZ1bmN0aW9uIHVuZXNjYXBlRnJhZ21lbnQoc3RyKSB7XG4gIHJldHVybiB1bmVzY2FwZUpzb25Qb2ludGVyKGRlY29kZVVSSUNvbXBvbmVudChzdHIpKTtcbn1cblxuXG5mdW5jdGlvbiBlc2NhcGVGcmFnbWVudChzdHIpIHtcbiAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChlc2NhcGVKc29uUG9pbnRlcihzdHIpKTtcbn1cblxuXG5mdW5jdGlvbiBlc2NhcGVKc29uUG9pbnRlcihzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9+L2csICd+MCcpLnJlcGxhY2UoL1xcLy9nLCAnfjEnKTtcbn1cblxuXG5mdW5jdGlvbiB1bmVzY2FwZUpzb25Qb2ludGVyKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL34xL2csICcvJykucmVwbGFjZSgvfjAvZywgJ34nKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/compile/util.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/_limit.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/_limit.js ***!\\n  \\\\**********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate__limit(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $errorKeyword;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $isMax = $keyword == 'maximum',\\\\n    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',\\\\n    $schemaExcl = it.schema[$exclusiveKeyword],\\\\n    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,\\\\n    $op = $isMax ? '<' : '>',\\\\n    $notOp = $isMax ? '>' : '<',\\\\n    $errorKeyword = undefined;\\\\n  if ($isDataExcl) {\\\\n    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),\\\\n      $exclusive = 'exclusive' + $lvl,\\\\n      $exclType = 'exclType' + $lvl,\\\\n      $exclIsNumber = 'exclIsNumber' + $lvl,\\\\n      $opExpr = 'op' + $lvl,\\\\n      $opStr = '\\\\\\\\' + ' + $opExpr + ' + \\\\\\\\'';\\\\n    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';\\\\n    $schemaValueExcl = 'schemaExcl' + $lvl;\\\\n    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \\\\\\\\'boolean\\\\\\\\' && ' + ($exclType) + ' != \\\\\\\\'undefined\\\\\\\\' && ' + ($exclType) + ' != \\\\\\\\'number\\\\\\\\') { ';\\\\n    var $errorKeyword = $exclusiveKeyword;\\\\n    var $$outStack = $$outStack || [];\\\\n    $$outStack.push(out);\\\\n    out = ''; /* istanbul ignore else */\\\\n    if (it.createErrors !== false) {\\\\n      out += ' { keyword: \\\\\\\\'' + ($errorKeyword || '_exclusiveLimit') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n      if (it.opts.messages !== false) {\\\\n        out += ' , message: \\\\\\\\'' + ($exclusiveKeyword) + ' should be boolean\\\\\\\\' ';\\\\n      }\\\\n      if (it.opts.verbose) {\\\\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n      }\\\\n      out += ' } ';\\\\n    } else {\\\\n      out += ' {} ';\\\\n    }\\\\n    var __err = out;\\\\n    out = $$outStack.pop();\\\\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n      if (it.async) {\\\\n        out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n      } else {\\\\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n      }\\\\n    } else {\\\\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n    }\\\\n    out += ' } else if ( ';\\\\n    if ($isData) {\\\\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'number\\\\\\\\') || ';\\\\n    }\\\\n    out += ' ' + ($exclType) + ' == \\\\\\\\'number\\\\\\\\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \\\\\\\\'' + ($op) + '\\\\\\\\' : \\\\\\\\'' + ($op) + '=\\\\\\\\';';\\\\n  } else {\\\\n    var $exclIsNumber = typeof $schemaExcl == 'number',\\\\n      $opStr = $op;\\\\n    if ($exclIsNumber && $isData) {\\\\n      var $opExpr = '\\\\\\\\'' + $opStr + '\\\\\\\\'';\\\\n      out += ' if ( ';\\\\n      if ($isData) {\\\\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'number\\\\\\\\') || ';\\\\n      }\\\\n      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';\\\\n    } else {\\\\n      if ($exclIsNumber && $schema === undefined) {\\\\n        $exclusive = true;\\\\n        $errorKeyword = $exclusiveKeyword;\\\\n        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\\\\n        $schemaValue = $schemaExcl;\\\\n        $notOp += '=';\\\\n      } else {\\\\n        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);\\\\n        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {\\\\n          $exclusive = true;\\\\n          $errorKeyword = $exclusiveKeyword;\\\\n          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;\\\\n          $notOp += '=';\\\\n        } else {\\\\n          $exclusive = false;\\\\n          $opStr += '=';\\\\n        }\\\\n      }\\\\n      var $opExpr = '\\\\\\\\'' + $opStr + '\\\\\\\\'';\\\\n      out += ' if ( ';\\\\n      if ($isData) {\\\\n        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'number\\\\\\\\') || ';\\\\n      }\\\\n      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';\\\\n    }\\\\n  }\\\\n  $errorKeyword = $errorKeyword || $keyword;\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ($errorKeyword || '_limit') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should be ' + ($opStr) + ' ';\\\\n      if ($isData) {\\\\n        out += '\\\\\\\\' + ' + ($schemaValue);\\\\n      } else {\\\\n        out += '' + ($schemaValue) + '\\\\\\\\'';\\\\n      }\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema:  ';\\\\n      if ($isData) {\\\\n        out += 'validate.schema' + ($schemaPath);\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += ' } ';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limit.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/_limitItems.js\\\":\\n/*!***************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/_limitItems.js ***!\\n  \\\\***************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate__limitItems(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $errorKeyword;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $op = $keyword == 'maxItems' ? '>' : '<';\\\\n  out += 'if ( ';\\\\n  if ($isData) {\\\\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'number\\\\\\\\') || ';\\\\n  }\\\\n  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';\\\\n  var $errorKeyword = $keyword;\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ($errorKeyword || '_limitItems') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should NOT have ';\\\\n      if ($keyword == 'maxItems') {\\\\n        out += 'more';\\\\n      } else {\\\\n        out += 'less';\\\\n      }\\\\n      out += ' than ';\\\\n      if ($isData) {\\\\n        out += '\\\\\\\\' + ' + ($schemaValue) + ' + \\\\\\\\'';\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += ' items\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema:  ';\\\\n      if ($isData) {\\\\n        out += 'validate.schema' + ($schemaPath);\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += '} ';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRJdGVtcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0SXRlbXMuanM/ZGEzYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX19saW1pdEl0ZW1zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZXJyb3JLZXl3b3JkO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxuICAgICRzY2hlbWFWYWx1ZTtcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xuICB9IGVsc2Uge1xuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XG4gIH1cbiAgdmFyICRvcCA9ICRrZXl3b3JkID09ICdtYXhJdGVtcycgPyAnPicgOiAnPCc7XG4gIG91dCArPSAnaWYgKCAnO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnICgnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mICcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT0gXFwnbnVtYmVyXFwnKSB8fCAnO1xuICB9XG4gIG91dCArPSAnICcgKyAoJGRhdGEpICsgJy5sZW5ndGggJyArICgkb3ApICsgJyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnKSB7ICc7XG4gIHZhciAkZXJyb3JLZXl3b3JkID0gJGtleXdvcmQ7XG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgkZXJyb3JLZXl3b3JkIHx8ICdfbGltaXRJdGVtcycpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgbGltaXQ6ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgfSAnO1xuICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgTk9UIGhhdmUgJztcbiAgICAgIGlmICgka2V5d29yZCA9PSAnbWF4SXRlbXMnKSB7XG4gICAgICAgIG91dCArPSAnbW9yZSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJ2xlc3MnO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgdGhhbiAnO1xuICAgICAgaWYgKCRpc0RhdGEpIHtcbiAgICAgICAgb3V0ICs9ICdcXCcgKyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICsgXFwnJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnJyArICgkc2NoZW1hKTtcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIGl0ZW1zXFwnICc7XG4gICAgfVxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJ30gJztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limitItems.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/_limitLength.js\\\":\\n/*!****************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/_limitLength.js ***!\\n  \\\\****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate__limitLength(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $errorKeyword;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $op = $keyword == 'maxLength' ? '>' : '<';\\\\n  out += 'if ( ';\\\\n  if ($isData) {\\\\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'number\\\\\\\\') || ';\\\\n  }\\\\n  if (it.opts.unicode === false) {\\\\n    out += ' ' + ($data) + '.length ';\\\\n  } else {\\\\n    out += ' ucs2length(' + ($data) + ') ';\\\\n  }\\\\n  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';\\\\n  var $errorKeyword = $keyword;\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ($errorKeyword || '_limitLength') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should NOT be ';\\\\n      if ($keyword == 'maxLength') {\\\\n        out += 'longer';\\\\n      } else {\\\\n        out += 'shorter';\\\\n      }\\\\n      out += ' than ';\\\\n      if ($isData) {\\\\n        out += '\\\\\\\\' + ' + ($schemaValue) + ' + \\\\\\\\'';\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += ' characters\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema:  ';\\\\n      if ($isData) {\\\\n        out += 'validate.schema' + ($schemaPath);\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += '} ';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRMZW5ndGguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdExlbmd0aC5qcz85OTA2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfX2xpbWl0TGVuZ3RoKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZXJyb3JLZXl3b3JkO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxuICAgICRzY2hlbWFWYWx1ZTtcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xuICB9IGVsc2Uge1xuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XG4gIH1cbiAgdmFyICRvcCA9ICRrZXl3b3JkID09ICdtYXhMZW5ndGgnID8gJz4nIDogJzwnO1xuICBvdXQgKz0gJ2lmICggJztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ251bWJlclxcJykgfHwgJztcbiAgfVxuICBpZiAoaXQub3B0cy51bmljb2RlID09PSBmYWxzZSkge1xuICAgIG91dCArPSAnICcgKyAoJGRhdGEpICsgJy5sZW5ndGggJztcbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB1Y3MybGVuZ3RoKCcgKyAoJGRhdGEpICsgJykgJztcbiAgfVxuICBvdXQgKz0gJyAnICsgKCRvcCkgKyAnICcgKyAoJHNjaGVtYVZhbHVlKSArICcpIHsgJztcbiAgdmFyICRlcnJvcktleXdvcmQgPSAka2V5d29yZDtcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCRlcnJvcktleXdvcmQgfHwgJ19saW1pdExlbmd0aCcpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgbGltaXQ6ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgfSAnO1xuICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgTk9UIGJlICc7XG4gICAgICBpZiAoJGtleXdvcmQgPT0gJ21heExlbmd0aCcpIHtcbiAgICAgICAgb3V0ICs9ICdsb25nZXInO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICdzaG9ydGVyJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIHRoYW4gJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyBjaGFyYWN0ZXJzXFwnICc7XG4gICAgfVxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJ30gJztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limitLength.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/_limitProperties.js\\\":\\n/*!********************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/_limitProperties.js ***!\\n  \\\\********************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate__limitProperties(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $errorKeyword;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $op = $keyword == 'maxProperties' ? '>' : '<';\\\\n  out += 'if ( ';\\\\n  if ($isData) {\\\\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'number\\\\\\\\') || ';\\\\n  }\\\\n  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';\\\\n  var $errorKeyword = $keyword;\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ($errorKeyword || '_limitProperties') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should NOT have ';\\\\n      if ($keyword == 'maxProperties') {\\\\n        out += 'more';\\\\n      } else {\\\\n        out += 'less';\\\\n      }\\\\n      out += ' than ';\\\\n      if ($isData) {\\\\n        out += '\\\\\\\\' + ' + ($schemaValue) + ' + \\\\\\\\'';\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += ' properties\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema:  ';\\\\n      if ($isData) {\\\\n        out += 'validate.schema' + ($schemaPath);\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += '} ';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzLmpzPzc3ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9fbGltaXRQcm9wZXJ0aWVzKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZXJyb3JLZXl3b3JkO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxuICAgICRzY2hlbWFWYWx1ZTtcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xuICB9IGVsc2Uge1xuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XG4gIH1cbiAgdmFyICRvcCA9ICRrZXl3b3JkID09ICdtYXhQcm9wZXJ0aWVzJyA/ICc+JyA6ICc8JztcbiAgb3V0ICs9ICdpZiAoICc7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPSBcXCdudW1iZXJcXCcpIHx8ICc7XG4gIH1cbiAgb3V0ICs9ICcgT2JqZWN0LmtleXMoJyArICgkZGF0YSkgKyAnKS5sZW5ndGggJyArICgkb3ApICsgJyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnKSB7ICc7XG4gIHZhciAkZXJyb3JLZXl3b3JkID0gJGtleXdvcmQ7XG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgkZXJyb3JLZXl3b3JkIHx8ICdfbGltaXRQcm9wZXJ0aWVzJykgKyAnXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXCdcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBsaW1pdDogJyArICgkc2NoZW1hVmFsdWUpICsgJyB9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBOT1QgaGF2ZSAnO1xuICAgICAgaWYgKCRrZXl3b3JkID09ICdtYXhQcm9wZXJ0aWVzJykge1xuICAgICAgICBvdXQgKz0gJ21vcmUnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICdsZXNzJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIHRoYW4gJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyBwcm9wZXJ0aWVzXFwnICc7XG4gICAgfVxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJ30gJztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/_limitProperties.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/allOf.js\\\":\\n/*!*********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/allOf.js ***!\\n  \\\\*********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_allOf(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  var $currentBaseId = $it.baseId,\\\\n    $allSchemasEmpty = true;\\\\n  var arr1 = $schema;\\\\n  if (arr1) {\\\\n    var $sch, $i = -1,\\\\n      l1 = arr1.length - 1;\\\\n    while ($i < l1) {\\\\n      $sch = arr1[$i += 1];\\\\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\\\\n        $allSchemasEmpty = false;\\\\n        $it.schema = $sch;\\\\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\\\\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\\\\n        out += '  ' + (it.validate($it)) + ' ';\\\\n        $it.baseId = $currentBaseId;\\\\n        if ($breakOnError) {\\\\n          out += ' if (' + ($nextValid) + ') { ';\\\\n          $closingBraces += '}';\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n  if ($breakOnError) {\\\\n    if ($allSchemasEmpty) {\\\\n      out += ' if (true) { ';\\\\n    } else {\\\\n      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';\\\\n    }\\\\n  }\\\\n  out = it.util.cleanUpCode(out);\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9hbGxPZi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYWxsT2YuanM/ZWEwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2FsbE9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcbiAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJGtleXdvcmQpO1xuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIHZhciAkY3VycmVudEJhc2VJZCA9ICRpdC5iYXNlSWQsXG4gICAgJGFsbFNjaGVtYXNFbXB0eSA9IHRydWU7XG4gIHZhciBhcnIxID0gJHNjaGVtYTtcbiAgaWYgKGFycjEpIHtcbiAgICB2YXIgJHNjaCwgJGkgPSAtMSxcbiAgICAgIGwxID0gYXJyMS5sZW5ndGggLSAxO1xuICAgIHdoaWxlICgkaSA8IGwxKSB7XG4gICAgICAkc2NoID0gYXJyMVskaSArPSAxXTtcbiAgICAgIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2gsIGl0LlJVTEVTLmFsbCkpIHtcbiAgICAgICAgJGFsbFNjaGVtYXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcbiAgICAgICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aCArICdbJyArICRpICsgJ10nO1xuICAgICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoICsgJy8nICsgJGk7XG4gICAgICAgIG91dCArPSAnICAnICsgKGl0LnZhbGlkYXRlKCRpdCkpICsgJyAnO1xuICAgICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XG4gICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XG4gICAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgaWYgKCRhbGxTY2hlbWFzRW1wdHkpIHtcbiAgICAgIG91dCArPSAnIGlmICh0cnVlKSB7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnICcgKyAoJGNsb3NpbmdCcmFjZXMuc2xpY2UoMCwgLTEpKSArICcgJztcbiAgICB9XG4gIH1cbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/allOf.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/anyOf.js\\\":\\n/*!*********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/anyOf.js ***!\\n  \\\\*********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_anyOf(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  var $noEmptySchema = $schema.every(function($sch) {\\\\n    return it.util.schemaHasRules($sch, it.RULES.all);\\\\n  });\\\\n  if ($noEmptySchema) {\\\\n    var $currentBaseId = $it.baseId;\\\\n    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';\\\\n    var $wasComposite = it.compositeRule;\\\\n    it.compositeRule = $it.compositeRule = true;\\\\n    var arr1 = $schema;\\\\n    if (arr1) {\\\\n      var $sch, $i = -1,\\\\n        l1 = arr1.length - 1;\\\\n      while ($i < l1) {\\\\n        $sch = arr1[$i += 1];\\\\n        $it.schema = $sch;\\\\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\\\\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\\\\n        out += '  ' + (it.validate($it)) + ' ';\\\\n        $it.baseId = $currentBaseId;\\\\n        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';\\\\n        $closingBraces += '}';\\\\n      }\\\\n    }\\\\n    it.compositeRule = $it.compositeRule = $wasComposite;\\\\n    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\\\\n    if (it.createErrors !== false) {\\\\n      out += ' { keyword: \\\\\\\\'' + ('anyOf') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n      if (it.opts.messages !== false) {\\\\n        out += ' , message: \\\\\\\\'should match some schema in anyOf\\\\\\\\' ';\\\\n      }\\\\n      if (it.opts.verbose) {\\\\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n      }\\\\n      out += ' } ';\\\\n    } else {\\\\n      out += ' {} ';\\\\n    }\\\\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n      if (it.async) {\\\\n        out += ' throw new ValidationError(vErrors); ';\\\\n      } else {\\\\n        out += ' validate.errors = vErrors; return false; ';\\\\n      }\\\\n    }\\\\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\\\\n    if (it.opts.allErrors) {\\\\n      out += ' } ';\\\\n    }\\\\n    out = it.util.cleanUpCode(out);\\\\n  } else {\\\\n    if ($breakOnError) {\\\\n      out += ' if (true) { ';\\\\n    }\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9hbnlPZi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYW55T2YuanM/NjBmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2FueU9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIHZhciAkbm9FbXB0eVNjaGVtYSA9ICRzY2hlbWEuZXZlcnkoZnVuY3Rpb24oJHNjaCkge1xuICAgIHJldHVybiBpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2gsIGl0LlJVTEVTLmFsbCk7XG4gIH0pO1xuICBpZiAoJG5vRW1wdHlTY2hlbWEpIHtcbiAgICB2YXIgJGN1cnJlbnRCYXNlSWQgPSAkaXQuYmFzZUlkO1xuICAgIG91dCArPSAnIHZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7IHZhciAnICsgKCR2YWxpZCkgKyAnID0gZmFsc2U7ICAnO1xuICAgIHZhciAkd2FzQ29tcG9zaXRlID0gaXQuY29tcG9zaXRlUnVsZTtcbiAgICBpdC5jb21wb3NpdGVSdWxlID0gJGl0LmNvbXBvc2l0ZVJ1bGUgPSB0cnVlO1xuICAgIHZhciBhcnIxID0gJHNjaGVtYTtcbiAgICBpZiAoYXJyMSkge1xuICAgICAgdmFyICRzY2gsICRpID0gLTEsXG4gICAgICAgIGwxID0gYXJyMS5sZW5ndGggLSAxO1xuICAgICAgd2hpbGUgKCRpIDwgbDEpIHtcbiAgICAgICAgJHNjaCA9IGFycjFbJGkgKz0gMV07XG4gICAgICAgICRpdC5zY2hlbWEgPSAkc2NoO1xuICAgICAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoICsgJ1snICsgJGkgKyAnXSc7XG4gICAgICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGggKyAnLycgKyAkaTtcbiAgICAgICAgb3V0ICs9ICcgICcgKyAoaXQudmFsaWRhdGUoJGl0KSkgKyAnICc7XG4gICAgICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcbiAgICAgICAgb3V0ICs9ICcgJyArICgkdmFsaWQpICsgJyA9ICcgKyAoJHZhbGlkKSArICcgfHwgJyArICgkbmV4dFZhbGlkKSArICc7IGlmICghJyArICgkdmFsaWQpICsgJykgeyAnO1xuICAgICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XG4gICAgICB9XG4gICAgfVxuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XG4gICAgb3V0ICs9ICcgJyArICgkY2xvc2luZ0JyYWNlcykgKyAnIGlmICghJyArICgkdmFsaWQpICsgJykgeyAgIHZhciBlcnIgPSAgICc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgnYW55T2YnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7fSAnO1xuICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIG1hdGNoIHNvbWUgc2NoZW1hIGluIGFueU9mXFwnICc7XG4gICAgICB9XG4gICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyB9ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgfVxuICAgIG91dCArPSAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcih2RXJyb3JzKTsgJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IHZFcnJvcnM7IHJldHVybiBmYWxzZTsgJztcbiAgICAgIH1cbiAgICB9XG4gICAgb3V0ICs9ICcgfSBlbHNlIHsgIGVycm9ycyA9ICcgKyAoJGVycnMpICsgJzsgaWYgKHZFcnJvcnMgIT09IG51bGwpIHsgaWYgKCcgKyAoJGVycnMpICsgJykgdkVycm9ycy5sZW5ndGggPSAnICsgKCRlcnJzKSArICc7IGVsc2UgdkVycm9ycyA9IG51bGw7IH0gJztcbiAgICBpZiAoaXQub3B0cy5hbGxFcnJvcnMpIHtcbiAgICAgIG91dCArPSAnIH0gJztcbiAgICB9XG4gICAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xuICB9IGVsc2Uge1xuICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICBvdXQgKz0gJyBpZiAodHJ1ZSkgeyAnO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/anyOf.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/const.js\\\":\\n/*!*********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/const.js ***!\\n  \\\\*********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_const(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  if (!$isData) {\\\\n    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';\\\\n  }\\\\n  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ('const') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should be equal to constant\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += ' }';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jb25zdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY29uc3QuanM/MDMwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2NvbnN0KGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcbiAgICAkc2NoZW1hVmFsdWU7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcbiAgfSBlbHNlIHtcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xuICB9XG4gIGlmICghJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJzsnO1xuICB9XG4gIG91dCArPSAndmFyICcgKyAoJHZhbGlkKSArICcgPSBlcXVhbCgnICsgKCRkYXRhKSArICcsIHNjaGVtYScgKyAoJGx2bCkgKyAnKTsgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgJztcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCdjb25zdCcpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBiZSBlcXVhbCB0byBjb25zdGFudFxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJyB9JztcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/const.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/contains.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/contains.js ***!\\n  \\\\************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_contains(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  var $idx = 'i' + $lvl,\\\\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\\\\n    $nextData = 'data' + $dataNxt,\\\\n    $currentBaseId = it.baseId,\\\\n    $nonEmptySchema = it.util.schemaHasRules($schema, it.RULES.all);\\\\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\\\\n  if ($nonEmptySchema) {\\\\n    var $wasComposite = it.compositeRule;\\\\n    it.compositeRule = $it.compositeRule = true;\\\\n    $it.schema = $schema;\\\\n    $it.schemaPath = $schemaPath;\\\\n    $it.errSchemaPath = $errSchemaPath;\\\\n    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\\\\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\\\\n    var $passData = $data + '[' + $idx + ']';\\\\n    $it.dataPathArr[$dataNxt] = $idx;\\\\n    var $code = it.validate($it);\\\\n    $it.baseId = $currentBaseId;\\\\n    if (it.util.varOccurences($code, $nextData) < 2) {\\\\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n    } else {\\\\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n    }\\\\n    out += ' if (' + ($nextValid) + ') break; }  ';\\\\n    it.compositeRule = $it.compositeRule = $wasComposite;\\\\n    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';\\\\n  } else {\\\\n    out += ' if (' + ($data) + '.length == 0) {';\\\\n  }\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ('contains') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should contain a valid item\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += ' } else { ';\\\\n  if ($nonEmptySchema) {\\\\n    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\\\\n  }\\\\n  if (it.opts.allErrors) {\\\\n    out += ' } ';\\\\n  }\\\\n  out = it.util.cleanUpCode(out);\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jb250YWlucy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY29udGFpbnMuanM/NWNmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2NvbnRhaW5zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIHZhciAkaWR4ID0gJ2knICsgJGx2bCxcbiAgICAkZGF0YU54dCA9ICRpdC5kYXRhTGV2ZWwgPSBpdC5kYXRhTGV2ZWwgKyAxLFxuICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxuICAgICRjdXJyZW50QmFzZUlkID0gaXQuYmFzZUlkLFxuICAgICRub25FbXB0eVNjaGVtYSA9IGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaGVtYSwgaXQuUlVMRVMuYWxsKTtcbiAgb3V0ICs9ICd2YXIgJyArICgkZXJycykgKyAnID0gZXJyb3JzO3ZhciAnICsgKCR2YWxpZCkgKyAnOyc7XG4gIGlmICgkbm9uRW1wdHlTY2hlbWEpIHtcbiAgICB2YXIgJHdhc0NvbXBvc2l0ZSA9IGl0LmNvbXBvc2l0ZVJ1bGU7XG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcbiAgICAkaXQuc2NoZW1hID0gJHNjaGVtYTtcbiAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoO1xuICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHRWYWxpZCkgKyAnID0gZmFsc2U7IGZvciAodmFyICcgKyAoJGlkeCkgKyAnID0gMDsgJyArICgkaWR4KSArICcgPCAnICsgKCRkYXRhKSArICcubGVuZ3RoOyAnICsgKCRpZHgpICsgJysrKSB7ICc7XG4gICAgJGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aEV4cHIoaXQuZXJyb3JQYXRoLCAkaWR4LCBpdC5vcHRzLmpzb25Qb2ludGVycywgdHJ1ZSk7XG4gICAgdmFyICRwYXNzRGF0YSA9ICRkYXRhICsgJ1snICsgJGlkeCArICddJztcbiAgICAkaXQuZGF0YVBhdGhBcnJbJGRhdGFOeHRdID0gJGlkeDtcbiAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xuICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcbiAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xuICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XG4gICAgfVxuICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJykgYnJlYWs7IH0gICc7XG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gJHdhc0NvbXBvc2l0ZTtcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgeyc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcgaWYgKCcgKyAoJGRhdGEpICsgJy5sZW5ndGggPT0gMCkgeyc7XG4gIH1cbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCdjb250YWlucycpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBjb250YWluIGEgdmFsaWQgaXRlbVxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICB2YXIgX19lcnIgPSBvdXQ7XG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgIGlmIChpdC5hc3luYykge1xuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgfVxuICBvdXQgKz0gJyB9IGVsc2UgeyAnO1xuICBpZiAoJG5vbkVtcHR5U2NoZW1hKSB7XG4gICAgb3V0ICs9ICcgIGVycm9ycyA9ICcgKyAoJGVycnMpICsgJzsgaWYgKHZFcnJvcnMgIT09IG51bGwpIHsgaWYgKCcgKyAoJGVycnMpICsgJykgdkVycm9ycy5sZW5ndGggPSAnICsgKCRlcnJzKSArICc7IGVsc2UgdkVycm9ycyA9IG51bGw7IH0gJztcbiAgfVxuICBpZiAoaXQub3B0cy5hbGxFcnJvcnMpIHtcbiAgICBvdXQgKz0gJyB9ICc7XG4gIH1cbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/contains.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/custom.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/custom.js ***!\\n  \\\\**********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_custom(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $errorKeyword;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $rule = this,\\\\n    $definition = 'definition' + $lvl,\\\\n    $rDef = $rule.definition,\\\\n    $closingBraces = '';\\\\n  var $compile, $inline, $macro, $ruleValidate, $validateCode;\\\\n  if ($isData && $rDef.$data) {\\\\n    $validateCode = 'keywordValidate' + $lvl;\\\\n    var $validateSchema = $rDef.validateSchema;\\\\n    out += ' var ' + ($definition) + ' = RULES.custom[\\\\\\\\'' + ($keyword) + '\\\\\\\\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';\\\\n  } else {\\\\n    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);\\\\n    if (!$ruleValidate) return;\\\\n    $schemaValue = 'validate.schema' + $schemaPath;\\\\n    $validateCode = $ruleValidate.code;\\\\n    $compile = $rDef.compile;\\\\n    $inline = $rDef.inline;\\\\n    $macro = $rDef.macro;\\\\n  }\\\\n  var $ruleErrs = $validateCode + '.errors',\\\\n    $i = 'i' + $lvl,\\\\n    $ruleErr = 'ruleErr' + $lvl,\\\\n    $asyncKeyword = $rDef.async;\\\\n  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');\\\\n  if (!($inline || $macro)) {\\\\n    out += '' + ($ruleErrs) + ' = null;';\\\\n  }\\\\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\\\\n  if ($isData && $rDef.$data) {\\\\n    $closingBraces += '}';\\\\n    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';\\\\n    if ($validateSchema) {\\\\n      $closingBraces += '}';\\\\n      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';\\\\n    }\\\\n  }\\\\n  if ($inline) {\\\\n    if ($rDef.statements) {\\\\n      out += ' ' + ($ruleValidate.validate) + ' ';\\\\n    } else {\\\\n      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';\\\\n    }\\\\n  } else if ($macro) {\\\\n    var $it = it.util.copy(it);\\\\n    var $closingBraces = '';\\\\n    $it.level++;\\\\n    var $nextValid = 'valid' + $it.level;\\\\n    $it.schema = $ruleValidate.validate;\\\\n    $it.schemaPath = '';\\\\n    var $wasComposite = it.compositeRule;\\\\n    it.compositeRule = $it.compositeRule = true;\\\\n    var $code = it.validate($it).replace(/validate\\\\\\\\.schema/g, $validateCode);\\\\n    it.compositeRule = $it.compositeRule = $wasComposite;\\\\n    out += ' ' + ($code);\\\\n  } else {\\\\n    var $$outStack = $$outStack || [];\\\\n    $$outStack.push(out);\\\\n    out = '';\\\\n    out += '  ' + ($validateCode) + '.call( ';\\\\n    if (it.opts.passContext) {\\\\n      out += 'this';\\\\n    } else {\\\\n      out += 'self';\\\\n    }\\\\n    if ($compile || $rDef.schema === false) {\\\\n      out += ' , ' + ($data) + ' ';\\\\n    } else {\\\\n      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';\\\\n    }\\\\n    out += ' , (dataPath || \\\\\\\\'\\\\\\\\')';\\\\n    if (it.errorPath != '\\\\\\\"\\\\\\\"') {\\\\n      out += ' + ' + (it.errorPath);\\\\n    }\\\\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\\\\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\\\\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';\\\\n    var def_callRuleValidate = out;\\\\n    out = $$outStack.pop();\\\\n    if ($rDef.errors === false) {\\\\n      out += ' ' + ($valid) + ' = ';\\\\n      if ($asyncKeyword) {\\\\n        out += '' + (it.yieldAwait);\\\\n      }\\\\n      out += '' + (def_callRuleValidate) + '; ';\\\\n    } else {\\\\n      if ($asyncKeyword) {\\\\n        $ruleErrs = 'customErrors' + $lvl;\\\\n        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = ' + (it.yieldAwait) + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';\\\\n      } else {\\\\n        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';\\\\n      }\\\\n    }\\\\n  }\\\\n  if ($rDef.modifying) {\\\\n    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';\\\\n  }\\\\n  out += '' + ($closingBraces);\\\\n  if ($rDef.valid) {\\\\n    if ($breakOnError) {\\\\n      out += ' if (true) { ';\\\\n    }\\\\n  } else {\\\\n    out += ' if ( ';\\\\n    if ($rDef.valid === undefined) {\\\\n      out += ' !';\\\\n      if ($macro) {\\\\n        out += '' + ($nextValid);\\\\n      } else {\\\\n        out += '' + ($valid);\\\\n      }\\\\n    } else {\\\\n      out += ' ' + (!$rDef.valid) + ' ';\\\\n    }\\\\n    out += ') { ';\\\\n    $errorKeyword = $rule.keyword;\\\\n    var $$outStack = $$outStack || [];\\\\n    $$outStack.push(out);\\\\n    out = '';\\\\n    var $$outStack = $$outStack || [];\\\\n    $$outStack.push(out);\\\\n    out = ''; /* istanbul ignore else */\\\\n    if (it.createErrors !== false) {\\\\n      out += ' { keyword: \\\\\\\\'' + ($errorKeyword || 'custom') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\\\\\\\'' + ($rule.keyword) + '\\\\\\\\' } ';\\\\n      if (it.opts.messages !== false) {\\\\n        out += ' , message: \\\\\\\\'should pass \\\\\\\"' + ($rule.keyword) + '\\\\\\\" keyword validation\\\\\\\\' ';\\\\n      }\\\\n      if (it.opts.verbose) {\\\\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n      }\\\\n      out += ' } ';\\\\n    } else {\\\\n      out += ' {} ';\\\\n    }\\\\n    var __err = out;\\\\n    out = $$outStack.pop();\\\\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n      if (it.async) {\\\\n        out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n      } else {\\\\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n      }\\\\n    } else {\\\\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n    }\\\\n    var def_customError = out;\\\\n    out = $$outStack.pop();\\\\n    if ($inline) {\\\\n      if ($rDef.errors) {\\\\n        if ($rDef.errors != 'full') {\\\\n          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \\\\\\\"' + ($errSchemaPath) + '\\\\\\\"; } ';\\\\n          if (it.opts.verbose) {\\\\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\\\\n          }\\\\n          out += ' } ';\\\\n        }\\\\n      } else {\\\\n        if ($rDef.errors === false) {\\\\n          out += ' ' + (def_customError) + ' ';\\\\n        } else {\\\\n          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = \\\\\\\"' + ($errSchemaPath) + '\\\\\\\"; } ';\\\\n          if (it.opts.verbose) {\\\\n            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\\\\n          }\\\\n          out += ' } } ';\\\\n        }\\\\n      }\\\\n    } else if ($macro) {\\\\n      out += '   var err =   '; /* istanbul ignore else */\\\\n      if (it.createErrors !== false) {\\\\n        out += ' { keyword: \\\\\\\\'' + ($errorKeyword || 'custom') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \\\\\\\\'' + ($rule.keyword) + '\\\\\\\\' } ';\\\\n        if (it.opts.messages !== false) {\\\\n          out += ' , message: \\\\\\\\'should pass \\\\\\\"' + ($rule.keyword) + '\\\\\\\" keyword validation\\\\\\\\' ';\\\\n        }\\\\n        if (it.opts.verbose) {\\\\n          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n        }\\\\n        out += ' } ';\\\\n      } else {\\\\n        out += ' {} ';\\\\n      }\\\\n      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n        if (it.async) {\\\\n          out += ' throw new ValidationError(vErrors); ';\\\\n        } else {\\\\n          out += ' validate.errors = vErrors; return false; ';\\\\n        }\\\\n      }\\\\n    } else {\\\\n      if ($rDef.errors === false) {\\\\n        out += ' ' + (def_customError) + ' ';\\\\n      } else {\\\\n        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = \\\\\\\"' + ($errSchemaPath) + '\\\\\\\";  ';\\\\n        if (it.opts.verbose) {\\\\n          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';\\\\n        }\\\\n        out += ' } } else { ' + (def_customError) + ' } ';\\\\n      }\\\\n    }\\\\n    out += ' } ';\\\\n    if ($breakOnError) {\\\\n      out += ' else { ';\\\\n    }\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/custom.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/dependencies.js\\\":\\n/*!****************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/dependencies.js ***!\\n  \\\\****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_dependencies(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  var $schemaDeps = {},\\\\n    $propertyDeps = {},\\\\n    $ownProperties = it.opts.ownProperties;\\\\n  for ($property in $schema) {\\\\n    var $sch = $schema[$property];\\\\n    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;\\\\n    $deps[$property] = $sch;\\\\n  }\\\\n  out += 'var ' + ($errs) + ' = errors;';\\\\n  var $currentErrorPath = it.errorPath;\\\\n  out += 'var missing' + ($lvl) + ';';\\\\n  for (var $property in $propertyDeps) {\\\\n    $deps = $propertyDeps[$property];\\\\n    if ($deps.length) {\\\\n      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\\\\n      if ($ownProperties) {\\\\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($property)) + '\\\\\\\\') ';\\\\n      }\\\\n      if ($breakOnError) {\\\\n        out += ' && ( ';\\\\n        var arr1 = $deps;\\\\n        if (arr1) {\\\\n          var $propertyKey, $i = -1,\\\\n            l1 = arr1.length - 1;\\\\n          while ($i < l1) {\\\\n            $propertyKey = arr1[$i += 1];\\\\n            if ($i) {\\\\n              out += ' || ';\\\\n            }\\\\n            var $prop = it.util.getProperty($propertyKey),\\\\n              $useData = $data + $prop;\\\\n            out += ' ( ( ' + ($useData) + ' === undefined ';\\\\n            if ($ownProperties) {\\\\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($propertyKey)) + '\\\\\\\\') ';\\\\n            }\\\\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\\\\n          }\\\\n        }\\\\n        out += ')) {  ';\\\\n        var $propertyPath = 'missing' + $lvl,\\\\n          $missingProperty = '\\\\\\\\' + ' + $propertyPath + ' + \\\\\\\\'';\\\\n        if (it.opts._errorDataPathProperty) {\\\\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\\\\n        }\\\\n        var $$outStack = $$outStack || [];\\\\n        $$outStack.push(out);\\\\n        out = ''; /* istanbul ignore else */\\\\n        if (it.createErrors !== false) {\\\\n          out += ' { keyword: \\\\\\\\'' + ('dependencies') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\\\\\\\'' + (it.util.escapeQuotes($property)) + '\\\\\\\\', missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\', depsCount: ' + ($deps.length) + ', deps: \\\\\\\\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\\\\\\\", \\\\\\\"))) + '\\\\\\\\' } ';\\\\n          if (it.opts.messages !== false) {\\\\n            out += ' , message: \\\\\\\\'should have ';\\\\n            if ($deps.length == 1) {\\\\n              out += 'property ' + (it.util.escapeQuotes($deps[0]));\\\\n            } else {\\\\n              out += 'properties ' + (it.util.escapeQuotes($deps.join(\\\\\\\", \\\\\\\")));\\\\n            }\\\\n            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\\\\\\\' ';\\\\n          }\\\\n          if (it.opts.verbose) {\\\\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n          }\\\\n          out += ' } ';\\\\n        } else {\\\\n          out += ' {} ';\\\\n        }\\\\n        var __err = out;\\\\n        out = $$outStack.pop();\\\\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n          if (it.async) {\\\\n            out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n          } else {\\\\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n          }\\\\n        } else {\\\\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n        }\\\\n      } else {\\\\n        out += ' ) { ';\\\\n        var arr2 = $deps;\\\\n        if (arr2) {\\\\n          var $propertyKey, i2 = -1,\\\\n            l2 = arr2.length - 1;\\\\n          while (i2 < l2) {\\\\n            $propertyKey = arr2[i2 += 1];\\\\n            var $prop = it.util.getProperty($propertyKey),\\\\n              $missingProperty = it.util.escapeQuotes($propertyKey),\\\\n              $useData = $data + $prop;\\\\n            if (it.opts._errorDataPathProperty) {\\\\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\\\\n            }\\\\n            out += ' if ( ' + ($useData) + ' === undefined ';\\\\n            if ($ownProperties) {\\\\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($propertyKey)) + '\\\\\\\\') ';\\\\n            }\\\\n            out += ') {  var err =   '; /* istanbul ignore else */\\\\n            if (it.createErrors !== false) {\\\\n              out += ' { keyword: \\\\\\\\'' + ('dependencies') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \\\\\\\\'' + (it.util.escapeQuotes($property)) + '\\\\\\\\', missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\', depsCount: ' + ($deps.length) + ', deps: \\\\\\\\'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(\\\\\\\", \\\\\\\"))) + '\\\\\\\\' } ';\\\\n              if (it.opts.messages !== false) {\\\\n                out += ' , message: \\\\\\\\'should have ';\\\\n                if ($deps.length == 1) {\\\\n                  out += 'property ' + (it.util.escapeQuotes($deps[0]));\\\\n                } else {\\\\n                  out += 'properties ' + (it.util.escapeQuotes($deps.join(\\\\\\\", \\\\\\\")));\\\\n                }\\\\n                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\\\\\\\\' ';\\\\n              }\\\\n              if (it.opts.verbose) {\\\\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n              }\\\\n              out += ' } ';\\\\n            } else {\\\\n              out += ' {} ';\\\\n            }\\\\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\\\\n          }\\\\n        }\\\\n      }\\\\n      out += ' }   ';\\\\n      if ($breakOnError) {\\\\n        $closingBraces += '}';\\\\n        out += ' else { ';\\\\n      }\\\\n    }\\\\n  }\\\\n  it.errorPath = $currentErrorPath;\\\\n  var $currentBaseId = $it.baseId;\\\\n  for (var $property in $schemaDeps) {\\\\n    var $sch = $schemaDeps[$property];\\\\n    if (it.util.schemaHasRules($sch, it.RULES.all)) {\\\\n      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';\\\\n      if ($ownProperties) {\\\\n        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($property)) + '\\\\\\\\') ';\\\\n      }\\\\n      out += ') { ';\\\\n      $it.schema = $sch;\\\\n      $it.schemaPath = $schemaPath + it.util.getProperty($property);\\\\n      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);\\\\n      out += '  ' + (it.validate($it)) + ' ';\\\\n      $it.baseId = $currentBaseId;\\\\n      out += ' }  ';\\\\n      if ($breakOnError) {\\\\n        out += ' if (' + ($nextValid) + ') { ';\\\\n        $closingBraces += '}';\\\\n      }\\\\n    }\\\\n  }\\\\n  if ($breakOnError) {\\\\n    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\\\\n  }\\\\n  out = it.util.cleanUpCode(out);\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/dependencies.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/enum.js\\\":\\n/*!********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/enum.js ***!\\n  \\\\********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_enum(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $i = 'i' + $lvl,\\\\n    $vSchema = 'schema' + $lvl;\\\\n  if (!$isData) {\\\\n    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';\\\\n  }\\\\n  out += 'var ' + ($valid) + ';';\\\\n  if ($isData) {\\\\n    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\\\\n  }\\\\n  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';\\\\n  if ($isData) {\\\\n    out += '  }  ';\\\\n  }\\\\n  out += ' if (!' + ($valid) + ') {   ';\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ('enum') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should be equal to one of the allowed values\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += ' }';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9lbnVtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9lbnVtLmpzP2U4YzIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9lbnVtKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcbiAgICAkc2NoZW1hVmFsdWU7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcbiAgfSBlbHNlIHtcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xuICB9XG4gIHZhciAkaSA9ICdpJyArICRsdmwsXG4gICAgJHZTY2hlbWEgPSAnc2NoZW1hJyArICRsdmw7XG4gIGlmICghJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciAnICsgKCR2U2NoZW1hKSArICcgPSB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICc7JztcbiAgfVxuICBvdXQgKz0gJ3ZhciAnICsgKCR2YWxpZCkgKyAnOyc7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgaWYgKHNjaGVtYScgKyAoJGx2bCkgKyAnID09PSB1bmRlZmluZWQpICcgKyAoJHZhbGlkKSArICcgPSB0cnVlOyBlbHNlIGlmICghQXJyYXkuaXNBcnJheShzY2hlbWEnICsgKCRsdmwpICsgJykpICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgZWxzZSB7JztcbiAgfVxuICBvdXQgKz0gJycgKyAoJHZhbGlkKSArICcgPSBmYWxzZTtmb3IgKHZhciAnICsgKCRpKSArICc9MDsgJyArICgkaSkgKyAnPCcgKyAoJHZTY2hlbWEpICsgJy5sZW5ndGg7ICcgKyAoJGkpICsgJysrKSBpZiAoZXF1YWwoJyArICgkZGF0YSkgKyAnLCAnICsgKCR2U2NoZW1hKSArICdbJyArICgkaSkgKyAnXSkpIHsgJyArICgkdmFsaWQpICsgJyA9IHRydWU7IGJyZWFrOyB9JztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAgfSAgJztcbiAgfVxuICBvdXQgKz0gJyBpZiAoIScgKyAoJHZhbGlkKSArICcpIHsgICAnO1xuICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XG4gICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ2VudW0nKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IGFsbG93ZWRWYWx1ZXM6IHNjaGVtYScgKyAoJGx2bCkgKyAnIH0gJztcbiAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIGJlIGVxdWFsIHRvIG9uZSBvZiB0aGUgYWxsb3dlZCB2YWx1ZXNcXCcgJztcbiAgICB9XG4gICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xuICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICB9XG4gICAgb3V0ICs9ICcgfSAnO1xuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHt9ICc7XG4gIH1cbiAgdmFyIF9fZXJyID0gb3V0O1xuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gIH1cbiAgb3V0ICs9ICcgfSc7XG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/enum.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/format.js\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/format.js ***!\\n  \\\\**********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_format(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  if (it.opts.format === false) {\\\\n    if ($breakOnError) {\\\\n      out += ' if (true) { ';\\\\n    }\\\\n    return out;\\\\n  }\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $unknownFormats = it.opts.unknownFormats,\\\\n    $allowUnknown = Array.isArray($unknownFormats);\\\\n  if ($isData) {\\\\n    var $format = 'format' + $lvl,\\\\n      $isObject = 'isObject' + $lvl,\\\\n      $formatType = 'formatType' + $lvl;\\\\n    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \\\\\\\\'object\\\\\\\\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \\\\\\\\'string\\\\\\\\'; if (' + ($isObject) + ') { ';\\\\n    if (it.async) {\\\\n      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';\\\\n    }\\\\n    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';\\\\n    if ($isData) {\\\\n      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'string\\\\\\\\') || ';\\\\n    }\\\\n    out += ' (';\\\\n    if ($unknownFormats != 'ignore') {\\\\n      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';\\\\n      if ($allowUnknown) {\\\\n        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';\\\\n      }\\\\n      out += ') || ';\\\\n    }\\\\n    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \\\\\\\\'' + ($ruleType) + '\\\\\\\\' && !(typeof ' + ($format) + ' == \\\\\\\\'function\\\\\\\\' ? ';\\\\n    if (it.async) {\\\\n      out += ' (async' + ($lvl) + ' ? ' + (it.yieldAwait) + ' ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';\\\\n    } else {\\\\n      out += ' ' + ($format) + '(' + ($data) + ') ';\\\\n    }\\\\n    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';\\\\n  } else {\\\\n    var $format = it.formats[$schema];\\\\n    if (!$format) {\\\\n      if ($unknownFormats == 'ignore') {\\\\n        console.warn('unknown format \\\\\\\"' + $schema + '\\\\\\\" ignored in schema at path \\\\\\\"' + it.errSchemaPath + '\\\\\\\"');\\\\n        if ($breakOnError) {\\\\n          out += ' if (true) { ';\\\\n        }\\\\n        return out;\\\\n      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {\\\\n        if ($breakOnError) {\\\\n          out += ' if (true) { ';\\\\n        }\\\\n        return out;\\\\n      } else {\\\\n        throw new Error('unknown format \\\\\\\"' + $schema + '\\\\\\\" is used in schema at path \\\\\\\"' + it.errSchemaPath + '\\\\\\\"');\\\\n      }\\\\n    }\\\\n    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;\\\\n    var $formatType = $isObject && $format.type || 'string';\\\\n    if ($isObject) {\\\\n      var $async = $format.async === true;\\\\n      $format = $format.validate;\\\\n    }\\\\n    if ($formatType != $ruleType) {\\\\n      if ($breakOnError) {\\\\n        out += ' if (true) { ';\\\\n      }\\\\n      return out;\\\\n    }\\\\n    if ($async) {\\\\n      if (!it.async) throw new Error('async format in sync schema');\\\\n      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';\\\\n      out += ' if (!(' + (it.yieldAwait) + ' ' + ($formatRef) + '(' + ($data) + '))) { ';\\\\n    } else {\\\\n      out += ' if (! ';\\\\n      var $formatRef = 'formats' + it.util.getProperty($schema);\\\\n      if ($isObject) $formatRef += '.validate';\\\\n      if (typeof $format == 'function') {\\\\n        out += ' ' + ($formatRef) + '(' + ($data) + ') ';\\\\n      } else {\\\\n        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';\\\\n      }\\\\n      out += ') { ';\\\\n    }\\\\n  }\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ('format') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';\\\\n    if ($isData) {\\\\n      out += '' + ($schemaValue);\\\\n    } else {\\\\n      out += '' + (it.util.toQuotedString($schema));\\\\n    }\\\\n    out += '  } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should match format \\\\\\\"';\\\\n      if ($isData) {\\\\n        out += '\\\\\\\\' + ' + ($schemaValue) + ' + \\\\\\\\'';\\\\n      } else {\\\\n        out += '' + (it.util.escapeQuotes($schema));\\\\n      }\\\\n      out += '\\\\\\\"\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema:  ';\\\\n      if ($isData) {\\\\n        out += 'validate.schema' + ($schemaPath);\\\\n      } else {\\\\n        out += '' + (it.util.toQuotedString($schema));\\\\n      }\\\\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += ' } ';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/format.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/items.js\\\":\\n/*!*********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/items.js ***!\\n  \\\\*********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_items(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  var $idx = 'i' + $lvl,\\\\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\\\\n    $nextData = 'data' + $dataNxt,\\\\n    $currentBaseId = it.baseId;\\\\n  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';\\\\n  if (Array.isArray($schema)) {\\\\n    var $additionalItems = it.schema.additionalItems;\\\\n    if ($additionalItems === false) {\\\\n      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';\\\\n      var $currErrSchemaPath = $errSchemaPath;\\\\n      $errSchemaPath = it.errSchemaPath + '/additionalItems';\\\\n      out += '  if (!' + ($valid) + ') {   ';\\\\n      var $$outStack = $$outStack || [];\\\\n      $$outStack.push(out);\\\\n      out = ''; /* istanbul ignore else */\\\\n      if (it.createErrors !== false) {\\\\n        out += ' { keyword: \\\\\\\\'' + ('additionalItems') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';\\\\n        if (it.opts.messages !== false) {\\\\n          out += ' , message: \\\\\\\\'should NOT have more than ' + ($schema.length) + ' items\\\\\\\\' ';\\\\n        }\\\\n        if (it.opts.verbose) {\\\\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n        }\\\\n        out += ' } ';\\\\n      } else {\\\\n        out += ' {} ';\\\\n      }\\\\n      var __err = out;\\\\n      out = $$outStack.pop();\\\\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n        if (it.async) {\\\\n          out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n        } else {\\\\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n        }\\\\n      } else {\\\\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n      }\\\\n      out += ' } ';\\\\n      $errSchemaPath = $currErrSchemaPath;\\\\n      if ($breakOnError) {\\\\n        $closingBraces += '}';\\\\n        out += ' else { ';\\\\n      }\\\\n    }\\\\n    var arr1 = $schema;\\\\n    if (arr1) {\\\\n      var $sch, $i = -1,\\\\n        l1 = arr1.length - 1;\\\\n      while ($i < l1) {\\\\n        $sch = arr1[$i += 1];\\\\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\\\\n          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';\\\\n          var $passData = $data + '[' + $i + ']';\\\\n          $it.schema = $sch;\\\\n          $it.schemaPath = $schemaPath + '[' + $i + ']';\\\\n          $it.errSchemaPath = $errSchemaPath + '/' + $i;\\\\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);\\\\n          $it.dataPathArr[$dataNxt] = $i;\\\\n          var $code = it.validate($it);\\\\n          $it.baseId = $currentBaseId;\\\\n          if (it.util.varOccurences($code, $nextData) < 2) {\\\\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n          } else {\\\\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n          }\\\\n          out += ' }  ';\\\\n          if ($breakOnError) {\\\\n            out += ' if (' + ($nextValid) + ') { ';\\\\n            $closingBraces += '}';\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n    if (typeof $additionalItems == 'object' && it.util.schemaHasRules($additionalItems, it.RULES.all)) {\\\\n      $it.schema = $additionalItems;\\\\n      $it.schemaPath = it.schemaPath + '.additionalItems';\\\\n      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';\\\\n      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\\\\n      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\\\\n      var $passData = $data + '[' + $idx + ']';\\\\n      $it.dataPathArr[$dataNxt] = $idx;\\\\n      var $code = it.validate($it);\\\\n      $it.baseId = $currentBaseId;\\\\n      if (it.util.varOccurences($code, $nextData) < 2) {\\\\n        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n      } else {\\\\n        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n      }\\\\n      if ($breakOnError) {\\\\n        out += ' if (!' + ($nextValid) + ') break; ';\\\\n      }\\\\n      out += ' } }  ';\\\\n      if ($breakOnError) {\\\\n        out += ' if (' + ($nextValid) + ') { ';\\\\n        $closingBraces += '}';\\\\n      }\\\\n    }\\\\n  } else if (it.util.schemaHasRules($schema, it.RULES.all)) {\\\\n    $it.schema = $schema;\\\\n    $it.schemaPath = $schemaPath;\\\\n    $it.errSchemaPath = $errSchemaPath;\\\\n    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';\\\\n    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);\\\\n    var $passData = $data + '[' + $idx + ']';\\\\n    $it.dataPathArr[$dataNxt] = $idx;\\\\n    var $code = it.validate($it);\\\\n    $it.baseId = $currentBaseId;\\\\n    if (it.util.varOccurences($code, $nextData) < 2) {\\\\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n    } else {\\\\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n    }\\\\n    if ($breakOnError) {\\\\n      out += ' if (!' + ($nextValid) + ') break; ';\\\\n    }\\\\n    out += ' }';\\\\n  }\\\\n  if ($breakOnError) {\\\\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\\\\n  }\\\\n  out = it.util.cleanUpCode(out);\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/items.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/multipleOf.js\\\":\\n/*!**************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/multipleOf.js ***!\\n  \\\\**************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_multipleOf(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  out += 'var division' + ($lvl) + ';if (';\\\\n  if ($isData) {\\\\n    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \\\\\\\\'number\\\\\\\\' || ';\\\\n  }\\\\n  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';\\\\n  if (it.opts.multipleOfPrecision) {\\\\n    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';\\\\n  } else {\\\\n    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';\\\\n  }\\\\n  out += ' ) ';\\\\n  if ($isData) {\\\\n    out += '  )  ';\\\\n  }\\\\n  out += ' ) {   ';\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ('multipleOf') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should be multiple of ';\\\\n      if ($isData) {\\\\n        out += '\\\\\\\\' + ' + ($schemaValue);\\\\n      } else {\\\\n        out += '' + ($schemaValue) + '\\\\\\\\'';\\\\n      }\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema:  ';\\\\n      if ($isData) {\\\\n        out += 'validate.schema' + ($schemaPath);\\\\n      } else {\\\\n        out += '' + ($schema);\\\\n      }\\\\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += '} ';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9tdWx0aXBsZU9mLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9tdWx0aXBsZU9mLmpzP2E5MzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9tdWx0aXBsZU9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXG4gICAgJHNjaGVtYVZhbHVlO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XG4gIH0gZWxzZSB7XG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcbiAgfVxuICBvdXQgKz0gJ3ZhciBkaXZpc2lvbicgKyAoJGx2bCkgKyAnO2lmICgnO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnICcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT09IHVuZGVmaW5lZCAmJiAoIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ251bWJlclxcJyB8fCAnO1xuICB9XG4gIG91dCArPSAnIChkaXZpc2lvbicgKyAoJGx2bCkgKyAnID0gJyArICgkZGF0YSkgKyAnIC8gJyArICgkc2NoZW1hVmFsdWUpICsgJywgJztcbiAgaWYgKGl0Lm9wdHMubXVsdGlwbGVPZlByZWNpc2lvbikge1xuICAgIG91dCArPSAnIE1hdGguYWJzKE1hdGgucm91bmQoZGl2aXNpb24nICsgKCRsdmwpICsgJykgLSBkaXZpc2lvbicgKyAoJGx2bCkgKyAnKSA+IDFlLScgKyAoaXQub3B0cy5tdWx0aXBsZU9mUHJlY2lzaW9uKSArICcgJztcbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyBkaXZpc2lvbicgKyAoJGx2bCkgKyAnICE9PSBwYXJzZUludChkaXZpc2lvbicgKyAoJGx2bCkgKyAnKSAnO1xuICB9XG4gIG91dCArPSAnICkgJztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAgKSAgJztcbiAgfVxuICBvdXQgKz0gJyApIHsgICAnO1xuICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XG4gICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ211bHRpcGxlT2YnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IG11bHRpcGxlT2Y6ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgfSAnO1xuICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgYmUgbXVsdGlwbGUgb2YgJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWFWYWx1ZSkgKyAnXFwnJztcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xuICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6ICAnO1xuICAgICAgaWYgKCRpc0RhdGEpIHtcbiAgICAgICAgb3V0ICs9ICd2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG91dCArPSAnJyArICgkc2NoZW1hKTtcbiAgICAgIH1cbiAgICAgIG91dCArPSAnICAgICAgICAgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgfVxuICAgIG91dCArPSAnIH0gJztcbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB7fSAnO1xuICB9XG4gIHZhciBfX2VyciA9IG91dDtcbiAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcbiAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXG4gICAgaWYgKGl0LmFzeW5jKSB7XG4gICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICB9XG4gIG91dCArPSAnfSAnO1xuICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgIG91dCArPSAnIGVsc2UgeyAnO1xuICB9XG4gIHJldHVybiBvdXQ7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/multipleOf.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/not.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/not.js ***!\\n  \\\\*******************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_not(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\\\\n    $it.schema = $schema;\\\\n    $it.schemaPath = $schemaPath;\\\\n    $it.errSchemaPath = $errSchemaPath;\\\\n    out += ' var ' + ($errs) + ' = errors;  ';\\\\n    var $wasComposite = it.compositeRule;\\\\n    it.compositeRule = $it.compositeRule = true;\\\\n    $it.createErrors = false;\\\\n    var $allErrorsOption;\\\\n    if ($it.opts.allErrors) {\\\\n      $allErrorsOption = $it.opts.allErrors;\\\\n      $it.opts.allErrors = false;\\\\n    }\\\\n    out += ' ' + (it.validate($it)) + ' ';\\\\n    $it.createErrors = true;\\\\n    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;\\\\n    it.compositeRule = $it.compositeRule = $wasComposite;\\\\n    out += ' if (' + ($nextValid) + ') {   ';\\\\n    var $$outStack = $$outStack || [];\\\\n    $$outStack.push(out);\\\\n    out = ''; /* istanbul ignore else */\\\\n    if (it.createErrors !== false) {\\\\n      out += ' { keyword: \\\\\\\\'' + ('not') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n      if (it.opts.messages !== false) {\\\\n        out += ' , message: \\\\\\\\'should NOT be valid\\\\\\\\' ';\\\\n      }\\\\n      if (it.opts.verbose) {\\\\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n      }\\\\n      out += ' } ';\\\\n    } else {\\\\n      out += ' {} ';\\\\n    }\\\\n    var __err = out;\\\\n    out = $$outStack.pop();\\\\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n      if (it.async) {\\\\n        out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n      } else {\\\\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n      }\\\\n    } else {\\\\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n    }\\\\n    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';\\\\n    if (it.opts.allErrors) {\\\\n      out += ' } ';\\\\n    }\\\\n  } else {\\\\n    out += '  var err =   '; /* istanbul ignore else */\\\\n    if (it.createErrors !== false) {\\\\n      out += ' { keyword: \\\\\\\\'' + ('not') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n      if (it.opts.messages !== false) {\\\\n        out += ' , message: \\\\\\\\'should NOT be valid\\\\\\\\' ';\\\\n      }\\\\n      if (it.opts.verbose) {\\\\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n      }\\\\n      out += ' } ';\\\\n    } else {\\\\n      out += ' {} ';\\\\n    }\\\\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n    if ($breakOnError) {\\\\n      out += ' if (false) { ';\\\\n    }\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9ub3QuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL25vdC5qcz8wMGY1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfbm90KGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkZXJycyA9ICdlcnJzX18nICsgJGx2bDtcbiAgdmFyICRpdCA9IGl0LnV0aWwuY29weShpdCk7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2hlbWEsIGl0LlJVTEVTLmFsbCkpIHtcbiAgICAkaXQuc2NoZW1hID0gJHNjaGVtYTtcbiAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoO1xuICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJGVycnMpICsgJyA9IGVycm9yczsgICc7XG4gICAgdmFyICR3YXNDb21wb3NpdGUgPSBpdC5jb21wb3NpdGVSdWxlO1xuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9IHRydWU7XG4gICAgJGl0LmNyZWF0ZUVycm9ycyA9IGZhbHNlO1xuICAgIHZhciAkYWxsRXJyb3JzT3B0aW9uO1xuICAgIGlmICgkaXQub3B0cy5hbGxFcnJvcnMpIHtcbiAgICAgICRhbGxFcnJvcnNPcHRpb24gPSAkaXQub3B0cy5hbGxFcnJvcnM7XG4gICAgICAkaXQub3B0cy5hbGxFcnJvcnMgPSBmYWxzZTtcbiAgICB9XG4gICAgb3V0ICs9ICcgJyArIChpdC52YWxpZGF0ZSgkaXQpKSArICcgJztcbiAgICAkaXQuY3JlYXRlRXJyb3JzID0gdHJ1ZTtcbiAgICBpZiAoJGFsbEVycm9yc09wdGlvbikgJGl0Lm9wdHMuYWxsRXJyb3JzID0gJGFsbEVycm9yc09wdGlvbjtcbiAgICBpdC5jb21wb3NpdGVSdWxlID0gJGl0LmNvbXBvc2l0ZVJ1bGUgPSAkd2FzQ29tcG9zaXRlO1xuICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJykgeyAgICc7XG4gICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ25vdCcpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XG4gICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXCdzaG91bGQgTk9UIGJlIHZhbGlkXFwnICc7XG4gICAgICB9XG4gICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyB9ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgfVxuICAgIHZhciBfX2VyciA9IG91dDtcbiAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGl0LmFzeW5jKSB7XG4gICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9IGVsc2UgeyAgZXJyb3JzID0gJyArICgkZXJycykgKyAnOyBpZiAodkVycm9ycyAhPT0gbnVsbCkgeyBpZiAoJyArICgkZXJycykgKyAnKSB2RXJyb3JzLmxlbmd0aCA9ICcgKyAoJGVycnMpICsgJzsgZWxzZSB2RXJyb3JzID0gbnVsbDsgfSAnO1xuICAgIGlmIChpdC5vcHRzLmFsbEVycm9ycykge1xuICAgICAgb3V0ICs9ICcgfSAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXCcnICsgKCdub3QnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7fSAnO1xuICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIE5PVCBiZSB2YWxpZFxcJyAnO1xuICAgICAgfVxuICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xuICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgfSAnO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJyB7fSAnO1xuICAgIH1cbiAgICBvdXQgKz0gJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICBvdXQgKz0gJyBpZiAoZmFsc2UpIHsgJztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/not.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/oneOf.js\\\":\\n/*!*********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/oneOf.js ***!\\n  \\\\*********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_oneOf(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  out += 'var ' + ($errs) + ' = errors;var prevValid' + ($lvl) + ' = false;var ' + ($valid) + ' = false;';\\\\n  var $currentBaseId = $it.baseId;\\\\n  var $wasComposite = it.compositeRule;\\\\n  it.compositeRule = $it.compositeRule = true;\\\\n  var arr1 = $schema;\\\\n  if (arr1) {\\\\n    var $sch, $i = -1,\\\\n      l1 = arr1.length - 1;\\\\n    while ($i < l1) {\\\\n      $sch = arr1[$i += 1];\\\\n      if (it.util.schemaHasRules($sch, it.RULES.all)) {\\\\n        $it.schema = $sch;\\\\n        $it.schemaPath = $schemaPath + '[' + $i + ']';\\\\n        $it.errSchemaPath = $errSchemaPath + '/' + $i;\\\\n        out += '  ' + (it.validate($it)) + ' ';\\\\n        $it.baseId = $currentBaseId;\\\\n      } else {\\\\n        out += ' var ' + ($nextValid) + ' = true; ';\\\\n      }\\\\n      if ($i) {\\\\n        out += ' if (' + ($nextValid) + ' && prevValid' + ($lvl) + ') ' + ($valid) + ' = false; else { ';\\\\n        $closingBraces += '}';\\\\n      }\\\\n      out += ' if (' + ($nextValid) + ') ' + ($valid) + ' = prevValid' + ($lvl) + ' = true;';\\\\n    }\\\\n  }\\\\n  it.compositeRule = $it.compositeRule = $wasComposite;\\\\n  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ('oneOf') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should match exactly one schema in oneOf\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError(vErrors); ';\\\\n    } else {\\\\n      out += ' validate.errors = vErrors; return false; ';\\\\n    }\\\\n  }\\\\n  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';\\\\n  if (it.opts.allErrors) {\\\\n    out += ' } ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9vbmVPZi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvb25lT2YuanM/NGRiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX29uZU9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XG4gICRpdC5sZXZlbCsrO1xuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XG4gIG91dCArPSAndmFyICcgKyAoJGVycnMpICsgJyA9IGVycm9yczt2YXIgcHJldlZhbGlkJyArICgkbHZsKSArICcgPSBmYWxzZTt2YXIgJyArICgkdmFsaWQpICsgJyA9IGZhbHNlOyc7XG4gIHZhciAkY3VycmVudEJhc2VJZCA9ICRpdC5iYXNlSWQ7XG4gIHZhciAkd2FzQ29tcG9zaXRlID0gaXQuY29tcG9zaXRlUnVsZTtcbiAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcbiAgdmFyIGFycjEgPSAkc2NoZW1hO1xuICBpZiAoYXJyMSkge1xuICAgIHZhciAkc2NoLCAkaSA9IC0xLFxuICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XG4gICAgd2hpbGUgKCRpIDwgbDEpIHtcbiAgICAgICRzY2ggPSBhcnIxWyRpICs9IDFdO1xuICAgICAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKSkge1xuICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcbiAgICAgICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aCArICdbJyArICRpICsgJ10nO1xuICAgICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoICsgJy8nICsgJGk7XG4gICAgICAgIG91dCArPSAnICAnICsgKGl0LnZhbGlkYXRlKCRpdCkpICsgJyAnO1xuICAgICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkbmV4dFZhbGlkKSArICcgPSB0cnVlOyAnO1xuICAgICAgfVxuICAgICAgaWYgKCRpKSB7XG4gICAgICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJyAmJiBwcmV2VmFsaWQnICsgKCRsdmwpICsgJykgJyArICgkdmFsaWQpICsgJyA9IGZhbHNlOyBlbHNlIHsgJztcbiAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSAnICsgKCR2YWxpZCkgKyAnID0gcHJldlZhbGlkJyArICgkbHZsKSArICcgPSB0cnVlOyc7XG4gICAgfVxuICB9XG4gIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XG4gIG91dCArPSAnJyArICgkY2xvc2luZ0JyYWNlcykgKyAnaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ29uZU9mJykgKyAnXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXCdcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczoge30gJztcbiAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnc2hvdWxkIG1hdGNoIGV4YWN0bHkgb25lIHNjaGVtYSBpbiBvbmVPZlxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gIH0gZWxzZSB7XG4gICAgb3V0ICs9ICcge30gJztcbiAgfVxuICBvdXQgKz0gJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IodkVycm9ycyk7ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IHZFcnJvcnM7IHJldHVybiBmYWxzZTsgJztcbiAgICB9XG4gIH1cbiAgb3V0ICs9ICd9IGVsc2UgeyAgZXJyb3JzID0gJyArICgkZXJycykgKyAnOyBpZiAodkVycm9ycyAhPT0gbnVsbCkgeyBpZiAoJyArICgkZXJycykgKyAnKSB2RXJyb3JzLmxlbmd0aCA9ICcgKyAoJGVycnMpICsgJzsgZWxzZSB2RXJyb3JzID0gbnVsbDsgfSc7XG4gIGlmIChpdC5vcHRzLmFsbEVycm9ycykge1xuICAgIG91dCArPSAnIH0gJztcbiAgfVxuICByZXR1cm4gb3V0O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/oneOf.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/pattern.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/pattern.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_pattern(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);\\\\n  out += 'if ( ';\\\\n  if ($isData) {\\\\n    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \\\\\\\\'string\\\\\\\\') || ';\\\\n  }\\\\n  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';\\\\n  var $$outStack = $$outStack || [];\\\\n  $$outStack.push(out);\\\\n  out = ''; /* istanbul ignore else */\\\\n  if (it.createErrors !== false) {\\\\n    out += ' { keyword: \\\\\\\\'' + ('pattern') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';\\\\n    if ($isData) {\\\\n      out += '' + ($schemaValue);\\\\n    } else {\\\\n      out += '' + (it.util.toQuotedString($schema));\\\\n    }\\\\n    out += '  } ';\\\\n    if (it.opts.messages !== false) {\\\\n      out += ' , message: \\\\\\\\'should match pattern \\\\\\\"';\\\\n      if ($isData) {\\\\n        out += '\\\\\\\\' + ' + ($schemaValue) + ' + \\\\\\\\'';\\\\n      } else {\\\\n        out += '' + (it.util.escapeQuotes($schema));\\\\n      }\\\\n      out += '\\\\\\\"\\\\\\\\' ';\\\\n    }\\\\n    if (it.opts.verbose) {\\\\n      out += ' , schema:  ';\\\\n      if ($isData) {\\\\n        out += 'validate.schema' + ($schemaPath);\\\\n      } else {\\\\n        out += '' + (it.util.toQuotedString($schema));\\\\n      }\\\\n      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n    }\\\\n    out += ' } ';\\\\n  } else {\\\\n    out += ' {} ';\\\\n  }\\\\n  var __err = out;\\\\n  out = $$outStack.pop();\\\\n  if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n    if (it.async) {\\\\n      out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n    } else {\\\\n      out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n    }\\\\n  } else {\\\\n    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n  }\\\\n  out += '} ';\\\\n  if ($breakOnError) {\\\\n    out += ' else { ';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wYXR0ZXJuLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wYXR0ZXJuLmpzPzcxNGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9wYXR0ZXJuKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXG4gICAgJHNjaGVtYVZhbHVlO1xuICBpZiAoJGlzRGF0YSkge1xuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XG4gIH0gZWxzZSB7XG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcbiAgfVxuICB2YXIgJHJlZ2V4cCA9ICRpc0RhdGEgPyAnKG5ldyBSZWdFeHAoJyArICRzY2hlbWFWYWx1ZSArICcpKScgOiBpdC51c2VQYXR0ZXJuKCRzY2hlbWEpO1xuICBvdXQgKz0gJ2lmICggJztcbiAgaWYgKCRpc0RhdGEpIHtcbiAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ3N0cmluZ1xcJykgfHwgJztcbiAgfVxuICBvdXQgKz0gJyAhJyArICgkcmVnZXhwKSArICcudGVzdCgnICsgKCRkYXRhKSArICcpICkgeyAgICc7XG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xuICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgncGF0dGVybicpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgcGF0dGVybjogICc7XG4gICAgaWYgKCRpc0RhdGEpIHtcbiAgICAgIG91dCArPSAnJyArICgkc2NoZW1hVmFsdWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkc2NoZW1hKSk7XG4gICAgfVxuICAgIG91dCArPSAnICB9ICc7XG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBtYXRjaCBwYXR0ZXJuIFwiJztcbiAgICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICAgIG91dCArPSAnXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJHNjaGVtYSkpO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICdcIlxcJyAnO1xuICAgIH1cbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogICc7XG4gICAgICBpZiAoJGlzRGF0YSkge1xuICAgICAgICBvdXQgKz0gJ3ZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJHNjaGVtYSkpO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgICAgICAgICAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICB9XG4gICAgb3V0ICs9ICcgfSAnO1xuICB9IGVsc2Uge1xuICAgIG91dCArPSAnIHt9ICc7XG4gIH1cbiAgdmFyIF9fZXJyID0gb3V0O1xuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gIH1cbiAgb3V0ICs9ICd9ICc7XG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/pattern.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/properties.js\\\":\\n/*!**************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/properties.js ***!\\n  \\\\**************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_properties(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  var $key = 'key' + $lvl,\\\\n    $idx = 'idx' + $lvl,\\\\n    $dataNxt = $it.dataLevel = it.dataLevel + 1,\\\\n    $nextData = 'data' + $dataNxt,\\\\n    $dataProperties = 'dataProperties' + $lvl;\\\\n  var $schemaKeys = Object.keys($schema || {}),\\\\n    $pProperties = it.schema.patternProperties || {},\\\\n    $pPropertyKeys = Object.keys($pProperties),\\\\n    $aProperties = it.schema.additionalProperties,\\\\n    $someProperties = $schemaKeys.length || $pPropertyKeys.length,\\\\n    $noAdditional = $aProperties === false,\\\\n    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,\\\\n    $removeAdditional = it.opts.removeAdditional,\\\\n    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,\\\\n    $ownProperties = it.opts.ownProperties,\\\\n    $currentBaseId = it.baseId;\\\\n  var $required = it.schema.required;\\\\n  if ($required && !(it.opts.v5 && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);\\\\n  if (it.opts.patternGroups) {\\\\n    var $pgProperties = it.schema.patternGroups || {},\\\\n      $pgPropertyKeys = Object.keys($pgProperties);\\\\n  }\\\\n  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';\\\\n  if ($ownProperties) {\\\\n    out += ' var ' + ($dataProperties) + ' = undefined;';\\\\n  }\\\\n  if ($checkAdditional) {\\\\n    if ($ownProperties) {\\\\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\\\\n    } else {\\\\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\\\\n    }\\\\n    if ($someProperties) {\\\\n      out += ' var isAdditional' + ($lvl) + ' = !(false ';\\\\n      if ($schemaKeys.length) {\\\\n        if ($schemaKeys.length > 5) {\\\\n          out += ' || validate.schema' + ($schemaPath) + '[' + ($key) + '] ';\\\\n        } else {\\\\n          var arr1 = $schemaKeys;\\\\n          if (arr1) {\\\\n            var $propertyKey, i1 = -1,\\\\n              l1 = arr1.length - 1;\\\\n            while (i1 < l1) {\\\\n              $propertyKey = arr1[i1 += 1];\\\\n              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';\\\\n            }\\\\n          }\\\\n        }\\\\n      }\\\\n      if ($pPropertyKeys.length) {\\\\n        var arr2 = $pPropertyKeys;\\\\n        if (arr2) {\\\\n          var $pProperty, $i = -1,\\\\n            l2 = arr2.length - 1;\\\\n          while ($i < l2) {\\\\n            $pProperty = arr2[$i += 1];\\\\n            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';\\\\n          }\\\\n        }\\\\n      }\\\\n      if (it.opts.patternGroups && $pgPropertyKeys.length) {\\\\n        var arr3 = $pgPropertyKeys;\\\\n        if (arr3) {\\\\n          var $pgProperty, $i = -1,\\\\n            l3 = arr3.length - 1;\\\\n          while ($i < l3) {\\\\n            $pgProperty = arr3[$i += 1];\\\\n            out += ' || ' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ') ';\\\\n          }\\\\n        }\\\\n      }\\\\n      out += ' ); if (isAdditional' + ($lvl) + ') { ';\\\\n    }\\\\n    if ($removeAdditional == 'all') {\\\\n      out += ' delete ' + ($data) + '[' + ($key) + ']; ';\\\\n    } else {\\\\n      var $currentErrorPath = it.errorPath;\\\\n      var $additionalProperty = '\\\\\\\\' + ' + $key + ' + \\\\\\\\'';\\\\n      if (it.opts._errorDataPathProperty) {\\\\n        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\\\\n      }\\\\n      if ($noAdditional) {\\\\n        if ($removeAdditional) {\\\\n          out += ' delete ' + ($data) + '[' + ($key) + ']; ';\\\\n        } else {\\\\n          out += ' ' + ($nextValid) + ' = false; ';\\\\n          var $currErrSchemaPath = $errSchemaPath;\\\\n          $errSchemaPath = it.errSchemaPath + '/additionalProperties';\\\\n          var $$outStack = $$outStack || [];\\\\n          $$outStack.push(out);\\\\n          out = ''; /* istanbul ignore else */\\\\n          if (it.createErrors !== false) {\\\\n            out += ' { keyword: \\\\\\\\'' + ('additionalProperties') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \\\\\\\\'' + ($additionalProperty) + '\\\\\\\\' } ';\\\\n            if (it.opts.messages !== false) {\\\\n              out += ' , message: \\\\\\\\'should NOT have additional properties\\\\\\\\' ';\\\\n            }\\\\n            if (it.opts.verbose) {\\\\n              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n            }\\\\n            out += ' } ';\\\\n          } else {\\\\n            out += ' {} ';\\\\n          }\\\\n          var __err = out;\\\\n          out = $$outStack.pop();\\\\n          if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n            if (it.async) {\\\\n              out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n            } else {\\\\n              out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n            }\\\\n          } else {\\\\n            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n          }\\\\n          $errSchemaPath = $currErrSchemaPath;\\\\n          if ($breakOnError) {\\\\n            out += ' break; ';\\\\n          }\\\\n        }\\\\n      } else if ($additionalIsSchema) {\\\\n        if ($removeAdditional == 'failing') {\\\\n          out += ' var ' + ($errs) + ' = errors;  ';\\\\n          var $wasComposite = it.compositeRule;\\\\n          it.compositeRule = $it.compositeRule = true;\\\\n          $it.schema = $aProperties;\\\\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\\\\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\\\\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\\\\n          var $passData = $data + '[' + $key + ']';\\\\n          $it.dataPathArr[$dataNxt] = $key;\\\\n          var $code = it.validate($it);\\\\n          $it.baseId = $currentBaseId;\\\\n          if (it.util.varOccurences($code, $nextData) < 2) {\\\\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n          } else {\\\\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n          }\\\\n          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';\\\\n          it.compositeRule = $it.compositeRule = $wasComposite;\\\\n        } else {\\\\n          $it.schema = $aProperties;\\\\n          $it.schemaPath = it.schemaPath + '.additionalProperties';\\\\n          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';\\\\n          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\\\\n          var $passData = $data + '[' + $key + ']';\\\\n          $it.dataPathArr[$dataNxt] = $key;\\\\n          var $code = it.validate($it);\\\\n          $it.baseId = $currentBaseId;\\\\n          if (it.util.varOccurences($code, $nextData) < 2) {\\\\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n          } else {\\\\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n          }\\\\n          if ($breakOnError) {\\\\n            out += ' if (!' + ($nextValid) + ') break; ';\\\\n          }\\\\n        }\\\\n      }\\\\n      it.errorPath = $currentErrorPath;\\\\n    }\\\\n    if ($someProperties) {\\\\n      out += ' } ';\\\\n    }\\\\n    out += ' }  ';\\\\n    if ($breakOnError) {\\\\n      out += ' if (' + ($nextValid) + ') { ';\\\\n      $closingBraces += '}';\\\\n    }\\\\n  }\\\\n  var $useDefaults = it.opts.useDefaults && !it.compositeRule;\\\\n  if ($schemaKeys.length) {\\\\n    var arr4 = $schemaKeys;\\\\n    if (arr4) {\\\\n      var $propertyKey, i4 = -1,\\\\n        l4 = arr4.length - 1;\\\\n      while (i4 < l4) {\\\\n        $propertyKey = arr4[i4 += 1];\\\\n        var $sch = $schema[$propertyKey];\\\\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\\\\n          var $prop = it.util.getProperty($propertyKey),\\\\n            $passData = $data + $prop,\\\\n            $hasDefault = $useDefaults && $sch.default !== undefined;\\\\n          $it.schema = $sch;\\\\n          $it.schemaPath = $schemaPath + $prop;\\\\n          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);\\\\n          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);\\\\n          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);\\\\n          var $code = it.validate($it);\\\\n          $it.baseId = $currentBaseId;\\\\n          if (it.util.varOccurences($code, $nextData) < 2) {\\\\n            $code = it.util.varReplace($code, $nextData, $passData);\\\\n            var $useData = $passData;\\\\n          } else {\\\\n            var $useData = $nextData;\\\\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';\\\\n          }\\\\n          if ($hasDefault) {\\\\n            out += ' ' + ($code) + ' ';\\\\n          } else {\\\\n            if ($requiredHash && $requiredHash[$propertyKey]) {\\\\n              out += ' if ( ' + ($useData) + ' === undefined ';\\\\n              if ($ownProperties) {\\\\n                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($propertyKey)) + '\\\\\\\\') ';\\\\n              }\\\\n              out += ') { ' + ($nextValid) + ' = false; ';\\\\n              var $currentErrorPath = it.errorPath,\\\\n                $currErrSchemaPath = $errSchemaPath,\\\\n                $missingProperty = it.util.escapeQuotes($propertyKey);\\\\n              if (it.opts._errorDataPathProperty) {\\\\n                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\\\\n              }\\\\n              $errSchemaPath = it.errSchemaPath + '/required';\\\\n              var $$outStack = $$outStack || [];\\\\n              $$outStack.push(out);\\\\n              out = ''; /* istanbul ignore else */\\\\n              if (it.createErrors !== false) {\\\\n                out += ' { keyword: \\\\\\\\'' + ('required') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\' } ';\\\\n                if (it.opts.messages !== false) {\\\\n                  out += ' , message: \\\\\\\\'';\\\\n                  if (it.opts._errorDataPathProperty) {\\\\n                    out += 'is a required property';\\\\n                  } else {\\\\n                    out += 'should have required property \\\\\\\\\\\\\\\\\\\\\\\\'' + ($missingProperty) + '\\\\\\\\\\\\\\\\\\\\\\\\'';\\\\n                  }\\\\n                  out += '\\\\\\\\' ';\\\\n                }\\\\n                if (it.opts.verbose) {\\\\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n                }\\\\n                out += ' } ';\\\\n              } else {\\\\n                out += ' {} ';\\\\n              }\\\\n              var __err = out;\\\\n              out = $$outStack.pop();\\\\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n                if (it.async) {\\\\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n                } else {\\\\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n                }\\\\n              } else {\\\\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n              }\\\\n              $errSchemaPath = $currErrSchemaPath;\\\\n              it.errorPath = $currentErrorPath;\\\\n              out += ' } else { ';\\\\n            } else {\\\\n              if ($breakOnError) {\\\\n                out += ' if ( ' + ($useData) + ' === undefined ';\\\\n                if ($ownProperties) {\\\\n                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($propertyKey)) + '\\\\\\\\') ';\\\\n                }\\\\n                out += ') { ' + ($nextValid) + ' = true; } else { ';\\\\n              } else {\\\\n                out += ' if (' + ($useData) + ' !== undefined ';\\\\n                if ($ownProperties) {\\\\n                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($propertyKey)) + '\\\\\\\\') ';\\\\n                }\\\\n                out += ' ) { ';\\\\n              }\\\\n            }\\\\n            out += ' ' + ($code) + ' } ';\\\\n          }\\\\n        }\\\\n        if ($breakOnError) {\\\\n          out += ' if (' + ($nextValid) + ') { ';\\\\n          $closingBraces += '}';\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n  if ($pPropertyKeys.length) {\\\\n    var arr5 = $pPropertyKeys;\\\\n    if (arr5) {\\\\n      var $pProperty, i5 = -1,\\\\n        l5 = arr5.length - 1;\\\\n      while (i5 < l5) {\\\\n        $pProperty = arr5[i5 += 1];\\\\n        var $sch = $pProperties[$pProperty];\\\\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\\\\n          $it.schema = $sch;\\\\n          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);\\\\n          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);\\\\n          if ($ownProperties) {\\\\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\\\\n          } else {\\\\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\\\\n          }\\\\n          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';\\\\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\\\\n          var $passData = $data + '[' + $key + ']';\\\\n          $it.dataPathArr[$dataNxt] = $key;\\\\n          var $code = it.validate($it);\\\\n          $it.baseId = $currentBaseId;\\\\n          if (it.util.varOccurences($code, $nextData) < 2) {\\\\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n          } else {\\\\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n          }\\\\n          if ($breakOnError) {\\\\n            out += ' if (!' + ($nextValid) + ') break; ';\\\\n          }\\\\n          out += ' } ';\\\\n          if ($breakOnError) {\\\\n            out += ' else ' + ($nextValid) + ' = true; ';\\\\n          }\\\\n          out += ' }  ';\\\\n          if ($breakOnError) {\\\\n            out += ' if (' + ($nextValid) + ') { ';\\\\n            $closingBraces += '}';\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n  if (it.opts.patternGroups && $pgPropertyKeys.length) {\\\\n    var arr6 = $pgPropertyKeys;\\\\n    if (arr6) {\\\\n      var $pgProperty, i6 = -1,\\\\n        l6 = arr6.length - 1;\\\\n      while (i6 < l6) {\\\\n        $pgProperty = arr6[i6 += 1];\\\\n        var $pgSchema = $pgProperties[$pgProperty],\\\\n          $sch = $pgSchema.schema;\\\\n        if (it.util.schemaHasRules($sch, it.RULES.all)) {\\\\n          $it.schema = $sch;\\\\n          $it.schemaPath = it.schemaPath + '.patternGroups' + it.util.getProperty($pgProperty) + '.schema';\\\\n          $it.errSchemaPath = it.errSchemaPath + '/patternGroups/' + it.util.escapeFragment($pgProperty) + '/schema';\\\\n          out += ' var pgPropCount' + ($lvl) + ' = 0;  ';\\\\n          if ($ownProperties) {\\\\n            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\\\\n          } else {\\\\n            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\\\\n          }\\\\n          out += ' if (' + (it.usePattern($pgProperty)) + '.test(' + ($key) + ')) { pgPropCount' + ($lvl) + '++; ';\\\\n          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);\\\\n          var $passData = $data + '[' + $key + ']';\\\\n          $it.dataPathArr[$dataNxt] = $key;\\\\n          var $code = it.validate($it);\\\\n          $it.baseId = $currentBaseId;\\\\n          if (it.util.varOccurences($code, $nextData) < 2) {\\\\n            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n          } else {\\\\n            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n          }\\\\n          if ($breakOnError) {\\\\n            out += ' if (!' + ($nextValid) + ') break; ';\\\\n          }\\\\n          out += ' } ';\\\\n          if ($breakOnError) {\\\\n            out += ' else ' + ($nextValid) + ' = true; ';\\\\n          }\\\\n          out += ' }  ';\\\\n          if ($breakOnError) {\\\\n            out += ' if (' + ($nextValid) + ') { ';\\\\n            $closingBraces += '}';\\\\n          }\\\\n          var $pgMin = $pgSchema.minimum,\\\\n            $pgMax = $pgSchema.maximum;\\\\n          if ($pgMin !== undefined || $pgMax !== undefined) {\\\\n            out += ' var ' + ($valid) + ' = true; ';\\\\n            var $currErrSchemaPath = $errSchemaPath;\\\\n            if ($pgMin !== undefined) {\\\\n              var $limit = $pgMin,\\\\n                $reason = 'minimum',\\\\n                $moreOrLess = 'less';\\\\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' >= ' + ($pgMin) + '; ';\\\\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/minimum';\\\\n              out += '  if (!' + ($valid) + ') {   ';\\\\n              var $$outStack = $$outStack || [];\\\\n              $$outStack.push(out);\\\\n              out = ''; /* istanbul ignore else */\\\\n              if (it.createErrors !== false) {\\\\n                out += ' { keyword: \\\\\\\\'' + ('patternGroups') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\\\\\\\'' + ($reason) + '\\\\\\\\', limit: ' + ($limit) + ', pattern: \\\\\\\\'' + (it.util.escapeQuotes($pgProperty)) + '\\\\\\\\' } ';\\\\n                if (it.opts.messages !== false) {\\\\n                  out += ' , message: \\\\\\\\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \\\\\\\"' + (it.util.escapeQuotes($pgProperty)) + '\\\\\\\"\\\\\\\\' ';\\\\n                }\\\\n                if (it.opts.verbose) {\\\\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n                }\\\\n                out += ' } ';\\\\n              } else {\\\\n                out += ' {} ';\\\\n              }\\\\n              var __err = out;\\\\n              out = $$outStack.pop();\\\\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n                if (it.async) {\\\\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n                } else {\\\\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n                }\\\\n              } else {\\\\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n              }\\\\n              out += ' } ';\\\\n              if ($pgMax !== undefined) {\\\\n                out += ' else ';\\\\n              }\\\\n            }\\\\n            if ($pgMax !== undefined) {\\\\n              var $limit = $pgMax,\\\\n                $reason = 'maximum',\\\\n                $moreOrLess = 'more';\\\\n              out += ' ' + ($valid) + ' = pgPropCount' + ($lvl) + ' <= ' + ($pgMax) + '; ';\\\\n              $errSchemaPath = it.errSchemaPath + '/patternGroups/maximum';\\\\n              out += '  if (!' + ($valid) + ') {   ';\\\\n              var $$outStack = $$outStack || [];\\\\n              $$outStack.push(out);\\\\n              out = ''; /* istanbul ignore else */\\\\n              if (it.createErrors !== false) {\\\\n                out += ' { keyword: \\\\\\\\'' + ('patternGroups') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { reason: \\\\\\\\'' + ($reason) + '\\\\\\\\', limit: ' + ($limit) + ', pattern: \\\\\\\\'' + (it.util.escapeQuotes($pgProperty)) + '\\\\\\\\' } ';\\\\n                if (it.opts.messages !== false) {\\\\n                  out += ' , message: \\\\\\\\'should NOT have ' + ($moreOrLess) + ' than ' + ($limit) + ' properties matching pattern \\\\\\\"' + (it.util.escapeQuotes($pgProperty)) + '\\\\\\\"\\\\\\\\' ';\\\\n                }\\\\n                if (it.opts.verbose) {\\\\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n                }\\\\n                out += ' } ';\\\\n              } else {\\\\n                out += ' {} ';\\\\n              }\\\\n              var __err = out;\\\\n              out = $$outStack.pop();\\\\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n                if (it.async) {\\\\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n                } else {\\\\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n                }\\\\n              } else {\\\\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n              }\\\\n              out += ' } ';\\\\n            }\\\\n            $errSchemaPath = $currErrSchemaPath;\\\\n            if ($breakOnError) {\\\\n              out += ' if (' + ($valid) + ') { ';\\\\n              $closingBraces += '}';\\\\n            }\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n  if ($breakOnError) {\\\\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\\\\n  }\\\\n  out = it.util.cleanUpCode(out);\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/properties.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/propertyNames.js\\\":\\n/*!*****************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/propertyNames.js ***!\\n  \\\\*****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_propertyNames(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $errs = 'errs__' + $lvl;\\\\n  var $it = it.util.copy(it);\\\\n  var $closingBraces = '';\\\\n  $it.level++;\\\\n  var $nextValid = 'valid' + $it.level;\\\\n  if (it.util.schemaHasRules($schema, it.RULES.all)) {\\\\n    $it.schema = $schema;\\\\n    $it.schemaPath = $schemaPath;\\\\n    $it.errSchemaPath = $errSchemaPath;\\\\n    var $key = 'key' + $lvl,\\\\n      $idx = 'idx' + $lvl,\\\\n      $i = 'i' + $lvl,\\\\n      $invalidName = '\\\\\\\\' + ' + $key + ' + \\\\\\\\'',\\\\n      $dataNxt = $it.dataLevel = it.dataLevel + 1,\\\\n      $nextData = 'data' + $dataNxt,\\\\n      $dataProperties = 'dataProperties' + $lvl,\\\\n      $ownProperties = it.opts.ownProperties,\\\\n      $currentBaseId = it.baseId;\\\\n    out += ' var ' + ($errs) + ' = errors; ';\\\\n    if ($ownProperties) {\\\\n      out += ' var ' + ($dataProperties) + ' = undefined; ';\\\\n    }\\\\n    if ($ownProperties) {\\\\n      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';\\\\n    } else {\\\\n      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';\\\\n    }\\\\n    out += ' var startErrs' + ($lvl) + ' = errors; ';\\\\n    var $passData = $key;\\\\n    var $wasComposite = it.compositeRule;\\\\n    it.compositeRule = $it.compositeRule = true;\\\\n    var $code = it.validate($it);\\\\n    $it.baseId = $currentBaseId;\\\\n    if (it.util.varOccurences($code, $nextData) < 2) {\\\\n      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';\\\\n    } else {\\\\n      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';\\\\n    }\\\\n    it.compositeRule = $it.compositeRule = $wasComposite;\\\\n    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */\\\\n    if (it.createErrors !== false) {\\\\n      out += ' { keyword: \\\\\\\\'' + ('propertyNames') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \\\\\\\\'' + ($invalidName) + '\\\\\\\\' } ';\\\\n      if (it.opts.messages !== false) {\\\\n        out += ' , message: \\\\\\\\'property name \\\\\\\\\\\\\\\\\\\\\\\\'' + ($invalidName) + '\\\\\\\\\\\\\\\\\\\\\\\\' is invalid\\\\\\\\' ';\\\\n      }\\\\n      if (it.opts.verbose) {\\\\n        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n      }\\\\n      out += ' } ';\\\\n    } else {\\\\n      out += ' {} ';\\\\n    }\\\\n    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n      if (it.async) {\\\\n        out += ' throw new ValidationError(vErrors); ';\\\\n      } else {\\\\n        out += ' validate.errors = vErrors; return false; ';\\\\n      }\\\\n    }\\\\n    if ($breakOnError) {\\\\n      out += ' break; ';\\\\n    }\\\\n    out += ' } }';\\\\n  }\\\\n  if ($breakOnError) {\\\\n    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';\\\\n  }\\\\n  out = it.util.cleanUpCode(out);\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0eU5hbWVzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0eU5hbWVzLmpzPzZkNjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9wcm9wZXJ0eU5hbWVzKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkZXJycyA9ICdlcnJzX18nICsgJGx2bDtcbiAgdmFyICRpdCA9IGl0LnV0aWwuY29weShpdCk7XG4gIHZhciAkY2xvc2luZ0JyYWNlcyA9ICcnO1xuICAkaXQubGV2ZWwrKztcbiAgdmFyICRuZXh0VmFsaWQgPSAndmFsaWQnICsgJGl0LmxldmVsO1xuICBpZiAoaXQudXRpbC5zY2hlbWFIYXNSdWxlcygkc2NoZW1hLCBpdC5SVUxFUy5hbGwpKSB7XG4gICAgJGl0LnNjaGVtYSA9ICRzY2hlbWE7XG4gICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aDtcbiAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoO1xuICAgIHZhciAka2V5ID0gJ2tleScgKyAkbHZsLFxuICAgICAgJGlkeCA9ICdpZHgnICsgJGx2bCxcbiAgICAgICRpID0gJ2knICsgJGx2bCxcbiAgICAgICRpbnZhbGlkTmFtZSA9ICdcXCcgKyAnICsgJGtleSArICcgKyBcXCcnLFxuICAgICAgJGRhdGFOeHQgPSAkaXQuZGF0YUxldmVsID0gaXQuZGF0YUxldmVsICsgMSxcbiAgICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxuICAgICAgJGRhdGFQcm9wZXJ0aWVzID0gJ2RhdGFQcm9wZXJ0aWVzJyArICRsdmwsXG4gICAgICAkb3duUHJvcGVydGllcyA9IGl0Lm9wdHMub3duUHJvcGVydGllcyxcbiAgICAgICRjdXJyZW50QmFzZUlkID0gaXQuYmFzZUlkO1xuICAgIG91dCArPSAnIHZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7ICc7XG4gICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XG4gICAgICBvdXQgKz0gJyB2YXIgJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyA9IHVuZGVmaW5lZDsgJztcbiAgICB9XG4gICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XG4gICAgICBvdXQgKz0gJyAnICsgKCRkYXRhUHJvcGVydGllcykgKyAnID0gJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyB8fCBPYmplY3Qua2V5cygnICsgKCRkYXRhKSArICcpOyBmb3IgKHZhciAnICsgKCRpZHgpICsgJz0wOyAnICsgKCRpZHgpICsgJzwnICsgKCRkYXRhUHJvcGVydGllcykgKyAnLmxlbmd0aDsgJyArICgkaWR4KSArICcrKykgeyB2YXIgJyArICgka2V5KSArICcgPSAnICsgKCRkYXRhUHJvcGVydGllcykgKyAnWycgKyAoJGlkeCkgKyAnXTsgJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgZm9yICh2YXIgJyArICgka2V5KSArICcgaW4gJyArICgkZGF0YSkgKyAnKSB7ICc7XG4gICAgfVxuICAgIG91dCArPSAnIHZhciBzdGFydEVycnMnICsgKCRsdmwpICsgJyA9IGVycm9yczsgJztcbiAgICB2YXIgJHBhc3NEYXRhID0gJGtleTtcbiAgICB2YXIgJHdhc0NvbXBvc2l0ZSA9IGl0LmNvbXBvc2l0ZVJ1bGU7XG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcbiAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xuICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcbiAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xuICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XG4gICAgfVxuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XG4gICAgb3V0ICs9ICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgeyBmb3IgKHZhciAnICsgKCRpKSArICc9c3RhcnRFcnJzJyArICgkbHZsKSArICc7ICcgKyAoJGkpICsgJzxlcnJvcnM7ICcgKyAoJGkpICsgJysrKSB7IHZFcnJvcnNbJyArICgkaSkgKyAnXS5wcm9wZXJ0eU5hbWUgPSAnICsgKCRrZXkpICsgJzsgfSAgIHZhciBlcnIgPSAgICc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXG4gICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFwnJyArICgncHJvcGVydHlOYW1lcycpICsgJ1xcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFwnXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgcHJvcGVydHlOYW1lOiBcXCcnICsgKCRpbnZhbGlkTmFtZSkgKyAnXFwnIH0gJztcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Byb3BlcnR5IG5hbWUgXFxcXFxcJycgKyAoJGludmFsaWROYW1lKSArICdcXFxcXFwnIGlzIGludmFsaWRcXCcgJztcbiAgICAgIH1cbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIH0gJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcge30gJztcbiAgICB9XG4gICAgb3V0ICs9ICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcbiAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmIChpdC5hc3luYykge1xuICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKHZFcnJvcnMpOyAnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gdkVycm9yczsgcmV0dXJuIGZhbHNlOyAnO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgb3V0ICs9ICcgYnJlYWs7ICc7XG4gICAgfVxuICAgIG91dCArPSAnIH0gfSc7XG4gIH1cbiAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCcgKyAoJGVycnMpICsgJyA9PSBlcnJvcnMpIHsnO1xuICB9XG4gIG91dCA9IGl0LnV0aWwuY2xlYW5VcENvZGUob3V0KTtcbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/propertyNames.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/ref.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/ref.js ***!\\n  \\\\*******************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_ref(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $async, $refCode;\\\\n  if ($schema == '#' || $schema == '#/') {\\\\n    if (it.isRoot) {\\\\n      $async = it.async;\\\\n      $refCode = 'validate';\\\\n    } else {\\\\n      $async = it.root.schema.$async === true;\\\\n      $refCode = 'root.refVal[0]';\\\\n    }\\\\n  } else {\\\\n    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);\\\\n    if ($refVal === undefined) {\\\\n      var $message = it.MissingRefError.message(it.baseId, $schema);\\\\n      if (it.opts.missingRefs == 'fail') {\\\\n        console.error($message);\\\\n        var $$outStack = $$outStack || [];\\\\n        $$outStack.push(out);\\\\n        out = ''; /* istanbul ignore else */\\\\n        if (it.createErrors !== false) {\\\\n          out += ' { keyword: \\\\\\\\'' + ('$ref') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \\\\\\\\'' + (it.util.escapeQuotes($schema)) + '\\\\\\\\' } ';\\\\n          if (it.opts.messages !== false) {\\\\n            out += ' , message: \\\\\\\\'can\\\\\\\\\\\\\\\\\\\\\\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\\\\\\\\' ';\\\\n          }\\\\n          if (it.opts.verbose) {\\\\n            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n          }\\\\n          out += ' } ';\\\\n        } else {\\\\n          out += ' {} ';\\\\n        }\\\\n        var __err = out;\\\\n        out = $$outStack.pop();\\\\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n          if (it.async) {\\\\n            out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n          } else {\\\\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n          }\\\\n        } else {\\\\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n        }\\\\n        if ($breakOnError) {\\\\n          out += ' if (false) { ';\\\\n        }\\\\n      } else if (it.opts.missingRefs == 'ignore') {\\\\n        console.warn($message);\\\\n        if ($breakOnError) {\\\\n          out += ' if (true) { ';\\\\n        }\\\\n      } else {\\\\n        throw new it.MissingRefError(it.baseId, $schema, $message);\\\\n      }\\\\n    } else if ($refVal.inline) {\\\\n      var $it = it.util.copy(it);\\\\n      $it.level++;\\\\n      var $nextValid = 'valid' + $it.level;\\\\n      $it.schema = $refVal.schema;\\\\n      $it.schemaPath = '';\\\\n      $it.errSchemaPath = $schema;\\\\n      var $code = it.validate($it).replace(/validate\\\\\\\\.schema/g, $refVal.code);\\\\n      out += ' ' + ($code) + ' ';\\\\n      if ($breakOnError) {\\\\n        out += ' if (' + ($nextValid) + ') { ';\\\\n      }\\\\n    } else {\\\\n      $async = $refVal.$async === true;\\\\n      $refCode = $refVal.code;\\\\n    }\\\\n  }\\\\n  if ($refCode) {\\\\n    var $$outStack = $$outStack || [];\\\\n    $$outStack.push(out);\\\\n    out = '';\\\\n    if (it.opts.passContext) {\\\\n      out += ' ' + ($refCode) + '.call(this, ';\\\\n    } else {\\\\n      out += ' ' + ($refCode) + '( ';\\\\n    }\\\\n    out += ' ' + ($data) + ', (dataPath || \\\\\\\\'\\\\\\\\')';\\\\n    if (it.errorPath != '\\\\\\\"\\\\\\\"') {\\\\n      out += ' + ' + (it.errorPath);\\\\n    }\\\\n    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\\\\n      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\\\\n    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';\\\\n    var __callValidate = out;\\\\n    out = $$outStack.pop();\\\\n    if ($async) {\\\\n      if (!it.async) throw new Error('async schema referenced by sync schema');\\\\n      if ($breakOnError) {\\\\n        out += ' var ' + ($valid) + '; ';\\\\n      }\\\\n      out += ' try { ' + (it.yieldAwait) + ' ' + (__callValidate) + '; ';\\\\n      if ($breakOnError) {\\\\n        out += ' ' + ($valid) + ' = true; ';\\\\n      }\\\\n      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';\\\\n      if ($breakOnError) {\\\\n        out += ' ' + ($valid) + ' = false; ';\\\\n      }\\\\n      out += ' } ';\\\\n      if ($breakOnError) {\\\\n        out += ' if (' + ($valid) + ') { ';\\\\n      }\\\\n    } else {\\\\n      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';\\\\n      if ($breakOnError) {\\\\n        out += ' else { ';\\\\n      }\\\\n    }\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9yZWYuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3JlZi5qcz82ZWY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfcmVmKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xuICB2YXIgJHZhbGlkID0gJ3ZhbGlkJyArICRsdmw7XG4gIHZhciAkYXN5bmMsICRyZWZDb2RlO1xuICBpZiAoJHNjaGVtYSA9PSAnIycgfHwgJHNjaGVtYSA9PSAnIy8nKSB7XG4gICAgaWYgKGl0LmlzUm9vdCkge1xuICAgICAgJGFzeW5jID0gaXQuYXN5bmM7XG4gICAgICAkcmVmQ29kZSA9ICd2YWxpZGF0ZSc7XG4gICAgfSBlbHNlIHtcbiAgICAgICRhc3luYyA9IGl0LnJvb3Quc2NoZW1hLiRhc3luYyA9PT0gdHJ1ZTtcbiAgICAgICRyZWZDb2RlID0gJ3Jvb3QucmVmVmFsWzBdJztcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdmFyICRyZWZWYWwgPSBpdC5yZXNvbHZlUmVmKGl0LmJhc2VJZCwgJHNjaGVtYSwgaXQuaXNSb290KTtcbiAgICBpZiAoJHJlZlZhbCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB2YXIgJG1lc3NhZ2UgPSBpdC5NaXNzaW5nUmVmRXJyb3IubWVzc2FnZShpdC5iYXNlSWQsICRzY2hlbWEpO1xuICAgICAgaWYgKGl0Lm9wdHMubWlzc2luZ1JlZnMgPT0gJ2ZhaWwnKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJG1lc3NhZ2UpO1xuICAgICAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XG4gICAgICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICAgICAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJyRyZWYnKSArICdcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcJ1xcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IHJlZjogXFwnJyArIChpdC51dGlsLmVzY2FwZVF1b3Rlcygkc2NoZW1hKSkgKyAnXFwnIH0gJztcbiAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFwnY2FuXFxcXFxcJ3QgcmVzb2x2ZSByZWZlcmVuY2UgJyArIChpdC51dGlsLmVzY2FwZVF1b3Rlcygkc2NoZW1hKSkgKyAnXFwnICc7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJHNjaGVtYSkpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcbiAgICAgICAgICB9XG4gICAgICAgICAgb3V0ICs9ICcgfSAnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9fZXJyID0gb3V0O1xuICAgICAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICAgICAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgICAgICBpZiAoaXQuYXN5bmMpIHtcbiAgICAgICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICAgICAgICBvdXQgKz0gJyBpZiAoZmFsc2UpIHsgJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChpdC5vcHRzLm1pc3NpbmdSZWZzID09ICdpZ25vcmUnKSB7XG4gICAgICAgIGNvbnNvbGUud2FybigkbWVzc2FnZSk7XG4gICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgICAgb3V0ICs9ICcgaWYgKHRydWUpIHsgJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IGl0Lk1pc3NpbmdSZWZFcnJvcihpdC5iYXNlSWQsICRzY2hlbWEsICRtZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCRyZWZWYWwuaW5saW5lKSB7XG4gICAgICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcbiAgICAgICRpdC5sZXZlbCsrO1xuICAgICAgdmFyICRuZXh0VmFsaWQgPSAndmFsaWQnICsgJGl0LmxldmVsO1xuICAgICAgJGl0LnNjaGVtYSA9ICRyZWZWYWwuc2NoZW1hO1xuICAgICAgJGl0LnNjaGVtYVBhdGggPSAnJztcbiAgICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJHNjaGVtYTtcbiAgICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCkucmVwbGFjZSgvdmFsaWRhdGVcXC5zY2hlbWEvZywgJHJlZlZhbC5jb2RlKTtcbiAgICAgIG91dCArPSAnICcgKyAoJGNvZGUpICsgJyAnO1xuICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICRhc3luYyA9ICRyZWZWYWwuJGFzeW5jID09PSB0cnVlO1xuICAgICAgJHJlZkNvZGUgPSAkcmVmVmFsLmNvZGU7XG4gICAgfVxuICB9XG4gIGlmICgkcmVmQ29kZSkge1xuICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcbiAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcbiAgICBvdXQgPSAnJztcbiAgICBpZiAoaXQub3B0cy5wYXNzQ29udGV4dCkge1xuICAgICAgb3V0ICs9ICcgJyArICgkcmVmQ29kZSkgKyAnLmNhbGwodGhpcywgJztcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgJyArICgkcmVmQ29kZSkgKyAnKCAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyAnICsgKCRkYXRhKSArICcsIChkYXRhUGF0aCB8fCBcXCdcXCcpJztcbiAgICBpZiAoaXQuZXJyb3JQYXRoICE9ICdcIlwiJykge1xuICAgICAgb3V0ICs9ICcgKyAnICsgKGl0LmVycm9yUGF0aCk7XG4gICAgfVxuICAgIHZhciAkcGFyZW50RGF0YSA9ICRkYXRhTHZsID8gJ2RhdGEnICsgKCgkZGF0YUx2bCAtIDEpIHx8ICcnKSA6ICdwYXJlbnREYXRhJyxcbiAgICAgICRwYXJlbnREYXRhUHJvcGVydHkgPSAkZGF0YUx2bCA/IGl0LmRhdGFQYXRoQXJyWyRkYXRhTHZsXSA6ICdwYXJlbnREYXRhUHJvcGVydHknO1xuICAgIG91dCArPSAnICwgJyArICgkcGFyZW50RGF0YSkgKyAnICwgJyArICgkcGFyZW50RGF0YVByb3BlcnR5KSArICcsIHJvb3REYXRhKSAgJztcbiAgICB2YXIgX19jYWxsVmFsaWRhdGUgPSBvdXQ7XG4gICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcbiAgICBpZiAoJGFzeW5jKSB7XG4gICAgICBpZiAoIWl0LmFzeW5jKSB0aHJvdyBuZXcgRXJyb3IoJ2FzeW5jIHNjaGVtYSByZWZlcmVuY2VkIGJ5IHN5bmMgc2NoZW1hJyk7XG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJzsgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIHRyeSB7ICcgKyAoaXQueWllbGRBd2FpdCkgKyAnICcgKyAoX19jYWxsVmFsaWRhdGUpICsgJzsgJztcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgIG91dCArPSAnICcgKyAoJHZhbGlkKSArICcgPSB0cnVlOyAnO1xuICAgICAgfVxuICAgICAgb3V0ICs9ICcgfSBjYXRjaCAoZSkgeyBpZiAoIShlIGluc3RhbmNlb2YgVmFsaWRhdGlvbkVycm9yKSkgdGhyb3cgZTsgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBlLmVycm9yczsgZWxzZSB2RXJyb3JzID0gdkVycm9ycy5jb25jYXQoZS5lcnJvcnMpOyBlcnJvcnMgPSB2RXJyb3JzLmxlbmd0aDsgJztcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgIG91dCArPSAnICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgJztcbiAgICAgIH1cbiAgICAgIG91dCArPSAnIH0gJztcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XG4gICAgICAgIG91dCArPSAnIGlmICgnICsgKCR2YWxpZCkgKyAnKSB7ICc7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIGlmICghJyArIChfX2NhbGxWYWxpZGF0ZSkgKyAnKSB7IGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gJyArICgkcmVmQ29kZSkgKyAnLmVycm9yczsgZWxzZSB2RXJyb3JzID0gdkVycm9ycy5jb25jYXQoJyArICgkcmVmQ29kZSkgKyAnLmVycm9ycyk7IGVycm9ycyA9IHZFcnJvcnMubGVuZ3RoOyB9ICc7XG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgICBvdXQgKz0gJyBlbHNlIHsgJztcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/ref.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/required.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/required.js ***!\\n  \\\\************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_required(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  var $vSchema = 'schema' + $lvl;\\\\n  if (!$isData) {\\\\n    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {\\\\n      var $required = [];\\\\n      var arr1 = $schema;\\\\n      if (arr1) {\\\\n        var $property, i1 = -1,\\\\n          l1 = arr1.length - 1;\\\\n        while (i1 < l1) {\\\\n          $property = arr1[i1 += 1];\\\\n          var $propertySch = it.schema.properties[$property];\\\\n          if (!($propertySch && it.util.schemaHasRules($propertySch, it.RULES.all))) {\\\\n            $required[$required.length] = $property;\\\\n          }\\\\n        }\\\\n      }\\\\n    } else {\\\\n      var $required = $schema;\\\\n    }\\\\n  }\\\\n  if ($isData || $required.length) {\\\\n    var $currentErrorPath = it.errorPath,\\\\n      $loopRequired = $isData || $required.length >= it.opts.loopRequired,\\\\n      $ownProperties = it.opts.ownProperties;\\\\n    if ($breakOnError) {\\\\n      out += ' var missing' + ($lvl) + '; ';\\\\n      if ($loopRequired) {\\\\n        if (!$isData) {\\\\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\\\\n        }\\\\n        var $i = 'i' + $lvl,\\\\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\\\\n          $missingProperty = '\\\\\\\\' + ' + $propertyPath + ' + \\\\\\\\'';\\\\n        if (it.opts._errorDataPathProperty) {\\\\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\\\\n        }\\\\n        out += ' var ' + ($valid) + ' = true; ';\\\\n        if ($isData) {\\\\n          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';\\\\n        }\\\\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';\\\\n        if ($ownProperties) {\\\\n          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\\\\n        }\\\\n        out += '; if (!' + ($valid) + ') break; } ';\\\\n        if ($isData) {\\\\n          out += '  }  ';\\\\n        }\\\\n        out += '  if (!' + ($valid) + ') {   ';\\\\n        var $$outStack = $$outStack || [];\\\\n        $$outStack.push(out);\\\\n        out = ''; /* istanbul ignore else */\\\\n        if (it.createErrors !== false) {\\\\n          out += ' { keyword: \\\\\\\\'' + ('required') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\' } ';\\\\n          if (it.opts.messages !== false) {\\\\n            out += ' , message: \\\\\\\\'';\\\\n            if (it.opts._errorDataPathProperty) {\\\\n              out += 'is a required property';\\\\n            } else {\\\\n              out += 'should have required property \\\\\\\\\\\\\\\\\\\\\\\\'' + ($missingProperty) + '\\\\\\\\\\\\\\\\\\\\\\\\'';\\\\n            }\\\\n            out += '\\\\\\\\' ';\\\\n          }\\\\n          if (it.opts.verbose) {\\\\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n          }\\\\n          out += ' } ';\\\\n        } else {\\\\n          out += ' {} ';\\\\n        }\\\\n        var __err = out;\\\\n        out = $$outStack.pop();\\\\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n          if (it.async) {\\\\n            out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n          } else {\\\\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n          }\\\\n        } else {\\\\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n        }\\\\n        out += ' } else { ';\\\\n      } else {\\\\n        out += ' if ( ';\\\\n        var arr2 = $required;\\\\n        if (arr2) {\\\\n          var $propertyKey, $i = -1,\\\\n            l2 = arr2.length - 1;\\\\n          while ($i < l2) {\\\\n            $propertyKey = arr2[$i += 1];\\\\n            if ($i) {\\\\n              out += ' || ';\\\\n            }\\\\n            var $prop = it.util.getProperty($propertyKey),\\\\n              $useData = $data + $prop;\\\\n            out += ' ( ( ' + ($useData) + ' === undefined ';\\\\n            if ($ownProperties) {\\\\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($propertyKey)) + '\\\\\\\\') ';\\\\n            }\\\\n            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';\\\\n          }\\\\n        }\\\\n        out += ') {  ';\\\\n        var $propertyPath = 'missing' + $lvl,\\\\n          $missingProperty = '\\\\\\\\' + ' + $propertyPath + ' + \\\\\\\\'';\\\\n        if (it.opts._errorDataPathProperty) {\\\\n          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;\\\\n        }\\\\n        var $$outStack = $$outStack || [];\\\\n        $$outStack.push(out);\\\\n        out = ''; /* istanbul ignore else */\\\\n        if (it.createErrors !== false) {\\\\n          out += ' { keyword: \\\\\\\\'' + ('required') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\' } ';\\\\n          if (it.opts.messages !== false) {\\\\n            out += ' , message: \\\\\\\\'';\\\\n            if (it.opts._errorDataPathProperty) {\\\\n              out += 'is a required property';\\\\n            } else {\\\\n              out += 'should have required property \\\\\\\\\\\\\\\\\\\\\\\\'' + ($missingProperty) + '\\\\\\\\\\\\\\\\\\\\\\\\'';\\\\n            }\\\\n            out += '\\\\\\\\' ';\\\\n          }\\\\n          if (it.opts.verbose) {\\\\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n          }\\\\n          out += ' } ';\\\\n        } else {\\\\n          out += ' {} ';\\\\n        }\\\\n        var __err = out;\\\\n        out = $$outStack.pop();\\\\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n          if (it.async) {\\\\n            out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n          } else {\\\\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n          }\\\\n        } else {\\\\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n        }\\\\n        out += ' } else { ';\\\\n      }\\\\n    } else {\\\\n      if ($loopRequired) {\\\\n        if (!$isData) {\\\\n          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';\\\\n        }\\\\n        var $i = 'i' + $lvl,\\\\n          $propertyPath = 'schema' + $lvl + '[' + $i + ']',\\\\n          $missingProperty = '\\\\\\\\' + ' + $propertyPath + ' + \\\\\\\\'';\\\\n        if (it.opts._errorDataPathProperty) {\\\\n          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);\\\\n        }\\\\n        if ($isData) {\\\\n          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */\\\\n          if (it.createErrors !== false) {\\\\n            out += ' { keyword: \\\\\\\\'' + ('required') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\' } ';\\\\n            if (it.opts.messages !== false) {\\\\n              out += ' , message: \\\\\\\\'';\\\\n              if (it.opts._errorDataPathProperty) {\\\\n                out += 'is a required property';\\\\n              } else {\\\\n                out += 'should have required property \\\\\\\\\\\\\\\\\\\\\\\\'' + ($missingProperty) + '\\\\\\\\\\\\\\\\\\\\\\\\'';\\\\n              }\\\\n              out += '\\\\\\\\' ';\\\\n            }\\\\n            if (it.opts.verbose) {\\\\n              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n            }\\\\n            out += ' } ';\\\\n          } else {\\\\n            out += ' {} ';\\\\n          }\\\\n          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';\\\\n        }\\\\n        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';\\\\n        if ($ownProperties) {\\\\n          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';\\\\n        }\\\\n        out += ') {  var err =   '; /* istanbul ignore else */\\\\n        if (it.createErrors !== false) {\\\\n          out += ' { keyword: \\\\\\\\'' + ('required') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\' } ';\\\\n          if (it.opts.messages !== false) {\\\\n            out += ' , message: \\\\\\\\'';\\\\n            if (it.opts._errorDataPathProperty) {\\\\n              out += 'is a required property';\\\\n            } else {\\\\n              out += 'should have required property \\\\\\\\\\\\\\\\\\\\\\\\'' + ($missingProperty) + '\\\\\\\\\\\\\\\\\\\\\\\\'';\\\\n            }\\\\n            out += '\\\\\\\\' ';\\\\n          }\\\\n          if (it.opts.verbose) {\\\\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n          }\\\\n          out += ' } ';\\\\n        } else {\\\\n          out += ' {} ';\\\\n        }\\\\n        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';\\\\n        if ($isData) {\\\\n          out += '  }  ';\\\\n        }\\\\n      } else {\\\\n        var arr3 = $required;\\\\n        if (arr3) {\\\\n          var $propertyKey, i3 = -1,\\\\n            l3 = arr3.length - 1;\\\\n          while (i3 < l3) {\\\\n            $propertyKey = arr3[i3 += 1];\\\\n            var $prop = it.util.getProperty($propertyKey),\\\\n              $missingProperty = it.util.escapeQuotes($propertyKey),\\\\n              $useData = $data + $prop;\\\\n            if (it.opts._errorDataPathProperty) {\\\\n              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);\\\\n            }\\\\n            out += ' if ( ' + ($useData) + ' === undefined ';\\\\n            if ($ownProperties) {\\\\n              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \\\\\\\\'' + (it.util.escapeQuotes($propertyKey)) + '\\\\\\\\') ';\\\\n            }\\\\n            out += ') {  var err =   '; /* istanbul ignore else */\\\\n            if (it.createErrors !== false) {\\\\n              out += ' { keyword: \\\\\\\\'' + ('required') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \\\\\\\\'' + ($missingProperty) + '\\\\\\\\' } ';\\\\n              if (it.opts.messages !== false) {\\\\n                out += ' , message: \\\\\\\\'';\\\\n                if (it.opts._errorDataPathProperty) {\\\\n                  out += 'is a required property';\\\\n                } else {\\\\n                  out += 'should have required property \\\\\\\\\\\\\\\\\\\\\\\\'' + ($missingProperty) + '\\\\\\\\\\\\\\\\\\\\\\\\'';\\\\n                }\\\\n                out += '\\\\\\\\' ';\\\\n              }\\\\n              if (it.opts.verbose) {\\\\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n              }\\\\n              out += ' } ';\\\\n            } else {\\\\n              out += ' {} ';\\\\n            }\\\\n            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n    it.errorPath = $currentErrorPath;\\\\n  } else if ($breakOnError) {\\\\n    out += ' if (true) {';\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/required.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/uniqueItems.js\\\":\\n/*!***************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/uniqueItems.js ***!\\n  \\\\***************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_uniqueItems(it, $keyword, $ruleType) {\\\\n  var out = ' ';\\\\n  var $lvl = it.level;\\\\n  var $dataLvl = it.dataLevel;\\\\n  var $schema = it.schema[$keyword];\\\\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n  var $breakOnError = !it.opts.allErrors;\\\\n  var $data = 'data' + ($dataLvl || '');\\\\n  var $valid = 'valid' + $lvl;\\\\n  var $isData = it.opts.$data && $schema && $schema.$data,\\\\n    $schemaValue;\\\\n  if ($isData) {\\\\n    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';\\\\n    $schemaValue = 'schema' + $lvl;\\\\n  } else {\\\\n    $schemaValue = $schema;\\\\n  }\\\\n  if (($schema || $isData) && it.opts.uniqueItems !== false) {\\\\n    if ($isData) {\\\\n      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \\\\\\\\'boolean\\\\\\\\') ' + ($valid) + ' = false; else { ';\\\\n    }\\\\n    out += ' var ' + ($valid) + ' = true; if (' + ($data) + '.length > 1) { var i = ' + ($data) + '.length, j; outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } } ';\\\\n    if ($isData) {\\\\n      out += '  }  ';\\\\n    }\\\\n    out += ' if (!' + ($valid) + ') {   ';\\\\n    var $$outStack = $$outStack || [];\\\\n    $$outStack.push(out);\\\\n    out = ''; /* istanbul ignore else */\\\\n    if (it.createErrors !== false) {\\\\n      out += ' { keyword: \\\\\\\\'' + ('uniqueItems') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';\\\\n      if (it.opts.messages !== false) {\\\\n        out += ' , message: \\\\\\\\'should NOT have duplicate items (items ## \\\\\\\\' + j + \\\\\\\\' and \\\\\\\\' + i + \\\\\\\\' are identical)\\\\\\\\' ';\\\\n      }\\\\n      if (it.opts.verbose) {\\\\n        out += ' , schema:  ';\\\\n        if ($isData) {\\\\n          out += 'validate.schema' + ($schemaPath);\\\\n        } else {\\\\n          out += '' + ($schema);\\\\n        }\\\\n        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n      }\\\\n      out += ' } ';\\\\n    } else {\\\\n      out += ' {} ';\\\\n    }\\\\n    var __err = out;\\\\n    out = $$outStack.pop();\\\\n    if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n      if (it.async) {\\\\n        out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n      } else {\\\\n        out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n      }\\\\n    } else {\\\\n      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n    }\\\\n    out += ' } ';\\\\n    if ($breakOnError) {\\\\n      out += ' else { ';\\\\n    }\\\\n  } else {\\\\n    if ($breakOnError) {\\\\n      out += ' if (true) { ';\\\\n    }\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy91bmlxdWVJdGVtcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvdW5pcXVlSXRlbXMuanM/ZDMwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX3VuaXF1ZUl0ZW1zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XG4gIHZhciBvdXQgPSAnICc7XG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcbiAgICAkc2NoZW1hVmFsdWU7XG4gIGlmICgkaXNEYXRhKSB7XG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcbiAgfSBlbHNlIHtcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xuICB9XG4gIGlmICgoJHNjaGVtYSB8fCAkaXNEYXRhKSAmJiBpdC5vcHRzLnVuaXF1ZUl0ZW1zICE9PSBmYWxzZSkge1xuICAgIGlmICgkaXNEYXRhKSB7XG4gICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJzsgaWYgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgPT09IGZhbHNlIHx8ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgPT09IHVuZGVmaW5lZCkgJyArICgkdmFsaWQpICsgJyA9IHRydWU7IGVsc2UgaWYgKHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcJ2Jvb2xlYW5cXCcpICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgZWxzZSB7ICc7XG4gICAgfVxuICAgIG91dCArPSAnIHZhciAnICsgKCR2YWxpZCkgKyAnID0gdHJ1ZTsgaWYgKCcgKyAoJGRhdGEpICsgJy5sZW5ndGggPiAxKSB7IHZhciBpID0gJyArICgkZGF0YSkgKyAnLmxlbmd0aCwgajsgb3V0ZXI6IGZvciAoO2ktLTspIHsgZm9yIChqID0gaTsgai0tOykgeyBpZiAoZXF1YWwoJyArICgkZGF0YSkgKyAnW2ldLCAnICsgKCRkYXRhKSArICdbal0pKSB7ICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgYnJlYWsgb3V0ZXI7IH0gfSB9IH0gJztcbiAgICBpZiAoJGlzRGF0YSkge1xuICAgICAgb3V0ICs9ICcgIH0gICc7XG4gICAgfVxuICAgIG91dCArPSAnIGlmICghJyArICgkdmFsaWQpICsgJykgeyAgICc7XG4gICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xuICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xuICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XG4gICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcJycgKyAoJ3VuaXF1ZUl0ZW1zJykgKyAnXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXCdcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBpOiBpLCBqOiBqIH0gJztcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcJ3Nob3VsZCBOT1QgaGF2ZSBkdXBsaWNhdGUgaXRlbXMgKGl0ZW1zICMjIFxcJyArIGogKyBcXCcgYW5kIFxcJyArIGkgKyBcXCcgYXJlIGlkZW50aWNhbClcXCcgJztcbiAgICAgIH1cbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6ICAnO1xuICAgICAgICBpZiAoJGlzRGF0YSkge1xuICAgICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWEpO1xuICAgICAgICB9XG4gICAgICAgIG91dCArPSAnICAgICAgICAgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XG4gICAgICB9XG4gICAgICBvdXQgKz0gJyB9ICc7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dCArPSAnIHt9ICc7XG4gICAgfVxuICAgIHZhciBfX2VyciA9IG91dDtcbiAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xuICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGl0LmFzeW5jKSB7XG4gICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xuICAgIH1cbiAgICBvdXQgKz0gJyB9ICc7XG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcbiAgICAgIG91dCArPSAnIGVsc2UgeyAnO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xuICAgICAgb3V0ICs9ICcgaWYgKHRydWUpIHsgJztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dDtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/uniqueItems.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/dotjs/validate.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/dotjs/validate.js ***!\\n  \\\\************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\nmodule.exports = function generate_validate(it, $keyword, $ruleType) {\\\\n  var out = '';\\\\n  var $async = it.schema.$async === true,\\\\n    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),\\\\n    $id = it.self._getId(it.schema);\\\\n  if (it.isTop) {\\\\n    if ($async) {\\\\n      it.async = true;\\\\n      var $es7 = it.opts.async == 'es7';\\\\n      it.yieldAwait = $es7 ? 'await' : 'yield';\\\\n    }\\\\n    out += ' var validate = ';\\\\n    if ($async) {\\\\n      if ($es7) {\\\\n        out += ' (async function ';\\\\n      } else {\\\\n        if (it.opts.async != '*') {\\\\n          out += 'co.wrap';\\\\n        }\\\\n        out += '(function* ';\\\\n      }\\\\n    } else {\\\\n      out += ' (function ';\\\\n    }\\\\n    out += ' (data, dataPath, parentData, parentDataProperty, rootData) { \\\\\\\\'use strict\\\\\\\\'; ';\\\\n    if ($id && (it.opts.sourceCode || it.opts.processCode)) {\\\\n      out += ' ' + ('/\\\\\\\\*# sourceURL=' + $id + ' */') + ' ';\\\\n    }\\\\n  }\\\\n  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {\\\\n    var $keyword = 'false schema';\\\\n    var $lvl = it.level;\\\\n    var $dataLvl = it.dataLevel;\\\\n    var $schema = it.schema[$keyword];\\\\n    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\\\\n    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\\\\n    var $breakOnError = !it.opts.allErrors;\\\\n    var $errorKeyword;\\\\n    var $data = 'data' + ($dataLvl || '');\\\\n    var $valid = 'valid' + $lvl;\\\\n    if (it.schema === false) {\\\\n      if (it.isTop) {\\\\n        $breakOnError = true;\\\\n      } else {\\\\n        out += ' var ' + ($valid) + ' = false; ';\\\\n      }\\\\n      var $$outStack = $$outStack || [];\\\\n      $$outStack.push(out);\\\\n      out = ''; /* istanbul ignore else */\\\\n      if (it.createErrors !== false) {\\\\n        out += ' { keyword: \\\\\\\\'' + ($errorKeyword || 'false schema') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';\\\\n        if (it.opts.messages !== false) {\\\\n          out += ' , message: \\\\\\\\'boolean schema is false\\\\\\\\' ';\\\\n        }\\\\n        if (it.opts.verbose) {\\\\n          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n        }\\\\n        out += ' } ';\\\\n      } else {\\\\n        out += ' {} ';\\\\n      }\\\\n      var __err = out;\\\\n      out = $$outStack.pop();\\\\n      if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n        if (it.async) {\\\\n          out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n        } else {\\\\n          out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n        }\\\\n      } else {\\\\n        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n      }\\\\n    } else {\\\\n      if (it.isTop) {\\\\n        if ($async) {\\\\n          out += ' return data; ';\\\\n        } else {\\\\n          out += ' validate.errors = null; return true; ';\\\\n        }\\\\n      } else {\\\\n        out += ' var ' + ($valid) + ' = true; ';\\\\n      }\\\\n    }\\\\n    if (it.isTop) {\\\\n      out += ' }); return validate; ';\\\\n    }\\\\n    return out;\\\\n  }\\\\n  if (it.isTop) {\\\\n    var $top = it.isTop,\\\\n      $lvl = it.level = 0,\\\\n      $dataLvl = it.dataLevel = 0,\\\\n      $data = 'data';\\\\n    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));\\\\n    it.baseId = it.baseId || it.rootId;\\\\n    delete it.isTop;\\\\n    it.dataPathArr = [undefined];\\\\n    out += ' var vErrors = null; ';\\\\n    out += ' var errors = 0;     ';\\\\n    out += ' if (rootData === undefined) rootData = data; ';\\\\n  } else {\\\\n    var $lvl = it.level,\\\\n      $dataLvl = it.dataLevel,\\\\n      $data = 'data' + ($dataLvl || '');\\\\n    if ($id) it.baseId = it.resolve.url(it.baseId, $id);\\\\n    if ($async && !it.async) throw new Error('async schema in sync schema');\\\\n    out += ' var errs_' + ($lvl) + ' = errors;';\\\\n  }\\\\n  var $valid = 'valid' + $lvl,\\\\n    $breakOnError = !it.opts.allErrors,\\\\n    $closingBraces1 = '',\\\\n    $closingBraces2 = '';\\\\n  var $errorKeyword;\\\\n  var $typeSchema = it.schema.type,\\\\n    $typeIsArray = Array.isArray($typeSchema);\\\\n  if ($typeIsArray && $typeSchema.length == 1) {\\\\n    $typeSchema = $typeSchema[0];\\\\n    $typeIsArray = false;\\\\n  }\\\\n  if (it.schema.$ref && $refKeywords) {\\\\n    if (it.opts.extendRefs == 'fail') {\\\\n      throw new Error('$ref: validation keywords used in schema at path \\\\\\\"' + it.errSchemaPath + '\\\\\\\" (see option extendRefs)');\\\\n    } else if (it.opts.extendRefs !== true) {\\\\n      $refKeywords = false;\\\\n      console.warn('$ref: keywords ignored in schema at path \\\\\\\"' + it.errSchemaPath + '\\\\\\\"');\\\\n    }\\\\n  }\\\\n  if ($typeSchema) {\\\\n    if (it.opts.coerceTypes) {\\\\n      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);\\\\n    }\\\\n    var $rulesGroup = it.RULES.types[$typeSchema];\\\\n    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {\\\\n      var $schemaPath = it.schemaPath + '.type',\\\\n        $errSchemaPath = it.errSchemaPath + '/type';\\\\n      var $schemaPath = it.schemaPath + '.type',\\\\n        $errSchemaPath = it.errSchemaPath + '/type',\\\\n        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';\\\\n      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';\\\\n      if ($coerceToTypes) {\\\\n        var $dataType = 'dataType' + $lvl,\\\\n          $coerced = 'coerced' + $lvl;\\\\n        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';\\\\n        if (it.opts.coerceTypes == 'array') {\\\\n          out += ' if (' + ($dataType) + ' == \\\\\\\\'object\\\\\\\\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \\\\\\\\'array\\\\\\\\'; ';\\\\n        }\\\\n        out += ' var ' + ($coerced) + ' = undefined; ';\\\\n        var $bracesCoercion = '';\\\\n        var arr1 = $coerceToTypes;\\\\n        if (arr1) {\\\\n          var $type, $i = -1,\\\\n            l1 = arr1.length - 1;\\\\n          while ($i < l1) {\\\\n            $type = arr1[$i += 1];\\\\n            if ($i) {\\\\n              out += ' if (' + ($coerced) + ' === undefined) { ';\\\\n              $bracesCoercion += '}';\\\\n            }\\\\n            if (it.opts.coerceTypes == 'array' && $type != 'array') {\\\\n              out += ' if (' + ($dataType) + ' == \\\\\\\\'array\\\\\\\\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';\\\\n            }\\\\n            if ($type == 'string') {\\\\n              out += ' if (' + ($dataType) + ' == \\\\\\\\'number\\\\\\\\' || ' + ($dataType) + ' == \\\\\\\\'boolean\\\\\\\\') ' + ($coerced) + ' = \\\\\\\\'\\\\\\\\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \\\\\\\\'\\\\\\\\'; ';\\\\n            } else if ($type == 'number' || $type == 'integer') {\\\\n              out += ' if (' + ($dataType) + ' == \\\\\\\\'boolean\\\\\\\\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \\\\\\\\'string\\\\\\\\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';\\\\n              if ($type == 'integer') {\\\\n                out += ' && !(' + ($data) + ' % 1)';\\\\n              }\\\\n              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';\\\\n            } else if ($type == 'boolean') {\\\\n              out += ' if (' + ($data) + ' === \\\\\\\\'false\\\\\\\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \\\\\\\\'true\\\\\\\\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';\\\\n            } else if ($type == 'null') {\\\\n              out += ' if (' + ($data) + ' === \\\\\\\\'\\\\\\\\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';\\\\n            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {\\\\n              out += ' if (' + ($dataType) + ' == \\\\\\\\'string\\\\\\\\' || ' + ($dataType) + ' == \\\\\\\\'number\\\\\\\\' || ' + ($dataType) + ' == \\\\\\\\'boolean\\\\\\\\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';\\\\n            }\\\\n          }\\\\n        }\\\\n        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';\\\\n        var $$outStack = $$outStack || [];\\\\n        $$outStack.push(out);\\\\n        out = ''; /* istanbul ignore else */\\\\n        if (it.createErrors !== false) {\\\\n          out += ' { keyword: \\\\\\\\'' + ($errorKeyword || 'type') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\\\\\\\'';\\\\n          if ($typeIsArray) {\\\\n            out += '' + ($typeSchema.join(\\\\\\\",\\\\\\\"));\\\\n          } else {\\\\n            out += '' + ($typeSchema);\\\\n          }\\\\n          out += '\\\\\\\\' } ';\\\\n          if (it.opts.messages !== false) {\\\\n            out += ' , message: \\\\\\\\'should be ';\\\\n            if ($typeIsArray) {\\\\n              out += '' + ($typeSchema.join(\\\\\\\",\\\\\\\"));\\\\n            } else {\\\\n              out += '' + ($typeSchema);\\\\n            }\\\\n            out += '\\\\\\\\' ';\\\\n          }\\\\n          if (it.opts.verbose) {\\\\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n          }\\\\n          out += ' } ';\\\\n        } else {\\\\n          out += ' {} ';\\\\n        }\\\\n        var __err = out;\\\\n        out = $$outStack.pop();\\\\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n          if (it.async) {\\\\n            out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n          } else {\\\\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n          }\\\\n        } else {\\\\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n        }\\\\n        out += ' } else {  ';\\\\n        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',\\\\n          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';\\\\n        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';\\\\n        if (!$dataLvl) {\\\\n          out += 'if (' + ($parentData) + ' !== undefined)';\\\\n        }\\\\n        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';\\\\n      } else {\\\\n        var $$outStack = $$outStack || [];\\\\n        $$outStack.push(out);\\\\n        out = ''; /* istanbul ignore else */\\\\n        if (it.createErrors !== false) {\\\\n          out += ' { keyword: \\\\\\\\'' + ($errorKeyword || 'type') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\\\\\\\'';\\\\n          if ($typeIsArray) {\\\\n            out += '' + ($typeSchema.join(\\\\\\\",\\\\\\\"));\\\\n          } else {\\\\n            out += '' + ($typeSchema);\\\\n          }\\\\n          out += '\\\\\\\\' } ';\\\\n          if (it.opts.messages !== false) {\\\\n            out += ' , message: \\\\\\\\'should be ';\\\\n            if ($typeIsArray) {\\\\n              out += '' + ($typeSchema.join(\\\\\\\",\\\\\\\"));\\\\n            } else {\\\\n              out += '' + ($typeSchema);\\\\n            }\\\\n            out += '\\\\\\\\' ';\\\\n          }\\\\n          if (it.opts.verbose) {\\\\n            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n          }\\\\n          out += ' } ';\\\\n        } else {\\\\n          out += ' {} ';\\\\n        }\\\\n        var __err = out;\\\\n        out = $$outStack.pop();\\\\n        if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n          if (it.async) {\\\\n            out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n          } else {\\\\n            out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n          }\\\\n        } else {\\\\n          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n        }\\\\n      }\\\\n      out += ' } ';\\\\n    }\\\\n  }\\\\n  if (it.schema.$ref && !$refKeywords) {\\\\n    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';\\\\n    if ($breakOnError) {\\\\n      out += ' } if (errors === ';\\\\n      if ($top) {\\\\n        out += '0';\\\\n      } else {\\\\n        out += 'errs_' + ($lvl);\\\\n      }\\\\n      out += ') { ';\\\\n      $closingBraces2 += '}';\\\\n    }\\\\n  } else {\\\\n    if (it.opts.v5 && it.schema.patternGroups) {\\\\n      console.warn('keyword \\\\\\\"patternGroups\\\\\\\" is deprecated and disabled. Use option patternGroups: true to enable.');\\\\n    }\\\\n    var arr2 = it.RULES;\\\\n    if (arr2) {\\\\n      var $rulesGroup, i2 = -1,\\\\n        l2 = arr2.length - 1;\\\\n      while (i2 < l2) {\\\\n        $rulesGroup = arr2[i2 += 1];\\\\n        if ($shouldUseGroup($rulesGroup)) {\\\\n          if ($rulesGroup.type) {\\\\n            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';\\\\n          }\\\\n          if (it.opts.useDefaults && !it.compositeRule) {\\\\n            if ($rulesGroup.type == 'object' && it.schema.properties) {\\\\n              var $schema = it.schema.properties,\\\\n                $schemaKeys = Object.keys($schema);\\\\n              var arr3 = $schemaKeys;\\\\n              if (arr3) {\\\\n                var $propertyKey, i3 = -1,\\\\n                  l3 = arr3.length - 1;\\\\n                while (i3 < l3) {\\\\n                  $propertyKey = arr3[i3 += 1];\\\\n                  var $sch = $schema[$propertyKey];\\\\n                  if ($sch.default !== undefined) {\\\\n                    var $passData = $data + it.util.getProperty($propertyKey);\\\\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\\\\n                    if (it.opts.useDefaults == 'shared') {\\\\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\\\\n                    } else {\\\\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\\\\n                    }\\\\n                    out += '; ';\\\\n                  }\\\\n                }\\\\n              }\\\\n            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {\\\\n              var arr4 = it.schema.items;\\\\n              if (arr4) {\\\\n                var $sch, $i = -1,\\\\n                  l4 = arr4.length - 1;\\\\n                while ($i < l4) {\\\\n                  $sch = arr4[$i += 1];\\\\n                  if ($sch.default !== undefined) {\\\\n                    var $passData = $data + '[' + $i + ']';\\\\n                    out += '  if (' + ($passData) + ' === undefined) ' + ($passData) + ' = ';\\\\n                    if (it.opts.useDefaults == 'shared') {\\\\n                      out += ' ' + (it.useDefault($sch.default)) + ' ';\\\\n                    } else {\\\\n                      out += ' ' + (JSON.stringify($sch.default)) + ' ';\\\\n                    }\\\\n                    out += '; ';\\\\n                  }\\\\n                }\\\\n              }\\\\n            }\\\\n          }\\\\n          var arr5 = $rulesGroup.rules;\\\\n          if (arr5) {\\\\n            var $rule, i5 = -1,\\\\n              l5 = arr5.length - 1;\\\\n            while (i5 < l5) {\\\\n              $rule = arr5[i5 += 1];\\\\n              if ($shouldUseRule($rule)) {\\\\n                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);\\\\n                if ($code) {\\\\n                  out += ' ' + ($code) + ' ';\\\\n                  if ($breakOnError) {\\\\n                    $closingBraces1 += '}';\\\\n                  }\\\\n                }\\\\n              }\\\\n            }\\\\n          }\\\\n          if ($breakOnError) {\\\\n            out += ' ' + ($closingBraces1) + ' ';\\\\n            $closingBraces1 = '';\\\\n          }\\\\n          if ($rulesGroup.type) {\\\\n            out += ' } ';\\\\n            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {\\\\n              out += ' else { ';\\\\n              var $schemaPath = it.schemaPath + '.type',\\\\n                $errSchemaPath = it.errSchemaPath + '/type';\\\\n              var $$outStack = $$outStack || [];\\\\n              $$outStack.push(out);\\\\n              out = ''; /* istanbul ignore else */\\\\n              if (it.createErrors !== false) {\\\\n                out += ' { keyword: \\\\\\\\'' + ($errorKeyword || 'type') + '\\\\\\\\' , dataPath: (dataPath || \\\\\\\\'\\\\\\\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \\\\\\\\'';\\\\n                if ($typeIsArray) {\\\\n                  out += '' + ($typeSchema.join(\\\\\\\",\\\\\\\"));\\\\n                } else {\\\\n                  out += '' + ($typeSchema);\\\\n                }\\\\n                out += '\\\\\\\\' } ';\\\\n                if (it.opts.messages !== false) {\\\\n                  out += ' , message: \\\\\\\\'should be ';\\\\n                  if ($typeIsArray) {\\\\n                    out += '' + ($typeSchema.join(\\\\\\\",\\\\\\\"));\\\\n                  } else {\\\\n                    out += '' + ($typeSchema);\\\\n                  }\\\\n                  out += '\\\\\\\\' ';\\\\n                }\\\\n                if (it.opts.verbose) {\\\\n                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\\\\n                }\\\\n                out += ' } ';\\\\n              } else {\\\\n                out += ' {} ';\\\\n              }\\\\n              var __err = out;\\\\n              out = $$outStack.pop();\\\\n              if (!it.compositeRule && $breakOnError) { /* istanbul ignore if */\\\\n                if (it.async) {\\\\n                  out += ' throw new ValidationError([' + (__err) + ']); ';\\\\n                } else {\\\\n                  out += ' validate.errors = [' + (__err) + ']; return false; ';\\\\n                }\\\\n              } else {\\\\n                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\\\\n              }\\\\n              out += ' } ';\\\\n            }\\\\n          }\\\\n          if ($breakOnError) {\\\\n            out += ' if (errors === ';\\\\n            if ($top) {\\\\n              out += '0';\\\\n            } else {\\\\n              out += 'errs_' + ($lvl);\\\\n            }\\\\n            out += ') { ';\\\\n            $closingBraces2 += '}';\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n  if ($breakOnError) {\\\\n    out += ' ' + ($closingBraces2) + ' ';\\\\n  }\\\\n  if ($top) {\\\\n    if ($async) {\\\\n      out += ' if (errors === 0) return data;           ';\\\\n      out += ' else throw new ValidationError(vErrors); ';\\\\n    } else {\\\\n      out += ' validate.errors = vErrors; ';\\\\n      out += ' return errors === 0;       ';\\\\n    }\\\\n    out += ' }); return validate;';\\\\n  } else {\\\\n    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';\\\\n  }\\\\n  out = it.util.cleanUpCode(out);\\\\n  if ($top) {\\\\n    out = it.util.finalCleanUpCode(out, $async);\\\\n  }\\\\n\\\\n  function $shouldUseGroup($rulesGroup) {\\\\n    var rules = $rulesGroup.rules;\\\\n    for (var i = 0; i < rules.length; i++)\\\\n      if ($shouldUseRule(rules[i])) return true;\\\\n  }\\\\n\\\\n  function $shouldUseRule($rule) {\\\\n    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImlementsSomeKeyword($rule));\\\\n  }\\\\n\\\\n  function $ruleImlementsSomeKeyword($rule) {\\\\n    var impl = $rule.implements;\\\\n    for (var i = 0; i < impl.length; i++)\\\\n      if (it.schema[impl[i]] !== undefined) return true;\\\\n  }\\\\n  return out;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/dotjs/validate.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/keyword.js\\\":\\n/*!*****************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/keyword.js ***!\\n  \\\\*****************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar IDENTIFIER = /^[a-z_$][a-z0-9_$\\\\\\\\-]*$/i;\\\\nvar customRuleCode = __webpack_require__(/*! ./dotjs/custom */ \\\\\\\"./node_modules/ajv/lib/dotjs/custom.js\\\\\\\");\\\\n\\\\nmodule.exports = {\\\\n  add: addKeyword,\\\\n  get: getKeyword,\\\\n  remove: removeKeyword\\\\n};\\\\n\\\\n/**\\\\n * Define custom keyword\\\\n * @this  Ajv\\\\n * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).\\\\n * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.\\\\n */\\\\nfunction addKeyword(keyword, definition) {\\\\n  /* jshint validthis: true */\\\\n  /* eslint no-shadow: 0 */\\\\n  var RULES = this.RULES;\\\\n\\\\n  if (RULES.keywords[keyword])\\\\n    throw new Error('Keyword ' + keyword + ' is already defined');\\\\n\\\\n  if (!IDENTIFIER.test(keyword))\\\\n    throw new Error('Keyword ' + keyword + ' is not a valid identifier');\\\\n\\\\n  if (definition) {\\\\n    if (definition.macro && definition.valid !== undefined)\\\\n      throw new Error('\\\\\\\"valid\\\\\\\" option cannot be used with macro keywords');\\\\n\\\\n    var dataType = definition.type;\\\\n    if (Array.isArray(dataType)) {\\\\n      var i, len = dataType.length;\\\\n      for (i=0; i<len; i++) checkDataType(dataType[i]);\\\\n      for (i=0; i<len; i++) _addRule(keyword, dataType[i], definition);\\\\n    } else {\\\\n      if (dataType) checkDataType(dataType);\\\\n      _addRule(keyword, dataType, definition);\\\\n    }\\\\n\\\\n    var $data = definition.$data === true && this._opts.$data;\\\\n    if ($data && !definition.validate)\\\\n      throw new Error('$data support: \\\\\\\"validate\\\\\\\" function is not defined');\\\\n\\\\n    var metaSchema = definition.metaSchema;\\\\n    if (metaSchema) {\\\\n      if ($data) {\\\\n        metaSchema = {\\\\n          anyOf: [\\\\n            metaSchema,\\\\n            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#' }\\\\n          ]\\\\n        };\\\\n      }\\\\n      definition.validateSchema = this.compile(metaSchema, true);\\\\n    }\\\\n  }\\\\n\\\\n  RULES.keywords[keyword] = RULES.all[keyword] = true;\\\\n\\\\n\\\\n  function _addRule(keyword, dataType, definition) {\\\\n    var ruleGroup;\\\\n    for (var i=0; i<RULES.length; i++) {\\\\n      var rg = RULES[i];\\\\n      if (rg.type == dataType) {\\\\n        ruleGroup = rg;\\\\n        break;\\\\n      }\\\\n    }\\\\n\\\\n    if (!ruleGroup) {\\\\n      ruleGroup = { type: dataType, rules: [] };\\\\n      RULES.push(ruleGroup);\\\\n    }\\\\n\\\\n    var rule = {\\\\n      keyword: keyword,\\\\n      definition: definition,\\\\n      custom: true,\\\\n      code: customRuleCode,\\\\n      implements: definition.implements\\\\n    };\\\\n    ruleGroup.rules.push(rule);\\\\n    RULES.custom[keyword] = rule;\\\\n  }\\\\n\\\\n\\\\n  function checkDataType(dataType) {\\\\n    if (!RULES.types[dataType]) throw new Error('Unknown type ' + dataType);\\\\n  }\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Get keyword\\\\n * @this  Ajv\\\\n * @param {String} keyword pre-defined or custom keyword.\\\\n * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.\\\\n */\\\\nfunction getKeyword(keyword) {\\\\n  /* jshint validthis: true */\\\\n  var rule = this.RULES.custom[keyword];\\\\n  return rule ? rule.definition : this.RULES.keywords[keyword] || false;\\\\n}\\\\n\\\\n\\\\n/**\\\\n * Remove keyword\\\\n * @this  Ajv\\\\n * @param {String} keyword pre-defined or custom keyword.\\\\n */\\\\nfunction removeKeyword(keyword) {\\\\n  /* jshint validthis: true */\\\\n  var RULES = this.RULES;\\\\n  delete RULES.keywords[keyword];\\\\n  delete RULES.all[keyword];\\\\n  delete RULES.custom[keyword];\\\\n  for (var i=0; i<RULES.length; i++) {\\\\n    var rules = RULES[i].rules;\\\\n    for (var j=0; j<rules.length; j++) {\\\\n      if (rules[j].keyword == keyword) {\\\\n        rules.splice(j, 1);\\\\n        break;\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9rZXl3b3JkLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9rZXl3b3JkLmpzP2ZmZjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgSURFTlRJRklFUiA9IC9eW2Etel8kXVthLXowLTlfJFxcLV0qJC9pO1xudmFyIGN1c3RvbVJ1bGVDb2RlID0gcmVxdWlyZSgnLi9kb3Rqcy9jdXN0b20nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFkZDogYWRkS2V5d29yZCxcbiAgZ2V0OiBnZXRLZXl3b3JkLFxuICByZW1vdmU6IHJlbW92ZUtleXdvcmRcbn07XG5cbi8qKlxuICogRGVmaW5lIGN1c3RvbSBrZXl3b3JkXG4gKiBAdGhpcyAgQWp2XG4gKiBAcGFyYW0ge1N0cmluZ30ga2V5d29yZCBjdXN0b20ga2V5d29yZCwgc2hvdWxkIGJlIHVuaXF1ZSAoaW5jbHVkaW5nIGRpZmZlcmVudCBmcm9tIGFsbCBzdGFuZGFyZCwgY3VzdG9tIGFuZCBtYWNybyBrZXl3b3JkcykuXG4gKiBAcGFyYW0ge09iamVjdH0gZGVmaW5pdGlvbiBrZXl3b3JkIGRlZmluaXRpb24gb2JqZWN0IHdpdGggcHJvcGVydGllcyBgdHlwZWAgKHR5cGUocykgd2hpY2ggdGhlIGtleXdvcmQgYXBwbGllcyB0byksIGB2YWxpZGF0ZWAgb3IgYGNvbXBpbGVgLlxuICovXG5mdW5jdGlvbiBhZGRLZXl3b3JkKGtleXdvcmQsIGRlZmluaXRpb24pIHtcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuICAvKiBlc2xpbnQgbm8tc2hhZG93OiAwICovXG4gIHZhciBSVUxFUyA9IHRoaXMuUlVMRVM7XG5cbiAgaWYgKFJVTEVTLmtleXdvcmRzW2tleXdvcmRdKVxuICAgIHRocm93IG5ldyBFcnJvcignS2V5d29yZCAnICsga2V5d29yZCArICcgaXMgYWxyZWFkeSBkZWZpbmVkJyk7XG5cbiAgaWYgKCFJREVOVElGSUVSLnRlc3Qoa2V5d29yZCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdLZXl3b3JkICcgKyBrZXl3b3JkICsgJyBpcyBub3QgYSB2YWxpZCBpZGVudGlmaWVyJyk7XG5cbiAgaWYgKGRlZmluaXRpb24pIHtcbiAgICBpZiAoZGVmaW5pdGlvbi5tYWNybyAmJiBkZWZpbml0aW9uLnZhbGlkICE9PSB1bmRlZmluZWQpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1widmFsaWRcIiBvcHRpb24gY2Fubm90IGJlIHVzZWQgd2l0aCBtYWNybyBrZXl3b3JkcycpO1xuXG4gICAgdmFyIGRhdGFUeXBlID0gZGVmaW5pdGlvbi50eXBlO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGRhdGFUeXBlKSkge1xuICAgICAgdmFyIGksIGxlbiA9IGRhdGFUeXBlLmxlbmd0aDtcbiAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSsrKSBjaGVja0RhdGFUeXBlKGRhdGFUeXBlW2ldKTtcbiAgICAgIGZvciAoaT0wOyBpPGxlbjsgaSsrKSBfYWRkUnVsZShrZXl3b3JkLCBkYXRhVHlwZVtpXSwgZGVmaW5pdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChkYXRhVHlwZSkgY2hlY2tEYXRhVHlwZShkYXRhVHlwZSk7XG4gICAgICBfYWRkUnVsZShrZXl3b3JkLCBkYXRhVHlwZSwgZGVmaW5pdGlvbik7XG4gICAgfVxuXG4gICAgdmFyICRkYXRhID0gZGVmaW5pdGlvbi4kZGF0YSA9PT0gdHJ1ZSAmJiB0aGlzLl9vcHRzLiRkYXRhO1xuICAgIGlmICgkZGF0YSAmJiAhZGVmaW5pdGlvbi52YWxpZGF0ZSlcbiAgICAgIHRocm93IG5ldyBFcnJvcignJGRhdGEgc3VwcG9ydDogXCJ2YWxpZGF0ZVwiIGZ1bmN0aW9uIGlzIG5vdCBkZWZpbmVkJyk7XG5cbiAgICB2YXIgbWV0YVNjaGVtYSA9IGRlZmluaXRpb24ubWV0YVNjaGVtYTtcbiAgICBpZiAobWV0YVNjaGVtYSkge1xuICAgICAgaWYgKCRkYXRhKSB7XG4gICAgICAgIG1ldGFTY2hlbWEgPSB7XG4gICAgICAgICAgYW55T2Y6IFtcbiAgICAgICAgICAgIG1ldGFTY2hlbWEsXG4gICAgICAgICAgICB7ICckcmVmJzogJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9lcG9iZXJlemtpbi9hanYvbWFzdGVyL2xpYi9yZWZzLyRkYXRhLmpzb24jJyB9XG4gICAgICAgICAgXVxuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZGVmaW5pdGlvbi52YWxpZGF0ZVNjaGVtYSA9IHRoaXMuY29tcGlsZShtZXRhU2NoZW1hLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBSVUxFUy5rZXl3b3Jkc1trZXl3b3JkXSA9IFJVTEVTLmFsbFtrZXl3b3JkXSA9IHRydWU7XG5cblxuICBmdW5jdGlvbiBfYWRkUnVsZShrZXl3b3JkLCBkYXRhVHlwZSwgZGVmaW5pdGlvbikge1xuICAgIHZhciBydWxlR3JvdXA7XG4gICAgZm9yICh2YXIgaT0wOyBpPFJVTEVTLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgcmcgPSBSVUxFU1tpXTtcbiAgICAgIGlmIChyZy50eXBlID09IGRhdGFUeXBlKSB7XG4gICAgICAgIHJ1bGVHcm91cCA9IHJnO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXJ1bGVHcm91cCkge1xuICAgICAgcnVsZUdyb3VwID0geyB0eXBlOiBkYXRhVHlwZSwgcnVsZXM6IFtdIH07XG4gICAgICBSVUxFUy5wdXNoKHJ1bGVHcm91cCk7XG4gICAgfVxuXG4gICAgdmFyIHJ1bGUgPSB7XG4gICAgICBrZXl3b3JkOiBrZXl3b3JkLFxuICAgICAgZGVmaW5pdGlvbjogZGVmaW5pdGlvbixcbiAgICAgIGN1c3RvbTogdHJ1ZSxcbiAgICAgIGNvZGU6IGN1c3RvbVJ1bGVDb2RlLFxuICAgICAgaW1wbGVtZW50czogZGVmaW5pdGlvbi5pbXBsZW1lbnRzXG4gICAgfTtcbiAgICBydWxlR3JvdXAucnVsZXMucHVzaChydWxlKTtcbiAgICBSVUxFUy5jdXN0b21ba2V5d29yZF0gPSBydWxlO1xuICB9XG5cblxuICBmdW5jdGlvbiBjaGVja0RhdGFUeXBlKGRhdGFUeXBlKSB7XG4gICAgaWYgKCFSVUxFUy50eXBlc1tkYXRhVHlwZV0pIHRocm93IG5ldyBFcnJvcignVW5rbm93biB0eXBlICcgKyBkYXRhVHlwZSk7XG4gIH1cbn1cblxuXG4vKipcbiAqIEdldCBrZXl3b3JkXG4gKiBAdGhpcyAgQWp2XG4gKiBAcGFyYW0ge1N0cmluZ30ga2V5d29yZCBwcmUtZGVmaW5lZCBvciBjdXN0b20ga2V5d29yZC5cbiAqIEByZXR1cm4ge09iamVjdHxCb29sZWFufSBjdXN0b20ga2V5d29yZCBkZWZpbml0aW9uLCBgdHJ1ZWAgaWYgaXQgaXMgYSBwcmVkZWZpbmVkIGtleXdvcmQsIGBmYWxzZWAgb3RoZXJ3aXNlLlxuICovXG5mdW5jdGlvbiBnZXRLZXl3b3JkKGtleXdvcmQpIHtcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xuICB2YXIgcnVsZSA9IHRoaXMuUlVMRVMuY3VzdG9tW2tleXdvcmRdO1xuICByZXR1cm4gcnVsZSA/IHJ1bGUuZGVmaW5pdGlvbiA6IHRoaXMuUlVMRVMua2V5d29yZHNba2V5d29yZF0gfHwgZmFsc2U7XG59XG5cblxuLyoqXG4gKiBSZW1vdmUga2V5d29yZFxuICogQHRoaXMgIEFqdlxuICogQHBhcmFtIHtTdHJpbmd9IGtleXdvcmQgcHJlLWRlZmluZWQgb3IgY3VzdG9tIGtleXdvcmQuXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZUtleXdvcmQoa2V5d29yZCkge1xuICAvKiBqc2hpbnQgdmFsaWR0aGlzOiB0cnVlICovXG4gIHZhciBSVUxFUyA9IHRoaXMuUlVMRVM7XG4gIGRlbGV0ZSBSVUxFUy5rZXl3b3Jkc1trZXl3b3JkXTtcbiAgZGVsZXRlIFJVTEVTLmFsbFtrZXl3b3JkXTtcbiAgZGVsZXRlIFJVTEVTLmN1c3RvbVtrZXl3b3JkXTtcbiAgZm9yICh2YXIgaT0wOyBpPFJVTEVTLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHJ1bGVzID0gUlVMRVNbaV0ucnVsZXM7XG4gICAgZm9yICh2YXIgaj0wOyBqPHJ1bGVzLmxlbmd0aDsgaisrKSB7XG4gICAgICBpZiAocnVsZXNbal0ua2V5d29yZCA9PSBrZXl3b3JkKSB7XG4gICAgICAgIHJ1bGVzLnNwbGljZShqLCAxKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/keyword.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/patternGroups.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/patternGroups.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar META_SCHEMA_ID = 'http://json-schema.org/draft-06/schema';\\\\n\\\\nmodule.exports = function (ajv) {\\\\n  var defaultMeta = ajv._opts.defaultMeta;\\\\n  var metaSchemaRef = typeof defaultMeta == 'string'\\\\n                      ? { $ref: defaultMeta }\\\\n                      : ajv.getSchema(META_SCHEMA_ID)\\\\n                        ? { $ref: META_SCHEMA_ID }\\\\n                        : {};\\\\n\\\\n  ajv.addKeyword('patternGroups', {\\\\n    // implemented in properties.jst\\\\n    metaSchema: {\\\\n      type: 'object',\\\\n      additionalProperties: {\\\\n        type: 'object',\\\\n        required: [ 'schema' ],\\\\n        properties: {\\\\n          maximum: {\\\\n            type: 'integer',\\\\n            minimum: 0\\\\n          },\\\\n          minimum: {\\\\n            type: 'integer',\\\\n            minimum: 0\\\\n          },\\\\n          schema: metaSchemaRef\\\\n        },\\\\n        additionalProperties: false\\\\n      }\\\\n    }\\\\n  });\\\\n  ajv.RULES.all.properties.implements.push('patternGroups');\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9wYXR0ZXJuR3JvdXBzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9wYXR0ZXJuR3JvdXBzLmpzP2RhZTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgTUVUQV9TQ0hFTUFfSUQgPSAnaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNi9zY2hlbWEnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhanYpIHtcbiAgdmFyIGRlZmF1bHRNZXRhID0gYWp2Ll9vcHRzLmRlZmF1bHRNZXRhO1xuICB2YXIgbWV0YVNjaGVtYVJlZiA9IHR5cGVvZiBkZWZhdWx0TWV0YSA9PSAnc3RyaW5nJ1xuICAgICAgICAgICAgICAgICAgICAgID8geyAkcmVmOiBkZWZhdWx0TWV0YSB9XG4gICAgICAgICAgICAgICAgICAgICAgOiBhanYuZ2V0U2NoZW1hKE1FVEFfU0NIRU1BX0lEKVxuICAgICAgICAgICAgICAgICAgICAgICAgPyB7ICRyZWY6IE1FVEFfU0NIRU1BX0lEIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIDoge307XG5cbiAgYWp2LmFkZEtleXdvcmQoJ3BhdHRlcm5Hcm91cHMnLCB7XG4gICAgLy8gaW1wbGVtZW50ZWQgaW4gcHJvcGVydGllcy5qc3RcbiAgICBtZXRhU2NoZW1hOiB7XG4gICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiB7XG4gICAgICAgIHR5cGU6ICdvYmplY3QnLFxuICAgICAgICByZXF1aXJlZDogWyAnc2NoZW1hJyBdLFxuICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgbWF4aW11bToge1xuICAgICAgICAgICAgdHlwZTogJ2ludGVnZXInLFxuICAgICAgICAgICAgbWluaW11bTogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgbWluaW11bToge1xuICAgICAgICAgICAgdHlwZTogJ2ludGVnZXInLFxuICAgICAgICAgICAgbWluaW11bTogMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgc2NoZW1hOiBtZXRhU2NoZW1hUmVmXG4gICAgICAgIH0sXG4gICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG4gIGFqdi5SVUxFUy5hbGwucHJvcGVydGllcy5pbXBsZW1lbnRzLnB1c2goJ3BhdHRlcm5Hcm91cHMnKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/patternGroups.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/refs/$data.json\\\":\\n/*!**********************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/refs/$data.json ***!\\n  \\\\**********************************************/\\n/*! exports provided: $schema, $id, description, type, required, properties, additionalProperties, default */\\n/***/ (function(module) {\\n\\neval(\\\"module.exports = JSON.parse(\\\\\\\"{\\\\\\\\\\\\\\\"$schema\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"http://json-schema.org/draft-06/schema#\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"$id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/$data.json#\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Meta-schema for $data reference (JSON-schema extension proposal)\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"$data\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$data\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"anyOf\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"relative-json-pointer\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"json-pointer\\\\\\\\\\\\\\\"}]}},\\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\":false}\\\\\\\");//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9yZWZzLyRkYXRhLmpzb24uanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/refs/$data.json\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/ajv/lib/refs/json-schema-draft-06.json\\\":\\n/*!*************************************************************!*\\\\\\n  !*** ./node_modules/ajv/lib/refs/json-schema-draft-06.json ***!\\n  \\\\*************************************************************/\\n/*! exports provided: $schema, $id, title, definitions, type, properties, default */\\n/***/ (function(module) {\\n\\neval(\\\"module.exports = JSON.parse(\\\\\\\"{\\\\\\\\\\\\\\\"$schema\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"http://json-schema.org/draft-06/schema#\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"$id\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"http://json-schema.org/draft-06/schema#\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"Core schema meta-schema\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"definitions\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"schemaArray\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"minItems\\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\\"items\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"}},\\\\\\\\\\\\\\\"nonNegativeInteger\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"integer\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"minimum\\\\\\\\\\\\\\\":0},\\\\\\\\\\\\\\\"nonNegativeIntegerDefault0\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"allOf\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/nonNegativeInteger\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":0}]},\\\\\\\\\\\\\\\"simpleTypes\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"enum\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"integer\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"null\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\"]},\\\\\\\\\\\\\\\"stringArray\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"items\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"uniqueItems\\\\\\\\\\\\\\\":true,\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":[]}},\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":[\\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\"],\\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$id\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"uri-reference\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"$schema\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"uri\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"uri-reference\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"title\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"description\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":{},\\\\\\\\\\\\\\\"multipleOf\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"exclusiveMinimum\\\\\\\\\\\\\\\":0},\\\\\\\\\\\\\\\"maximum\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"exclusiveMaximum\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"minimum\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"exclusiveMinimum\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"maxLength\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/nonNegativeInteger\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"minLength\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/nonNegativeIntegerDefault0\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"pattern\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"regex\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"additionalItems\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"items\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"anyOf\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/schemaArray\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":{}},\\\\\\\\\\\\\\\"maxItems\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/nonNegativeInteger\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"minItems\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/nonNegativeIntegerDefault0\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"uniqueItems\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"boolean\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":false},\\\\\\\\\\\\\\\"contains\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"maxProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/nonNegativeInteger\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"minProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/nonNegativeIntegerDefault0\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"required\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/stringArray\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"definitions\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":{}},\\\\\\\\\\\\\\\"properties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":{}},\\\\\\\\\\\\\\\"patternProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":{}},\\\\\\\\\\\\\\\"dependencies\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"object\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"additionalProperties\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"anyOf\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/stringArray\\\\\\\\\\\\\\\"}]}},\\\\\\\\\\\\\\\"propertyNames\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"const\\\\\\\\\\\\\\\":{},\\\\\\\\\\\\\\\"enum\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"minItems\\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\\"uniqueItems\\\\\\\\\\\\\\\":true},\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"anyOf\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/simpleTypes\\\\\\\\\\\\\\\"},{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"array\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"items\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/simpleTypes\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"minItems\\\\\\\\\\\\\\\":1,\\\\\\\\\\\\\\\"uniqueItems\\\\\\\\\\\\\\\":true}]},\\\\\\\\\\\\\\\"format\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"allOf\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/schemaArray\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"anyOf\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/schemaArray\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"oneOf\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#/definitions/schemaArray\\\\\\\\\\\\\\\"},\\\\\\\\\\\\\\\"not\\\\\\\\\\\\\\\":{\\\\\\\\\\\\\\\"$ref\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"#\\\\\\\\\\\\\\\"}},\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\":{}}\\\\\\\");//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9yZWZzL2pzb24tc2NoZW1hLWRyYWZ0LTA2Lmpzb24uanMiLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/ajv/lib/refs/json-schema-draft-06.json\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/co/index.js\\\":\\n/*!**********************************!*\\\\\\n  !*** ./node_modules/co/index.js ***!\\n  \\\\**********************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"\\\\n/**\\\\n * slice() reference.\\\\n */\\\\n\\\\nvar slice = Array.prototype.slice;\\\\n\\\\n/**\\\\n * Expose `co`.\\\\n */\\\\n\\\\nmodule.exports = co['default'] = co.co = co;\\\\n\\\\n/**\\\\n * Wrap the given generator `fn` into a\\\\n * function that returns a promise.\\\\n * This is a separate function so that\\\\n * every `co()` call doesn't create a new,\\\\n * unnecessary closure.\\\\n *\\\\n * @param {GeneratorFunction} fn\\\\n * @return {Function}\\\\n * @api public\\\\n */\\\\n\\\\nco.wrap = function (fn) {\\\\n  createPromise.__generatorFunction__ = fn;\\\\n  return createPromise;\\\\n  function createPromise() {\\\\n    return co.call(this, fn.apply(this, arguments));\\\\n  }\\\\n};\\\\n\\\\n/**\\\\n * Execute the generator function or a generator\\\\n * and return a promise.\\\\n *\\\\n * @param {Function} fn\\\\n * @return {Promise}\\\\n * @api public\\\\n */\\\\n\\\\nfunction co(gen) {\\\\n  var ctx = this;\\\\n  var args = slice.call(arguments, 1)\\\\n\\\\n  // we wrap everything in a promise to avoid promise chaining,\\\\n  // which leads to memory leak errors.\\\\n  // see https://github.com/tj/co/issues/180\\\\n  return new Promise(function(resolve, reject) {\\\\n    if (typeof gen === 'function') gen = gen.apply(ctx, args);\\\\n    if (!gen || typeof gen.next !== 'function') return resolve(gen);\\\\n\\\\n    onFulfilled();\\\\n\\\\n    /**\\\\n     * @param {Mixed} res\\\\n     * @return {Promise}\\\\n     * @api private\\\\n     */\\\\n\\\\n    function onFulfilled(res) {\\\\n      var ret;\\\\n      try {\\\\n        ret = gen.next(res);\\\\n      } catch (e) {\\\\n        return reject(e);\\\\n      }\\\\n      next(ret);\\\\n    }\\\\n\\\\n    /**\\\\n     * @param {Error} err\\\\n     * @return {Promise}\\\\n     * @api private\\\\n     */\\\\n\\\\n    function onRejected(err) {\\\\n      var ret;\\\\n      try {\\\\n        ret = gen.throw(err);\\\\n      } catch (e) {\\\\n        return reject(e);\\\\n      }\\\\n      next(ret);\\\\n    }\\\\n\\\\n    /**\\\\n     * Get the next value in the generator,\\\\n     * return a promise.\\\\n     *\\\\n     * @param {Object} ret\\\\n     * @return {Promise}\\\\n     * @api private\\\\n     */\\\\n\\\\n    function next(ret) {\\\\n      if (ret.done) return resolve(ret.value);\\\\n      var value = toPromise.call(ctx, ret.value);\\\\n      if (value && isPromise(value)) return value.then(onFulfilled, onRejected);\\\\n      return onRejected(new TypeError('You may only yield a function, promise, generator, array, or object, '\\\\n        + 'but the following object was passed: \\\\\\\"' + String(ret.value) + '\\\\\\\"'));\\\\n    }\\\\n  });\\\\n}\\\\n\\\\n/**\\\\n * Convert a `yield`ed value into a promise.\\\\n *\\\\n * @param {Mixed} obj\\\\n * @return {Promise}\\\\n * @api private\\\\n */\\\\n\\\\nfunction toPromise(obj) {\\\\n  if (!obj) return obj;\\\\n  if (isPromise(obj)) return obj;\\\\n  if (isGeneratorFunction(obj) || isGenerator(obj)) return co.call(this, obj);\\\\n  if ('function' == typeof obj) return thunkToPromise.call(this, obj);\\\\n  if (Array.isArray(obj)) return arrayToPromise.call(this, obj);\\\\n  if (isObject(obj)) return objectToPromise.call(this, obj);\\\\n  return obj;\\\\n}\\\\n\\\\n/**\\\\n * Convert a thunk to a promise.\\\\n *\\\\n * @param {Function}\\\\n * @return {Promise}\\\\n * @api private\\\\n */\\\\n\\\\nfunction thunkToPromise(fn) {\\\\n  var ctx = this;\\\\n  return new Promise(function (resolve, reject) {\\\\n    fn.call(ctx, function (err, res) {\\\\n      if (err) return reject(err);\\\\n      if (arguments.length > 2) res = slice.call(arguments, 1);\\\\n      resolve(res);\\\\n    });\\\\n  });\\\\n}\\\\n\\\\n/**\\\\n * Convert an array of \\\\\\\"yieldables\\\\\\\" to a promise.\\\\n * Uses `Promise.all()` internally.\\\\n *\\\\n * @param {Array} obj\\\\n * @return {Promise}\\\\n * @api private\\\\n */\\\\n\\\\nfunction arrayToPromise(obj) {\\\\n  return Promise.all(obj.map(toPromise, this));\\\\n}\\\\n\\\\n/**\\\\n * Convert an object of \\\\\\\"yieldables\\\\\\\" to a promise.\\\\n * Uses `Promise.all()` internally.\\\\n *\\\\n * @param {Object} obj\\\\n * @return {Promise}\\\\n * @api private\\\\n */\\\\n\\\\nfunction objectToPromise(obj){\\\\n  var results = new obj.constructor();\\\\n  var keys = Object.keys(obj);\\\\n  var promises = [];\\\\n  for (var i = 0; i < keys.length; i++) {\\\\n    var key = keys[i];\\\\n    var promise = toPromise.call(this, obj[key]);\\\\n    if (promise && isPromise(promise)) defer(promise, key);\\\\n    else results[key] = obj[key];\\\\n  }\\\\n  return Promise.all(promises).then(function () {\\\\n    return results;\\\\n  });\\\\n\\\\n  function defer(promise, key) {\\\\n    // predefine the key in the result\\\\n    results[key] = undefined;\\\\n    promises.push(promise.then(function (res) {\\\\n      results[key] = res;\\\\n    }));\\\\n  }\\\\n}\\\\n\\\\n/**\\\\n * Check if `obj` is a promise.\\\\n *\\\\n * @param {Object} obj\\\\n * @return {Boolean}\\\\n * @api private\\\\n */\\\\n\\\\nfunction isPromise(obj) {\\\\n  return 'function' == typeof obj.then;\\\\n}\\\\n\\\\n/**\\\\n * Check if `obj` is a generator.\\\\n *\\\\n * @param {Mixed} obj\\\\n * @return {Boolean}\\\\n * @api private\\\\n */\\\\n\\\\nfunction isGenerator(obj) {\\\\n  return 'function' == typeof obj.next && 'function' == typeof obj.throw;\\\\n}\\\\n\\\\n/**\\\\n * Check if `obj` is a generator function.\\\\n *\\\\n * @param {Mixed} obj\\\\n * @return {Boolean}\\\\n * @api private\\\\n */\\\\nfunction isGeneratorFunction(obj) {\\\\n  var constructor = obj.constructor;\\\\n  if (!constructor) return false;\\\\n  if ('GeneratorFunction' === constructor.name || 'GeneratorFunction' === constructor.displayName) return true;\\\\n  return isGenerator(constructor.prototype);\\\\n}\\\\n\\\\n/**\\\\n * Check for plain object.\\\\n *\\\\n * @param {Mixed} val\\\\n * @return {Boolean}\\\\n * @api private\\\\n */\\\\n\\\\nfunction isObject(val) {\\\\n  return Object == val.constructor;\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/co/index.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/json-schema-traverse/index.js\\\":\\n/*!****************************************************!*\\\\\\n  !*** ./node_modules/json-schema-traverse/index.js ***!\\n  \\\\****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nvar traverse = module.exports = function (schema, opts, cb) {\\\\n  if (typeof opts == 'function') {\\\\n    cb = opts;\\\\n    opts = {};\\\\n  }\\\\n  _traverse(opts, cb, schema, '', schema);\\\\n};\\\\n\\\\n\\\\ntraverse.keywords = {\\\\n  additionalItems: true,\\\\n  items: true,\\\\n  contains: true,\\\\n  additionalProperties: true,\\\\n  propertyNames: true,\\\\n  not: true\\\\n};\\\\n\\\\ntraverse.arrayKeywords = {\\\\n  items: true,\\\\n  allOf: true,\\\\n  anyOf: true,\\\\n  oneOf: true\\\\n};\\\\n\\\\ntraverse.propsKeywords = {\\\\n  definitions: true,\\\\n  properties: true,\\\\n  patternProperties: true,\\\\n  dependencies: true\\\\n};\\\\n\\\\ntraverse.skipKeywords = {\\\\n  enum: true,\\\\n  const: true,\\\\n  required: true,\\\\n  maximum: true,\\\\n  minimum: true,\\\\n  exclusiveMaximum: true,\\\\n  exclusiveMinimum: true,\\\\n  multipleOf: true,\\\\n  maxLength: true,\\\\n  minLength: true,\\\\n  pattern: true,\\\\n  format: true,\\\\n  maxItems: true,\\\\n  minItems: true,\\\\n  uniqueItems: true,\\\\n  maxProperties: true,\\\\n  minProperties: true\\\\n};\\\\n\\\\n\\\\nfunction _traverse(opts, cb, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\\\\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\\\\n    cb(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\\\\n    for (var key in schema) {\\\\n      var sch = schema[key];\\\\n      if (Array.isArray(sch)) {\\\\n        if (key in traverse.arrayKeywords) {\\\\n          for (var i=0; i<sch.length; i++)\\\\n            _traverse(opts, cb, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\\\\n        }\\\\n      } else if (key in traverse.propsKeywords) {\\\\n        if (sch && typeof sch == 'object') {\\\\n          for (var prop in sch)\\\\n            _traverse(opts, cb, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\\\\n        }\\\\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\\\\n        _traverse(opts, cb, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\\\n\\\\nfunction escapeJsonPtr(str) {\\\\n  return str.replace(/~/g, '~0').replace(/\\\\\\\\//g, '~1');\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbi1zY2hlbWEtdHJhdmVyc2UvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy9qc29uLXNjaGVtYS10cmF2ZXJzZS9pbmRleC5qcz84OWE5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHRyYXZlcnNlID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc2NoZW1hLCBvcHRzLCBjYikge1xuICBpZiAodHlwZW9mIG9wdHMgPT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gb3B0cztcbiAgICBvcHRzID0ge307XG4gIH1cbiAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hlbWEsICcnLCBzY2hlbWEpO1xufTtcblxuXG50cmF2ZXJzZS5rZXl3b3JkcyA9IHtcbiAgYWRkaXRpb25hbEl0ZW1zOiB0cnVlLFxuICBpdGVtczogdHJ1ZSxcbiAgY29udGFpbnM6IHRydWUsXG4gIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiB0cnVlLFxuICBwcm9wZXJ0eU5hbWVzOiB0cnVlLFxuICBub3Q6IHRydWVcbn07XG5cbnRyYXZlcnNlLmFycmF5S2V5d29yZHMgPSB7XG4gIGl0ZW1zOiB0cnVlLFxuICBhbGxPZjogdHJ1ZSxcbiAgYW55T2Y6IHRydWUsXG4gIG9uZU9mOiB0cnVlXG59O1xuXG50cmF2ZXJzZS5wcm9wc0tleXdvcmRzID0ge1xuICBkZWZpbml0aW9uczogdHJ1ZSxcbiAgcHJvcGVydGllczogdHJ1ZSxcbiAgcGF0dGVyblByb3BlcnRpZXM6IHRydWUsXG4gIGRlcGVuZGVuY2llczogdHJ1ZVxufTtcblxudHJhdmVyc2Uuc2tpcEtleXdvcmRzID0ge1xuICBlbnVtOiB0cnVlLFxuICBjb25zdDogdHJ1ZSxcbiAgcmVxdWlyZWQ6IHRydWUsXG4gIG1heGltdW06IHRydWUsXG4gIG1pbmltdW06IHRydWUsXG4gIGV4Y2x1c2l2ZU1heGltdW06IHRydWUsXG4gIGV4Y2x1c2l2ZU1pbmltdW06IHRydWUsXG4gIG11bHRpcGxlT2Y6IHRydWUsXG4gIG1heExlbmd0aDogdHJ1ZSxcbiAgbWluTGVuZ3RoOiB0cnVlLFxuICBwYXR0ZXJuOiB0cnVlLFxuICBmb3JtYXQ6IHRydWUsXG4gIG1heEl0ZW1zOiB0cnVlLFxuICBtaW5JdGVtczogdHJ1ZSxcbiAgdW5pcXVlSXRlbXM6IHRydWUsXG4gIG1heFByb3BlcnRpZXM6IHRydWUsXG4gIG1pblByb3BlcnRpZXM6IHRydWVcbn07XG5cblxuZnVuY3Rpb24gX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hlbWEsIGpzb25QdHIsIHJvb3RTY2hlbWEsIHBhcmVudEpzb25QdHIsIHBhcmVudEtleXdvcmQsIHBhcmVudFNjaGVtYSwga2V5SW5kZXgpIHtcbiAgaWYgKHNjaGVtYSAmJiB0eXBlb2Ygc2NoZW1hID09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KHNjaGVtYSkpIHtcbiAgICBjYihzY2hlbWEsIGpzb25QdHIsIHJvb3RTY2hlbWEsIHBhcmVudEpzb25QdHIsIHBhcmVudEtleXdvcmQsIHBhcmVudFNjaGVtYSwga2V5SW5kZXgpO1xuICAgIGZvciAodmFyIGtleSBpbiBzY2hlbWEpIHtcbiAgICAgIHZhciBzY2ggPSBzY2hlbWFba2V5XTtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHNjaCkpIHtcbiAgICAgICAgaWYgKGtleSBpbiB0cmF2ZXJzZS5hcnJheUtleXdvcmRzKSB7XG4gICAgICAgICAgZm9yICh2YXIgaT0wOyBpPHNjaC5sZW5ndGg7IGkrKylcbiAgICAgICAgICAgIF90cmF2ZXJzZShvcHRzLCBjYiwgc2NoW2ldLCBqc29uUHRyICsgJy8nICsga2V5ICsgJy8nICsgaSwgcm9vdFNjaGVtYSwganNvblB0ciwga2V5LCBzY2hlbWEsIGkpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGtleSBpbiB0cmF2ZXJzZS5wcm9wc0tleXdvcmRzKSB7XG4gICAgICAgIGlmIChzY2ggJiYgdHlwZW9mIHNjaCA9PSAnb2JqZWN0Jykge1xuICAgICAgICAgIGZvciAodmFyIHByb3AgaW4gc2NoKVxuICAgICAgICAgICAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hbcHJvcF0sIGpzb25QdHIgKyAnLycgKyBrZXkgKyAnLycgKyBlc2NhcGVKc29uUHRyKHByb3ApLCByb290U2NoZW1hLCBqc29uUHRyLCBrZXksIHNjaGVtYSwgcHJvcCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoa2V5IGluIHRyYXZlcnNlLmtleXdvcmRzIHx8IChvcHRzLmFsbEtleXMgJiYgIShrZXkgaW4gdHJhdmVyc2Uuc2tpcEtleXdvcmRzKSkpIHtcbiAgICAgICAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2gsIGpzb25QdHIgKyAnLycgKyBrZXksIHJvb3RTY2hlbWEsIGpzb25QdHIsIGtleSwgc2NoZW1hKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBlc2NhcGVKc29uUHRyKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL34vZywgJ34wJykucmVwbGFjZSgvXFwvL2csICd+MScpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/json-schema-traverse/index.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/json-stable-stringify/index.js\\\":\\n/*!*****************************************************!*\\\\\\n  !*** ./node_modules/json-stable-stringify/index.js ***!\\n  \\\\*****************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\neval(\\\"var json = typeof JSON !== 'undefined' ? JSON : __webpack_require__(/*! jsonify */ \\\\\\\"./node_modules/jsonify/index.js\\\\\\\");\\\\n\\\\nmodule.exports = function (obj, opts) {\\\\n    if (!opts) opts = {};\\\\n    if (typeof opts === 'function') opts = { cmp: opts };\\\\n    var space = opts.space || '';\\\\n    if (typeof space === 'number') space = Array(space+1).join(' ');\\\\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\\\\n    var replacer = opts.replacer || function(key, value) { return value; };\\\\n\\\\n    var cmp = opts.cmp && (function (f) {\\\\n        return function (node) {\\\\n            return function (a, b) {\\\\n                var aobj = { key: a, value: node[a] };\\\\n                var bobj = { key: b, value: node[b] };\\\\n                return f(aobj, bobj);\\\\n            };\\\\n        };\\\\n    })(opts.cmp);\\\\n\\\\n    var seen = [];\\\\n    return (function stringify (parent, key, node, level) {\\\\n        var indent = space ? ('\\\\\\\\n' + new Array(level + 1).join(space)) : '';\\\\n        var colonSeparator = space ? ': ' : ':';\\\\n\\\\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\\\\n            node = node.toJSON();\\\\n        }\\\\n\\\\n        node = replacer.call(parent, key, node);\\\\n\\\\n        if (node === undefined) {\\\\n            return;\\\\n        }\\\\n        if (typeof node !== 'object' || node === null) {\\\\n            return json.stringify(node);\\\\n        }\\\\n        if (isArray(node)) {\\\\n            var out = [];\\\\n            for (var i = 0; i < node.length; i++) {\\\\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\\\\n                out.push(indent + space + item);\\\\n            }\\\\n            return '[' + out.join(',') + indent + ']';\\\\n        }\\\\n        else {\\\\n            if (seen.indexOf(node) !== -1) {\\\\n                if (cycles) return json.stringify('__cycle__');\\\\n                throw new TypeError('Converting circular structure to JSON');\\\\n            }\\\\n            else seen.push(node);\\\\n\\\\n            var keys = objectKeys(node).sort(cmp && cmp(node));\\\\n            var out = [];\\\\n            for (var i = 0; i < keys.length; i++) {\\\\n                var key = keys[i];\\\\n                var value = stringify(node, key, node[key], level+1);\\\\n\\\\n                if(!value) continue;\\\\n\\\\n                var keyValue = json.stringify(key)\\\\n                    + colonSeparator\\\\n                    + value;\\\\n                ;\\\\n                out.push(indent + space + keyValue);\\\\n            }\\\\n            seen.splice(seen.indexOf(node), 1);\\\\n            return '{' + out.join(',') + indent + '}';\\\\n        }\\\\n    })({ '': obj }, '', obj, 0);\\\\n};\\\\n\\\\nvar isArray = Array.isArray || function (x) {\\\\n    return {}.toString.call(x) === '[object Array]';\\\\n};\\\\n\\\\nvar objectKeys = Object.keys || function (obj) {\\\\n    var has = Object.prototype.hasOwnProperty || function () { return true };\\\\n    var keys = [];\\\\n    for (var key in obj) {\\\\n        if (has.call(obj, key)) keys.push(key);\\\\n    }\\\\n    return keys;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbi1zdGFibGUtc3RyaW5naWZ5L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvanNvbi1zdGFibGUtc3RyaW5naWZ5L2luZGV4LmpzP2FjNGYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGpzb24gPSB0eXBlb2YgSlNPTiAhPT0gJ3VuZGVmaW5lZCcgPyBKU09OIDogcmVxdWlyZSgnanNvbmlmeScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcbiAgICBpZiAoIW9wdHMpIG9wdHMgPSB7fTtcbiAgICBpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIG9wdHMgPSB7IGNtcDogb3B0cyB9O1xuICAgIHZhciBzcGFjZSA9IG9wdHMuc3BhY2UgfHwgJyc7XG4gICAgaWYgKHR5cGVvZiBzcGFjZSA9PT0gJ251bWJlcicpIHNwYWNlID0gQXJyYXkoc3BhY2UrMSkuam9pbignICcpO1xuICAgIHZhciBjeWNsZXMgPSAodHlwZW9mIG9wdHMuY3ljbGVzID09PSAnYm9vbGVhbicpID8gb3B0cy5jeWNsZXMgOiBmYWxzZTtcbiAgICB2YXIgcmVwbGFjZXIgPSBvcHRzLnJlcGxhY2VyIHx8IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9O1xuXG4gICAgdmFyIGNtcCA9IG9wdHMuY21wICYmIChmdW5jdGlvbiAoZikge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICAgICAgICAgIHZhciBhb2JqID0geyBrZXk6IGEsIHZhbHVlOiBub2RlW2FdIH07XG4gICAgICAgICAgICAgICAgdmFyIGJvYmogPSB7IGtleTogYiwgdmFsdWU6IG5vZGVbYl0gfTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZihhb2JqLCBib2JqKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfSkob3B0cy5jbXApO1xuXG4gICAgdmFyIHNlZW4gPSBbXTtcbiAgICByZXR1cm4gKGZ1bmN0aW9uIHN0cmluZ2lmeSAocGFyZW50LCBrZXksIG5vZGUsIGxldmVsKSB7XG4gICAgICAgIHZhciBpbmRlbnQgPSBzcGFjZSA/ICgnXFxuJyArIG5ldyBBcnJheShsZXZlbCArIDEpLmpvaW4oc3BhY2UpKSA6ICcnO1xuICAgICAgICB2YXIgY29sb25TZXBhcmF0b3IgPSBzcGFjZSA/ICc6ICcgOiAnOic7XG5cbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS50b0pTT04gJiYgdHlwZW9mIG5vZGUudG9KU09OID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBub2RlID0gbm9kZS50b0pTT04oKTtcbiAgICAgICAgfVxuXG4gICAgICAgIG5vZGUgPSByZXBsYWNlci5jYWxsKHBhcmVudCwga2V5LCBub2RlKTtcblxuICAgICAgICBpZiAobm9kZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBub2RlICE9PSAnb2JqZWN0JyB8fCBub2RlID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4ganNvbi5zdHJpbmdpZnkobm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQXJyYXkobm9kZSkpIHtcbiAgICAgICAgICAgIHZhciBvdXQgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gc3RyaW5naWZ5KG5vZGUsIGksIG5vZGVbaV0sIGxldmVsKzEpIHx8IGpzb24uc3RyaW5naWZ5KG51bGwpO1xuICAgICAgICAgICAgICAgIG91dC5wdXNoKGluZGVudCArIHNwYWNlICsgaXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gJ1snICsgb3V0LmpvaW4oJywnKSArIGluZGVudCArICddJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChzZWVuLmluZGV4T2Yobm9kZSkgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgaWYgKGN5Y2xlcykgcmV0dXJuIGpzb24uc3RyaW5naWZ5KCdfX2N5Y2xlX18nKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDb252ZXJ0aW5nIGNpcmN1bGFyIHN0cnVjdHVyZSB0byBKU09OJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHNlZW4ucHVzaChub2RlKTtcblxuICAgICAgICAgICAgdmFyIGtleXMgPSBvYmplY3RLZXlzKG5vZGUpLnNvcnQoY21wICYmIGNtcChub2RlKSk7XG4gICAgICAgICAgICB2YXIgb3V0ID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBzdHJpbmdpZnkobm9kZSwga2V5LCBub2RlW2tleV0sIGxldmVsKzEpO1xuXG4gICAgICAgICAgICAgICAgaWYoIXZhbHVlKSBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgIHZhciBrZXlWYWx1ZSA9IGpzb24uc3RyaW5naWZ5KGtleSlcbiAgICAgICAgICAgICAgICAgICAgKyBjb2xvblNlcGFyYXRvclxuICAgICAgICAgICAgICAgICAgICArIHZhbHVlO1xuICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICBvdXQucHVzaChpbmRlbnQgKyBzcGFjZSArIGtleVZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlZW4uc3BsaWNlKHNlZW4uaW5kZXhPZihub2RlKSwgMSk7XG4gICAgICAgICAgICByZXR1cm4gJ3snICsgb3V0LmpvaW4oJywnKSArIGluZGVudCArICd9JztcbiAgICAgICAgfVxuICAgIH0pKHsgJyc6IG9iaiB9LCAnJywgb2JqLCAwKTtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeCkge1xuICAgIHJldHVybiB7fS50b1N0cmluZy5jYWxsKHgpID09PSAnW29iamVjdCBBcnJheV0nO1xufTtcblxudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gICAgdmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkgfHwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdHJ1ZSB9O1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgICAgICBpZiAoaGFzLmNhbGwob2JqLCBrZXkpKSBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gICAgcmV0dXJuIGtleXM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/json-stable-stringify/index.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/jsonify/index.js\\\":\\n/*!***************************************!*\\\\\\n  !*** ./node_modules/jsonify/index.js ***!\\n  \\\\***************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\neval(\\\"exports.parse = __webpack_require__(/*! ./lib/parse */ \\\\\\\"./node_modules/jsonify/lib/parse.js\\\\\\\");\\\\nexports.stringify = __webpack_require__(/*! ./lib/stringify */ \\\\\\\"./node_modules/jsonify/lib/stringify.js\\\\\\\");\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbmlmeS9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL2pzb25pZnkvaW5kZXguanM/NzZjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLnBhcnNlID0gcmVxdWlyZSgnLi9saWIvcGFyc2UnKTtcbmV4cG9ydHMuc3RyaW5naWZ5ID0gcmVxdWlyZSgnLi9saWIvc3RyaW5naWZ5Jyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/jsonify/index.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/jsonify/lib/parse.js\\\":\\n/*!*******************************************!*\\\\\\n  !*** ./node_modules/jsonify/lib/parse.js ***!\\n  \\\\*******************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"var at, // The index of the current character\\\\n    ch, // The current character\\\\n    escapee = {\\\\n        '\\\\\\\"':  '\\\\\\\"',\\\\n        '\\\\\\\\\\\\\\\\': '\\\\\\\\\\\\\\\\',\\\\n        '/':  '/',\\\\n        b:    '\\\\\\\\b',\\\\n        f:    '\\\\\\\\f',\\\\n        n:    '\\\\\\\\n',\\\\n        r:    '\\\\\\\\r',\\\\n        t:    '\\\\\\\\t'\\\\n    },\\\\n    text,\\\\n\\\\n    error = function (m) {\\\\n        // Call error when something is wrong.\\\\n        throw {\\\\n            name:    'SyntaxError',\\\\n            message: m,\\\\n            at:      at,\\\\n            text:    text\\\\n        };\\\\n    },\\\\n    \\\\n    next = function (c) {\\\\n        // If a c parameter is provided, verify that it matches the current character.\\\\n        if (c && c !== ch) {\\\\n            error(\\\\\\\"Expected '\\\\\\\" + c + \\\\\\\"' instead of '\\\\\\\" + ch + \\\\\\\"'\\\\\\\");\\\\n        }\\\\n        \\\\n        // Get the next character. When there are no more characters,\\\\n        // return the empty string.\\\\n        \\\\n        ch = text.charAt(at);\\\\n        at += 1;\\\\n        return ch;\\\\n    },\\\\n    \\\\n    number = function () {\\\\n        // Parse a number value.\\\\n        var number,\\\\n            string = '';\\\\n        \\\\n        if (ch === '-') {\\\\n            string = '-';\\\\n            next('-');\\\\n        }\\\\n        while (ch >= '0' && ch <= '9') {\\\\n            string += ch;\\\\n            next();\\\\n        }\\\\n        if (ch === '.') {\\\\n            string += '.';\\\\n            while (next() && ch >= '0' && ch <= '9') {\\\\n                string += ch;\\\\n            }\\\\n        }\\\\n        if (ch === 'e' || ch === 'E') {\\\\n            string += ch;\\\\n            next();\\\\n            if (ch === '-' || ch === '+') {\\\\n                string += ch;\\\\n                next();\\\\n            }\\\\n            while (ch >= '0' && ch <= '9') {\\\\n                string += ch;\\\\n                next();\\\\n            }\\\\n        }\\\\n        number = +string;\\\\n        if (!isFinite(number)) {\\\\n            error(\\\\\\\"Bad number\\\\\\\");\\\\n        } else {\\\\n            return number;\\\\n        }\\\\n    },\\\\n    \\\\n    string = function () {\\\\n        // Parse a string value.\\\\n        var hex,\\\\n            i,\\\\n            string = '',\\\\n            uffff;\\\\n        \\\\n        // When parsing for string values, we must look for \\\\\\\" and \\\\\\\\ characters.\\\\n        if (ch === '\\\\\\\"') {\\\\n            while (next()) {\\\\n                if (ch === '\\\\\\\"') {\\\\n                    next();\\\\n                    return string;\\\\n                } else if (ch === '\\\\\\\\\\\\\\\\') {\\\\n                    next();\\\\n                    if (ch === 'u') {\\\\n                        uffff = 0;\\\\n                        for (i = 0; i < 4; i += 1) {\\\\n                            hex = parseInt(next(), 16);\\\\n                            if (!isFinite(hex)) {\\\\n                                break;\\\\n                            }\\\\n                            uffff = uffff * 16 + hex;\\\\n                        }\\\\n                        string += String.fromCharCode(uffff);\\\\n                    } else if (typeof escapee[ch] === 'string') {\\\\n                        string += escapee[ch];\\\\n                    } else {\\\\n                        break;\\\\n                    }\\\\n                } else {\\\\n                    string += ch;\\\\n                }\\\\n            }\\\\n        }\\\\n        error(\\\\\\\"Bad string\\\\\\\");\\\\n    },\\\\n\\\\n    white = function () {\\\\n\\\\n// Skip whitespace.\\\\n\\\\n        while (ch && ch <= ' ') {\\\\n            next();\\\\n        }\\\\n    },\\\\n\\\\n    word = function () {\\\\n\\\\n// true, false, or null.\\\\n\\\\n        switch (ch) {\\\\n        case 't':\\\\n            next('t');\\\\n            next('r');\\\\n            next('u');\\\\n            next('e');\\\\n            return true;\\\\n        case 'f':\\\\n            next('f');\\\\n            next('a');\\\\n            next('l');\\\\n            next('s');\\\\n            next('e');\\\\n            return false;\\\\n        case 'n':\\\\n            next('n');\\\\n            next('u');\\\\n            next('l');\\\\n            next('l');\\\\n            return null;\\\\n        }\\\\n        error(\\\\\\\"Unexpected '\\\\\\\" + ch + \\\\\\\"'\\\\\\\");\\\\n    },\\\\n\\\\n    value,  // Place holder for the value function.\\\\n\\\\n    array = function () {\\\\n\\\\n// Parse an array value.\\\\n\\\\n        var array = [];\\\\n\\\\n        if (ch === '[') {\\\\n            next('[');\\\\n            white();\\\\n            if (ch === ']') {\\\\n                next(']');\\\\n                return array;   // empty array\\\\n            }\\\\n            while (ch) {\\\\n                array.push(value());\\\\n                white();\\\\n                if (ch === ']') {\\\\n                    next(']');\\\\n                    return array;\\\\n                }\\\\n                next(',');\\\\n                white();\\\\n            }\\\\n        }\\\\n        error(\\\\\\\"Bad array\\\\\\\");\\\\n    },\\\\n\\\\n    object = function () {\\\\n\\\\n// Parse an object value.\\\\n\\\\n        var key,\\\\n            object = {};\\\\n\\\\n        if (ch === '{') {\\\\n            next('{');\\\\n            white();\\\\n            if (ch === '}') {\\\\n                next('}');\\\\n                return object;   // empty object\\\\n            }\\\\n            while (ch) {\\\\n                key = string();\\\\n                white();\\\\n                next(':');\\\\n                if (Object.hasOwnProperty.call(object, key)) {\\\\n                    error('Duplicate key \\\\\\\"' + key + '\\\\\\\"');\\\\n                }\\\\n                object[key] = value();\\\\n                white();\\\\n                if (ch === '}') {\\\\n                    next('}');\\\\n                    return object;\\\\n                }\\\\n                next(',');\\\\n                white();\\\\n            }\\\\n        }\\\\n        error(\\\\\\\"Bad object\\\\\\\");\\\\n    };\\\\n\\\\nvalue = function () {\\\\n\\\\n// Parse a JSON value. It could be an object, an array, a string, a number,\\\\n// or a word.\\\\n\\\\n    white();\\\\n    switch (ch) {\\\\n    case '{':\\\\n        return object();\\\\n    case '[':\\\\n        return array();\\\\n    case '\\\\\\\"':\\\\n        return string();\\\\n    case '-':\\\\n        return number();\\\\n    default:\\\\n        return ch >= '0' && ch <= '9' ? number() : word();\\\\n    }\\\\n};\\\\n\\\\n// Return the json_parse function. It will have access to all of the above\\\\n// functions and variables.\\\\n\\\\nmodule.exports = function (source, reviver) {\\\\n    var result;\\\\n    \\\\n    text = source;\\\\n    at = 0;\\\\n    ch = ' ';\\\\n    result = value();\\\\n    white();\\\\n    if (ch) {\\\\n        error(\\\\\\\"Syntax error\\\\\\\");\\\\n    }\\\\n\\\\n    // If there is a reviver function, we recursively walk the new structure,\\\\n    // passing each name/value pair to the reviver function for possible\\\\n    // transformation, starting with a temporary root object that holds the result\\\\n    // in an empty key. If there is not a reviver function, we simply return the\\\\n    // result.\\\\n\\\\n    return typeof reviver === 'function' ? (function walk(holder, key) {\\\\n        var k, v, value = holder[key];\\\\n        if (value && typeof value === 'object') {\\\\n            for (k in value) {\\\\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\\\\n                    v = walk(value, k);\\\\n                    if (v !== undefined) {\\\\n                        value[k] = v;\\\\n                    } else {\\\\n                        delete value[k];\\\\n                    }\\\\n                }\\\\n            }\\\\n        }\\\\n        return reviver.call(holder, key, value);\\\\n    }({'': result}, '')) : result;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/jsonify/lib/parse.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/jsonify/lib/stringify.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/jsonify/lib/stringify.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"var cx = /[\\\\\\\\u0000\\\\\\\\u00ad\\\\\\\\u0600-\\\\\\\\u0604\\\\\\\\u070f\\\\\\\\u17b4\\\\\\\\u17b5\\\\\\\\u200c-\\\\\\\\u200f\\\\\\\\u2028-\\\\\\\\u202f\\\\\\\\u2060-\\\\\\\\u206f\\\\\\\\ufeff\\\\\\\\ufff0-\\\\\\\\uffff]/g,\\\\n    escapable = /[\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\x00-\\\\\\\\x1f\\\\\\\\x7f-\\\\\\\\x9f\\\\\\\\u00ad\\\\\\\\u0600-\\\\\\\\u0604\\\\\\\\u070f\\\\\\\\u17b4\\\\\\\\u17b5\\\\\\\\u200c-\\\\\\\\u200f\\\\\\\\u2028-\\\\\\\\u202f\\\\\\\\u2060-\\\\\\\\u206f\\\\\\\\ufeff\\\\\\\\ufff0-\\\\\\\\uffff]/g,\\\\n    gap,\\\\n    indent,\\\\n    meta = {    // table of character substitutions\\\\n        '\\\\\\\\b': '\\\\\\\\\\\\\\\\b',\\\\n        '\\\\\\\\t': '\\\\\\\\\\\\\\\\t',\\\\n        '\\\\\\\\n': '\\\\\\\\\\\\\\\\n',\\\\n        '\\\\\\\\f': '\\\\\\\\\\\\\\\\f',\\\\n        '\\\\\\\\r': '\\\\\\\\\\\\\\\\r',\\\\n        '\\\\\\\"' : '\\\\\\\\\\\\\\\\\\\\\\\"',\\\\n        '\\\\\\\\\\\\\\\\': '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\n    },\\\\n    rep;\\\\n\\\\nfunction quote(string) {\\\\n    // If the string contains no control characters, no quote characters, and no\\\\n    // backslash characters, then we can safely slap some quotes around it.\\\\n    // Otherwise we must also replace the offending characters with safe escape\\\\n    // sequences.\\\\n    \\\\n    escapable.lastIndex = 0;\\\\n    return escapable.test(string) ? '\\\\\\\"' + string.replace(escapable, function (a) {\\\\n        var c = meta[a];\\\\n        return typeof c === 'string' ? c :\\\\n            '\\\\\\\\\\\\\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\\\\n    }) + '\\\\\\\"' : '\\\\\\\"' + string + '\\\\\\\"';\\\\n}\\\\n\\\\nfunction str(key, holder) {\\\\n    // Produce a string from holder[key].\\\\n    var i,          // The loop counter.\\\\n        k,          // The member key.\\\\n        v,          // The member value.\\\\n        length,\\\\n        mind = gap,\\\\n        partial,\\\\n        value = holder[key];\\\\n    \\\\n    // If the value has a toJSON method, call it to obtain a replacement value.\\\\n    if (value && typeof value === 'object' &&\\\\n            typeof value.toJSON === 'function') {\\\\n        value = value.toJSON(key);\\\\n    }\\\\n    \\\\n    // If we were called with a replacer function, then call the replacer to\\\\n    // obtain a replacement value.\\\\n    if (typeof rep === 'function') {\\\\n        value = rep.call(holder, key, value);\\\\n    }\\\\n    \\\\n    // What happens next depends on the value's type.\\\\n    switch (typeof value) {\\\\n        case 'string':\\\\n            return quote(value);\\\\n        \\\\n        case 'number':\\\\n            // JSON numbers must be finite. Encode non-finite numbers as null.\\\\n            return isFinite(value) ? String(value) : 'null';\\\\n        \\\\n        case 'boolean':\\\\n        case 'null':\\\\n            // If the value is a boolean or null, convert it to a string. Note:\\\\n            // typeof null does not produce 'null'. The case is included here in\\\\n            // the remote chance that this gets fixed someday.\\\\n            return String(value);\\\\n            \\\\n        case 'object':\\\\n            if (!value) return 'null';\\\\n            gap += indent;\\\\n            partial = [];\\\\n            \\\\n            // Array.isArray\\\\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\\\\n                length = value.length;\\\\n                for (i = 0; i < length; i += 1) {\\\\n                    partial[i] = str(i, value) || 'null';\\\\n                }\\\\n                \\\\n                // Join all of the elements together, separated with commas, and\\\\n                // wrap them in brackets.\\\\n                v = partial.length === 0 ? '[]' : gap ?\\\\n                    '[\\\\\\\\n' + gap + partial.join(',\\\\\\\\n' + gap) + '\\\\\\\\n' + mind + ']' :\\\\n                    '[' + partial.join(',') + ']';\\\\n                gap = mind;\\\\n                return v;\\\\n            }\\\\n            \\\\n            // If the replacer is an array, use it to select the members to be\\\\n            // stringified.\\\\n            if (rep && typeof rep === 'object') {\\\\n                length = rep.length;\\\\n                for (i = 0; i < length; i += 1) {\\\\n                    k = rep[i];\\\\n                    if (typeof k === 'string') {\\\\n                        v = str(k, value);\\\\n                        if (v) {\\\\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\\\\n                        }\\\\n                    }\\\\n                }\\\\n            }\\\\n            else {\\\\n                // Otherwise, iterate through all of the keys in the object.\\\\n                for (k in value) {\\\\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\\\\n                        v = str(k, value);\\\\n                        if (v) {\\\\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\\\\n                        }\\\\n                    }\\\\n                }\\\\n            }\\\\n            \\\\n        // Join all of the member texts together, separated with commas,\\\\n        // and wrap them in braces.\\\\n\\\\n        v = partial.length === 0 ? '{}' : gap ?\\\\n            '{\\\\\\\\n' + gap + partial.join(',\\\\\\\\n' + gap) + '\\\\\\\\n' + mind + '}' :\\\\n            '{' + partial.join(',') + '}';\\\\n        gap = mind;\\\\n        return v;\\\\n    }\\\\n}\\\\n\\\\nmodule.exports = function (value, replacer, space) {\\\\n    var i;\\\\n    gap = '';\\\\n    indent = '';\\\\n    \\\\n    // If the space parameter is a number, make an indent string containing that\\\\n    // many spaces.\\\\n    if (typeof space === 'number') {\\\\n        for (i = 0; i < space; i += 1) {\\\\n            indent += ' ';\\\\n        }\\\\n    }\\\\n    // If the space parameter is a string, it will be used as the indent string.\\\\n    else if (typeof space === 'string') {\\\\n        indent = space;\\\\n    }\\\\n\\\\n    // If there is a replacer, it must be a function or an array.\\\\n    // Otherwise, throw an error.\\\\n    rep = replacer;\\\\n    if (replacer && typeof replacer !== 'function'\\\\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\\\\n        throw new Error('JSON.stringify');\\\\n    }\\\\n    \\\\n    // Make a fake root object containing our value under the key of ''.\\\\n    // Return the result of stringifying the value.\\\\n    return str('', {'': value});\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbmlmeS9saWIvc3RyaW5naWZ5LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvanNvbmlmeS9saWIvc3RyaW5naWZ5LmpzP2I4ZjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGN4ID0gL1tcXHUwMDAwXFx1MDBhZFxcdTA2MDAtXFx1MDYwNFxcdTA3MGZcXHUxN2I0XFx1MTdiNVxcdTIwMGMtXFx1MjAwZlxcdTIwMjgtXFx1MjAyZlxcdTIwNjAtXFx1MjA2ZlxcdWZlZmZcXHVmZmYwLVxcdWZmZmZdL2csXG4gICAgZXNjYXBhYmxlID0gL1tcXFxcXFxcIlxceDAwLVxceDFmXFx4N2YtXFx4OWZcXHUwMGFkXFx1MDYwMC1cXHUwNjA0XFx1MDcwZlxcdTE3YjRcXHUxN2I1XFx1MjAwYy1cXHUyMDBmXFx1MjAyOC1cXHUyMDJmXFx1MjA2MC1cXHUyMDZmXFx1ZmVmZlxcdWZmZjAtXFx1ZmZmZl0vZyxcbiAgICBnYXAsXG4gICAgaW5kZW50LFxuICAgIG1ldGEgPSB7ICAgIC8vIHRhYmxlIG9mIGNoYXJhY3RlciBzdWJzdGl0dXRpb25zXG4gICAgICAgICdcXGInOiAnXFxcXGInLFxuICAgICAgICAnXFx0JzogJ1xcXFx0JyxcbiAgICAgICAgJ1xcbic6ICdcXFxcbicsXG4gICAgICAgICdcXGYnOiAnXFxcXGYnLFxuICAgICAgICAnXFxyJzogJ1xcXFxyJyxcbiAgICAgICAgJ1wiJyA6ICdcXFxcXCInLFxuICAgICAgICAnXFxcXCc6ICdcXFxcXFxcXCdcbiAgICB9LFxuICAgIHJlcDtcblxuZnVuY3Rpb24gcXVvdGUoc3RyaW5nKSB7XG4gICAgLy8gSWYgdGhlIHN0cmluZyBjb250YWlucyBubyBjb250cm9sIGNoYXJhY3RlcnMsIG5vIHF1b3RlIGNoYXJhY3RlcnMsIGFuZCBub1xuICAgIC8vIGJhY2tzbGFzaCBjaGFyYWN0ZXJzLCB0aGVuIHdlIGNhbiBzYWZlbHkgc2xhcCBzb21lIHF1b3RlcyBhcm91bmQgaXQuXG4gICAgLy8gT3RoZXJ3aXNlIHdlIG11c3QgYWxzbyByZXBsYWNlIHRoZSBvZmZlbmRpbmcgY2hhcmFjdGVycyB3aXRoIHNhZmUgZXNjYXBlXG4gICAgLy8gc2VxdWVuY2VzLlxuICAgIFxuICAgIGVzY2FwYWJsZS5sYXN0SW5kZXggPSAwO1xuICAgIHJldHVybiBlc2NhcGFibGUudGVzdChzdHJpbmcpID8gJ1wiJyArIHN0cmluZy5yZXBsYWNlKGVzY2FwYWJsZSwgZnVuY3Rpb24gKGEpIHtcbiAgICAgICAgdmFyIGMgPSBtZXRhW2FdO1xuICAgICAgICByZXR1cm4gdHlwZW9mIGMgPT09ICdzdHJpbmcnID8gYyA6XG4gICAgICAgICAgICAnXFxcXHUnICsgKCcwMDAwJyArIGEuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikpLnNsaWNlKC00KTtcbiAgICB9KSArICdcIicgOiAnXCInICsgc3RyaW5nICsgJ1wiJztcbn1cblxuZnVuY3Rpb24gc3RyKGtleSwgaG9sZGVyKSB7XG4gICAgLy8gUHJvZHVjZSBhIHN0cmluZyBmcm9tIGhvbGRlcltrZXldLlxuICAgIHZhciBpLCAgICAgICAgICAvLyBUaGUgbG9vcCBjb3VudGVyLlxuICAgICAgICBrLCAgICAgICAgICAvLyBUaGUgbWVtYmVyIGtleS5cbiAgICAgICAgdiwgICAgICAgICAgLy8gVGhlIG1lbWJlciB2YWx1ZS5cbiAgICAgICAgbGVuZ3RoLFxuICAgICAgICBtaW5kID0gZ2FwLFxuICAgICAgICBwYXJ0aWFsLFxuICAgICAgICB2YWx1ZSA9IGhvbGRlcltrZXldO1xuICAgIFxuICAgIC8vIElmIHRoZSB2YWx1ZSBoYXMgYSB0b0pTT04gbWV0aG9kLCBjYWxsIGl0IHRvIG9idGFpbiBhIHJlcGxhY2VtZW50IHZhbHVlLlxuICAgIGlmICh2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUudG9KU09OID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUudG9KU09OKGtleSk7XG4gICAgfVxuICAgIFxuICAgIC8vIElmIHdlIHdlcmUgY2FsbGVkIHdpdGggYSByZXBsYWNlciBmdW5jdGlvbiwgdGhlbiBjYWxsIHRoZSByZXBsYWNlciB0b1xuICAgIC8vIG9idGFpbiBhIHJlcGxhY2VtZW50IHZhbHVlLlxuICAgIGlmICh0eXBlb2YgcmVwID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhbHVlID0gcmVwLmNhbGwoaG9sZGVyLCBrZXksIHZhbHVlKTtcbiAgICB9XG4gICAgXG4gICAgLy8gV2hhdCBoYXBwZW5zIG5leHQgZGVwZW5kcyBvbiB0aGUgdmFsdWUncyB0eXBlLlxuICAgIHN3aXRjaCAodHlwZW9mIHZhbHVlKSB7XG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgICByZXR1cm4gcXVvdGUodmFsdWUpO1xuICAgICAgICBcbiAgICAgICAgY2FzZSAnbnVtYmVyJzpcbiAgICAgICAgICAgIC8vIEpTT04gbnVtYmVycyBtdXN0IGJlIGZpbml0ZS4gRW5jb2RlIG5vbi1maW5pdGUgbnVtYmVycyBhcyBudWxsLlxuICAgICAgICAgICAgcmV0dXJuIGlzRmluaXRlKHZhbHVlKSA/IFN0cmluZyh2YWx1ZSkgOiAnbnVsbCc7XG4gICAgICAgIFxuICAgICAgICBjYXNlICdib29sZWFuJzpcbiAgICAgICAgY2FzZSAnbnVsbCc6XG4gICAgICAgICAgICAvLyBJZiB0aGUgdmFsdWUgaXMgYSBib29sZWFuIG9yIG51bGwsIGNvbnZlcnQgaXQgdG8gYSBzdHJpbmcuIE5vdGU6XG4gICAgICAgICAgICAvLyB0eXBlb2YgbnVsbCBkb2VzIG5vdCBwcm9kdWNlICdudWxsJy4gVGhlIGNhc2UgaXMgaW5jbHVkZWQgaGVyZSBpblxuICAgICAgICAgICAgLy8gdGhlIHJlbW90ZSBjaGFuY2UgdGhhdCB0aGlzIGdldHMgZml4ZWQgc29tZWRheS5cbiAgICAgICAgICAgIHJldHVybiBTdHJpbmcodmFsdWUpO1xuICAgICAgICAgICAgXG4gICAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgICAgICBpZiAoIXZhbHVlKSByZXR1cm4gJ251bGwnO1xuICAgICAgICAgICAgZ2FwICs9IGluZGVudDtcbiAgICAgICAgICAgIHBhcnRpYWwgPSBbXTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gQXJyYXkuaXNBcnJheVxuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuYXBwbHkodmFsdWUpID09PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICAgICAgICAgICAgbGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgICAgICBwYXJ0aWFsW2ldID0gc3RyKGksIHZhbHVlKSB8fCAnbnVsbCc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIEpvaW4gYWxsIG9mIHRoZSBlbGVtZW50cyB0b2dldGhlciwgc2VwYXJhdGVkIHdpdGggY29tbWFzLCBhbmRcbiAgICAgICAgICAgICAgICAvLyB3cmFwIHRoZW0gaW4gYnJhY2tldHMuXG4gICAgICAgICAgICAgICAgdiA9IHBhcnRpYWwubGVuZ3RoID09PSAwID8gJ1tdJyA6IGdhcCA/XG4gICAgICAgICAgICAgICAgICAgICdbXFxuJyArIGdhcCArIHBhcnRpYWwuam9pbignLFxcbicgKyBnYXApICsgJ1xcbicgKyBtaW5kICsgJ10nIDpcbiAgICAgICAgICAgICAgICAgICAgJ1snICsgcGFydGlhbC5qb2luKCcsJykgKyAnXSc7XG4gICAgICAgICAgICAgICAgZ2FwID0gbWluZDtcbiAgICAgICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gSWYgdGhlIHJlcGxhY2VyIGlzIGFuIGFycmF5LCB1c2UgaXQgdG8gc2VsZWN0IHRoZSBtZW1iZXJzIHRvIGJlXG4gICAgICAgICAgICAvLyBzdHJpbmdpZmllZC5cbiAgICAgICAgICAgIGlmIChyZXAgJiYgdHlwZW9mIHJlcCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICBsZW5ndGggPSByZXAubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgICAgICAgICBrID0gcmVwW2ldO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIGsgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2ID0gc3RyKGssIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFydGlhbC5wdXNoKHF1b3RlKGspICsgKGdhcCA/ICc6ICcgOiAnOicpICsgdik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBPdGhlcndpc2UsIGl0ZXJhdGUgdGhyb3VnaCBhbGwgb2YgdGhlIGtleXMgaW4gdGhlIG9iamVjdC5cbiAgICAgICAgICAgICAgICBmb3IgKGsgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgaykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHYgPSBzdHIoaywgdmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJ0aWFsLnB1c2gocXVvdGUoaykgKyAoZ2FwID8gJzogJyA6ICc6JykgKyB2KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAvLyBKb2luIGFsbCBvZiB0aGUgbWVtYmVyIHRleHRzIHRvZ2V0aGVyLCBzZXBhcmF0ZWQgd2l0aCBjb21tYXMsXG4gICAgICAgIC8vIGFuZCB3cmFwIHRoZW0gaW4gYnJhY2VzLlxuXG4gICAgICAgIHYgPSBwYXJ0aWFsLmxlbmd0aCA9PT0gMCA/ICd7fScgOiBnYXAgP1xuICAgICAgICAgICAgJ3tcXG4nICsgZ2FwICsgcGFydGlhbC5qb2luKCcsXFxuJyArIGdhcCkgKyAnXFxuJyArIG1pbmQgKyAnfScgOlxuICAgICAgICAgICAgJ3snICsgcGFydGlhbC5qb2luKCcsJykgKyAnfSc7XG4gICAgICAgIGdhcCA9IG1pbmQ7XG4gICAgICAgIHJldHVybiB2O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsdWUsIHJlcGxhY2VyLCBzcGFjZSkge1xuICAgIHZhciBpO1xuICAgIGdhcCA9ICcnO1xuICAgIGluZGVudCA9ICcnO1xuICAgIFxuICAgIC8vIElmIHRoZSBzcGFjZSBwYXJhbWV0ZXIgaXMgYSBudW1iZXIsIG1ha2UgYW4gaW5kZW50IHN0cmluZyBjb250YWluaW5nIHRoYXRcbiAgICAvLyBtYW55IHNwYWNlcy5cbiAgICBpZiAodHlwZW9mIHNwYWNlID09PSAnbnVtYmVyJykge1xuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc3BhY2U7IGkgKz0gMSkge1xuICAgICAgICAgICAgaW5kZW50ICs9ICcgJztcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiB0aGUgc3BhY2UgcGFyYW1ldGVyIGlzIGEgc3RyaW5nLCBpdCB3aWxsIGJlIHVzZWQgYXMgdGhlIGluZGVudCBzdHJpbmcuXG4gICAgZWxzZSBpZiAodHlwZW9mIHNwYWNlID09PSAnc3RyaW5nJykge1xuICAgICAgICBpbmRlbnQgPSBzcGFjZTtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGVyZSBpcyBhIHJlcGxhY2VyLCBpdCBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgYW4gYXJyYXkuXG4gICAgLy8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvci5cbiAgICByZXAgPSByZXBsYWNlcjtcbiAgICBpZiAocmVwbGFjZXIgJiYgdHlwZW9mIHJlcGxhY2VyICE9PSAnZnVuY3Rpb24nXG4gICAgJiYgKHR5cGVvZiByZXBsYWNlciAhPT0gJ29iamVjdCcgfHwgdHlwZW9mIHJlcGxhY2VyLmxlbmd0aCAhPT0gJ251bWJlcicpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSlNPTi5zdHJpbmdpZnknKTtcbiAgICB9XG4gICAgXG4gICAgLy8gTWFrZSBhIGZha2Ugcm9vdCBvYmplY3QgY29udGFpbmluZyBvdXIgdmFsdWUgdW5kZXIgdGhlIGtleSBvZiAnJy5cbiAgICAvLyBSZXR1cm4gdGhlIHJlc3VsdCBvZiBzdHJpbmdpZnlpbmcgdGhlIHZhbHVlLlxuICAgIHJldHVybiBzdHIoJycsIHsnJzogdmFsdWV9KTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/jsonify/lib/stringify.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/node-libs-browser/node_modules/punycode/punycode.js\\\":\\n/*!**************************************************************************!*\\\\\\n  !*** ./node_modules/node-libs-browser/node_modules/punycode/punycode.js ***!\\n  \\\\**************************************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\neval(\\\"/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */\\\\n;(function(root) {\\\\n\\\\n\\\\t/** Detect free variables */\\\\n\\\\tvar freeExports =  true && exports &&\\\\n\\\\t\\\\t!exports.nodeType && exports;\\\\n\\\\tvar freeModule =  true && module &&\\\\n\\\\t\\\\t!module.nodeType && module;\\\\n\\\\tvar freeGlobal = typeof global == 'object' && global;\\\\n\\\\tif (\\\\n\\\\t\\\\tfreeGlobal.global === freeGlobal ||\\\\n\\\\t\\\\tfreeGlobal.window === freeGlobal ||\\\\n\\\\t\\\\tfreeGlobal.self === freeGlobal\\\\n\\\\t) {\\\\n\\\\t\\\\troot = freeGlobal;\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * The `punycode` object.\\\\n\\\\t * @name punycode\\\\n\\\\t * @type Object\\\\n\\\\t */\\\\n\\\\tvar punycode,\\\\n\\\\n\\\\t/** Highest positive signed 32-bit float value */\\\\n\\\\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\\\\n\\\\n\\\\t/** Bootstring parameters */\\\\n\\\\tbase = 36,\\\\n\\\\ttMin = 1,\\\\n\\\\ttMax = 26,\\\\n\\\\tskew = 38,\\\\n\\\\tdamp = 700,\\\\n\\\\tinitialBias = 72,\\\\n\\\\tinitialN = 128, // 0x80\\\\n\\\\tdelimiter = '-', // '\\\\\\\\x2D'\\\\n\\\\n\\\\t/** Regular expressions */\\\\n\\\\tregexPunycode = /^xn--/,\\\\n\\\\tregexNonASCII = /[^\\\\\\\\x20-\\\\\\\\x7E]/, // unprintable ASCII chars + non-ASCII chars\\\\n\\\\tregexSeparators = /[\\\\\\\\x2E\\\\\\\\u3002\\\\\\\\uFF0E\\\\\\\\uFF61]/g, // RFC 3490 separators\\\\n\\\\n\\\\t/** Error messages */\\\\n\\\\terrors = {\\\\n\\\\t\\\\t'overflow': 'Overflow: input needs wider integers to process',\\\\n\\\\t\\\\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\\\\n\\\\t\\\\t'invalid-input': 'Invalid input'\\\\n\\\\t},\\\\n\\\\n\\\\t/** Convenience shortcuts */\\\\n\\\\tbaseMinusTMin = base - tMin,\\\\n\\\\tfloor = Math.floor,\\\\n\\\\tstringFromCharCode = String.fromCharCode,\\\\n\\\\n\\\\t/** Temporary variable */\\\\n\\\\tkey;\\\\n\\\\n\\\\t/*--------------------------------------------------------------------------*/\\\\n\\\\n\\\\t/**\\\\n\\\\t * A generic error utility function.\\\\n\\\\t * @private\\\\n\\\\t * @param {String} type The error type.\\\\n\\\\t * @returns {Error} Throws a `RangeError` with the applicable error message.\\\\n\\\\t */\\\\n\\\\tfunction error(type) {\\\\n\\\\t\\\\tthrow new RangeError(errors[type]);\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * A generic `Array#map` utility function.\\\\n\\\\t * @private\\\\n\\\\t * @param {Array} array The array to iterate over.\\\\n\\\\t * @param {Function} callback The function that gets called for every array\\\\n\\\\t * item.\\\\n\\\\t * @returns {Array} A new array of values returned by the callback function.\\\\n\\\\t */\\\\n\\\\tfunction map(array, fn) {\\\\n\\\\t\\\\tvar length = array.length;\\\\n\\\\t\\\\tvar result = [];\\\\n\\\\t\\\\twhile (length--) {\\\\n\\\\t\\\\t\\\\tresult[length] = fn(array[length]);\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn result;\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * A simple `Array#map`-like wrapper to work with domain name strings or email\\\\n\\\\t * addresses.\\\\n\\\\t * @private\\\\n\\\\t * @param {String} domain The domain name or email address.\\\\n\\\\t * @param {Function} callback The function that gets called for every\\\\n\\\\t * character.\\\\n\\\\t * @returns {Array} A new string of characters returned by the callback\\\\n\\\\t * function.\\\\n\\\\t */\\\\n\\\\tfunction mapDomain(string, fn) {\\\\n\\\\t\\\\tvar parts = string.split('@');\\\\n\\\\t\\\\tvar result = '';\\\\n\\\\t\\\\tif (parts.length > 1) {\\\\n\\\\t\\\\t\\\\t// In email addresses, only the domain name should be punycoded. Leave\\\\n\\\\t\\\\t\\\\t// the local part (i.e. everything up to `@`) intact.\\\\n\\\\t\\\\t\\\\tresult = parts[0] + '@';\\\\n\\\\t\\\\t\\\\tstring = parts[1];\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\t// Avoid `split(regex)` for IE8 compatibility. See #17.\\\\n\\\\t\\\\tstring = string.replace(regexSeparators, '\\\\\\\\x2E');\\\\n\\\\t\\\\tvar labels = string.split('.');\\\\n\\\\t\\\\tvar encoded = map(labels, fn).join('.');\\\\n\\\\t\\\\treturn result + encoded;\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Creates an array containing the numeric code points of each Unicode\\\\n\\\\t * character in the string. While JavaScript uses UCS-2 internally,\\\\n\\\\t * this function will convert a pair of surrogate halves (each of which\\\\n\\\\t * UCS-2 exposes as separate characters) into a single code point,\\\\n\\\\t * matching UTF-16.\\\\n\\\\t * @see `punycode.ucs2.encode`\\\\n\\\\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\\\\n\\\\t * @memberOf punycode.ucs2\\\\n\\\\t * @name decode\\\\n\\\\t * @param {String} string The Unicode input string (UCS-2).\\\\n\\\\t * @returns {Array} The new array of code points.\\\\n\\\\t */\\\\n\\\\tfunction ucs2decode(string) {\\\\n\\\\t\\\\tvar output = [],\\\\n\\\\t\\\\t    counter = 0,\\\\n\\\\t\\\\t    length = string.length,\\\\n\\\\t\\\\t    value,\\\\n\\\\t\\\\t    extra;\\\\n\\\\t\\\\twhile (counter < length) {\\\\n\\\\t\\\\t\\\\tvalue = string.charCodeAt(counter++);\\\\n\\\\t\\\\t\\\\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\\\\n\\\\t\\\\t\\\\t\\\\t// high surrogate, and there is a next character\\\\n\\\\t\\\\t\\\\t\\\\textra = string.charCodeAt(counter++);\\\\n\\\\t\\\\t\\\\t\\\\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\\\\n\\\\t\\\\t\\\\t\\\\t\\\\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\\\\n\\\\t\\\\t\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t// unmatched surrogate; only append this code unit, in case the next\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t// code unit is the high surrogate of a surrogate pair\\\\n\\\\t\\\\t\\\\t\\\\t\\\\toutput.push(value);\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tcounter--;\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\t\\\\toutput.push(value);\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn output;\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Creates a string based on an array of numeric code points.\\\\n\\\\t * @see `punycode.ucs2.decode`\\\\n\\\\t * @memberOf punycode.ucs2\\\\n\\\\t * @name encode\\\\n\\\\t * @param {Array} codePoints The array of numeric code points.\\\\n\\\\t * @returns {String} The new Unicode string (UCS-2).\\\\n\\\\t */\\\\n\\\\tfunction ucs2encode(array) {\\\\n\\\\t\\\\treturn map(array, function(value) {\\\\n\\\\t\\\\t\\\\tvar output = '';\\\\n\\\\t\\\\t\\\\tif (value > 0xFFFF) {\\\\n\\\\t\\\\t\\\\t\\\\tvalue -= 0x10000;\\\\n\\\\t\\\\t\\\\t\\\\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\\\\n\\\\t\\\\t\\\\t\\\\tvalue = 0xDC00 | value & 0x3FF;\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\toutput += stringFromCharCode(value);\\\\n\\\\t\\\\t\\\\treturn output;\\\\n\\\\t\\\\t}).join('');\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Converts a basic code point into a digit/integer.\\\\n\\\\t * @see `digitToBasic()`\\\\n\\\\t * @private\\\\n\\\\t * @param {Number} codePoint The basic numeric code point value.\\\\n\\\\t * @returns {Number} The numeric value of a basic code point (for use in\\\\n\\\\t * representing integers) in the range `0` to `base - 1`, or `base` if\\\\n\\\\t * the code point does not represent a value.\\\\n\\\\t */\\\\n\\\\tfunction basicToDigit(codePoint) {\\\\n\\\\t\\\\tif (codePoint - 48 < 10) {\\\\n\\\\t\\\\t\\\\treturn codePoint - 22;\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\tif (codePoint - 65 < 26) {\\\\n\\\\t\\\\t\\\\treturn codePoint - 65;\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\tif (codePoint - 97 < 26) {\\\\n\\\\t\\\\t\\\\treturn codePoint - 97;\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn base;\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Converts a digit/integer into a basic code point.\\\\n\\\\t * @see `basicToDigit()`\\\\n\\\\t * @private\\\\n\\\\t * @param {Number} digit The numeric value of a basic code point.\\\\n\\\\t * @returns {Number} The basic code point whose value (when used for\\\\n\\\\t * representing integers) is `digit`, which needs to be in the range\\\\n\\\\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\\\\n\\\\t * used; else, the lowercase form is used. The behavior is undefined\\\\n\\\\t * if `flag` is non-zero and `digit` has no uppercase form.\\\\n\\\\t */\\\\n\\\\tfunction digitToBasic(digit, flag) {\\\\n\\\\t\\\\t//  0..25 map to ASCII a..z or A..Z\\\\n\\\\t\\\\t// 26..35 map to ASCII 0..9\\\\n\\\\t\\\\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Bias adaptation function as per section 3.4 of RFC 3492.\\\\n\\\\t * https://tools.ietf.org/html/rfc3492#section-3.4\\\\n\\\\t * @private\\\\n\\\\t */\\\\n\\\\tfunction adapt(delta, numPoints, firstTime) {\\\\n\\\\t\\\\tvar k = 0;\\\\n\\\\t\\\\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\\\\n\\\\t\\\\tdelta += floor(delta / numPoints);\\\\n\\\\t\\\\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\\\\n\\\\t\\\\t\\\\tdelta = floor(delta / baseMinusTMin);\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\\\\n\\\\t * symbols.\\\\n\\\\t * @memberOf punycode\\\\n\\\\t * @param {String} input The Punycode string of ASCII-only symbols.\\\\n\\\\t * @returns {String} The resulting string of Unicode symbols.\\\\n\\\\t */\\\\n\\\\tfunction decode(input) {\\\\n\\\\t\\\\t// Don't use UCS-2\\\\n\\\\t\\\\tvar output = [],\\\\n\\\\t\\\\t    inputLength = input.length,\\\\n\\\\t\\\\t    out,\\\\n\\\\t\\\\t    i = 0,\\\\n\\\\t\\\\t    n = initialN,\\\\n\\\\t\\\\t    bias = initialBias,\\\\n\\\\t\\\\t    basic,\\\\n\\\\t\\\\t    j,\\\\n\\\\t\\\\t    index,\\\\n\\\\t\\\\t    oldi,\\\\n\\\\t\\\\t    w,\\\\n\\\\t\\\\t    k,\\\\n\\\\t\\\\t    digit,\\\\n\\\\t\\\\t    t,\\\\n\\\\t\\\\t    /** Cached calculation results */\\\\n\\\\t\\\\t    baseMinusT;\\\\n\\\\n\\\\t\\\\t// Handle the basic code points: let `basic` be the number of input code\\\\n\\\\t\\\\t// points before the last delimiter, or `0` if there is none, then copy\\\\n\\\\t\\\\t// the first basic code points to the output.\\\\n\\\\n\\\\t\\\\tbasic = input.lastIndexOf(delimiter);\\\\n\\\\t\\\\tif (basic < 0) {\\\\n\\\\t\\\\t\\\\tbasic = 0;\\\\n\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\tfor (j = 0; j < basic; ++j) {\\\\n\\\\t\\\\t\\\\t// if it's not a basic code point\\\\n\\\\t\\\\t\\\\tif (input.charCodeAt(j) >= 0x80) {\\\\n\\\\t\\\\t\\\\t\\\\terror('not-basic');\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\toutput.push(input.charCodeAt(j));\\\\n\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t// Main decoding loop: start just after the last delimiter if any basic code\\\\n\\\\t\\\\t// points were copied; start at the beginning otherwise.\\\\n\\\\n\\\\t\\\\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\\\\n\\\\n\\\\t\\\\t\\\\t// `index` is the index of the next character to be consumed.\\\\n\\\\t\\\\t\\\\t// Decode a generalized variable-length integer into `delta`,\\\\n\\\\t\\\\t\\\\t// which gets added to `i`. The overflow checking is easier\\\\n\\\\t\\\\t\\\\t// if we increase `i` as we go, then subtract off its starting\\\\n\\\\t\\\\t\\\\t// value at the end to obtain `delta`.\\\\n\\\\t\\\\t\\\\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tif (index >= inputLength) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\terror('invalid-input');\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tdigit = basicToDigit(input.charCodeAt(index++));\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tif (digit >= base || digit > floor((maxInt - i) / w)) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\terror('overflow');\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t\\\\ti += digit * w;\\\\n\\\\t\\\\t\\\\t\\\\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tif (digit < t) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tbreak;\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tbaseMinusT = base - t;\\\\n\\\\t\\\\t\\\\t\\\\tif (w > floor(maxInt / baseMinusT)) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\terror('overflow');\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tw *= baseMinusT;\\\\n\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\tout = output.length + 1;\\\\n\\\\t\\\\t\\\\tbias = adapt(i - oldi, out, oldi == 0);\\\\n\\\\n\\\\t\\\\t\\\\t// `i` was supposed to wrap around from `out` to `0`,\\\\n\\\\t\\\\t\\\\t// incrementing `n` each time, so we'll fix that now:\\\\n\\\\t\\\\t\\\\tif (floor(i / out) > maxInt - n) {\\\\n\\\\t\\\\t\\\\t\\\\terror('overflow');\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\tn += floor(i / out);\\\\n\\\\t\\\\t\\\\ti %= out;\\\\n\\\\n\\\\t\\\\t\\\\t// Insert `n` at position `i` of the output\\\\n\\\\t\\\\t\\\\toutput.splice(i++, 0, n);\\\\n\\\\n\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\treturn ucs2encode(output);\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\\\\n\\\\t * Punycode string of ASCII-only symbols.\\\\n\\\\t * @memberOf punycode\\\\n\\\\t * @param {String} input The string of Unicode symbols.\\\\n\\\\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\\\\n\\\\t */\\\\n\\\\tfunction encode(input) {\\\\n\\\\t\\\\tvar n,\\\\n\\\\t\\\\t    delta,\\\\n\\\\t\\\\t    handledCPCount,\\\\n\\\\t\\\\t    basicLength,\\\\n\\\\t\\\\t    bias,\\\\n\\\\t\\\\t    j,\\\\n\\\\t\\\\t    m,\\\\n\\\\t\\\\t    q,\\\\n\\\\t\\\\t    k,\\\\n\\\\t\\\\t    t,\\\\n\\\\t\\\\t    currentValue,\\\\n\\\\t\\\\t    output = [],\\\\n\\\\t\\\\t    /** `inputLength` will hold the number of code points in `input`. */\\\\n\\\\t\\\\t    inputLength,\\\\n\\\\t\\\\t    /** Cached calculation results */\\\\n\\\\t\\\\t    handledCPCountPlusOne,\\\\n\\\\t\\\\t    baseMinusT,\\\\n\\\\t\\\\t    qMinusT;\\\\n\\\\n\\\\t\\\\t// Convert the input in UCS-2 to Unicode\\\\n\\\\t\\\\tinput = ucs2decode(input);\\\\n\\\\n\\\\t\\\\t// Cache the length\\\\n\\\\t\\\\tinputLength = input.length;\\\\n\\\\n\\\\t\\\\t// Initialize the state\\\\n\\\\t\\\\tn = initialN;\\\\n\\\\t\\\\tdelta = 0;\\\\n\\\\t\\\\tbias = initialBias;\\\\n\\\\n\\\\t\\\\t// Handle the basic code points\\\\n\\\\t\\\\tfor (j = 0; j < inputLength; ++j) {\\\\n\\\\t\\\\t\\\\tcurrentValue = input[j];\\\\n\\\\t\\\\t\\\\tif (currentValue < 0x80) {\\\\n\\\\t\\\\t\\\\t\\\\toutput.push(stringFromCharCode(currentValue));\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\thandledCPCount = basicLength = output.length;\\\\n\\\\n\\\\t\\\\t// `handledCPCount` is the number of code points that have been handled;\\\\n\\\\t\\\\t// `basicLength` is the number of basic code points.\\\\n\\\\n\\\\t\\\\t// Finish the basic string - if it is not empty - with a delimiter\\\\n\\\\t\\\\tif (basicLength) {\\\\n\\\\t\\\\t\\\\toutput.push(delimiter);\\\\n\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t// Main encoding loop:\\\\n\\\\t\\\\twhile (handledCPCount < inputLength) {\\\\n\\\\n\\\\t\\\\t\\\\t// All non-basic code points < n have been handled already. Find the next\\\\n\\\\t\\\\t\\\\t// larger one:\\\\n\\\\t\\\\t\\\\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\\\\n\\\\t\\\\t\\\\t\\\\tcurrentValue = input[j];\\\\n\\\\t\\\\t\\\\t\\\\tif (currentValue >= n && currentValue < m) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tm = currentValue;\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\\\\n\\\\t\\\\t\\\\t// but guard against overflow\\\\n\\\\t\\\\t\\\\thandledCPCountPlusOne = handledCPCount + 1;\\\\n\\\\t\\\\t\\\\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\\\\n\\\\t\\\\t\\\\t\\\\terror('overflow');\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\tdelta += (m - n) * handledCPCountPlusOne;\\\\n\\\\t\\\\t\\\\tn = m;\\\\n\\\\n\\\\t\\\\t\\\\tfor (j = 0; j < inputLength; ++j) {\\\\n\\\\t\\\\t\\\\t\\\\tcurrentValue = input[j];\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tif (currentValue < n && ++delta > maxInt) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\terror('overflow');\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t\\\\tif (currentValue == n) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t// Represent delta as a generalized variable-length integer\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tfor (q = delta, k = base; /* no condition */; k += base) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tif (q < t) {\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tbreak;\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tqMinusT = q - t;\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tbaseMinusT = base - t;\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\toutput.push(\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t);\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\tq = floor(qMinusT / baseMinusT);\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t\\\\t\\\\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tdelta = 0;\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t++handledCPCount;\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\n\\\\t\\\\t\\\\t++delta;\\\\n\\\\t\\\\t\\\\t++n;\\\\n\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn output.join('');\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Converts a Punycode string representing a domain name or an email address\\\\n\\\\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\\\\n\\\\t * it doesn't matter if you call it on a string that has already been\\\\n\\\\t * converted to Unicode.\\\\n\\\\t * @memberOf punycode\\\\n\\\\t * @param {String} input The Punycoded domain name or email address to\\\\n\\\\t * convert to Unicode.\\\\n\\\\t * @returns {String} The Unicode representation of the given Punycode\\\\n\\\\t * string.\\\\n\\\\t */\\\\n\\\\tfunction toUnicode(input) {\\\\n\\\\t\\\\treturn mapDomain(input, function(string) {\\\\n\\\\t\\\\t\\\\treturn regexPunycode.test(string)\\\\n\\\\t\\\\t\\\\t\\\\t? decode(string.slice(4).toLowerCase())\\\\n\\\\t\\\\t\\\\t\\\\t: string;\\\\n\\\\t\\\\t});\\\\n\\\\t}\\\\n\\\\n\\\\t/**\\\\n\\\\t * Converts a Unicode string representing a domain name or an email address to\\\\n\\\\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\\\\n\\\\t * i.e. it doesn't matter if you call it with a domain that's already in\\\\n\\\\t * ASCII.\\\\n\\\\t * @memberOf punycode\\\\n\\\\t * @param {String} input The domain name or email address to convert, as a\\\\n\\\\t * Unicode string.\\\\n\\\\t * @returns {String} The Punycode representation of the given domain name or\\\\n\\\\t * email address.\\\\n\\\\t */\\\\n\\\\tfunction toASCII(input) {\\\\n\\\\t\\\\treturn mapDomain(input, function(string) {\\\\n\\\\t\\\\t\\\\treturn regexNonASCII.test(string)\\\\n\\\\t\\\\t\\\\t\\\\t? 'xn--' + encode(string)\\\\n\\\\t\\\\t\\\\t\\\\t: string;\\\\n\\\\t\\\\t});\\\\n\\\\t}\\\\n\\\\n\\\\t/*--------------------------------------------------------------------------*/\\\\n\\\\n\\\\t/** Define the public API */\\\\n\\\\tpunycode = {\\\\n\\\\t\\\\t/**\\\\n\\\\t\\\\t * A string representing the current Punycode.js version number.\\\\n\\\\t\\\\t * @memberOf punycode\\\\n\\\\t\\\\t * @type String\\\\n\\\\t\\\\t */\\\\n\\\\t\\\\t'version': '1.4.1',\\\\n\\\\t\\\\t/**\\\\n\\\\t\\\\t * An object of methods to convert from JavaScript's internal character\\\\n\\\\t\\\\t * representation (UCS-2) to Unicode code points, and back.\\\\n\\\\t\\\\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\\\\n\\\\t\\\\t * @memberOf punycode\\\\n\\\\t\\\\t * @type Object\\\\n\\\\t\\\\t */\\\\n\\\\t\\\\t'ucs2': {\\\\n\\\\t\\\\t\\\\t'decode': ucs2decode,\\\\n\\\\t\\\\t\\\\t'encode': ucs2encode\\\\n\\\\t\\\\t},\\\\n\\\\t\\\\t'decode': decode,\\\\n\\\\t\\\\t'encode': encode,\\\\n\\\\t\\\\t'toASCII': toASCII,\\\\n\\\\t\\\\t'toUnicode': toUnicode\\\\n\\\\t};\\\\n\\\\n\\\\t/** Expose `punycode` */\\\\n\\\\t// Some AMD build optimizers, like r.js, check for specific condition patterns\\\\n\\\\t// like the following:\\\\n\\\\tif (\\\\n\\\\t\\\\ttrue\\\\n\\\\t) {\\\\n\\\\t\\\\t!(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\\\\n\\\\t\\\\t\\\\treturn punycode;\\\\n\\\\t\\\\t}).call(exports, __webpack_require__, exports, module),\\\\n\\\\t\\\\t\\\\t\\\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\\\n\\\\t} else {}\\\\n\\\\n}(this));\\\\n\\\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \\\\\\\"./node_modules/webpack/buildin/module.js\\\\\\\")(module), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \\\\\\\"./node_modules/webpack/buildin/global.js\\\\\\\")))//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/querystring-es3/decode.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./node_modules/querystring-es3/decode.js ***!\\n  \\\\************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"// Copyright Joyent, Inc. and other Node contributors.\\\\n//\\\\n// Permission is hereby granted, free of charge, to any person obtaining a\\\\n// copy of this software and associated documentation files (the\\\\n// \\\\\\\"Software\\\\\\\"), to deal in the Software without restriction, including\\\\n// without limitation the rights to use, copy, modify, merge, publish,\\\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\\\n// persons to whom the Software is furnished to do so, subject to the\\\\n// following conditions:\\\\n//\\\\n// The above copyright notice and this permission notice shall be included\\\\n// in all copies or substantial portions of the Software.\\\\n//\\\\n// THE SOFTWARE IS PROVIDED \\\\\\\"AS IS\\\\\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\\\n\\\\n\\\\n\\\\n// If obj.hasOwnProperty has been overridden, then calling\\\\n// obj.hasOwnProperty(prop) will break.\\\\n// See: https://github.com/joyent/node/issues/1707\\\\nfunction hasOwnProperty(obj, prop) {\\\\n  return Object.prototype.hasOwnProperty.call(obj, prop);\\\\n}\\\\n\\\\nmodule.exports = function(qs, sep, eq, options) {\\\\n  sep = sep || '&';\\\\n  eq = eq || '=';\\\\n  var obj = {};\\\\n\\\\n  if (typeof qs !== 'string' || qs.length === 0) {\\\\n    return obj;\\\\n  }\\\\n\\\\n  var regexp = /\\\\\\\\+/g;\\\\n  qs = qs.split(sep);\\\\n\\\\n  var maxKeys = 1000;\\\\n  if (options && typeof options.maxKeys === 'number') {\\\\n    maxKeys = options.maxKeys;\\\\n  }\\\\n\\\\n  var len = qs.length;\\\\n  // maxKeys <= 0 means that we should not limit keys count\\\\n  if (maxKeys > 0 && len > maxKeys) {\\\\n    len = maxKeys;\\\\n  }\\\\n\\\\n  for (var i = 0; i < len; ++i) {\\\\n    var x = qs[i].replace(regexp, '%20'),\\\\n        idx = x.indexOf(eq),\\\\n        kstr, vstr, k, v;\\\\n\\\\n    if (idx >= 0) {\\\\n      kstr = x.substr(0, idx);\\\\n      vstr = x.substr(idx + 1);\\\\n    } else {\\\\n      kstr = x;\\\\n      vstr = '';\\\\n    }\\\\n\\\\n    k = decodeURIComponent(kstr);\\\\n    v = decodeURIComponent(vstr);\\\\n\\\\n    if (!hasOwnProperty(obj, k)) {\\\\n      obj[k] = v;\\\\n    } else if (isArray(obj[k])) {\\\\n      obj[k].push(v);\\\\n    } else {\\\\n      obj[k] = [obj[k], v];\\\\n    }\\\\n  }\\\\n\\\\n  return obj;\\\\n};\\\\n\\\\nvar isArray = Array.isArray || function (xs) {\\\\n  return Object.prototype.toString.call(xs) === '[object Array]';\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2RlY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9kZWNvZGUuanM/OTFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vLyBJZiBvYmouaGFzT3duUHJvcGVydHkgaGFzIGJlZW4gb3ZlcnJpZGRlbiwgdGhlbiBjYWxsaW5nXG4vLyBvYmouaGFzT3duUHJvcGVydHkocHJvcCkgd2lsbCBicmVhay5cbi8vIFNlZTogaHR0cHM6Ly9naXRodWIuY29tL2pveWVudC9ub2RlL2lzc3Vlcy8xNzA3XG5mdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHFzLCBzZXAsIGVxLCBvcHRpb25zKSB7XG4gIHNlcCA9IHNlcCB8fCAnJic7XG4gIGVxID0gZXEgfHwgJz0nO1xuICB2YXIgb2JqID0ge307XG5cbiAgaWYgKHR5cGVvZiBxcyAhPT0gJ3N0cmluZycgfHwgcXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIHZhciByZWdleHAgPSAvXFwrL2c7XG4gIHFzID0gcXMuc3BsaXQoc2VwKTtcblxuICB2YXIgbWF4S2V5cyA9IDEwMDA7XG4gIGlmIChvcHRpb25zICYmIHR5cGVvZiBvcHRpb25zLm1heEtleXMgPT09ICdudW1iZXInKSB7XG4gICAgbWF4S2V5cyA9IG9wdGlvbnMubWF4S2V5cztcbiAgfVxuXG4gIHZhciBsZW4gPSBxcy5sZW5ndGg7XG4gIC8vIG1heEtleXMgPD0gMCBtZWFucyB0aGF0IHdlIHNob3VsZCBub3QgbGltaXQga2V5cyBjb3VudFxuICBpZiAobWF4S2V5cyA+IDAgJiYgbGVuID4gbWF4S2V5cykge1xuICAgIGxlbiA9IG1heEtleXM7XG4gIH1cblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHggPSBxc1tpXS5yZXBsYWNlKHJlZ2V4cCwgJyUyMCcpLFxuICAgICAgICBpZHggPSB4LmluZGV4T2YoZXEpLFxuICAgICAgICBrc3RyLCB2c3RyLCBrLCB2O1xuXG4gICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICBrc3RyID0geC5zdWJzdHIoMCwgaWR4KTtcbiAgICAgIHZzdHIgPSB4LnN1YnN0cihpZHggKyAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAga3N0ciA9IHg7XG4gICAgICB2c3RyID0gJyc7XG4gICAgfVxuXG4gICAgayA9IGRlY29kZVVSSUNvbXBvbmVudChrc3RyKTtcbiAgICB2ID0gZGVjb2RlVVJJQ29tcG9uZW50KHZzdHIpO1xuXG4gICAgaWYgKCFoYXNPd25Qcm9wZXJ0eShvYmosIGspKSB7XG4gICAgICBvYmpba10gPSB2O1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShvYmpba10pKSB7XG4gICAgICBvYmpba10ucHVzaCh2KTtcbiAgICB9IGVsc2Uge1xuICAgICAgb2JqW2tdID0gW29ialtrXSwgdl07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9iajtcbn07XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeHMpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh4cykgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/decode.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/querystring-es3/encode.js\\\":\\n/*!************************************************!*\\\\\\n  !*** ./node_modules/querystring-es3/encode.js ***!\\n  \\\\************************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"// Copyright Joyent, Inc. and other Node contributors.\\\\n//\\\\n// Permission is hereby granted, free of charge, to any person obtaining a\\\\n// copy of this software and associated documentation files (the\\\\n// \\\\\\\"Software\\\\\\\"), to deal in the Software without restriction, including\\\\n// without limitation the rights to use, copy, modify, merge, publish,\\\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\\\n// persons to whom the Software is furnished to do so, subject to the\\\\n// following conditions:\\\\n//\\\\n// The above copyright notice and this permission notice shall be included\\\\n// in all copies or substantial portions of the Software.\\\\n//\\\\n// THE SOFTWARE IS PROVIDED \\\\\\\"AS IS\\\\\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\\\n\\\\n\\\\n\\\\nvar stringifyPrimitive = function(v) {\\\\n  switch (typeof v) {\\\\n    case 'string':\\\\n      return v;\\\\n\\\\n    case 'boolean':\\\\n      return v ? 'true' : 'false';\\\\n\\\\n    case 'number':\\\\n      return isFinite(v) ? v : '';\\\\n\\\\n    default:\\\\n      return '';\\\\n  }\\\\n};\\\\n\\\\nmodule.exports = function(obj, sep, eq, name) {\\\\n  sep = sep || '&';\\\\n  eq = eq || '=';\\\\n  if (obj === null) {\\\\n    obj = undefined;\\\\n  }\\\\n\\\\n  if (typeof obj === 'object') {\\\\n    return map(objectKeys(obj), function(k) {\\\\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\\\\n      if (isArray(obj[k])) {\\\\n        return map(obj[k], function(v) {\\\\n          return ks + encodeURIComponent(stringifyPrimitive(v));\\\\n        }).join(sep);\\\\n      } else {\\\\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\\\\n      }\\\\n    }).join(sep);\\\\n\\\\n  }\\\\n\\\\n  if (!name) return '';\\\\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\\\\n         encodeURIComponent(stringifyPrimitive(obj));\\\\n};\\\\n\\\\nvar isArray = Array.isArray || function (xs) {\\\\n  return Object.prototype.toString.call(xs) === '[object Array]';\\\\n};\\\\n\\\\nfunction map (xs, f) {\\\\n  if (xs.map) return xs.map(f);\\\\n  var res = [];\\\\n  for (var i = 0; i < xs.length; i++) {\\\\n    res.push(f(xs[i], i));\\\\n  }\\\\n  return res;\\\\n}\\\\n\\\\nvar objectKeys = Object.keys || function (obj) {\\\\n  var res = [];\\\\n  for (var key in obj) {\\\\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\\\\n  }\\\\n  return res;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9lbmNvZGUuanM/ZTA5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuLy8gXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgc3RyaW5naWZ5UHJpbWl0aXZlID0gZnVuY3Rpb24odikge1xuICBzd2l0Y2ggKHR5cGVvZiB2KSB7XG4gICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgIHJldHVybiB2O1xuXG4gICAgY2FzZSAnYm9vbGVhbic6XG4gICAgICByZXR1cm4gdiA/ICd0cnVlJyA6ICdmYWxzZSc7XG5cbiAgICBjYXNlICdudW1iZXInOlxuICAgICAgcmV0dXJuIGlzRmluaXRlKHYpID8gdiA6ICcnO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnJztcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmosIHNlcCwgZXEsIG5hbWUpIHtcbiAgc2VwID0gc2VwIHx8ICcmJztcbiAgZXEgPSBlcSB8fCAnPSc7XG4gIGlmIChvYmogPT09IG51bGwpIHtcbiAgICBvYmogPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gbWFwKG9iamVjdEtleXMob2JqKSwgZnVuY3Rpb24oaykge1xuICAgICAgdmFyIGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShrKSkgKyBlcTtcbiAgICAgIGlmIChpc0FycmF5KG9ialtrXSkpIHtcbiAgICAgICAgcmV0dXJuIG1hcChvYmpba10sIGZ1bmN0aW9uKHYpIHtcbiAgICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKHYpKTtcbiAgICAgICAgfSkuam9pbihzZXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKTtcbiAgICAgIH1cbiAgICB9KS5qb2luKHNlcCk7XG5cbiAgfVxuXG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXG4gICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9iaikpO1xufTtcblxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbmZ1bmN0aW9uIG1hcCAoeHMsIGYpIHtcbiAgaWYgKHhzLm1hcCkgcmV0dXJuIHhzLm1hcChmKTtcbiAgdmFyIHJlcyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHhzLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzLnB1c2goZih4c1tpXSwgaSkpO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICB2YXIgcmVzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgcmVzLnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/encode.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/querystring-es3/index.js\\\":\\n/*!***********************************************!*\\\\\\n  !*** ./node_modules/querystring-es3/index.js ***!\\n  \\\\***********************************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nexports.decode = exports.parse = __webpack_require__(/*! ./decode */ \\\\\\\"./node_modules/querystring-es3/decode.js\\\\\\\");\\\\nexports.encode = exports.stringify = __webpack_require__(/*! ./encode */ \\\\\\\"./node_modules/querystring-es3/encode.js\\\\\\\");\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzP2IzODMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMucGFyc2UgPSByZXF1aXJlKCcuL2RlY29kZScpO1xuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IHJlcXVpcmUoJy4vZW5jb2RlJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./node_modules/querystring-es3/index.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/url/url.js\\\":\\n/*!*********************************!*\\\\\\n  !*** ./node_modules/url/url.js ***!\\n  \\\\*********************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"// Copyright Joyent, Inc. and other Node contributors.\\\\n//\\\\n// Permission is hereby granted, free of charge, to any person obtaining a\\\\n// copy of this software and associated documentation files (the\\\\n// \\\\\\\"Software\\\\\\\"), to deal in the Software without restriction, including\\\\n// without limitation the rights to use, copy, modify, merge, publish,\\\\n// distribute, sublicense, and/or sell copies of the Software, and to permit\\\\n// persons to whom the Software is furnished to do so, subject to the\\\\n// following conditions:\\\\n//\\\\n// The above copyright notice and this permission notice shall be included\\\\n// in all copies or substantial portions of the Software.\\\\n//\\\\n// THE SOFTWARE IS PROVIDED \\\\\\\"AS IS\\\\\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\\\\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\\\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\\\\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\\\\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\\\\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\\\\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\\\\n\\\\n\\\\n\\\\nvar punycode = __webpack_require__(/*! punycode */ \\\\\\\"./node_modules/node-libs-browser/node_modules/punycode/punycode.js\\\\\\\");\\\\nvar util = __webpack_require__(/*! ./util */ \\\\\\\"./node_modules/url/util.js\\\\\\\");\\\\n\\\\nexports.parse = urlParse;\\\\nexports.resolve = urlResolve;\\\\nexports.resolveObject = urlResolveObject;\\\\nexports.format = urlFormat;\\\\n\\\\nexports.Url = Url;\\\\n\\\\nfunction Url() {\\\\n  this.protocol = null;\\\\n  this.slashes = null;\\\\n  this.auth = null;\\\\n  this.host = null;\\\\n  this.port = null;\\\\n  this.hostname = null;\\\\n  this.hash = null;\\\\n  this.search = null;\\\\n  this.query = null;\\\\n  this.pathname = null;\\\\n  this.path = null;\\\\n  this.href = null;\\\\n}\\\\n\\\\n// Reference: RFC 3986, RFC 1808, RFC 2396\\\\n\\\\n// define these here so at least they only have to be\\\\n// compiled once on the first module load.\\\\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\\\\n    portPattern = /:[0-9]*$/,\\\\n\\\\n    // Special case for a simple path URL\\\\n    simplePathPattern = /^(\\\\\\\\/\\\\\\\\/?(?!\\\\\\\\/)[^\\\\\\\\?\\\\\\\\s]*)(\\\\\\\\?[^\\\\\\\\s]*)?$/,\\\\n\\\\n    // RFC 2396: characters reserved for delimiting URLs.\\\\n    // We actually just auto-escape these.\\\\n    delims = ['<', '>', '\\\\\\\"', '`', ' ', '\\\\\\\\r', '\\\\\\\\n', '\\\\\\\\t'],\\\\n\\\\n    // RFC 2396: characters not allowed for various reasons.\\\\n    unwise = ['{', '}', '|', '\\\\\\\\\\\\\\\\', '^', '`'].concat(delims),\\\\n\\\\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\\\\n    autoEscape = ['\\\\\\\\''].concat(unwise),\\\\n    // Characters that are never ever allowed in a hostname.\\\\n    // Note that any invalid chars are also handled, but these\\\\n    // are the ones that are *expected* to be seen, so we fast-path\\\\n    // them.\\\\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\\\\n    hostEndingChars = ['/', '?', '#'],\\\\n    hostnameMaxLen = 255,\\\\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\\\\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\\\\n    // protocols that can allow \\\\\\\"unsafe\\\\\\\" and \\\\\\\"unwise\\\\\\\" chars.\\\\n    unsafeProtocol = {\\\\n      'javascript': true,\\\\n      'javascript:': true\\\\n    },\\\\n    // protocols that never have a hostname.\\\\n    hostlessProtocol = {\\\\n      'javascript': true,\\\\n      'javascript:': true\\\\n    },\\\\n    // protocols that always contain a // bit.\\\\n    slashedProtocol = {\\\\n      'http': true,\\\\n      'https': true,\\\\n      'ftp': true,\\\\n      'gopher': true,\\\\n      'file': true,\\\\n      'http:': true,\\\\n      'https:': true,\\\\n      'ftp:': true,\\\\n      'gopher:': true,\\\\n      'file:': true\\\\n    },\\\\n    querystring = __webpack_require__(/*! querystring */ \\\\\\\"./node_modules/querystring-es3/index.js\\\\\\\");\\\\n\\\\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\\\\n  if (url && util.isObject(url) && url instanceof Url) return url;\\\\n\\\\n  var u = new Url;\\\\n  u.parse(url, parseQueryString, slashesDenoteHost);\\\\n  return u;\\\\n}\\\\n\\\\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\\\\n  if (!util.isString(url)) {\\\\n    throw new TypeError(\\\\\\\"Parameter 'url' must be a string, not \\\\\\\" + typeof url);\\\\n  }\\\\n\\\\n  // Copy chrome, IE, opera backslash-handling behavior.\\\\n  // Back slashes before the query string get converted to forward slashes\\\\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\\\\n  var queryIndex = url.indexOf('?'),\\\\n      splitter =\\\\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\\\\n      uSplit = url.split(splitter),\\\\n      slashRegex = /\\\\\\\\\\\\\\\\/g;\\\\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\\\\n  url = uSplit.join(splitter);\\\\n\\\\n  var rest = url;\\\\n\\\\n  // trim before proceeding.\\\\n  // This is to support parse stuff like \\\\\\\"  http://foo.com  \\\\\\\\n\\\\\\\"\\\\n  rest = rest.trim();\\\\n\\\\n  if (!slashesDenoteHost && url.split('#').length === 1) {\\\\n    // Try fast path regexp\\\\n    var simplePath = simplePathPattern.exec(rest);\\\\n    if (simplePath) {\\\\n      this.path = rest;\\\\n      this.href = rest;\\\\n      this.pathname = simplePath[1];\\\\n      if (simplePath[2]) {\\\\n        this.search = simplePath[2];\\\\n        if (parseQueryString) {\\\\n          this.query = querystring.parse(this.search.substr(1));\\\\n        } else {\\\\n          this.query = this.search.substr(1);\\\\n        }\\\\n      } else if (parseQueryString) {\\\\n        this.search = '';\\\\n        this.query = {};\\\\n      }\\\\n      return this;\\\\n    }\\\\n  }\\\\n\\\\n  var proto = protocolPattern.exec(rest);\\\\n  if (proto) {\\\\n    proto = proto[0];\\\\n    var lowerProto = proto.toLowerCase();\\\\n    this.protocol = lowerProto;\\\\n    rest = rest.substr(proto.length);\\\\n  }\\\\n\\\\n  // figure out if it's got a host\\\\n  // user@server is *always* interpreted as a hostname, and url\\\\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\\\\n  // how the browser resolves relative URLs.\\\\n  if (slashesDenoteHost || proto || rest.match(/^\\\\\\\\/\\\\\\\\/[^@\\\\\\\\/]+@[^@\\\\\\\\/]+/)) {\\\\n    var slashes = rest.substr(0, 2) === '//';\\\\n    if (slashes && !(proto && hostlessProtocol[proto])) {\\\\n      rest = rest.substr(2);\\\\n      this.slashes = true;\\\\n    }\\\\n  }\\\\n\\\\n  if (!hostlessProtocol[proto] &&\\\\n      (slashes || (proto && !slashedProtocol[proto]))) {\\\\n\\\\n    // there's a hostname.\\\\n    // the first instance of /, ?, ;, or # ends the host.\\\\n    //\\\\n    // If there is an @ in the hostname, then non-host chars *are* allowed\\\\n    // to the left of the last @ sign, unless some host-ending character\\\\n    // comes *before* the @-sign.\\\\n    // URLs are obnoxious.\\\\n    //\\\\n    // ex:\\\\n    // http://a@b@c/ => user:a@b host:c\\\\n    // http://a@b?@c => user:a host:c path:/?@c\\\\n\\\\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\\\\n    // Review our test case against browsers more comprehensively.\\\\n\\\\n    // find the first instance of any hostEndingChars\\\\n    var hostEnd = -1;\\\\n    for (var i = 0; i < hostEndingChars.length; i++) {\\\\n      var hec = rest.indexOf(hostEndingChars[i]);\\\\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\\\\n        hostEnd = hec;\\\\n    }\\\\n\\\\n    // at this point, either we have an explicit point where the\\\\n    // auth portion cannot go past, or the last @ char is the decider.\\\\n    var auth, atSign;\\\\n    if (hostEnd === -1) {\\\\n      // atSign can be anywhere.\\\\n      atSign = rest.lastIndexOf('@');\\\\n    } else {\\\\n      // atSign must be in auth portion.\\\\n      // http://a@b/c@d => host:b auth:a path:/c@d\\\\n      atSign = rest.lastIndexOf('@', hostEnd);\\\\n    }\\\\n\\\\n    // Now we have a portion which is definitely the auth.\\\\n    // Pull that off.\\\\n    if (atSign !== -1) {\\\\n      auth = rest.slice(0, atSign);\\\\n      rest = rest.slice(atSign + 1);\\\\n      this.auth = decodeURIComponent(auth);\\\\n    }\\\\n\\\\n    // the host is the remaining to the left of the first non-host char\\\\n    hostEnd = -1;\\\\n    for (var i = 0; i < nonHostChars.length; i++) {\\\\n      var hec = rest.indexOf(nonHostChars[i]);\\\\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\\\\n        hostEnd = hec;\\\\n    }\\\\n    // if we still have not hit it, then the entire thing is a host.\\\\n    if (hostEnd === -1)\\\\n      hostEnd = rest.length;\\\\n\\\\n    this.host = rest.slice(0, hostEnd);\\\\n    rest = rest.slice(hostEnd);\\\\n\\\\n    // pull out port.\\\\n    this.parseHost();\\\\n\\\\n    // we've indicated that there is a hostname,\\\\n    // so even if it's empty, it has to be present.\\\\n    this.hostname = this.hostname || '';\\\\n\\\\n    // if hostname begins with [ and ends with ]\\\\n    // assume that it's an IPv6 address.\\\\n    var ipv6Hostname = this.hostname[0] === '[' &&\\\\n        this.hostname[this.hostname.length - 1] === ']';\\\\n\\\\n    // validate a little.\\\\n    if (!ipv6Hostname) {\\\\n      var hostparts = this.hostname.split(/\\\\\\\\./);\\\\n      for (var i = 0, l = hostparts.length; i < l; i++) {\\\\n        var part = hostparts[i];\\\\n        if (!part) continue;\\\\n        if (!part.match(hostnamePartPattern)) {\\\\n          var newpart = '';\\\\n          for (var j = 0, k = part.length; j < k; j++) {\\\\n            if (part.charCodeAt(j) > 127) {\\\\n              // we replace non-ASCII char with a temporary placeholder\\\\n              // we need this to make sure size of hostname is not\\\\n              // broken by replacing non-ASCII by nothing\\\\n              newpart += 'x';\\\\n            } else {\\\\n              newpart += part[j];\\\\n            }\\\\n          }\\\\n          // we test again with ASCII char only\\\\n          if (!newpart.match(hostnamePartPattern)) {\\\\n            var validParts = hostparts.slice(0, i);\\\\n            var notHost = hostparts.slice(i + 1);\\\\n            var bit = part.match(hostnamePartStart);\\\\n            if (bit) {\\\\n              validParts.push(bit[1]);\\\\n              notHost.unshift(bit[2]);\\\\n            }\\\\n            if (notHost.length) {\\\\n              rest = '/' + notHost.join('.') + rest;\\\\n            }\\\\n            this.hostname = validParts.join('.');\\\\n            break;\\\\n          }\\\\n        }\\\\n      }\\\\n    }\\\\n\\\\n    if (this.hostname.length > hostnameMaxLen) {\\\\n      this.hostname = '';\\\\n    } else {\\\\n      // hostnames are always lower case.\\\\n      this.hostname = this.hostname.toLowerCase();\\\\n    }\\\\n\\\\n    if (!ipv6Hostname) {\\\\n      // IDNA Support: Returns a punycoded representation of \\\\\\\"domain\\\\\\\".\\\\n      // It only converts parts of the domain name that\\\\n      // have non-ASCII characters, i.e. it doesn't matter if\\\\n      // you call it with a domain that already is ASCII-only.\\\\n      this.hostname = punycode.toASCII(this.hostname);\\\\n    }\\\\n\\\\n    var p = this.port ? ':' + this.port : '';\\\\n    var h = this.hostname || '';\\\\n    this.host = h + p;\\\\n    this.href += this.host;\\\\n\\\\n    // strip [ and ] from the hostname\\\\n    // the host field still retains them, though\\\\n    if (ipv6Hostname) {\\\\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\\\\n      if (rest[0] !== '/') {\\\\n        rest = '/' + rest;\\\\n      }\\\\n    }\\\\n  }\\\\n\\\\n  // now rest is set to the post-host stuff.\\\\n  // chop off any delim chars.\\\\n  if (!unsafeProtocol[lowerProto]) {\\\\n\\\\n    // First, make 100% sure that any \\\\\\\"autoEscape\\\\\\\" chars get\\\\n    // escaped, even if encodeURIComponent doesn't think they\\\\n    // need to be.\\\\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\\\\n      var ae = autoEscape[i];\\\\n      if (rest.indexOf(ae) === -1)\\\\n        continue;\\\\n      var esc = encodeURIComponent(ae);\\\\n      if (esc === ae) {\\\\n        esc = escape(ae);\\\\n      }\\\\n      rest = rest.split(ae).join(esc);\\\\n    }\\\\n  }\\\\n\\\\n\\\\n  // chop off from the tail first.\\\\n  var hash = rest.indexOf('#');\\\\n  if (hash !== -1) {\\\\n    // got a fragment string.\\\\n    this.hash = rest.substr(hash);\\\\n    rest = rest.slice(0, hash);\\\\n  }\\\\n  var qm = rest.indexOf('?');\\\\n  if (qm !== -1) {\\\\n    this.search = rest.substr(qm);\\\\n    this.query = rest.substr(qm + 1);\\\\n    if (parseQueryString) {\\\\n      this.query = querystring.parse(this.query);\\\\n    }\\\\n    rest = rest.slice(0, qm);\\\\n  } else if (parseQueryString) {\\\\n    // no query string, but parseQueryString still requested\\\\n    this.search = '';\\\\n    this.query = {};\\\\n  }\\\\n  if (rest) this.pathname = rest;\\\\n  if (slashedProtocol[lowerProto] &&\\\\n      this.hostname && !this.pathname) {\\\\n    this.pathname = '/';\\\\n  }\\\\n\\\\n  //to support http.request\\\\n  if (this.pathname || this.search) {\\\\n    var p = this.pathname || '';\\\\n    var s = this.search || '';\\\\n    this.path = p + s;\\\\n  }\\\\n\\\\n  // finally, reconstruct the href based on what has been validated.\\\\n  this.href = this.format();\\\\n  return this;\\\\n};\\\\n\\\\n// format a parsed object into a url string\\\\nfunction urlFormat(obj) {\\\\n  // ensure it's an object, and not a string url.\\\\n  // If it's an obj, this is a no-op.\\\\n  // this way, you can call url_format() on strings\\\\n  // to clean up potentially wonky urls.\\\\n  if (util.isString(obj)) obj = urlParse(obj);\\\\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\\\\n  return obj.format();\\\\n}\\\\n\\\\nUrl.prototype.format = function() {\\\\n  var auth = this.auth || '';\\\\n  if (auth) {\\\\n    auth = encodeURIComponent(auth);\\\\n    auth = auth.replace(/%3A/i, ':');\\\\n    auth += '@';\\\\n  }\\\\n\\\\n  var protocol = this.protocol || '',\\\\n      pathname = this.pathname || '',\\\\n      hash = this.hash || '',\\\\n      host = false,\\\\n      query = '';\\\\n\\\\n  if (this.host) {\\\\n    host = auth + this.host;\\\\n  } else if (this.hostname) {\\\\n    host = auth + (this.hostname.indexOf(':') === -1 ?\\\\n        this.hostname :\\\\n        '[' + this.hostname + ']');\\\\n    if (this.port) {\\\\n      host += ':' + this.port;\\\\n    }\\\\n  }\\\\n\\\\n  if (this.query &&\\\\n      util.isObject(this.query) &&\\\\n      Object.keys(this.query).length) {\\\\n    query = querystring.stringify(this.query);\\\\n  }\\\\n\\\\n  var search = this.search || (query && ('?' + query)) || '';\\\\n\\\\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\\\\n\\\\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\\\\n  // unless they had them to begin with.\\\\n  if (this.slashes ||\\\\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\\\\n    host = '//' + (host || '');\\\\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\\\\n  } else if (!host) {\\\\n    host = '';\\\\n  }\\\\n\\\\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\\\\n  if (search && search.charAt(0) !== '?') search = '?' + search;\\\\n\\\\n  pathname = pathname.replace(/[?#]/g, function(match) {\\\\n    return encodeURIComponent(match);\\\\n  });\\\\n  search = search.replace('#', '%23');\\\\n\\\\n  return protocol + host + pathname + search + hash;\\\\n};\\\\n\\\\nfunction urlResolve(source, relative) {\\\\n  return urlParse(source, false, true).resolve(relative);\\\\n}\\\\n\\\\nUrl.prototype.resolve = function(relative) {\\\\n  return this.resolveObject(urlParse(relative, false, true)).format();\\\\n};\\\\n\\\\nfunction urlResolveObject(source, relative) {\\\\n  if (!source) return relative;\\\\n  return urlParse(source, false, true).resolveObject(relative);\\\\n}\\\\n\\\\nUrl.prototype.resolveObject = function(relative) {\\\\n  if (util.isString(relative)) {\\\\n    var rel = new Url();\\\\n    rel.parse(relative, false, true);\\\\n    relative = rel;\\\\n  }\\\\n\\\\n  var result = new Url();\\\\n  var tkeys = Object.keys(this);\\\\n  for (var tk = 0; tk < tkeys.length; tk++) {\\\\n    var tkey = tkeys[tk];\\\\n    result[tkey] = this[tkey];\\\\n  }\\\\n\\\\n  // hash is always overridden, no matter what.\\\\n  // even href=\\\\\\\"\\\\\\\" will remove it.\\\\n  result.hash = relative.hash;\\\\n\\\\n  // if the relative url is empty, then there's nothing left to do here.\\\\n  if (relative.href === '') {\\\\n    result.href = result.format();\\\\n    return result;\\\\n  }\\\\n\\\\n  // hrefs like //foo/bar always cut to the protocol.\\\\n  if (relative.slashes && !relative.protocol) {\\\\n    // take everything except the protocol from relative\\\\n    var rkeys = Object.keys(relative);\\\\n    for (var rk = 0; rk < rkeys.length; rk++) {\\\\n      var rkey = rkeys[rk];\\\\n      if (rkey !== 'protocol')\\\\n        result[rkey] = relative[rkey];\\\\n    }\\\\n\\\\n    //urlParse appends trailing / to urls like http://www.example.com\\\\n    if (slashedProtocol[result.protocol] &&\\\\n        result.hostname && !result.pathname) {\\\\n      result.path = result.pathname = '/';\\\\n    }\\\\n\\\\n    result.href = result.format();\\\\n    return result;\\\\n  }\\\\n\\\\n  if (relative.protocol && relative.protocol !== result.protocol) {\\\\n    // if it's a known url protocol, then changing\\\\n    // the protocol does weird things\\\\n    // first, if it's not file:, then we MUST have a host,\\\\n    // and if there was a path\\\\n    // to begin with, then we MUST have a path.\\\\n    // if it is file:, then the host is dropped,\\\\n    // because that's known to be hostless.\\\\n    // anything else is assumed to be absolute.\\\\n    if (!slashedProtocol[relative.protocol]) {\\\\n      var keys = Object.keys(relative);\\\\n      for (var v = 0; v < keys.length; v++) {\\\\n        var k = keys[v];\\\\n        result[k] = relative[k];\\\\n      }\\\\n      result.href = result.format();\\\\n      return result;\\\\n    }\\\\n\\\\n    result.protocol = relative.protocol;\\\\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\\\\n      var relPath = (relative.pathname || '').split('/');\\\\n      while (relPath.length && !(relative.host = relPath.shift()));\\\\n      if (!relative.host) relative.host = '';\\\\n      if (!relative.hostname) relative.hostname = '';\\\\n      if (relPath[0] !== '') relPath.unshift('');\\\\n      if (relPath.length < 2) relPath.unshift('');\\\\n      result.pathname = relPath.join('/');\\\\n    } else {\\\\n      result.pathname = relative.pathname;\\\\n    }\\\\n    result.search = relative.search;\\\\n    result.query = relative.query;\\\\n    result.host = relative.host || '';\\\\n    result.auth = relative.auth;\\\\n    result.hostname = relative.hostname || relative.host;\\\\n    result.port = relative.port;\\\\n    // to support http.request\\\\n    if (result.pathname || result.search) {\\\\n      var p = result.pathname || '';\\\\n      var s = result.search || '';\\\\n      result.path = p + s;\\\\n    }\\\\n    result.slashes = result.slashes || relative.slashes;\\\\n    result.href = result.format();\\\\n    return result;\\\\n  }\\\\n\\\\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\\\\n      isRelAbs = (\\\\n          relative.host ||\\\\n          relative.pathname && relative.pathname.charAt(0) === '/'\\\\n      ),\\\\n      mustEndAbs = (isRelAbs || isSourceAbs ||\\\\n                    (result.host && relative.pathname)),\\\\n      removeAllDots = mustEndAbs,\\\\n      srcPath = result.pathname && result.pathname.split('/') || [],\\\\n      relPath = relative.pathname && relative.pathname.split('/') || [],\\\\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\\\\n\\\\n  // if the url is a non-slashed url, then relative\\\\n  // links like ../.. should be able\\\\n  // to crawl up to the hostname, as well.  This is strange.\\\\n  // result.protocol has already been set by now.\\\\n  // Later on, put the first path part into the host field.\\\\n  if (psychotic) {\\\\n    result.hostname = '';\\\\n    result.port = null;\\\\n    if (result.host) {\\\\n      if (srcPath[0] === '') srcPath[0] = result.host;\\\\n      else srcPath.unshift(result.host);\\\\n    }\\\\n    result.host = '';\\\\n    if (relative.protocol) {\\\\n      relative.hostname = null;\\\\n      relative.port = null;\\\\n      if (relative.host) {\\\\n        if (relPath[0] === '') relPath[0] = relative.host;\\\\n        else relPath.unshift(relative.host);\\\\n      }\\\\n      relative.host = null;\\\\n    }\\\\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\\\\n  }\\\\n\\\\n  if (isRelAbs) {\\\\n    // it's absolute.\\\\n    result.host = (relative.host || relative.host === '') ?\\\\n                  relative.host : result.host;\\\\n    result.hostname = (relative.hostname || relative.hostname === '') ?\\\\n                      relative.hostname : result.hostname;\\\\n    result.search = relative.search;\\\\n    result.query = relative.query;\\\\n    srcPath = relPath;\\\\n    // fall through to the dot-handling below.\\\\n  } else if (relPath.length) {\\\\n    // it's relative\\\\n    // throw away the existing file, and take the new path instead.\\\\n    if (!srcPath) srcPath = [];\\\\n    srcPath.pop();\\\\n    srcPath = srcPath.concat(relPath);\\\\n    result.search = relative.search;\\\\n    result.query = relative.query;\\\\n  } else if (!util.isNullOrUndefined(relative.search)) {\\\\n    // just pull out the search.\\\\n    // like href='?foo'.\\\\n    // Put this after the other two cases because it simplifies the booleans\\\\n    if (psychotic) {\\\\n      result.hostname = result.host = srcPath.shift();\\\\n      //occationaly the auth can get stuck only in host\\\\n      //this especially happens in cases like\\\\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\\\\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\\\\n                       result.host.split('@') : false;\\\\n      if (authInHost) {\\\\n        result.auth = authInHost.shift();\\\\n        result.host = result.hostname = authInHost.shift();\\\\n      }\\\\n    }\\\\n    result.search = relative.search;\\\\n    result.query = relative.query;\\\\n    //to support http.request\\\\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\\\\n      result.path = (result.pathname ? result.pathname : '') +\\\\n                    (result.search ? result.search : '');\\\\n    }\\\\n    result.href = result.format();\\\\n    return result;\\\\n  }\\\\n\\\\n  if (!srcPath.length) {\\\\n    // no path at all.  easy.\\\\n    // we've already handled the other stuff above.\\\\n    result.pathname = null;\\\\n    //to support http.request\\\\n    if (result.search) {\\\\n      result.path = '/' + result.search;\\\\n    } else {\\\\n      result.path = null;\\\\n    }\\\\n    result.href = result.format();\\\\n    return result;\\\\n  }\\\\n\\\\n  // if a url ENDs in . or .., then it must get a trailing slash.\\\\n  // however, if it ends in anything else non-slashy,\\\\n  // then it must NOT get a trailing slash.\\\\n  var last = srcPath.slice(-1)[0];\\\\n  var hasTrailingSlash = (\\\\n      (result.host || relative.host || srcPath.length > 1) &&\\\\n      (last === '.' || last === '..') || last === '');\\\\n\\\\n  // strip single dots, resolve double dots to parent dir\\\\n  // if the path tries to go above the root, `up` ends up > 0\\\\n  var up = 0;\\\\n  for (var i = srcPath.length; i >= 0; i--) {\\\\n    last = srcPath[i];\\\\n    if (last === '.') {\\\\n      srcPath.splice(i, 1);\\\\n    } else if (last === '..') {\\\\n      srcPath.splice(i, 1);\\\\n      up++;\\\\n    } else if (up) {\\\\n      srcPath.splice(i, 1);\\\\n      up--;\\\\n    }\\\\n  }\\\\n\\\\n  // if the path is allowed to go above the root, restore leading ..s\\\\n  if (!mustEndAbs && !removeAllDots) {\\\\n    for (; up--; up) {\\\\n      srcPath.unshift('..');\\\\n    }\\\\n  }\\\\n\\\\n  if (mustEndAbs && srcPath[0] !== '' &&\\\\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\\\\n    srcPath.unshift('');\\\\n  }\\\\n\\\\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\\\\n    srcPath.push('');\\\\n  }\\\\n\\\\n  var isAbsolute = srcPath[0] === '' ||\\\\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\\\\n\\\\n  // put the host back\\\\n  if (psychotic) {\\\\n    result.hostname = result.host = isAbsolute ? '' :\\\\n                                    srcPath.length ? srcPath.shift() : '';\\\\n    //occationaly the auth can get stuck only in host\\\\n    //this especially happens in cases like\\\\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\\\\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\\\\n                     result.host.split('@') : false;\\\\n    if (authInHost) {\\\\n      result.auth = authInHost.shift();\\\\n      result.host = result.hostname = authInHost.shift();\\\\n    }\\\\n  }\\\\n\\\\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\\\\n\\\\n  if (mustEndAbs && !isAbsolute) {\\\\n    srcPath.unshift('');\\\\n  }\\\\n\\\\n  if (!srcPath.length) {\\\\n    result.pathname = null;\\\\n    result.path = null;\\\\n  } else {\\\\n    result.pathname = srcPath.join('/');\\\\n  }\\\\n\\\\n  //to support request.http\\\\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\\\\n    result.path = (result.pathname ? result.pathname : '') +\\\\n                  (result.search ? result.search : '');\\\\n  }\\\\n  result.auth = relative.auth || result.auth;\\\\n  result.slashes = result.slashes || relative.slashes;\\\\n  result.href = result.format();\\\\n  return result;\\\\n};\\\\n\\\\nUrl.prototype.parseHost = function() {\\\\n  var host = this.host;\\\\n  var port = portPattern.exec(host);\\\\n  if (port) {\\\\n    port = port[0];\\\\n    if (port !== ':') {\\\\n      this.port = port.substr(1);\\\\n    }\\\\n    host = host.substr(0, host.length - port.length);\\\\n  }\\\\n  if (host) this.hostname = host;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./node_modules/url/url.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/url/util.js\\\":\\n/*!**********************************!*\\\\\\n  !*** ./node_modules/url/util.js ***!\\n  \\\\**********************************/\\n/*! no static exports found */\\n/***/ (function(module, exports, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"\\\\n\\\\nmodule.exports = {\\\\n  isString: function(arg) {\\\\n    return typeof(arg) === 'string';\\\\n  },\\\\n  isObject: function(arg) {\\\\n    return typeof(arg) === 'object' && arg !== null;\\\\n  },\\\\n  isNull: function(arg) {\\\\n    return arg === null;\\\\n  },\\\\n  isNullOrUndefined: function(arg) {\\\\n    return arg == null;\\\\n  }\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXJsL3V0aWwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy8uL25vZGVfbW9kdWxlcy91cmwvdXRpbC5qcz8zNWU4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGlzU3RyaW5nOiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gdHlwZW9mKGFyZykgPT09ICdzdHJpbmcnO1xuICB9LFxuICBpc09iamVjdDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG4gIH0sXG4gIGlzTnVsbDogZnVuY3Rpb24oYXJnKSB7XG4gICAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbiAgfSxcbiAgaXNOdWxsT3JVbmRlZmluZWQ6IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBhcmcgPT0gbnVsbDtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/url/util.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/webpack/buildin/global.js\\\":\\n/*!***********************************!*\\\\\\n  !*** (webpack)/buildin/global.js ***!\\n  \\\\***********************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"var g;\\\\n\\\\n// This works in non-strict mode\\\\ng = (function() {\\\\n\\\\treturn this;\\\\n})();\\\\n\\\\ntry {\\\\n\\\\t// This works if eval is allowed (see CSP)\\\\n\\\\tg = g || new Function(\\\\\\\"return this\\\\\\\")();\\\\n} catch (e) {\\\\n\\\\t// This works if the window reference is available\\\\n\\\\tif (typeof window === \\\\\\\"object\\\\\\\") g = window;\\\\n}\\\\n\\\\n// g can still be undefined, but nothing to do about it...\\\\n// We return undefined, instead of nothing here, so it's\\\\n// easier to handle this case. if(!global) { ...}\\\\n\\\\nmodule.exports = g;\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcz9jZDAwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./node_modules/webpack/buildin/module.js\\\":\\n/*!***********************************!*\\\\\\n  !*** (webpack)/buildin/module.js ***!\\n  \\\\***********************************/\\n/*! no static exports found */\\n/***/ (function(module, exports) {\\n\\neval(\\\"module.exports = function(module) {\\\\n\\\\tif (!module.webpackPolyfill) {\\\\n\\\\t\\\\tmodule.deprecate = function() {};\\\\n\\\\t\\\\tmodule.paths = [];\\\\n\\\\t\\\\t// module.parent = undefined by default\\\\n\\\\t\\\\tif (!module.children) module.children = [];\\\\n\\\\t\\\\tObject.defineProperty(module, \\\\\\\"loaded\\\\\\\", {\\\\n\\\\t\\\\t\\\\tenumerable: true,\\\\n\\\\t\\\\t\\\\tget: function() {\\\\n\\\\t\\\\t\\\\t\\\\treturn module.l;\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t});\\\\n\\\\t\\\\tObject.defineProperty(module, \\\\\\\"id\\\\\\\", {\\\\n\\\\t\\\\t\\\\tenumerable: true,\\\\n\\\\t\\\\t\\\\tget: function() {\\\\n\\\\t\\\\t\\\\t\\\\treturn module.i;\\\\n\\\\t\\\\t\\\\t}\\\\n\\\\t\\\\t});\\\\n\\\\t\\\\tmodule.webpackPolyfill = 1;\\\\n\\\\t}\\\\n\\\\treturn module;\\\\n};\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLyh3ZWJwYWNrKS9idWlsZGluL21vZHVsZS5qcz9jZWQyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obW9kdWxlKSB7XG5cdGlmICghbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdG1vZHVsZS5kZXByZWNhdGUgPSBmdW5jdGlvbigpIHt9O1xuXHRcdG1vZHVsZS5wYXRocyA9IFtdO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/module.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/plugin.webworker.js\\\":\\n/*!*********************************!*\\\\\\n  !*** ./src/plugin.webworker.js ***!\\n  \\\\*********************************/\\n/*! no exports provided */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony import */ var _pluginCore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pluginCore.js */ \\\\\\\"./src/pluginCore.js\\\\\\\");\\\\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc.js */ \\\\\\\"./src/rpc.js\\\\\\\");\\\\n/**\\\\n * Contains the routines loaded by the plugin Worker under web-browser.\\\\n *\\\\n * Initializes the web environment version of the platform-dependent\\\\n * connection object for the plugin site\\\\n */\\\\n\\\\n\\\\n\\\\n(function() {\\\\n  // make sure this runs inside a webworker\\\\n  if (\\\\n    typeof WorkerGlobalScope === \\\\\\\"undefined\\\\\\\" ||\\\\n    !self ||\\\\n    !(self instanceof WorkerGlobalScope)\\\\n  ) {\\\\n    throw new Error(\\\\\\\"This script can only loaded in a webworker\\\\\\\");\\\\n  }\\\\n  /**\\\\n   * Executes the given code in a jailed environment. For web\\\\n   * implementation, we're already jailed in the iframe and the\\\\n   * worker, so simply eval()\\\\n   *\\\\n   * @param {String} code code to execute\\\\n   */\\\\n  var execute = function(code) {\\\\n    try {\\\\n      if (code.type === \\\\\\\"requirements\\\\\\\") {\\\\n        try {\\\\n          if (\\\\n            code.requirements &&\\\\n            (Array.isArray(code.requirements) ||\\\\n              typeof code.requirements === \\\\\\\"string\\\\\\\")\\\\n          ) {\\\\n            try {\\\\n              if (!Array.isArray(code.requirements)) {\\\\n                code.requirements = [code.requirements];\\\\n              }\\\\n              for (var i = 0; i < code.requirements.length; i++) {\\\\n                if (\\\\n                  code.requirements[i].toLowerCase().endsWith(\\\\\\\".css\\\\\\\") ||\\\\n                  code.requirements[i].startsWith(\\\\\\\"css:\\\\\\\")\\\\n                ) {\\\\n                  throw \\\\\\\"unable to import css in a webworker\\\\\\\";\\\\n                } else if (\\\\n                  code.requirements[i].toLowerCase().endsWith(\\\\\\\".js\\\\\\\") ||\\\\n                  code.requirements[i].startsWith(\\\\\\\"js:\\\\\\\")\\\\n                ) {\\\\n                  if (code.requirements[i].startsWith(\\\\\\\"js:\\\\\\\")) {\\\\n                    code.requirements[i] = code.requirements[i].slice(3);\\\\n                  }\\\\n                  importScripts(code.requirements[i]);\\\\n                } else if (code.requirements[i].startsWith(\\\\\\\"http\\\\\\\")) {\\\\n                  importScripts(code.requirements[i]);\\\\n                } else if (code.requirements[i].startsWith(\\\\\\\"cache:\\\\\\\")) {\\\\n                  //ignore cache\\\\n                } else {\\\\n                  console.log(\\\\n                    \\\\\\\"Unprocessed requirements url: \\\\\\\" + code.requirements[i]\\\\n                  );\\\\n                }\\\\n              }\\\\n            } catch (e) {\\\\n              throw \\\\\\\"failed to import required scripts: \\\\\\\" +\\\\n                code.requirements.toString();\\\\n            }\\\\n          }\\\\n        } catch (e) {\\\\n          throw e;\\\\n        }\\\\n      } else if (code.type === \\\\\\\"script\\\\\\\") {\\\\n        try {\\\\n          if (\\\\n            code.requirements &&\\\\n            (Array.isArray(code.requirements) ||\\\\n              typeof code.requirements === \\\\\\\"string\\\\\\\")\\\\n          ) {\\\\n            try {\\\\n              if (Array.isArray(code.requirements)) {\\\\n                for (let i = 0; i < code.requirements.length; i++) {\\\\n                  importScripts(code.requirements[i]);\\\\n                }\\\\n              } else {\\\\n                importScripts(code.requirements);\\\\n              }\\\\n            } catch (e) {\\\\n              throw \\\\\\\"failed to import required scripts: \\\\\\\" +\\\\n                code.requirements.toString();\\\\n            }\\\\n          }\\\\n          eval(code.content);\\\\n        } catch (e) {\\\\n          console.error(e.message, e.stack);\\\\n          throw e;\\\\n        }\\\\n      } else {\\\\n        throw \\\\\\\"unsupported code type.\\\\\\\";\\\\n      }\\\\n      self.postMessage({ type: \\\\\\\"executeSuccess\\\\\\\" });\\\\n    } catch (e) {\\\\n      console.error(\\\\\\\"failed to execute scripts: \\\\\\\", code, e);\\\\n      self.postMessage({ type: \\\\\\\"executeFailure\\\\\\\", error: e.stack || String(e) });\\\\n    }\\\\n  };\\\\n\\\\n  /**\\\\n   * Connection object provided to the RPC constructor,\\\\n   * plugin site implementation for the web-based environment.\\\\n   * Global will be then cleared to prevent exposure into the\\\\n   * Worker, so we put this local connection object into a closure\\\\n   */\\\\n  const conn = {\\\\n    disconnect: function() {\\\\n      self.close();\\\\n    },\\\\n    send: function(data, transferables) {\\\\n      data.__transferables__ = transferables;\\\\n      self.postMessage(data, transferables);\\\\n    },\\\\n    onMessage: function(h) {\\\\n      conn._messageHandler = h;\\\\n    },\\\\n    _messageHandler: function() {},\\\\n    onDisconnect: function() {}\\\\n  };\\\\n\\\\n  const config = {\\\\n    type: \\\\\\\"web-worker\\\\\\\",\\\\n    dedicated_thread: true,\\\\n    allow_execution: true,\\\\n    lang: \\\\\\\"javascript\\\\\\\",\\\\n    api_version: _rpc_js__WEBPACK_IMPORTED_MODULE_1__[\\\\\\\"API_VERSION\\\\\\\"]\\\\n  };\\\\n\\\\n  /**\\\\n   * Event lisener for the plugin message\\\\n   */\\\\n  self.addEventListener(\\\\\\\"message\\\\\\\", function(e) {\\\\n    const m = e.data;\\\\n    switch (m && m.type) {\\\\n      case \\\\\\\"getConfig\\\\\\\":\\\\n        self.postMessage({\\\\n          type: \\\\\\\"config\\\\\\\",\\\\n          config: config\\\\n        });\\\\n        break;\\\\n      case \\\\\\\"execute\\\\\\\":\\\\n        execute(m.code);\\\\n        if (m.code.type === \\\\\\\"requirements\\\\\\\") {\\\\n          if (!Array.isArray(m.code.requirements)) {\\\\n            m.code.requirements = [m.code.requirements];\\\\n          }\\\\n          self.postMessage({\\\\n            type: \\\\\\\"cacheRequirements\\\\\\\",\\\\n            requirements: m.code.requirements\\\\n          });\\\\n        }\\\\n        break;\\\\n      // for webworker only\\\\n      case \\\\\\\"connectRPC\\\\\\\":\\\\n        Object(_pluginCore_js__WEBPACK_IMPORTED_MODULE_0__[\\\\\\\"connectRPC\\\\\\\"])(conn, m.config);\\\\n        break;\\\\n      default:\\\\n        conn._messageHandler(m);\\\\n    }\\\\n  });\\\\n  self.postMessage({\\\\n    type: \\\\\\\"initialized\\\\\\\",\\\\n    config: config\\\\n  });\\\\n})();\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./src/plugin.webworker.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/pluginCore.js\\\":\\n/*!***************************!*\\\\\\n  !*** ./src/pluginCore.js ***!\\n  \\\\***************************/\\n/*! exports provided: connectRPC */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"connectRPC\\\\\\\", function() { return connectRPC; });\\\\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rpc.js */ \\\\\\\"./src/rpc.js\\\\\\\");\\\\n/**\\\\n * Core plugin script loaded into the plugin process/thread.\\\\n *\\\\n * Initializes the plugin-site API global methods.\\\\n */\\\\n\\\\nfunction connectRPC(connection, config) {\\\\n  const application = {};\\\\n  config = config || {};\\\\n  const rpc = new _rpc_js__WEBPACK_IMPORTED_MODULE_0__[\\\\\\\"RPC\\\\\\\"](connection, config);\\\\n  rpc.onGetInterface(function () {\\\\n    launchConnected();\\\\n  });\\\\n  rpc.onRemoteUpdate(function () {\\\\n    application.remote = rpc.getRemote();\\\\n    if (!application.remote) return;\\\\n    const api = application.remote || {};\\\\n\\\\n    if (api.export) {\\\\n      console.error(\\\\\\\"WARNING: overwriting function 'export'.\\\\\\\");\\\\n    }\\\\n\\\\n    if (api.onload) {\\\\n      console.error(\\\\\\\"WARNING: overwriting function 'onload'.\\\\\\\");\\\\n    }\\\\n\\\\n    if (api.dispose) {\\\\n      console.error(\\\\\\\"WARNING: overwriting function 'dispose'.\\\\\\\");\\\\n    }\\\\n\\\\n    api.export = application.setInterface;\\\\n    api.onLoad = application.whenConnected;\\\\n    api.dispose = application.disconnect;\\\\n\\\\n    if (typeof WorkerGlobalScope !== \\\\\\\"undefined\\\\\\\" && self instanceof WorkerGlobalScope) {\\\\n      self.api = api;\\\\n      self.postMessage({\\\\n        type: \\\\\\\"imjoy_remote_api_ready\\\\\\\"\\\\n      });\\\\n    } else if (typeof window) {\\\\n      window.dispatchEvent(new CustomEvent(\\\\\\\"imjoy_remote_api_ready\\\\\\\", {\\\\n        detail: api\\\\n      }));\\\\n    }\\\\n  });\\\\n  /**\\\\n   * Simplified clone of Whenable instance (the object can not be\\\\n   * placed into a shared script, because the main library needs it\\\\n   * before the additional scripts may load)\\\\n   */\\\\n\\\\n  var connected = false;\\\\n  var connectedHandlers = [];\\\\n\\\\n  var launchConnected = function () {\\\\n    if (!connected) {\\\\n      connected = true;\\\\n      var handler;\\\\n\\\\n      while (handler = connectedHandlers.pop()) {\\\\n        handler();\\\\n      }\\\\n    }\\\\n  };\\\\n\\\\n  var checkHandler = function (handler) {\\\\n    var type = typeof handler;\\\\n\\\\n    if (type !== \\\\\\\"function\\\\\\\") {\\\\n      var msg = \\\\\\\"A function may only be subsribed to the event, \\\\\\\" + type + \\\\\\\" was provided instead\\\\\\\";\\\\n      throw new Error(msg);\\\\n    }\\\\n\\\\n    return handler;\\\\n  };\\\\n  /**\\\\n   * Sets a function executed after the connection to the\\\\n   * application is estaplished, and the initial interface-exchange\\\\n   * messaging is completed\\\\n   *\\\\n   * @param {Function} handler to be called upon initialization\\\\n   */\\\\n\\\\n\\\\n  application.whenConnected = function (handler) {\\\\n    handler = checkHandler(handler);\\\\n\\\\n    if (connected) {\\\\n      handler();\\\\n    } else {\\\\n      connectedHandlers.push(handler);\\\\n    }\\\\n  };\\\\n  /**\\\\n   * Sets the plugin interface available to the application\\\\n   *\\\\n   * @param {Object} _interface to set\\\\n   */\\\\n\\\\n\\\\n  application.setInterface = function (_interface) {\\\\n    rpc.setInterface(_interface);\\\\n  };\\\\n  /**\\\\n   * Disconnects the plugin from the application (sending\\\\n   * notification message) and destroys itself\\\\n   */\\\\n\\\\n\\\\n  application.disconnect = function (_interface) {\\\\n    rpc.disconnect();\\\\n  };\\\\n}//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGx1Z2luQ29yZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDL3NyYy9wbHVnaW5Db3JlLmpzP2E0NzYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3JlIHBsdWdpbiBzY3JpcHQgbG9hZGVkIGludG8gdGhlIHBsdWdpbiBwcm9jZXNzL3RocmVhZC5cbiAqXG4gKiBJbml0aWFsaXplcyB0aGUgcGx1Z2luLXNpdGUgQVBJIGdsb2JhbCBtZXRob2RzLlxuICovXG5pbXBvcnQgeyBSUEMgfSBmcm9tIFwiLi9ycGMuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbm5lY3RSUEMoY29ubmVjdGlvbiwgY29uZmlnKSB7XG4gIGNvbnN0IGFwcGxpY2F0aW9uID0ge307XG4gIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcblxuICBjb25zdCBycGMgPSBuZXcgUlBDKGNvbm5lY3Rpb24sIGNvbmZpZyk7XG4gIHJwYy5vbkdldEludGVyZmFjZShmdW5jdGlvbigpIHtcbiAgICBsYXVuY2hDb25uZWN0ZWQoKTtcbiAgfSk7XG5cbiAgcnBjLm9uUmVtb3RlVXBkYXRlKGZ1bmN0aW9uKCkge1xuICAgIGFwcGxpY2F0aW9uLnJlbW90ZSA9IHJwYy5nZXRSZW1vdGUoKTtcbiAgICBpZiAoIWFwcGxpY2F0aW9uLnJlbW90ZSkgcmV0dXJuO1xuICAgIGNvbnN0IGFwaSA9IGFwcGxpY2F0aW9uLnJlbW90ZSB8fCB7fTtcbiAgICBpZiAoYXBpLmV4cG9ydCkge1xuICAgICAgY29uc29sZS5lcnJvcihcIldBUk5JTkc6IG92ZXJ3cml0aW5nIGZ1bmN0aW9uICdleHBvcnQnLlwiKTtcbiAgICB9XG4gICAgaWYgKGFwaS5vbmxvYWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJXQVJOSU5HOiBvdmVyd3JpdGluZyBmdW5jdGlvbiAnb25sb2FkJy5cIik7XG4gICAgfVxuICAgIGlmIChhcGkuZGlzcG9zZSkge1xuICAgICAgY29uc29sZS5lcnJvcihcIldBUk5JTkc6IG92ZXJ3cml0aW5nIGZ1bmN0aW9uICdkaXNwb3NlJy5cIik7XG4gICAgfVxuICAgIGFwaS5leHBvcnQgPSBhcHBsaWNhdGlvbi5zZXRJbnRlcmZhY2U7XG4gICAgYXBpLm9uTG9hZCA9IGFwcGxpY2F0aW9uLndoZW5Db25uZWN0ZWQ7XG4gICAgYXBpLmRpc3Bvc2UgPSBhcHBsaWNhdGlvbi5kaXNjb25uZWN0O1xuICAgIGlmIChcbiAgICAgIHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlXG4gICAgKSB7XG4gICAgICBzZWxmLmFwaSA9IGFwaTtcbiAgICAgIHNlbGYucG9zdE1lc3NhZ2Uoe1xuICAgICAgICB0eXBlOiBcImltam95X3JlbW90ZV9hcGlfcmVhZHlcIlxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93KSB7XG4gICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgbmV3IEN1c3RvbUV2ZW50KFwiaW1qb3lfcmVtb3RlX2FwaV9yZWFkeVwiLCB7IGRldGFpbDogYXBpIH0pXG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNpbXBsaWZpZWQgY2xvbmUgb2YgV2hlbmFibGUgaW5zdGFuY2UgKHRoZSBvYmplY3QgY2FuIG5vdCBiZVxuICAgKiBwbGFjZWQgaW50byBhIHNoYXJlZCBzY3JpcHQsIGJlY2F1c2UgdGhlIG1haW4gbGlicmFyeSBuZWVkcyBpdFxuICAgKiBiZWZvcmUgdGhlIGFkZGl0aW9uYWwgc2NyaXB0cyBtYXkgbG9hZClcbiAgICovXG4gIHZhciBjb25uZWN0ZWQgPSBmYWxzZTtcbiAgdmFyIGNvbm5lY3RlZEhhbmRsZXJzID0gW107XG5cbiAgdmFyIGxhdW5jaENvbm5lY3RlZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghY29ubmVjdGVkKSB7XG4gICAgICBjb25uZWN0ZWQgPSB0cnVlO1xuXG4gICAgICB2YXIgaGFuZGxlcjtcbiAgICAgIHdoaWxlICgoaGFuZGxlciA9IGNvbm5lY3RlZEhhbmRsZXJzLnBvcCgpKSkge1xuICAgICAgICBoYW5kbGVyKCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBjaGVja0hhbmRsZXIgPSBmdW5jdGlvbihoYW5kbGVyKSB7XG4gICAgdmFyIHR5cGUgPSB0eXBlb2YgaGFuZGxlcjtcbiAgICBpZiAodHlwZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB2YXIgbXNnID1cbiAgICAgICAgXCJBIGZ1bmN0aW9uIG1heSBvbmx5IGJlIHN1YnNyaWJlZCB0byB0aGUgZXZlbnQsIFwiICtcbiAgICAgICAgdHlwZSArXG4gICAgICAgIFwiIHdhcyBwcm92aWRlZCBpbnN0ZWFkXCI7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaGFuZGxlcjtcbiAgfTtcblxuICAvKipcbiAgICogU2V0cyBhIGZ1bmN0aW9uIGV4ZWN1dGVkIGFmdGVyIHRoZSBjb25uZWN0aW9uIHRvIHRoZVxuICAgKiBhcHBsaWNhdGlvbiBpcyBlc3RhcGxpc2hlZCwgYW5kIHRoZSBpbml0aWFsIGludGVyZmFjZS1leGNoYW5nZVxuICAgKiBtZXNzYWdpbmcgaXMgY29tcGxldGVkXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgdG8gYmUgY2FsbGVkIHVwb24gaW5pdGlhbGl6YXRpb25cbiAgICovXG4gIGFwcGxpY2F0aW9uLndoZW5Db25uZWN0ZWQgPSBmdW5jdGlvbihoYW5kbGVyKSB7XG4gICAgaGFuZGxlciA9IGNoZWNrSGFuZGxlcihoYW5kbGVyKTtcbiAgICBpZiAoY29ubmVjdGVkKSB7XG4gICAgICBoYW5kbGVyKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbm5lY3RlZEhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBwbHVnaW4gaW50ZXJmYWNlIGF2YWlsYWJsZSB0byB0aGUgYXBwbGljYXRpb25cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IF9pbnRlcmZhY2UgdG8gc2V0XG4gICAqL1xuICBhcHBsaWNhdGlvbi5zZXRJbnRlcmZhY2UgPSBmdW5jdGlvbihfaW50ZXJmYWNlKSB7XG4gICAgcnBjLnNldEludGVyZmFjZShfaW50ZXJmYWNlKTtcbiAgfTtcblxuICAvKipcbiAgICogRGlzY29ubmVjdHMgdGhlIHBsdWdpbiBmcm9tIHRoZSBhcHBsaWNhdGlvbiAoc2VuZGluZ1xuICAgKiBub3RpZmljYXRpb24gbWVzc2FnZSkgYW5kIGRlc3Ryb3lzIGl0c2VsZlxuICAgKi9cbiAgYXBwbGljYXRpb24uZGlzY29ubmVjdCA9IGZ1bmN0aW9uKF9pbnRlcmZhY2UpIHtcbiAgICBycGMuZGlzY29ubmVjdCgpO1xuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFLQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUVBOzs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7O0FBSUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\\\n//# sourceURL=webpack-internal:///./src/pluginCore.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/rpc.js\\\":\\n/*!********************!*\\\\\\n  !*** ./src/rpc.js ***!\\n  \\\\********************/\\n/*! exports provided: API_VERSION, RPC */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"API_VERSION\\\\\\\", function() { return API_VERSION; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"RPC\\\\\\\", function() { return RPC; });\\\\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \\\\\\\"./src/utils.js\\\\\\\");\\\\n/**\\\\n * Contains the RPC object used both by the application\\\\n * site, and by each plugin\\\\n */\\\\n\\\\nconst API_VERSION = \\\\\\\"0.2.0\\\\\\\";\\\\nconst ArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array())).constructor;\\\\n\\\\nfunction _appendBuffer(buffer1, buffer2) {\\\\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\\\\n  tmp.set(new Uint8Array(buffer1), 0);\\\\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\\\\n  return tmp.buffer;\\\\n}\\\\n\\\\nfunction getKeyByValue(object, value) {\\\\n  return Object.keys(object).find(key => object[key] === value);\\\\n}\\\\n/**\\\\n * RPC object represents a single site in the\\\\n * communication protocol between the application and the plugin\\\\n *\\\\n * @param {Object} connection a special object allowing to send\\\\n * and receive messages from the opposite site (basically it\\\\n * should only provide send() and onMessage() methods)\\\\n */\\\\n\\\\n\\\\nclass RPC {\\\\n  constructor(connection, config) {\\\\n    this._connection = connection;\\\\n    this.config = config || {};\\\\n    this._interface = {};\\\\n    this._plugin_interfaces = {};\\\\n    this._remote = null;\\\\n\\\\n    this._remoteUpdateHandler = function () {};\\\\n\\\\n    this._getInterfaceHandler = function () {};\\\\n\\\\n    this._interfaceSetAsRemoteHandler = null;\\\\n\\\\n    this._disconnectHandler = function () {};\\\\n\\\\n    this._store = new ReferenceStore();\\\\n    this._method_refs = new ReferenceStore();\\\\n    this._connection = connection;\\\\n    let me = this;\\\\n\\\\n    this._connection.onMessage(function (data) {\\\\n      me._processMessage(data);\\\\n    });\\\\n  }\\\\n  /**\\\\n   * Set a handler to be called when the remote site updates its\\\\n   * interface\\\\n   *\\\\n   * @param {Function} handler\\\\n   */\\\\n\\\\n\\\\n  onRemoteUpdate(handler) {\\\\n    this._remoteUpdateHandler = handler;\\\\n  }\\\\n  /**\\\\n   * Set a handler to be called when received a responce from the\\\\n   * remote site reporting that the previously provided interface\\\\n   * has been successfully set as remote for that site\\\\n   *\\\\n   * @param {Function} handler\\\\n   */\\\\n\\\\n\\\\n  onRemoteReady(handler) {\\\\n    this._method_refs.onReady(handler);\\\\n  }\\\\n\\\\n  onRemoteBusy(handler) {\\\\n    this._method_refs.onBusy(handler);\\\\n  }\\\\n\\\\n  getRemoteCallStack() {\\\\n    return this._method_refs.getStack();\\\\n  }\\\\n  /**\\\\n   * Set a handler to be called when the remote site requests to\\\\n   * (re)send the interface. Used to detect an initialzation\\\\n   * completion without sending additional request, since in fact\\\\n   * 'getInterface' request is only sent by application at the last\\\\n   * step of the plugin initialization\\\\n   *\\\\n   * @param {Function} handler\\\\n   */\\\\n\\\\n\\\\n  onGetInterface(handler) {\\\\n    this._getInterfaceHandler = handler;\\\\n  }\\\\n  /**\\\\n   * @returns {Object} set of remote interface methods\\\\n   */\\\\n\\\\n\\\\n  getRemote() {\\\\n    return this._remote;\\\\n  }\\\\n  /**\\\\n   * Sets the interface of this site making it available to the\\\\n   * remote site by sending a message with a set of methods names\\\\n   *\\\\n   * @param {Object} _interface to set\\\\n   */\\\\n\\\\n\\\\n  setInterface(_interface) {\\\\n    if (this.config.remote_function_mapping) {\\\\n      for (let func_name of this.config.remote_function_mapping) {\\\\n        if (_interface.constructor === Object) {\\\\n          _interface[func_name] = (...args) => {\\\\n            this._remote[func_name](...args);\\\\n          };\\\\n        } else if (_interface.constructor.constructor === Function) {\\\\n          _interface.constructor.prototype[func_name] = (...args) => {\\\\n            this._remote[func_name](...args);\\\\n          };\\\\n        }\\\\n      }\\\\n    }\\\\n\\\\n    this._interface = _interface;\\\\n  }\\\\n  /**\\\\n   * Sends the actual interface to the remote site upon it was\\\\n   * updated or by a special request of the remote site\\\\n   */\\\\n\\\\n\\\\n  sendInterface() {\\\\n    return new Promise(resolve => {\\\\n      var names = [];\\\\n\\\\n      if (!this._interface) {\\\\n        throw new Error(\\\\\\\"interface is not set.\\\\\\\");\\\\n      }\\\\n\\\\n      if (this._interface.constructor === Object) {\\\\n        for (var name of Object.keys(this._interface)) {\\\\n          if (name.startsWith(\\\\\\\"_\\\\\\\")) continue;\\\\n\\\\n          if (typeof this._interface[name] === \\\\\\\"function\\\\\\\") {\\\\n            names.push({\\\\n              name: name,\\\\n              data: null,\\\\n              type: \\\\\\\"function\\\\\\\"\\\\n            });\\\\n          } else {\\\\n            var data = this._interface[name];\\\\n\\\\n            if (data !== null && typeof data === \\\\\\\"object\\\\\\\") {\\\\n              var data2 = {};\\\\n\\\\n              for (var k of Object.keys(data)) {\\\\n                if (typeof data[k] === \\\\\\\"function\\\\\\\") {\\\\n                  data2[k] = \\\\\\\"rpc_method::\\\\\\\" + k;\\\\n                } else {\\\\n                  data2[k] = data[k];\\\\n                }\\\\n              }\\\\n\\\\n              names.push({\\\\n                name: name,\\\\n                data: data2,\\\\n                type: \\\\\\\"object\\\\\\\"\\\\n              });\\\\n            } else if (Object(data) !== data) {\\\\n              names.push({\\\\n                name: name,\\\\n                data: data,\\\\n                type: \\\\\\\"data\\\\\\\"\\\\n              });\\\\n            }\\\\n          }\\\\n        }\\\\n      } // a class\\\\n      else if (this._interface.constructor === Function) {\\\\n          throw new Error(\\\\\\\"Please instantiate the class before exportting it.\\\\\\\");\\\\n        } // instance of a class\\\\n        else if (this._interface.constructor.constructor === Function) {\\\\n            var functions = Object.getOwnPropertyNames(Object.getPrototypeOf(this._interface)).concat(Object.keys(this._interface));\\\\n\\\\n            for (var i = 0; i < functions.length; i++) {\\\\n              var name_ = functions[i];\\\\n              if (name_.startsWith(\\\\\\\"_\\\\\\\") || name_ === \\\\\\\"constructor\\\\\\\") continue;\\\\n\\\\n              if (typeof this._interface[name_] === \\\\\\\"function\\\\\\\") {\\\\n                names.push({\\\\n                  name: name_,\\\\n                  data: null\\\\n                });\\\\n              }\\\\n            }\\\\n          } else {\\\\n            throw Error(\\\\\\\"Unsupported interface type\\\\\\\");\\\\n          }\\\\n\\\\n      this._interfaceSetAsRemoteHandler = resolve;\\\\n\\\\n      this._connection.send({\\\\n        type: \\\\\\\"setInterface\\\\\\\",\\\\n        api: names\\\\n      });\\\\n    });\\\\n  }\\\\n  /**\\\\n   * Handles a message from the remote site\\\\n   */\\\\n  // var callback_reg = new RegExp(\\\\\\\"onupdate|run$\\\\\\\")\\\\n\\\\n\\\\n  _processMessage(data) {\\\\n    var resolve, reject, method, args, result;\\\\n\\\\n    switch (data.type) {\\\\n      case \\\\\\\"method\\\\\\\":\\\\n        var _interface = this._interface;\\\\n\\\\n        var _method_context = _interface.__this__ || _interface;\\\\n\\\\n        if (data.pid) {\\\\n          _interface = this._plugin_interfaces[data.pid];\\\\n\\\\n          if (!_interface) {\\\\n            if (data.promise) {\\\\n              [resolve, reject] = this._unwrap(data.promise, false);\\\\n              reject(`plugin api function is not avaialbe in \\\\\\\"${data.pid}\\\\\\\", the plugin maybe terminated.`);\\\\n            } else {\\\\n              console.error(`plugin api function is not avaialbe in ${data.pid}, the plugin maybe terminated.`);\\\\n            }\\\\n\\\\n            return;\\\\n          }\\\\n        }\\\\n\\\\n        if (data.name.indexOf(\\\\\\\".\\\\\\\") !== -1) {\\\\n          var names = data.name.split(\\\\\\\".\\\\\\\");\\\\n          method = _interface[names[0]][names[1]];\\\\n        } else {\\\\n          method = _interface[data.name];\\\\n        }\\\\n\\\\n        args = this._unwrap(data.args, true);\\\\n\\\\n        if (data.promise) {\\\\n          [resolve, reject] = this._unwrap(data.promise, false);\\\\n\\\\n          try {\\\\n            result = method.apply(_method_context, args);\\\\n\\\\n            if (result instanceof Promise || method.constructor && method.constructor.name === \\\\\\\"AsyncFunction\\\\\\\") {\\\\n              result.then(resolve).catch(reject);\\\\n            } else {\\\\n              resolve(result);\\\\n            }\\\\n          } catch (e) {\\\\n            console.error(e, method);\\\\n            reject(e);\\\\n          }\\\\n        } else {\\\\n          try {\\\\n            method.apply(_method_context, args);\\\\n          } catch (e) {\\\\n            console.error(e, method, args);\\\\n          }\\\\n        }\\\\n\\\\n        break;\\\\n\\\\n      case \\\\\\\"callback\\\\\\\":\\\\n        if (data.promise) {\\\\n          [resolve, reject] = this._unwrap(data.promise, false);\\\\n\\\\n          try {\\\\n            method = this._store.fetch(data.num);\\\\n            args = this._unwrap(data.args, true);\\\\n\\\\n            if (!method) {\\\\n              throw \\\\\\\"Callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\\\\\\\";\\\\n            }\\\\n\\\\n            result = method.apply(null, args);\\\\n\\\\n            if (result instanceof Promise || method.constructor && method.constructor.name === \\\\\\\"AsyncFunction\\\\\\\") {\\\\n              result.then(resolve).catch(reject);\\\\n            } else {\\\\n              resolve(result);\\\\n            }\\\\n          } catch (e) {\\\\n            console.error(e, method);\\\\n            reject(e);\\\\n          }\\\\n        } else {\\\\n          try {\\\\n            method = this._store.fetch(data.num);\\\\n            args = this._unwrap(data.args, true);\\\\n\\\\n            if (!method) {\\\\n              throw \\\\\\\"Please notice that callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.\\\\\\\";\\\\n            }\\\\n\\\\n            method.apply(null, args);\\\\n          } catch (e) {\\\\n            console.error(e, method, args);\\\\n          }\\\\n        }\\\\n\\\\n        break;\\\\n\\\\n      case \\\\\\\"setInterface\\\\\\\":\\\\n        this._setRemote(data.api);\\\\n\\\\n        break;\\\\n\\\\n      case \\\\\\\"getInterface\\\\\\\":\\\\n        this.sendInterface();\\\\n\\\\n        this._getInterfaceHandler();\\\\n\\\\n        break;\\\\n\\\\n      case \\\\\\\"interfaceSetAsRemote\\\\\\\":\\\\n        if (typeof this._interfaceSetAsRemoteHandler === \\\\\\\"function\\\\\\\") {\\\\n          this._interfaceSetAsRemoteHandler();\\\\n\\\\n          this._interfaceSetAsRemoteHandler === null;\\\\n        }\\\\n\\\\n        break;\\\\n\\\\n      case \\\\\\\"disconnect\\\\\\\":\\\\n        this._disconnectHandler();\\\\n\\\\n        this._connection.disconnect();\\\\n\\\\n        break;\\\\n    }\\\\n  }\\\\n  /**\\\\n   * Sends a requests to the remote site asking it to provide its\\\\n   * current interface\\\\n   */\\\\n\\\\n\\\\n  requestRemote() {\\\\n    this._connection.send({\\\\n      type: \\\\\\\"getInterface\\\\\\\"\\\\n    });\\\\n  }\\\\n\\\\n  _ndarray(typedArray, shape, dtype) {\\\\n    var _dtype = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\\\\\\\"typedArrayToDtype\\\\\\\"][typedArray.constructor.name];\\\\n\\\\n    if (dtype && dtype !== _dtype) {\\\\n      throw \\\\\\\"dtype doesn't match the type of the array: \\\\\\\" + _dtype + \\\\\\\" != \\\\\\\" + dtype;\\\\n    }\\\\n\\\\n    shape = shape || [typedArray.length];\\\\n    return {\\\\n      __jailed_type__: \\\\\\\"ndarray\\\\\\\",\\\\n      __value__: typedArray,\\\\n      __shape__: shape,\\\\n      __dtype__: _dtype\\\\n    };\\\\n  }\\\\n  /**\\\\n   * Sets the new remote interface provided by the other site\\\\n   *\\\\n   * @param {Array} names list of function names\\\\n   */\\\\n\\\\n\\\\n  _setRemote(api) {\\\\n    this._remote = {};\\\\n    var i, name, data, type;\\\\n\\\\n    for (i = 0; i < api.length; i++) {\\\\n      name = api[i].name;\\\\n      data = api[i].data;\\\\n      type = api[i].type;\\\\n\\\\n      if (type === \\\\\\\"data\\\\\\\") {\\\\n        this._remote[name] = data;\\\\n      } else if (data) {\\\\n        if (typeof data === \\\\\\\"object\\\\\\\") {\\\\n          var data2 = {};\\\\n\\\\n          for (var key in data) {\\\\n            if (data.hasOwnProperty(key)) {\\\\n              if (data[key] === \\\\\\\"rpc_method::\\\\\\\" + key) {\\\\n                data2[key] = this._genRemoteMethod(name + \\\\\\\".\\\\\\\" + key);\\\\n              } else {\\\\n                data2[key] = data[key];\\\\n              }\\\\n            }\\\\n          }\\\\n\\\\n          this._remote[name] = data2;\\\\n        } else {\\\\n          this._remote[name] = data;\\\\n        }\\\\n      } else {\\\\n        this._remote[name] = this._genRemoteMethod(name);\\\\n      }\\\\n    }\\\\n\\\\n    this._remoteUpdateHandler();\\\\n\\\\n    this._reportRemoteSet();\\\\n  }\\\\n  /**\\\\n   * Generates the wrapped function corresponding to a single remote\\\\n   * method. When the generated function is called, it will send the\\\\n   * corresponding message to the remote site asking it to execute\\\\n   * the particular method of its interface\\\\n   *\\\\n   * @param {String} name of the remote method\\\\n   *\\\\n   * @returns {Function} wrapped remote method\\\\n   */\\\\n\\\\n\\\\n  _genRemoteMethod(name, plugin_id) {\\\\n    var me = this;\\\\n\\\\n    var remoteMethod = function () {\\\\n      return new Promise((resolve, reject) => {\\\\n        let id = null;\\\\n\\\\n        try {\\\\n          id = me._method_refs.put(plugin_id ? plugin_id + \\\\\\\"/\\\\\\\" + name : name);\\\\n\\\\n          var wrapped_resolve = function () {\\\\n            if (id !== null) me._method_refs.fetch(id);\\\\n            return resolve.apply(this, arguments);\\\\n          };\\\\n\\\\n          var wrapped_reject = function () {\\\\n            if (id !== null) me._method_refs.fetch(id);\\\\n            return reject.apply(this, arguments);\\\\n          };\\\\n\\\\n          wrapped_resolve.__jailed_pairs__ = wrapped_reject;\\\\n          wrapped_reject.__jailed_pairs__ = wrapped_resolve;\\\\n          var args = Array.prototype.slice.call(arguments);\\\\n\\\\n          if (name === \\\\\\\"register\\\\\\\" || name === \\\\\\\"export\\\\\\\" || name === \\\\\\\"on\\\\\\\") {\\\\n            args = me._wrap(args, true);\\\\n          } else {\\\\n            args = me._wrap(args);\\\\n          }\\\\n\\\\n          var transferables = args.args.__transferables__;\\\\n          if (transferables) delete args.args.__transferables__;\\\\n\\\\n          me._connection.send({\\\\n            type: \\\\\\\"method\\\\\\\",\\\\n            name: name,\\\\n            pid: plugin_id,\\\\n            args: args,\\\\n            promise: me._wrap([wrapped_resolve, wrapped_reject])\\\\n          }, transferables);\\\\n        } catch (e) {\\\\n          if (id) me._method_refs.fetch(id);\\\\n          reject(`Failed to exectue remote method (plugin: ${plugin_id || me.id}, method: ${name}), error: ${e}`);\\\\n        }\\\\n      });\\\\n    };\\\\n\\\\n    remoteMethod.__remote_method = true;\\\\n    return remoteMethod;\\\\n  }\\\\n  /**\\\\n   * Sends a responce reporting that interface just provided by the\\\\n   * remote site was successfully set by this site as remote\\\\n   */\\\\n\\\\n\\\\n  _reportRemoteSet() {\\\\n    this._connection.send({\\\\n      type: \\\\\\\"interfaceSetAsRemote\\\\\\\"\\\\n    });\\\\n  }\\\\n  /**\\\\n   * Prepares the provided set of remote method arguments for\\\\n   * sending to the remote site, replaces all the callbacks with\\\\n   * identifiers\\\\n   *\\\\n   * @param {Array} args to wrap\\\\n   *\\\\n   * @returns {Array} wrapped arguments\\\\n   */\\\\n\\\\n\\\\n  _encode_interface(aObject, bObject) {\\\\n    var v, k;\\\\n    const encoded_interface = {};\\\\n    aObject[\\\\\\\"__id__\\\\\\\"] = aObject[\\\\\\\"__id__\\\\\\\"] || Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\\\\\\\"randId\\\\\\\"])();\\\\n\\\\n    for (k in aObject) {\\\\n      if (k === \\\\\\\"hasOwnProperty\\\\\\\") continue;\\\\n\\\\n      if (aObject.hasOwnProperty(k)) {\\\\n        if (k.startsWith(\\\\\\\"_\\\\\\\")) {\\\\n          continue;\\\\n        }\\\\n\\\\n        v = aObject[k];\\\\n\\\\n        if (typeof v === \\\\\\\"function\\\\\\\") {\\\\n          bObject[k] = {\\\\n            __jailed_type__: \\\\\\\"plugin_interface\\\\\\\",\\\\n            __plugin_id__: aObject[\\\\\\\"__id__\\\\\\\"],\\\\n            __value__: k,\\\\n            num: null\\\\n          };\\\\n          encoded_interface[k] = v;\\\\n        } else if (Object(v) !== v) {\\\\n          bObject[k] = {\\\\n            __jailed_type__: \\\\\\\"argument\\\\\\\",\\\\n            __value__: v\\\\n          };\\\\n          encoded_interface[k] = v;\\\\n        } else if (typeof v === \\\\\\\"object\\\\\\\") {\\\\n          bObject[k] = Array.isArray(v) ? [] : {};\\\\n\\\\n          this._encode_interface(v, bObject[k]);\\\\n        }\\\\n      }\\\\n    }\\\\n\\\\n    this._plugin_interfaces[aObject[\\\\\\\"__id__\\\\\\\"]] = encoded_interface;\\\\n\\\\n    if (aObject.on) {\\\\n      aObject.on(\\\\\\\"close\\\\\\\", () => {\\\\n        delete this._plugin_interfaces[aObject[\\\\\\\"__id__\\\\\\\"]];\\\\n      });\\\\n    }\\\\n  }\\\\n\\\\n  _encode(aObject, as_interface) {\\\\n    var transferables = [];\\\\n\\\\n    if (!aObject) {\\\\n      return aObject;\\\\n    }\\\\n\\\\n    var _transfer = aObject._transfer;\\\\n    var bObject, v, k;\\\\n    var isarray = Array.isArray(aObject);\\\\n    bObject = isarray ? [] : {}; //skip if already encoded\\\\n\\\\n    if (typeof aObject === \\\\\\\"object\\\\\\\" && aObject.__jailed_type__ && aObject.__value__) {\\\\n      return aObject;\\\\n    } //encode interfaces\\\\n\\\\n\\\\n    if (typeof aObject === \\\\\\\"object\\\\\\\" && !Array.isArray(aObject) && (aObject.__as_interface__ || as_interface)) {\\\\n      this._encode_interface(aObject, bObject);\\\\n\\\\n      return bObject;\\\\n    }\\\\n\\\\n    if (as_interface) {\\\\n      aObject[\\\\\\\"__id__\\\\\\\"] = aObject[\\\\\\\"__id__\\\\\\\"] || Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\\\\\\\"randId\\\\\\\"])();\\\\n      this._plugin_interfaces[aObject[\\\\\\\"__id__\\\\\\\"]] = this._plugin_interfaces[aObject[\\\\\\\"__id__\\\\\\\"]] || {};\\\\n    }\\\\n\\\\n    for (k in aObject) {\\\\n      if (k === \\\\\\\"hasOwnProperty\\\\\\\") continue;\\\\n\\\\n      if (isarray || aObject.hasOwnProperty(k)) {\\\\n        v = aObject[k];\\\\n\\\\n        if (typeof this._interface._rpcEncode === \\\\\\\"function\\\\\\\") {\\\\n          const encoded_obj = this._interface._rpcEncode(v);\\\\n\\\\n          if (encoded_obj && encoded_obj.__rpc_dtype__) {\\\\n            bObject[k] = {\\\\n              __jailed_type__: \\\\\\\"custom_encoding\\\\\\\",\\\\n              __value__: encoded_obj\\\\n            };\\\\n            continue;\\\\n          } // if the returned object does not contain __jailed_type__, assuming the object has been transformed\\\\n          else {\\\\n              v = encoded_obj;\\\\n            }\\\\n        }\\\\n\\\\n        if (typeof v === \\\\\\\"function\\\\\\\") {\\\\n          if (as_interface) {\\\\n            const encoded_interface = this._plugin_interfaces[aObject[\\\\\\\"__id__\\\\\\\"]];\\\\n            bObject[k] = {\\\\n              __jailed_type__: \\\\\\\"plugin_interface\\\\\\\",\\\\n              __plugin_id__: aObject[\\\\\\\"__id__\\\\\\\"],\\\\n              __value__: k,\\\\n              num: null\\\\n            };\\\\n            encoded_interface[k] = v;\\\\n            continue;\\\\n          }\\\\n\\\\n          let interfaceFuncName = null;\\\\n\\\\n          for (var name in this._interface) {\\\\n            if (this._interface.hasOwnProperty(name)) {\\\\n              if (name.startsWith(\\\\\\\"_\\\\\\\")) continue;\\\\n\\\\n              if (this._interface[name] === v) {\\\\n                interfaceFuncName = name;\\\\n                break;\\\\n              }\\\\n            }\\\\n          } // search for prototypes\\\\n\\\\n\\\\n          var functions = Object.getOwnPropertyNames(Object.getPrototypeOf(this._interface));\\\\n\\\\n          for (var i = 0; i < functions.length; i++) {\\\\n            var name_ = functions[i];\\\\n            if (name_.startsWith(\\\\\\\"_\\\\\\\")) continue;\\\\n\\\\n            if (this._interface[name_] === v) {\\\\n              interfaceFuncName = name_;\\\\n              break;\\\\n            }\\\\n          }\\\\n\\\\n          if (!interfaceFuncName) {\\\\n            var id = this._store.put(v);\\\\n\\\\n            bObject[k] = {\\\\n              __jailed_type__: \\\\\\\"callback\\\\\\\",\\\\n              __value__: v.constructor && v.constructor.name || id,\\\\n              num: id\\\\n            };\\\\n          } else {\\\\n            bObject[k] = {\\\\n              __jailed_type__: \\\\\\\"interface\\\\\\\",\\\\n              __value__: interfaceFuncName,\\\\n              num: null\\\\n            };\\\\n          }\\\\n        } else if (\\\\n        /*global tf*/\\\\n        typeof tf !== \\\\\\\"undefined\\\\\\\" && tf.Tensor && v instanceof tf.Tensor) {\\\\n          const v_buffer = v.dataSync();\\\\n\\\\n          if (v._transfer || _transfer) {\\\\n            transferables.push(v_buffer.buffer);\\\\n            delete v._transfer;\\\\n          }\\\\n\\\\n          bObject[k] = {\\\\n            __jailed_type__: \\\\\\\"ndarray\\\\\\\",\\\\n            __value__: v_buffer,\\\\n            __shape__: v.shape,\\\\n            __dtype__: v.dtype\\\\n          };\\\\n        } else if (\\\\n        /*global nj*/\\\\n        typeof nj !== \\\\\\\"undefined\\\\\\\" && nj.NdArray && v instanceof nj.NdArray) {\\\\n          var dtype = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\\\\\\\"typedArrayToDtype\\\\\\\"][v.selection.data.constructor.name];\\\\n\\\\n          if (v._transfer || _transfer) {\\\\n            transferables.push(v.selection.data.buffer);\\\\n            delete v._transfer;\\\\n          }\\\\n\\\\n          bObject[k] = {\\\\n            __jailed_type__: \\\\\\\"ndarray\\\\\\\",\\\\n            __value__: v.selection.data,\\\\n            __shape__: v.shape,\\\\n            __dtype__: dtype\\\\n          };\\\\n        } else if (v instanceof Error) {\\\\n          console.error(v);\\\\n          bObject[k] = {\\\\n            __jailed_type__: \\\\\\\"error\\\\\\\",\\\\n            __value__: v.toString()\\\\n          };\\\\n        } else if (typeof File !== \\\\\\\"undefined\\\\\\\" && v instanceof File) {\\\\n          bObject[k] = {\\\\n            __jailed_type__: \\\\\\\"file\\\\\\\",\\\\n            __value__: v,\\\\n            __relative_path__: v.relativePath || v.webkitRelativePath\\\\n          };\\\\n        } // send objects supported by structure clone algorithm\\\\n        // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\\\\n        else if (v !== Object(v) || v instanceof Boolean || v instanceof String || v instanceof Date || v instanceof RegExp || v instanceof Blob || v instanceof ImageData || typeof FileList !== \\\\\\\"undefined\\\\\\\" && v instanceof FileList) {\\\\n            bObject[k] = {\\\\n              __jailed_type__: \\\\\\\"argument\\\\\\\",\\\\n              __value__: v\\\\n            };\\\\n          } else if (v instanceof ArrayBuffer) {\\\\n            if (v._transfer || _transfer) {\\\\n              transferables.push(v);\\\\n              delete v._transfer;\\\\n            }\\\\n\\\\n            bObject[k] = {\\\\n              __jailed_type__: \\\\\\\"argument\\\\\\\",\\\\n              __value__: v\\\\n            };\\\\n          } else if (v instanceof ArrayBufferView) {\\\\n            if (v._transfer || _transfer) {\\\\n              transferables.push(v.buffer);\\\\n              delete v._transfer;\\\\n            }\\\\n\\\\n            bObject[k] = {\\\\n              __jailed_type__: \\\\\\\"argument\\\\\\\",\\\\n              __value__: v\\\\n            };\\\\n          } // TODO: support also Map and Set\\\\n          // TODO: avoid object such as DynamicPlugin instance.\\\\n          else if (v.__as_interface__) {\\\\n              bObject[k] = this._encode(v, true);\\\\n            } else if (typeof v === \\\\\\\"object\\\\\\\" || Array.isArray(v)) {\\\\n              bObject[k] = this._encode(v, as_interface); // move transferables to the top level object\\\\n\\\\n              if (bObject[k].__transferables__) {\\\\n                for (var t = 0; t < bObject[k].__transferables__.length; t++) {\\\\n                  transferables.push(bObject[k].__transferables__[t]);\\\\n                }\\\\n\\\\n                delete bObject[k].__transferables__;\\\\n              }\\\\n            } else if (typeof v === \\\\\\\"object\\\\\\\" && v.constructor) {\\\\n              throw \\\\\\\"Unsupported data type for transferring between the plugin and the main app: \\\\\\\" + k + \\\\\\\" : \\\\\\\" + v.constructor.name;\\\\n            } else {\\\\n              throw \\\\\\\"Unsupported data type for transferring between the plugin and the main app: \\\\\\\" + k + \\\\\\\",\\\\\\\" + v;\\\\n            }\\\\n      }\\\\n    }\\\\n\\\\n    if (transferables.length > 0) {\\\\n      bObject.__transferables__ = transferables;\\\\n    }\\\\n\\\\n    return bObject;\\\\n  }\\\\n\\\\n  _decode(aObject, callbackId, withPromise) {\\\\n    if (!aObject) {\\\\n      return aObject;\\\\n    }\\\\n\\\\n    var bObject, v, k;\\\\n\\\\n    if (aObject.hasOwnProperty(\\\\\\\"__jailed_type__\\\\\\\") && aObject.hasOwnProperty(\\\\\\\"__value__\\\\\\\")) {\\\\n      if (aObject.__jailed_type__.startsWith(\\\\\\\"custom_encoding\\\\\\\")) {\\\\n        if (typeof this._interface._rpcDecode === \\\\\\\"function\\\\\\\") {\\\\n          const decodedObj = this._interface._rpcDecode(aObject.__value__);\\\\n\\\\n          bObject = decodedObj;\\\\n        } else {\\\\n          bObject = aObject;\\\\n        }\\\\n      } else if (aObject.__jailed_type__ === \\\\\\\"callback\\\\\\\") {\\\\n        bObject = this._genRemoteCallback(callbackId, aObject.num, withPromise);\\\\n      } else if (aObject.__jailed_type__ === \\\\\\\"interface\\\\\\\") {\\\\n        bObject = this._remote[aObject.__value__] || this._genRemoteMethod(aObject.__value__);\\\\n      } else if (aObject.__jailed_type__ === \\\\\\\"plugin_interface\\\\\\\") {\\\\n        bObject = this._genRemoteMethod(aObject.__value__, aObject.__plugin_id__);\\\\n      } else if (aObject.__jailed_type__ === \\\\\\\"ndarray\\\\\\\") {\\\\n        /*global nj tf*/\\\\n        //create build array/tensor if used in the plugin\\\\n        if (this.id === \\\\\\\"__plugin__\\\\\\\" && typeof nj !== \\\\\\\"undefined\\\\\\\" && nj.array) {\\\\n          if (Array.isArray(aObject.__value__)) {\\\\n            aObject.__value__ = aObject.__value__.reduce(_appendBuffer);\\\\n          }\\\\n\\\\n          bObject = nj.array(aObject.__value__, aObject.__dtype__).reshape(aObject.__shape__);\\\\n        } else if (this.id === \\\\\\\"__plugin__\\\\\\\" && typeof tf !== \\\\\\\"undefined\\\\\\\" && tf.Tensor) {\\\\n          if (Array.isArray(aObject.__value__)) {\\\\n            aObject.__value__ = aObject.__value__.reduce(_appendBuffer);\\\\n          }\\\\n\\\\n          bObject = tf.tensor(aObject.__value__, aObject.__shape__, aObject.__dtype__);\\\\n        } else {\\\\n          //keep it as regular if transfered to the main app\\\\n          bObject = aObject;\\\\n        }\\\\n      } else if (aObject.__jailed_type__ === \\\\\\\"error\\\\\\\") {\\\\n        bObject = new Error(aObject.__value__);\\\\n      } else if (aObject.__jailed_type__ === \\\\\\\"file\\\\\\\") {\\\\n        bObject = aObject.__value__; //patch relativePath\\\\n\\\\n        bObject.relativePath = aObject.__relative_path__;\\\\n      } else if (aObject.__jailed_type__ === \\\\\\\"argument\\\\\\\") {\\\\n        bObject = aObject.__value__;\\\\n      }\\\\n\\\\n      return bObject;\\\\n    } else {\\\\n      var isarray = Array.isArray(aObject);\\\\n      bObject = isarray ? [] : {};\\\\n\\\\n      for (k in aObject) {\\\\n        if (isarray || aObject.hasOwnProperty(k)) {\\\\n          v = aObject[k];\\\\n\\\\n          if (typeof v === \\\\\\\"object\\\\\\\" || Array.isArray(v)) {\\\\n            bObject[k] = this._decode(v, callbackId, withPromise);\\\\n          }\\\\n        }\\\\n      }\\\\n\\\\n      return bObject;\\\\n    }\\\\n  }\\\\n\\\\n  _wrap(args, as_interface) {\\\\n    var wrapped = this._encode(args, as_interface);\\\\n\\\\n    var result = {\\\\n      args: wrapped\\\\n    };\\\\n    return result;\\\\n  }\\\\n  /**\\\\n   * Unwraps the set of arguments delivered from the remote site,\\\\n   * replaces all callback identifiers with a function which will\\\\n   * initiate sending that callback identifier back to other site\\\\n   *\\\\n   * @param {Object} args to unwrap\\\\n   *\\\\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\\\\n   *\\\\n   * @returns {Array} unwrapped args\\\\n   */\\\\n\\\\n\\\\n  _unwrap(args, withPromise) {\\\\n    // var called = false;\\\\n    // wraps each callback so that the only one could be called\\\\n    // var once(cb) {\\\\n    //     return function() {\\\\n    //         if (!called) {\\\\n    //             called = true;\\\\n    //             return cb.apply(this, arguments);\\\\n    //         } else {\\\\n    //             var msg =\\\\n    //               'A callback from this set has already been executed';\\\\n    //             throw new Error(msg);\\\\n    //         }\\\\n    //     };\\\\n    // }\\\\n    var result = this._decode(args.args, args.callbackId, withPromise);\\\\n\\\\n    return result;\\\\n  }\\\\n  /**\\\\n   * Generates the wrapped function corresponding to a single remote\\\\n   * callback. When the generated function is called, it will send\\\\n   * the corresponding message to the remote site asking it to\\\\n   * execute the particular callback previously saved during a call\\\\n   * by the remote site a method from the interface of this site\\\\n   *\\\\n   * @param {Number} id of the remote callback to execute\\\\n   * @param {Number} argNum argument index of the callback\\\\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\\\\n   *\\\\n   * @returns {Function} wrapped remote callback\\\\n   */\\\\n\\\\n\\\\n  _genRemoteCallback(id, argNum, withPromise) {\\\\n    var me = this;\\\\n    var remoteCallback;\\\\n\\\\n    if (withPromise) {\\\\n      remoteCallback = function () {\\\\n        return new Promise((resolve, reject) => {\\\\n          var args = me._wrap(Array.prototype.slice.call(arguments));\\\\n\\\\n          var transferables = args.args.__transferables__;\\\\n          if (transferables) delete args.args.__transferables__;\\\\n          resolve.__jailed_pairs__ = reject;\\\\n          reject.__jailed_pairs__ = resolve;\\\\n\\\\n          try {\\\\n            me._connection.send({\\\\n              type: \\\\\\\"callback\\\\\\\",\\\\n              id: id,\\\\n              num: argNum,\\\\n              args: args,\\\\n              // pid :  me.id,\\\\n              promise: me._wrap([resolve, reject])\\\\n            }, transferables);\\\\n          } catch (e) {\\\\n            reject(`Failed to exectue remote callback (id: ${id}, argNum: ${argNum}).`);\\\\n          }\\\\n        });\\\\n      };\\\\n\\\\n      return remoteCallback;\\\\n    } else {\\\\n      remoteCallback = function () {\\\\n        var args = me._wrap(Array.prototype.slice.call(arguments));\\\\n\\\\n        var transferables = args.args.__transferables__;\\\\n        if (transferables) delete args.args.__transferables__;\\\\n        return me._connection.send({\\\\n          type: \\\\\\\"callback\\\\\\\",\\\\n          id: id,\\\\n          num: argNum,\\\\n          args: args // pid :  me.id\\\\n\\\\n        }, transferables);\\\\n      };\\\\n\\\\n      return remoteCallback;\\\\n    }\\\\n  }\\\\n  /**\\\\n   * Sends the notification message and breaks the connection\\\\n   */\\\\n\\\\n\\\\n  disconnect() {\\\\n    this._connection.send({\\\\n      type: \\\\\\\"disconnect\\\\\\\"\\\\n    });\\\\n\\\\n    setTimeout(this._connection.disconnect, 2000);\\\\n  }\\\\n  /**\\\\n   * Set a handler to be called when received a disconnect message\\\\n   * from the remote site\\\\n   *\\\\n   * @param {Function} handler\\\\n   */\\\\n\\\\n\\\\n  onDisconnect(handler) {\\\\n    this._disconnectHandler = handler;\\\\n  }\\\\n\\\\n}\\\\n/**\\\\n * ReferenceStore is a special object which stores other objects\\\\n * and provides the references (number) instead. This reference\\\\n * may then be sent over a json-based communication channel (IPC\\\\n * to another Node.js process or a message to the Worker). Other\\\\n * site may then provide the reference in the responce message\\\\n * implying the given object should be activated.\\\\n *\\\\n * Primary usage for the ReferenceStore is a storage for the\\\\n * callbacks, which therefore makes it possible to initiate a\\\\n * callback execution by the opposite site (which normally cannot\\\\n * directly execute functions over the communication channel).\\\\n *\\\\n * Each stored object can only be fetched once and is not\\\\n * available for the second time. Each stored object must be\\\\n * fetched, since otherwise it will remain stored forever and\\\\n * consume memory.\\\\n *\\\\n * Stored object indeces are simply the numbers, which are however\\\\n * released along with the objects, and are later reused again (in\\\\n * order to postpone the overflow, which should not likely happen,\\\\n * but anyway).\\\\n */\\\\n\\\\nclass ReferenceStore {\\\\n  constructor() {\\\\n    this._store = {}; // stored object\\\\n\\\\n    this._indices = [0]; // smallest available indices\\\\n\\\\n    this._readyHandler = function () {};\\\\n\\\\n    this._busyHandler = function () {};\\\\n\\\\n    this._readyHandler();\\\\n  }\\\\n  /**\\\\n   * call handler when the store is empty\\\\n   *\\\\n   * @param {FUNCTION} id of a handler\\\\n   */\\\\n\\\\n\\\\n  onReady(readyHandler) {\\\\n    this._readyHandler = readyHandler || function () {};\\\\n  }\\\\n  /**\\\\n   * call handler when the store is not empty\\\\n   *\\\\n   * @param {FUNCTION} id of a handler\\\\n   */\\\\n\\\\n\\\\n  onBusy(busyHandler) {\\\\n    this._busyHandler = busyHandler || function () {};\\\\n  }\\\\n  /**\\\\n   * get the length of the store\\\\n   *\\\\n   */\\\\n\\\\n\\\\n  getStack() {\\\\n    return Object.keys(this._store).length;\\\\n  }\\\\n  /**\\\\n   * @function _genId() generates the new reference id\\\\n   *\\\\n   * @returns {Number} smallest available id and reserves it\\\\n   */\\\\n\\\\n\\\\n  _genId() {\\\\n    var id;\\\\n\\\\n    if (this._indices.length === 1) {\\\\n      id = this._indices[0]++;\\\\n    } else {\\\\n      id = this._indices.shift();\\\\n    }\\\\n\\\\n    return id;\\\\n  }\\\\n  /**\\\\n   * Releases the given reference id so that it will be available by\\\\n   * another object stored\\\\n   *\\\\n   * @param {Number} id to release\\\\n   */\\\\n\\\\n\\\\n  _releaseId(id) {\\\\n    for (var i = 0; i < this._indices.length; i++) {\\\\n      if (id < this._indices[i]) {\\\\n        this._indices.splice(i, 0, id);\\\\n\\\\n        break;\\\\n      }\\\\n    } // cleaning-up the sequence tail\\\\n\\\\n\\\\n    for (i = this._indices.length - 1; i >= 0; i--) {\\\\n      if (this._indices[i] - 1 === this._indices[i - 1]) {\\\\n        this._indices.pop();\\\\n      } else {\\\\n        break;\\\\n      }\\\\n    }\\\\n  }\\\\n  /**\\\\n   * Stores the given object and returns the refernce id instead\\\\n   *\\\\n   * @param {Object} obj to store\\\\n   *\\\\n   * @returns {Number} reference id of the stored object\\\\n   */\\\\n\\\\n\\\\n  put(obj) {\\\\n    if (this._busyHandler && Object.keys(this._store).length === 0) {\\\\n      this._busyHandler();\\\\n    }\\\\n\\\\n    var id = this._genId();\\\\n\\\\n    this._store[id] = obj;\\\\n    return id;\\\\n  }\\\\n  /**\\\\n   * Retrieves previously stored object and releases its reference\\\\n   *\\\\n   * @param {Number} id of an object to retrieve\\\\n   */\\\\n\\\\n\\\\n  fetch(id) {\\\\n    var obj = this._store[id];\\\\n\\\\n    if (obj && !obj.__remote_method) {\\\\n      delete this._store[id];\\\\n\\\\n      this._releaseId(id);\\\\n\\\\n      if (this._readyHandler && Object.keys(this._store).length === 0) {\\\\n        this._readyHandler();\\\\n      }\\\\n    }\\\\n\\\\n    if (obj && obj.__jailed_pairs__) {\\\\n      const _id = getKeyByValue(this._store, obj.__jailed_pairs__);\\\\n\\\\n      this.fetch(_id);\\\\n    }\\\\n\\\\n    return obj;\\\\n  }\\\\n  /**\\\\n   * Retrieves previously stored object\\\\n   *\\\\n   * @param {Number} id of an object to retrieve\\\\n   */\\\\n  // retrieve(id) {\\\\n  //     var obj = this._store[id];\\\\n  //     return obj;\\\\n  // }\\\\n\\\\n\\\\n}//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./src/rpc.js\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/utils.js\\\":\\n/*!**********************!*\\\\\\n  !*** ./src/utils.js ***!\\n  \\\\**********************/\\n/*! exports provided: randId, dtypeToTypedArray, typedArrayToDtype, CONFIG_SCHEMA, compareVersions, cacheRequirements, setupServiceWorker, Whenable */\\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\\n\\n\\\"use strict\\\";\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"randId\\\\\\\", function() { return randId; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"dtypeToTypedArray\\\\\\\", function() { return dtypeToTypedArray; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"typedArrayToDtype\\\\\\\", function() { return typedArrayToDtype; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"CONFIG_SCHEMA\\\\\\\", function() { return CONFIG_SCHEMA; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"compareVersions\\\\\\\", function() { return compareVersions; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"cacheRequirements\\\\\\\", function() { return cacheRequirements; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"setupServiceWorker\\\\\\\", function() { return setupServiceWorker; });\\\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\\\\\"Whenable\\\\\\\", function() { return Whenable; });\\\\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ajv */ \\\\\\\"./node_modules/ajv/lib/ajv.js\\\\\\\");\\\\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_0__);\\\\n\\\\nconst ajv = new ajv__WEBPACK_IMPORTED_MODULE_0___default.a();\\\\nfunction randId() {\\\\n  return Math.random().toString(36).substr(2, 10);\\\\n}\\\\nconst dtypeToTypedArray = {\\\\n  int8: \\\\\\\"Int8Array\\\\\\\",\\\\n  int16: \\\\\\\"Int16Array\\\\\\\",\\\\n  int32: \\\\\\\"Int32Array\\\\\\\",\\\\n  uint8: \\\\\\\"Uint8Array\\\\\\\",\\\\n  uint16: \\\\\\\"Uint16Array\\\\\\\",\\\\n  uint32: \\\\\\\"Uint32Array\\\\\\\",\\\\n  float32: \\\\\\\"Float32Array\\\\\\\",\\\\n  float64: \\\\\\\"Float64Array\\\\\\\",\\\\n  array: \\\\\\\"Array\\\\\\\"\\\\n};\\\\nconst typedArrayToDtype = {\\\\n  Int8Array: \\\\\\\"int8\\\\\\\",\\\\n  Int16Array: \\\\\\\"int16\\\\\\\",\\\\n  Int32Array: \\\\\\\"int32\\\\\\\",\\\\n  Uint8Array: \\\\\\\"uint8\\\\\\\",\\\\n  Uint16Array: \\\\\\\"uint16\\\\\\\",\\\\n  Uint32Array: \\\\\\\"uint32\\\\\\\",\\\\n  Float32Array: \\\\\\\"float32\\\\\\\",\\\\n  Float64Array: \\\\\\\"float64\\\\\\\",\\\\n  Array: \\\\\\\"array\\\\\\\"\\\\n};\\\\nconst CONFIG_SCHEMA = ajv.compile({\\\\n  properties: {\\\\n    allow_execution: {\\\\n      type: \\\\\\\"boolean\\\\\\\"\\\\n    },\\\\n    api_version: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    },\\\\n    cover: {\\\\n      type: [\\\\\\\"string\\\\\\\", \\\\\\\"array\\\\\\\"]\\\\n    },\\\\n    dedicated_thread: {\\\\n      type: \\\\\\\"boolean\\\\\\\"\\\\n    },\\\\n    description: {\\\\n      type: \\\\\\\"string\\\\\\\",\\\\n      maxLength: 256\\\\n    },\\\\n    flags: {\\\\n      type: \\\\\\\"array\\\\\\\"\\\\n    },\\\\n    icon: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    },\\\\n    id: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    },\\\\n    inputs: {\\\\n      type: [\\\\\\\"object\\\\\\\", \\\\\\\"array\\\\\\\"]\\\\n    },\\\\n    labels: {\\\\n      type: \\\\\\\"array\\\\\\\"\\\\n    },\\\\n    lang: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    },\\\\n    name: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    },\\\\n    outputs: {\\\\n      type: [\\\\\\\"object\\\\\\\", \\\\\\\"array\\\\\\\"]\\\\n    },\\\\n    tags: {\\\\n      type: \\\\\\\"array\\\\\\\"\\\\n    },\\\\n    token: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    },\\\\n    ui: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    },\\\\n    version: {\\\\n      type: \\\\\\\"string\\\\\\\"\\\\n    }\\\\n  },\\\\n  required: [\\\\\\\"api_version\\\\\\\", \\\\\\\"allow_execution\\\\\\\", \\\\\\\"token\\\\\\\", \\\\\\\"id\\\\\\\"]\\\\n});\\\\nfunction compareVersions(v1, comparator, v2) {\\\\n  comparator = comparator == \\\\\\\"=\\\\\\\" ? \\\\\\\"==\\\\\\\" : comparator;\\\\n\\\\n  if ([\\\\\\\"==\\\\\\\", \\\\\\\"===\\\\\\\", \\\\\\\"<\\\\\\\", \\\\\\\"<=\\\\\\\", \\\\\\\">\\\\\\\", \\\\\\\">=\\\\\\\", \\\\\\\"!=\\\\\\\", \\\\\\\"!==\\\\\\\"].indexOf(comparator) == -1) {\\\\n    throw new Error(\\\\\\\"Invalid comparator. \\\\\\\" + comparator);\\\\n  }\\\\n\\\\n  var v1parts = v1.split(\\\\\\\".\\\\\\\"),\\\\n      v2parts = v2.split(\\\\\\\".\\\\\\\");\\\\n  var maxLen = Math.max(v1parts.length, v2parts.length);\\\\n  var part1, part2;\\\\n  var cmp = 0;\\\\n\\\\n  for (var i = 0; i < maxLen && !cmp; i++) {\\\\n    part1 = parseInt(v1parts[i], 10) || 0;\\\\n    part2 = parseInt(v2parts[i], 10) || 0;\\\\n    if (part1 < part2) cmp = 1;\\\\n    if (part1 > part2) cmp = -1;\\\\n  }\\\\n\\\\n  return eval(\\\\\\\"0\\\\\\\" + comparator + cmp);\\\\n}\\\\n\\\\nfunction cacheUrlInServiceWorker(url) {\\\\n  return new Promise(function (resolve, reject) {\\\\n    const message = {\\\\n      command: \\\\\\\"add\\\\\\\",\\\\n      url: url\\\\n    };\\\\n\\\\n    if (!navigator.serviceWorker || !navigator.serviceWorker.register) {\\\\n      reject(\\\\\\\"Service worker is not supported.\\\\\\\");\\\\n      return;\\\\n    }\\\\n\\\\n    const messageChannel = new MessageChannel();\\\\n\\\\n    messageChannel.port1.onmessage = function (event) {\\\\n      if (event.data && event.data.error) {\\\\n        reject(event.data.error);\\\\n      } else {\\\\n        resolve(event.data && event.data.result);\\\\n      }\\\\n    };\\\\n\\\\n    if (navigator.serviceWorker && navigator.serviceWorker.controller) {\\\\n      navigator.serviceWorker.controller.postMessage(message, [messageChannel.port2]);\\\\n    } else {\\\\n      reject(\\\\\\\"Service worker controller is not available\\\\\\\");\\\\n    }\\\\n  });\\\\n}\\\\n\\\\nasync function cacheRequirements(requirements) {\\\\n  if (requirements && requirements.length > 0) {\\\\n    for (let req of requirements) {\\\\n      //remove prefix\\\\n      if (req.startsWith(\\\\\\\"js:\\\\\\\")) req = req.slice(3);\\\\n      if (req.startsWith(\\\\\\\"css:\\\\\\\")) req = req.slice(4);\\\\n      if (req.startsWith(\\\\\\\"cache:\\\\\\\")) req = req.slice(6);\\\\n      if (!req.startsWith(\\\\\\\"http\\\\\\\")) continue;\\\\n      await cacheUrlInServiceWorker(req).catch(e => {\\\\n        console.error(e);\\\\n      });\\\\n    }\\\\n  }\\\\n}\\\\nfunction setupServiceWorker(targetOrigin, cacheCallback) {\\\\n  // register service worker for offline access\\\\n  if (\\\\\\\"serviceWorker\\\\\\\" in navigator) {\\\\n    window.addEventListener(\\\\\\\"load\\\\\\\", function () {\\\\n      navigator.serviceWorker.register(\\\\\\\"/plugin-service-worker.js\\\\\\\").then(function (registration) {\\\\n        // Registration was successful\\\\n        console.log(\\\\\\\"ServiceWorker registration successful with scope: \\\\\\\", registration.scope);\\\\n      }, function (err) {\\\\n        // registration failed :(\\\\n        console.log(\\\\\\\"ServiceWorker registration failed: \\\\\\\", err);\\\\n      });\\\\n      targetOrigin = targetOrigin || \\\\\\\"*\\\\\\\";\\\\n      cacheCallback = cacheCallback || cacheRequirements;\\\\n\\\\n      if (cacheCallback && typeof cacheCallback !== \\\\\\\"function\\\\\\\") {\\\\n        throw new Error(\\\\\\\"config.cache_requirements must be a function\\\\\\\");\\\\n      }\\\\n\\\\n      window.addEventListener(\\\\\\\"message\\\\\\\", function (e) {\\\\n        if (targetOrigin === \\\\\\\"*\\\\\\\" || e.origin === targetOrigin) {\\\\n          const m = e.data;\\\\n\\\\n          if (m.type === \\\\\\\"cacheRequirements\\\\\\\") {\\\\n            cacheCallback(m.requirements);\\\\n          }\\\\n        }\\\\n      });\\\\n    });\\\\n  }\\\\n}\\\\n/**\\\\n * A special kind of event:\\\\n *  - which can only be emitted once;\\\\n *  - executes a set of subscribed handlers upon emission;\\\\n *  - if a handler is subscribed after the event was emitted, it\\\\n *    will be invoked immideately.\\\\n *\\\\n * Used for the events which only happen once (or do not happen at\\\\n * all) during a single plugin lifecycle - connect, disconnect and\\\\n * connection failure\\\\n */\\\\n\\\\nconst Whenable = function (multi_emit) {\\\\n  this._multi_emit = multi_emit;\\\\n  this._emitted = false;\\\\n  this._handlers = [];\\\\n};\\\\n/**\\\\n * Emits the Whenable event, calls all the handlers already\\\\n * subscribed, switches the object to the 'emitted' state (when\\\\n * all future subscibed listeners will be immideately issued\\\\n * instead of being stored)\\\\n */\\\\n\\\\nWhenable.prototype.emit = function (e) {\\\\n  if (this._multi_emit) {\\\\n    this._emitted = true;\\\\n    this._e = e;\\\\n\\\\n    for (let handler of this._handlers) {\\\\n      setTimeout(handler.bind(null, e), 0);\\\\n    }\\\\n  } else if (!this._emitted) {\\\\n    this._emitted = true;\\\\n    this._e = e;\\\\n    var handler;\\\\n\\\\n    while (handler = this._handlers.pop()) {\\\\n      setTimeout(handler.bind(null, e), 0);\\\\n    }\\\\n  }\\\\n};\\\\n/**\\\\n * Saves the provided function as a handler for the Whenable\\\\n * event. This handler will then be called upon the event emission\\\\n * (if it has not been emitted yet), or will be scheduled for\\\\n * immediate issue (if the event has already been emmitted before)\\\\n *\\\\n * @param {Function} handler to subscribe for the event\\\\n */\\\\n\\\\n\\\\nWhenable.prototype.whenEmitted = function (handler) {\\\\n  handler = this._checkHandler(handler);\\\\n\\\\n  if (this._emitted) {\\\\n    setTimeout(handler.bind(null, this._e), 0);\\\\n  } else {\\\\n    this._handlers.push(handler);\\\\n  }\\\\n};\\\\n/**\\\\n * Checks if the provided object is suitable for being subscribed\\\\n * to the event (= is a function), throws an exception if not\\\\n *\\\\n * @param {Object} obj to check for being subscribable\\\\n *\\\\n * @throws {Exception} if object is not suitable for subscription\\\\n *\\\\n * @returns {Object} the provided object if yes\\\\n */\\\\n\\\\n\\\\nWhenable.prototype._checkHandler = function (handler) {\\\\n  var type = typeof handler;\\\\n\\\\n  if (type !== \\\\\\\"function\\\\\\\") {\\\\n    var msg = \\\\\\\"A function may only be subsribed to the event, \\\\\\\" + type + \\\\\\\" was provided instead\\\\\\\";\\\\n    throw new Error(msg);\\\\n  }\\\\n\\\\n  return handler;\\\\n};//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\\\n//# sourceURL=webpack-internal:///./src/utils.js\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ });\", null);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGx1Z2luLndlYndvcmtlci5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDLy4vc3JjL3BsdWdpbi53ZWJ3b3JrZXIuanM/ZTdlMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gcmVxdWlyZShcIiEhL1VzZXJzL3dlaS5vdXlhbmcvd29ya3NwYWNlL2ltam95LXJwYy9qYXZhc2NyaXB0L25vZGVfbW9kdWxlcy93b3JrZXItbG9hZGVyL2Rpc3Qvd29ya2Vycy9JbmxpbmVXb3JrZXIuanNcIikoXCIvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXFxuLyoqKioqKi8gXFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxcbi8qKioqKiovIFxcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XFxuLyoqKioqKi9cXG4vKioqKioqLyBcXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxcbi8qKioqKiovIFxcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcXG4vKioqKioqL1xcbi8qKioqKiovIFxcdFxcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxcbi8qKioqKiovIFxcdFxcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XFxuLyoqKioqKi8gXFx0XFx0XFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XFxuLyoqKioqKi8gXFx0XFx0fVxcbi8qKioqKiovIFxcdFxcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXFxuLyoqKioqKi8gXFx0XFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xcbi8qKioqKiovIFxcdFxcdFxcdGk6IG1vZHVsZUlkLFxcbi8qKioqKiovIFxcdFxcdFxcdGw6IGZhbHNlLFxcbi8qKioqKiovIFxcdFxcdFxcdGV4cG9ydHM6IHt9XFxuLyoqKioqKi8gXFx0XFx0fTtcXG4vKioqKioqL1xcbi8qKioqKiovIFxcdFxcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxcbi8qKioqKiovIFxcdFxcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xcbi8qKioqKiovXFxuLyoqKioqKi8gXFx0XFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxcbi8qKioqKiovIFxcdFxcdG1vZHVsZS5sID0gdHJ1ZTtcXG4vKioqKioqL1xcbi8qKioqKiovIFxcdFxcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXFxuLyoqKioqKi8gXFx0XFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xcbi8qKioqKiovIFxcdH1cXG4vKioqKioqL1xcbi8qKioqKiovXFxuLyoqKioqKi8gXFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcXG4vKioqKioqLyBcXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xcbi8qKioqKiovXFxuLyoqKioqKi8gXFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcXG4vKioqKioqLyBcXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xcbi8qKioqKiovXFxuLyoqKioqKi8gXFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXFxuLyoqKioqKi8gXFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XFxuLyoqKioqKi8gXFx0XFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xcbi8qKioqKiovIFxcdFxcdFxcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xcbi8qKioqKiovIFxcdFxcdH1cXG4vKioqKioqLyBcXHR9O1xcbi8qKioqKiovXFxuLyoqKioqKi8gXFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xcbi8qKioqKiovIFxcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcXG4vKioqKioqLyBcXHRcXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcXG4vKioqKioqLyBcXHRcXHRcXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcXG4vKioqKioqLyBcXHRcXHR9XFxuLyoqKioqKi8gXFx0XFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcXG4vKioqKioqLyBcXHR9O1xcbi8qKioqKiovXFxuLyoqKioqKi8gXFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XFxuLyoqKioqKi8gXFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XFxuLyoqKioqKi8gXFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXFxuLyoqKioqKi8gXFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XFxuLyoqKioqKi8gXFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxcbi8qKioqKiovIFxcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XFxuLyoqKioqKi8gXFx0XFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XFxuLyoqKioqKi8gXFx0XFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcXG4vKioqKioqLyBcXHRcXHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xcbi8qKioqKiovIFxcdFxcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XFxuLyoqKioqKi8gXFx0XFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcXG4vKioqKioqLyBcXHRcXHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XFxuLyoqKioqKi8gXFx0XFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xcbi8qKioqKiovIFxcdFxcdHJldHVybiBucztcXG4vKioqKioqLyBcXHR9O1xcbi8qKioqKiovXFxuLyoqKioqKi8gXFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcXG4vKioqKioqLyBcXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcXG4vKioqKioqLyBcXHRcXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cXG4vKioqKioqLyBcXHRcXHRcXHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxcbi8qKioqKiovIFxcdFxcdFxcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XFxuLyoqKioqKi8gXFx0XFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xcbi8qKioqKiovIFxcdFxcdHJldHVybiBnZXR0ZXI7XFxuLyoqKioqKi8gXFx0fTtcXG4vKioqKioqL1xcbi8qKioqKiovIFxcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxcbi8qKioqKiovIFxcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcXG4vKioqKioqL1xcbi8qKioqKiovIFxcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXFxuLyoqKioqKi8gXFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXFxcIlxcXCI7XFxuLyoqKioqKi9cXG4vKioqKioqL1xcbi8qKioqKiovIFxcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xcbi8qKioqKiovIFxcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFxcXCIuL3NyYy9wbHVnaW4ud2Vid29ya2VyLmpzXFxcIik7XFxuLyoqKioqKi8gfSlcXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qKioqKiovICh7XFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvJGRhdGEuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliLyRkYXRhLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxudmFyIEtFWVdPUkRTID0gW1xcXFxuICAnbXVsdGlwbGVPZicsXFxcXG4gICdtYXhpbXVtJyxcXFxcbiAgJ2V4Y2x1c2l2ZU1heGltdW0nLFxcXFxuICAnbWluaW11bScsXFxcXG4gICdleGNsdXNpdmVNaW5pbXVtJyxcXFxcbiAgJ21heExlbmd0aCcsXFxcXG4gICdtaW5MZW5ndGgnLFxcXFxuICAncGF0dGVybicsXFxcXG4gICdhZGRpdGlvbmFsSXRlbXMnLFxcXFxuICAnbWF4SXRlbXMnLFxcXFxuICAnbWluSXRlbXMnLFxcXFxuICAndW5pcXVlSXRlbXMnLFxcXFxuICAnbWF4UHJvcGVydGllcycsXFxcXG4gICdtaW5Qcm9wZXJ0aWVzJyxcXFxcbiAgJ3JlcXVpcmVkJyxcXFxcbiAgJ2FkZGl0aW9uYWxQcm9wZXJ0aWVzJyxcXFxcbiAgJ2VudW0nLFxcXFxuICAnZm9ybWF0JyxcXFxcbiAgJ2NvbnN0J1xcXFxuXTtcXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWV0YVNjaGVtYSwga2V5d29yZHNKc29uUG9pbnRlcnMpIHtcXFxcbiAgZm9yICh2YXIgaT0wOyBpPGtleXdvcmRzSnNvblBvaW50ZXJzLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgbWV0YVNjaGVtYSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkobWV0YVNjaGVtYSkpO1xcXFxuICAgIHZhciBzZWdtZW50cyA9IGtleXdvcmRzSnNvblBvaW50ZXJzW2ldLnNwbGl0KCcvJyk7XFxcXG4gICAgdmFyIGtleXdvcmRzID0gbWV0YVNjaGVtYTtcXFxcbiAgICB2YXIgajtcXFxcbiAgICBmb3IgKGo9MTsgajxzZWdtZW50cy5sZW5ndGg7IGorKylcXFxcbiAgICAgIGtleXdvcmRzID0ga2V5d29yZHNbc2VnbWVudHNbal1dO1xcXFxuXFxcXG4gICAgZm9yIChqPTA7IGo8S0VZV09SRFMubGVuZ3RoOyBqKyspIHtcXFxcbiAgICAgIHZhciBrZXkgPSBLRVlXT1JEU1tqXTtcXFxcbiAgICAgIHZhciBzY2hlbWEgPSBrZXl3b3Jkc1trZXldO1xcXFxuICAgICAgaWYgKHNjaGVtYSkge1xcXFxuICAgICAgICBrZXl3b3Jkc1trZXldID0ge1xcXFxuICAgICAgICAgIGFueU9mOiBbXFxcXG4gICAgICAgICAgICBzY2hlbWEsXFxcXG4gICAgICAgICAgICB7ICRyZWY6ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZXBvYmVyZXpraW4vYWp2L21hc3Rlci9saWIvcmVmcy8kZGF0YS5qc29uIycgfVxcXFxuICAgICAgICAgIF1cXFxcbiAgICAgICAgfTtcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gIH1cXFxcblxcXFxuICByZXR1cm4gbWV0YVNjaGVtYTtcXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaThrWkdGMFlTNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwyRnFkaTlzYVdJdkpHUmhkR0V1YW5NL1lXRmhNeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJbmRYTmxJSE4wY21samRDYzdYRzVjYm5aaGNpQkxSVmxYVDFKRVV5QTlJRnRjYmlBZ0oyMTFiSFJwY0d4bFQyWW5MRnh1SUNBbmJXRjRhVzExYlNjc1hHNGdJQ2RsZUdOc2RYTnBkbVZOWVhocGJYVnRKeXhjYmlBZ0oyMXBibWx0ZFcwbkxGeHVJQ0FuWlhoamJIVnphWFpsVFdsdWFXMTFiU2NzWEc0Z0lDZHRZWGhNWlc1bmRHZ25MRnh1SUNBbmJXbHVUR1Z1WjNSb0p5eGNiaUFnSjNCaGRIUmxjbTRuTEZ4dUlDQW5ZV1JrYVhScGIyNWhiRWwwWlcxekp5eGNiaUFnSjIxaGVFbDBaVzF6Snl4Y2JpQWdKMjFwYmtsMFpXMXpKeXhjYmlBZ0ozVnVhWEYxWlVsMFpXMXpKeXhjYmlBZ0oyMWhlRkJ5YjNCbGNuUnBaWE1uTEZ4dUlDQW5iV2x1VUhKdmNHVnlkR2xsY3ljc1hHNGdJQ2R5WlhGMWFYSmxaQ2NzWEc0Z0lDZGhaR1JwZEdsdmJtRnNVSEp2Y0dWeWRHbGxjeWNzWEc0Z0lDZGxiblZ0Snl4Y2JpQWdKMlp2Y20xaGRDY3NYRzRnSUNkamIyNXpkQ2RjYmwwN1hHNWNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNGdLRzFsZEdGVFkyaGxiV0VzSUd0bGVYZHZjbVJ6U25OdmJsQnZhVzUwWlhKektTQjdYRzRnSUdadmNpQW9kbUZ5SUdrOU1Ec2dhVHhyWlhsM2IzSmtjMHB6YjI1UWIybHVkR1Z5Y3k1c1pXNW5kR2c3SUdrckt5a2dlMXh1SUNBZ0lHMWxkR0ZUWTJobGJXRWdQU0JLVTA5T0xuQmhjbk5sS0VwVFQwNHVjM1J5YVc1bmFXWjVLRzFsZEdGVFkyaGxiV0VwS1R0Y2JpQWdJQ0IyWVhJZ2MyVm5iV1Z1ZEhNZ1BTQnJaWGwzYjNKa2MwcHpiMjVRYjJsdWRHVnljMXRwWFM1emNHeHBkQ2duTHljcE8xeHVJQ0FnSUhaaGNpQnJaWGwzYjNKa2N5QTlJRzFsZEdGVFkyaGxiV0U3WEc0Z0lDQWdkbUZ5SUdvN1hHNGdJQ0FnWm05eUlDaHFQVEU3SUdvOGMyVm5iV1Z1ZEhNdWJHVnVaM1JvT3lCcUt5c3BYRzRnSUNBZ0lDQnJaWGwzYjNKa2N5QTlJR3RsZVhkdmNtUnpXM05sWjIxbGJuUnpXMnBkWFR0Y2JseHVJQ0FnSUdadmNpQW9hajB3T3lCcVBFdEZXVmRQVWtSVExteGxibWQwYURzZ2Fpc3JLU0I3WEc0Z0lDQWdJQ0IyWVhJZ2EyVjVJRDBnUzBWWlYwOVNSRk5iYWwwN1hHNGdJQ0FnSUNCMllYSWdjMk5vWlcxaElEMGdhMlY1ZDI5eVpITmJhMlY1WFR0Y2JpQWdJQ0FnSUdsbUlDaHpZMmhsYldFcElIdGNiaUFnSUNBZ0lDQWdhMlY1ZDI5eVpITmJhMlY1WFNBOUlIdGNiaUFnSUNBZ0lDQWdJQ0JoYm5sUFpqb2dXMXh1SUNBZ0lDQWdJQ0FnSUNBZ2MyTm9aVzFoTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdleUFrY21WbU9pQW5hSFIwY0hNNkx5OXlZWGN1WjJsMGFIVmlkWE5sY21OdmJuUmxiblF1WTI5dEwyVndiMkpsY21WNmEybHVMMkZxZGk5dFlYTjBaWEl2YkdsaUwzSmxabk12SkdSaGRHRXVhbk52YmlNbklIMWNiaUFnSUNBZ0lDQWdJQ0JkWEc0Z0lDQWdJQ0FnSUgwN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2NtVjBkWEp1SUcxbGRHRlRZMmhsYldFN1hHNTlPMXh1SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi8kZGF0YS5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvYWp2LmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvYWp2LmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5cXFxcbnZhciBjb21waWxlU2NoZW1hID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb21waWxlICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2luZGV4LmpzXFxcXFxcXCIpXFxcXG4gICwgcmVzb2x2ZSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29tcGlsZS9yZXNvbHZlICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3Jlc29sdmUuanNcXFxcXFxcIilcXFxcbiAgLCBDYWNoZSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY2FjaGUgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NhY2hlLmpzXFxcXFxcXCIpXFxcXG4gICwgU2NoZW1hT2JqZWN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb21waWxlL3NjaGVtYV9vYmogKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvc2NoZW1hX29iai5qc1xcXFxcXFwiKVxcXFxuICAsIHN0YWJsZVN0cmluZ2lmeSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIGpzb24tc3RhYmxlLXN0cmluZ2lmeSAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2pzb24tc3RhYmxlLXN0cmluZ2lmeS9pbmRleC5qc1xcXFxcXFwiKVxcXFxuICAsIGZvcm1hdHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NvbXBpbGUvZm9ybWF0cyAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9mb3JtYXRzLmpzXFxcXFxcXCIpXFxcXG4gICwgcnVsZXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2NvbXBpbGUvcnVsZXMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvcnVsZXMuanNcXFxcXFxcIilcXFxcbiAgLCAkZGF0YU1ldGFTY2hlbWEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLyRkYXRhICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi8kZGF0YS5qc1xcXFxcXFwiKVxcXFxuICAsIHBhdHRlcm5Hcm91cHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3BhdHRlcm5Hcm91cHMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL3BhdHRlcm5Hcm91cHMuanNcXFxcXFxcIilcXFxcbiAgLCB1dGlsID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb21waWxlL3V0aWwgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvdXRpbC5qc1xcXFxcXFwiKVxcXFxuICAsIGNvID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgY28gKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9jby9pbmRleC5qc1xcXFxcXFwiKTtcXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSBBanY7XFxcXG5cXFxcbkFqdi5wcm90b3R5cGUudmFsaWRhdGUgPSB2YWxpZGF0ZTtcXFxcbkFqdi5wcm90b3R5cGUuY29tcGlsZSA9IGNvbXBpbGU7XFxcXG5BanYucHJvdG90eXBlLmFkZFNjaGVtYSA9IGFkZFNjaGVtYTtcXFxcbkFqdi5wcm90b3R5cGUuYWRkTWV0YVNjaGVtYSA9IGFkZE1ldGFTY2hlbWE7XFxcXG5BanYucHJvdG90eXBlLnZhbGlkYXRlU2NoZW1hID0gdmFsaWRhdGVTY2hlbWE7XFxcXG5BanYucHJvdG90eXBlLmdldFNjaGVtYSA9IGdldFNjaGVtYTtcXFxcbkFqdi5wcm90b3R5cGUucmVtb3ZlU2NoZW1hID0gcmVtb3ZlU2NoZW1hO1xcXFxuQWp2LnByb3RvdHlwZS5hZGRGb3JtYXQgPSBhZGRGb3JtYXQ7XFxcXG5BanYucHJvdG90eXBlLmVycm9yc1RleHQgPSBlcnJvcnNUZXh0O1xcXFxuXFxcXG5BanYucHJvdG90eXBlLl9hZGRTY2hlbWEgPSBfYWRkU2NoZW1hO1xcXFxuQWp2LnByb3RvdHlwZS5fY29tcGlsZSA9IF9jb21waWxlO1xcXFxuXFxcXG5BanYucHJvdG90eXBlLmNvbXBpbGVBc3luYyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29tcGlsZS9hc3luYyAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9hc3luYy5qc1xcXFxcXFwiKTtcXFxcbnZhciBjdXN0b21LZXl3b3JkID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9rZXl3b3JkICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9rZXl3b3JkLmpzXFxcXFxcXCIpO1xcXFxuQWp2LnByb3RvdHlwZS5hZGRLZXl3b3JkID0gY3VzdG9tS2V5d29yZC5hZGQ7XFxcXG5BanYucHJvdG90eXBlLmdldEtleXdvcmQgPSBjdXN0b21LZXl3b3JkLmdldDtcXFxcbkFqdi5wcm90b3R5cGUucmVtb3ZlS2V5d29yZCA9IGN1c3RvbUtleXdvcmQucmVtb3ZlO1xcXFxuXFxcXG52YXIgZXJyb3JDbGFzc2VzID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9jb21waWxlL2Vycm9yX2NsYXNzZXMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXJyb3JfY2xhc3Nlcy5qc1xcXFxcXFwiKTtcXFxcbkFqdi5WYWxpZGF0aW9uRXJyb3IgPSBlcnJvckNsYXNzZXMuVmFsaWRhdGlvbjtcXFxcbkFqdi5NaXNzaW5nUmVmRXJyb3IgPSBlcnJvckNsYXNzZXMuTWlzc2luZ1JlZjtcXFxcbkFqdi4kZGF0YU1ldGFTY2hlbWEgPSAkZGF0YU1ldGFTY2hlbWE7XFxcXG5cXFxcbnZhciBNRVRBX1NDSEVNQV9JRCA9ICdodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA2L3NjaGVtYSc7XFxcXG5cXFxcbnZhciBNRVRBX0lHTk9SRV9PUFRJT05TID0gWyAncmVtb3ZlQWRkaXRpb25hbCcsICd1c2VEZWZhdWx0cycsICdjb2VyY2VUeXBlcycgXTtcXFxcbnZhciBNRVRBX1NVUFBPUlRfREFUQSA9IFsnL3Byb3BlcnRpZXMnXTtcXFxcblxcXFxuLyoqXFxcXG4gKiBDcmVhdGVzIHZhbGlkYXRvciBpbnN0YW5jZS5cXFxcbiAqIFVzYWdlOiBgQWp2KG9wdHMpYFxcXFxuICogQHBhcmFtIHtPYmplY3R9IG9wdHMgb3B0aW9uYWwgb3B0aW9uc1xcXFxuICogQHJldHVybiB7T2JqZWN0fSBhanYgaW5zdGFuY2VcXFxcbiAqL1xcXFxuZnVuY3Rpb24gQWp2KG9wdHMpIHtcXFxcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEFqdikpIHJldHVybiBuZXcgQWp2KG9wdHMpO1xcXFxuICBvcHRzID0gdGhpcy5fb3B0cyA9IHV0aWwuY29weShvcHRzKSB8fCB7fTtcXFxcbiAgdGhpcy5fc2NoZW1hcyA9IHt9O1xcXFxuICB0aGlzLl9yZWZzID0ge307XFxcXG4gIHRoaXMuX2ZyYWdtZW50cyA9IHt9O1xcXFxuICB0aGlzLl9mb3JtYXRzID0gZm9ybWF0cyhvcHRzLmZvcm1hdCk7XFxcXG4gIHZhciBzY2hlbWFVcmlGb3JtYXQgPSB0aGlzLl9zY2hlbWFVcmlGb3JtYXQgPSB0aGlzLl9mb3JtYXRzWyd1cmktcmVmZXJlbmNlJ107XFxcXG4gIHRoaXMuX3NjaGVtYVVyaUZvcm1hdEZ1bmMgPSBmdW5jdGlvbiAoc3RyKSB7IHJldHVybiBzY2hlbWFVcmlGb3JtYXQudGVzdChzdHIpOyB9O1xcXFxuXFxcXG4gIHRoaXMuX2NhY2hlID0gb3B0cy5jYWNoZSB8fCBuZXcgQ2FjaGU7XFxcXG4gIHRoaXMuX2xvYWRpbmdTY2hlbWFzID0ge307XFxcXG4gIHRoaXMuX2NvbXBpbGF0aW9ucyA9IFtdO1xcXFxuICB0aGlzLlJVTEVTID0gcnVsZXMoKTtcXFxcbiAgdGhpcy5fZ2V0SWQgPSBjaG9vc2VHZXRJZChvcHRzKTtcXFxcblxcXFxuICBvcHRzLmxvb3BSZXF1aXJlZCA9IG9wdHMubG9vcFJlcXVpcmVkIHx8IEluZmluaXR5O1xcXFxuICBpZiAob3B0cy5lcnJvckRhdGFQYXRoID09ICdwcm9wZXJ0eScpIG9wdHMuX2Vycm9yRGF0YVBhdGhQcm9wZXJ0eSA9IHRydWU7XFxcXG4gIGlmIChvcHRzLnNlcmlhbGl6ZSA9PT0gdW5kZWZpbmVkKSBvcHRzLnNlcmlhbGl6ZSA9IHN0YWJsZVN0cmluZ2lmeTtcXFxcbiAgdGhpcy5fbWV0YU9wdHMgPSBnZXRNZXRhU2NoZW1hT3B0aW9ucyh0aGlzKTtcXFxcblxcXFxuICBpZiAob3B0cy5mb3JtYXRzKSBhZGRJbml0aWFsRm9ybWF0cyh0aGlzKTtcXFxcbiAgYWRkRHJhZnQ2TWV0YVNjaGVtYSh0aGlzKTtcXFxcbiAgaWYgKHR5cGVvZiBvcHRzLm1ldGEgPT0gJ29iamVjdCcpIHRoaXMuYWRkTWV0YVNjaGVtYShvcHRzLm1ldGEpO1xcXFxuICBhZGRJbml0aWFsU2NoZW1hcyh0aGlzKTtcXFxcbiAgaWYgKG9wdHMucGF0dGVybkdyb3VwcykgcGF0dGVybkdyb3Vwcyh0aGlzKTtcXFxcbn1cXFxcblxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogVmFsaWRhdGUgZGF0YSB1c2luZyBzY2hlbWFcXFxcbiAqIFNjaGVtYSB3aWxsIGJlIGNvbXBpbGVkIGFuZCBjYWNoZWQgKHVzaW5nIHNlcmlhbGl6ZWQgSlNPTiBhcyBrZXkuIFtqc29uLXN0YWJsZS1zdHJpbmdpZnldKGh0dHBzOi8vZ2l0aHViLmNvbS9zdWJzdGFjay9qc29uLXN0YWJsZS1zdHJpbmdpZnkpIGlzIHVzZWQgdG8gc2VyaWFsaXplLlxcXFxuICogQHRoaXMgICBBanZcXFxcbiAqIEBwYXJhbSAge1N0cmluZ3xPYmplY3R9IHNjaGVtYUtleVJlZiBrZXksIHJlZiBvciBzY2hlbWEgb2JqZWN0XFxcXG4gKiBAcGFyYW0gIHtBbnl9IGRhdGEgdG8gYmUgdmFsaWRhdGVkXFxcXG4gKiBAcmV0dXJuIHtCb29sZWFufSB2YWxpZGF0aW9uIHJlc3VsdC4gRXJyb3JzIGZyb20gdGhlIGxhc3QgdmFsaWRhdGlvbiB3aWxsIGJlIGF2YWlsYWJsZSBpbiBgYWp2LmVycm9yc2AgKGFuZCBhbHNvIGluIGNvbXBpbGVkIHNjaGVtYTogYHNjaGVtYS5lcnJvcnNgKS5cXFxcbiAqL1xcXFxuZnVuY3Rpb24gdmFsaWRhdGUoc2NoZW1hS2V5UmVmLCBkYXRhKSB7XFxcXG4gIHZhciB2O1xcXFxuICBpZiAodHlwZW9mIHNjaGVtYUtleVJlZiA9PSAnc3RyaW5nJykge1xcXFxuICAgIHYgPSB0aGlzLmdldFNjaGVtYShzY2hlbWFLZXlSZWYpO1xcXFxuICAgIGlmICghdikgdGhyb3cgbmV3IEVycm9yKCdubyBzY2hlbWEgd2l0aCBrZXkgb3IgcmVmIFxcXFxcXFwiJyArIHNjaGVtYUtleVJlZiArICdcXFxcXFxcIicpO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIHZhciBzY2hlbWFPYmogPSB0aGlzLl9hZGRTY2hlbWEoc2NoZW1hS2V5UmVmKTtcXFxcbiAgICB2ID0gc2NoZW1hT2JqLnZhbGlkYXRlIHx8IHRoaXMuX2NvbXBpbGUoc2NoZW1hT2JqKTtcXFxcbiAgfVxcXFxuXFxcXG4gIHZhciB2YWxpZCA9IHYoZGF0YSk7XFxcXG4gIGlmICh2LiRhc3luYyA9PT0gdHJ1ZSlcXFxcbiAgICByZXR1cm4gdGhpcy5fb3B0cy5hc3luYyA9PSAnKicgPyBjbyh2YWxpZCkgOiB2YWxpZDtcXFxcbiAgdGhpcy5lcnJvcnMgPSB2LmVycm9ycztcXFxcbiAgcmV0dXJuIHZhbGlkO1xcXFxufVxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogQ3JlYXRlIHZhbGlkYXRpbmcgZnVuY3Rpb24gZm9yIHBhc3NlZCBzY2hlbWEuXFxcXG4gKiBAdGhpcyAgIEFqdlxcXFxuICogQHBhcmFtICB7T2JqZWN0fSBzY2hlbWEgc2NoZW1hIG9iamVjdFxcXFxuICogQHBhcmFtICB7Qm9vbGVhbn0gX21ldGEgdHJ1ZSBpZiBzY2hlbWEgaXMgYSBtZXRhLXNjaGVtYS4gVXNlZCBpbnRlcm5hbGx5IHRvIGNvbXBpbGUgbWV0YSBzY2hlbWFzIG9mIGN1c3RvbSBrZXl3b3Jkcy5cXFxcbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSB2YWxpZGF0aW5nIGZ1bmN0aW9uXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIGNvbXBpbGUoc2NoZW1hLCBfbWV0YSkge1xcXFxuICB2YXIgc2NoZW1hT2JqID0gdGhpcy5fYWRkU2NoZW1hKHNjaGVtYSwgdW5kZWZpbmVkLCBfbWV0YSk7XFxcXG4gIHJldHVybiBzY2hlbWFPYmoudmFsaWRhdGUgfHwgdGhpcy5fY29tcGlsZShzY2hlbWFPYmopO1xcXFxufVxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogQWRkcyBzY2hlbWEgdG8gdGhlIGluc3RhbmNlLlxcXFxuICogQHRoaXMgICBBanZcXFxcbiAqIEBwYXJhbSB7T2JqZWN0fEFycmF5fSBzY2hlbWEgc2NoZW1hIG9yIGFycmF5IG9mIHNjaGVtYXMuIElmIGFycmF5IGlzIHBhc3NlZCwgYGtleWAgYW5kIG90aGVyIHBhcmFtZXRlcnMgd2lsbCBiZSBpZ25vcmVkLlxcXFxuICogQHBhcmFtIHtTdHJpbmd9IGtleSBPcHRpb25hbCBzY2hlbWEga2V5LiBDYW4gYmUgcGFzc2VkIHRvIGB2YWxpZGF0ZWAgbWV0aG9kIGluc3RlYWQgb2Ygc2NoZW1hIG9iamVjdCBvciBpZC9yZWYuIE9uZSBzY2hlbWEgcGVyIGluc3RhbmNlIGNhbiBoYXZlIGVtcHR5IGBpZGAgYW5kIGBrZXlgLlxcXFxuICogQHBhcmFtIHtCb29sZWFufSBfc2tpcFZhbGlkYXRpb24gdHJ1ZSB0byBza2lwIHNjaGVtYSB2YWxpZGF0aW9uLiBVc2VkIGludGVybmFsbHksIG9wdGlvbiB2YWxpZGF0ZVNjaGVtYSBzaG91bGQgYmUgdXNlZCBpbnN0ZWFkLlxcXFxuICogQHBhcmFtIHtCb29sZWFufSBfbWV0YSB0cnVlIGlmIHNjaGVtYSBpcyBhIG1ldGEtc2NoZW1hLiBVc2VkIGludGVybmFsbHksIGFkZE1ldGFTY2hlbWEgc2hvdWxkIGJlIHVzZWQgaW5zdGVhZC5cXFxcbiAqL1xcXFxuZnVuY3Rpb24gYWRkU2NoZW1hKHNjaGVtYSwga2V5LCBfc2tpcFZhbGlkYXRpb24sIF9tZXRhKSB7XFxcXG4gIGlmIChBcnJheS5pc0FycmF5KHNjaGVtYSkpe1xcXFxuICAgIGZvciAodmFyIGk9MDsgaTxzY2hlbWEubGVuZ3RoOyBpKyspIHRoaXMuYWRkU2NoZW1hKHNjaGVtYVtpXSwgdW5kZWZpbmVkLCBfc2tpcFZhbGlkYXRpb24sIF9tZXRhKTtcXFxcbiAgICByZXR1cm47XFxcXG4gIH1cXFxcbiAgdmFyIGlkID0gdGhpcy5fZ2V0SWQoc2NoZW1hKTtcXFxcbiAgaWYgKGlkICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mIGlkICE9ICdzdHJpbmcnKVxcXFxuICAgIHRocm93IG5ldyBFcnJvcignc2NoZW1hIGlkIG11c3QgYmUgc3RyaW5nJyk7XFxcXG4gIGtleSA9IHJlc29sdmUubm9ybWFsaXplSWQoa2V5IHx8IGlkKTtcXFxcbiAgY2hlY2tVbmlxdWUodGhpcywga2V5KTtcXFxcbiAgdGhpcy5fc2NoZW1hc1trZXldID0gdGhpcy5fYWRkU2NoZW1hKHNjaGVtYSwgX3NraXBWYWxpZGF0aW9uLCBfbWV0YSwgdHJ1ZSk7XFxcXG59XFxcXG5cXFxcblxcXFxuLyoqXFxcXG4gKiBBZGQgc2NoZW1hIHRoYXQgd2lsbCBiZSB1c2VkIHRvIHZhbGlkYXRlIG90aGVyIHNjaGVtYXNcXFxcbiAqIG9wdGlvbnMgaW4gTUVUQV9JR05PUkVfT1BUSU9OUyBhcmUgYWx3YXkgc2V0IHRvIGZhbHNlXFxcXG4gKiBAdGhpcyAgIEFqdlxcXFxuICogQHBhcmFtIHtPYmplY3R9IHNjaGVtYSBzY2hlbWEgb2JqZWN0XFxcXG4gKiBAcGFyYW0ge1N0cmluZ30ga2V5IG9wdGlvbmFsIHNjaGVtYSBrZXlcXFxcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gc2tpcFZhbGlkYXRpb24gdHJ1ZSB0byBza2lwIHNjaGVtYSB2YWxpZGF0aW9uLCBjYW4gYmUgdXNlZCB0byBvdmVycmlkZSB2YWxpZGF0ZVNjaGVtYSBvcHRpb24gZm9yIG1ldGEtc2NoZW1hXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIGFkZE1ldGFTY2hlbWEoc2NoZW1hLCBrZXksIHNraXBWYWxpZGF0aW9uKSB7XFxcXG4gIHRoaXMuYWRkU2NoZW1hKHNjaGVtYSwga2V5LCBza2lwVmFsaWRhdGlvbiwgdHJ1ZSk7XFxcXG59XFxcXG5cXFxcblxcXFxuLyoqXFxcXG4gKiBWYWxpZGF0ZSBzY2hlbWFcXFxcbiAqIEB0aGlzICAgQWp2XFxcXG4gKiBAcGFyYW0ge09iamVjdH0gc2NoZW1hIHNjaGVtYSB0byB2YWxpZGF0ZVxcXFxuICogQHBhcmFtIHtCb29sZWFufSB0aHJvd09yTG9nRXJyb3IgcGFzcyB0cnVlIHRvIHRocm93IChvciBsb2cpIGFuIGVycm9yIGlmIGludmFsaWRcXFxcbiAqIEByZXR1cm4ge0Jvb2xlYW59IHRydWUgaWYgc2NoZW1hIGlzIHZhbGlkXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIHZhbGlkYXRlU2NoZW1hKHNjaGVtYSwgdGhyb3dPckxvZ0Vycm9yKSB7XFxcXG4gIHZhciAkc2NoZW1hID0gc2NoZW1hLiRzY2hlbWE7XFxcXG4gIGlmICgkc2NoZW1hICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mICRzY2hlbWEgIT0gJ3N0cmluZycpXFxcXG4gICAgdGhyb3cgbmV3IEVycm9yKCckc2NoZW1hIG11c3QgYmUgYSBzdHJpbmcnKTtcXFxcbiAgJHNjaGVtYSA9ICRzY2hlbWEgfHwgdGhpcy5fb3B0cy5kZWZhdWx0TWV0YSB8fCBkZWZhdWx0TWV0YSh0aGlzKTtcXFxcbiAgaWYgKCEkc2NoZW1hKSB7XFxcXG4gICAgY29uc29sZS53YXJuKCdtZXRhLXNjaGVtYSBub3QgYXZhaWxhYmxlJyk7XFxcXG4gICAgdGhpcy5lcnJvcnMgPSBudWxsO1xcXFxuICAgIHJldHVybiB0cnVlO1xcXFxuICB9XFxcXG4gIHZhciBjdXJyZW50VXJpRm9ybWF0ID0gdGhpcy5fZm9ybWF0cy51cmk7XFxcXG4gIHRoaXMuX2Zvcm1hdHMudXJpID0gdHlwZW9mIGN1cnJlbnRVcmlGb3JtYXQgPT0gJ2Z1bmN0aW9uJ1xcXFxuICAgICAgICAgICAgICAgICAgICAgID8gdGhpcy5fc2NoZW1hVXJpRm9ybWF0RnVuY1xcXFxuICAgICAgICAgICAgICAgICAgICAgIDogdGhpcy5fc2NoZW1hVXJpRm9ybWF0O1xcXFxuICB2YXIgdmFsaWQ7XFxcXG4gIHRyeSB7IHZhbGlkID0gdGhpcy52YWxpZGF0ZSgkc2NoZW1hLCBzY2hlbWEpOyB9XFxcXG4gIGZpbmFsbHkgeyB0aGlzLl9mb3JtYXRzLnVyaSA9IGN1cnJlbnRVcmlGb3JtYXQ7IH1cXFxcbiAgaWYgKCF2YWxpZCAmJiB0aHJvd09yTG9nRXJyb3IpIHtcXFxcbiAgICB2YXIgbWVzc2FnZSA9ICdzY2hlbWEgaXMgaW52YWxpZDogJyArIHRoaXMuZXJyb3JzVGV4dCgpO1xcXFxuICAgIGlmICh0aGlzLl9vcHRzLnZhbGlkYXRlU2NoZW1hID09ICdsb2cnKSBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xcXFxuICAgIGVsc2UgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xcXFxuICB9XFxcXG4gIHJldHVybiB2YWxpZDtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBkZWZhdWx0TWV0YShzZWxmKSB7XFxcXG4gIHZhciBtZXRhID0gc2VsZi5fb3B0cy5tZXRhO1xcXFxuICBzZWxmLl9vcHRzLmRlZmF1bHRNZXRhID0gdHlwZW9mIG1ldGEgPT0gJ29iamVjdCdcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHNlbGYuX2dldElkKG1ldGEpIHx8IG1ldGFcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHNlbGYuZ2V0U2NoZW1hKE1FVEFfU0NIRU1BX0lEKVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBNRVRBX1NDSEVNQV9JRFxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XFxcXG4gIHJldHVybiBzZWxmLl9vcHRzLmRlZmF1bHRNZXRhO1xcXFxufVxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogR2V0IGNvbXBpbGVkIHNjaGVtYSBmcm9tIHRoZSBpbnN0YW5jZSBieSBga2V5YCBvciBgcmVmYC5cXFxcbiAqIEB0aGlzICAgQWp2XFxcXG4gKiBAcGFyYW0gIHtTdHJpbmd9IGtleVJlZiBga2V5YCB0aGF0IHdhcyBwYXNzZWQgdG8gYGFkZFNjaGVtYWAgb3IgZnVsbCBzY2hlbWEgcmVmZXJlbmNlIChgc2NoZW1hLmlkYCBvciByZXNvbHZlZCBpZCkuXFxcXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gc2NoZW1hIHZhbGlkYXRpbmcgZnVuY3Rpb24gKHdpdGggcHJvcGVydHkgYHNjaGVtYWApLlxcXFxuICovXFxcXG5mdW5jdGlvbiBnZXRTY2hlbWEoa2V5UmVmKSB7XFxcXG4gIHZhciBzY2hlbWFPYmogPSBfZ2V0U2NoZW1hT2JqKHRoaXMsIGtleVJlZik7XFxcXG4gIHN3aXRjaCAodHlwZW9mIHNjaGVtYU9iaikge1xcXFxuICAgIGNhc2UgJ29iamVjdCc6IHJldHVybiBzY2hlbWFPYmoudmFsaWRhdGUgfHwgdGhpcy5fY29tcGlsZShzY2hlbWFPYmopO1xcXFxuICAgIGNhc2UgJ3N0cmluZyc6IHJldHVybiB0aGlzLmdldFNjaGVtYShzY2hlbWFPYmopO1xcXFxuICAgIGNhc2UgJ3VuZGVmaW5lZCc6IHJldHVybiBfZ2V0U2NoZW1hRnJhZ21lbnQodGhpcywga2V5UmVmKTtcXFxcbiAgfVxcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIF9nZXRTY2hlbWFGcmFnbWVudChzZWxmLCByZWYpIHtcXFxcbiAgdmFyIHJlcyA9IHJlc29sdmUuc2NoZW1hLmNhbGwoc2VsZiwgeyBzY2hlbWE6IHt9IH0sIHJlZik7XFxcXG4gIGlmIChyZXMpIHtcXFxcbiAgICB2YXIgc2NoZW1hID0gcmVzLnNjaGVtYVxcXFxuICAgICAgLCByb290ID0gcmVzLnJvb3RcXFxcbiAgICAgICwgYmFzZUlkID0gcmVzLmJhc2VJZDtcXFxcbiAgICB2YXIgdiA9IGNvbXBpbGVTY2hlbWEuY2FsbChzZWxmLCBzY2hlbWEsIHJvb3QsIHVuZGVmaW5lZCwgYmFzZUlkKTtcXFxcbiAgICBzZWxmLl9mcmFnbWVudHNbcmVmXSA9IG5ldyBTY2hlbWFPYmplY3Qoe1xcXFxuICAgICAgcmVmOiByZWYsXFxcXG4gICAgICBmcmFnbWVudDogdHJ1ZSxcXFxcbiAgICAgIHNjaGVtYTogc2NoZW1hLFxcXFxuICAgICAgcm9vdDogcm9vdCxcXFxcbiAgICAgIGJhc2VJZDogYmFzZUlkLFxcXFxuICAgICAgdmFsaWRhdGU6IHZcXFxcbiAgICB9KTtcXFxcbiAgICByZXR1cm4gdjtcXFxcbiAgfVxcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIF9nZXRTY2hlbWFPYmooc2VsZiwga2V5UmVmKSB7XFxcXG4gIGtleVJlZiA9IHJlc29sdmUubm9ybWFsaXplSWQoa2V5UmVmKTtcXFxcbiAgcmV0dXJuIHNlbGYuX3NjaGVtYXNba2V5UmVmXSB8fCBzZWxmLl9yZWZzW2tleVJlZl0gfHwgc2VsZi5fZnJhZ21lbnRzW2tleVJlZl07XFxcXG59XFxcXG5cXFxcblxcXFxuLyoqXFxcXG4gKiBSZW1vdmUgY2FjaGVkIHNjaGVtYShzKS5cXFxcbiAqIElmIG5vIHBhcmFtZXRlciBpcyBwYXNzZWQgYWxsIHNjaGVtYXMgYnV0IG1ldGEtc2NoZW1hcyBhcmUgcmVtb3ZlZC5cXFxcbiAqIElmIFJlZ0V4cCBpcyBwYXNzZWQgYWxsIHNjaGVtYXMgd2l0aCBrZXkvaWQgbWF0Y2hpbmcgcGF0dGVybiBidXQgbWV0YS1zY2hlbWFzIGFyZSByZW1vdmVkLlxcXFxuICogRXZlbiBpZiBzY2hlbWEgaXMgcmVmZXJlbmNlZCBieSBvdGhlciBzY2hlbWFzIGl0IHN0aWxsIGNhbiBiZSByZW1vdmVkIGFzIG90aGVyIHNjaGVtYXMgaGF2ZSBsb2NhbCByZWZlcmVuY2VzLlxcXFxuICogQHRoaXMgICBBanZcXFxcbiAqIEBwYXJhbSAge1N0cmluZ3xPYmplY3R8UmVnRXhwfSBzY2hlbWFLZXlSZWYga2V5LCByZWYsIHBhdHRlcm4gdG8gbWF0Y2gga2V5L3JlZiBvciBzY2hlbWEgb2JqZWN0XFxcXG4gKi9cXFxcbmZ1bmN0aW9uIHJlbW92ZVNjaGVtYShzY2hlbWFLZXlSZWYpIHtcXFxcbiAgaWYgKHNjaGVtYUtleVJlZiBpbnN0YW5jZW9mIFJlZ0V4cCkge1xcXFxuICAgIF9yZW1vdmVBbGxTY2hlbWFzKHRoaXMsIHRoaXMuX3NjaGVtYXMsIHNjaGVtYUtleVJlZik7XFxcXG4gICAgX3JlbW92ZUFsbFNjaGVtYXModGhpcywgdGhpcy5fcmVmcywgc2NoZW1hS2V5UmVmKTtcXFxcbiAgICByZXR1cm47XFxcXG4gIH1cXFxcbiAgc3dpdGNoICh0eXBlb2Ygc2NoZW1hS2V5UmVmKSB7XFxcXG4gICAgY2FzZSAndW5kZWZpbmVkJzpcXFxcbiAgICAgIF9yZW1vdmVBbGxTY2hlbWFzKHRoaXMsIHRoaXMuX3NjaGVtYXMpO1xcXFxuICAgICAgX3JlbW92ZUFsbFNjaGVtYXModGhpcywgdGhpcy5fcmVmcyk7XFxcXG4gICAgICB0aGlzLl9jYWNoZS5jbGVhcigpO1xcXFxuICAgICAgcmV0dXJuO1xcXFxuICAgIGNhc2UgJ3N0cmluZyc6XFxcXG4gICAgICB2YXIgc2NoZW1hT2JqID0gX2dldFNjaGVtYU9iaih0aGlzLCBzY2hlbWFLZXlSZWYpO1xcXFxuICAgICAgaWYgKHNjaGVtYU9iaikgdGhpcy5fY2FjaGUuZGVsKHNjaGVtYU9iai5jYWNoZUtleSk7XFxcXG4gICAgICBkZWxldGUgdGhpcy5fc2NoZW1hc1tzY2hlbWFLZXlSZWZdO1xcXFxuICAgICAgZGVsZXRlIHRoaXMuX3JlZnNbc2NoZW1hS2V5UmVmXTtcXFxcbiAgICAgIHJldHVybjtcXFxcbiAgICBjYXNlICdvYmplY3QnOlxcXFxuICAgICAgdmFyIHNlcmlhbGl6ZSA9IHRoaXMuX29wdHMuc2VyaWFsaXplO1xcXFxuICAgICAgdmFyIGNhY2hlS2V5ID0gc2VyaWFsaXplID8gc2VyaWFsaXplKHNjaGVtYUtleVJlZikgOiBzY2hlbWFLZXlSZWY7XFxcXG4gICAgICB0aGlzLl9jYWNoZS5kZWwoY2FjaGVLZXkpO1xcXFxuICAgICAgdmFyIGlkID0gdGhpcy5fZ2V0SWQoc2NoZW1hS2V5UmVmKTtcXFxcbiAgICAgIGlmIChpZCkge1xcXFxuICAgICAgICBpZCA9IHJlc29sdmUubm9ybWFsaXplSWQoaWQpO1xcXFxuICAgICAgICBkZWxldGUgdGhpcy5fc2NoZW1hc1tpZF07XFxcXG4gICAgICAgIGRlbGV0ZSB0aGlzLl9yZWZzW2lkXTtcXFxcbiAgICAgIH1cXFxcbiAgfVxcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIF9yZW1vdmVBbGxTY2hlbWFzKHNlbGYsIHNjaGVtYXMsIHJlZ2V4KSB7XFxcXG4gIGZvciAodmFyIGtleVJlZiBpbiBzY2hlbWFzKSB7XFxcXG4gICAgdmFyIHNjaGVtYU9iaiA9IHNjaGVtYXNba2V5UmVmXTtcXFxcbiAgICBpZiAoIXNjaGVtYU9iai5tZXRhICYmICghcmVnZXggfHwgcmVnZXgudGVzdChrZXlSZWYpKSkge1xcXFxuICAgICAgc2VsZi5fY2FjaGUuZGVsKHNjaGVtYU9iai5jYWNoZUtleSk7XFxcXG4gICAgICBkZWxldGUgc2NoZW1hc1trZXlSZWZdO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxufVxcXFxuXFxcXG5cXFxcbi8qIEB0aGlzICAgQWp2ICovXFxcXG5mdW5jdGlvbiBfYWRkU2NoZW1hKHNjaGVtYSwgc2tpcFZhbGlkYXRpb24sIG1ldGEsIHNob3VsZEFkZFNjaGVtYSkge1xcXFxuICBpZiAodHlwZW9mIHNjaGVtYSAhPSAnb2JqZWN0JyAmJiB0eXBlb2Ygc2NoZW1hICE9ICdib29sZWFuJylcXFxcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NjaGVtYSBzaG91bGQgYmUgb2JqZWN0IG9yIGJvb2xlYW4nKTtcXFxcbiAgdmFyIHNlcmlhbGl6ZSA9IHRoaXMuX29wdHMuc2VyaWFsaXplO1xcXFxuICB2YXIgY2FjaGVLZXkgPSBzZXJpYWxpemUgPyBzZXJpYWxpemUoc2NoZW1hKSA6IHNjaGVtYTtcXFxcbiAgdmFyIGNhY2hlZCA9IHRoaXMuX2NhY2hlLmdldChjYWNoZUtleSk7XFxcXG4gIGlmIChjYWNoZWQpIHJldHVybiBjYWNoZWQ7XFxcXG5cXFxcbiAgc2hvdWxkQWRkU2NoZW1hID0gc2hvdWxkQWRkU2NoZW1hIHx8IHRoaXMuX29wdHMuYWRkVXNlZFNjaGVtYSAhPT0gZmFsc2U7XFxcXG5cXFxcbiAgdmFyIGlkID0gcmVzb2x2ZS5ub3JtYWxpemVJZCh0aGlzLl9nZXRJZChzY2hlbWEpKTtcXFxcbiAgaWYgKGlkICYmIHNob3VsZEFkZFNjaGVtYSkgY2hlY2tVbmlxdWUodGhpcywgaWQpO1xcXFxuXFxcXG4gIHZhciB3aWxsVmFsaWRhdGUgPSB0aGlzLl9vcHRzLnZhbGlkYXRlU2NoZW1hICE9PSBmYWxzZSAmJiAhc2tpcFZhbGlkYXRpb247XFxcXG4gIHZhciByZWN1cnNpdmVNZXRhO1xcXFxuICBpZiAod2lsbFZhbGlkYXRlICYmICEocmVjdXJzaXZlTWV0YSA9IGlkICYmIGlkID09IHJlc29sdmUubm9ybWFsaXplSWQoc2NoZW1hLiRzY2hlbWEpKSlcXFxcbiAgICB0aGlzLnZhbGlkYXRlU2NoZW1hKHNjaGVtYSwgdHJ1ZSk7XFxcXG5cXFxcbiAgdmFyIGxvY2FsUmVmcyA9IHJlc29sdmUuaWRzLmNhbGwodGhpcywgc2NoZW1hKTtcXFxcblxcXFxuICB2YXIgc2NoZW1hT2JqID0gbmV3IFNjaGVtYU9iamVjdCh7XFxcXG4gICAgaWQ6IGlkLFxcXFxuICAgIHNjaGVtYTogc2NoZW1hLFxcXFxuICAgIGxvY2FsUmVmczogbG9jYWxSZWZzLFxcXFxuICAgIGNhY2hlS2V5OiBjYWNoZUtleSxcXFxcbiAgICBtZXRhOiBtZXRhXFxcXG4gIH0pO1xcXFxuXFxcXG4gIGlmIChpZFswXSAhPSAnIycgJiYgc2hvdWxkQWRkU2NoZW1hKSB0aGlzLl9yZWZzW2lkXSA9IHNjaGVtYU9iajtcXFxcbiAgdGhpcy5fY2FjaGUucHV0KGNhY2hlS2V5LCBzY2hlbWFPYmopO1xcXFxuXFxcXG4gIGlmICh3aWxsVmFsaWRhdGUgJiYgcmVjdXJzaXZlTWV0YSkgdGhpcy52YWxpZGF0ZVNjaGVtYShzY2hlbWEsIHRydWUpO1xcXFxuXFxcXG4gIHJldHVybiBzY2hlbWFPYmo7XFxcXG59XFxcXG5cXFxcblxcXFxuLyogQHRoaXMgICBBanYgKi9cXFxcbmZ1bmN0aW9uIF9jb21waWxlKHNjaGVtYU9iaiwgcm9vdCkge1xcXFxuICBpZiAoc2NoZW1hT2JqLmNvbXBpbGluZykge1xcXFxuICAgIHNjaGVtYU9iai52YWxpZGF0ZSA9IGNhbGxWYWxpZGF0ZTtcXFxcbiAgICBjYWxsVmFsaWRhdGUuc2NoZW1hID0gc2NoZW1hT2JqLnNjaGVtYTtcXFxcbiAgICBjYWxsVmFsaWRhdGUuZXJyb3JzID0gbnVsbDtcXFxcbiAgICBjYWxsVmFsaWRhdGUucm9vdCA9IHJvb3QgPyByb290IDogY2FsbFZhbGlkYXRlO1xcXFxuICAgIGlmIChzY2hlbWFPYmouc2NoZW1hLiRhc3luYyA9PT0gdHJ1ZSlcXFxcbiAgICAgIGNhbGxWYWxpZGF0ZS4kYXN5bmMgPSB0cnVlO1xcXFxuICAgIHJldHVybiBjYWxsVmFsaWRhdGU7XFxcXG4gIH1cXFxcbiAgc2NoZW1hT2JqLmNvbXBpbGluZyA9IHRydWU7XFxcXG5cXFxcbiAgdmFyIGN1cnJlbnRPcHRzO1xcXFxuICBpZiAoc2NoZW1hT2JqLm1ldGEpIHtcXFxcbiAgICBjdXJyZW50T3B0cyA9IHRoaXMuX29wdHM7XFxcXG4gICAgdGhpcy5fb3B0cyA9IHRoaXMuX21ldGFPcHRzO1xcXFxuICB9XFxcXG5cXFxcbiAgdmFyIHY7XFxcXG4gIHRyeSB7IHYgPSBjb21waWxlU2NoZW1hLmNhbGwodGhpcywgc2NoZW1hT2JqLnNjaGVtYSwgcm9vdCwgc2NoZW1hT2JqLmxvY2FsUmVmcyk7IH1cXFxcbiAgZmluYWxseSB7XFxcXG4gICAgc2NoZW1hT2JqLmNvbXBpbGluZyA9IGZhbHNlO1xcXFxuICAgIGlmIChzY2hlbWFPYmoubWV0YSkgdGhpcy5fb3B0cyA9IGN1cnJlbnRPcHRzO1xcXFxuICB9XFxcXG5cXFxcbiAgc2NoZW1hT2JqLnZhbGlkYXRlID0gdjtcXFxcbiAgc2NoZW1hT2JqLnJlZnMgPSB2LnJlZnM7XFxcXG4gIHNjaGVtYU9iai5yZWZWYWwgPSB2LnJlZlZhbDtcXFxcbiAgc2NoZW1hT2JqLnJvb3QgPSB2LnJvb3Q7XFxcXG4gIHJldHVybiB2O1xcXFxuXFxcXG5cXFxcbiAgZnVuY3Rpb24gY2FsbFZhbGlkYXRlKCkge1xcXFxuICAgIHZhciBfdmFsaWRhdGUgPSBzY2hlbWFPYmoudmFsaWRhdGU7XFxcXG4gICAgdmFyIHJlc3VsdCA9IF92YWxpZGF0ZS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xcXFxuICAgIGNhbGxWYWxpZGF0ZS5lcnJvcnMgPSBfdmFsaWRhdGUuZXJyb3JzO1xcXFxuICAgIHJldHVybiByZXN1bHQ7XFxcXG4gIH1cXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBjaG9vc2VHZXRJZChvcHRzKSB7XFxcXG4gIHN3aXRjaCAob3B0cy5zY2hlbWFJZCkge1xcXFxuICAgIGNhc2UgJyRpZCc6IHJldHVybiBfZ2V0JElkO1xcXFxuICAgIGNhc2UgJ2lkJzogcmV0dXJuIF9nZXRJZDtcXFxcbiAgICBkZWZhdWx0OiByZXR1cm4gX2dldCRJZE9ySWQ7XFxcXG4gIH1cXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBfZ2V0SWQoc2NoZW1hKSB7XFxcXG4gIGlmIChzY2hlbWEuJGlkKSBjb25zb2xlLndhcm4oJ3NjaGVtYSAkaWQgaWdub3JlZCcsIHNjaGVtYS4kaWQpO1xcXFxuICByZXR1cm4gc2NoZW1hLmlkO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIF9nZXQkSWQoc2NoZW1hKSB7XFxcXG4gIGlmIChzY2hlbWEuaWQpIGNvbnNvbGUud2Fybignc2NoZW1hIGlkIGlnbm9yZWQnLCBzY2hlbWEuaWQpO1xcXFxuICByZXR1cm4gc2NoZW1hLiRpZDtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBfZ2V0JElkT3JJZChzY2hlbWEpIHtcXFxcbiAgaWYgKHNjaGVtYS4kaWQgJiYgc2NoZW1hLmlkICYmIHNjaGVtYS4kaWQgIT0gc2NoZW1hLmlkKVxcXFxuICAgIHRocm93IG5ldyBFcnJvcignc2NoZW1hICRpZCBpcyBkaWZmZXJlbnQgZnJvbSBpZCcpO1xcXFxuICByZXR1cm4gc2NoZW1hLiRpZCB8fCBzY2hlbWEuaWQ7XFxcXG59XFxcXG5cXFxcblxcXFxuLyoqXFxcXG4gKiBDb252ZXJ0IGFycmF5IG9mIGVycm9yIG1lc3NhZ2Ugb2JqZWN0cyB0byBzdHJpbmdcXFxcbiAqIEB0aGlzICAgQWp2XFxcXG4gKiBAcGFyYW0gIHtBcnJheTxPYmplY3Q+fSBlcnJvcnMgb3B0aW9uYWwgYXJyYXkgb2YgdmFsaWRhdGlvbiBlcnJvcnMsIGlmIG5vdCBwYXNzZWQgZXJyb3JzIGZyb20gdGhlIGluc3RhbmNlIGFyZSB1c2VkLlxcXFxuICogQHBhcmFtICB7T2JqZWN0fSBvcHRpb25zIG9wdGlvbmFsIG9wdGlvbnMgd2l0aCBwcm9wZXJ0aWVzIGBzZXBhcmF0b3JgIGFuZCBgZGF0YVZhcmAuXFxcXG4gKiBAcmV0dXJuIHtTdHJpbmd9IGh1bWFuIHJlYWRhYmxlIHN0cmluZyB3aXRoIGFsbCBlcnJvcnMgZGVzY3JpcHRpb25zXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIGVycm9yc1RleHQoZXJyb3JzLCBvcHRpb25zKSB7XFxcXG4gIGVycm9ycyA9IGVycm9ycyB8fCB0aGlzLmVycm9ycztcXFxcbiAgaWYgKCFlcnJvcnMpIHJldHVybiAnTm8gZXJyb3JzJztcXFxcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XFxcXG4gIHZhciBzZXBhcmF0b3IgPSBvcHRpb25zLnNlcGFyYXRvciA9PT0gdW5kZWZpbmVkID8gJywgJyA6IG9wdGlvbnMuc2VwYXJhdG9yO1xcXFxuICB2YXIgZGF0YVZhciA9IG9wdGlvbnMuZGF0YVZhciA9PT0gdW5kZWZpbmVkID8gJ2RhdGEnIDogb3B0aW9ucy5kYXRhVmFyO1xcXFxuXFxcXG4gIHZhciB0ZXh0ID0gJyc7XFxcXG4gIGZvciAodmFyIGk9MDsgaTxlcnJvcnMubGVuZ3RoOyBpKyspIHtcXFxcbiAgICB2YXIgZSA9IGVycm9yc1tpXTtcXFxcbiAgICBpZiAoZSkgdGV4dCArPSBkYXRhVmFyICsgZS5kYXRhUGF0aCArICcgJyArIGUubWVzc2FnZSArIHNlcGFyYXRvcjtcXFxcbiAgfVxcXFxuICByZXR1cm4gdGV4dC5zbGljZSgwLCAtc2VwYXJhdG9yLmxlbmd0aCk7XFxcXG59XFxcXG5cXFxcblxcXFxuLyoqXFxcXG4gKiBBZGQgY3VzdG9tIGZvcm1hdFxcXFxuICogQHRoaXMgICBBanZcXFxcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIGZvcm1hdCBuYW1lXFxcXG4gKiBAcGFyYW0ge1N0cmluZ3xSZWdFeHB8RnVuY3Rpb259IGZvcm1hdCBzdHJpbmcgaXMgY29udmVydGVkIHRvIFJlZ0V4cDsgZnVuY3Rpb24gc2hvdWxkIHJldHVybiBib29sZWFuICh0cnVlIHdoZW4gdmFsaWQpXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIGFkZEZvcm1hdChuYW1lLCBmb3JtYXQpIHtcXFxcbiAgaWYgKHR5cGVvZiBmb3JtYXQgPT0gJ3N0cmluZycpIGZvcm1hdCA9IG5ldyBSZWdFeHAoZm9ybWF0KTtcXFxcbiAgdGhpcy5fZm9ybWF0c1tuYW1lXSA9IGZvcm1hdDtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBhZGREcmFmdDZNZXRhU2NoZW1hKHNlbGYpIHtcXFxcbiAgdmFyICRkYXRhU2NoZW1hO1xcXFxuICBpZiAoc2VsZi5fb3B0cy4kZGF0YSkge1xcXFxuICAgICRkYXRhU2NoZW1hID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9yZWZzLyRkYXRhLmpzb24gKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL3JlZnMvJGRhdGEuanNvblxcXFxcXFwiKTtcXFxcbiAgICBzZWxmLmFkZE1ldGFTY2hlbWEoJGRhdGFTY2hlbWEsICRkYXRhU2NoZW1hLiRpZCwgdHJ1ZSk7XFxcXG4gIH1cXFxcbiAgaWYgKHNlbGYuX29wdHMubWV0YSA9PT0gZmFsc2UpIHJldHVybjtcXFxcbiAgdmFyIG1ldGFTY2hlbWEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3JlZnMvanNvbi1zY2hlbWEtZHJhZnQtMDYuanNvbiAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvcmVmcy9qc29uLXNjaGVtYS1kcmFmdC0wNi5qc29uXFxcXFxcXCIpO1xcXFxuICBpZiAoc2VsZi5fb3B0cy4kZGF0YSkgbWV0YVNjaGVtYSA9ICRkYXRhTWV0YVNjaGVtYShtZXRhU2NoZW1hLCBNRVRBX1NVUFBPUlRfREFUQSk7XFxcXG4gIHNlbGYuYWRkTWV0YVNjaGVtYShtZXRhU2NoZW1hLCBNRVRBX1NDSEVNQV9JRCwgdHJ1ZSk7XFxcXG4gIHNlbGYuX3JlZnNbJ2h0dHA6Ly9qc29uLXNjaGVtYS5vcmcvc2NoZW1hJ10gPSBNRVRBX1NDSEVNQV9JRDtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBhZGRJbml0aWFsU2NoZW1hcyhzZWxmKSB7XFxcXG4gIHZhciBvcHRzU2NoZW1hcyA9IHNlbGYuX29wdHMuc2NoZW1hcztcXFxcbiAgaWYgKCFvcHRzU2NoZW1hcykgcmV0dXJuO1xcXFxuICBpZiAoQXJyYXkuaXNBcnJheShvcHRzU2NoZW1hcykpIHNlbGYuYWRkU2NoZW1hKG9wdHNTY2hlbWFzKTtcXFxcbiAgZWxzZSBmb3IgKHZhciBrZXkgaW4gb3B0c1NjaGVtYXMpIHNlbGYuYWRkU2NoZW1hKG9wdHNTY2hlbWFzW2tleV0sIGtleSk7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gYWRkSW5pdGlhbEZvcm1hdHMoc2VsZikge1xcXFxuICBmb3IgKHZhciBuYW1lIGluIHNlbGYuX29wdHMuZm9ybWF0cykge1xcXFxuICAgIHZhciBmb3JtYXQgPSBzZWxmLl9vcHRzLmZvcm1hdHNbbmFtZV07XFxcXG4gICAgc2VsZi5hZGRGb3JtYXQobmFtZSwgZm9ybWF0KTtcXFxcbiAgfVxcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIGNoZWNrVW5pcXVlKHNlbGYsIGlkKSB7XFxcXG4gIGlmIChzZWxmLl9zY2hlbWFzW2lkXSB8fCBzZWxmLl9yZWZzW2lkXSlcXFxcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NjaGVtYSB3aXRoIGtleSBvciBpZCBcXFxcXFxcIicgKyBpZCArICdcXFxcXFxcIiBhbHJlYWR5IGV4aXN0cycpO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIGdldE1ldGFTY2hlbWFPcHRpb25zKHNlbGYpIHtcXFxcbiAgdmFyIG1ldGFPcHRzID0gdXRpbC5jb3B5KHNlbGYuX29wdHMpO1xcXFxuICBmb3IgKHZhciBpPTA7IGk8TUVUQV9JR05PUkVfT1BUSU9OUy5sZW5ndGg7IGkrKylcXFxcbiAgICBkZWxldGUgbWV0YU9wdHNbTUVUQV9JR05PUkVfT1BUSU9OU1tpXV07XFxcXG4gIHJldHVybiBtZXRhT3B0cztcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWhhbll1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTloYW5ZdmJHbGlMMkZxZGk1cWN6ODNPRE5pSWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJR052YlhCcGJHVlRZMmhsYldFZ1BTQnlaWEYxYVhKbEtDY3VMMk52YlhCcGJHVW5LVnh1SUNBc0lISmxjMjlzZG1VZ1BTQnlaWEYxYVhKbEtDY3VMMk52YlhCcGJHVXZjbVZ6YjJ4MlpTY3BYRzRnSUN3Z1EyRmphR1VnUFNCeVpYRjFhWEpsS0NjdUwyTmhZMmhsSnlsY2JpQWdMQ0JUWTJobGJXRlBZbXBsWTNRZ1BTQnlaWEYxYVhKbEtDY3VMMk52YlhCcGJHVXZjMk5vWlcxaFgyOWlhaWNwWEc0Z0lDd2djM1JoWW14bFUzUnlhVzVuYVdaNUlEMGdjbVZ4ZFdseVpTZ25hbk52YmkxemRHRmliR1V0YzNSeWFXNW5hV1o1SnlsY2JpQWdMQ0JtYjNKdFlYUnpJRDBnY21WeGRXbHlaU2duTGk5amIyMXdhV3hsTDJadmNtMWhkSE1uS1Z4dUlDQXNJSEoxYkdWeklEMGdjbVZ4ZFdseVpTZ25MaTlqYjIxd2FXeGxMM0oxYkdWekp5bGNiaUFnTENBa1pHRjBZVTFsZEdGVFkyaGxiV0VnUFNCeVpYRjFhWEpsS0NjdUx5UmtZWFJoSnlsY2JpQWdMQ0J3WVhSMFpYSnVSM0p2ZFhCeklEMGdjbVZ4ZFdseVpTZ25MaTl3WVhSMFpYSnVSM0p2ZFhCekp5bGNiaUFnTENCMWRHbHNJRDBnY21WeGRXbHlaU2duTGk5amIyMXdhV3hsTDNWMGFXd25LVnh1SUNBc0lHTnZJRDBnY21WeGRXbHlaU2duWTI4bktUdGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JCYW5ZN1hHNWNia0ZxZGk1d2NtOTBiM1I1Y0dVdWRtRnNhV1JoZEdVZ1BTQjJZV3hwWkdGMFpUdGNia0ZxZGk1d2NtOTBiM1I1Y0dVdVkyOXRjR2xzWlNBOUlHTnZiWEJwYkdVN1hHNUJhbll1Y0hKdmRHOTBlWEJsTG1Ga1pGTmphR1Z0WVNBOUlHRmtaRk5qYUdWdFlUdGNia0ZxZGk1d2NtOTBiM1I1Y0dVdVlXUmtUV1YwWVZOamFHVnRZU0E5SUdGa1pFMWxkR0ZUWTJobGJXRTdYRzVCYW5ZdWNISnZkRzkwZVhCbExuWmhiR2xrWVhSbFUyTm9aVzFoSUQwZ2RtRnNhV1JoZEdWVFkyaGxiV0U3WEc1QmFuWXVjSEp2ZEc5MGVYQmxMbWRsZEZOamFHVnRZU0E5SUdkbGRGTmphR1Z0WVR0Y2JrRnFkaTV3Y205MGIzUjVjR1V1Y21WdGIzWmxVMk5vWlcxaElEMGdjbVZ0YjNabFUyTm9aVzFoTzF4dVFXcDJMbkJ5YjNSdmRIbHdaUzVoWkdSR2IzSnRZWFFnUFNCaFpHUkdiM0p0WVhRN1hHNUJhbll1Y0hKdmRHOTBlWEJsTG1WeWNtOXljMVJsZUhRZ1BTQmxjbkp2Y25OVVpYaDBPMXh1WEc1QmFuWXVjSEp2ZEc5MGVYQmxMbDloWkdSVFkyaGxiV0VnUFNCZllXUmtVMk5vWlcxaE8xeHVRV3AyTG5CeWIzUnZkSGx3WlM1ZlkyOXRjR2xzWlNBOUlGOWpiMjF3YVd4bE8xeHVYRzVCYW5ZdWNISnZkRzkwZVhCbExtTnZiWEJwYkdWQmMzbHVZeUE5SUhKbGNYVnBjbVVvSnk0dlkyOXRjR2xzWlM5aGMzbHVZeWNwTzF4dWRtRnlJR04xYzNSdmJVdGxlWGR2Y21RZ1BTQnlaWEYxYVhKbEtDY3VMMnRsZVhkdmNtUW5LVHRjYmtGcWRpNXdjbTkwYjNSNWNHVXVZV1JrUzJWNWQyOXlaQ0E5SUdOMWMzUnZiVXRsZVhkdmNtUXVZV1JrTzF4dVFXcDJMbkJ5YjNSdmRIbHdaUzVuWlhSTFpYbDNiM0prSUQwZ1kzVnpkRzl0UzJWNWQyOXlaQzVuWlhRN1hHNUJhbll1Y0hKdmRHOTBlWEJsTG5KbGJXOTJaVXRsZVhkdmNtUWdQU0JqZFhOMGIyMUxaWGwzYjNKa0xuSmxiVzkyWlR0Y2JseHVkbUZ5SUdWeWNtOXlRMnhoYzNObGN5QTlJSEpsY1hWcGNtVW9KeTR2WTI5dGNHbHNaUzlsY25KdmNsOWpiR0Z6YzJWekp5azdYRzVCYW5ZdVZtRnNhV1JoZEdsdmJrVnljbTl5SUQwZ1pYSnliM0pEYkdGemMyVnpMbFpoYkdsa1lYUnBiMjQ3WEc1QmFuWXVUV2x6YzJsdVoxSmxaa1Z5Y205eUlEMGdaWEp5YjNKRGJHRnpjMlZ6TGsxcGMzTnBibWRTWldZN1hHNUJhbll1SkdSaGRHRk5aWFJoVTJOb1pXMWhJRDBnSkdSaGRHRk5aWFJoVTJOb1pXMWhPMXh1WEc1MllYSWdUVVZVUVY5VFEwaEZUVUZmU1VRZ1BTQW5hSFIwY0RvdkwycHpiMjR0YzJOb1pXMWhMbTl5Wnk5a2NtRm1kQzB3Tmk5elkyaGxiV0VuTzF4dVhHNTJZWElnVFVWVVFWOUpSMDVQVWtWZlQxQlVTVTlPVXlBOUlGc2dKM0psYlc5MlpVRmtaR2wwYVc5dVlXd25MQ0FuZFhObFJHVm1ZWFZzZEhNbkxDQW5ZMjlsY21ObFZIbHdaWE1uSUYwN1hHNTJZWElnVFVWVVFWOVRWVkJRVDFKVVgwUkJWRUVnUFNCYkp5OXdjbTl3WlhKMGFXVnpKMTA3WEc1Y2JpOHFLbHh1SUNvZ1EzSmxZWFJsY3lCMllXeHBaR0YwYjNJZ2FXNXpkR0Z1WTJVdVhHNGdLaUJWYzJGblpUb2dZRUZxZGlodmNIUnpLV0JjYmlBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCdmNIUnpJRzl3ZEdsdmJtRnNJRzl3ZEdsdmJuTmNiaUFxSUVCeVpYUjFjbTRnZTA5aWFtVmpkSDBnWVdwMklHbHVjM1JoYm1ObFhHNGdLaTljYm1aMWJtTjBhVzl1SUVGcWRpaHZjSFJ6S1NCN1hHNGdJR2xtSUNnaEtIUm9hWE1nYVc1emRHRnVZMlZ2WmlCQmFuWXBLU0J5WlhSMWNtNGdibVYzSUVGcWRpaHZjSFJ6S1R0Y2JpQWdiM0IwY3lBOUlIUm9hWE11WDI5d2RITWdQU0IxZEdsc0xtTnZjSGtvYjNCMGN5a2dmSHdnZTMwN1hHNGdJSFJvYVhNdVgzTmphR1Z0WVhNZ1BTQjdmVHRjYmlBZ2RHaHBjeTVmY21WbWN5QTlJSHQ5TzF4dUlDQjBhR2x6TGw5bWNtRm5iV1Z1ZEhNZ1BTQjdmVHRjYmlBZ2RHaHBjeTVmWm05eWJXRjBjeUE5SUdadmNtMWhkSE1vYjNCMGN5NW1iM0p0WVhRcE8xeHVJQ0IyWVhJZ2MyTm9aVzFoVlhKcFJtOXliV0YwSUQwZ2RHaHBjeTVmYzJOb1pXMWhWWEpwUm05eWJXRjBJRDBnZEdocGN5NWZabTl5YldGMGMxc25kWEpwTFhKbFptVnlaVzVqWlNkZE8xeHVJQ0IwYUdsekxsOXpZMmhsYldGVmNtbEdiM0p0WVhSR2RXNWpJRDBnWm5WdVkzUnBiMjRnS0hOMGNpa2dleUJ5WlhSMWNtNGdjMk5vWlcxaFZYSnBSbTl5YldGMExuUmxjM1FvYzNSeUtUc2dmVHRjYmx4dUlDQjBhR2x6TGw5allXTm9aU0E5SUc5d2RITXVZMkZqYUdVZ2ZId2dibVYzSUVOaFkyaGxPMXh1SUNCMGFHbHpMbDlzYjJGa2FXNW5VMk5vWlcxaGN5QTlJSHQ5TzF4dUlDQjBhR2x6TGw5amIyMXdhV3hoZEdsdmJuTWdQU0JiWFR0Y2JpQWdkR2hwY3k1U1ZVeEZVeUE5SUhKMWJHVnpLQ2s3WEc0Z0lIUm9hWE11WDJkbGRFbGtJRDBnWTJodmIzTmxSMlYwU1dRb2IzQjBjeWs3WEc1Y2JpQWdiM0IwY3k1c2IyOXdVbVZ4ZFdseVpXUWdQU0J2Y0hSekxteHZiM0JTWlhGMWFYSmxaQ0I4ZkNCSmJtWnBibWwwZVR0Y2JpQWdhV1lnS0c5d2RITXVaWEp5YjNKRVlYUmhVR0YwYUNBOVBTQW5jSEp2Y0dWeWRIa25LU0J2Y0hSekxsOWxjbkp2Y2tSaGRHRlFZWFJvVUhKdmNHVnlkSGtnUFNCMGNuVmxPMXh1SUNCcFppQW9iM0IwY3k1elpYSnBZV3hwZW1VZ1BUMDlJSFZ1WkdWbWFXNWxaQ2tnYjNCMGN5NXpaWEpwWVd4cGVtVWdQU0J6ZEdGaWJHVlRkSEpwYm1kcFpuazdYRzRnSUhSb2FYTXVYMjFsZEdGUGNIUnpJRDBnWjJWMFRXVjBZVk5qYUdWdFlVOXdkR2x2Ym5Nb2RHaHBjeWs3WEc1Y2JpQWdhV1lnS0c5d2RITXVabTl5YldGMGN5a2dZV1JrU1c1cGRHbGhiRVp2Y20xaGRITW9kR2hwY3lrN1hHNGdJR0ZrWkVSeVlXWjBOazFsZEdGVFkyaGxiV0VvZEdocGN5azdYRzRnSUdsbUlDaDBlWEJsYjJZZ2IzQjBjeTV0WlhSaElEMDlJQ2R2WW1wbFkzUW5LU0IwYUdsekxtRmtaRTFsZEdGVFkyaGxiV0VvYjNCMGN5NXRaWFJoS1R0Y2JpQWdZV1JrU1c1cGRHbGhiRk5qYUdWdFlYTW9kR2hwY3lrN1hHNGdJR2xtSUNodmNIUnpMbkJoZEhSbGNtNUhjbTkxY0hNcElIQmhkSFJsY201SGNtOTFjSE1vZEdocGN5azdYRzU5WEc1Y2JseHVYRzR2S2lwY2JpQXFJRlpoYkdsa1lYUmxJR1JoZEdFZ2RYTnBibWNnYzJOb1pXMWhYRzRnS2lCVFkyaGxiV0VnZDJsc2JDQmlaU0JqYjIxd2FXeGxaQ0JoYm1RZ1kyRmphR1ZrSUNoMWMybHVaeUJ6WlhKcFlXeHBlbVZrSUVwVFQwNGdZWE1nYTJWNUxpQmJhbk52YmkxemRHRmliR1V0YzNSeWFXNW5hV1o1WFNob2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmMzVmljM1JoWTJzdmFuTnZiaTF6ZEdGaWJHVXRjM1J5YVc1bmFXWjVLU0JwY3lCMWMyVmtJSFJ2SUhObGNtbGhiR2w2WlM1Y2JpQXFJRUIwYUdseklDQWdRV3AyWEc0Z0tpQkFjR0Z5WVcwZ0lIdFRkSEpwYm1kOFQySnFaV04wZlNCelkyaGxiV0ZMWlhsU1pXWWdhMlY1TENCeVpXWWdiM0lnYzJOb1pXMWhJRzlpYW1WamRGeHVJQ29nUUhCaGNtRnRJQ0I3UVc1NWZTQmtZWFJoSUhSdklHSmxJSFpoYkdsa1lYUmxaRnh1SUNvZ1FISmxkSFZ5YmlCN1FtOXZiR1ZoYm4wZ2RtRnNhV1JoZEdsdmJpQnlaWE4xYkhRdUlFVnljbTl5Y3lCbWNtOXRJSFJvWlNCc1lYTjBJSFpoYkdsa1lYUnBiMjRnZDJsc2JDQmlaU0JoZG1GcGJHRmliR1VnYVc0Z1lHRnFkaTVsY25KdmNuTmdJQ2hoYm1RZ1lXeHpieUJwYmlCamIyMXdhV3hsWkNCelkyaGxiV0U2SUdCelkyaGxiV0V1WlhKeWIzSnpZQ2t1WEc0Z0tpOWNibVoxYm1OMGFXOXVJSFpoYkdsa1lYUmxLSE5qYUdWdFlVdGxlVkpsWml3Z1pHRjBZU2tnZTF4dUlDQjJZWElnZGp0Y2JpQWdhV1lnS0hSNWNHVnZaaUJ6WTJobGJXRkxaWGxTWldZZ1BUMGdKM04wY21sdVp5Y3BJSHRjYmlBZ0lDQjJJRDBnZEdocGN5NW5aWFJUWTJobGJXRW9jMk5vWlcxaFMyVjVVbVZtS1R0Y2JpQWdJQ0JwWmlBb0lYWXBJSFJvY205M0lHNWxkeUJGY25KdmNpZ25ibThnYzJOb1pXMWhJSGRwZEdnZ2EyVjVJRzl5SUhKbFppQmNJaWNnS3lCelkyaGxiV0ZMWlhsU1pXWWdLeUFuWENJbktUdGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQjJZWElnYzJOb1pXMWhUMkpxSUQwZ2RHaHBjeTVmWVdSa1UyTm9aVzFoS0hOamFHVnRZVXRsZVZKbFppazdYRzRnSUNBZ2RpQTlJSE5qYUdWdFlVOWlhaTUyWVd4cFpHRjBaU0I4ZkNCMGFHbHpMbDlqYjIxd2FXeGxLSE5qYUdWdFlVOWlhaWs3WEc0Z0lIMWNibHh1SUNCMllYSWdkbUZzYVdRZ1BTQjJLR1JoZEdFcE8xeHVJQ0JwWmlBb2RpNGtZWE41Ym1NZ1BUMDlJSFJ5ZFdVcFhHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdVgyOXdkSE11WVhONWJtTWdQVDBnSnlvbklEOGdZMjhvZG1Gc2FXUXBJRG9nZG1Gc2FXUTdYRzRnSUhSb2FYTXVaWEp5YjNKeklEMGdkaTVsY25KdmNuTTdYRzRnSUhKbGRIVnliaUIyWVd4cFpEdGNibjFjYmx4dVhHNHZLaXBjYmlBcUlFTnlaV0YwWlNCMllXeHBaR0YwYVc1bklHWjFibU4wYVc5dUlHWnZjaUJ3WVhOelpXUWdjMk5vWlcxaExseHVJQ29nUUhSb2FYTWdJQ0JCYW5aY2JpQXFJRUJ3WVhKaGJTQWdlMDlpYW1WamRIMGdjMk5vWlcxaElITmphR1Z0WVNCdlltcGxZM1JjYmlBcUlFQndZWEpoYlNBZ2UwSnZiMnhsWVc1OUlGOXRaWFJoSUhSeWRXVWdhV1lnYzJOb1pXMWhJR2x6SUdFZ2JXVjBZUzF6WTJobGJXRXVJRlZ6WldRZ2FXNTBaWEp1WVd4c2VTQjBieUJqYjIxd2FXeGxJRzFsZEdFZ2MyTm9aVzFoY3lCdlppQmpkWE4wYjIwZ2EyVjVkMjl5WkhNdVhHNGdLaUJBY21WMGRYSnVJSHRHZFc1amRHbHZibjBnZG1Gc2FXUmhkR2x1WnlCbWRXNWpkR2x2Ymx4dUlDb3ZYRzVtZFc1amRHbHZiaUJqYjIxd2FXeGxLSE5qYUdWdFlTd2dYMjFsZEdFcElIdGNiaUFnZG1GeUlITmphR1Z0WVU5aWFpQTlJSFJvYVhNdVgyRmtaRk5qYUdWdFlTaHpZMmhsYldFc0lIVnVaR1ZtYVc1bFpDd2dYMjFsZEdFcE8xeHVJQ0J5WlhSMWNtNGdjMk5vWlcxaFQySnFMblpoYkdsa1lYUmxJSHg4SUhSb2FYTXVYMk52YlhCcGJHVW9jMk5vWlcxaFQySnFLVHRjYm4xY2JseHVYRzR2S2lwY2JpQXFJRUZrWkhNZ2MyTm9aVzFoSUhSdklIUm9aU0JwYm5OMFlXNWpaUzVjYmlBcUlFQjBhR2x6SUNBZ1FXcDJYRzRnS2lCQWNHRnlZVzBnZTA5aWFtVmpkSHhCY25KaGVYMGdjMk5vWlcxaElITmphR1Z0WVNCdmNpQmhjbkpoZVNCdlppQnpZMmhsYldGekxpQkpaaUJoY25KaGVTQnBjeUJ3WVhOelpXUXNJR0JyWlhsZ0lHRnVaQ0J2ZEdobGNpQndZWEpoYldWMFpYSnpJSGRwYkd3Z1ltVWdhV2R1YjNKbFpDNWNiaUFxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0JyWlhrZ1QzQjBhVzl1WVd3Z2MyTm9aVzFoSUd0bGVTNGdRMkZ1SUdKbElIQmhjM05sWkNCMGJ5QmdkbUZzYVdSaGRHVmdJRzFsZEdodlpDQnBibk4wWldGa0lHOW1JSE5qYUdWdFlTQnZZbXBsWTNRZ2IzSWdhV1F2Y21WbUxpQlBibVVnYzJOb1pXMWhJSEJsY2lCcGJuTjBZVzVqWlNCallXNGdhR0YyWlNCbGJYQjBlU0JnYVdSZ0lHRnVaQ0JnYTJWNVlDNWNiaUFxSUVCd1lYSmhiU0I3UW05dmJHVmhibjBnWDNOcmFYQldZV3hwWkdGMGFXOXVJSFJ5ZFdVZ2RHOGdjMnRwY0NCelkyaGxiV0VnZG1Gc2FXUmhkR2x2Ymk0Z1ZYTmxaQ0JwYm5SbGNtNWhiR3g1TENCdmNIUnBiMjRnZG1Gc2FXUmhkR1ZUWTJobGJXRWdjMmh2ZFd4a0lHSmxJSFZ6WldRZ2FXNXpkR1ZoWkM1Y2JpQXFJRUJ3WVhKaGJTQjdRbTl2YkdWaGJuMGdYMjFsZEdFZ2RISjFaU0JwWmlCelkyaGxiV0VnYVhNZ1lTQnRaWFJoTFhOamFHVnRZUzRnVlhObFpDQnBiblJsY201aGJHeDVMQ0JoWkdSTlpYUmhVMk5vWlcxaElITm9iM1ZzWkNCaVpTQjFjMlZrSUdsdWMzUmxZV1F1WEc0Z0tpOWNibVoxYm1OMGFXOXVJR0ZrWkZOamFHVnRZU2h6WTJobGJXRXNJR3RsZVN3Z1gzTnJhWEJXWVd4cFpHRjBhVzl1TENCZmJXVjBZU2tnZTF4dUlDQnBaaUFvUVhKeVlYa3VhWE5CY25KaGVTaHpZMmhsYldFcEtYdGNiaUFnSUNCbWIzSWdLSFpoY2lCcFBUQTdJR2s4YzJOb1pXMWhMbXhsYm1kMGFEc2dhU3NyS1NCMGFHbHpMbUZrWkZOamFHVnRZU2h6WTJobGJXRmJhVjBzSUhWdVpHVm1hVzVsWkN3Z1gzTnJhWEJXWVd4cFpHRjBhVzl1TENCZmJXVjBZU2s3WEc0Z0lDQWdjbVYwZFhKdU8xeHVJQ0I5WEc0Z0lIWmhjaUJwWkNBOUlIUm9hWE11WDJkbGRFbGtLSE5qYUdWdFlTazdYRzRnSUdsbUlDaHBaQ0FoUFQwZ2RXNWtaV1pwYm1Wa0lDWW1JSFI1Y0dWdlppQnBaQ0FoUFNBbmMzUnlhVzVuSnlsY2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KM05qYUdWdFlTQnBaQ0J0ZFhOMElHSmxJSE4wY21sdVp5Y3BPMXh1SUNCclpYa2dQU0J5WlhOdmJIWmxMbTV2Y20xaGJHbDZaVWxrS0d0bGVTQjhmQ0JwWkNrN1hHNGdJR05vWldOclZXNXBjWFZsS0hSb2FYTXNJR3RsZVNrN1hHNGdJSFJvYVhNdVgzTmphR1Z0WVhOYmEyVjVYU0E5SUhSb2FYTXVYMkZrWkZOamFHVnRZU2h6WTJobGJXRXNJRjl6YTJsd1ZtRnNhV1JoZEdsdmJpd2dYMjFsZEdFc0lIUnlkV1VwTzF4dWZWeHVYRzVjYmk4cUtseHVJQ29nUVdSa0lITmphR1Z0WVNCMGFHRjBJSGRwYkd3Z1ltVWdkWE5sWkNCMGJ5QjJZV3hwWkdGMFpTQnZkR2hsY2lCelkyaGxiV0Z6WEc0Z0tpQnZjSFJwYjI1eklHbHVJRTFGVkVGZlNVZE9UMUpGWDA5UVZFbFBUbE1nWVhKbElHRnNkMkY1SUhObGRDQjBieUJtWVd4elpWeHVJQ29nUUhSb2FYTWdJQ0JCYW5aY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQnpZMmhsYldFZ2MyTm9aVzFoSUc5aWFtVmpkRnh1SUNvZ1FIQmhjbUZ0SUh0VGRISnBibWQ5SUd0bGVTQnZjSFJwYjI1aGJDQnpZMmhsYldFZ2EyVjVYRzRnS2lCQWNHRnlZVzBnZTBKdmIyeGxZVzU5SUhOcmFYQldZV3hwWkdGMGFXOXVJSFJ5ZFdVZ2RHOGdjMnRwY0NCelkyaGxiV0VnZG1Gc2FXUmhkR2x2Yml3Z1kyRnVJR0psSUhWelpXUWdkRzhnYjNabGNuSnBaR1VnZG1Gc2FXUmhkR1ZUWTJobGJXRWdiM0IwYVc5dUlHWnZjaUJ0WlhSaExYTmphR1Z0WVZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJoWkdSTlpYUmhVMk5vWlcxaEtITmphR1Z0WVN3Z2EyVjVMQ0J6YTJsd1ZtRnNhV1JoZEdsdmJpa2dlMXh1SUNCMGFHbHpMbUZrWkZOamFHVnRZU2h6WTJobGJXRXNJR3RsZVN3Z2MydHBjRlpoYkdsa1lYUnBiMjRzSUhSeWRXVXBPMXh1ZlZ4dVhHNWNiaThxS2x4dUlDb2dWbUZzYVdSaGRHVWdjMk5vWlcxaFhHNGdLaUJBZEdocGN5QWdJRUZxZGx4dUlDb2dRSEJoY21GdElIdFBZbXBsWTNSOUlITmphR1Z0WVNCelkyaGxiV0VnZEc4Z2RtRnNhV1JoZEdWY2JpQXFJRUJ3WVhKaGJTQjdRbTl2YkdWaGJuMGdkR2h5YjNkUGNreHZaMFZ5Y205eUlIQmhjM01nZEhKMVpTQjBieUIwYUhKdmR5QW9iM0lnYkc5bktTQmhiaUJsY25KdmNpQnBaaUJwYm5aaGJHbGtYRzRnS2lCQWNtVjBkWEp1SUh0Q2IyOXNaV0Z1ZlNCMGNuVmxJR2xtSUhOamFHVnRZU0JwY3lCMllXeHBaRnh1SUNvdlhHNW1kVzVqZEdsdmJpQjJZV3hwWkdGMFpWTmphR1Z0WVNoelkyaGxiV0VzSUhSb2NtOTNUM0pNYjJkRmNuSnZjaWtnZTF4dUlDQjJZWElnSkhOamFHVnRZU0E5SUhOamFHVnRZUzRrYzJOb1pXMWhPMXh1SUNCcFppQW9KSE5qYUdWdFlTQWhQVDBnZFc1a1pXWnBibVZrSUNZbUlIUjVjR1Z2WmlBa2MyTm9aVzFoSUNFOUlDZHpkSEpwYm1jbktWeHVJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduSkhOamFHVnRZU0J0ZFhOMElHSmxJR0VnYzNSeWFXNW5KeWs3WEc0Z0lDUnpZMmhsYldFZ1BTQWtjMk5vWlcxaElIeDhJSFJvYVhNdVgyOXdkSE11WkdWbVlYVnNkRTFsZEdFZ2ZId2daR1ZtWVhWc2RFMWxkR0VvZEdocGN5azdYRzRnSUdsbUlDZ2hKSE5qYUdWdFlTa2dlMXh1SUNBZ0lHTnZibk52YkdVdWQyRnliaWduYldWMFlTMXpZMmhsYldFZ2JtOTBJR0YyWVdsc1lXSnNaU2NwTzF4dUlDQWdJSFJvYVhNdVpYSnliM0p6SUQwZ2JuVnNiRHRjYmlBZ0lDQnlaWFIxY200Z2RISjFaVHRjYmlBZ2ZWeHVJQ0IyWVhJZ1kzVnljbVZ1ZEZWeWFVWnZjbTFoZENBOUlIUm9hWE11WDJadmNtMWhkSE11ZFhKcE8xeHVJQ0IwYUdsekxsOW1iM0p0WVhSekxuVnlhU0E5SUhSNWNHVnZaaUJqZFhKeVpXNTBWWEpwUm05eWJXRjBJRDA5SUNkbWRXNWpkR2x2YmlkY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0EvSUhSb2FYTXVYM05qYUdWdFlWVnlhVVp2Y20xaGRFWjFibU5jYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTZJSFJvYVhNdVgzTmphR1Z0WVZWeWFVWnZjbTFoZER0Y2JpQWdkbUZ5SUhaaGJHbGtPMXh1SUNCMGNua2dleUIyWVd4cFpDQTlJSFJvYVhNdWRtRnNhV1JoZEdVb0pITmphR1Z0WVN3Z2MyTm9aVzFoS1RzZ2ZWeHVJQ0JtYVc1aGJHeDVJSHNnZEdocGN5NWZabTl5YldGMGN5NTFjbWtnUFNCamRYSnlaVzUwVlhKcFJtOXliV0YwT3lCOVhHNGdJR2xtSUNnaGRtRnNhV1FnSmlZZ2RHaHliM2RQY2t4dlowVnljbTl5S1NCN1hHNGdJQ0FnZG1GeUlHMWxjM05oWjJVZ1BTQW5jMk5vWlcxaElHbHpJR2x1ZG1Gc2FXUTZJQ2NnS3lCMGFHbHpMbVZ5Y205eWMxUmxlSFFvS1R0Y2JpQWdJQ0JwWmlBb2RHaHBjeTVmYjNCMGN5NTJZV3hwWkdGMFpWTmphR1Z0WVNBOVBTQW5iRzluSnlrZ1kyOXVjMjlzWlM1bGNuSnZjaWh0WlhOellXZGxLVHRjYmlBZ0lDQmxiSE5sSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWh0WlhOellXZGxLVHRjYmlBZ2ZWeHVJQ0J5WlhSMWNtNGdkbUZzYVdRN1hHNTlYRzVjYmx4dVpuVnVZM1JwYjI0Z1pHVm1ZWFZzZEUxbGRHRW9jMlZzWmlrZ2UxeHVJQ0IyWVhJZ2JXVjBZU0E5SUhObGJHWXVYMjl3ZEhNdWJXVjBZVHRjYmlBZ2MyVnNaaTVmYjNCMGN5NWtaV1poZFd4MFRXVjBZU0E5SUhSNWNHVnZaaUJ0WlhSaElEMDlJQ2R2WW1wbFkzUW5YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUHlCelpXeG1MbDluWlhSSlpDaHRaWFJoS1NCOGZDQnRaWFJoWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ09pQnpaV3htTG1kbGRGTmphR1Z0WVNoTlJWUkJYMU5EU0VWTlFWOUpSQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEOGdUVVZVUVY5VFEwaEZUVUZmU1VSY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRG9nZFc1a1pXWnBibVZrTzF4dUlDQnlaWFIxY200Z2MyVnNaaTVmYjNCMGN5NWtaV1poZFd4MFRXVjBZVHRjYm4xY2JseHVYRzR2S2lwY2JpQXFJRWRsZENCamIyMXdhV3hsWkNCelkyaGxiV0VnWm5KdmJTQjBhR1VnYVc1emRHRnVZMlVnWW5rZ1lHdGxlV0FnYjNJZ1lISmxabUF1WEc0Z0tpQkFkR2hwY3lBZ0lFRnFkbHh1SUNvZ1FIQmhjbUZ0SUNCN1UzUnlhVzVuZlNCclpYbFNaV1lnWUd0bGVXQWdkR2hoZENCM1lYTWdjR0Z6YzJWa0lIUnZJR0JoWkdSVFkyaGxiV0ZnSUc5eUlHWjFiR3dnYzJOb1pXMWhJSEpsWm1WeVpXNWpaU0FvWUhOamFHVnRZUzVwWkdBZ2IzSWdjbVZ6YjJ4MlpXUWdhV1FwTGx4dUlDb2dRSEpsZEhWeWJpQjdSblZ1WTNScGIyNTlJSE5qYUdWdFlTQjJZV3hwWkdGMGFXNW5JR1oxYm1OMGFXOXVJQ2gzYVhSb0lIQnliM0JsY25SNUlHQnpZMmhsYldGZ0tTNWNiaUFxTDF4dVpuVnVZM1JwYjI0Z1oyVjBVMk5vWlcxaEtHdGxlVkpsWmlrZ2UxeHVJQ0IyWVhJZ2MyTm9aVzFoVDJKcUlEMGdYMmRsZEZOamFHVnRZVTlpYWloMGFHbHpMQ0JyWlhsU1pXWXBPMXh1SUNCemQybDBZMmdnS0hSNWNHVnZaaUJ6WTJobGJXRlBZbW9wSUh0Y2JpQWdJQ0JqWVhObElDZHZZbXBsWTNRbk9pQnlaWFIxY200Z2MyTm9aVzFoVDJKcUxuWmhiR2xrWVhSbElIeDhJSFJvYVhNdVgyTnZiWEJwYkdVb2MyTm9aVzFoVDJKcUtUdGNiaUFnSUNCallYTmxJQ2R6ZEhKcGJtY25PaUJ5WlhSMWNtNGdkR2hwY3k1blpYUlRZMmhsYldFb2MyTm9aVzFoVDJKcUtUdGNiaUFnSUNCallYTmxJQ2QxYm1SbFptbHVaV1FuT2lCeVpYUjFjbTRnWDJkbGRGTmphR1Z0WVVaeVlXZHRaVzUwS0hSb2FYTXNJR3RsZVZKbFppazdYRzRnSUgxY2JuMWNibHh1WEc1bWRXNWpkR2x2YmlCZloyVjBVMk5vWlcxaFJuSmhaMjFsYm5Rb2MyVnNaaXdnY21WbUtTQjdYRzRnSUhaaGNpQnlaWE1nUFNCeVpYTnZiSFpsTG5OamFHVnRZUzVqWVd4c0tITmxiR1lzSUhzZ2MyTm9aVzFoT2lCN2ZTQjlMQ0J5WldZcE8xeHVJQ0JwWmlBb2NtVnpLU0I3WEc0Z0lDQWdkbUZ5SUhOamFHVnRZU0E5SUhKbGN5NXpZMmhsYldGY2JpQWdJQ0FnSUN3Z2NtOXZkQ0E5SUhKbGN5NXliMjkwWEc0Z0lDQWdJQ0FzSUdKaGMyVkpaQ0E5SUhKbGN5NWlZWE5sU1dRN1hHNGdJQ0FnZG1GeUlIWWdQU0JqYjIxd2FXeGxVMk5vWlcxaExtTmhiR3dvYzJWc1ppd2djMk5vWlcxaExDQnliMjkwTENCMWJtUmxabWx1WldRc0lHSmhjMlZKWkNrN1hHNGdJQ0FnYzJWc1ppNWZabkpoWjIxbGJuUnpXM0psWmwwZ1BTQnVaWGNnVTJOb1pXMWhUMkpxWldOMEtIdGNiaUFnSUNBZ0lISmxaam9nY21WbUxGeHVJQ0FnSUNBZ1puSmhaMjFsYm5RNklIUnlkV1VzWEc0Z0lDQWdJQ0J6WTJobGJXRTZJSE5qYUdWdFlTeGNiaUFnSUNBZ0lISnZiM1E2SUhKdmIzUXNYRzRnSUNBZ0lDQmlZWE5sU1dRNklHSmhjMlZKWkN4Y2JpQWdJQ0FnSUhaaGJHbGtZWFJsT2lCMlhHNGdJQ0FnZlNrN1hHNGdJQ0FnY21WMGRYSnVJSFk3WEc0Z0lIMWNibjFjYmx4dVhHNW1kVzVqZEdsdmJpQmZaMlYwVTJOb1pXMWhUMkpxS0hObGJHWXNJR3RsZVZKbFppa2dlMXh1SUNCclpYbFNaV1lnUFNCeVpYTnZiSFpsTG01dmNtMWhiR2w2WlVsa0tHdGxlVkpsWmlrN1hHNGdJSEpsZEhWeWJpQnpaV3htTGw5elkyaGxiV0Z6VzJ0bGVWSmxabDBnZkh3Z2MyVnNaaTVmY21WbWMxdHJaWGxTWldaZElIeDhJSE5sYkdZdVgyWnlZV2R0Wlc1MGMxdHJaWGxTWldaZE8xeHVmVnh1WEc1Y2JpOHFLbHh1SUNvZ1VtVnRiM1psSUdOaFkyaGxaQ0J6WTJobGJXRW9jeWt1WEc0Z0tpQkpaaUJ1YnlCd1lYSmhiV1YwWlhJZ2FYTWdjR0Z6YzJWa0lHRnNiQ0J6WTJobGJXRnpJR0oxZENCdFpYUmhMWE5qYUdWdFlYTWdZWEpsSUhKbGJXOTJaV1F1WEc0Z0tpQkpaaUJTWldkRmVIQWdhWE1nY0dGemMyVmtJR0ZzYkNCelkyaGxiV0Z6SUhkcGRHZ2dhMlY1TDJsa0lHMWhkR05vYVc1bklIQmhkSFJsY200Z1luVjBJRzFsZEdFdGMyTm9aVzFoY3lCaGNtVWdjbVZ0YjNabFpDNWNiaUFxSUVWMlpXNGdhV1lnYzJOb1pXMWhJR2x6SUhKbFptVnlaVzVqWldRZ1lua2diM1JvWlhJZ2MyTm9aVzFoY3lCcGRDQnpkR2xzYkNCallXNGdZbVVnY21WdGIzWmxaQ0JoY3lCdmRHaGxjaUJ6WTJobGJXRnpJR2hoZG1VZ2JHOWpZV3dnY21WbVpYSmxibU5sY3k1Y2JpQXFJRUIwYUdseklDQWdRV3AyWEc0Z0tpQkFjR0Z5WVcwZ0lIdFRkSEpwYm1kOFQySnFaV04wZkZKbFowVjRjSDBnYzJOb1pXMWhTMlY1VW1WbUlHdGxlU3dnY21WbUxDQndZWFIwWlhKdUlIUnZJRzFoZEdOb0lHdGxlUzl5WldZZ2IzSWdjMk5vWlcxaElHOWlhbVZqZEZ4dUlDb3ZYRzVtZFc1amRHbHZiaUJ5WlcxdmRtVlRZMmhsYldFb2MyTm9aVzFoUzJWNVVtVm1LU0I3WEc0Z0lHbG1JQ2h6WTJobGJXRkxaWGxTWldZZ2FXNXpkR0Z1WTJWdlppQlNaV2RGZUhBcElIdGNiaUFnSUNCZmNtVnRiM1psUVd4c1UyTm9aVzFoY3loMGFHbHpMQ0IwYUdsekxsOXpZMmhsYldGekxDQnpZMmhsYldGTFpYbFNaV1lwTzF4dUlDQWdJRjl5WlcxdmRtVkJiR3hUWTJobGJXRnpLSFJvYVhNc0lIUm9hWE11WDNKbFpuTXNJSE5qYUdWdFlVdGxlVkpsWmlrN1hHNGdJQ0FnY21WMGRYSnVPMXh1SUNCOVhHNGdJSE4zYVhSamFDQW9kSGx3Wlc5bUlITmphR1Z0WVV0bGVWSmxaaWtnZTF4dUlDQWdJR05oYzJVZ0ozVnVaR1ZtYVc1bFpDYzZYRzRnSUNBZ0lDQmZjbVZ0YjNabFFXeHNVMk5vWlcxaGN5aDBhR2x6TENCMGFHbHpMbDl6WTJobGJXRnpLVHRjYmlBZ0lDQWdJRjl5WlcxdmRtVkJiR3hUWTJobGJXRnpLSFJvYVhNc0lIUm9hWE11WDNKbFpuTXBPMXh1SUNBZ0lDQWdkR2hwY3k1ZlkyRmphR1V1WTJ4bFlYSW9LVHRjYmlBZ0lDQWdJSEpsZEhWeWJqdGNiaUFnSUNCallYTmxJQ2R6ZEhKcGJtY25PbHh1SUNBZ0lDQWdkbUZ5SUhOamFHVnRZVTlpYWlBOUlGOW5aWFJUWTJobGJXRlBZbW9vZEdocGN5d2djMk5vWlcxaFMyVjVVbVZtS1R0Y2JpQWdJQ0FnSUdsbUlDaHpZMmhsYldGUFltb3BJSFJvYVhNdVgyTmhZMmhsTG1SbGJDaHpZMmhsYldGUFltb3VZMkZqYUdWTFpYa3BPMXh1SUNBZ0lDQWdaR1ZzWlhSbElIUm9hWE11WDNOamFHVnRZWE5iYzJOb1pXMWhTMlY1VW1WbVhUdGNiaUFnSUNBZ0lHUmxiR1YwWlNCMGFHbHpMbDl5WldaelczTmphR1Z0WVV0bGVWSmxabDA3WEc0Z0lDQWdJQ0J5WlhSMWNtNDdYRzRnSUNBZ1kyRnpaU0FuYjJKcVpXTjBKenBjYmlBZ0lDQWdJSFpoY2lCelpYSnBZV3hwZW1VZ1BTQjBhR2x6TGw5dmNIUnpMbk5sY21saGJHbDZaVHRjYmlBZ0lDQWdJSFpoY2lCallXTm9aVXRsZVNBOUlITmxjbWxoYkdsNlpTQS9JSE5sY21saGJHbDZaU2h6WTJobGJXRkxaWGxTWldZcElEb2djMk5vWlcxaFMyVjVVbVZtTzF4dUlDQWdJQ0FnZEdocGN5NWZZMkZqYUdVdVpHVnNLR05oWTJobFMyVjVLVHRjYmlBZ0lDQWdJSFpoY2lCcFpDQTlJSFJvYVhNdVgyZGxkRWxrS0hOamFHVnRZVXRsZVZKbFppazdYRzRnSUNBZ0lDQnBaaUFvYVdRcElIdGNiaUFnSUNBZ0lDQWdhV1FnUFNCeVpYTnZiSFpsTG01dmNtMWhiR2w2WlVsa0tHbGtLVHRjYmlBZ0lDQWdJQ0FnWkdWc1pYUmxJSFJvYVhNdVgzTmphR1Z0WVhOYmFXUmRPMXh1SUNBZ0lDQWdJQ0JrWld4bGRHVWdkR2hwY3k1ZmNtVm1jMXRwWkYwN1hHNGdJQ0FnSUNCOVhHNGdJSDFjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJmY21WdGIzWmxRV3hzVTJOb1pXMWhjeWh6Wld4bUxDQnpZMmhsYldGekxDQnlaV2RsZUNrZ2UxeHVJQ0JtYjNJZ0tIWmhjaUJyWlhsU1pXWWdhVzRnYzJOb1pXMWhjeWtnZTF4dUlDQWdJSFpoY2lCelkyaGxiV0ZQWW1vZ1BTQnpZMmhsYldGelcydGxlVkpsWmwwN1hHNGdJQ0FnYVdZZ0tDRnpZMmhsYldGUFltb3ViV1YwWVNBbUppQW9JWEpsWjJWNElIeDhJSEpsWjJWNExuUmxjM1FvYTJWNVVtVm1LU2twSUh0Y2JpQWdJQ0FnSUhObGJHWXVYMk5oWTJobExtUmxiQ2h6WTJobGJXRlBZbW91WTJGamFHVkxaWGtwTzF4dUlDQWdJQ0FnWkdWc1pYUmxJSE5qYUdWdFlYTmJhMlY1VW1WbVhUdGNiaUFnSUNCOVhHNGdJSDFjYm4xY2JseHVYRzR2S2lCQWRHaHBjeUFnSUVGcWRpQXFMMXh1Wm5WdVkzUnBiMjRnWDJGa1pGTmphR1Z0WVNoelkyaGxiV0VzSUhOcmFYQldZV3hwWkdGMGFXOXVMQ0J0WlhSaExDQnphRzkxYkdSQlpHUlRZMmhsYldFcElIdGNiaUFnYVdZZ0tIUjVjR1Z2WmlCelkyaGxiV0VnSVQwZ0oyOWlhbVZqZENjZ0ppWWdkSGx3Wlc5bUlITmphR1Z0WVNBaFBTQW5ZbTl2YkdWaGJpY3BYRzRnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NkelkyaGxiV0VnYzJodmRXeGtJR0psSUc5aWFtVmpkQ0J2Y2lCaWIyOXNaV0Z1SnlrN1hHNGdJSFpoY2lCelpYSnBZV3hwZW1VZ1BTQjBhR2x6TGw5dmNIUnpMbk5sY21saGJHbDZaVHRjYmlBZ2RtRnlJR05oWTJobFMyVjVJRDBnYzJWeWFXRnNhWHBsSUQ4Z2MyVnlhV0ZzYVhwbEtITmphR1Z0WVNrZ09pQnpZMmhsYldFN1hHNGdJSFpoY2lCallXTm9aV1FnUFNCMGFHbHpMbDlqWVdOb1pTNW5aWFFvWTJGamFHVkxaWGtwTzF4dUlDQnBaaUFvWTJGamFHVmtLU0J5WlhSMWNtNGdZMkZqYUdWa08xeHVYRzRnSUhOb2IzVnNaRUZrWkZOamFHVnRZU0E5SUhOb2IzVnNaRUZrWkZOamFHVnRZU0I4ZkNCMGFHbHpMbDl2Y0hSekxtRmtaRlZ6WldSVFkyaGxiV0VnSVQwOUlHWmhiSE5sTzF4dVhHNGdJSFpoY2lCcFpDQTlJSEpsYzI5c2RtVXVibTl5YldGc2FYcGxTV1FvZEdocGN5NWZaMlYwU1dRb2MyTm9aVzFoS1NrN1hHNGdJR2xtSUNocFpDQW1KaUJ6YUc5MWJHUkJaR1JUWTJobGJXRXBJR05vWldOclZXNXBjWFZsS0hSb2FYTXNJR2xrS1R0Y2JseHVJQ0IyWVhJZ2QybHNiRlpoYkdsa1lYUmxJRDBnZEdocGN5NWZiM0IwY3k1MllXeHBaR0YwWlZOamFHVnRZU0FoUFQwZ1ptRnNjMlVnSmlZZ0lYTnJhWEJXWVd4cFpHRjBhVzl1TzF4dUlDQjJZWElnY21WamRYSnphWFpsVFdWMFlUdGNiaUFnYVdZZ0tIZHBiR3hXWVd4cFpHRjBaU0FtSmlBaEtISmxZM1Z5YzJsMlpVMWxkR0VnUFNCcFpDQW1KaUJwWkNBOVBTQnlaWE52YkhabExtNXZjbTFoYkdsNlpVbGtLSE5qYUdWdFlTNGtjMk5vWlcxaEtTa3BYRzRnSUNBZ2RHaHBjeTUyWVd4cFpHRjBaVk5qYUdWdFlTaHpZMmhsYldFc0lIUnlkV1VwTzF4dVhHNGdJSFpoY2lCc2IyTmhiRkpsWm5NZ1BTQnlaWE52YkhabExtbGtjeTVqWVd4c0tIUm9hWE1zSUhOamFHVnRZU2s3WEc1Y2JpQWdkbUZ5SUhOamFHVnRZVTlpYWlBOUlHNWxkeUJUWTJobGJXRlBZbXBsWTNRb2UxeHVJQ0FnSUdsa09pQnBaQ3hjYmlBZ0lDQnpZMmhsYldFNklITmphR1Z0WVN4Y2JpQWdJQ0JzYjJOaGJGSmxabk02SUd4dlkyRnNVbVZtY3l4Y2JpQWdJQ0JqWVdOb1pVdGxlVG9nWTJGamFHVkxaWGtzWEc0Z0lDQWdiV1YwWVRvZ2JXVjBZVnh1SUNCOUtUdGNibHh1SUNCcFppQW9hV1JiTUYwZ0lUMGdKeU1uSUNZbUlITm9iM1ZzWkVGa1pGTmphR1Z0WVNrZ2RHaHBjeTVmY21WbWMxdHBaRjBnUFNCelkyaGxiV0ZQWW1vN1hHNGdJSFJvYVhNdVgyTmhZMmhsTG5CMWRDaGpZV05vWlV0bGVTd2djMk5vWlcxaFQySnFLVHRjYmx4dUlDQnBaaUFvZDJsc2JGWmhiR2xrWVhSbElDWW1JSEpsWTNWeWMybDJaVTFsZEdFcElIUm9hWE11ZG1Gc2FXUmhkR1ZUWTJobGJXRW9jMk5vWlcxaExDQjBjblZsS1R0Y2JseHVJQ0J5WlhSMWNtNGdjMk5vWlcxaFQySnFPMXh1ZlZ4dVhHNWNiaThxSUVCMGFHbHpJQ0FnUVdwMklDb3ZYRzVtZFc1amRHbHZiaUJmWTI5dGNHbHNaU2h6WTJobGJXRlBZbW9zSUhKdmIzUXBJSHRjYmlBZ2FXWWdLSE5qYUdWdFlVOWlhaTVqYjIxd2FXeHBibWNwSUh0Y2JpQWdJQ0J6WTJobGJXRlBZbW91ZG1Gc2FXUmhkR1VnUFNCallXeHNWbUZzYVdSaGRHVTdYRzRnSUNBZ1kyRnNiRlpoYkdsa1lYUmxMbk5qYUdWdFlTQTlJSE5qYUdWdFlVOWlhaTV6WTJobGJXRTdYRzRnSUNBZ1kyRnNiRlpoYkdsa1lYUmxMbVZ5Y205eWN5QTlJRzUxYkd3N1hHNGdJQ0FnWTJGc2JGWmhiR2xrWVhSbExuSnZiM1FnUFNCeWIyOTBJRDhnY205dmRDQTZJR05oYkd4V1lXeHBaR0YwWlR0Y2JpQWdJQ0JwWmlBb2MyTm9aVzFoVDJKcUxuTmphR1Z0WVM0a1lYTjVibU1nUFQwOUlIUnlkV1VwWEc0Z0lDQWdJQ0JqWVd4c1ZtRnNhV1JoZEdVdUpHRnplVzVqSUQwZ2RISjFaVHRjYmlBZ0lDQnlaWFIxY200Z1kyRnNiRlpoYkdsa1lYUmxPMXh1SUNCOVhHNGdJSE5qYUdWdFlVOWlhaTVqYjIxd2FXeHBibWNnUFNCMGNuVmxPMXh1WEc0Z0lIWmhjaUJqZFhKeVpXNTBUM0IwY3p0Y2JpQWdhV1lnS0hOamFHVnRZVTlpYWk1dFpYUmhLU0I3WEc0Z0lDQWdZM1Z5Y21WdWRFOXdkSE1nUFNCMGFHbHpMbDl2Y0hSek8xeHVJQ0FnSUhSb2FYTXVYMjl3ZEhNZ1BTQjBhR2x6TGw5dFpYUmhUM0IwY3p0Y2JpQWdmVnh1WEc0Z0lIWmhjaUIyTzF4dUlDQjBjbmtnZXlCMklEMGdZMjl0Y0dsc1pWTmphR1Z0WVM1allXeHNLSFJvYVhNc0lITmphR1Z0WVU5aWFpNXpZMmhsYldFc0lISnZiM1FzSUhOamFHVnRZVTlpYWk1c2IyTmhiRkpsWm5NcE95QjlYRzRnSUdacGJtRnNiSGtnZTF4dUlDQWdJSE5qYUdWdFlVOWlhaTVqYjIxd2FXeHBibWNnUFNCbVlXeHpaVHRjYmlBZ0lDQnBaaUFvYzJOb1pXMWhUMkpxTG0xbGRHRXBJSFJvYVhNdVgyOXdkSE1nUFNCamRYSnlaVzUwVDNCMGN6dGNiaUFnZlZ4dVhHNGdJSE5qYUdWdFlVOWlhaTUyWVd4cFpHRjBaU0E5SUhZN1hHNGdJSE5qYUdWdFlVOWlhaTV5WldaeklEMGdkaTV5Wldaek8xeHVJQ0J6WTJobGJXRlBZbW91Y21WbVZtRnNJRDBnZGk1eVpXWldZV3c3WEc0Z0lITmphR1Z0WVU5aWFpNXliMjkwSUQwZ2RpNXliMjkwTzF4dUlDQnlaWFIxY200Z2RqdGNibHh1WEc0Z0lHWjFibU4wYVc5dUlHTmhiR3hXWVd4cFpHRjBaU2dwSUh0Y2JpQWdJQ0IyWVhJZ1gzWmhiR2xrWVhSbElEMGdjMk5vWlcxaFQySnFMblpoYkdsa1lYUmxPMXh1SUNBZ0lIWmhjaUJ5WlhOMWJIUWdQU0JmZG1Gc2FXUmhkR1V1WVhCd2JIa29iblZzYkN3Z1lYSm5kVzFsYm5SektUdGNiaUFnSUNCallXeHNWbUZzYVdSaGRHVXVaWEp5YjNKeklEMGdYM1poYkdsa1lYUmxMbVZ5Y205eWN6dGNiaUFnSUNCeVpYUjFjbTRnY21WemRXeDBPMXh1SUNCOVhHNTlYRzVjYmx4dVpuVnVZM1JwYjI0Z1kyaHZiM05sUjJWMFNXUW9iM0IwY3lrZ2UxeHVJQ0J6ZDJsMFkyZ2dLRzl3ZEhNdWMyTm9aVzFoU1dRcElIdGNiaUFnSUNCallYTmxJQ2NrYVdRbk9pQnlaWFIxY200Z1gyZGxkQ1JKWkR0Y2JpQWdJQ0JqWVhObElDZHBaQ2M2SUhKbGRIVnliaUJmWjJWMFNXUTdYRzRnSUNBZ1pHVm1ZWFZzZERvZ2NtVjBkWEp1SUY5blpYUWtTV1JQY2tsa08xeHVJQ0I5WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnWDJkbGRFbGtLSE5qYUdWdFlTa2dlMXh1SUNCcFppQW9jMk5vWlcxaExpUnBaQ2tnWTI5dWMyOXNaUzUzWVhKdUtDZHpZMmhsYldFZ0pHbGtJR2xuYm05eVpXUW5MQ0J6WTJobGJXRXVKR2xrS1R0Y2JpQWdjbVYwZFhKdUlITmphR1Z0WVM1cFpEdGNibjFjYmx4dVhHNW1kVzVqZEdsdmJpQmZaMlYwSkVsa0tITmphR1Z0WVNrZ2UxeHVJQ0JwWmlBb2MyTm9aVzFoTG1sa0tTQmpiMjV6YjJ4bExuZGhjbTRvSjNOamFHVnRZU0JwWkNCcFoyNXZjbVZrSnl3Z2MyTm9aVzFoTG1sa0tUdGNiaUFnY21WMGRYSnVJSE5qYUdWdFlTNGthV1E3WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnWDJkbGRDUkpaRTl5U1dRb2MyTm9aVzFoS1NCN1hHNGdJR2xtSUNoelkyaGxiV0V1Skdsa0lDWW1JSE5qYUdWdFlTNXBaQ0FtSmlCelkyaGxiV0V1Skdsa0lDRTlJSE5qYUdWdFlTNXBaQ2xjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0ozTmphR1Z0WVNBa2FXUWdhWE1nWkdsbVptVnlaVzUwSUdaeWIyMGdhV1FuS1R0Y2JpQWdjbVYwZFhKdUlITmphR1Z0WVM0a2FXUWdmSHdnYzJOb1pXMWhMbWxrTzF4dWZWeHVYRzVjYmk4cUtseHVJQ29nUTI5dWRtVnlkQ0JoY25KaGVTQnZaaUJsY25KdmNpQnRaWE56WVdkbElHOWlhbVZqZEhNZ2RHOGdjM1J5YVc1blhHNGdLaUJBZEdocGN5QWdJRUZxZGx4dUlDb2dRSEJoY21GdElDQjdRWEp5WVhrOFQySnFaV04wUG4wZ1pYSnliM0p6SUc5d2RHbHZibUZzSUdGeWNtRjVJRzltSUhaaGJHbGtZWFJwYjI0Z1pYSnliM0p6TENCcFppQnViM1FnY0dGemMyVmtJR1Z5Y205eWN5Qm1jbTl0SUhSb1pTQnBibk4wWVc1alpTQmhjbVVnZFhObFpDNWNiaUFxSUVCd1lYSmhiU0FnZTA5aWFtVmpkSDBnYjNCMGFXOXVjeUJ2Y0hScGIyNWhiQ0J2Y0hScGIyNXpJSGRwZEdnZ2NISnZjR1Z5ZEdsbGN5QmdjMlZ3WVhKaGRHOXlZQ0JoYm1RZ1lHUmhkR0ZXWVhKZ0xseHVJQ29nUUhKbGRIVnliaUI3VTNSeWFXNW5mU0JvZFcxaGJpQnlaV0ZrWVdKc1pTQnpkSEpwYm1jZ2QybDBhQ0JoYkd3Z1pYSnliM0p6SUdSbGMyTnlhWEIwYVc5dWMxeHVJQ292WEc1bWRXNWpkR2x2YmlCbGNuSnZjbk5VWlhoMEtHVnljbTl5Y3l3Z2IzQjBhVzl1Y3lrZ2UxeHVJQ0JsY25KdmNuTWdQU0JsY25KdmNuTWdmSHdnZEdocGN5NWxjbkp2Y25NN1hHNGdJR2xtSUNnaFpYSnliM0p6S1NCeVpYUjFjbTRnSjA1dklHVnljbTl5Y3ljN1hHNGdJRzl3ZEdsdmJuTWdQU0J2Y0hScGIyNXpJSHg4SUh0OU8xeHVJQ0IyWVhJZ2MyVndZWEpoZEc5eUlEMGdiM0IwYVc5dWN5NXpaWEJoY21GMGIzSWdQVDA5SUhWdVpHVm1hVzVsWkNBL0lDY3NJQ2NnT2lCdmNIUnBiMjV6TG5ObGNHRnlZWFJ2Y2p0Y2JpQWdkbUZ5SUdSaGRHRldZWElnUFNCdmNIUnBiMjV6TG1SaGRHRldZWElnUFQwOUlIVnVaR1ZtYVc1bFpDQS9JQ2RrWVhSaEp5QTZJRzl3ZEdsdmJuTXVaR0YwWVZaaGNqdGNibHh1SUNCMllYSWdkR1Y0ZENBOUlDY25PMXh1SUNCbWIzSWdLSFpoY2lCcFBUQTdJR2s4WlhKeWIzSnpMbXhsYm1kMGFEc2dhU3NyS1NCN1hHNGdJQ0FnZG1GeUlHVWdQU0JsY25KdmNuTmJhVjA3WEc0Z0lDQWdhV1lnS0dVcElIUmxlSFFnS3owZ1pHRjBZVlpoY2lBcklHVXVaR0YwWVZCaGRHZ2dLeUFuSUNjZ0t5QmxMbTFsYzNOaFoyVWdLeUJ6WlhCaGNtRjBiM0k3WEc0Z0lIMWNiaUFnY21WMGRYSnVJSFJsZUhRdWMyeHBZMlVvTUN3Z0xYTmxjR0Z5WVhSdmNpNXNaVzVuZEdncE8xeHVmVnh1WEc1Y2JpOHFLbHh1SUNvZ1FXUmtJR04xYzNSdmJTQm1iM0p0WVhSY2JpQXFJRUIwYUdseklDQWdRV3AyWEc0Z0tpQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ2JtRnRaU0JtYjNKdFlYUWdibUZ0WlZ4dUlDb2dRSEJoY21GdElIdFRkSEpwYm1kOFVtVm5SWGh3ZkVaMWJtTjBhVzl1ZlNCbWIzSnRZWFFnYzNSeWFXNW5JR2x6SUdOdmJuWmxjblJsWkNCMGJ5QlNaV2RGZUhBN0lHWjFibU4wYVc5dUlITm9iM1ZzWkNCeVpYUjFjbTRnWW05dmJHVmhiaUFvZEhKMVpTQjNhR1Z1SUhaaGJHbGtLVnh1SUNvdlhHNW1kVzVqZEdsdmJpQmhaR1JHYjNKdFlYUW9ibUZ0WlN3Z1ptOXliV0YwS1NCN1hHNGdJR2xtSUNoMGVYQmxiMllnWm05eWJXRjBJRDA5SUNkemRISnBibWNuS1NCbWIzSnRZWFFnUFNCdVpYY2dVbVZuUlhod0tHWnZjbTFoZENrN1hHNGdJSFJvYVhNdVgyWnZjbTFoZEhOYmJtRnRaVjBnUFNCbWIzSnRZWFE3WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnWVdSa1JISmhablEyVFdWMFlWTmphR1Z0WVNoelpXeG1LU0I3WEc0Z0lIWmhjaUFrWkdGMFlWTmphR1Z0WVR0Y2JpQWdhV1lnS0hObGJHWXVYMjl3ZEhNdUpHUmhkR0VwSUh0Y2JpQWdJQ0FrWkdGMFlWTmphR1Z0WVNBOUlISmxjWFZwY21Vb0p5NHZjbVZtY3k4a1pHRjBZUzVxYzI5dUp5azdYRzRnSUNBZ2MyVnNaaTVoWkdSTlpYUmhVMk5vWlcxaEtDUmtZWFJoVTJOb1pXMWhMQ0FrWkdGMFlWTmphR1Z0WVM0a2FXUXNJSFJ5ZFdVcE8xeHVJQ0I5WEc0Z0lHbG1JQ2h6Wld4bUxsOXZjSFJ6TG0xbGRHRWdQVDA5SUdaaGJITmxLU0J5WlhSMWNtNDdYRzRnSUhaaGNpQnRaWFJoVTJOb1pXMWhJRDBnY21WeGRXbHlaU2duTGk5eVpXWnpMMnB6YjI0dGMyTm9aVzFoTFdSeVlXWjBMVEEyTG1wemIyNG5LVHRjYmlBZ2FXWWdLSE5sYkdZdVgyOXdkSE11SkdSaGRHRXBJRzFsZEdGVFkyaGxiV0VnUFNBa1pHRjBZVTFsZEdGVFkyaGxiV0VvYldWMFlWTmphR1Z0WVN3Z1RVVlVRVjlUVlZCUVQxSlVYMFJCVkVFcE8xeHVJQ0J6Wld4bUxtRmtaRTFsZEdGVFkyaGxiV0VvYldWMFlWTmphR1Z0WVN3Z1RVVlVRVjlUUTBoRlRVRmZTVVFzSUhSeWRXVXBPMXh1SUNCelpXeG1MbDl5Wldaeld5ZG9kSFJ3T2k4dmFuTnZiaTF6WTJobGJXRXViM0puTDNOamFHVnRZU2RkSUQwZ1RVVlVRVjlUUTBoRlRVRmZTVVE3WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnWVdSa1NXNXBkR2xoYkZOamFHVnRZWE1vYzJWc1ppa2dlMXh1SUNCMllYSWdiM0IwYzFOamFHVnRZWE1nUFNCelpXeG1MbDl2Y0hSekxuTmphR1Z0WVhNN1hHNGdJR2xtSUNnaGIzQjBjMU5qYUdWdFlYTXBJSEpsZEhWeWJqdGNiaUFnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvYjNCMGMxTmphR1Z0WVhNcEtTQnpaV3htTG1Ga1pGTmphR1Z0WVNodmNIUnpVMk5vWlcxaGN5azdYRzRnSUdWc2MyVWdabTl5SUNoMllYSWdhMlY1SUdsdUlHOXdkSE5UWTJobGJXRnpLU0J6Wld4bUxtRmtaRk5qYUdWdFlTaHZjSFJ6VTJOb1pXMWhjMXRyWlhsZExDQnJaWGtwTzF4dWZWeHVYRzVjYm1aMWJtTjBhVzl1SUdGa1pFbHVhWFJwWVd4R2IzSnRZWFJ6S0hObGJHWXBJSHRjYmlBZ1ptOXlJQ2gyWVhJZ2JtRnRaU0JwYmlCelpXeG1MbDl2Y0hSekxtWnZjbTFoZEhNcElIdGNiaUFnSUNCMllYSWdabTl5YldGMElEMGdjMlZzWmk1ZmIzQjBjeTVtYjNKdFlYUnpXMjVoYldWZE8xeHVJQ0FnSUhObGJHWXVZV1JrUm05eWJXRjBLRzVoYldVc0lHWnZjbTFoZENrN1hHNGdJSDFjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJqYUdWamExVnVhWEYxWlNoelpXeG1MQ0JwWkNrZ2UxeHVJQ0JwWmlBb2MyVnNaaTVmYzJOb1pXMWhjMXRwWkYwZ2ZId2djMlZzWmk1ZmNtVm1jMXRwWkYwcFhHNGdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ2R6WTJobGJXRWdkMmwwYUNCclpYa2diM0lnYVdRZ1hDSW5JQ3NnYVdRZ0t5QW5YQ0lnWVd4eVpXRmtlU0JsZUdsemRITW5LVHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJuWlhSTlpYUmhVMk5vWlcxaFQzQjBhVzl1Y3loelpXeG1LU0I3WEc0Z0lIWmhjaUJ0WlhSaFQzQjBjeUE5SUhWMGFXd3VZMjl3ZVNoelpXeG1MbDl2Y0hSektUdGNiaUFnWm05eUlDaDJZWElnYVQwd095QnBQRTFGVkVGZlNVZE9UMUpGWDA5UVZFbFBUbE11YkdWdVozUm9PeUJwS3lzcFhHNGdJQ0FnWkdWc1pYUmxJRzFsZEdGUGNIUnpXMDFGVkVGZlNVZE9UMUpGWDA5UVZFbFBUbE5iYVYxZE8xeHVJQ0J5WlhSMWNtNGdiV1YwWVU5d2RITTdYRzU5WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9hanYuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NhY2hlLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jYWNoZS5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5cXFxcblxcXFxudmFyIENhY2hlID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBDYWNoZSgpIHtcXFxcbiAgdGhpcy5fY2FjaGUgPSB7fTtcXFxcbn07XFxcXG5cXFxcblxcXFxuQ2FjaGUucHJvdG90eXBlLnB1dCA9IGZ1bmN0aW9uIENhY2hlX3B1dChrZXksIHZhbHVlKSB7XFxcXG4gIHRoaXMuX2NhY2hlW2tleV0gPSB2YWx1ZTtcXFxcbn07XFxcXG5cXFxcblxcXFxuQ2FjaGUucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIENhY2hlX2dldChrZXkpIHtcXFxcbiAgcmV0dXJuIHRoaXMuX2NhY2hlW2tleV07XFxcXG59O1xcXFxuXFxcXG5cXFxcbkNhY2hlLnByb3RvdHlwZS5kZWwgPSBmdW5jdGlvbiBDYWNoZV9kZWwoa2V5KSB7XFxcXG4gIGRlbGV0ZSB0aGlzLl9jYWNoZVtrZXldO1xcXFxufTtcXFxcblxcXFxuXFxcXG5DYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiBDYWNoZV9jbGVhcigpIHtcXFxcbiAgdGhpcy5fY2FjaGUgPSB7fTtcXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlqWVdOb1pTNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwyRnFkaTlzYVdJdlkyRmphR1V1YW5NL1pXRTVZeUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJbmRYTmxJSE4wY21samRDYzdYRzVjYmx4dWRtRnlJRU5oWTJobElEMGdiVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpQkRZV05vWlNncElIdGNiaUFnZEdocGN5NWZZMkZqYUdVZ1BTQjdmVHRjYm4wN1hHNWNibHh1UTJGamFHVXVjSEp2ZEc5MGVYQmxMbkIxZENBOUlHWjFibU4wYVc5dUlFTmhZMmhsWDNCMWRDaHJaWGtzSUhaaGJIVmxLU0I3WEc0Z0lIUm9hWE11WDJOaFkyaGxXMnRsZVYwZ1BTQjJZV3gxWlR0Y2JuMDdYRzVjYmx4dVEyRmphR1V1Y0hKdmRHOTBlWEJsTG1kbGRDQTlJR1oxYm1OMGFXOXVJRU5oWTJobFgyZGxkQ2hyWlhrcElIdGNiaUFnY21WMGRYSnVJSFJvYVhNdVgyTmhZMmhsVzJ0bGVWMDdYRzU5TzF4dVhHNWNia05oWTJobExuQnliM1J2ZEhsd1pTNWtaV3dnUFNCbWRXNWpkR2x2YmlCRFlXTm9aVjlrWld3b2EyVjVLU0I3WEc0Z0lHUmxiR1YwWlNCMGFHbHpMbDlqWVdOb1pWdHJaWGxkTzF4dWZUdGNibHh1WEc1RFlXTm9aUzV3Y205MGIzUjVjR1V1WTJ4bFlYSWdQU0JtZFc1amRHbHZiaUJEWVdOb1pWOWpiR1ZoY2lncElIdGNiaUFnZEdocGN5NWZZMkZqYUdVZ1BTQjdmVHRjYm4wN1hHNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdJaXdpYzI5MWNtTmxVbTl2ZENJNklpSjlcXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NhY2hlLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL19ydWxlcy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9fcnVsZXMuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxuXFxcXG4vL2FsbCByZXF1aXJlcyBtdXN0IGJlIGV4cGxpY2l0IGJlY2F1c2UgYnJvd3NlcmlmeSB3b24ndCB3b3JrIHdpdGggZHluYW1pYyByZXF1aXJlc1xcXFxubW9kdWxlLmV4cG9ydHMgPSB7XFxcXG4gICckcmVmJzogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvcmVmICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9yZWYuanNcXFxcXFxcIiksXFxcXG4gIGFsbE9mOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9hbGxPZiAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYWxsT2YuanNcXFxcXFxcIiksXFxcXG4gIGFueU9mOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9hbnlPZiAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYW55T2YuanNcXFxcXFxcIiksXFxcXG4gIGNvbnN0OiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9jb25zdCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY29uc3QuanNcXFxcXFxcIiksXFxcXG4gIGNvbnRhaW5zOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9jb250YWlucyAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY29udGFpbnMuanNcXFxcXFxcIiksXFxcXG4gIGRlcGVuZGVuY2llczogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvZGVwZW5kZW5jaWVzICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9kZXBlbmRlbmNpZXMuanNcXFxcXFxcIiksXFxcXG4gICdlbnVtJzogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvZW51bSAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvZW51bS5qc1xcXFxcXFwiKSxcXFxcbiAgZm9ybWF0OiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9mb3JtYXQgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2Zvcm1hdC5qc1xcXFxcXFwiKSxcXFxcbiAgaXRlbXM6IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvdGpzL2l0ZW1zICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9pdGVtcy5qc1xcXFxcXFwiKSxcXFxcbiAgbWF4aW11bTogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvX2xpbWl0ICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXQuanNcXFxcXFxcIiksXFxcXG4gIG1pbmltdW06IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvdGpzL19saW1pdCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0LmpzXFxcXFxcXCIpLFxcXFxuICBtYXhJdGVtczogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvX2xpbWl0SXRlbXMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdEl0ZW1zLmpzXFxcXFxcXCIpLFxcXFxuICBtaW5JdGVtczogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvX2xpbWl0SXRlbXMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdEl0ZW1zLmpzXFxcXFxcXCIpLFxcXFxuICBtYXhMZW5ndGg6IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvdGpzL19saW1pdExlbmd0aCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0TGVuZ3RoLmpzXFxcXFxcXCIpLFxcXFxuICBtaW5MZW5ndGg6IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvdGpzL19saW1pdExlbmd0aCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0TGVuZ3RoLmpzXFxcXFxcXCIpLFxcXFxuICBtYXhQcm9wZXJ0aWVzOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzLmpzXFxcXFxcXCIpLFxcXFxuICBtaW5Qcm9wZXJ0aWVzOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzLmpzXFxcXFxcXCIpLFxcXFxuICBtdWx0aXBsZU9mOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9tdWx0aXBsZU9mICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9tdWx0aXBsZU9mLmpzXFxcXFxcXCIpLFxcXFxuICBub3Q6IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uL2RvdGpzL25vdCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvbm90LmpzXFxcXFxcXCIpLFxcXFxuICBvbmVPZjogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvb25lT2YgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL29uZU9mLmpzXFxcXFxcXCIpLFxcXFxuICBwYXR0ZXJuOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9wYXR0ZXJuICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wYXR0ZXJuLmpzXFxcXFxcXCIpLFxcXFxuICBwcm9wZXJ0aWVzOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9wcm9wZXJ0aWVzICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0aWVzLmpzXFxcXFxcXCIpLFxcXFxuICBwcm9wZXJ0eU5hbWVzOiBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy9wcm9wZXJ0eU5hbWVzICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0eU5hbWVzLmpzXFxcXFxcXCIpLFxcXFxuICByZXF1aXJlZDogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvcmVxdWlyZWQgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3JlcXVpcmVkLmpzXFxcXFxcXCIpLFxcXFxuICB1bmlxdWVJdGVtczogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvdW5pcXVlSXRlbXMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3VuaXF1ZUl0ZW1zLmpzXFxcXFxcXCIpLFxcXFxuICB2YWxpZGF0ZTogX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi4vZG90anMvdmFsaWRhdGUgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3ZhbGlkYXRlLmpzXFxcXFxcXCIpXFxcXG59O1xcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5amIyMXdhV3hsTDE5eWRXeGxjeTVxY3k1cWN5SXNJbk52ZFhKalpYTWlPbHNpZDJWaWNHRmphem92TDJsdGFtOTVVbEJETHk0dmJtOWtaVjl0YjJSMWJHVnpMMkZxZGk5c2FXSXZZMjl0Y0dsc1pTOWZjblZzWlhNdWFuTS9aakpqTXlKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW5kWE5sSUhOMGNtbGpkQ2M3WEc1Y2JpOHZZV3hzSUhKbGNYVnBjbVZ6SUcxMWMzUWdZbVVnWlhod2JHbGphWFFnWW1WallYVnpaU0JpY205M2MyVnlhV1o1SUhkdmJpZDBJSGR2Y21zZ2QybDBhQ0JrZVc1aGJXbGpJSEpsY1hWcGNtVnpYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSHRjYmlBZ0p5UnlaV1luT2lCeVpYRjFhWEpsS0NjdUxpOWtiM1JxY3k5eVpXWW5LU3hjYmlBZ1lXeHNUMlk2SUhKbGNYVnBjbVVvSnk0dUwyUnZkR3B6TDJGc2JFOW1KeWtzWEc0Z0lHRnVlVTltT2lCeVpYRjFhWEpsS0NjdUxpOWtiM1JxY3k5aGJubFBaaWNwTEZ4dUlDQmpiMjV6ZERvZ2NtVnhkV2x5WlNnbkxpNHZaRzkwYW5NdlkyOXVjM1FuS1N4Y2JpQWdZMjl1ZEdGcGJuTTZJSEpsY1hWcGNtVW9KeTR1TDJSdmRHcHpMMk52Ym5SaGFXNXpKeWtzWEc0Z0lHUmxjR1Z1WkdWdVkybGxjem9nY21WeGRXbHlaU2duTGk0dlpHOTBhbk12WkdWd1pXNWtaVzVqYVdWekp5a3NYRzRnSUNkbGJuVnRKem9nY21WeGRXbHlaU2duTGk0dlpHOTBhbk12Wlc1MWJTY3BMRnh1SUNCbWIzSnRZWFE2SUhKbGNYVnBjbVVvSnk0dUwyUnZkR3B6TDJadmNtMWhkQ2NwTEZ4dUlDQnBkR1Z0Y3pvZ2NtVnhkV2x5WlNnbkxpNHZaRzkwYW5NdmFYUmxiWE1uS1N4Y2JpQWdiV0Y0YVcxMWJUb2djbVZ4ZFdseVpTZ25MaTR2Wkc5MGFuTXZYMnhwYldsMEp5a3NYRzRnSUcxcGJtbHRkVzA2SUhKbGNYVnBjbVVvSnk0dUwyUnZkR3B6TDE5c2FXMXBkQ2NwTEZ4dUlDQnRZWGhKZEdWdGN6b2djbVZ4ZFdseVpTZ25MaTR2Wkc5MGFuTXZYMnhwYldsMFNYUmxiWE1uS1N4Y2JpQWdiV2x1U1hSbGJYTTZJSEpsY1hWcGNtVW9KeTR1TDJSdmRHcHpMMTlzYVcxcGRFbDBaVzF6Snlrc1hHNGdJRzFoZUV4bGJtZDBhRG9nY21WeGRXbHlaU2duTGk0dlpHOTBhbk12WDJ4cGJXbDBUR1Z1WjNSb0p5a3NYRzRnSUcxcGJreGxibWQwYURvZ2NtVnhkV2x5WlNnbkxpNHZaRzkwYW5NdlgyeHBiV2wwVEdWdVozUm9KeWtzWEc0Z0lHMWhlRkJ5YjNCbGNuUnBaWE02SUhKbGNYVnBjbVVvSnk0dUwyUnZkR3B6TDE5c2FXMXBkRkJ5YjNCbGNuUnBaWE1uS1N4Y2JpQWdiV2x1VUhKdmNHVnlkR2xsY3pvZ2NtVnhkV2x5WlNnbkxpNHZaRzkwYW5NdlgyeHBiV2wwVUhKdmNHVnlkR2xsY3ljcExGeHVJQ0J0ZFd4MGFYQnNaVTltT2lCeVpYRjFhWEpsS0NjdUxpOWtiM1JxY3k5dGRXeDBhWEJzWlU5bUp5a3NYRzRnSUc1dmREb2djbVZ4ZFdseVpTZ25MaTR2Wkc5MGFuTXZibTkwSnlrc1hHNGdJRzl1WlU5bU9pQnlaWEYxYVhKbEtDY3VMaTlrYjNScWN5OXZibVZQWmljcExGeHVJQ0J3WVhSMFpYSnVPaUJ5WlhGMWFYSmxLQ2N1TGk5a2IzUnFjeTl3WVhSMFpYSnVKeWtzWEc0Z0lIQnliM0JsY25ScFpYTTZJSEpsY1hWcGNtVW9KeTR1TDJSdmRHcHpMM0J5YjNCbGNuUnBaWE1uS1N4Y2JpQWdjSEp2Y0dWeWRIbE9ZVzFsY3pvZ2NtVnhkV2x5WlNnbkxpNHZaRzkwYW5NdmNISnZjR1Z5ZEhsT1lXMWxjeWNwTEZ4dUlDQnlaWEYxYVhKbFpEb2djbVZ4ZFdseVpTZ25MaTR2Wkc5MGFuTXZjbVZ4ZFdseVpXUW5LU3hjYmlBZ2RXNXBjWFZsU1hSbGJYTTZJSEpsY1hWcGNtVW9KeTR1TDJSdmRHcHpMM1Z1YVhGMVpVbDBaVzF6Snlrc1hHNGdJSFpoYkdsa1lYUmxPaUJ5WlhGMWFYSmxLQ2N1TGk5a2IzUnFjeTkyWVd4cFpHRjBaU2NwWEc1OU8xeHVJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUc2lMQ0p6YjNWeVkyVlNiMjkwSWpvaUluMD1cXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvX3J1bGVzLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2FzeW5jLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvYXN5bmMuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5cXFxcbnZhciBNaXNzaW5nUmVmRXJyb3IgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2Vycm9yX2NsYXNzZXMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXJyb3JfY2xhc3Nlcy5qc1xcXFxcXFwiKS5NaXNzaW5nUmVmO1xcXFxuXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGNvbXBpbGVBc3luYztcXFxcblxcXFxuXFxcXG4vKipcXFxcbiAqIENyZWF0ZXMgdmFsaWRhdGluZyBmdW5jdGlvbiBmb3IgcGFzc2VkIHNjaGVtYSB3aXRoIGFzeW5jaHJvbm91cyBsb2FkaW5nIG9mIG1pc3Npbmcgc2NoZW1hcy5cXFxcbiAqIGBsb2FkU2NoZW1hYCBvcHRpb24gc2hvdWxkIGJlIGEgZnVuY3Rpb24gdGhhdCBhY2NlcHRzIHNjaGVtYSB1cmkgYW5kIHJldHVybnMgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHNjaGVtYS5cXFxcbiAqIEB0aGlzICBBanZcXFxcbiAqIEBwYXJhbSB7T2JqZWN0fSAgIHNjaGVtYSBzY2hlbWEgb2JqZWN0XFxcXG4gKiBAcGFyYW0ge0Jvb2xlYW59ICBtZXRhIG9wdGlvbmFsIHRydWUgdG8gY29tcGlsZSBtZXRhLXNjaGVtYTsgdGhpcyBwYXJhbWV0ZXIgY2FuIGJlIHNraXBwZWRcXFxcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIGFuIG9wdGlvbmFsIG5vZGUtc3R5bGUgY2FsbGJhY2ssIGl0IGlzIGNhbGxlZCB3aXRoIDIgcGFyYW1ldGVyczogZXJyb3IgKG9yIG51bGwpIGFuZCB2YWxpZGF0aW5nIGZ1bmN0aW9uLlxcXFxuICogQHJldHVybiB7UHJvbWlzZX0gcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggYSB2YWxpZGF0aW5nIGZ1bmN0aW9uLlxcXFxuICovXFxcXG5mdW5jdGlvbiBjb21waWxlQXN5bmMoc2NoZW1hLCBtZXRhLCBjYWxsYmFjaykge1xcXFxuICAvKiBlc2xpbnQgbm8tc2hhZG93OiAwICovXFxcXG4gIC8qIGdsb2JhbCBQcm9taXNlICovXFxcXG4gIC8qIGpzaGludCB2YWxpZHRoaXM6IHRydWUgKi9cXFxcbiAgdmFyIHNlbGYgPSB0aGlzO1xcXFxuICBpZiAodHlwZW9mIHRoaXMuX29wdHMubG9hZFNjaGVtYSAhPSAnZnVuY3Rpb24nKVxcXFxuICAgIHRocm93IG5ldyBFcnJvcignb3B0aW9ucy5sb2FkU2NoZW1hIHNob3VsZCBiZSBhIGZ1bmN0aW9uJyk7XFxcXG5cXFxcbiAgaWYgKHR5cGVvZiBtZXRhID09ICdmdW5jdGlvbicpIHtcXFxcbiAgICBjYWxsYmFjayA9IG1ldGE7XFxcXG4gICAgbWV0YSA9IHVuZGVmaW5lZDtcXFxcbiAgfVxcXFxuXFxcXG4gIHZhciBwID0gbG9hZE1ldGFTY2hlbWFPZihzY2hlbWEpLnRoZW4oZnVuY3Rpb24gKCkge1xcXFxuICAgIHZhciBzY2hlbWFPYmogPSBzZWxmLl9hZGRTY2hlbWEoc2NoZW1hLCB1bmRlZmluZWQsIG1ldGEpO1xcXFxuICAgIHJldHVybiBzY2hlbWFPYmoudmFsaWRhdGUgfHwgX2NvbXBpbGVBc3luYyhzY2hlbWFPYmopO1xcXFxuICB9KTtcXFxcblxcXFxuICBpZiAoY2FsbGJhY2spIHtcXFxcbiAgICBwLnRoZW4oXFxcXG4gICAgICBmdW5jdGlvbih2KSB7IGNhbGxiYWNrKG51bGwsIHYpOyB9LFxcXFxuICAgICAgY2FsbGJhY2tcXFxcbiAgICApO1xcXFxuICB9XFxcXG5cXFxcbiAgcmV0dXJuIHA7XFxcXG5cXFxcblxcXFxuICBmdW5jdGlvbiBsb2FkTWV0YVNjaGVtYU9mKHNjaCkge1xcXFxuICAgIHZhciAkc2NoZW1hID0gc2NoLiRzY2hlbWE7XFxcXG4gICAgcmV0dXJuICRzY2hlbWEgJiYgIXNlbGYuZ2V0U2NoZW1hKCRzY2hlbWEpXFxcXG4gICAgICAgICAgICA/IGNvbXBpbGVBc3luYy5jYWxsKHNlbGYsIHsgJHJlZjogJHNjaGVtYSB9LCB0cnVlKVxcXFxuICAgICAgICAgICAgOiBQcm9taXNlLnJlc29sdmUoKTtcXFxcbiAgfVxcXFxuXFxcXG5cXFxcbiAgZnVuY3Rpb24gX2NvbXBpbGVBc3luYyhzY2hlbWFPYmopIHtcXFxcbiAgICB0cnkgeyByZXR1cm4gc2VsZi5fY29tcGlsZShzY2hlbWFPYmopOyB9XFxcXG4gICAgY2F0Y2goZSkge1xcXFxuICAgICAgaWYgKGUgaW5zdGFuY2VvZiBNaXNzaW5nUmVmRXJyb3IpIHJldHVybiBsb2FkTWlzc2luZ1NjaGVtYShlKTtcXFxcbiAgICAgIHRocm93IGU7XFxcXG4gICAgfVxcXFxuXFxcXG5cXFxcbiAgICBmdW5jdGlvbiBsb2FkTWlzc2luZ1NjaGVtYShlKSB7XFxcXG4gICAgICB2YXIgcmVmID0gZS5taXNzaW5nU2NoZW1hO1xcXFxuICAgICAgaWYgKGFkZGVkKHJlZikpIHRocm93IG5ldyBFcnJvcignU2NoZW1hICcgKyByZWYgKyAnIGlzIGxvYWRlZCBidXQgJyArIGUubWlzc2luZ1JlZiArICcgY2Fubm90IGJlIHJlc29sdmVkJyk7XFxcXG5cXFxcbiAgICAgIHZhciBzY2hlbWFQcm9taXNlID0gc2VsZi5fbG9hZGluZ1NjaGVtYXNbcmVmXTtcXFxcbiAgICAgIGlmICghc2NoZW1hUHJvbWlzZSkge1xcXFxuICAgICAgICBzY2hlbWFQcm9taXNlID0gc2VsZi5fbG9hZGluZ1NjaGVtYXNbcmVmXSA9IHNlbGYuX29wdHMubG9hZFNjaGVtYShyZWYpO1xcXFxuICAgICAgICBzY2hlbWFQcm9taXNlLnRoZW4ocmVtb3ZlUHJvbWlzZSwgcmVtb3ZlUHJvbWlzZSk7XFxcXG4gICAgICB9XFxcXG5cXFxcbiAgICAgIHJldHVybiBzY2hlbWFQcm9taXNlLnRoZW4oZnVuY3Rpb24gKHNjaCkge1xcXFxuICAgICAgICBpZiAoIWFkZGVkKHJlZikpIHtcXFxcbiAgICAgICAgICByZXR1cm4gbG9hZE1ldGFTY2hlbWFPZihzY2gpLnRoZW4oZnVuY3Rpb24gKCkge1xcXFxuICAgICAgICAgICAgaWYgKCFhZGRlZChyZWYpKSBzZWxmLmFkZFNjaGVtYShzY2gsIHJlZiwgdW5kZWZpbmVkLCBtZXRhKTtcXFxcbiAgICAgICAgICB9KTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfSkudGhlbihmdW5jdGlvbigpIHtcXFxcbiAgICAgICAgcmV0dXJuIF9jb21waWxlQXN5bmMoc2NoZW1hT2JqKTtcXFxcbiAgICAgIH0pO1xcXFxuXFxcXG4gICAgICBmdW5jdGlvbiByZW1vdmVQcm9taXNlKCkge1xcXFxuICAgICAgICBkZWxldGUgc2VsZi5fbG9hZGluZ1NjaGVtYXNbcmVmXTtcXFxcbiAgICAgIH1cXFxcblxcXFxuICAgICAgZnVuY3Rpb24gYWRkZWQocmVmKSB7XFxcXG4gICAgICAgIHJldHVybiBzZWxmLl9yZWZzW3JlZl0gfHwgc2VsZi5fc2NoZW1hc1tyZWZdO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgfVxcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5amIyMXdhV3hsTDJGemVXNWpMbXB6TG1weklpd2ljMjkxY21ObGN5STZXeUozWldKd1lXTnJPaTh2YVcxcWIzbFNVRU12TGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWpiMjF3YVd4bEwyRnplVzVqTG1welAySXhZVGdpWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc1MllYSWdUV2x6YzJsdVoxSmxaa1Z5Y205eUlEMGdjbVZ4ZFdseVpTZ25MaTlsY25KdmNsOWpiR0Z6YzJWekp5a3VUV2x6YzJsdVoxSmxaanRjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCamIyMXdhV3hsUVhONWJtTTdYRzVjYmx4dUx5b3FYRzRnS2lCRGNtVmhkR1Z6SUhaaGJHbGtZWFJwYm1jZ1puVnVZM1JwYjI0Z1ptOXlJSEJoYzNObFpDQnpZMmhsYldFZ2QybDBhQ0JoYzNsdVkyaHliMjV2ZFhNZ2JHOWhaR2x1WnlCdlppQnRhWE56YVc1bklITmphR1Z0WVhNdVhHNGdLaUJnYkc5aFpGTmphR1Z0WVdBZ2IzQjBhVzl1SUhOb2IzVnNaQ0JpWlNCaElHWjFibU4wYVc5dUlIUm9ZWFFnWVdOalpYQjBjeUJ6WTJobGJXRWdkWEpwSUdGdVpDQnlaWFIxY201eklIQnliMjFwYzJVZ2RHaGhkQ0J5WlhOdmJIWmxjeUIzYVhSb0lIUm9aU0J6WTJobGJXRXVYRzRnS2lCQWRHaHBjeUFnUVdwMlhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdJQ0J6WTJobGJXRWdjMk5vWlcxaElHOWlhbVZqZEZ4dUlDb2dRSEJoY21GdElIdENiMjlzWldGdWZTQWdiV1YwWVNCdmNIUnBiMjVoYkNCMGNuVmxJSFJ2SUdOdmJYQnBiR1VnYldWMFlTMXpZMmhsYldFN0lIUm9hWE1nY0dGeVlXMWxkR1Z5SUdOaGJpQmlaU0J6YTJsd2NHVmtYRzRnS2lCQWNHRnlZVzBnZTBaMWJtTjBhVzl1ZlNCallXeHNZbUZqYXlCaGJpQnZjSFJwYjI1aGJDQnViMlJsTFhOMGVXeGxJR05oYkd4aVlXTnJMQ0JwZENCcGN5QmpZV3hzWldRZ2QybDBhQ0F5SUhCaGNtRnRaWFJsY25NNklHVnljbTl5SUNodmNpQnVkV3hzS1NCaGJtUWdkbUZzYVdSaGRHbHVaeUJtZFc1amRHbHZiaTVjYmlBcUlFQnlaWFIxY200Z2UxQnliMjFwYzJWOUlIQnliMjFwYzJVZ2RHaGhkQ0J5WlhOdmJIWmxjeUIzYVhSb0lHRWdkbUZzYVdSaGRHbHVaeUJtZFc1amRHbHZiaTVjYmlBcUwxeHVablZ1WTNScGIyNGdZMjl0Y0dsc1pVRnplVzVqS0hOamFHVnRZU3dnYldWMFlTd2dZMkZzYkdKaFkyc3BJSHRjYmlBZ0x5b2daWE5zYVc1MElHNXZMWE5vWVdSdmR6b2dNQ0FxTDF4dUlDQXZLaUJuYkc5aVlXd2dVSEp2YldselpTQXFMMXh1SUNBdktpQnFjMmhwYm5RZ2RtRnNhV1IwYUdsek9pQjBjblZsSUNvdlhHNGdJSFpoY2lCelpXeG1JRDBnZEdocGN6dGNiaUFnYVdZZ0tIUjVjR1Z2WmlCMGFHbHpMbDl2Y0hSekxteHZZV1JUWTJobGJXRWdJVDBnSjJaMWJtTjBhVzl1SnlsY2JpQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KMjl3ZEdsdmJuTXViRzloWkZOamFHVnRZU0J6YUc5MWJHUWdZbVVnWVNCbWRXNWpkR2x2YmljcE8xeHVYRzRnSUdsbUlDaDBlWEJsYjJZZ2JXVjBZU0E5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ1kyRnNiR0poWTJzZ1BTQnRaWFJoTzF4dUlDQWdJRzFsZEdFZ1BTQjFibVJsWm1sdVpXUTdYRzRnSUgxY2JseHVJQ0IyWVhJZ2NDQTlJR3h2WVdSTlpYUmhVMk5vWlcxaFQyWW9jMk5vWlcxaEtTNTBhR1Z1S0daMWJtTjBhVzl1SUNncElIdGNiaUFnSUNCMllYSWdjMk5vWlcxaFQySnFJRDBnYzJWc1ppNWZZV1JrVTJOb1pXMWhLSE5qYUdWdFlTd2dkVzVrWldacGJtVmtMQ0J0WlhSaEtUdGNiaUFnSUNCeVpYUjFjbTRnYzJOb1pXMWhUMkpxTG5aaGJHbGtZWFJsSUh4OElGOWpiMjF3YVd4bFFYTjVibU1vYzJOb1pXMWhUMkpxS1R0Y2JpQWdmU2s3WEc1Y2JpQWdhV1lnS0dOaGJHeGlZV05yS1NCN1hHNGdJQ0FnY0M1MGFHVnVLRnh1SUNBZ0lDQWdablZ1WTNScGIyNG9kaWtnZXlCallXeHNZbUZqYXlodWRXeHNMQ0IyS1RzZ2ZTeGNiaUFnSUNBZ0lHTmhiR3hpWVdOclhHNGdJQ0FnS1R0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCd08xeHVYRzVjYmlBZ1puVnVZM1JwYjI0Z2JHOWhaRTFsZEdGVFkyaGxiV0ZQWmloelkyZ3BJSHRjYmlBZ0lDQjJZWElnSkhOamFHVnRZU0E5SUhOamFDNGtjMk5vWlcxaE8xeHVJQ0FnSUhKbGRIVnliaUFrYzJOb1pXMWhJQ1ltSUNGelpXeG1MbWRsZEZOamFHVnRZU2drYzJOb1pXMWhLVnh1SUNBZ0lDQWdJQ0FnSUNBZ1B5QmpiMjF3YVd4bFFYTjVibU11WTJGc2JDaHpaV3htTENCN0lDUnlaV1k2SUNSelkyaGxiV0VnZlN3Z2RISjFaU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lEb2dVSEp2YldselpTNXlaWE52YkhabEtDazdYRzRnSUgxY2JseHVYRzRnSUdaMWJtTjBhVzl1SUY5amIyMXdhV3hsUVhONWJtTW9jMk5vWlcxaFQySnFLU0I3WEc0Z0lDQWdkSEo1SUhzZ2NtVjBkWEp1SUhObGJHWXVYMk52YlhCcGJHVW9jMk5vWlcxaFQySnFLVHNnZlZ4dUlDQWdJR05oZEdOb0tHVXBJSHRjYmlBZ0lDQWdJR2xtSUNobElHbHVjM1JoYm1ObGIyWWdUV2x6YzJsdVoxSmxaa1Z5Y205eUtTQnlaWFIxY200Z2JHOWhaRTFwYzNOcGJtZFRZMmhsYldFb1pTazdYRzRnSUNBZ0lDQjBhSEp2ZHlCbE8xeHVJQ0FnSUgxY2JseHVYRzRnSUNBZ1puVnVZM1JwYjI0Z2JHOWhaRTFwYzNOcGJtZFRZMmhsYldFb1pTa2dlMXh1SUNBZ0lDQWdkbUZ5SUhKbFppQTlJR1V1YldsemMybHVaMU5qYUdWdFlUdGNiaUFnSUNBZ0lHbG1JQ2hoWkdSbFpDaHlaV1lwS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSjFOamFHVnRZU0FuSUNzZ2NtVm1JQ3NnSnlCcGN5QnNiMkZrWldRZ1luVjBJQ2NnS3lCbExtMXBjM05wYm1kU1pXWWdLeUFuSUdOaGJtNXZkQ0JpWlNCeVpYTnZiSFpsWkNjcE8xeHVYRzRnSUNBZ0lDQjJZWElnYzJOb1pXMWhVSEp2YldselpTQTlJSE5sYkdZdVgyeHZZV1JwYm1kVFkyaGxiV0Z6VzNKbFpsMDdYRzRnSUNBZ0lDQnBaaUFvSVhOamFHVnRZVkJ5YjIxcGMyVXBJSHRjYmlBZ0lDQWdJQ0FnYzJOb1pXMWhVSEp2YldselpTQTlJSE5sYkdZdVgyeHZZV1JwYm1kVFkyaGxiV0Z6VzNKbFpsMGdQU0J6Wld4bUxsOXZjSFJ6TG14dllXUlRZMmhsYldFb2NtVm1LVHRjYmlBZ0lDQWdJQ0FnYzJOb1pXMWhVSEp2YldselpTNTBhR1Z1S0hKbGJXOTJaVkJ5YjIxcGMyVXNJSEpsYlc5MlpWQnliMjFwYzJVcE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnlaWFIxY200Z2MyTm9aVzFoVUhKdmJXbHpaUzUwYUdWdUtHWjFibU4wYVc5dUlDaHpZMmdwSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0ZoWkdSbFpDaHlaV1lwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHeHZZV1JOWlhSaFUyTm9aVzFoVDJZb2MyTm9LUzUwYUdWdUtHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWVdSa1pXUW9jbVZtS1NrZ2MyVnNaaTVoWkdSVFkyaGxiV0VvYzJOb0xDQnlaV1lzSUhWdVpHVm1hVzVsWkN3Z2JXVjBZU2s3WEc0Z0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBwTG5Sb1pXNG9ablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJmWTI5dGNHbHNaVUZ6ZVc1aktITmphR1Z0WVU5aWFpazdYRzRnSUNBZ0lDQjlLVHRjYmx4dUlDQWdJQ0FnWm5WdVkzUnBiMjRnY21WdGIzWmxVSEp2YldselpTZ3BJSHRjYmlBZ0lDQWdJQ0FnWkdWc1pYUmxJSE5sYkdZdVgyeHZZV1JwYm1kVFkyaGxiV0Z6VzNKbFpsMDdYRzRnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJR1oxYm1OMGFXOXVJR0ZrWkdWa0tISmxaaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnYzJWc1ppNWZjbVZtYzF0eVpXWmRJSHg4SUhObGJHWXVYM05qYUdWdFlYTmJjbVZtWFR0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNibjFjYmlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlmUT09XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2FzeW5jLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2VxdWFsLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXF1YWwuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5cXFxcbi8qZXNsaW50IGNvbXBsZXhpdHk6IDAqL1xcXFxuXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVxdWFsKGEsIGIpIHtcXFxcbiAgaWYgKGEgPT09IGIpIHJldHVybiB0cnVlO1xcXFxuXFxcXG4gIHZhciBhcnJBID0gQXJyYXkuaXNBcnJheShhKVxcXFxuICAgICwgYXJyQiA9IEFycmF5LmlzQXJyYXkoYilcXFxcbiAgICAsIGk7XFxcXG5cXFxcbiAgaWYgKGFyckEgJiYgYXJyQikge1xcXFxuICAgIGlmIChhLmxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xcXFxuICAgIGZvciAoaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKVxcXFxuICAgICAgaWYgKCFlcXVhbChhW2ldLCBiW2ldKSkgcmV0dXJuIGZhbHNlO1xcXFxuICAgIHJldHVybiB0cnVlO1xcXFxuICB9XFxcXG5cXFxcbiAgaWYgKGFyckEgIT0gYXJyQikgcmV0dXJuIGZhbHNlO1xcXFxuXFxcXG4gIGlmIChhICYmIGIgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnICYmIHR5cGVvZiBiID09PSAnb2JqZWN0Jykge1xcXFxuICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoYSk7XFxcXG4gICAgaWYgKGtleXMubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhiKS5sZW5ndGgpIHJldHVybiBmYWxzZTtcXFxcblxcXFxuICAgIHZhciBkYXRlQSA9IGEgaW5zdGFuY2VvZiBEYXRlXFxcXG4gICAgICAsIGRhdGVCID0gYiBpbnN0YW5jZW9mIERhdGU7XFxcXG4gICAgaWYgKGRhdGVBICYmIGRhdGVCKSByZXR1cm4gYS5nZXRUaW1lKCkgPT0gYi5nZXRUaW1lKCk7XFxcXG4gICAgaWYgKGRhdGVBICE9IGRhdGVCKSByZXR1cm4gZmFsc2U7XFxcXG5cXFxcbiAgICB2YXIgcmVnZXhwQSA9IGEgaW5zdGFuY2VvZiBSZWdFeHBcXFxcbiAgICAgICwgcmVnZXhwQiA9IGIgaW5zdGFuY2VvZiBSZWdFeHA7XFxcXG4gICAgaWYgKHJlZ2V4cEEgJiYgcmVnZXhwQikgcmV0dXJuIGEudG9TdHJpbmcoKSA9PSBiLnRvU3RyaW5nKCk7XFxcXG4gICAgaWYgKHJlZ2V4cEEgIT0gcmVnZXhwQikgcmV0dXJuIGZhbHNlO1xcXFxuXFxcXG4gICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspXFxcXG4gICAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBrZXlzW2ldKSkgcmV0dXJuIGZhbHNlO1xcXFxuXFxcXG4gICAgZm9yIChpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspXFxcXG4gICAgICBpZighZXF1YWwoYVtrZXlzW2ldXSwgYltrZXlzW2ldXSkpIHJldHVybiBmYWxzZTtcXFxcblxcXFxuICAgIHJldHVybiB0cnVlO1xcXFxuICB9XFxcXG5cXFxcbiAgcmV0dXJuIGZhbHNlO1xcXFxufTtcXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWpiMjF3YVd4bEwyVnhkV0ZzTG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlqYjIxd2FXeGxMMlZ4ZFdGc0xtcHpQemd4TUdVaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNHZLbVZ6YkdsdWRDQmpiMjF3YkdWNGFYUjVPaUF3S2k5Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpQmxjWFZoYkNoaExDQmlLU0I3WEc0Z0lHbG1JQ2hoSUQwOVBTQmlLU0J5WlhSMWNtNGdkSEoxWlR0Y2JseHVJQ0IyWVhJZ1lYSnlRU0E5SUVGeWNtRjVMbWx6UVhKeVlYa29ZU2xjYmlBZ0lDQXNJR0Z5Y2tJZ1BTQkJjbkpoZVM1cGMwRnljbUY1S0dJcFhHNGdJQ0FnTENCcE8xeHVYRzRnSUdsbUlDaGhjbkpCSUNZbUlHRnlja0lwSUh0Y2JpQWdJQ0JwWmlBb1lTNXNaVzVuZEdnZ0lUMGdZaTVzWlc1bmRHZ3BJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JpQWdJQ0JtYjNJZ0tHa2dQU0F3T3lCcElEd2dZUzVzWlc1bmRHZzdJR2tyS3lsY2JpQWdJQ0FnSUdsbUlDZ2haWEYxWVd3b1lWdHBYU3dnWWx0cFhTa3BJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JpQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2hoY25KQklDRTlJR0Z5Y2tJcElISmxkSFZ5YmlCbVlXeHpaVHRjYmx4dUlDQnBaaUFvWVNBbUppQmlJQ1ltSUhSNWNHVnZaaUJoSUQwOVBTQW5iMkpxWldOMEp5QW1KaUIwZVhCbGIyWWdZaUE5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNCMllYSWdhMlY1Y3lBOUlFOWlhbVZqZEM1clpYbHpLR0VwTzF4dUlDQWdJR2xtSUNoclpYbHpMbXhsYm1kMGFDQWhQVDBnVDJKcVpXTjBMbXRsZVhNb1lpa3ViR1Z1WjNSb0tTQnlaWFIxY200Z1ptRnNjMlU3WEc1Y2JpQWdJQ0IyWVhJZ1pHRjBaVUVnUFNCaElHbHVjM1JoYm1ObGIyWWdSR0YwWlZ4dUlDQWdJQ0FnTENCa1lYUmxRaUE5SUdJZ2FXNXpkR0Z1WTJWdlppQkVZWFJsTzF4dUlDQWdJR2xtSUNoa1lYUmxRU0FtSmlCa1lYUmxRaWtnY21WMGRYSnVJR0V1WjJWMFZHbHRaU2dwSUQwOUlHSXVaMlYwVkdsdFpTZ3BPMXh1SUNBZ0lHbG1JQ2hrWVhSbFFTQWhQU0JrWVhSbFFpa2djbVYwZFhKdUlHWmhiSE5sTzF4dVhHNGdJQ0FnZG1GeUlISmxaMlY0Y0VFZ1BTQmhJR2x1YzNSaGJtTmxiMllnVW1WblJYaHdYRzRnSUNBZ0lDQXNJSEpsWjJWNGNFSWdQU0JpSUdsdWMzUmhibU5sYjJZZ1VtVm5SWGh3TzF4dUlDQWdJR2xtSUNoeVpXZGxlSEJCSUNZbUlISmxaMlY0Y0VJcElISmxkSFZ5YmlCaExuUnZVM1J5YVc1bktDa2dQVDBnWWk1MGIxTjBjbWx1WnlncE8xeHVJQ0FnSUdsbUlDaHlaV2RsZUhCQklDRTlJSEpsWjJWNGNFSXBJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JseHVJQ0FnSUdadmNpQW9hU0E5SURBN0lHa2dQQ0JyWlhsekxteGxibWQwYURzZ2FTc3JLVnh1SUNBZ0lDQWdhV1lnS0NGUFltcGxZM1F1Y0hKdmRHOTBlWEJsTG1oaGMwOTNibEJ5YjNCbGNuUjVMbU5oYkd3b1lpd2dhMlY1YzF0cFhTa3BJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JseHVJQ0FnSUdadmNpQW9hU0E5SURBN0lHa2dQQ0JyWlhsekxteGxibWQwYURzZ2FTc3JLVnh1SUNBZ0lDQWdhV1lvSVdWeGRXRnNLR0ZiYTJWNWMxdHBYVjBzSUdKYmEyVjVjMXRwWFYwcEtTQnlaWFIxY200Z1ptRnNjMlU3WEc1Y2JpQWdJQ0J5WlhSMWNtNGdkSEoxWlR0Y2JpQWdmVnh1WEc0Z0lISmxkSFZ5YmlCbVlXeHpaVHRjYm4wN1hHNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9lcXVhbC5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9lcnJvcl9jbGFzc2VzLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9lcnJvcl9jbGFzc2VzLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5cXFxcbnZhciByZXNvbHZlID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9yZXNvbHZlICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3Jlc29sdmUuanNcXFxcXFxcIik7XFxcXG5cXFxcbm1vZHVsZS5leHBvcnRzID0ge1xcXFxuICBWYWxpZGF0aW9uOiBlcnJvclN1YmNsYXNzKFZhbGlkYXRpb25FcnJvciksXFxcXG4gIE1pc3NpbmdSZWY6IGVycm9yU3ViY2xhc3MoTWlzc2luZ1JlZkVycm9yKVxcXFxufTtcXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBWYWxpZGF0aW9uRXJyb3IoZXJyb3JzKSB7XFxcXG4gIHRoaXMubWVzc2FnZSA9ICd2YWxpZGF0aW9uIGZhaWxlZCc7XFxcXG4gIHRoaXMuZXJyb3JzID0gZXJyb3JzO1xcXFxuICB0aGlzLmFqdiA9IHRoaXMudmFsaWRhdGlvbiA9IHRydWU7XFxcXG59XFxcXG5cXFxcblxcXFxuTWlzc2luZ1JlZkVycm9yLm1lc3NhZ2UgPSBmdW5jdGlvbiAoYmFzZUlkLCByZWYpIHtcXFxcbiAgcmV0dXJuICdjYW5cXFxcXFxcXCd0IHJlc29sdmUgcmVmZXJlbmNlICcgKyByZWYgKyAnIGZyb20gaWQgJyArIGJhc2VJZDtcXFxcbn07XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gTWlzc2luZ1JlZkVycm9yKGJhc2VJZCwgcmVmLCBtZXNzYWdlKSB7XFxcXG4gIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2UgfHwgTWlzc2luZ1JlZkVycm9yLm1lc3NhZ2UoYmFzZUlkLCByZWYpO1xcXFxuICB0aGlzLm1pc3NpbmdSZWYgPSByZXNvbHZlLnVybChiYXNlSWQsIHJlZik7XFxcXG4gIHRoaXMubWlzc2luZ1NjaGVtYSA9IHJlc29sdmUubm9ybWFsaXplSWQocmVzb2x2ZS5mdWxsUGF0aCh0aGlzLm1pc3NpbmdSZWYpKTtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBlcnJvclN1YmNsYXNzKFN1YmNsYXNzKSB7XFxcXG4gIFN1YmNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKTtcXFxcbiAgU3ViY2xhc3MucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gU3ViY2xhc3M7XFxcXG4gIHJldHVybiBTdWJjbGFzcztcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWpiMjF3YVd4bEwyVnljbTl5WDJOc1lYTnpaWE11YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTloYW5ZdmJHbGlMMk52YlhCcGJHVXZaWEp5YjNKZlkyeGhjM05sY3k1cWN6ODRPVGxoSWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSEpsYzI5c2RtVWdQU0J5WlhGMWFYSmxLQ2N1TDNKbGMyOXNkbVVuS1R0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQjdYRzRnSUZaaGJHbGtZWFJwYjI0NklHVnljbTl5VTNWaVkyeGhjM01vVm1Gc2FXUmhkR2x2YmtWeWNtOXlLU3hjYmlBZ1RXbHpjMmx1WjFKbFpqb2daWEp5YjNKVGRXSmpiR0Z6Y3loTmFYTnphVzVuVW1WbVJYSnliM0lwWEc1OU8xeHVYRzVjYm1aMWJtTjBhVzl1SUZaaGJHbGtZWFJwYjI1RmNuSnZjaWhsY25KdmNuTXBJSHRjYmlBZ2RHaHBjeTV0WlhOellXZGxJRDBnSjNaaGJHbGtZWFJwYjI0Z1ptRnBiR1ZrSnp0Y2JpQWdkR2hwY3k1bGNuSnZjbk1nUFNCbGNuSnZjbk03WEc0Z0lIUm9hWE11WVdwMklEMGdkR2hwY3k1MllXeHBaR0YwYVc5dUlEMGdkSEoxWlR0Y2JuMWNibHh1WEc1TmFYTnphVzVuVW1WbVJYSnliM0l1YldWemMyRm5aU0E5SUdaMWJtTjBhVzl1SUNoaVlYTmxTV1FzSUhKbFppa2dlMXh1SUNCeVpYUjFjbTRnSjJOaGJseGNKM1FnY21WemIyeDJaU0J5WldabGNtVnVZMlVnSnlBcklISmxaaUFySUNjZ1puSnZiU0JwWkNBbklDc2dZbUZ6WlVsa08xeHVmVHRjYmx4dVhHNW1kVzVqZEdsdmJpQk5hWE56YVc1blVtVm1SWEp5YjNJb1ltRnpaVWxrTENCeVpXWXNJRzFsYzNOaFoyVXBJSHRjYmlBZ2RHaHBjeTV0WlhOellXZGxJRDBnYldWemMyRm5aU0I4ZkNCTmFYTnphVzVuVW1WbVJYSnliM0l1YldWemMyRm5aU2hpWVhObFNXUXNJSEpsWmlrN1hHNGdJSFJvYVhNdWJXbHpjMmx1WjFKbFppQTlJSEpsYzI5c2RtVXVkWEpzS0dKaGMyVkpaQ3dnY21WbUtUdGNiaUFnZEdocGN5NXRhWE56YVc1blUyTm9aVzFoSUQwZ2NtVnpiMngyWlM1dWIzSnRZV3hwZW1WSlpDaHlaWE52YkhabExtWjFiR3hRWVhSb0tIUm9hWE11YldsemMybHVaMUpsWmlrcE8xeHVmVnh1WEc1Y2JtWjFibU4wYVc5dUlHVnljbTl5VTNWaVkyeGhjM01vVTNWaVkyeGhjM01wSUh0Y2JpQWdVM1ZpWTJ4aGMzTXVjSEp2ZEc5MGVYQmxJRDBnVDJKcVpXTjBMbU55WldGMFpTaEZjbkp2Y2k1d2NtOTBiM1I1Y0dVcE8xeHVJQ0JUZFdKamJHRnpjeTV3Y205MGIzUjVjR1V1WTI5dWMzUnlkV04wYjNJZ1BTQlRkV0pqYkdGemN6dGNiaUFnY21WMGRYSnVJRk4xWW1Oc1lYTnpPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2Vycm9yX2NsYXNzZXMuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZm9ybWF0cy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZm9ybWF0cy5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxuXFxcXG52YXIgdXRpbCA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS91dGlsLmpzXFxcXFxcXCIpO1xcXFxuXFxcXG52YXIgREFURSA9IC9eXFxcXFxcXFxkXFxcXFxcXFxkXFxcXFxcXFxkXFxcXFxcXFxkLShcXFxcXFxcXGRcXFxcXFxcXGQpLShcXFxcXFxcXGRcXFxcXFxcXGQpJC87XFxcXG52YXIgREFZUyA9IFswLDMxLDI5LDMxLDMwLDMxLDMwLDMxLDMxLDMwLDMxLDMwLDMxXTtcXFxcbnZhciBUSU1FID0gL14oXFxcXFxcXFxkXFxcXFxcXFxkKTooXFxcXFxcXFxkXFxcXFxcXFxkKTooXFxcXFxcXFxkXFxcXFxcXFxkKShcXFxcXFxcXC5cXFxcXFxcXGQrKT8oenxbKy1dXFxcXFxcXFxkXFxcXFxcXFxkOlxcXFxcXFxcZFxcXFxcXFxcZCk/JC9pO1xcXFxudmFyIEhPU1ROQU1FID0gL15bYS16MC05XSg/OlthLXowLTktXXswLDYxfVthLXowLTldKT8oPzpcXFxcXFxcXC5bYS16MC05XSg/OlstMC05YS16XXswLDYxfVswLTlhLXpdKT8pKiQvaTtcXFxcbnZhciBVUkkgPSAvXig/OlthLXpdW2EtejAtOStcXFxcXFxcXC0uXSo6KSg/OlxcXFxcXFxcLz9cXFxcXFxcXC8oPzooPzpbYS16MC05XFxcXFxcXFwtLl9+ISQmJygpKissOz06XXwlWzAtOWEtZl17Mn0pKkApPyg/OlxcXFxcXFxcWyg/Oig/Oig/Oig/OlswLTlhLWZdezEsNH06KXs2fXw6Oig/OlswLTlhLWZdezEsNH06KXs1fXwoPzpbMC05YS1mXXsxLDR9KT86Oig/OlswLTlhLWZdezEsNH06KXs0fXwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCwxfVswLTlhLWZdezEsNH0pPzo6KD86WzAtOWEtZl17MSw0fTopezN9fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDJ9WzAtOWEtZl17MSw0fSk/OjooPzpbMC05YS1mXXsxLDR9Oil7Mn18KD86KD86WzAtOWEtZl17MSw0fTopezAsM31bMC05YS1mXXsxLDR9KT86OlswLTlhLWZdezEsNH06fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDR9WzAtOWEtZl17MSw0fSk/OjopKD86WzAtOWEtZl17MSw0fTpbMC05YS1mXXsxLDR9fCg/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfFswMV0/XFxcXFxcXFxkXFxcXFxcXFxkPylcXFxcXFxcXC4pezN9KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8WzAxXT9cXFxcXFxcXGRcXFxcXFxcXGQ/KSl8KD86KD86WzAtOWEtZl17MSw0fTopezAsNX1bMC05YS1mXXsxLDR9KT86OlswLTlhLWZdezEsNH18KD86KD86WzAtOWEtZl17MSw0fTopezAsNn1bMC05YS1mXXsxLDR9KT86Oil8W1Z2XVswLTlhLWZdK1xcXFxcXFxcLlthLXowLTlcXFxcXFxcXC0uX34hJCYnKCkqKyw7PTpdKylcXFxcXFxcXF18KD86KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8WzAxXT9cXFxcXFxcXGRcXFxcXFxcXGQ/KVxcXFxcXFxcLil7M30oPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHxbMDFdP1xcXFxcXFxcZFxcXFxcXFxcZD8pfCg/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnKCkqKyw7PV18JVswLTlhLWZdezJ9KSopKD86OlxcXFxcXFxcZCopPyg/OlxcXFxcXFxcLyg/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKikqfFxcXFxcXFxcLyg/Oig/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKyg/OlxcXFxcXFxcLyg/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKikqKT98KD86W2EtejAtOVxcXFxcXFxcLS5ffiEkJicoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkrKD86XFxcXFxcXFwvKD86W2EtejAtOVxcXFxcXFxcLS5ffiEkJicoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkqKSopKD86XFxcXFxcXFw/KD86W2EtejAtOVxcXFxcXFxcLS5ffiEkJicoKSorLDs9OkBcXFxcXFxcXC8/XXwlWzAtOWEtZl17Mn0pKik/KD86XFxcXFxcXFwjKD86W2EtejAtOVxcXFxcXFxcLS5ffiEkJicoKSorLDs9OkBcXFxcXFxcXC8/XXwlWzAtOWEtZl17Mn0pKik/JC9pO1xcXFxudmFyIFVSSVJFRiA9IC9eKD86W2Etel1bYS16MC05K1xcXFxcXFxcLS5dKjopPyg/OlxcXFxcXFxcLz9cXFxcXFxcXC8oPzooPzpbYS16MC05XFxcXFxcXFwtLl9+ISQmJygpKissOz06XXwlWzAtOWEtZl17Mn0pKkApPyg/OlxcXFxcXFxcWyg/Oig/Oig/Oig/OlswLTlhLWZdezEsNH06KXs2fXw6Oig/OlswLTlhLWZdezEsNH06KXs1fXwoPzpbMC05YS1mXXsxLDR9KT86Oig/OlswLTlhLWZdezEsNH06KXs0fXwoPzooPzpbMC05YS1mXXsxLDR9Oil7MCwxfVswLTlhLWZdezEsNH0pPzo6KD86WzAtOWEtZl17MSw0fTopezN9fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDJ9WzAtOWEtZl17MSw0fSk/OjooPzpbMC05YS1mXXsxLDR9Oil7Mn18KD86KD86WzAtOWEtZl17MSw0fTopezAsM31bMC05YS1mXXsxLDR9KT86OlswLTlhLWZdezEsNH06fCg/Oig/OlswLTlhLWZdezEsNH06KXswLDR9WzAtOWEtZl17MSw0fSk/OjopKD86WzAtOWEtZl17MSw0fTpbMC05YS1mXXsxLDR9fCg/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfFswMV0/XFxcXFxcXFxkXFxcXFxcXFxkPylcXFxcXFxcXC4pezN9KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8WzAxXT9cXFxcXFxcXGRcXFxcXFxcXGQ/KSl8KD86KD86WzAtOWEtZl17MSw0fTopezAsNX1bMC05YS1mXXsxLDR9KT86OlswLTlhLWZdezEsNH18KD86KD86WzAtOWEtZl17MSw0fTopezAsNn1bMC05YS1mXXsxLDR9KT86Oil8W1Z2XVswLTlhLWZdK1xcXFxcXFxcLlthLXowLTlcXFxcXFxcXC0uX34hJCYnKCkqKyw7PTpdKylcXFxcXFxcXF18KD86KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8WzAxXT9cXFxcXFxcXGRcXFxcXFxcXGQ/KVxcXFxcXFxcLil7M30oPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHxbMDFdP1xcXFxcXFxcZFxcXFxcXFxcZD8pfCg/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnXFxcXFxcXCIoKSorLDs9XXwlWzAtOWEtZl17Mn0pKikoPzo6XFxcXFxcXFxkKik/KD86XFxcXFxcXFwvKD86W2EtejAtOVxcXFxcXFxcLS5ffiEkJidcXFxcXFxcIigpKissOz06QF18JVswLTlhLWZdezJ9KSopKnxcXFxcXFxcXC8oPzooPzpbYS16MC05XFxcXFxcXFwtLl9+ISQmJ1xcXFxcXFwiKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKyg/OlxcXFxcXFxcLyg/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnXFxcXFxcXCIoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkqKSopP3woPzpbYS16MC05XFxcXFxcXFwtLl9+ISQmJ1xcXFxcXFwiKCkqKyw7PTpAXXwlWzAtOWEtZl17Mn0pKyg/OlxcXFxcXFxcLyg/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnXFxcXFxcXCIoKSorLDs9OkBdfCVbMC05YS1mXXsyfSkqKSopPyg/OlxcXFxcXFxcPyg/OlthLXowLTlcXFxcXFxcXC0uX34hJCYnXFxcXFxcXCIoKSorLDs9OkBcXFxcXFxcXC8/XXwlWzAtOWEtZl17Mn0pKik/KD86XFxcXFxcXFwjKD86W2EtejAtOVxcXFxcXFxcLS5ffiEkJidcXFxcXFxcIigpKissOz06QFxcXFxcXFxcLz9dfCVbMC05YS1mXXsyfSkqKT8kL2k7XFxcXG4vLyB1cmktdGVtcGxhdGU6IGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2NTcwXFxcXG52YXIgVVJJVEVNUExBVEUgPSAvXig/Oig/OlteXFxcXFxcXFx4MDAtXFxcXFxcXFx4MjBcXFxcXFxcIic8PiVcXFxcXFxcXFxcXFxcXFxcXmB7fH1dfCVbMC05YS1mXXsyfSl8XFxcXFxcXFx7WysjLlxcXFxcXFxcLzs/Jj0sIUB8XT8oPzpbYS16MC05X118JVswLTlhLWZdezJ9KSsoPzpcXFxcXFxcXDpbMS05XVswLTldezAsM318XFxcXFxcXFwqKT8oPzosKD86W2EtejAtOV9dfCVbMC05YS1mXXsyfSkrKD86XFxcXFxcXFw6WzEtOV1bMC05XXswLDN9fFxcXFxcXFxcKik/KSpcXFxcXFxcXH0pKiQvaTtcXFxcbi8vIEZvciB0aGUgc291cmNlOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9kcGVyaW5pLzcyOTI5NFxcXFxuLy8gRm9yIHRlc3QgY2FzZXM6IGh0dHBzOi8vbWF0aGlhc2J5bmVucy5iZS9kZW1vL3VybC1yZWdleFxcXFxuLy8gQHRvZG8gRGVsZXRlIGN1cnJlbnQgVVJMIGluIGZhdm91ciBvZiB0aGUgY29tbWVudGVkIG91dCBVUkwgcnVsZSB3aGVuIHRoaXMgaXNzdWUgaXMgZml4ZWQgaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC9lc2xpbnQvaXNzdWVzLzc5ODMuXFxcXG4vLyB2YXIgVVJMID0gL14oPzooPzpodHRwcz98ZnRwKTpcXFxcXFxcXC9cXFxcXFxcXC8pKD86XFxcXFxcXFxTKyg/OjpcXFxcXFxcXFMqKT9AKT8oPzooPyExMCg/OlxcXFxcXFxcLlxcXFxcXFxcZHsxLDN9KXszfSkoPyExMjcoPzpcXFxcXFxcXC5cXFxcXFxcXGR7MSwzfSl7M30pKD8hMTY5XFxcXFxcXFwuMjU0KD86XFxcXFxcXFwuXFxcXFxcXFxkezEsM30pezJ9KSg/ITE5MlxcXFxcXFxcLjE2OCg/OlxcXFxcXFxcLlxcXFxcXFxcZHsxLDN9KXsyfSkoPyExNzJcXFxcXFxcXC4oPzoxWzYtOV18MlxcXFxcXFxcZHwzWzAtMV0pKD86XFxcXFxcXFwuXFxcXFxcXFxkezEsM30pezJ9KSg/OlsxLTldXFxcXFxcXFxkP3wxXFxcXFxcXFxkXFxcXFxcXFxkfDJbMDFdXFxcXFxcXFxkfDIyWzAtM10pKD86XFxcXFxcXFwuKD86MT9cXFxcXFxcXGR7MSwyfXwyWzAtNF1cXFxcXFxcXGR8MjVbMC01XSkpezJ9KD86XFxcXFxcXFwuKD86WzEtOV1cXFxcXFxcXGQ/fDFcXFxcXFxcXGRcXFxcXFxcXGR8MlswLTRdXFxcXFxcXFxkfDI1WzAtNF0pKXwoPzooPzpbYS16XFxcXFxcXFx1ezAwYTF9LVxcXFxcXFxcdXtmZmZmfTAtOV0rLT8pKlthLXpcXFxcXFxcXHV7MDBhMX0tXFxcXFxcXFx1e2ZmZmZ9MC05XSspKD86XFxcXFxcXFwuKD86W2EtelxcXFxcXFxcdXswMGExfS1cXFxcXFxcXHV7ZmZmZn0wLTldKy0/KSpbYS16XFxcXFxcXFx1ezAwYTF9LVxcXFxcXFxcdXtmZmZmfTAtOV0rKSooPzpcXFxcXFxcXC4oPzpbYS16XFxcXFxcXFx1ezAwYTF9LVxcXFxcXFxcdXtmZmZmfV17Mix9KSkpKD86OlxcXFxcXFxcZHsyLDV9KT8oPzpcXFxcXFxcXC9bXlxcXFxcXFxcc10qKT8kL2l1O1xcXFxudmFyIFVSTCA9IC9eKD86KD86aHR0cFtzXFxcXFxcXFx1MDE3Rl0/fGZ0cCk6XFxcXFxcXFwvXFxcXFxcXFwvKSg/Oig/OltcXFxcXFxcXDAtXFxcXFxcXFx4MDhcXFxcXFxcXHgwRS1cXFxcXFxcXHgxRiEtXFxcXFxcXFx4OUZcXFxcXFxcXHhBMS1cXFxcXFxcXHUxNjdGXFxcXFxcXFx1MTY4MS1cXFxcXFxcXHUxRkZGXFxcXFxcXFx1MjAwQi1cXFxcXFxcXHUyMDI3XFxcXFxcXFx1MjAyQS1cXFxcXFxcXHUyMDJFXFxcXFxcXFx1MjAzMC1cXFxcXFxcXHUyMDVFXFxcXFxcXFx1MjA2MC1cXFxcXFxcXHUyRkZGXFxcXFxcXFx1MzAwMS1cXFxcXFxcXHVEN0ZGXFxcXFxcXFx1RTAwMC1cXFxcXFxcXHVGRUZFXFxcXFxcXFx1RkYwMC1cXFxcXFxcXHVGRkZGXXxbXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdfFtcXFxcXFxcXHVEODAwLVxcXFxcXFxcdURCRkZdKD8hW1xcXFxcXFxcdURDMDAtXFxcXFxcXFx1REZGRl0pfCg/OlteXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXXxeKVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdKSsoPzo6KD86W1xcXFxcXFxcMC1cXFxcXFxcXHgwOFxcXFxcXFxceDBFLVxcXFxcXFxceDFGIS1cXFxcXFxcXHg5RlxcXFxcXFxceEExLVxcXFxcXFxcdTE2N0ZcXFxcXFxcXHUxNjgxLVxcXFxcXFxcdTFGRkZcXFxcXFxcXHUyMDBCLVxcXFxcXFxcdTIwMjdcXFxcXFxcXHUyMDJBLVxcXFxcXFxcdTIwMkVcXFxcXFxcXHUyMDMwLVxcXFxcXFxcdTIwNUVcXFxcXFxcXHUyMDYwLVxcXFxcXFxcdTJGRkZcXFxcXFxcXHUzMDAxLVxcXFxcXFxcdUQ3RkZcXFxcXFxcXHVFMDAwLVxcXFxcXFxcdUZFRkVcXFxcXFxcXHVGRjAwLVxcXFxcXFxcdUZGRkZdfFtcXFxcXFxcXHVEODAwLVxcXFxcXFxcdURCRkZdW1xcXFxcXFxcdURDMDAtXFxcXFxcXFx1REZGRl18W1xcXFxcXFxcdUQ4MDAtXFxcXFxcXFx1REJGRl0oPyFbXFxcXFxcXFx1REMwMC1cXFxcXFxcXHVERkZGXSl8KD86W15cXFxcXFxcXHVEODAwLVxcXFxcXFxcdURCRkZdfF4pW1xcXFxcXFxcdURDMDAtXFxcXFxcXFx1REZGRl0pKik/QCk/KD86KD8hMTAoPzpcXFxcXFxcXC5bMC05XXsxLDN9KXszfSkoPyExMjcoPzpcXFxcXFxcXC5bMC05XXsxLDN9KXszfSkoPyExNjlcXFxcXFxcXC4yNTQoPzpcXFxcXFxcXC5bMC05XXsxLDN9KXsyfSkoPyExOTJcXFxcXFxcXC4xNjgoPzpcXFxcXFxcXC5bMC05XXsxLDN9KXsyfSkoPyExNzJcXFxcXFxcXC4oPzoxWzYtOV18MlswLTldfDNbMDFdKSg/OlxcXFxcXFxcLlswLTldezEsM30pezJ9KSg/OlsxLTldWzAtOV0/fDFbMC05XVswLTldfDJbMDFdWzAtOV18MjJbMC0zXSkoPzpcXFxcXFxcXC4oPzoxP1swLTldezEsMn18MlswLTRdWzAtOV18MjVbMC01XSkpezJ9KD86XFxcXFxcXFwuKD86WzEtOV1bMC05XT98MVswLTldWzAtOV18MlswLTRdWzAtOV18MjVbMC00XSkpfCg/Oig/Oig/OlswLTlLU2EtelxcXFxcXFxceEExLVxcXFxcXFxcdUQ3RkZcXFxcXFxcXHVFMDAwLVxcXFxcXFxcdUZGRkZdfFtcXFxcXFxcXHVEODAwLVxcXFxcXFxcdURCRkZdKD8hW1xcXFxcXFxcdURDMDAtXFxcXFxcXFx1REZGRl0pfCg/OlteXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXXxeKVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdKStcXFxcXFxcXC0/KSooPzpbMC05S1NhLXpcXFxcXFxcXHhBMS1cXFxcXFxcXHVEN0ZGXFxcXFxcXFx1RTAwMC1cXFxcXFxcXHVGRkZGXXxbXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXSg/IVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdKXwoPzpbXlxcXFxcXFxcdUQ4MDAtXFxcXFxcXFx1REJGRl18XilbXFxcXFxcXFx1REMwMC1cXFxcXFxcXHVERkZGXSkrKSg/OlxcXFxcXFxcLig/Oig/OlswLTlLU2EtelxcXFxcXFxceEExLVxcXFxcXFxcdUQ3RkZcXFxcXFxcXHVFMDAwLVxcXFxcXFxcdUZGRkZdfFtcXFxcXFxcXHVEODAwLVxcXFxcXFxcdURCRkZdKD8hW1xcXFxcXFxcdURDMDAtXFxcXFxcXFx1REZGRl0pfCg/OlteXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXXxeKVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdKStcXFxcXFxcXC0/KSooPzpbMC05S1NhLXpcXFxcXFxcXHhBMS1cXFxcXFxcXHVEN0ZGXFxcXFxcXFx1RTAwMC1cXFxcXFxcXHVGRkZGXXxbXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXSg/IVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdKXwoPzpbXlxcXFxcXFxcdUQ4MDAtXFxcXFxcXFx1REJGRl18XilbXFxcXFxcXFx1REMwMC1cXFxcXFxcXHVERkZGXSkrKSooPzpcXFxcXFxcXC4oPzooPzpbS1NhLXpcXFxcXFxcXHhBMS1cXFxcXFxcXHVEN0ZGXFxcXFxcXFx1RTAwMC1cXFxcXFxcXHVGRkZGXXxbXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXSg/IVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdKXwoPzpbXlxcXFxcXFxcdUQ4MDAtXFxcXFxcXFx1REJGRl18XilbXFxcXFxcXFx1REMwMC1cXFxcXFxcXHVERkZGXSl7Mix9KSkpKD86OlswLTldezIsNX0pPyg/OlxcXFxcXFxcLyg/OltcXFxcXFxcXDAtXFxcXFxcXFx4MDhcXFxcXFxcXHgwRS1cXFxcXFxcXHgxRiEtXFxcXFxcXFx4OUZcXFxcXFxcXHhBMS1cXFxcXFxcXHUxNjdGXFxcXFxcXFx1MTY4MS1cXFxcXFxcXHUxRkZGXFxcXFxcXFx1MjAwQi1cXFxcXFxcXHUyMDI3XFxcXFxcXFx1MjAyQS1cXFxcXFxcXHUyMDJFXFxcXFxcXFx1MjAzMC1cXFxcXFxcXHUyMDVFXFxcXFxcXFx1MjA2MC1cXFxcXFxcXHUyRkZGXFxcXFxcXFx1MzAwMS1cXFxcXFxcXHVEN0ZGXFxcXFxcXFx1RTAwMC1cXFxcXFxcXHVGRUZFXFxcXFxcXFx1RkYwMC1cXFxcXFxcXHVGRkZGXXxbXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdfFtcXFxcXFxcXHVEODAwLVxcXFxcXFxcdURCRkZdKD8hW1xcXFxcXFxcdURDMDAtXFxcXFxcXFx1REZGRl0pfCg/OlteXFxcXFxcXFx1RDgwMC1cXFxcXFxcXHVEQkZGXXxeKVtcXFxcXFxcXHVEQzAwLVxcXFxcXFxcdURGRkZdKSopPyQvaTtcXFxcbnZhciBVVUlEID0gL14oPzp1cm5cXFxcXFxcXDp1dWlkXFxcXFxcXFw6KT9bMC05YS1mXXs4fS0oPzpbMC05YS1mXXs0fS0pezN9WzAtOWEtZl17MTJ9JC9pO1xcXFxudmFyIEpTT05fUE9JTlRFUiA9IC9eKD86XFxcXFxcXFwvKD86W15+XFxcXFxcXFwvXXx+MHx+MSkqKSokfF5cXFxcXFxcXCMoPzpcXFxcXFxcXC8oPzpbYS16MC05X1xcXFxcXFxcLVxcXFxcXFxcLiEkJicoKSorLDs6PUBdfCVbMC05YS1mXXsyfXx+MHx+MSkqKSokL2k7XFxcXG52YXIgUkVMQVRJVkVfSlNPTl9QT0lOVEVSID0gL14oPzowfFsxLTldWzAtOV0qKSg/OlxcXFxcXFxcI3woPzpcXFxcXFxcXC8oPzpbXn5cXFxcXFxcXC9dfH4wfH4xKSopKikkLztcXFxcblxcXFxuXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZvcm1hdHM7XFxcXG5cXFxcbmZ1bmN0aW9uIGZvcm1hdHMobW9kZSkge1xcXFxuICBtb2RlID0gbW9kZSA9PSAnZnVsbCcgPyAnZnVsbCcgOiAnZmFzdCc7XFxcXG4gIHJldHVybiB1dGlsLmNvcHkoZm9ybWF0c1ttb2RlXSk7XFxcXG59XFxcXG5cXFxcblxcXFxuZm9ybWF0cy5mYXN0ID0ge1xcXFxuICAvLyBkYXRlOiBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzMzM5I3NlY3Rpb24tNS42XFxcXG4gIGRhdGU6IC9eXFxcXFxcXFxkXFxcXFxcXFxkXFxcXFxcXFxkXFxcXFxcXFxkLVswLTFdXFxcXFxcXFxkLVswLTNdXFxcXFxcXFxkJC8sXFxcXG4gIC8vIGRhdGUtdGltZTogaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzMzOSNzZWN0aW9uLTUuNlxcXFxuICB0aW1lOiAvXlswLTJdXFxcXFxcXFxkOlswLTVdXFxcXFxcXFxkOlswLTVdXFxcXFxcXFxkKD86XFxcXFxcXFwuXFxcXFxcXFxkKyk/KD86enxbKy1dXFxcXFxcXFxkXFxcXFxcXFxkOlxcXFxcXFxcZFxcXFxcXFxcZCk/JC9pLFxcXFxuICAnZGF0ZS10aW1lJzogL15cXFxcXFxcXGRcXFxcXFxcXGRcXFxcXFxcXGRcXFxcXFxcXGQtWzAtMV1cXFxcXFxcXGQtWzAtM11cXFxcXFxcXGRbdFxcXFxcXFxcc11bMC0yXVxcXFxcXFxcZDpbMC01XVxcXFxcXFxcZDpbMC01XVxcXFxcXFxcZCg/OlxcXFxcXFxcLlxcXFxcXFxcZCspPyg/Onp8WystXVxcXFxcXFxcZFxcXFxcXFxcZDpcXFxcXFxcXGRcXFxcXFxcXGQpJC9pLFxcXFxuICAvLyB1cmk6IGh0dHBzOi8vZ2l0aHViLmNvbS9tYWZpbnRvc2gvaXMtbXktanNvbi12YWxpZC9ibG9iL21hc3Rlci9mb3JtYXRzLmpzXFxcXG4gIHVyaTogL14oPzpbYS16XVthLXowLTkrLS5dKikoPzpcXFxcXFxcXDp8XFxcXFxcXFwvKVxcXFxcXFxcLz9bXlxcXFxcXFxcc10qJC9pLFxcXFxuICAndXJpLXJlZmVyZW5jZSc6IC9eKD86KD86W2Etel1bYS16MC05Ky0uXSo6KT9cXFxcXFxcXC9cXFxcXFxcXC8pP1teXFxcXFxcXFxzXSokL2ksXFxcXG4gICd1cmktdGVtcGxhdGUnOiBVUklURU1QTEFURSxcXFxcbiAgdXJsOiBVUkwsXFxcXG4gIC8vIGVtYWlsIChzb3VyY2VzIGZyb20ganNlbiB2YWxpZGF0b3IpOlxcXFxuICAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIwMTMyMy91c2luZy1hLXJlZ3VsYXItZXhwcmVzc2lvbi10by12YWxpZGF0ZS1hbi1lbWFpbC1hZGRyZXNzI2Fuc3dlci04ODI5MzYzXFxcXG4gIC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw1L2Zvcm1zLmh0bWwjdmFsaWQtZS1tYWlsLWFkZHJlc3MgKHNlYXJjaCBmb3IgJ3dpbGxmdWwgdmlvbGF0aW9uJylcXFxcbiAgZW1haWw6IC9eW2EtejAtOS4hIyQlJicqK1xcXFxcXFxcLz0/Xl9ge3x9fi1dK0BbYS16MC05XSg/OlthLXowLTktXXswLDYxfVthLXowLTldKT8oPzpcXFxcXFxcXC5bYS16MC05XSg/OlthLXowLTktXXswLDYxfVthLXowLTldKT8pKiQvaSxcXFxcbiAgaG9zdG5hbWU6IEhPU1ROQU1FLFxcXFxuICAvLyBvcHRpbWl6ZWQgaHR0cHM6Ly93d3cuc2FmYXJpYm9va3NvbmxpbmUuY29tL2xpYnJhcnkvdmlldy9yZWd1bGFyLWV4cHJlc3Npb25zLWNvb2tib29rLzk3ODA1OTY4MDI4MzcvY2gwN3MxNi5odG1sXFxcXG4gIGlwdjQ6IC9eKD86KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8WzAxXT9cXFxcXFxcXGRcXFxcXFxcXGQ/KVxcXFxcXFxcLil7M30oPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHxbMDFdP1xcXFxcXFxcZFxcXFxcXFxcZD8pJC8sXFxcXG4gIC8vIG9wdGltaXplZCBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzUzNDk3L3JlZ3VsYXItZXhwcmVzc2lvbi10aGF0LW1hdGNoZXMtdmFsaWQtaXB2Ni1hZGRyZXNzZXNcXFxcbiAgaXB2NjogL15cXFxcXFxcXHMqKD86KD86KD86WzAtOWEtZl17MSw0fTopezd9KD86WzAtOWEtZl17MSw0fXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezZ9KD86OlswLTlhLWZdezEsNH18KD86KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKD86XFxcXFxcXFwuKD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKXszfSl8OikpfCg/Oig/OlswLTlhLWZdezEsNH06KXs1fSg/Oig/Oig/OjpbMC05YS1mXXsxLDR9KXsxLDJ9KXw6KD86KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKD86XFxcXFxcXFwuKD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKXszfSl8OikpfCg/Oig/OlswLTlhLWZdezEsNH06KXs0fSg/Oig/Oig/OjpbMC05YS1mXXsxLDR9KXsxLDN9KXwoPzooPzo6WzAtOWEtZl17MSw0fSk/Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezN9KD86KD86KD86OlswLTlhLWZdezEsNH0pezEsNH0pfCg/Oig/OjpbMC05YS1mXXsxLDR9KXswLDJ9Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezJ9KD86KD86KD86OlswLTlhLWZdezEsNH0pezEsNX0pfCg/Oig/OjpbMC05YS1mXXsxLDR9KXswLDN9Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezF9KD86KD86KD86OlswLTlhLWZdezEsNH0pezEsNn0pfCg/Oig/OjpbMC05YS1mXXsxLDR9KXswLDR9Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86Oig/Oig/Oig/OjpbMC05YS1mXXsxLDR9KXsxLDd9KXwoPzooPzo6WzAtOWEtZl17MSw0fSl7MCw1fTooPzooPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHwxXFxcXFxcXFxkXFxcXFxcXFxkfFsxLTldP1xcXFxcXFxcZCkoPzpcXFxcXFxcXC4oPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHwxXFxcXFxcXFxkXFxcXFxcXFxkfFsxLTldP1xcXFxcXFxcZCkpezN9KSl8OikpKSg/OiUuKyk/XFxcXFxcXFxzKiQvaSxcXFxcbiAgcmVnZXg6IHJlZ2V4LFxcXFxuICAvLyB1dWlkOiBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM0MTIyXFxcXG4gIHV1aWQ6IFVVSUQsXFxcXG4gIC8vIEpTT04tcG9pbnRlcjogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzY5MDFcXFxcbiAgLy8gdXJpIGZyYWdtZW50OiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzk4NiNhcHBlbmRpeC1BXFxcXG4gICdqc29uLXBvaW50ZXInOiBKU09OX1BPSU5URVIsXFxcXG4gIC8vIHJlbGF0aXZlIEpTT04tcG9pbnRlcjogaHR0cDovL3Rvb2xzLmlldGYub3JnL2h0bWwvZHJhZnQtbHVmZi1yZWxhdGl2ZS1qc29uLXBvaW50ZXItMDBcXFxcbiAgJ3JlbGF0aXZlLWpzb24tcG9pbnRlcic6IFJFTEFUSVZFX0pTT05fUE9JTlRFUlxcXFxufTtcXFxcblxcXFxuXFxcXG5mb3JtYXRzLmZ1bGwgPSB7XFxcXG4gIGRhdGU6IGRhdGUsXFxcXG4gIHRpbWU6IHRpbWUsXFxcXG4gICdkYXRlLXRpbWUnOiBkYXRlX3RpbWUsXFxcXG4gIHVyaTogdXJpLFxcXFxuICAndXJpLXJlZmVyZW5jZSc6IFVSSVJFRixcXFxcbiAgJ3VyaS10ZW1wbGF0ZSc6IFVSSVRFTVBMQVRFLFxcXFxuICB1cmw6IFVSTCxcXFxcbiAgZW1haWw6IC9eW2EtejAtOSEjJCUmJyorXFxcXFxcXFwvPT9eX2B7fH1+LV0rKD86XFxcXFxcXFwuW2EtejAtOSEjJCUmJycqK1xcXFxcXFxcLz0/Xl9ge3x9fi1dKykqQCg/OlthLXowLTldKD86W2EtejAtOS1dKlthLXowLTldKT9cXFxcXFxcXC4pK1thLXowLTldKD86W2EtejAtOS1dKlthLXowLTldKT8kL2ksXFxcXG4gIGhvc3RuYW1lOiBob3N0bmFtZSxcXFxcbiAgaXB2NDogL14oPzooPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHxbMDFdP1xcXFxcXFxcZFxcXFxcXFxcZD8pXFxcXFxcXFwuKXszfSg/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfFswMV0/XFxcXFxcXFxkXFxcXFxcXFxkPykkLyxcXFxcbiAgaXB2NjogL15cXFxcXFxcXHMqKD86KD86KD86WzAtOWEtZl17MSw0fTopezd9KD86WzAtOWEtZl17MSw0fXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezZ9KD86OlswLTlhLWZdezEsNH18KD86KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKD86XFxcXFxcXFwuKD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKXszfSl8OikpfCg/Oig/OlswLTlhLWZdezEsNH06KXs1fSg/Oig/Oig/OjpbMC05YS1mXXsxLDR9KXsxLDJ9KXw6KD86KD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKD86XFxcXFxcXFwuKD86MjVbMC01XXwyWzAtNF1cXFxcXFxcXGR8MVxcXFxcXFxcZFxcXFxcXFxcZHxbMS05XT9cXFxcXFxcXGQpKXszfSl8OikpfCg/Oig/OlswLTlhLWZdezEsNH06KXs0fSg/Oig/Oig/OjpbMC05YS1mXXsxLDR9KXsxLDN9KXwoPzooPzo6WzAtOWEtZl17MSw0fSk/Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezN9KD86KD86KD86OlswLTlhLWZdezEsNH0pezEsNH0pfCg/Oig/OjpbMC05YS1mXXsxLDR9KXswLDJ9Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezJ9KD86KD86KD86OlswLTlhLWZdezEsNH0pezEsNX0pfCg/Oig/OjpbMC05YS1mXXsxLDR9KXswLDN9Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86KD86WzAtOWEtZl17MSw0fTopezF9KD86KD86KD86OlswLTlhLWZdezEsNH0pezEsNn0pfCg/Oig/OjpbMC05YS1mXXsxLDR9KXswLDR9Oig/Oig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSg/OlxcXFxcXFxcLig/OjI1WzAtNV18MlswLTRdXFxcXFxcXFxkfDFcXFxcXFxcXGRcXFxcXFxcXGR8WzEtOV0/XFxcXFxcXFxkKSl7M30pKXw6KSl8KD86Oig/Oig/Oig/OjpbMC05YS1mXXsxLDR9KXsxLDd9KXwoPzooPzo6WzAtOWEtZl17MSw0fSl7MCw1fTooPzooPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHwxXFxcXFxcXFxkXFxcXFxcXFxkfFsxLTldP1xcXFxcXFxcZCkoPzpcXFxcXFxcXC4oPzoyNVswLTVdfDJbMC00XVxcXFxcXFxcZHwxXFxcXFxcXFxkXFxcXFxcXFxkfFsxLTldP1xcXFxcXFxcZCkpezN9KSl8OikpKSg/OiUuKyk/XFxcXFxcXFxzKiQvaSxcXFxcbiAgcmVnZXg6IHJlZ2V4LFxcXFxuICB1dWlkOiBVVUlELFxcXFxuICAnanNvbi1wb2ludGVyJzogSlNPTl9QT0lOVEVSLFxcXFxuICAncmVsYXRpdmUtanNvbi1wb2ludGVyJzogUkVMQVRJVkVfSlNPTl9QT0lOVEVSXFxcXG59O1xcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIGRhdGUoc3RyKSB7XFxcXG4gIC8vIGZ1bGwtZGF0ZSBmcm9tIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzMzMzkjc2VjdGlvbi01LjZcXFxcbiAgdmFyIG1hdGNoZXMgPSBzdHIubWF0Y2goREFURSk7XFxcXG4gIGlmICghbWF0Y2hlcykgcmV0dXJuIGZhbHNlO1xcXFxuXFxcXG4gIHZhciBtb250aCA9ICttYXRjaGVzWzFdO1xcXFxuICB2YXIgZGF5ID0gK21hdGNoZXNbMl07XFxcXG4gIHJldHVybiBtb250aCA+PSAxICYmIG1vbnRoIDw9IDEyICYmIGRheSA+PSAxICYmIGRheSA8PSBEQVlTW21vbnRoXTtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiB0aW1lKHN0ciwgZnVsbCkge1xcXFxuICB2YXIgbWF0Y2hlcyA9IHN0ci5tYXRjaChUSU1FKTtcXFxcbiAgaWYgKCFtYXRjaGVzKSByZXR1cm4gZmFsc2U7XFxcXG5cXFxcbiAgdmFyIGhvdXIgPSBtYXRjaGVzWzFdO1xcXFxuICB2YXIgbWludXRlID0gbWF0Y2hlc1syXTtcXFxcbiAgdmFyIHNlY29uZCA9IG1hdGNoZXNbM107XFxcXG4gIHZhciB0aW1lWm9uZSA9IG1hdGNoZXNbNV07XFxcXG4gIHJldHVybiBob3VyIDw9IDIzICYmIG1pbnV0ZSA8PSA1OSAmJiBzZWNvbmQgPD0gNTkgJiYgKCFmdWxsIHx8IHRpbWVab25lKTtcXFxcbn1cXFxcblxcXFxuXFxcXG52YXIgREFURV9USU1FX1NFUEFSQVRPUiA9IC90fFxcXFxcXFxccy9pO1xcXFxuZnVuY3Rpb24gZGF0ZV90aW1lKHN0cikge1xcXFxuICAvLyBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzMzM5I3NlY3Rpb24tNS42XFxcXG4gIHZhciBkYXRlVGltZSA9IHN0ci5zcGxpdChEQVRFX1RJTUVfU0VQQVJBVE9SKTtcXFxcbiAgcmV0dXJuIGRhdGVUaW1lLmxlbmd0aCA9PSAyICYmIGRhdGUoZGF0ZVRpbWVbMF0pICYmIHRpbWUoZGF0ZVRpbWVbMV0sIHRydWUpO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIGhvc3RuYW1lKHN0cikge1xcXFxuICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMTAzNCNzZWN0aW9uLTMuNVxcXFxuICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMTEyMyNzZWN0aW9uLTJcXFxcbiAgcmV0dXJuIHN0ci5sZW5ndGggPD0gMjU1ICYmIEhPU1ROQU1FLnRlc3Qoc3RyKTtcXFxcbn1cXFxcblxcXFxuXFxcXG52YXIgTk9UX1VSSV9GUkFHTUVOVCA9IC9cXFxcXFxcXC98XFxcXFxcXFw6LztcXFxcbmZ1bmN0aW9uIHVyaShzdHIpIHtcXFxcbiAgLy8gaHR0cDovL2ptcndhcmUuY29tL2FydGljbGVzLzIwMDkvdXJpX3JlZ2V4cC9VUklfcmVnZXguaHRtbCArIG9wdGlvbmFsIHByb3RvY29sICsgcmVxdWlyZWQgXFxcXFxcXCIuXFxcXFxcXCJcXFxcbiAgcmV0dXJuIE5PVF9VUklfRlJBR01FTlQudGVzdChzdHIpICYmIFVSSS50ZXN0KHN0cik7XFxcXG59XFxcXG5cXFxcblxcXFxudmFyIFpfQU5DSE9SID0gL1teXFxcXFxcXFxcXFxcXFxcXF1cXFxcXFxcXFxcXFxcXFxcWi87XFxcXG5mdW5jdGlvbiByZWdleChzdHIpIHtcXFxcbiAgaWYgKFpfQU5DSE9SLnRlc3Qoc3RyKSkgcmV0dXJuIGZhbHNlO1xcXFxuICB0cnkge1xcXFxuICAgIG5ldyBSZWdFeHAoc3RyKTtcXFxcbiAgICByZXR1cm4gdHJ1ZTtcXFxcbiAgfSBjYXRjaChlKSB7XFxcXG4gICAgcmV0dXJuIGZhbHNlO1xcXFxuICB9XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlqYjIxd2FXeGxMMlp2Y20xaGRITXVhbk11YW5NaUxDSnpiM1Z5WTJWeklqcGJJbmRsWW5CaFkyczZMeTlwYldwdmVWSlFReTh1TDI1dlpHVmZiVzlrZFd4bGN5OWhhbll2YkdsaUwyTnZiWEJwYkdVdlptOXliV0YwY3k1cWN6ODVabVUwSWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFYwYVd3Z1BTQnlaWEYxYVhKbEtDY3VMM1YwYVd3bktUdGNibHh1ZG1GeUlFUkJWRVVnUFNBdlhseGNaRnhjWkZ4Y1pGeGNaQzBvWEZ4a1hGeGtLUzBvWEZ4a1hGeGtLU1F2TzF4dWRtRnlJRVJCV1ZNZ1BTQmJNQ3d6TVN3eU9Td3pNU3d6TUN3ek1Td3pNQ3d6TVN3ek1Td3pNQ3d6TVN3ek1Dd3pNVjA3WEc1MllYSWdWRWxOUlNBOUlDOWVLRnhjWkZ4Y1pDazZLRnhjWkZ4Y1pDazZLRnhjWkZ4Y1pDa29YRnd1WEZ4a0t5ay9LSHA4V3lzdFhWeGNaRnhjWkRwY1hHUmNYR1FwUHlRdmFUdGNiblpoY2lCSVQxTlVUa0ZOUlNBOUlDOWVXMkV0ZWpBdE9WMG9QenBiWVMxNk1DMDVMVjE3TUN3Mk1YMWJZUzE2TUMwNVhTay9LRDg2WEZ3dVcyRXRlakF0T1Ywb1B6cGJMVEF0T1dFdGVsMTdNQ3cyTVgxYk1DMDVZUzE2WFNrL0tTb2tMMms3WEc1MllYSWdWVkpKSUQwZ0wxNG9QenBiWVMxNlhWdGhMWG93TFRrclhGd3RMbDBxT2lrb1B6cGNYQzgvWEZ3dktEODZLRDg2VzJFdGVqQXRPVnhjTFM1ZmZpRWtKaWNvS1NvckxEczlPbDE4SlZzd0xUbGhMV1pkZXpKOUtTcEFLVDhvUHpwY1hGc29Qem9vUHpvb1B6b29QenBiTUMwNVlTMW1YWHN4TERSOU9pbDdObjE4T2pvb1B6cGJNQzA1WVMxbVhYc3hMRFI5T2lsN05YMThLRDg2V3pBdE9XRXRabDE3TVN3MGZTay9Pam9vUHpwYk1DMDVZUzFtWFhzeExEUjlPaWw3TkgxOEtEODZLRDg2V3pBdE9XRXRabDE3TVN3MGZUb3BlekFzTVgxYk1DMDVZUzFtWFhzeExEUjlLVDg2T2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzemZYd29Qem9vUHpwYk1DMDVZUzFtWFhzeExEUjlPaWw3TUN3eWZWc3dMVGxoTFdaZGV6RXNOSDBwUHpvNktEODZXekF0T1dFdFpsMTdNU3cwZlRvcGV6SjlmQ2cvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzd0xETjlXekF0T1dFdFpsMTdNU3cwZlNrL09qcGJNQzA1WVMxbVhYc3hMRFI5T253b1B6b29QenBiTUMwNVlTMW1YWHN4TERSOU9pbDdNQ3cwZlZzd0xUbGhMV1pkZXpFc05IMHBQem82S1NnL09sc3dMVGxoTFdaZGV6RXNOSDA2V3pBdE9XRXRabDE3TVN3MGZYd29Qem9vUHpveU5Wc3dMVFZkZkRKYk1DMDBYVnhjWkh4Yk1ERmRQMXhjWkZ4Y1pEOHBYRnd1S1hzemZTZy9PakkxV3pBdE5WMThNbHN3TFRSZFhGeGtmRnN3TVYwL1hGeGtYRnhrUHlrcGZDZy9PaWcvT2xzd0xUbGhMV1pkZXpFc05IMDZLWHN3TERWOVd6QXRPV0V0WmwxN01TdzBmU2svT2pwYk1DMDVZUzFtWFhzeExEUjlmQ2cvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzd0xEWjlXekF0T1dFdFpsMTdNU3cwZlNrL09qb3BmRnRXZGwxYk1DMDVZUzFtWFN0Y1hDNWJZUzE2TUMwNVhGd3RMbDkrSVNRbUp5Z3BLaXNzT3owNlhTc3BYRnhkZkNnL09pZy9PakkxV3pBdE5WMThNbHN3TFRSZFhGeGtmRnN3TVYwL1hGeGtYRnhrUHlsY1hDNHBlek45S0Q4Nk1qVmJNQzAxWFh3eVd6QXRORjFjWEdSOFd6QXhYVDljWEdSY1hHUS9LWHdvUHpwYllTMTZNQzA1WEZ3dExsOStJU1FtSnlncEtpc3NPejFkZkNWYk1DMDVZUzFtWFhzeWZTa3FLU2cvT2pwY1hHUXFLVDhvUHpwY1hDOG9QenBiWVMxNk1DMDVYRnd0TGw5K0lTUW1KeWdwS2lzc096MDZRRjE4SlZzd0xUbGhMV1pkZXpKOUtTb3BLbnhjWEM4b1B6b29QenBiWVMxNk1DMDVYRnd0TGw5K0lTUW1KeWdwS2lzc096MDZRRjE4SlZzd0xUbGhMV1pkZXpKOUtTc29QenBjWEM4b1B6cGJZUzE2TUMwNVhGd3RMbDkrSVNRbUp5Z3BLaXNzT3owNlFGMThKVnN3TFRsaExXWmRleko5S1NvcEtpay9mQ2cvT2x0aExYb3dMVGxjWEMwdVgzNGhKQ1luS0NrcUt5dzdQVHBBWFh3bFd6QXRPV0V0WmwxN01uMHBLeWcvT2x4Y0x5Zy9PbHRoTFhvd0xUbGNYQzB1WDM0aEpDWW5LQ2txS3l3N1BUcEFYWHdsV3pBdE9XRXRabDE3TW4wcEtpa3FLU2cvT2x4Y1B5Zy9PbHRoTFhvd0xUbGNYQzB1WDM0aEpDWW5LQ2txS3l3N1BUcEFYRnd2UDExOEpWc3dMVGxoTFdaZGV6SjlLU29wUHlnL09seGNJeWcvT2x0aExYb3dMVGxjWEMwdVgzNGhKQ1luS0NrcUt5dzdQVHBBWEZ3dlAxMThKVnN3TFRsaExXWmRleko5S1NvcFB5UXZhVHRjYm5aaGNpQlZVa2xTUlVZZ1BTQXZYaWcvT2x0aExYcGRXMkV0ZWpBdE9TdGNYQzB1WFNvNktUOG9QenBjWEM4L1hGd3ZLRDg2S0Q4NlcyRXRlakF0T1Z4Y0xTNWZmaUVrSmljb0tTb3JMRHM5T2wxOEpWc3dMVGxoTFdaZGV6SjlLU3BBS1Q4b1B6cGNYRnNvUHpvb1B6b29Qem9vUHpwYk1DMDVZUzFtWFhzeExEUjlPaWw3Tm4xOE9qb29QenBiTUMwNVlTMW1YWHN4TERSOU9pbDdOWDE4S0Q4Nld6QXRPV0V0WmwxN01TdzBmU2svT2pvb1B6cGJNQzA1WVMxbVhYc3hMRFI5T2lsN05IMThLRDg2S0Q4Nld6QXRPV0V0WmwxN01TdzBmVG9wZXpBc01YMWJNQzA1WVMxbVhYc3hMRFI5S1Q4Nk9pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYc3pmWHdvUHpvb1B6cGJNQzA1WVMxbVhYc3hMRFI5T2lsN01Dd3lmVnN3TFRsaExXWmRlekVzTkgwcFB6bzZLRDg2V3pBdE9XRXRabDE3TVN3MGZUb3Bleko5ZkNnL09pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYc3dMRE45V3pBdE9XRXRabDE3TVN3MGZTay9PanBiTUMwNVlTMW1YWHN4TERSOU9ud29Qem9vUHpwYk1DMDVZUzFtWFhzeExEUjlPaWw3TUN3MGZWc3dMVGxoTFdaZGV6RXNOSDBwUHpvNktTZy9PbHN3TFRsaExXWmRlekVzTkgwNld6QXRPV0V0WmwxN01TdzBmWHdvUHpvb1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pIeGJNREZkUDF4Y1pGeGNaRDhwWEZ3dUtYc3pmU2cvT2pJMVd6QXROVjE4TWxzd0xUUmRYRnhrZkZzd01WMC9YRnhrWEZ4a1B5a3BmQ2cvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzd0xEVjlXekF0T1dFdFpsMTdNU3cwZlNrL09qcGJNQzA1WVMxbVhYc3hMRFI5ZkNnL09pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYc3dMRFo5V3pBdE9XRXRabDE3TVN3MGZTay9Pam9wZkZ0V2RsMWJNQzA1WVMxbVhTdGNYQzViWVMxNk1DMDVYRnd0TGw5K0lTUW1KeWdwS2lzc096MDZYU3NwWEZ4ZGZDZy9PaWcvT2pJMVd6QXROVjE4TWxzd0xUUmRYRnhrZkZzd01WMC9YRnhrWEZ4a1B5bGNYQzRwZXpOOUtEODZNalZiTUMwMVhYd3lXekF0TkYxY1hHUjhXekF4WFQ5Y1hHUmNYR1EvS1h3b1B6cGJZUzE2TUMwNVhGd3RMbDkrSVNRbUoxd2lLQ2txS3l3N1BWMThKVnN3TFRsaExXWmRleko5S1NvcEtEODZPbHhjWkNvcFB5Zy9PbHhjTHlnL09sdGhMWG93TFRsY1hDMHVYMzRoSkNZblhDSW9LU29yTERzOU9rQmRmQ1ZiTUMwNVlTMW1YWHN5ZlNrcUtTcDhYRnd2S0Q4NktEODZXMkV0ZWpBdE9WeGNMUzVmZmlFa0ppZGNJaWdwS2lzc096MDZRRjE4SlZzd0xUbGhMV1pkZXpKOUtTc29QenBjWEM4b1B6cGJZUzE2TUMwNVhGd3RMbDkrSVNRbUoxd2lLQ2txS3l3N1BUcEFYWHdsV3pBdE9XRXRabDE3TW4wcEtpa3FLVDk4S0Q4NlcyRXRlakF0T1Z4Y0xTNWZmaUVrSmlkY0lpZ3BLaXNzT3owNlFGMThKVnN3TFRsaExXWmRleko5S1Nzb1B6cGNYQzhvUHpwYllTMTZNQzA1WEZ3dExsOStJU1FtSjF3aUtDa3FLeXc3UFRwQVhYd2xXekF0T1dFdFpsMTdNbjBwS2lrcUtUOG9QenBjWEQ4b1B6cGJZUzE2TUMwNVhGd3RMbDkrSVNRbUoxd2lLQ2txS3l3N1BUcEFYRnd2UDExOEpWc3dMVGxoTFdaZGV6SjlLU29wUHlnL09seGNJeWcvT2x0aExYb3dMVGxjWEMwdVgzNGhKQ1luWENJb0tTb3JMRHM5T2tCY1hDOC9YWHdsV3pBdE9XRXRabDE3TW4wcEtpay9KQzlwTzF4dUx5OGdkWEpwTFhSbGJYQnNZWFJsT2lCb2RIUndjem92TDNSdmIyeHpMbWxsZEdZdWIzSm5MMmgwYld3dmNtWmpOalUzTUZ4dWRtRnlJRlZTU1ZSRlRWQk1RVlJGSUQwZ0wxNG9Qem9vUHpwYlhseGNlREF3TFZ4Y2VESXdYQ0luUEQ0bFhGeGNYRjVnZTN4OVhYd2xXekF0T1dFdFpsMTdNbjBwZkZ4Y2Uxc3JJeTVjWEM4N1B5WTlMQ0ZBZkYwL0tEODZXMkV0ZWpBdE9WOWRmQ1ZiTUMwNVlTMW1YWHN5ZlNrcktEODZYRnc2V3pFdE9WMWJNQzA1WFhzd0xETjlmRnhjS2lrL0tEODZMQ2cvT2x0aExYb3dMVGxmWFh3bFd6QXRPV0V0WmwxN01uMHBLeWcvT2x4Y09sc3hMVGxkV3pBdE9WMTdNQ3d6Zlh4Y1hDb3BQeWtxWEZ4OUtTb2tMMms3WEc0dkx5QkdiM0lnZEdobElITnZkWEpqWlRvZ2FIUjBjSE02THk5bmFYTjBMbWRwZEdoMVlpNWpiMjB2WkhCbGNtbHVhUzgzTWpreU9UUmNiaTh2SUVadmNpQjBaWE4wSUdOaGMyVnpPaUJvZEhSd2N6b3ZMMjFoZEdocFlYTmllVzVsYm5NdVltVXZaR1Z0Ynk5MWNtd3RjbVZuWlhoY2JpOHZJRUIwYjJSdklFUmxiR1YwWlNCamRYSnlaVzUwSUZWU1RDQnBiaUJtWVhadmRYSWdiMllnZEdobElHTnZiVzFsYm5SbFpDQnZkWFFnVlZKTUlISjFiR1VnZDJobGJpQjBhR2x6SUdsemMzVmxJR2x6SUdacGVHVmtJR2gwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzlsYzJ4cGJuUXZaWE5zYVc1MEwybHpjM1ZsY3k4M09UZ3pMbHh1THk4Z2RtRnlJRlZTVENBOUlDOWVLRDg2S0Q4NmFIUjBjSE0vZkdaMGNDazZYRnd2WEZ3dktTZy9PbHhjVXlzb1B6bzZYRnhUS2lrL1FDay9LRDg2S0Q4aE1UQW9QenBjWEM1Y1hHUjdNU3d6ZlNsN00zMHBLRDhoTVRJM0tEODZYRnd1WEZ4a2V6RXNNMzBwZXpOOUtTZy9JVEUyT1Z4Y0xqSTFOQ2cvT2x4Y0xseGNaSHN4TEROOUtYc3lmU2tvUHlFeE9USmNYQzR4Tmpnb1B6cGNYQzVjWEdSN01Td3pmU2w3TW4wcEtEOGhNVGN5WEZ3dUtEODZNVnMyTFRsZGZESmNYR1I4TTFzd0xURmRLU2cvT2x4Y0xseGNaSHN4TEROOUtYc3lmU2tvUHpwYk1TMDVYVnhjWkQ5OE1WeGNaRnhjWkh3eVd6QXhYVnhjWkh3eU1sc3dMVE5kS1NnL09seGNMaWcvT2pFL1hGeGtlekVzTW4xOE1sc3dMVFJkWEZ4a2ZESTFXekF0TlYwcEtYc3lmU2cvT2x4Y0xpZy9PbHN4TFRsZFhGeGtQM3d4WEZ4a1hGeGtmREpiTUMwMFhWeGNaSHd5TlZzd0xUUmRLU2w4S0Q4NktEODZXMkV0ZWx4Y2RYc3dNR0V4ZlMxY1hIVjdabVptWm4wd0xUbGRLeTAvS1NwYllTMTZYRngxZXpBd1lURjlMVnhjZFh0bVptWm1mVEF0T1YwcktTZy9PbHhjTGlnL09sdGhMWHBjWEhWN01EQmhNWDB0WEZ4MWUyWm1abVo5TUMwNVhTc3RQeWtxVzJFdGVseGNkWHN3TUdFeGZTMWNYSFY3Wm1abVpuMHdMVGxkS3lrcUtEODZYRnd1S0Q4NlcyRXRlbHhjZFhzd01HRXhmUzFjWEhWN1ptWm1abjFkZXpJc2ZTa3BLU2cvT2pwY1hHUjdNaXcxZlNrL0tEODZYRnd2VzE1Y1hITmRLaWsvSkM5cGRUdGNiblpoY2lCVlVrd2dQU0F2WGlnL09pZy9PbWgwZEhCYmMxeGNkVEF4TjBaZFAzeG1kSEFwT2x4Y0wxeGNMeWtvUHpvb1B6cGJYRnd3TFZ4Y2VEQTRYRng0TUVVdFhGeDRNVVloTFZ4Y2VEbEdYRng0UVRFdFhGeDFNVFkzUmx4Y2RURTJPREV0WEZ4MU1VWkdSbHhjZFRJd01FSXRYRngxTWpBeU4xeGNkVEl3TWtFdFhGeDFNakF5UlZ4Y2RUSXdNekF0WEZ4MU1qQTFSVnhjZFRJd05qQXRYRngxTWtaR1JseGNkVE13TURFdFhGeDFSRGRHUmx4Y2RVVXdNREF0WEZ4MVJrVkdSVnhjZFVaR01EQXRYRngxUmtaR1JsMThXMXhjZFVRNE1EQXRYRngxUkVKR1JsMWJYRngxUkVNd01DMWNYSFZFUmtaR1hYeGJYRngxUkRnd01DMWNYSFZFUWtaR1hTZy9JVnRjWEhWRVF6QXdMVnhjZFVSR1JrWmRLWHdvUHpwYlhseGNkVVE0TURBdFhGeDFSRUpHUmwxOFhpbGJYRngxUkVNd01DMWNYSFZFUmtaR1hTa3JLRDg2T2lnL09sdGNYREF0WEZ4NE1EaGNYSGd3UlMxY1hIZ3hSaUV0WEZ4NE9VWmNYSGhCTVMxY1hIVXhOamRHWEZ4MU1UWTRNUzFjWEhVeFJrWkdYRngxTWpBd1FpMWNYSFV5TURJM1hGeDFNakF5UVMxY1hIVXlNREpGWEZ4MU1qQXpNQzFjWEhVeU1EVkZYRngxTWpBMk1DMWNYSFV5UmtaR1hGeDFNekF3TVMxY1hIVkVOMFpHWEZ4MVJUQXdNQzFjWEhWR1JVWkZYRngxUmtZd01DMWNYSFZHUmtaR1hYeGJYRngxUkRnd01DMWNYSFZFUWtaR1hWdGNYSFZFUXpBd0xWeGNkVVJHUmtaZGZGdGNYSFZFT0RBd0xWeGNkVVJDUmtaZEtEOGhXMXhjZFVSRE1EQXRYRngxUkVaR1JsMHBmQ2cvT2x0ZVhGeDFSRGd3TUMxY1hIVkVRa1pHWFh4ZUtWdGNYSFZFUXpBd0xWeGNkVVJHUmtaZEtTb3BQMEFwUHlnL09pZy9JVEV3S0Q4NlhGd3VXekF0T1YxN01Td3pmU2w3TTMwcEtEOGhNVEkzS0Q4NlhGd3VXekF0T1YxN01Td3pmU2w3TTMwcEtEOGhNVFk1WEZ3dU1qVTBLRDg2WEZ3dVd6QXRPVjE3TVN3emZTbDdNbjBwS0Q4aE1Ua3lYRnd1TVRZNEtEODZYRnd1V3pBdE9WMTdNU3d6ZlNsN01uMHBLRDhoTVRjeVhGd3VLRDg2TVZzMkxUbGRmREpiTUMwNVhYd3pXekF4WFNrb1B6cGNYQzViTUMwNVhYc3hMRE45S1hzeWZTa29QenBiTVMwNVhWc3dMVGxkUDN3eFd6QXRPVjFiTUMwNVhYd3lXekF4WFZzd0xUbGRmREl5V3pBdE0xMHBLRDg2WEZ3dUtEODZNVDliTUMwNVhYc3hMREo5ZkRKYk1DMDBYVnN3TFRsZGZESTFXekF0TlYwcEtYc3lmU2cvT2x4Y0xpZy9PbHN4TFRsZFd6QXRPVjAvZkRGYk1DMDVYVnN3TFRsZGZESmJNQzAwWFZzd0xUbGRmREkxV3pBdE5GMHBLWHdvUHpvb1B6b29QenBiTUMwNVMxTmhMWHBjWEhoQk1TMWNYSFZFTjBaR1hGeDFSVEF3TUMxY1hIVkdSa1pHWFh4YlhGeDFSRGd3TUMxY1hIVkVRa1pHWFNnL0lWdGNYSFZFUXpBd0xWeGNkVVJHUmtaZEtYd29QenBiWGx4Y2RVUTRNREF0WEZ4MVJFSkdSbDE4WGlsYlhGeDFSRU13TUMxY1hIVkVSa1pHWFNrclhGd3RQeWtxS0Q4Nld6QXRPVXRUWVMxNlhGeDRRVEV0WEZ4MVJEZEdSbHhjZFVVd01EQXRYRngxUmtaR1JsMThXMXhjZFVRNE1EQXRYRngxUkVKR1JsMG9QeUZiWEZ4MVJFTXdNQzFjWEhWRVJrWkdYU2w4S0Q4NlcxNWNYSFZFT0RBd0xWeGNkVVJDUmtaZGZGNHBXMXhjZFVSRE1EQXRYRngxUkVaR1JsMHBLeWtvUHpwY1hDNG9Qem9vUHpwYk1DMDVTMU5oTFhwY1hIaEJNUzFjWEhWRU4wWkdYRngxUlRBd01DMWNYSFZHUmtaR1hYeGJYRngxUkRnd01DMWNYSFZFUWtaR1hTZy9JVnRjWEhWRVF6QXdMVnhjZFVSR1JrWmRLWHdvUHpwYlhseGNkVVE0TURBdFhGeDFSRUpHUmwxOFhpbGJYRngxUkVNd01DMWNYSFZFUmtaR1hTa3JYRnd0UHlrcUtEODZXekF0T1V0VFlTMTZYRng0UVRFdFhGeDFSRGRHUmx4Y2RVVXdNREF0WEZ4MVJrWkdSbDE4VzF4Y2RVUTRNREF0WEZ4MVJFSkdSbDBvUHlGYlhGeDFSRU13TUMxY1hIVkVSa1pHWFNsOEtEODZXMTVjWEhWRU9EQXdMVnhjZFVSQ1JrWmRmRjRwVzF4Y2RVUkRNREF0WEZ4MVJFWkdSbDBwS3lrcUtEODZYRnd1S0Q4NktEODZXMHRUWVMxNlhGeDRRVEV0WEZ4MVJEZEdSbHhjZFVVd01EQXRYRngxUmtaR1JsMThXMXhjZFVRNE1EQXRYRngxUkVKR1JsMG9QeUZiWEZ4MVJFTXdNQzFjWEhWRVJrWkdYU2w4S0Q4NlcxNWNYSFZFT0RBd0xWeGNkVVJDUmtaZGZGNHBXMXhjZFVSRE1EQXRYRngxUkVaR1JsMHBleklzZlNrcEtTZy9PanBiTUMwNVhYc3lMRFY5S1Q4b1B6cGNYQzhvUHpwYlhGd3dMVnhjZURBNFhGeDRNRVV0WEZ4NE1VWWhMVnhjZURsR1hGeDRRVEV0WEZ4MU1UWTNSbHhjZFRFMk9ERXRYRngxTVVaR1JseGNkVEl3TUVJdFhGeDFNakF5TjF4Y2RUSXdNa0V0WEZ4MU1qQXlSVnhjZFRJd016QXRYRngxTWpBMVJWeGNkVEl3TmpBdFhGeDFNa1pHUmx4Y2RUTXdNREV0WEZ4MVJEZEdSbHhjZFVVd01EQXRYRngxUmtWR1JWeGNkVVpHTURBdFhGeDFSa1pHUmwxOFcxeGNkVVE0TURBdFhGeDFSRUpHUmwxYlhGeDFSRU13TUMxY1hIVkVSa1pHWFh4YlhGeDFSRGd3TUMxY1hIVkVRa1pHWFNnL0lWdGNYSFZFUXpBd0xWeGNkVVJHUmtaZEtYd29QenBiWGx4Y2RVUTRNREF0WEZ4MVJFSkdSbDE4WGlsYlhGeDFSRU13TUMxY1hIVkVSa1pHWFNrcUtUOGtMMms3WEc1MllYSWdWVlZKUkNBOUlDOWVLRDg2ZFhKdVhGdzZkWFZwWkZ4Y09pay9XekF0T1dFdFpsMTdPSDB0S0Q4Nld6QXRPV0V0WmwxN05IMHRLWHN6ZlZzd0xUbGhMV1pkZXpFeWZTUXZhVHRjYm5aaGNpQktVMDlPWDFCUFNVNVVSVklnUFNBdlhpZy9PbHhjTHlnL09sdGVmbHhjTDExOGZqQjhmakVwS2lrcUpIeGVYRndqS0Q4NlhGd3ZLRDg2VzJFdGVqQXRPVjljWEMxY1hDNGhKQ1luS0NrcUt5dzdPajFBWFh3bFd6QXRPV0V0WmwxN01uMThmakI4ZmpFcEtpa3FKQzlwTzF4dWRtRnlJRkpGVEVGVVNWWkZYMHBUVDA1ZlVFOUpUbFJGVWlBOUlDOWVLRDg2TUh4Yk1TMDVYVnN3TFRsZEtpa29QenBjWENOOEtEODZYRnd2S0Q4NlcxNStYRnd2WFh4K01IeCtNU2txS1NvcEpDODdYRzVjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWIzSnRZWFJ6TzF4dVhHNW1kVzVqZEdsdmJpQm1iM0p0WVhSektHMXZaR1VwSUh0Y2JpQWdiVzlrWlNBOUlHMXZaR1VnUFQwZ0oyWjFiR3duSUQ4Z0oyWjFiR3duSURvZ0oyWmhjM1FuTzF4dUlDQnlaWFIxY200Z2RYUnBiQzVqYjNCNUtHWnZjbTFoZEhOYmJXOWtaVjBwTzF4dWZWeHVYRzVjYm1admNtMWhkSE11Wm1GemRDQTlJSHRjYmlBZ0x5OGdaR0YwWlRvZ2FIUjBjRG92TDNSdmIyeHpMbWxsZEdZdWIzSm5MMmgwYld3dmNtWmpNek16T1NOelpXTjBhVzl1TFRVdU5seHVJQ0JrWVhSbE9pQXZYbHhjWkZ4Y1pGeGNaRnhjWkMxYk1DMHhYVnhjWkMxYk1DMHpYVnhjWkNRdkxGeHVJQ0F2THlCa1lYUmxMWFJwYldVNklHaDBkSEE2THk5MGIyOXNjeTVwWlhSbUxtOXlaeTlvZEcxc0wzSm1Zek16TXpramMyVmpkR2x2YmkwMUxqWmNiaUFnZEdsdFpUb2dMMTViTUMweVhWeGNaRHBiTUMwMVhWeGNaRHBiTUMwMVhWeGNaQ2cvT2x4Y0xseGNaQ3NwUHlnL09ucDhXeXN0WFZ4Y1pGeGNaRHBjWEdSY1hHUXBQeVF2YVN4Y2JpQWdKMlJoZEdVdGRHbHRaU2M2SUM5ZVhGeGtYRnhrWEZ4a1hGeGtMVnN3TFRGZFhGeGtMVnN3TFROZFhGeGtXM1JjWEhOZFd6QXRNbDFjWEdRNld6QXROVjFjWEdRNld6QXROVjFjWEdRb1B6cGNYQzVjWEdRcktUOG9QenA2ZkZzckxWMWNYR1JjWEdRNlhGeGtYRnhrS1NRdmFTeGNiaUFnTHk4Z2RYSnBPaUJvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2YldGbWFXNTBiM05vTDJsekxXMTVMV3B6YjI0dGRtRnNhV1F2WW14dllpOXRZWE4wWlhJdlptOXliV0YwY3k1cWMxeHVJQ0IxY21rNklDOWVLRDg2VzJFdGVsMWJZUzE2TUMwNUt5MHVYU29wS0Q4NlhGdzZmRnhjTHlsY1hDOC9XMTVjWEhOZEtpUXZhU3hjYmlBZ0ozVnlhUzF5WldabGNtVnVZMlVuT2lBdlhpZy9PaWcvT2x0aExYcGRXMkV0ZWpBdE9Tc3RMbDBxT2lrL1hGd3ZYRnd2S1Q5YlhseGNjMTBxSkM5cExGeHVJQ0FuZFhKcExYUmxiWEJzWVhSbEp6b2dWVkpKVkVWTlVFeEJWRVVzWEc0Z0lIVnliRG9nVlZKTUxGeHVJQ0F2THlCbGJXRnBiQ0FvYzI5MWNtTmxjeUJtY205dElHcHpaVzRnZG1Gc2FXUmhkRzl5S1RwY2JpQWdMeThnYUhSMGNEb3ZMM04wWVdOcmIzWmxjbVpzYjNjdVkyOXRMM0YxWlhOMGFXOXVjeTh5TURFek1qTXZkWE5wYm1jdFlTMXlaV2QxYkdGeUxXVjRjSEpsYzNOcGIyNHRkRzh0ZG1Gc2FXUmhkR1V0WVc0dFpXMWhhV3d0WVdSa2NtVnpjeU5oYm5OM1pYSXRPRGd5T1RNMk0xeHVJQ0F2THlCb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk5VVVpOW9kRzFzTlM5bWIzSnRjeTVvZEcxc0kzWmhiR2xrTFdVdGJXRnBiQzFoWkdSeVpYTnpJQ2h6WldGeVkyZ2dabTl5SUNkM2FXeHNablZzSUhacGIyeGhkR2x2YmljcFhHNGdJR1Z0WVdsc09pQXZYbHRoTFhvd0xUa3VJU01rSlNZbktpdGNYQzg5UDE1ZllIdDhmWDR0WFN0QVcyRXRlakF0T1Ywb1B6cGJZUzE2TUMwNUxWMTdNQ3cyTVgxYllTMTZNQzA1WFNrL0tEODZYRnd1VzJFdGVqQXRPVjBvUHpwYllTMTZNQzA1TFYxN01DdzJNWDFiWVMxNk1DMDVYU2svS1Nva0wya3NYRzRnSUdodmMzUnVZVzFsT2lCSVQxTlVUa0ZOUlN4Y2JpQWdMeThnYjNCMGFXMXBlbVZrSUdoMGRIQnpPaTh2ZDNkM0xuTmhabUZ5YVdKdmIydHpiMjVzYVc1bExtTnZiUzlzYVdKeVlYSjVMM1pwWlhjdmNtVm5kV3hoY2kxbGVIQnlaWE56YVc5dWN5MWpiMjlyWW05dmF5ODVOemd3TlRrMk9EQXlPRE0zTDJOb01EZHpNVFl1YUhSdGJGeHVJQ0JwY0hZME9pQXZYaWcvT2lnL09qSTFXekF0TlYxOE1sc3dMVFJkWEZ4a2ZGc3dNVjAvWEZ4a1hGeGtQeWxjWEM0cGV6TjlLRDg2TWpWYk1DMDFYWHd5V3pBdE5GMWNYR1I4V3pBeFhUOWNYR1JjWEdRL0tTUXZMRnh1SUNBdkx5QnZjSFJwYldsNlpXUWdhSFIwY0RvdkwzTjBZV05yYjNabGNtWnNiM2N1WTI5dEwzRjFaWE4wYVc5dWN5ODFNelE1Tnk5eVpXZDFiR0Z5TFdWNGNISmxjM05wYjI0dGRHaGhkQzF0WVhSamFHVnpMWFpoYkdsa0xXbHdkall0WVdSa2NtVnpjMlZ6WEc0Z0lHbHdkalk2SUM5ZVhGeHpLaWcvT2lnL09pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYczNmU2cvT2xzd0xUbGhMV1pkZXpFc05IMThPaWtwZkNnL09pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYczJmU2cvT2pwYk1DMDVZUzFtWFhzeExEUjlmQ2cvT2lnL09qSTFXekF0TlYxOE1sc3dMVFJkWEZ4a2ZERmNYR1JjWEdSOFd6RXRPVjAvWEZ4a0tTZy9PbHhjTGlnL09qSTFXekF0TlYxOE1sc3dMVFJkWEZ4a2ZERmNYR1JjWEdSOFd6RXRPVjAvWEZ4a0tTbDdNMzBwZkRvcEtYd29Qem9vUHpwYk1DMDVZUzFtWFhzeExEUjlPaWw3Tlgwb1B6b29Qem9vUHpvNld6QXRPV0V0WmwxN01TdzBmU2w3TVN3eWZTbDhPaWcvT2lnL09qSTFXekF0TlYxOE1sc3dMVFJkWEZ4a2ZERmNYR1JjWEdSOFd6RXRPVjAvWEZ4a0tTZy9PbHhjTGlnL09qSTFXekF0TlYxOE1sc3dMVFJkWEZ4a2ZERmNYR1JjWEdSOFd6RXRPVjAvWEZ4a0tTbDdNMzBwZkRvcEtYd29Qem9vUHpwYk1DMDVZUzFtWFhzeExEUjlPaWw3Tkgwb1B6b29Qem9vUHpvNld6QXRPV0V0WmwxN01TdzBmU2w3TVN3emZTbDhLRDg2S0Q4Nk9sc3dMVGxoTFdaZGV6RXNOSDBwUHpvb1B6b29Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2tvUHpwY1hDNG9Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2twZXpOOUtTbDhPaWtwZkNnL09pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYc3pmU2cvT2lnL09pZy9PanBiTUMwNVlTMW1YWHN4TERSOUtYc3hMRFI5S1h3b1B6b29Qem82V3pBdE9XRXRabDE3TVN3MGZTbDdNQ3d5ZlRvb1B6b29Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2tvUHpwY1hDNG9Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2twZXpOOUtTbDhPaWtwZkNnL09pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYc3lmU2cvT2lnL09pZy9PanBiTUMwNVlTMW1YWHN4TERSOUtYc3hMRFY5S1h3b1B6b29Qem82V3pBdE9XRXRabDE3TVN3MGZTbDdNQ3d6ZlRvb1B6b29Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2tvUHpwY1hDNG9Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2twZXpOOUtTbDhPaWtwZkNnL09pZy9PbHN3TFRsaExXWmRlekVzTkgwNktYc3hmU2cvT2lnL09pZy9PanBiTUMwNVlTMW1YWHN4TERSOUtYc3hMRFo5S1h3b1B6b29Qem82V3pBdE9XRXRabDE3TVN3MGZTbDdNQ3cwZlRvb1B6b29Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2tvUHpwY1hDNG9Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHd4WEZ4a1hGeGtmRnN4TFRsZFAxeGNaQ2twZXpOOUtTbDhPaWtwZkNnL09qb29Qem9vUHpvb1B6bzZXekF0T1dFdFpsMTdNU3cwZlNsN01TdzNmU2w4S0Q4NktEODZPbHN3TFRsaExXWmRlekVzTkgwcGV6QXNOWDA2S0Q4NktEODZNalZiTUMwMVhYd3lXekF0TkYxY1hHUjhNVnhjWkZ4Y1pIeGJNUzA1WFQ5Y1hHUXBLRDg2WEZ3dUtEODZNalZiTUMwMVhYd3lXekF0TkYxY1hHUjhNVnhjWkZ4Y1pIeGJNUzA1WFQ5Y1hHUXBLWHN6ZlNrcGZEb3BLU2tvUHpvbExpc3BQMXhjY3lva0wya3NYRzRnSUhKbFoyVjRPaUJ5WldkbGVDeGNiaUFnTHk4Z2RYVnBaRG9nYUhSMGNEb3ZMM1J2YjJ4ekxtbGxkR1l1YjNKbkwyaDBiV3d2Y21aak5ERXlNbHh1SUNCMWRXbGtPaUJWVlVsRUxGeHVJQ0F2THlCS1UwOU9MWEJ2YVc1MFpYSTZJR2gwZEhCek9pOHZkRzl2YkhNdWFXVjBaaTV2Y21jdmFIUnRiQzl5Wm1NMk9UQXhYRzRnSUM4dklIVnlhU0JtY21GbmJXVnVkRG9nYUhSMGNITTZMeTkwYjI5c2N5NXBaWFJtTG05eVp5OW9kRzFzTDNKbVl6TTVPRFlqWVhCd1pXNWthWGd0UVZ4dUlDQW5hbk52Ymkxd2IybHVkR1Z5SnpvZ1NsTlBUbDlRVDBsT1ZFVlNMRnh1SUNBdkx5QnlaV3hoZEdsMlpTQktVMDlPTFhCdmFXNTBaWEk2SUdoMGRIQTZMeTkwYjI5c2N5NXBaWFJtTG05eVp5OW9kRzFzTDJSeVlXWjBMV3gxWm1ZdGNtVnNZWFJwZG1VdGFuTnZiaTF3YjJsdWRHVnlMVEF3WEc0Z0lDZHlaV3hoZEdsMlpTMXFjMjl1TFhCdmFXNTBaWEluT2lCU1JVeEJWRWxXUlY5S1UwOU9YMUJQU1U1VVJWSmNibjA3WEc1Y2JseHVabTl5YldGMGN5NW1kV3hzSUQwZ2UxeHVJQ0JrWVhSbE9pQmtZWFJsTEZ4dUlDQjBhVzFsT2lCMGFXMWxMRnh1SUNBblpHRjBaUzEwYVcxbEp6b2daR0YwWlY5MGFXMWxMRnh1SUNCMWNtazZJSFZ5YVN4Y2JpQWdKM1Z5YVMxeVpXWmxjbVZ1WTJVbk9pQlZVa2xTUlVZc1hHNGdJQ2QxY21rdGRHVnRjR3hoZEdVbk9pQlZVa2xVUlUxUVRFRlVSU3hjYmlBZ2RYSnNPaUJWVWt3c1hHNGdJR1Z0WVdsc09pQXZYbHRoTFhvd0xUa2hJeVFsSmljcUsxeGNMejAvWGw5Z2UzeDlmaTFkS3lnL09seGNMbHRoTFhvd0xUa2hJeVFsSmljbktpdGNYQzg5UDE1ZllIdDhmWDR0WFNzcEtrQW9QenBiWVMxNk1DMDVYU2cvT2x0aExYb3dMVGt0WFNwYllTMTZNQzA1WFNrL1hGd3VLU3RiWVMxNk1DMDVYU2cvT2x0aExYb3dMVGt0WFNwYllTMTZNQzA1WFNrL0pDOXBMRnh1SUNCb2IzTjBibUZ0WlRvZ2FHOXpkRzVoYldVc1hHNGdJR2x3ZGpRNklDOWVLRDg2S0Q4Nk1qVmJNQzAxWFh3eVd6QXRORjFjWEdSOFd6QXhYVDljWEdSY1hHUS9LVnhjTGlsN00zMG9Qem95TlZzd0xUVmRmREpiTUMwMFhWeGNaSHhiTURGZFAxeGNaRnhjWkQ4cEpDOHNYRzRnSUdsd2RqWTZJQzllWEZ4ektpZy9PaWcvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzM2ZTZy9PbHN3TFRsaExXWmRlekVzTkgxOE9pa3BmQ2cvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzMmZTZy9PanBiTUMwNVlTMW1YWHN4TERSOWZDZy9PaWcvT2pJMVd6QXROVjE4TWxzd0xUUmRYRnhrZkRGY1hHUmNYR1I4V3pFdE9WMC9YRnhrS1NnL09seGNMaWcvT2pJMVd6QXROVjE4TWxzd0xUUmRYRnhrZkRGY1hHUmNYR1I4V3pFdE9WMC9YRnhrS1NsN00zMHBmRG9wS1h3b1B6b29QenBiTUMwNVlTMW1YWHN4TERSOU9pbDdOWDBvUHpvb1B6b29Qem82V3pBdE9XRXRabDE3TVN3MGZTbDdNU3d5ZlNsOE9pZy9PaWcvT2pJMVd6QXROVjE4TWxzd0xUUmRYRnhrZkRGY1hHUmNYR1I4V3pFdE9WMC9YRnhrS1NnL09seGNMaWcvT2pJMVd6QXROVjE4TWxzd0xUUmRYRnhrZkRGY1hHUmNYR1I4V3pFdE9WMC9YRnhrS1NsN00zMHBmRG9wS1h3b1B6b29QenBiTUMwNVlTMW1YWHN4TERSOU9pbDdOSDBvUHpvb1B6b29Qem82V3pBdE9XRXRabDE3TVN3MGZTbDdNU3d6ZlNsOEtEODZLRDg2T2xzd0xUbGhMV1pkZXpFc05IMHBQem9vUHpvb1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa29QenBjWEM0b1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa3Blek45S1NsOE9pa3BmQ2cvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzemZTZy9PaWcvT2lnL09qcGJNQzA1WVMxbVhYc3hMRFI5S1hzeExEUjlLWHdvUHpvb1B6bzZXekF0T1dFdFpsMTdNU3cwZlNsN01Dd3lmVG9vUHpvb1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa29QenBjWEM0b1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa3Blek45S1NsOE9pa3BmQ2cvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzeWZTZy9PaWcvT2lnL09qcGJNQzA1WVMxbVhYc3hMRFI5S1hzeExEVjlLWHdvUHpvb1B6bzZXekF0T1dFdFpsMTdNU3cwZlNsN01Dd3pmVG9vUHpvb1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa29QenBjWEM0b1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa3Blek45S1NsOE9pa3BmQ2cvT2lnL09sc3dMVGxoTFdaZGV6RXNOSDA2S1hzeGZTZy9PaWcvT2lnL09qcGJNQzA1WVMxbVhYc3hMRFI5S1hzeExEWjlLWHdvUHpvb1B6bzZXekF0T1dFdFpsMTdNU3cwZlNsN01DdzBmVG9vUHpvb1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa29QenBjWEM0b1B6b3lOVnN3TFRWZGZESmJNQzAwWFZ4Y1pId3hYRnhrWEZ4a2ZGc3hMVGxkUDF4Y1pDa3Blek45S1NsOE9pa3BmQ2cvT2pvb1B6b29Qem9vUHpvNld6QXRPV0V0WmwxN01TdzBmU2w3TVN3M2ZTbDhLRDg2S0Q4Nk9sc3dMVGxoTFdaZGV6RXNOSDBwZXpBc05YMDZLRDg2S0Q4Nk1qVmJNQzAxWFh3eVd6QXRORjFjWEdSOE1WeGNaRnhjWkh4Yk1TMDVYVDljWEdRcEtEODZYRnd1S0Q4Nk1qVmJNQzAxWFh3eVd6QXRORjFjWEdSOE1WeGNaRnhjWkh4Yk1TMDVYVDljWEdRcEtYc3pmU2twZkRvcEtTa29Qem9sTGlzcFAxeGNjeW9rTDJrc1hHNGdJSEpsWjJWNE9pQnlaV2RsZUN4Y2JpQWdkWFZwWkRvZ1ZWVkpSQ3hjYmlBZ0oycHpiMjR0Y0c5cGJuUmxjaWM2SUVwVFQwNWZVRTlKVGxSRlVpeGNiaUFnSjNKbGJHRjBhWFpsTFdwemIyNHRjRzlwYm5SbGNpYzZJRkpGVEVGVVNWWkZYMHBUVDA1ZlVFOUpUbFJGVWx4dWZUdGNibHh1WEc1bWRXNWpkR2x2YmlCa1lYUmxLSE4wY2lrZ2UxeHVJQ0F2THlCbWRXeHNMV1JoZEdVZ1puSnZiU0JvZEhSd09pOHZkRzl2YkhNdWFXVjBaaTV2Y21jdmFIUnRiQzl5Wm1Nek16TTVJM05sWTNScGIyNHROUzQyWEc0Z0lIWmhjaUJ0WVhSamFHVnpJRDBnYzNSeUxtMWhkR05vS0VSQlZFVXBPMXh1SUNCcFppQW9JVzFoZEdOb1pYTXBJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JseHVJQ0IyWVhJZ2JXOXVkR2dnUFNBcmJXRjBZMmhsYzFzeFhUdGNiaUFnZG1GeUlHUmhlU0E5SUN0dFlYUmphR1Z6V3pKZE8xeHVJQ0J5WlhSMWNtNGdiVzl1ZEdnZ1BqMGdNU0FtSmlCdGIyNTBhQ0E4UFNBeE1pQW1KaUJrWVhrZ1BqMGdNU0FtSmlCa1lYa2dQRDBnUkVGWlUxdHRiMjUwYUYwN1hHNTlYRzVjYmx4dVpuVnVZM1JwYjI0Z2RHbHRaU2h6ZEhJc0lHWjFiR3dwSUh0Y2JpQWdkbUZ5SUcxaGRHTm9aWE1nUFNCemRISXViV0YwWTJnb1ZFbE5SU2s3WEc0Z0lHbG1JQ2doYldGMFkyaGxjeWtnY21WMGRYSnVJR1poYkhObE8xeHVYRzRnSUhaaGNpQm9iM1Z5SUQwZ2JXRjBZMmhsYzFzeFhUdGNiaUFnZG1GeUlHMXBiblYwWlNBOUlHMWhkR05vWlhOYk1sMDdYRzRnSUhaaGNpQnpaV052Ym1RZ1BTQnRZWFJqYUdWeld6TmRPMXh1SUNCMllYSWdkR2x0WlZwdmJtVWdQU0J0WVhSamFHVnpXelZkTzF4dUlDQnlaWFIxY200Z2FHOTFjaUE4UFNBeU15QW1KaUJ0YVc1MWRHVWdQRDBnTlRrZ0ppWWdjMlZqYjI1a0lEdzlJRFU1SUNZbUlDZ2hablZzYkNCOGZDQjBhVzFsV205dVpTazdYRzU5WEc1Y2JseHVkbUZ5SUVSQlZFVmZWRWxOUlY5VFJWQkJVa0ZVVDFJZ1BTQXZkSHhjWEhNdmFUdGNibVoxYm1OMGFXOXVJR1JoZEdWZmRHbHRaU2h6ZEhJcElIdGNiaUFnTHk4Z2FIUjBjRG92TDNSdmIyeHpMbWxsZEdZdWIzSm5MMmgwYld3dmNtWmpNek16T1NOelpXTjBhVzl1TFRVdU5seHVJQ0IyWVhJZ1pHRjBaVlJwYldVZ1BTQnpkSEl1YzNCc2FYUW9SRUZVUlY5VVNVMUZYMU5GVUVGU1FWUlBVaWs3WEc0Z0lISmxkSFZ5YmlCa1lYUmxWR2x0WlM1c1pXNW5kR2dnUFQwZ01pQW1KaUJrWVhSbEtHUmhkR1ZVYVcxbFd6QmRLU0FtSmlCMGFXMWxLR1JoZEdWVWFXMWxXekZkTENCMGNuVmxLVHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJvYjNOMGJtRnRaU2h6ZEhJcElIdGNiaUFnTHk4Z2FIUjBjSE02THk5MGIyOXNjeTVwWlhSbUxtOXlaeTlvZEcxc0wzSm1ZekV3TXpRamMyVmpkR2x2YmkwekxqVmNiaUFnTHk4Z2FIUjBjSE02THk5MGIyOXNjeTVwWlhSbUxtOXlaeTlvZEcxc0wzSm1ZekV4TWpNamMyVmpkR2x2YmkweVhHNGdJSEpsZEhWeWJpQnpkSEl1YkdWdVozUm9JRHc5SURJMU5TQW1KaUJJVDFOVVRrRk5SUzUwWlhOMEtITjBjaWs3WEc1OVhHNWNibHh1ZG1GeUlFNVBWRjlWVWtsZlJsSkJSMDFGVGxRZ1BTQXZYRnd2ZkZ4Y09pODdYRzVtZFc1amRHbHZiaUIxY21rb2MzUnlLU0I3WEc0Z0lDOHZJR2gwZEhBNkx5OXFiWEozWVhKbExtTnZiUzloY25ScFkyeGxjeTh5TURBNUwzVnlhVjl5WldkbGVIQXZWVkpKWDNKbFoyVjRMbWgwYld3Z0t5QnZjSFJwYjI1aGJDQndjbTkwYjJOdmJDQXJJSEpsY1hWcGNtVmtJRndpTGx3aVhHNGdJSEpsZEhWeWJpQk9UMVJmVlZKSlgwWlNRVWROUlU1VUxuUmxjM1FvYzNSeUtTQW1KaUJWVWtrdWRHVnpkQ2h6ZEhJcE8xeHVmVnh1WEc1Y2JuWmhjaUJhWDBGT1EwaFBVaUE5SUM5YlhseGNYRnhkWEZ4Y1hGb3ZPMXh1Wm5WdVkzUnBiMjRnY21WblpYZ29jM1J5S1NCN1hHNGdJR2xtSUNoYVgwRk9RMGhQVWk1MFpYTjBLSE4wY2lrcElISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ2RISjVJSHRjYmlBZ0lDQnVaWGNnVW1WblJYaHdLSE4wY2lrN1hHNGdJQ0FnY21WMGRYSnVJSFJ5ZFdVN1hHNGdJSDBnWTJGMFkyZ29aU2tnZTF4dUlDQWdJSEpsZEhWeWJpQm1ZV3h6WlR0Y2JpQWdmVnh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3SWl3aWMyOTFjbU5sVW05dmRDSTZJaUo5XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2Zvcm1hdHMuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvaW5kZXguanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9pbmRleC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxudmFyIHJlc29sdmUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3Jlc29sdmUgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvcmVzb2x2ZS5qc1xcXFxcXFwiKVxcXFxuICAsIHV0aWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvdXRpbC5qc1xcXFxcXFwiKVxcXFxuICAsIGVycm9yQ2xhc3NlcyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZXJyb3JfY2xhc3NlcyAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9lcnJvcl9jbGFzc2VzLmpzXFxcXFxcXCIpXFxcXG4gICwgc3RhYmxlU3RyaW5naWZ5ID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEganNvbi1zdGFibGUtc3RyaW5naWZ5ICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvanNvbi1zdGFibGUtc3RyaW5naWZ5L2luZGV4LmpzXFxcXFxcXCIpO1xcXFxuXFxcXG52YXIgdmFsaWRhdGVHZW5lcmF0b3IgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9kb3Rqcy92YWxpZGF0ZSAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvdmFsaWRhdGUuanNcXFxcXFxcIik7XFxcXG5cXFxcbi8qKlxcXFxuICogRnVuY3Rpb25zIGJlbG93IGFyZSB1c2VkIGluc2lkZSBjb21waWxlZCB2YWxpZGF0aW9ucyBmdW5jdGlvblxcXFxuICovXFxcXG5cXFxcbnZhciBjbyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIGNvICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvY28vaW5kZXguanNcXFxcXFxcIik7XFxcXG52YXIgdWNzMmxlbmd0aCA9IHV0aWwudWNzMmxlbmd0aDtcXFxcbnZhciBlcXVhbCA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZXF1YWwgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXF1YWwuanNcXFxcXFxcIik7XFxcXG5cXFxcbi8vIHRoaXMgZXJyb3IgaXMgdGhyb3duIGJ5IGFzeW5jIHNjaGVtYXMgdG8gcmV0dXJuIHZhbGlkYXRpb24gZXJyb3JzIHZpYSBleGNlcHRpb25cXFxcbnZhciBWYWxpZGF0aW9uRXJyb3IgPSBlcnJvckNsYXNzZXMuVmFsaWRhdGlvbjtcXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSBjb21waWxlO1xcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogQ29tcGlsZXMgc2NoZW1hIHRvIHZhbGlkYXRpb24gZnVuY3Rpb25cXFxcbiAqIEB0aGlzICAgQWp2XFxcXG4gKiBAcGFyYW0gIHtPYmplY3R9IHNjaGVtYSBzY2hlbWEgb2JqZWN0XFxcXG4gKiBAcGFyYW0gIHtPYmplY3R9IHJvb3Qgb2JqZWN0IHdpdGggaW5mb3JtYXRpb24gYWJvdXQgdGhlIHJvb3Qgc2NoZW1hIGZvciB0aGlzIHNjaGVtYVxcXFxuICogQHBhcmFtICB7T2JqZWN0fSBsb2NhbFJlZnMgdGhlIGhhc2ggb2YgbG9jYWwgcmVmZXJlbmNlcyBpbnNpZGUgdGhlIHNjaGVtYSAoY3JlYXRlZCBieSByZXNvbHZlLmlkKSwgdXNlZCBmb3IgaW5saW5lIHJlc29sdXRpb25cXFxcbiAqIEBwYXJhbSAge1N0cmluZ30gYmFzZUlkIGJhc2UgSUQgZm9yIElEcyBpbiB0aGUgc2NoZW1hXFxcXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gdmFsaWRhdGlvbiBmdW5jdGlvblxcXFxuICovXFxcXG5mdW5jdGlvbiBjb21waWxlKHNjaGVtYSwgcm9vdCwgbG9jYWxSZWZzLCBiYXNlSWQpIHtcXFxcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSwgZXZpbDogdHJ1ZSAqL1xcXFxuICAvKiBlc2xpbnQgbm8tc2hhZG93OiAwICovXFxcXG4gIHZhciBzZWxmID0gdGhpc1xcXFxuICAgICwgb3B0cyA9IHRoaXMuX29wdHNcXFxcbiAgICAsIHJlZlZhbCA9IFsgdW5kZWZpbmVkIF1cXFxcbiAgICAsIHJlZnMgPSB7fVxcXFxuICAgICwgcGF0dGVybnMgPSBbXVxcXFxuICAgICwgcGF0dGVybnNIYXNoID0ge31cXFxcbiAgICAsIGRlZmF1bHRzID0gW11cXFxcbiAgICAsIGRlZmF1bHRzSGFzaCA9IHt9XFxcXG4gICAgLCBjdXN0b21SdWxlcyA9IFtdO1xcXFxuXFxcXG4gIHJvb3QgPSByb290IHx8IHsgc2NoZW1hOiBzY2hlbWEsIHJlZlZhbDogcmVmVmFsLCByZWZzOiByZWZzIH07XFxcXG5cXFxcbiAgdmFyIGMgPSBjaGVja0NvbXBpbGluZy5jYWxsKHRoaXMsIHNjaGVtYSwgcm9vdCwgYmFzZUlkKTtcXFxcbiAgdmFyIGNvbXBpbGF0aW9uID0gdGhpcy5fY29tcGlsYXRpb25zW2MuaW5kZXhdO1xcXFxuICBpZiAoYy5jb21waWxpbmcpIHJldHVybiAoY29tcGlsYXRpb24uY2FsbFZhbGlkYXRlID0gY2FsbFZhbGlkYXRlKTtcXFxcblxcXFxuICB2YXIgZm9ybWF0cyA9IHRoaXMuX2Zvcm1hdHM7XFxcXG4gIHZhciBSVUxFUyA9IHRoaXMuUlVMRVM7XFxcXG5cXFxcbiAgdHJ5IHtcXFxcbiAgICB2YXIgdiA9IGxvY2FsQ29tcGlsZShzY2hlbWEsIHJvb3QsIGxvY2FsUmVmcywgYmFzZUlkKTtcXFxcbiAgICBjb21waWxhdGlvbi52YWxpZGF0ZSA9IHY7XFxcXG4gICAgdmFyIGN2ID0gY29tcGlsYXRpb24uY2FsbFZhbGlkYXRlO1xcXFxuICAgIGlmIChjdikge1xcXFxuICAgICAgY3Yuc2NoZW1hID0gdi5zY2hlbWE7XFxcXG4gICAgICBjdi5lcnJvcnMgPSBudWxsO1xcXFxuICAgICAgY3YucmVmcyA9IHYucmVmcztcXFxcbiAgICAgIGN2LnJlZlZhbCA9IHYucmVmVmFsO1xcXFxuICAgICAgY3Yucm9vdCA9IHYucm9vdDtcXFxcbiAgICAgIGN2LiRhc3luYyA9IHYuJGFzeW5jO1xcXFxuICAgICAgaWYgKG9wdHMuc291cmNlQ29kZSkgY3Yuc291cmNlID0gdi5zb3VyY2U7XFxcXG4gICAgfVxcXFxuICAgIHJldHVybiB2O1xcXFxuICB9IGZpbmFsbHkge1xcXFxuICAgIGVuZENvbXBpbGluZy5jYWxsKHRoaXMsIHNjaGVtYSwgcm9vdCwgYmFzZUlkKTtcXFxcbiAgfVxcXFxuXFxcXG4gIGZ1bmN0aW9uIGNhbGxWYWxpZGF0ZSgpIHtcXFxcbiAgICB2YXIgdmFsaWRhdGUgPSBjb21waWxhdGlvbi52YWxpZGF0ZTtcXFxcbiAgICB2YXIgcmVzdWx0ID0gdmFsaWRhdGUuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcXFxcbiAgICBjYWxsVmFsaWRhdGUuZXJyb3JzID0gdmFsaWRhdGUuZXJyb3JzO1xcXFxuICAgIHJldHVybiByZXN1bHQ7XFxcXG4gIH1cXFxcblxcXFxuICBmdW5jdGlvbiBsb2NhbENvbXBpbGUoX3NjaGVtYSwgX3Jvb3QsIGxvY2FsUmVmcywgYmFzZUlkKSB7XFxcXG4gICAgdmFyIGlzUm9vdCA9ICFfcm9vdCB8fCAoX3Jvb3QgJiYgX3Jvb3Quc2NoZW1hID09IF9zY2hlbWEpO1xcXFxuICAgIGlmIChfcm9vdC5zY2hlbWEgIT0gcm9vdC5zY2hlbWEpXFxcXG4gICAgICByZXR1cm4gY29tcGlsZS5jYWxsKHNlbGYsIF9zY2hlbWEsIF9yb290LCBsb2NhbFJlZnMsIGJhc2VJZCk7XFxcXG5cXFxcbiAgICB2YXIgJGFzeW5jID0gX3NjaGVtYS4kYXN5bmMgPT09IHRydWU7XFxcXG5cXFxcbiAgICB2YXIgc291cmNlQ29kZSA9IHZhbGlkYXRlR2VuZXJhdG9yKHtcXFxcbiAgICAgIGlzVG9wOiB0cnVlLFxcXFxuICAgICAgc2NoZW1hOiBfc2NoZW1hLFxcXFxuICAgICAgaXNSb290OiBpc1Jvb3QsXFxcXG4gICAgICBiYXNlSWQ6IGJhc2VJZCxcXFxcbiAgICAgIHJvb3Q6IF9yb290LFxcXFxuICAgICAgc2NoZW1hUGF0aDogJycsXFxcXG4gICAgICBlcnJTY2hlbWFQYXRoOiAnIycsXFxcXG4gICAgICBlcnJvclBhdGg6ICdcXFxcXFxcIlxcXFxcXFwiJyxcXFxcbiAgICAgIE1pc3NpbmdSZWZFcnJvcjogZXJyb3JDbGFzc2VzLk1pc3NpbmdSZWYsXFxcXG4gICAgICBSVUxFUzogUlVMRVMsXFxcXG4gICAgICB2YWxpZGF0ZTogdmFsaWRhdGVHZW5lcmF0b3IsXFxcXG4gICAgICB1dGlsOiB1dGlsLFxcXFxuICAgICAgcmVzb2x2ZTogcmVzb2x2ZSxcXFxcbiAgICAgIHJlc29sdmVSZWY6IHJlc29sdmVSZWYsXFxcXG4gICAgICB1c2VQYXR0ZXJuOiB1c2VQYXR0ZXJuLFxcXFxuICAgICAgdXNlRGVmYXVsdDogdXNlRGVmYXVsdCxcXFxcbiAgICAgIHVzZUN1c3RvbVJ1bGU6IHVzZUN1c3RvbVJ1bGUsXFxcXG4gICAgICBvcHRzOiBvcHRzLFxcXFxuICAgICAgZm9ybWF0czogZm9ybWF0cyxcXFxcbiAgICAgIHNlbGY6IHNlbGZcXFxcbiAgICB9KTtcXFxcblxcXFxuICAgIHNvdXJjZUNvZGUgPSB2YXJzKHJlZlZhbCwgcmVmVmFsQ29kZSkgKyB2YXJzKHBhdHRlcm5zLCBwYXR0ZXJuQ29kZSlcXFxcbiAgICAgICAgICAgICAgICAgICArIHZhcnMoZGVmYXVsdHMsIGRlZmF1bHRDb2RlKSArIHZhcnMoY3VzdG9tUnVsZXMsIGN1c3RvbVJ1bGVDb2RlKVxcXFxuICAgICAgICAgICAgICAgICAgICsgc291cmNlQ29kZTtcXFxcblxcXFxuICAgIGlmIChvcHRzLnByb2Nlc3NDb2RlKSBzb3VyY2VDb2RlID0gb3B0cy5wcm9jZXNzQ29kZShzb3VyY2VDb2RlKTtcXFxcbiAgICAvLyBjb25zb2xlLmxvZygnXFxcXFxcXFxuXFxcXFxcXFxuXFxcXFxcXFxuICoqKiBcXFxcXFxcXG4nLCBKU09OLnN0cmluZ2lmeShzb3VyY2VDb2RlKSk7XFxcXG4gICAgdmFyIHZhbGlkYXRlO1xcXFxuICAgIHRyeSB7XFxcXG4gICAgICB2YXIgbWFrZVZhbGlkYXRlID0gbmV3IEZ1bmN0aW9uKFxcXFxuICAgICAgICAnc2VsZicsXFxcXG4gICAgICAgICdSVUxFUycsXFxcXG4gICAgICAgICdmb3JtYXRzJyxcXFxcbiAgICAgICAgJ3Jvb3QnLFxcXFxuICAgICAgICAncmVmVmFsJyxcXFxcbiAgICAgICAgJ2RlZmF1bHRzJyxcXFxcbiAgICAgICAgJ2N1c3RvbVJ1bGVzJyxcXFxcbiAgICAgICAgJ2NvJyxcXFxcbiAgICAgICAgJ2VxdWFsJyxcXFxcbiAgICAgICAgJ3VjczJsZW5ndGgnLFxcXFxuICAgICAgICAnVmFsaWRhdGlvbkVycm9yJyxcXFxcbiAgICAgICAgc291cmNlQ29kZVxcXFxuICAgICAgKTtcXFxcblxcXFxuICAgICAgdmFsaWRhdGUgPSBtYWtlVmFsaWRhdGUoXFxcXG4gICAgICAgIHNlbGYsXFxcXG4gICAgICAgIFJVTEVTLFxcXFxuICAgICAgICBmb3JtYXRzLFxcXFxuICAgICAgICByb290LFxcXFxuICAgICAgICByZWZWYWwsXFxcXG4gICAgICAgIGRlZmF1bHRzLFxcXFxuICAgICAgICBjdXN0b21SdWxlcyxcXFxcbiAgICAgICAgY28sXFxcXG4gICAgICAgIGVxdWFsLFxcXFxuICAgICAgICB1Y3MybGVuZ3RoLFxcXFxuICAgICAgICBWYWxpZGF0aW9uRXJyb3JcXFxcbiAgICAgICk7XFxcXG5cXFxcbiAgICAgIHJlZlZhbFswXSA9IHZhbGlkYXRlO1xcXFxuICAgIH0gY2F0Y2goZSkge1xcXFxuICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY29tcGlsaW5nIHNjaGVtYSwgZnVuY3Rpb24gY29kZTonLCBzb3VyY2VDb2RlKTtcXFxcbiAgICAgIHRocm93IGU7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgdmFsaWRhdGUuc2NoZW1hID0gX3NjaGVtYTtcXFxcbiAgICB2YWxpZGF0ZS5lcnJvcnMgPSBudWxsO1xcXFxuICAgIHZhbGlkYXRlLnJlZnMgPSByZWZzO1xcXFxuICAgIHZhbGlkYXRlLnJlZlZhbCA9IHJlZlZhbDtcXFxcbiAgICB2YWxpZGF0ZS5yb290ID0gaXNSb290ID8gdmFsaWRhdGUgOiBfcm9vdDtcXFxcbiAgICBpZiAoJGFzeW5jKSB2YWxpZGF0ZS4kYXN5bmMgPSB0cnVlO1xcXFxuICAgIGlmIChvcHRzLnNvdXJjZUNvZGUgPT09IHRydWUpIHtcXFxcbiAgICAgIHZhbGlkYXRlLnNvdXJjZSA9IHtcXFxcbiAgICAgICAgY29kZTogc291cmNlQ29kZSxcXFxcbiAgICAgICAgcGF0dGVybnM6IHBhdHRlcm5zLFxcXFxuICAgICAgICBkZWZhdWx0czogZGVmYXVsdHNcXFxcbiAgICAgIH07XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgcmV0dXJuIHZhbGlkYXRlO1xcXFxuICB9XFxcXG5cXFxcbiAgZnVuY3Rpb24gcmVzb2x2ZVJlZihiYXNlSWQsIHJlZiwgaXNSb290KSB7XFxcXG4gICAgcmVmID0gcmVzb2x2ZS51cmwoYmFzZUlkLCByZWYpO1xcXFxuICAgIHZhciByZWZJbmRleCA9IHJlZnNbcmVmXTtcXFxcbiAgICB2YXIgX3JlZlZhbCwgcmVmQ29kZTtcXFxcbiAgICBpZiAocmVmSW5kZXggIT09IHVuZGVmaW5lZCkge1xcXFxuICAgICAgX3JlZlZhbCA9IHJlZlZhbFtyZWZJbmRleF07XFxcXG4gICAgICByZWZDb2RlID0gJ3JlZlZhbFsnICsgcmVmSW5kZXggKyAnXSc7XFxcXG4gICAgICByZXR1cm4gcmVzb2x2ZWRSZWYoX3JlZlZhbCwgcmVmQ29kZSk7XFxcXG4gICAgfVxcXFxuICAgIGlmICghaXNSb290ICYmIHJvb3QucmVmcykge1xcXFxuICAgICAgdmFyIHJvb3RSZWZJZCA9IHJvb3QucmVmc1tyZWZdO1xcXFxuICAgICAgaWYgKHJvb3RSZWZJZCAhPT0gdW5kZWZpbmVkKSB7XFxcXG4gICAgICAgIF9yZWZWYWwgPSByb290LnJlZlZhbFtyb290UmVmSWRdO1xcXFxuICAgICAgICByZWZDb2RlID0gYWRkTG9jYWxSZWYocmVmLCBfcmVmVmFsKTtcXFxcbiAgICAgICAgcmV0dXJuIHJlc29sdmVkUmVmKF9yZWZWYWwsIHJlZkNvZGUpO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcblxcXFxuICAgIHJlZkNvZGUgPSBhZGRMb2NhbFJlZihyZWYpO1xcXFxuICAgIHZhciB2ID0gcmVzb2x2ZS5jYWxsKHNlbGYsIGxvY2FsQ29tcGlsZSwgcm9vdCwgcmVmKTtcXFxcbiAgICBpZiAodiA9PT0gdW5kZWZpbmVkKSB7XFxcXG4gICAgICB2YXIgbG9jYWxTY2hlbWEgPSBsb2NhbFJlZnMgJiYgbG9jYWxSZWZzW3JlZl07XFxcXG4gICAgICBpZiAobG9jYWxTY2hlbWEpIHtcXFxcbiAgICAgICAgdiA9IHJlc29sdmUuaW5saW5lUmVmKGxvY2FsU2NoZW1hLCBvcHRzLmlubGluZVJlZnMpXFxcXG4gICAgICAgICAgICA/IGxvY2FsU2NoZW1hXFxcXG4gICAgICAgICAgICA6IGNvbXBpbGUuY2FsbChzZWxmLCBsb2NhbFNjaGVtYSwgcm9vdCwgbG9jYWxSZWZzLCBiYXNlSWQpO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcblxcXFxuICAgIGlmICh2ICE9PSB1bmRlZmluZWQpIHtcXFxcbiAgICAgIHJlcGxhY2VMb2NhbFJlZihyZWYsIHYpO1xcXFxuICAgICAgcmV0dXJuIHJlc29sdmVkUmVmKHYsIHJlZkNvZGUpO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuXFxcXG4gIGZ1bmN0aW9uIGFkZExvY2FsUmVmKHJlZiwgdikge1xcXFxuICAgIHZhciByZWZJZCA9IHJlZlZhbC5sZW5ndGg7XFxcXG4gICAgcmVmVmFsW3JlZklkXSA9IHY7XFxcXG4gICAgcmVmc1tyZWZdID0gcmVmSWQ7XFxcXG4gICAgcmV0dXJuICdyZWZWYWwnICsgcmVmSWQ7XFxcXG4gIH1cXFxcblxcXFxuICBmdW5jdGlvbiByZXBsYWNlTG9jYWxSZWYocmVmLCB2KSB7XFxcXG4gICAgdmFyIHJlZklkID0gcmVmc1tyZWZdO1xcXFxuICAgIHJlZlZhbFtyZWZJZF0gPSB2O1xcXFxuICB9XFxcXG5cXFxcbiAgZnVuY3Rpb24gcmVzb2x2ZWRSZWYocmVmVmFsLCBjb2RlKSB7XFxcXG4gICAgcmV0dXJuIHR5cGVvZiByZWZWYWwgPT0gJ29iamVjdCcgfHwgdHlwZW9mIHJlZlZhbCA9PSAnYm9vbGVhbidcXFxcbiAgICAgICAgICAgID8geyBjb2RlOiBjb2RlLCBzY2hlbWE6IHJlZlZhbCwgaW5saW5lOiB0cnVlIH1cXFxcbiAgICAgICAgICAgIDogeyBjb2RlOiBjb2RlLCAkYXN5bmM6IHJlZlZhbCAmJiByZWZWYWwuJGFzeW5jIH07XFxcXG4gIH1cXFxcblxcXFxuICBmdW5jdGlvbiB1c2VQYXR0ZXJuKHJlZ2V4U3RyKSB7XFxcXG4gICAgdmFyIGluZGV4ID0gcGF0dGVybnNIYXNoW3JlZ2V4U3RyXTtcXFxcbiAgICBpZiAoaW5kZXggPT09IHVuZGVmaW5lZCkge1xcXFxuICAgICAgaW5kZXggPSBwYXR0ZXJuc0hhc2hbcmVnZXhTdHJdID0gcGF0dGVybnMubGVuZ3RoO1xcXFxuICAgICAgcGF0dGVybnNbaW5kZXhdID0gcmVnZXhTdHI7XFxcXG4gICAgfVxcXFxuICAgIHJldHVybiAncGF0dGVybicgKyBpbmRleDtcXFxcbiAgfVxcXFxuXFxcXG4gIGZ1bmN0aW9uIHVzZURlZmF1bHQodmFsdWUpIHtcXFxcbiAgICBzd2l0Y2ggKHR5cGVvZiB2YWx1ZSkge1xcXFxuICAgICAgY2FzZSAnYm9vbGVhbic6XFxcXG4gICAgICBjYXNlICdudW1iZXInOlxcXFxuICAgICAgICByZXR1cm4gJycgKyB2YWx1ZTtcXFxcbiAgICAgIGNhc2UgJ3N0cmluZyc6XFxcXG4gICAgICAgIHJldHVybiB1dGlsLnRvUXVvdGVkU3RyaW5nKHZhbHVlKTtcXFxcbiAgICAgIGNhc2UgJ29iamVjdCc6XFxcXG4gICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkgcmV0dXJuICdudWxsJztcXFxcbiAgICAgICAgdmFyIHZhbHVlU3RyID0gc3RhYmxlU3RyaW5naWZ5KHZhbHVlKTtcXFxcbiAgICAgICAgdmFyIGluZGV4ID0gZGVmYXVsdHNIYXNoW3ZhbHVlU3RyXTtcXFxcbiAgICAgICAgaWYgKGluZGV4ID09PSB1bmRlZmluZWQpIHtcXFxcbiAgICAgICAgICBpbmRleCA9IGRlZmF1bHRzSGFzaFt2YWx1ZVN0cl0gPSBkZWZhdWx0cy5sZW5ndGg7XFxcXG4gICAgICAgICAgZGVmYXVsdHNbaW5kZXhdID0gdmFsdWU7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgcmV0dXJuICdkZWZhdWx0JyArIGluZGV4O1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuXFxcXG4gIGZ1bmN0aW9uIHVzZUN1c3RvbVJ1bGUocnVsZSwgc2NoZW1hLCBwYXJlbnRTY2hlbWEsIGl0KSB7XFxcXG4gICAgdmFyIHZhbGlkYXRlU2NoZW1hID0gcnVsZS5kZWZpbml0aW9uLnZhbGlkYXRlU2NoZW1hO1xcXFxuICAgIGlmICh2YWxpZGF0ZVNjaGVtYSAmJiBzZWxmLl9vcHRzLnZhbGlkYXRlU2NoZW1hICE9PSBmYWxzZSkge1xcXFxuICAgICAgdmFyIHZhbGlkID0gdmFsaWRhdGVTY2hlbWEoc2NoZW1hKTtcXFxcbiAgICAgIGlmICghdmFsaWQpIHtcXFxcbiAgICAgICAgdmFyIG1lc3NhZ2UgPSAna2V5d29yZCBzY2hlbWEgaXMgaW52YWxpZDogJyArIHNlbGYuZXJyb3JzVGV4dCh2YWxpZGF0ZVNjaGVtYS5lcnJvcnMpO1xcXFxuICAgICAgICBpZiAoc2VsZi5fb3B0cy52YWxpZGF0ZVNjaGVtYSA9PSAnbG9nJykgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcXFxcbiAgICAgICAgZWxzZSB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgdmFyIGNvbXBpbGUgPSBydWxlLmRlZmluaXRpb24uY29tcGlsZVxcXFxuICAgICAgLCBpbmxpbmUgPSBydWxlLmRlZmluaXRpb24uaW5saW5lXFxcXG4gICAgICAsIG1hY3JvID0gcnVsZS5kZWZpbml0aW9uLm1hY3JvO1xcXFxuXFxcXG4gICAgdmFyIHZhbGlkYXRlO1xcXFxuICAgIGlmIChjb21waWxlKSB7XFxcXG4gICAgICB2YWxpZGF0ZSA9IGNvbXBpbGUuY2FsbChzZWxmLCBzY2hlbWEsIHBhcmVudFNjaGVtYSwgaXQpO1xcXFxuICAgIH0gZWxzZSBpZiAobWFjcm8pIHtcXFxcbiAgICAgIHZhbGlkYXRlID0gbWFjcm8uY2FsbChzZWxmLCBzY2hlbWEsIHBhcmVudFNjaGVtYSwgaXQpO1xcXFxuICAgICAgaWYgKG9wdHMudmFsaWRhdGVTY2hlbWEgIT09IGZhbHNlKSBzZWxmLnZhbGlkYXRlU2NoZW1hKHZhbGlkYXRlLCB0cnVlKTtcXFxcbiAgICB9IGVsc2UgaWYgKGlubGluZSkge1xcXFxuICAgICAgdmFsaWRhdGUgPSBpbmxpbmUuY2FsbChzZWxmLCBpdCwgcnVsZS5rZXl3b3JkLCBzY2hlbWEsIHBhcmVudFNjaGVtYSk7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIHZhbGlkYXRlID0gcnVsZS5kZWZpbml0aW9uLnZhbGlkYXRlO1xcXFxuICAgICAgaWYgKCF2YWxpZGF0ZSkgcmV0dXJuO1xcXFxuICAgIH1cXFxcblxcXFxuICAgIGlmICh2YWxpZGF0ZSA9PT0gdW5kZWZpbmVkKVxcXFxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdjdXN0b20ga2V5d29yZCBcXFxcXFxcIicgKyBydWxlLmtleXdvcmQgKyAnXFxcXFxcXCJmYWlsZWQgdG8gY29tcGlsZScpO1xcXFxuXFxcXG4gICAgdmFyIGluZGV4ID0gY3VzdG9tUnVsZXMubGVuZ3RoO1xcXFxuICAgIGN1c3RvbVJ1bGVzW2luZGV4XSA9IHZhbGlkYXRlO1xcXFxuXFxcXG4gICAgcmV0dXJuIHtcXFxcbiAgICAgIGNvZGU6ICdjdXN0b21SdWxlJyArIGluZGV4LFxcXFxuICAgICAgdmFsaWRhdGU6IHZhbGlkYXRlXFxcXG4gICAgfTtcXFxcbiAgfVxcXFxufVxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogQ2hlY2tzIGlmIHRoZSBzY2hlbWEgaXMgY3VycmVudGx5IGNvbXBpbGVkXFxcXG4gKiBAdGhpcyAgIEFqdlxcXFxuICogQHBhcmFtICB7T2JqZWN0fSBzY2hlbWEgc2NoZW1hIHRvIGNvbXBpbGVcXFxcbiAqIEBwYXJhbSAge09iamVjdH0gcm9vdCByb290IG9iamVjdFxcXFxuICogQHBhcmFtICB7U3RyaW5nfSBiYXNlSWQgYmFzZSBzY2hlbWEgSURcXFxcbiAqIEByZXR1cm4ge09iamVjdH0gb2JqZWN0IHdpdGggcHJvcGVydGllcyBcXFxcXFxcImluZGV4XFxcXFxcXCIgKGNvbXBpbGF0aW9uIGluZGV4KSBhbmQgXFxcXFxcXCJjb21waWxpbmdcXFxcXFxcIiAoYm9vbGVhbilcXFxcbiAqL1xcXFxuZnVuY3Rpb24gY2hlY2tDb21waWxpbmcoc2NoZW1hLCByb290LCBiYXNlSWQpIHtcXFxcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xcXFxuICB2YXIgaW5kZXggPSBjb21wSW5kZXguY2FsbCh0aGlzLCBzY2hlbWEsIHJvb3QsIGJhc2VJZCk7XFxcXG4gIGlmIChpbmRleCA+PSAwKSByZXR1cm4geyBpbmRleDogaW5kZXgsIGNvbXBpbGluZzogdHJ1ZSB9O1xcXFxuICBpbmRleCA9IHRoaXMuX2NvbXBpbGF0aW9ucy5sZW5ndGg7XFxcXG4gIHRoaXMuX2NvbXBpbGF0aW9uc1tpbmRleF0gPSB7XFxcXG4gICAgc2NoZW1hOiBzY2hlbWEsXFxcXG4gICAgcm9vdDogcm9vdCxcXFxcbiAgICBiYXNlSWQ6IGJhc2VJZFxcXFxuICB9O1xcXFxuICByZXR1cm4geyBpbmRleDogaW5kZXgsIGNvbXBpbGluZzogZmFsc2UgfTtcXFxcbn1cXFxcblxcXFxuXFxcXG4vKipcXFxcbiAqIFJlbW92ZXMgdGhlIHNjaGVtYSBmcm9tIHRoZSBjdXJyZW50bHkgY29tcGlsZWQgbGlzdFxcXFxuICogQHRoaXMgICBBanZcXFxcbiAqIEBwYXJhbSAge09iamVjdH0gc2NoZW1hIHNjaGVtYSB0byBjb21waWxlXFxcXG4gKiBAcGFyYW0gIHtPYmplY3R9IHJvb3Qgcm9vdCBvYmplY3RcXFxcbiAqIEBwYXJhbSAge1N0cmluZ30gYmFzZUlkIGJhc2Ugc2NoZW1hIElEXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIGVuZENvbXBpbGluZyhzY2hlbWEsIHJvb3QsIGJhc2VJZCkge1xcXFxuICAvKiBqc2hpbnQgdmFsaWR0aGlzOiB0cnVlICovXFxcXG4gIHZhciBpID0gY29tcEluZGV4LmNhbGwodGhpcywgc2NoZW1hLCByb290LCBiYXNlSWQpO1xcXFxuICBpZiAoaSA+PSAwKSB0aGlzLl9jb21waWxhdGlvbnMuc3BsaWNlKGksIDEpO1xcXFxufVxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogSW5kZXggb2Ygc2NoZW1hIGNvbXBpbGF0aW9uIGluIHRoZSBjdXJyZW50bHkgY29tcGlsZWQgbGlzdFxcXFxuICogQHRoaXMgICBBanZcXFxcbiAqIEBwYXJhbSAge09iamVjdH0gc2NoZW1hIHNjaGVtYSB0byBjb21waWxlXFxcXG4gKiBAcGFyYW0gIHtPYmplY3R9IHJvb3Qgcm9vdCBvYmplY3RcXFxcbiAqIEBwYXJhbSAge1N0cmluZ30gYmFzZUlkIGJhc2Ugc2NoZW1hIElEXFxcXG4gKiBAcmV0dXJuIHtJbnRlZ2VyfSBjb21waWxhdGlvbiBpbmRleFxcXFxuICovXFxcXG5mdW5jdGlvbiBjb21wSW5kZXgoc2NoZW1hLCByb290LCBiYXNlSWQpIHtcXFxcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xcXFxuICBmb3IgKHZhciBpPTA7IGk8dGhpcy5fY29tcGlsYXRpb25zLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgdmFyIGMgPSB0aGlzLl9jb21waWxhdGlvbnNbaV07XFxcXG4gICAgaWYgKGMuc2NoZW1hID09IHNjaGVtYSAmJiBjLnJvb3QgPT0gcm9vdCAmJiBjLmJhc2VJZCA9PSBiYXNlSWQpIHJldHVybiBpO1xcXFxuICB9XFxcXG4gIHJldHVybiAtMTtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBwYXR0ZXJuQ29kZShpLCBwYXR0ZXJucykge1xcXFxuICByZXR1cm4gJ3ZhciBwYXR0ZXJuJyArIGkgKyAnID0gbmV3IFJlZ0V4cCgnICsgdXRpbC50b1F1b3RlZFN0cmluZyhwYXR0ZXJuc1tpXSkgKyAnKTsnO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIGRlZmF1bHRDb2RlKGkpIHtcXFxcbiAgcmV0dXJuICd2YXIgZGVmYXVsdCcgKyBpICsgJyA9IGRlZmF1bHRzWycgKyBpICsgJ107JztcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiByZWZWYWxDb2RlKGksIHJlZlZhbCkge1xcXFxuICByZXR1cm4gcmVmVmFsW2ldID09PSB1bmRlZmluZWQgPyAnJyA6ICd2YXIgcmVmVmFsJyArIGkgKyAnID0gcmVmVmFsWycgKyBpICsgJ107JztcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBjdXN0b21SdWxlQ29kZShpKSB7XFxcXG4gIHJldHVybiAndmFyIGN1c3RvbVJ1bGUnICsgaSArICcgPSBjdXN0b21SdWxlc1snICsgaSArICddOyc7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gdmFycyhhcnIsIHN0YXRlbWVudCkge1xcXFxuICBpZiAoIWFyci5sZW5ndGgpIHJldHVybiAnJztcXFxcbiAgdmFyIGNvZGUgPSAnJztcXFxcbiAgZm9yICh2YXIgaT0wOyBpPGFyci5sZW5ndGg7IGkrKylcXFxcbiAgICBjb2RlICs9IHN0YXRlbWVudChpLCBhcnIpO1xcXFxuICByZXR1cm4gY29kZTtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWpiMjF3YVd4bEwybHVaR1Y0TG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlqYjIxd2FXeGxMMmx1WkdWNExtcHpQemhrTURJaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNTJZWElnY21WemIyeDJaU0E5SUhKbGNYVnBjbVVvSnk0dmNtVnpiMngyWlNjcFhHNGdJQ3dnZFhScGJDQTlJSEpsY1hWcGNtVW9KeTR2ZFhScGJDY3BYRzRnSUN3Z1pYSnliM0pEYkdGemMyVnpJRDBnY21WeGRXbHlaU2duTGk5bGNuSnZjbDlqYkdGemMyVnpKeWxjYmlBZ0xDQnpkR0ZpYkdWVGRISnBibWRwWm5rZ1BTQnlaWEYxYVhKbEtDZHFjMjl1TFhOMFlXSnNaUzF6ZEhKcGJtZHBabmtuS1R0Y2JseHVkbUZ5SUhaaGJHbGtZWFJsUjJWdVpYSmhkRzl5SUQwZ2NtVnhkV2x5WlNnbkxpNHZaRzkwYW5NdmRtRnNhV1JoZEdVbktUdGNibHh1THlvcVhHNGdLaUJHZFc1amRHbHZibk1nWW1Wc2IzY2dZWEpsSUhWelpXUWdhVzV6YVdSbElHTnZiWEJwYkdWa0lIWmhiR2xrWVhScGIyNXpJR1oxYm1OMGFXOXVYRzRnS2k5Y2JseHVkbUZ5SUdOdklEMGdjbVZ4ZFdseVpTZ25ZMjhuS1R0Y2JuWmhjaUIxWTNNeWJHVnVaM1JvSUQwZ2RYUnBiQzUxWTNNeWJHVnVaM1JvTzF4dWRtRnlJR1Z4ZFdGc0lEMGdjbVZ4ZFdseVpTZ25MaTlsY1hWaGJDY3BPMXh1WEc0dkx5QjBhR2x6SUdWeWNtOXlJR2x6SUhSb2NtOTNiaUJpZVNCaGMzbHVZeUJ6WTJobGJXRnpJSFJ2SUhKbGRIVnliaUIyWVd4cFpHRjBhVzl1SUdWeWNtOXljeUIyYVdFZ1pYaGpaWEIwYVc5dVhHNTJZWElnVm1Gc2FXUmhkR2x2YmtWeWNtOXlJRDBnWlhKeWIzSkRiR0Z6YzJWekxsWmhiR2xrWVhScGIyNDdYRzVjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWTI5dGNHbHNaVHRjYmx4dVhHNHZLaXBjYmlBcUlFTnZiWEJwYkdWeklITmphR1Z0WVNCMGJ5QjJZV3hwWkdGMGFXOXVJR1oxYm1OMGFXOXVYRzRnS2lCQWRHaHBjeUFnSUVGcWRseHVJQ29nUUhCaGNtRnRJQ0I3VDJKcVpXTjBmU0J6WTJobGJXRWdjMk5vWlcxaElHOWlhbVZqZEZ4dUlDb2dRSEJoY21GdElDQjdUMkpxWldOMGZTQnliMjkwSUc5aWFtVmpkQ0IzYVhSb0lHbHVabTl5YldGMGFXOXVJR0ZpYjNWMElIUm9aU0J5YjI5MElITmphR1Z0WVNCbWIzSWdkR2hwY3lCelkyaGxiV0ZjYmlBcUlFQndZWEpoYlNBZ2UwOWlhbVZqZEgwZ2JHOWpZV3hTWldaeklIUm9aU0JvWVhOb0lHOW1JR3h2WTJGc0lISmxabVZ5Wlc1alpYTWdhVzV6YVdSbElIUm9aU0J6WTJobGJXRWdLR055WldGMFpXUWdZbmtnY21WemIyeDJaUzVwWkNrc0lIVnpaV1FnWm05eUlHbHViR2x1WlNCeVpYTnZiSFYwYVc5dVhHNGdLaUJBY0dGeVlXMGdJSHRUZEhKcGJtZDlJR0poYzJWSlpDQmlZWE5sSUVsRUlHWnZjaUJKUkhNZ2FXNGdkR2hsSUhOamFHVnRZVnh1SUNvZ1FISmxkSFZ5YmlCN1JuVnVZM1JwYjI1OUlIWmhiR2xrWVhScGIyNGdablZ1WTNScGIyNWNiaUFxTDF4dVpuVnVZM1JwYjI0Z1kyOXRjR2xzWlNoelkyaGxiV0VzSUhKdmIzUXNJR3h2WTJGc1VtVm1jeXdnWW1GelpVbGtLU0I3WEc0Z0lDOHFJR3B6YUdsdWRDQjJZV3hwWkhSb2FYTTZJSFJ5ZFdVc0lHVjJhV3c2SUhSeWRXVWdLaTljYmlBZ0x5b2daWE5zYVc1MElHNXZMWE5vWVdSdmR6b2dNQ0FxTDF4dUlDQjJZWElnYzJWc1ppQTlJSFJvYVhOY2JpQWdJQ0FzSUc5d2RITWdQU0IwYUdsekxsOXZjSFJ6WEc0Z0lDQWdMQ0J5WldaV1lXd2dQU0JiSUhWdVpHVm1hVzVsWkNCZFhHNGdJQ0FnTENCeVpXWnpJRDBnZTMxY2JpQWdJQ0FzSUhCaGRIUmxjbTV6SUQwZ1cxMWNiaUFnSUNBc0lIQmhkSFJsY201elNHRnphQ0E5SUh0OVhHNGdJQ0FnTENCa1pXWmhkV3gwY3lBOUlGdGRYRzRnSUNBZ0xDQmtaV1poZFd4MGMwaGhjMmdnUFNCN2ZWeHVJQ0FnSUN3Z1kzVnpkRzl0VW5Wc1pYTWdQU0JiWFR0Y2JseHVJQ0J5YjI5MElEMGdjbTl2ZENCOGZDQjdJSE5qYUdWdFlUb2djMk5vWlcxaExDQnlaV1pXWVd3NklISmxabFpoYkN3Z2NtVm1jem9nY21WbWN5QjlPMXh1WEc0Z0lIWmhjaUJqSUQwZ1kyaGxZMnREYjIxd2FXeHBibWN1WTJGc2JDaDBhR2x6TENCelkyaGxiV0VzSUhKdmIzUXNJR0poYzJWSlpDazdYRzRnSUhaaGNpQmpiMjF3YVd4aGRHbHZiaUE5SUhSb2FYTXVYMk52YlhCcGJHRjBhVzl1YzF0akxtbHVaR1Y0WFR0Y2JpQWdhV1lnS0dNdVkyOXRjR2xzYVc1bktTQnlaWFIxY200Z0tHTnZiWEJwYkdGMGFXOXVMbU5oYkd4V1lXeHBaR0YwWlNBOUlHTmhiR3hXWVd4cFpHRjBaU2s3WEc1Y2JpQWdkbUZ5SUdadmNtMWhkSE1nUFNCMGFHbHpMbDltYjNKdFlYUnpPMXh1SUNCMllYSWdVbFZNUlZNZ1BTQjBhR2x6TGxKVlRFVlRPMXh1WEc0Z0lIUnllU0I3WEc0Z0lDQWdkbUZ5SUhZZ1BTQnNiMk5oYkVOdmJYQnBiR1VvYzJOb1pXMWhMQ0J5YjI5MExDQnNiMk5oYkZKbFpuTXNJR0poYzJWSlpDazdYRzRnSUNBZ1kyOXRjR2xzWVhScGIyNHVkbUZzYVdSaGRHVWdQU0IyTzF4dUlDQWdJSFpoY2lCamRpQTlJR052YlhCcGJHRjBhVzl1TG1OaGJHeFdZV3hwWkdGMFpUdGNiaUFnSUNCcFppQW9ZM1lwSUh0Y2JpQWdJQ0FnSUdOMkxuTmphR1Z0WVNBOUlIWXVjMk5vWlcxaE8xeHVJQ0FnSUNBZ1kzWXVaWEp5YjNKeklEMGdiblZzYkR0Y2JpQWdJQ0FnSUdOMkxuSmxabk1nUFNCMkxuSmxabk03WEc0Z0lDQWdJQ0JqZGk1eVpXWldZV3dnUFNCMkxuSmxabFpoYkR0Y2JpQWdJQ0FnSUdOMkxuSnZiM1FnUFNCMkxuSnZiM1E3WEc0Z0lDQWdJQ0JqZGk0a1lYTjVibU1nUFNCMkxpUmhjM2x1WXp0Y2JpQWdJQ0FnSUdsbUlDaHZjSFJ6TG5OdmRYSmpaVU52WkdVcElHTjJMbk52ZFhKalpTQTlJSFl1YzI5MWNtTmxPMXh1SUNBZ0lIMWNiaUFnSUNCeVpYUjFjbTRnZGp0Y2JpQWdmU0JtYVc1aGJHeDVJSHRjYmlBZ0lDQmxibVJEYjIxd2FXeHBibWN1WTJGc2JDaDBhR2x6TENCelkyaGxiV0VzSUhKdmIzUXNJR0poYzJWSlpDazdYRzRnSUgxY2JseHVJQ0JtZFc1amRHbHZiaUJqWVd4c1ZtRnNhV1JoZEdVb0tTQjdYRzRnSUNBZ2RtRnlJSFpoYkdsa1lYUmxJRDBnWTI5dGNHbHNZWFJwYjI0dWRtRnNhV1JoZEdVN1hHNGdJQ0FnZG1GeUlISmxjM1ZzZENBOUlIWmhiR2xrWVhSbExtRndjR3g1S0c1MWJHd3NJR0Z5WjNWdFpXNTBjeWs3WEc0Z0lDQWdZMkZzYkZaaGJHbGtZWFJsTG1WeWNtOXljeUE5SUhaaGJHbGtZWFJsTG1WeWNtOXljenRjYmlBZ0lDQnlaWFIxY200Z2NtVnpkV3gwTzF4dUlDQjlYRzVjYmlBZ1puVnVZM1JwYjI0Z2JHOWpZV3hEYjIxd2FXeGxLRjl6WTJobGJXRXNJRjl5YjI5MExDQnNiMk5oYkZKbFpuTXNJR0poYzJWSlpDa2dlMXh1SUNBZ0lIWmhjaUJwYzFKdmIzUWdQU0FoWDNKdmIzUWdmSHdnS0Y5eWIyOTBJQ1ltSUY5eWIyOTBMbk5qYUdWdFlTQTlQU0JmYzJOb1pXMWhLVHRjYmlBZ0lDQnBaaUFvWDNKdmIzUXVjMk5vWlcxaElDRTlJSEp2YjNRdWMyTm9aVzFoS1Z4dUlDQWdJQ0FnY21WMGRYSnVJR052YlhCcGJHVXVZMkZzYkNoelpXeG1MQ0JmYzJOb1pXMWhMQ0JmY205dmRDd2diRzlqWVd4U1pXWnpMQ0JpWVhObFNXUXBPMXh1WEc0Z0lDQWdkbUZ5SUNSaGMzbHVZeUE5SUY5elkyaGxiV0V1SkdGemVXNWpJRDA5UFNCMGNuVmxPMXh1WEc0Z0lDQWdkbUZ5SUhOdmRYSmpaVU52WkdVZ1BTQjJZV3hwWkdGMFpVZGxibVZ5WVhSdmNpaDdYRzRnSUNBZ0lDQnBjMVJ2Y0RvZ2RISjFaU3hjYmlBZ0lDQWdJSE5qYUdWdFlUb2dYM05qYUdWdFlTeGNiaUFnSUNBZ0lHbHpVbTl2ZERvZ2FYTlNiMjkwTEZ4dUlDQWdJQ0FnWW1GelpVbGtPaUJpWVhObFNXUXNYRzRnSUNBZ0lDQnliMjkwT2lCZmNtOXZkQ3hjYmlBZ0lDQWdJSE5qYUdWdFlWQmhkR2c2SUNjbkxGeHVJQ0FnSUNBZ1pYSnlVMk5vWlcxaFVHRjBhRG9nSnlNbkxGeHVJQ0FnSUNBZ1pYSnliM0pRWVhSb09pQW5YQ0pjSWljc1hHNGdJQ0FnSUNCTmFYTnphVzVuVW1WbVJYSnliM0k2SUdWeWNtOXlRMnhoYzNObGN5NU5hWE56YVc1blVtVm1MRnh1SUNBZ0lDQWdVbFZNUlZNNklGSlZURVZUTEZ4dUlDQWdJQ0FnZG1Gc2FXUmhkR1U2SUhaaGJHbGtZWFJsUjJWdVpYSmhkRzl5TEZ4dUlDQWdJQ0FnZFhScGJEb2dkWFJwYkN4Y2JpQWdJQ0FnSUhKbGMyOXNkbVU2SUhKbGMyOXNkbVVzWEc0Z0lDQWdJQ0J5WlhOdmJIWmxVbVZtT2lCeVpYTnZiSFpsVW1WbUxGeHVJQ0FnSUNBZ2RYTmxVR0YwZEdWeWJqb2dkWE5sVUdGMGRHVnliaXhjYmlBZ0lDQWdJSFZ6WlVSbFptRjFiSFE2SUhWelpVUmxabUYxYkhRc1hHNGdJQ0FnSUNCMWMyVkRkWE4wYjIxU2RXeGxPaUIxYzJWRGRYTjBiMjFTZFd4bExGeHVJQ0FnSUNBZ2IzQjBjem9nYjNCMGN5eGNiaUFnSUNBZ0lHWnZjbTFoZEhNNklHWnZjbTFoZEhNc1hHNGdJQ0FnSUNCelpXeG1PaUJ6Wld4bVhHNGdJQ0FnZlNrN1hHNWNiaUFnSUNCemIzVnlZMlZEYjJSbElEMGdkbUZ5Y3loeVpXWldZV3dzSUhKbFpsWmhiRU52WkdVcElDc2dkbUZ5Y3lod1lYUjBaWEp1Y3l3Z2NHRjBkR1Z5YmtOdlpHVXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnS3lCMllYSnpLR1JsWm1GMWJIUnpMQ0JrWldaaGRXeDBRMjlrWlNrZ0t5QjJZWEp6S0dOMWMzUnZiVkoxYkdWekxDQmpkWE4wYjIxU2RXeGxRMjlrWlNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXJJSE52ZFhKalpVTnZaR1U3WEc1Y2JpQWdJQ0JwWmlBb2IzQjBjeTV3Y205alpYTnpRMjlrWlNrZ2MyOTFjbU5sUTI5a1pTQTlJRzl3ZEhNdWNISnZZMlZ6YzBOdlpHVW9jMjkxY21ObFEyOWtaU2s3WEc0Z0lDQWdMeThnWTI5dWMyOXNaUzVzYjJjb0oxeGNibHhjYmx4Y2JpQXFLaW9nWEZ4dUp5d2dTbE5QVGk1emRISnBibWRwWm5rb2MyOTFjbU5sUTI5a1pTa3BPMXh1SUNBZ0lIWmhjaUIyWVd4cFpHRjBaVHRjYmlBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnZG1GeUlHMWhhMlZXWVd4cFpHRjBaU0E5SUc1bGR5QkdkVzVqZEdsdmJpaGNiaUFnSUNBZ0lDQWdKM05sYkdZbkxGeHVJQ0FnSUNBZ0lDQW5VbFZNUlZNbkxGeHVJQ0FnSUNBZ0lDQW5abTl5YldGMGN5Y3NYRzRnSUNBZ0lDQWdJQ2R5YjI5MEp5eGNiaUFnSUNBZ0lDQWdKM0psWmxaaGJDY3NYRzRnSUNBZ0lDQWdJQ2RrWldaaGRXeDBjeWNzWEc0Z0lDQWdJQ0FnSUNkamRYTjBiMjFTZFd4bGN5Y3NYRzRnSUNBZ0lDQWdJQ2RqYnljc1hHNGdJQ0FnSUNBZ0lDZGxjWFZoYkNjc1hHNGdJQ0FnSUNBZ0lDZDFZM015YkdWdVozUm9KeXhjYmlBZ0lDQWdJQ0FnSjFaaGJHbGtZWFJwYjI1RmNuSnZjaWNzWEc0Z0lDQWdJQ0FnSUhOdmRYSmpaVU52WkdWY2JpQWdJQ0FnSUNrN1hHNWNiaUFnSUNBZ0lIWmhiR2xrWVhSbElEMGdiV0ZyWlZaaGJHbGtZWFJsS0Z4dUlDQWdJQ0FnSUNCelpXeG1MRnh1SUNBZ0lDQWdJQ0JTVlV4RlV5eGNiaUFnSUNBZ0lDQWdabTl5YldGMGN5eGNiaUFnSUNBZ0lDQWdjbTl2ZEN4Y2JpQWdJQ0FnSUNBZ2NtVm1WbUZzTEZ4dUlDQWdJQ0FnSUNCa1pXWmhkV3gwY3l4Y2JpQWdJQ0FnSUNBZ1kzVnpkRzl0VW5Wc1pYTXNYRzRnSUNBZ0lDQWdJR052TEZ4dUlDQWdJQ0FnSUNCbGNYVmhiQ3hjYmlBZ0lDQWdJQ0FnZFdOek1teGxibWQwYUN4Y2JpQWdJQ0FnSUNBZ1ZtRnNhV1JoZEdsdmJrVnljbTl5WEc0Z0lDQWdJQ0FwTzF4dVhHNGdJQ0FnSUNCeVpXWldZV3hiTUYwZ1BTQjJZV3hwWkdGMFpUdGNiaUFnSUNCOUlHTmhkR05vS0dVcElIdGNiaUFnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvSjBWeWNtOXlJR052YlhCcGJHbHVaeUJ6WTJobGJXRXNJR1oxYm1OMGFXOXVJR052WkdVNkp5d2djMjkxY21ObFEyOWtaU2s3WEc0Z0lDQWdJQ0IwYUhKdmR5QmxPMXh1SUNBZ0lIMWNibHh1SUNBZ0lIWmhiR2xrWVhSbExuTmphR1Z0WVNBOUlGOXpZMmhsYldFN1hHNGdJQ0FnZG1Gc2FXUmhkR1V1WlhKeWIzSnpJRDBnYm5Wc2JEdGNiaUFnSUNCMllXeHBaR0YwWlM1eVpXWnpJRDBnY21WbWN6dGNiaUFnSUNCMllXeHBaR0YwWlM1eVpXWldZV3dnUFNCeVpXWldZV3c3WEc0Z0lDQWdkbUZzYVdSaGRHVXVjbTl2ZENBOUlHbHpVbTl2ZENBL0lIWmhiR2xrWVhSbElEb2dYM0p2YjNRN1hHNGdJQ0FnYVdZZ0tDUmhjM2x1WXlrZ2RtRnNhV1JoZEdVdUpHRnplVzVqSUQwZ2RISjFaVHRjYmlBZ0lDQnBaaUFvYjNCMGN5NXpiM1Z5WTJWRGIyUmxJRDA5UFNCMGNuVmxLU0I3WEc0Z0lDQWdJQ0IyWVd4cFpHRjBaUzV6YjNWeVkyVWdQU0I3WEc0Z0lDQWdJQ0FnSUdOdlpHVTZJSE52ZFhKalpVTnZaR1VzWEc0Z0lDQWdJQ0FnSUhCaGRIUmxjbTV6T2lCd1lYUjBaWEp1Y3l4Y2JpQWdJQ0FnSUNBZ1pHVm1ZWFZzZEhNNklHUmxabUYxYkhSelhHNGdJQ0FnSUNCOU8xeHVJQ0FnSUgxY2JseHVJQ0FnSUhKbGRIVnliaUIyWVd4cFpHRjBaVHRjYmlBZ2ZWeHVYRzRnSUdaMWJtTjBhVzl1SUhKbGMyOXNkbVZTWldZb1ltRnpaVWxrTENCeVpXWXNJR2x6VW05dmRDa2dlMXh1SUNBZ0lISmxaaUE5SUhKbGMyOXNkbVV1ZFhKc0tHSmhjMlZKWkN3Z2NtVm1LVHRjYmlBZ0lDQjJZWElnY21WbVNXNWtaWGdnUFNCeVpXWnpXM0psWmwwN1hHNGdJQ0FnZG1GeUlGOXlaV1pXWVd3c0lISmxaa052WkdVN1hHNGdJQ0FnYVdZZ0tISmxaa2x1WkdWNElDRTlQU0IxYm1SbFptbHVaV1FwSUh0Y2JpQWdJQ0FnSUY5eVpXWldZV3dnUFNCeVpXWldZV3hiY21WbVNXNWtaWGhkTzF4dUlDQWdJQ0FnY21WbVEyOWtaU0E5SUNkeVpXWldZV3hiSnlBcklISmxaa2x1WkdWNElDc2dKMTBuTzF4dUlDQWdJQ0FnY21WMGRYSnVJSEpsYzI5c2RtVmtVbVZtS0Y5eVpXWldZV3dzSUhKbFprTnZaR1VwTzF4dUlDQWdJSDFjYmlBZ0lDQnBaaUFvSVdselVtOXZkQ0FtSmlCeWIyOTBMbkpsWm5NcElIdGNiaUFnSUNBZ0lIWmhjaUJ5YjI5MFVtVm1TV1FnUFNCeWIyOTBMbkpsWm5OYmNtVm1YVHRjYmlBZ0lDQWdJR2xtSUNoeWIyOTBVbVZtU1dRZ0lUMDlJSFZ1WkdWbWFXNWxaQ2tnZTF4dUlDQWdJQ0FnSUNCZmNtVm1WbUZzSUQwZ2NtOXZkQzV5WldaV1lXeGJjbTl2ZEZKbFprbGtYVHRjYmlBZ0lDQWdJQ0FnY21WbVEyOWtaU0E5SUdGa1pFeHZZMkZzVW1WbUtISmxaaXdnWDNKbFpsWmhiQ2s3WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ5WlhOdmJIWmxaRkpsWmloZmNtVm1WbUZzTENCeVpXWkRiMlJsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WldaRGIyUmxJRDBnWVdSa1RHOWpZV3hTWldZb2NtVm1LVHRjYmlBZ0lDQjJZWElnZGlBOUlISmxjMjlzZG1VdVkyRnNiQ2h6Wld4bUxDQnNiMk5oYkVOdmJYQnBiR1VzSUhKdmIzUXNJSEpsWmlrN1hHNGdJQ0FnYVdZZ0tIWWdQVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUNBZ2RtRnlJR3h2WTJGc1UyTm9aVzFoSUQwZ2JHOWpZV3hTWldaeklDWW1JR3h2WTJGc1VtVm1jMXR5WldaZE8xeHVJQ0FnSUNBZ2FXWWdLR3h2WTJGc1UyTm9aVzFoS1NCN1hHNGdJQ0FnSUNBZ0lIWWdQU0J5WlhOdmJIWmxMbWx1YkdsdVpWSmxaaWhzYjJOaGJGTmphR1Z0WVN3Z2IzQjBjeTVwYm14cGJtVlNaV1p6S1Z4dUlDQWdJQ0FnSUNBZ0lDQWdQeUJzYjJOaGJGTmphR1Z0WVZ4dUlDQWdJQ0FnSUNBZ0lDQWdPaUJqYjIxd2FXeGxMbU5oYkd3b2MyVnNaaXdnYkc5allXeFRZMmhsYldFc0lISnZiM1FzSUd4dlkyRnNVbVZtY3l3Z1ltRnpaVWxrS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2RpQWhQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNCeVpYQnNZV05sVEc5allXeFNaV1lvY21WbUxDQjJLVHRjYmlBZ0lDQWdJSEpsZEhWeWJpQnlaWE52YkhabFpGSmxaaWgyTENCeVpXWkRiMlJsS1R0Y2JpQWdJQ0I5WEc0Z0lIMWNibHh1SUNCbWRXNWpkR2x2YmlCaFpHUk1iMk5oYkZKbFppaHlaV1lzSUhZcElIdGNiaUFnSUNCMllYSWdjbVZtU1dRZ1BTQnlaV1pXWVd3dWJHVnVaM1JvTzF4dUlDQWdJSEpsWmxaaGJGdHlaV1pKWkYwZ1BTQjJPMXh1SUNBZ0lISmxabk5iY21WbVhTQTlJSEpsWmtsa08xeHVJQ0FnSUhKbGRIVnliaUFuY21WbVZtRnNKeUFySUhKbFprbGtPMXh1SUNCOVhHNWNiaUFnWm5WdVkzUnBiMjRnY21Wd2JHRmpaVXh2WTJGc1VtVm1LSEpsWml3Z2Rpa2dlMXh1SUNBZ0lIWmhjaUJ5WldaSlpDQTlJSEpsWm5OYmNtVm1YVHRjYmlBZ0lDQnlaV1pXWVd4YmNtVm1TV1JkSUQwZ2RqdGNiaUFnZlZ4dVhHNGdJR1oxYm1OMGFXOXVJSEpsYzI5c2RtVmtVbVZtS0hKbFpsWmhiQ3dnWTI5a1pTa2dlMXh1SUNBZ0lISmxkSFZ5YmlCMGVYQmxiMllnY21WbVZtRnNJRDA5SUNkdlltcGxZM1FuSUh4OElIUjVjR1Z2WmlCeVpXWldZV3dnUFQwZ0oySnZiMnhsWVc0blhHNGdJQ0FnSUNBZ0lDQWdJQ0EvSUhzZ1kyOWtaVG9nWTI5a1pTd2djMk5vWlcxaE9pQnlaV1pXWVd3c0lHbHViR2x1WlRvZ2RISjFaU0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQTZJSHNnWTI5a1pUb2dZMjlrWlN3Z0pHRnplVzVqT2lCeVpXWldZV3dnSmlZZ2NtVm1WbUZzTGlSaGMzbHVZeUI5TzF4dUlDQjlYRzVjYmlBZ1puVnVZM1JwYjI0Z2RYTmxVR0YwZEdWeWJpaHlaV2RsZUZOMGNpa2dlMXh1SUNBZ0lIWmhjaUJwYm1SbGVDQTlJSEJoZEhSbGNtNXpTR0Z6YUZ0eVpXZGxlRk4wY2wwN1hHNGdJQ0FnYVdZZ0tHbHVaR1Y0SUQwOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQWdJR2x1WkdWNElEMGdjR0YwZEdWeWJuTklZWE5vVzNKbFoyVjRVM1J5WFNBOUlIQmhkSFJsY201ekxteGxibWQwYUR0Y2JpQWdJQ0FnSUhCaGRIUmxjbTV6VzJsdVpHVjRYU0E5SUhKbFoyVjRVM1J5TzF4dUlDQWdJSDFjYmlBZ0lDQnlaWFIxY200Z0ozQmhkSFJsY200bklDc2dhVzVrWlhnN1hHNGdJSDFjYmx4dUlDQm1kVzVqZEdsdmJpQjFjMlZFWldaaGRXeDBLSFpoYkhWbEtTQjdYRzRnSUNBZ2MzZHBkR05vSUNoMGVYQmxiMllnZG1Gc2RXVXBJSHRjYmlBZ0lDQWdJR05oYzJVZ0oySnZiMnhsWVc0bk9seHVJQ0FnSUNBZ1kyRnpaU0FuYm5WdFltVnlKenBjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJQ2NuSUNzZ2RtRnNkV1U3WEc0Z0lDQWdJQ0JqWVhObElDZHpkSEpwYm1jbk9seHVJQ0FnSUNBZ0lDQnlaWFIxY200Z2RYUnBiQzUwYjFGMWIzUmxaRk4wY21sdVp5aDJZV3gxWlNrN1hHNGdJQ0FnSUNCallYTmxJQ2R2WW1wbFkzUW5PbHh1SUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnUFQwOUlHNTFiR3dwSUhKbGRIVnliaUFuYm5Wc2JDYzdYRzRnSUNBZ0lDQWdJSFpoY2lCMllXeDFaVk4wY2lBOUlITjBZV0pzWlZOMGNtbHVaMmxtZVNoMllXeDFaU2s3WEc0Z0lDQWdJQ0FnSUhaaGNpQnBibVJsZUNBOUlHUmxabUYxYkhSelNHRnphRnQyWVd4MVpWTjBjbDA3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBibVJsZUNBOVBUMGdkVzVrWldacGJtVmtLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2FXNWtaWGdnUFNCa1pXWmhkV3gwYzBoaGMyaGJkbUZzZFdWVGRISmRJRDBnWkdWbVlYVnNkSE11YkdWdVozUm9PMXh1SUNBZ0lDQWdJQ0FnSUdSbFptRjFiSFJ6VzJsdVpHVjRYU0E5SUhaaGJIVmxPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUFuWkdWbVlYVnNkQ2NnS3lCcGJtUmxlRHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JtZFc1amRHbHZiaUIxYzJWRGRYTjBiMjFTZFd4bEtISjFiR1VzSUhOamFHVnRZU3dnY0dGeVpXNTBVMk5vWlcxaExDQnBkQ2tnZTF4dUlDQWdJSFpoY2lCMllXeHBaR0YwWlZOamFHVnRZU0E5SUhKMWJHVXVaR1ZtYVc1cGRHbHZiaTUyWVd4cFpHRjBaVk5qYUdWdFlUdGNiaUFnSUNCcFppQW9kbUZzYVdSaGRHVlRZMmhsYldFZ0ppWWdjMlZzWmk1ZmIzQjBjeTUyWVd4cFpHRjBaVk5qYUdWdFlTQWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJSFpoY2lCMllXeHBaQ0E5SUhaaGJHbGtZWFJsVTJOb1pXMWhLSE5qYUdWdFlTazdYRzRnSUNBZ0lDQnBaaUFvSVhaaGJHbGtLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQnRaWE56WVdkbElEMGdKMnRsZVhkdmNtUWdjMk5vWlcxaElHbHpJR2x1ZG1Gc2FXUTZJQ2NnS3lCelpXeG1MbVZ5Y205eWMxUmxlSFFvZG1Gc2FXUmhkR1ZUWTJobGJXRXVaWEp5YjNKektUdGNiaUFnSUNBZ0lDQWdhV1lnS0hObGJHWXVYMjl3ZEhNdWRtRnNhV1JoZEdWVFkyaGxiV0VnUFQwZ0oyeHZaeWNwSUdOdmJuTnZiR1V1WlhKeWIzSW9iV1Z6YzJGblpTazdYRzRnSUNBZ0lDQWdJR1ZzYzJVZ2RHaHliM2NnYm1WM0lFVnljbTl5S0cxbGMzTmhaMlVwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJSFpoY2lCamIyMXdhV3hsSUQwZ2NuVnNaUzVrWldacGJtbDBhVzl1TG1OdmJYQnBiR1ZjYmlBZ0lDQWdJQ3dnYVc1c2FXNWxJRDBnY25Wc1pTNWtaV1pwYm1sMGFXOXVMbWx1YkdsdVpWeHVJQ0FnSUNBZ0xDQnRZV055YnlBOUlISjFiR1V1WkdWbWFXNXBkR2x2Ymk1dFlXTnlienRjYmx4dUlDQWdJSFpoY2lCMllXeHBaR0YwWlR0Y2JpQWdJQ0JwWmlBb1kyOXRjR2xzWlNrZ2UxeHVJQ0FnSUNBZ2RtRnNhV1JoZEdVZ1BTQmpiMjF3YVd4bExtTmhiR3dvYzJWc1ppd2djMk5vWlcxaExDQndZWEpsYm5SVFkyaGxiV0VzSUdsMEtUdGNiaUFnSUNCOUlHVnNjMlVnYVdZZ0tHMWhZM0p2S1NCN1hHNGdJQ0FnSUNCMllXeHBaR0YwWlNBOUlHMWhZM0p2TG1OaGJHd29jMlZzWml3Z2MyTm9aVzFoTENCd1lYSmxiblJUWTJobGJXRXNJR2wwS1R0Y2JpQWdJQ0FnSUdsbUlDaHZjSFJ6TG5aaGJHbGtZWFJsVTJOb1pXMWhJQ0U5UFNCbVlXeHpaU2tnYzJWc1ppNTJZV3hwWkdGMFpWTmphR1Z0WVNoMllXeHBaR0YwWlN3Z2RISjFaU2s3WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2hwYm14cGJtVXBJSHRjYmlBZ0lDQWdJSFpoYkdsa1lYUmxJRDBnYVc1c2FXNWxMbU5oYkd3b2MyVnNaaXdnYVhRc0lISjFiR1V1YTJWNWQyOXlaQ3dnYzJOb1pXMWhMQ0J3WVhKbGJuUlRZMmhsYldFcE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0IyWVd4cFpHRjBaU0E5SUhKMWJHVXVaR1ZtYVc1cGRHbHZiaTUyWVd4cFpHRjBaVHRjYmlBZ0lDQWdJR2xtSUNnaGRtRnNhV1JoZEdVcElISmxkSFZ5Ymp0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb2RtRnNhV1JoZEdVZ1BUMDlJSFZ1WkdWbWFXNWxaQ2xjYmlBZ0lDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ25ZM1Z6ZEc5dElHdGxlWGR2Y21RZ1hDSW5JQ3NnY25Wc1pTNXJaWGwzYjNKa0lDc2dKMXdpWm1GcGJHVmtJSFJ2SUdOdmJYQnBiR1VuS1R0Y2JseHVJQ0FnSUhaaGNpQnBibVJsZUNBOUlHTjFjM1J2YlZKMWJHVnpMbXhsYm1kMGFEdGNiaUFnSUNCamRYTjBiMjFTZFd4bGMxdHBibVJsZUYwZ1BTQjJZV3hwWkdGMFpUdGNibHh1SUNBZ0lISmxkSFZ5YmlCN1hHNGdJQ0FnSUNCamIyUmxPaUFuWTNWemRHOXRVblZzWlNjZ0t5QnBibVJsZUN4Y2JpQWdJQ0FnSUhaaGJHbGtZWFJsT2lCMllXeHBaR0YwWlZ4dUlDQWdJSDA3WEc0Z0lIMWNibjFjYmx4dVhHNHZLaXBjYmlBcUlFTm9aV05yY3lCcFppQjBhR1VnYzJOb1pXMWhJR2x6SUdOMWNuSmxiblJzZVNCamIyMXdhV3hsWkZ4dUlDb2dRSFJvYVhNZ0lDQkJhblpjYmlBcUlFQndZWEpoYlNBZ2UwOWlhbVZqZEgwZ2MyTm9aVzFoSUhOamFHVnRZU0IwYnlCamIyMXdhV3hsWEc0Z0tpQkFjR0Z5WVcwZ0lIdFBZbXBsWTNSOUlISnZiM1FnY205dmRDQnZZbXBsWTNSY2JpQXFJRUJ3WVhKaGJTQWdlMU4wY21sdVozMGdZbUZ6WlVsa0lHSmhjMlVnYzJOb1pXMWhJRWxFWEc0Z0tpQkFjbVYwZFhKdUlIdFBZbXBsWTNSOUlHOWlhbVZqZENCM2FYUm9JSEJ5YjNCbGNuUnBaWE1nWENKcGJtUmxlRndpSUNoamIyMXdhV3hoZEdsdmJpQnBibVJsZUNrZ1lXNWtJRndpWTI5dGNHbHNhVzVuWENJZ0tHSnZiMnhsWVc0cFhHNGdLaTljYm1aMWJtTjBhVzl1SUdOb1pXTnJRMjl0Y0dsc2FXNW5LSE5qYUdWdFlTd2djbTl2ZEN3Z1ltRnpaVWxrS1NCN1hHNGdJQzhxSUdwemFHbHVkQ0IyWVd4cFpIUm9hWE02SUhSeWRXVWdLaTljYmlBZ2RtRnlJR2x1WkdWNElEMGdZMjl0Y0VsdVpHVjRMbU5oYkd3b2RHaHBjeXdnYzJOb1pXMWhMQ0J5YjI5MExDQmlZWE5sU1dRcE8xeHVJQ0JwWmlBb2FXNWtaWGdnUGowZ01Da2djbVYwZFhKdUlIc2dhVzVrWlhnNklHbHVaR1Y0TENCamIyMXdhV3hwYm1jNklIUnlkV1VnZlR0Y2JpQWdhVzVrWlhnZ1BTQjBhR2x6TGw5amIyMXdhV3hoZEdsdmJuTXViR1Z1WjNSb08xeHVJQ0IwYUdsekxsOWpiMjF3YVd4aGRHbHZibk5iYVc1a1pYaGRJRDBnZTF4dUlDQWdJSE5qYUdWdFlUb2djMk5vWlcxaExGeHVJQ0FnSUhKdmIzUTZJSEp2YjNRc1hHNGdJQ0FnWW1GelpVbGtPaUJpWVhObFNXUmNiaUFnZlR0Y2JpQWdjbVYwZFhKdUlIc2dhVzVrWlhnNklHbHVaR1Y0TENCamIyMXdhV3hwYm1jNklHWmhiSE5sSUgwN1hHNTlYRzVjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVZ6SUhSb1pTQnpZMmhsYldFZ1puSnZiU0IwYUdVZ1kzVnljbVZ1ZEd4NUlHTnZiWEJwYkdWa0lHeHBjM1JjYmlBcUlFQjBhR2x6SUNBZ1FXcDJYRzRnS2lCQWNHRnlZVzBnSUh0UFltcGxZM1I5SUhOamFHVnRZU0J6WTJobGJXRWdkRzhnWTI5dGNHbHNaVnh1SUNvZ1FIQmhjbUZ0SUNCN1QySnFaV04wZlNCeWIyOTBJSEp2YjNRZ2IySnFaV04wWEc0Z0tpQkFjR0Z5WVcwZ0lIdFRkSEpwYm1kOUlHSmhjMlZKWkNCaVlYTmxJSE5qYUdWdFlTQkpSRnh1SUNvdlhHNW1kVzVqZEdsdmJpQmxibVJEYjIxd2FXeHBibWNvYzJOb1pXMWhMQ0J5YjI5MExDQmlZWE5sU1dRcElIdGNiaUFnTHlvZ2FuTm9hVzUwSUhaaGJHbGtkR2hwY3pvZ2RISjFaU0FxTDF4dUlDQjJZWElnYVNBOUlHTnZiWEJKYm1SbGVDNWpZV3hzS0hSb2FYTXNJSE5qYUdWdFlTd2djbTl2ZEN3Z1ltRnpaVWxrS1R0Y2JpQWdhV1lnS0drZ1BqMGdNQ2tnZEdocGN5NWZZMjl0Y0dsc1lYUnBiMjV6TG5Od2JHbGpaU2hwTENBeEtUdGNibjFjYmx4dVhHNHZLaXBjYmlBcUlFbHVaR1Y0SUc5bUlITmphR1Z0WVNCamIyMXdhV3hoZEdsdmJpQnBiaUIwYUdVZ1kzVnljbVZ1ZEd4NUlHTnZiWEJwYkdWa0lHeHBjM1JjYmlBcUlFQjBhR2x6SUNBZ1FXcDJYRzRnS2lCQWNHRnlZVzBnSUh0UFltcGxZM1I5SUhOamFHVnRZU0J6WTJobGJXRWdkRzhnWTI5dGNHbHNaVnh1SUNvZ1FIQmhjbUZ0SUNCN1QySnFaV04wZlNCeWIyOTBJSEp2YjNRZ2IySnFaV04wWEc0Z0tpQkFjR0Z5WVcwZ0lIdFRkSEpwYm1kOUlHSmhjMlZKWkNCaVlYTmxJSE5qYUdWdFlTQkpSRnh1SUNvZ1FISmxkSFZ5YmlCN1NXNTBaV2RsY24wZ1kyOXRjR2xzWVhScGIyNGdhVzVrWlhoY2JpQXFMMXh1Wm5WdVkzUnBiMjRnWTI5dGNFbHVaR1Y0S0hOamFHVnRZU3dnY205dmRDd2dZbUZ6WlVsa0tTQjdYRzRnSUM4cUlHcHphR2x1ZENCMllXeHBaSFJvYVhNNklIUnlkV1VnS2k5Y2JpQWdabTl5SUNoMllYSWdhVDB3T3lCcFBIUm9hWE11WDJOdmJYQnBiR0YwYVc5dWN5NXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJSFpoY2lCaklEMGdkR2hwY3k1ZlkyOXRjR2xzWVhScGIyNXpXMmxkTzF4dUlDQWdJR2xtSUNoakxuTmphR1Z0WVNBOVBTQnpZMmhsYldFZ0ppWWdZeTV5YjI5MElEMDlJSEp2YjNRZ0ppWWdZeTVpWVhObFNXUWdQVDBnWW1GelpVbGtLU0J5WlhSMWNtNGdhVHRjYmlBZ2ZWeHVJQ0J5WlhSMWNtNGdMVEU3WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnY0dGMGRHVnlia052WkdVb2FTd2djR0YwZEdWeWJuTXBJSHRjYmlBZ2NtVjBkWEp1SUNkMllYSWdjR0YwZEdWeWJpY2dLeUJwSUNzZ0p5QTlJRzVsZHlCU1pXZEZlSEFvSnlBcklIVjBhV3d1ZEc5UmRXOTBaV1JUZEhKcGJtY29jR0YwZEdWeWJuTmJhVjBwSUNzZ0p5azdKenRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJrWldaaGRXeDBRMjlrWlNocEtTQjdYRzRnSUhKbGRIVnliaUFuZG1GeUlHUmxabUYxYkhRbklDc2dhU0FySUNjZ1BTQmtaV1poZFd4MGMxc25JQ3NnYVNBcklDZGRPeWM3WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnY21WbVZtRnNRMjlrWlNocExDQnlaV1pXWVd3cElIdGNiaUFnY21WMGRYSnVJSEpsWmxaaGJGdHBYU0E5UFQwZ2RXNWtaV1pwYm1Wa0lEOGdKeWNnT2lBbmRtRnlJSEpsWmxaaGJDY2dLeUJwSUNzZ0p5QTlJSEpsWmxaaGJGc25JQ3NnYVNBcklDZGRPeWM3WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnWTNWemRHOXRVblZzWlVOdlpHVW9hU2tnZTF4dUlDQnlaWFIxY200Z0ozWmhjaUJqZFhOMGIyMVNkV3hsSnlBcklHa2dLeUFuSUQwZ1kzVnpkRzl0VW5Wc1pYTmJKeUFySUdrZ0t5QW5YVHNuTzF4dWZWeHVYRzVjYm1aMWJtTjBhVzl1SUhaaGNuTW9ZWEp5TENCemRHRjBaVzFsYm5RcElIdGNiaUFnYVdZZ0tDRmhjbkl1YkdWdVozUm9LU0J5WlhSMWNtNGdKeWM3WEc0Z0lIWmhjaUJqYjJSbElEMGdKeWM3WEc0Z0lHWnZjaUFvZG1GeUlHazlNRHNnYVR4aGNuSXViR1Z1WjNSb095QnBLeXNwWEc0Z0lDQWdZMjlrWlNBclBTQnpkR0YwWlcxbGJuUW9hU3dnWVhKeUtUdGNiaUFnY21WMGRYSnVJR052WkdVN1hHNTlYRzRpWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlmUT09XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL2luZGV4LmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3Jlc29sdmUuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3Jlc29sdmUuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxudmFyIHVybCA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIHVybCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL3VybC91cmwuanNcXFxcXFxcIilcXFxcbiAgLCBlcXVhbCA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZXF1YWwgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXF1YWwuanNcXFxcXFxcIilcXFxcbiAgLCB1dGlsID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3V0aWwuanNcXFxcXFxcIilcXFxcbiAgLCBTY2hlbWFPYmplY3QgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3NjaGVtYV9vYmogKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvc2NoZW1hX29iai5qc1xcXFxcXFwiKVxcXFxuICAsIHRyYXZlcnNlID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEganNvbi1zY2hlbWEtdHJhdmVyc2UgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9qc29uLXNjaGVtYS10cmF2ZXJzZS9pbmRleC5qc1xcXFxcXFwiKTtcXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSByZXNvbHZlO1xcXFxuXFxcXG5yZXNvbHZlLm5vcm1hbGl6ZUlkID0gbm9ybWFsaXplSWQ7XFxcXG5yZXNvbHZlLmZ1bGxQYXRoID0gZ2V0RnVsbFBhdGg7XFxcXG5yZXNvbHZlLnVybCA9IHJlc29sdmVVcmw7XFxcXG5yZXNvbHZlLmlkcyA9IHJlc29sdmVJZHM7XFxcXG5yZXNvbHZlLmlubGluZVJlZiA9IGlubGluZVJlZjtcXFxcbnJlc29sdmUuc2NoZW1hID0gcmVzb2x2ZVNjaGVtYTtcXFxcblxcXFxuLyoqXFxcXG4gKiBbcmVzb2x2ZSBhbmQgY29tcGlsZSB0aGUgcmVmZXJlbmNlcyAoJHJlZildXFxcXG4gKiBAdGhpcyAgIEFqdlxcXFxuICogQHBhcmFtICB7RnVuY3Rpb259IGNvbXBpbGUgcmVmZXJlbmNlIHRvIHNjaGVtYSBjb21waWxhdGlvbiBmdW5jaXRvbiAobG9jYWxDb21waWxlKVxcXFxuICogQHBhcmFtICB7T2JqZWN0fSByb290IG9iamVjdCB3aXRoIGluZm9ybWF0aW9uIGFib3V0IHRoZSByb290IHNjaGVtYSBmb3IgdGhlIGN1cnJlbnQgc2NoZW1hXFxcXG4gKiBAcGFyYW0gIHtTdHJpbmd9IHJlZiByZWZlcmVuY2UgdG8gcmVzb2x2ZVxcXFxuICogQHJldHVybiB7T2JqZWN0fEZ1bmN0aW9ufSBzY2hlbWEgb2JqZWN0IChpZiB0aGUgc2NoZW1hIGNhbiBiZSBpbmxpbmVkKSBvciB2YWxpZGF0aW9uIGZ1bmN0aW9uXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIHJlc29sdmUoY29tcGlsZSwgcm9vdCwgcmVmKSB7XFxcXG4gIC8qIGpzaGludCB2YWxpZHRoaXM6IHRydWUgKi9cXFxcbiAgdmFyIHJlZlZhbCA9IHRoaXMuX3JlZnNbcmVmXTtcXFxcbiAgaWYgKHR5cGVvZiByZWZWYWwgPT0gJ3N0cmluZycpIHtcXFxcbiAgICBpZiAodGhpcy5fcmVmc1tyZWZWYWxdKSByZWZWYWwgPSB0aGlzLl9yZWZzW3JlZlZhbF07XFxcXG4gICAgZWxzZSByZXR1cm4gcmVzb2x2ZS5jYWxsKHRoaXMsIGNvbXBpbGUsIHJvb3QsIHJlZlZhbCk7XFxcXG4gIH1cXFxcblxcXFxuICByZWZWYWwgPSByZWZWYWwgfHwgdGhpcy5fc2NoZW1hc1tyZWZdO1xcXFxuICBpZiAocmVmVmFsIGluc3RhbmNlb2YgU2NoZW1hT2JqZWN0KSB7XFxcXG4gICAgcmV0dXJuIGlubGluZVJlZihyZWZWYWwuc2NoZW1hLCB0aGlzLl9vcHRzLmlubGluZVJlZnMpXFxcXG4gICAgICAgICAgICA/IHJlZlZhbC5zY2hlbWFcXFxcbiAgICAgICAgICAgIDogcmVmVmFsLnZhbGlkYXRlIHx8IHRoaXMuX2NvbXBpbGUocmVmVmFsKTtcXFxcbiAgfVxcXFxuXFxcXG4gIHZhciByZXMgPSByZXNvbHZlU2NoZW1hLmNhbGwodGhpcywgcm9vdCwgcmVmKTtcXFxcbiAgdmFyIHNjaGVtYSwgdiwgYmFzZUlkO1xcXFxuICBpZiAocmVzKSB7XFxcXG4gICAgc2NoZW1hID0gcmVzLnNjaGVtYTtcXFxcbiAgICByb290ID0gcmVzLnJvb3Q7XFxcXG4gICAgYmFzZUlkID0gcmVzLmJhc2VJZDtcXFxcbiAgfVxcXFxuXFxcXG4gIGlmIChzY2hlbWEgaW5zdGFuY2VvZiBTY2hlbWFPYmplY3QpIHtcXFxcbiAgICB2ID0gc2NoZW1hLnZhbGlkYXRlIHx8IGNvbXBpbGUuY2FsbCh0aGlzLCBzY2hlbWEuc2NoZW1hLCByb290LCB1bmRlZmluZWQsIGJhc2VJZCk7XFxcXG4gIH0gZWxzZSBpZiAoc2NoZW1hICE9PSB1bmRlZmluZWQpIHtcXFxcbiAgICB2ID0gaW5saW5lUmVmKHNjaGVtYSwgdGhpcy5fb3B0cy5pbmxpbmVSZWZzKVxcXFxuICAgICAgICA/IHNjaGVtYVxcXFxuICAgICAgICA6IGNvbXBpbGUuY2FsbCh0aGlzLCBzY2hlbWEsIHJvb3QsIHVuZGVmaW5lZCwgYmFzZUlkKTtcXFxcbiAgfVxcXFxuXFxcXG4gIHJldHVybiB2O1xcXFxufVxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogUmVzb2x2ZSBzY2hlbWEsIGl0cyByb290IGFuZCBiYXNlSWRcXFxcbiAqIEB0aGlzIEFqdlxcXFxuICogQHBhcmFtICB7T2JqZWN0fSByb290IHJvb3Qgb2JqZWN0IHdpdGggcHJvcGVydGllcyBzY2hlbWEsIHJlZlZhbCwgcmVmc1xcXFxuICogQHBhcmFtICB7U3RyaW5nfSByZWYgIHJlZmVyZW5jZSB0byByZXNvbHZlXFxcXG4gKiBAcmV0dXJuIHtPYmplY3R9IG9iamVjdCB3aXRoIHByb3BlcnRpZXMgc2NoZW1hLCByb290LCBiYXNlSWRcXFxcbiAqL1xcXFxuZnVuY3Rpb24gcmVzb2x2ZVNjaGVtYShyb290LCByZWYpIHtcXFxcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xcXFxuICB2YXIgcCA9IHVybC5wYXJzZShyZWYsIGZhbHNlLCB0cnVlKVxcXFxuICAgICwgcmVmUGF0aCA9IF9nZXRGdWxsUGF0aChwKVxcXFxuICAgICwgYmFzZUlkID0gZ2V0RnVsbFBhdGgodGhpcy5fZ2V0SWQocm9vdC5zY2hlbWEpKTtcXFxcbiAgaWYgKHJlZlBhdGggIT09IGJhc2VJZCkge1xcXFxuICAgIHZhciBpZCA9IG5vcm1hbGl6ZUlkKHJlZlBhdGgpO1xcXFxuICAgIHZhciByZWZWYWwgPSB0aGlzLl9yZWZzW2lkXTtcXFxcbiAgICBpZiAodHlwZW9mIHJlZlZhbCA9PSAnc3RyaW5nJykge1xcXFxuICAgICAgcmV0dXJuIHJlc29sdmVSZWN1cnNpdmUuY2FsbCh0aGlzLCByb290LCByZWZWYWwsIHApO1xcXFxuICAgIH0gZWxzZSBpZiAocmVmVmFsIGluc3RhbmNlb2YgU2NoZW1hT2JqZWN0KSB7XFxcXG4gICAgICBpZiAoIXJlZlZhbC52YWxpZGF0ZSkgdGhpcy5fY29tcGlsZShyZWZWYWwpO1xcXFxuICAgICAgcm9vdCA9IHJlZlZhbDtcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgcmVmVmFsID0gdGhpcy5fc2NoZW1hc1tpZF07XFxcXG4gICAgICBpZiAocmVmVmFsIGluc3RhbmNlb2YgU2NoZW1hT2JqZWN0KSB7XFxcXG4gICAgICAgIGlmICghcmVmVmFsLnZhbGlkYXRlKSB0aGlzLl9jb21waWxlKHJlZlZhbCk7XFxcXG4gICAgICAgIGlmIChpZCA9PSBub3JtYWxpemVJZChyZWYpKVxcXFxuICAgICAgICAgIHJldHVybiB7IHNjaGVtYTogcmVmVmFsLCByb290OiByb290LCBiYXNlSWQ6IGJhc2VJZCB9O1xcXFxuICAgICAgICByb290ID0gcmVmVmFsO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgcmV0dXJuO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBpZiAoIXJvb3Quc2NoZW1hKSByZXR1cm47XFxcXG4gICAgYmFzZUlkID0gZ2V0RnVsbFBhdGgodGhpcy5fZ2V0SWQocm9vdC5zY2hlbWEpKTtcXFxcbiAgfVxcXFxuICByZXR1cm4gZ2V0SnNvblBvaW50ZXIuY2FsbCh0aGlzLCBwLCBiYXNlSWQsIHJvb3Quc2NoZW1hLCByb290KTtcXFxcbn1cXFxcblxcXFxuXFxcXG4vKiBAdGhpcyBBanYgKi9cXFxcbmZ1bmN0aW9uIHJlc29sdmVSZWN1cnNpdmUocm9vdCwgcmVmLCBwYXJzZWRSZWYpIHtcXFxcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xcXFxuICB2YXIgcmVzID0gcmVzb2x2ZVNjaGVtYS5jYWxsKHRoaXMsIHJvb3QsIHJlZik7XFxcXG4gIGlmIChyZXMpIHtcXFxcbiAgICB2YXIgc2NoZW1hID0gcmVzLnNjaGVtYTtcXFxcbiAgICB2YXIgYmFzZUlkID0gcmVzLmJhc2VJZDtcXFxcbiAgICByb290ID0gcmVzLnJvb3Q7XFxcXG4gICAgdmFyIGlkID0gdGhpcy5fZ2V0SWQoc2NoZW1hKTtcXFxcbiAgICBpZiAoaWQpIGJhc2VJZCA9IHJlc29sdmVVcmwoYmFzZUlkLCBpZCk7XFxcXG4gICAgcmV0dXJuIGdldEpzb25Qb2ludGVyLmNhbGwodGhpcywgcGFyc2VkUmVmLCBiYXNlSWQsIHNjaGVtYSwgcm9vdCk7XFxcXG4gIH1cXFxcbn1cXFxcblxcXFxuXFxcXG52YXIgUFJFVkVOVF9TQ09QRV9DSEFOR0UgPSB1dGlsLnRvSGFzaChbJ3Byb3BlcnRpZXMnLCAncGF0dGVyblByb3BlcnRpZXMnLCAnZW51bScsICdkZXBlbmRlbmNpZXMnLCAnZGVmaW5pdGlvbnMnXSk7XFxcXG4vKiBAdGhpcyBBanYgKi9cXFxcbmZ1bmN0aW9uIGdldEpzb25Qb2ludGVyKHBhcnNlZFJlZiwgYmFzZUlkLCBzY2hlbWEsIHJvb3QpIHtcXFxcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xcXFxuICBwYXJzZWRSZWYuaGFzaCA9IHBhcnNlZFJlZi5oYXNoIHx8ICcnO1xcXFxuICBpZiAocGFyc2VkUmVmLmhhc2guc2xpY2UoMCwyKSAhPSAnIy8nKSByZXR1cm47XFxcXG4gIHZhciBwYXJ0cyA9IHBhcnNlZFJlZi5oYXNoLnNwbGl0KCcvJyk7XFxcXG5cXFxcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBwYXJ0cy5sZW5ndGg7IGkrKykge1xcXFxuICAgIHZhciBwYXJ0ID0gcGFydHNbaV07XFxcXG4gICAgaWYgKHBhcnQpIHtcXFxcbiAgICAgIHBhcnQgPSB1dGlsLnVuZXNjYXBlRnJhZ21lbnQocGFydCk7XFxcXG4gICAgICBzY2hlbWEgPSBzY2hlbWFbcGFydF07XFxcXG4gICAgICBpZiAoc2NoZW1hID09PSB1bmRlZmluZWQpIGJyZWFrO1xcXFxuICAgICAgdmFyIGlkO1xcXFxuICAgICAgaWYgKCFQUkVWRU5UX1NDT1BFX0NIQU5HRVtwYXJ0XSkge1xcXFxuICAgICAgICBpZCA9IHRoaXMuX2dldElkKHNjaGVtYSk7XFxcXG4gICAgICAgIGlmIChpZCkgYmFzZUlkID0gcmVzb2x2ZVVybChiYXNlSWQsIGlkKTtcXFxcbiAgICAgICAgaWYgKHNjaGVtYS4kcmVmKSB7XFxcXG4gICAgICAgICAgdmFyICRyZWYgPSByZXNvbHZlVXJsKGJhc2VJZCwgc2NoZW1hLiRyZWYpO1xcXFxuICAgICAgICAgIHZhciByZXMgPSByZXNvbHZlU2NoZW1hLmNhbGwodGhpcywgcm9vdCwgJHJlZik7XFxcXG4gICAgICAgICAgaWYgKHJlcykge1xcXFxuICAgICAgICAgICAgc2NoZW1hID0gcmVzLnNjaGVtYTtcXFxcbiAgICAgICAgICAgIHJvb3QgPSByZXMucm9vdDtcXFxcbiAgICAgICAgICAgIGJhc2VJZCA9IHJlcy5iYXNlSWQ7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGlmIChzY2hlbWEgIT09IHVuZGVmaW5lZCAmJiBzY2hlbWEgIT09IHJvb3Quc2NoZW1hKVxcXFxuICAgIHJldHVybiB7IHNjaGVtYTogc2NoZW1hLCByb290OiByb290LCBiYXNlSWQ6IGJhc2VJZCB9O1xcXFxufVxcXFxuXFxcXG5cXFxcbnZhciBTSU1QTEVfSU5MSU5FRCA9IHV0aWwudG9IYXNoKFtcXFxcbiAgJ3R5cGUnLCAnZm9ybWF0JywgJ3BhdHRlcm4nLFxcXFxuICAnbWF4TGVuZ3RoJywgJ21pbkxlbmd0aCcsXFxcXG4gICdtYXhQcm9wZXJ0aWVzJywgJ21pblByb3BlcnRpZXMnLFxcXFxuICAnbWF4SXRlbXMnLCAnbWluSXRlbXMnLFxcXFxuICAnbWF4aW11bScsICdtaW5pbXVtJyxcXFxcbiAgJ3VuaXF1ZUl0ZW1zJywgJ211bHRpcGxlT2YnLFxcXFxuICAncmVxdWlyZWQnLCAnZW51bSdcXFxcbl0pO1xcXFxuZnVuY3Rpb24gaW5saW5lUmVmKHNjaGVtYSwgbGltaXQpIHtcXFxcbiAgaWYgKGxpbWl0ID09PSBmYWxzZSkgcmV0dXJuIGZhbHNlO1xcXFxuICBpZiAobGltaXQgPT09IHVuZGVmaW5lZCB8fCBsaW1pdCA9PT0gdHJ1ZSkgcmV0dXJuIGNoZWNrTm9SZWYoc2NoZW1hKTtcXFxcbiAgZWxzZSBpZiAobGltaXQpIHJldHVybiBjb3VudEtleXMoc2NoZW1hKSA8PSBsaW1pdDtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBjaGVja05vUmVmKHNjaGVtYSkge1xcXFxuICB2YXIgaXRlbTtcXFxcbiAgaWYgKEFycmF5LmlzQXJyYXkoc2NoZW1hKSkge1xcXFxuICAgIGZvciAodmFyIGk9MDsgaTxzY2hlbWEubGVuZ3RoOyBpKyspIHtcXFxcbiAgICAgIGl0ZW0gPSBzY2hlbWFbaV07XFxcXG4gICAgICBpZiAodHlwZW9mIGl0ZW0gPT0gJ29iamVjdCcgJiYgIWNoZWNrTm9SZWYoaXRlbSkpIHJldHVybiBmYWxzZTtcXFxcbiAgICB9XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgZm9yICh2YXIga2V5IGluIHNjaGVtYSkge1xcXFxuICAgICAgaWYgKGtleSA9PSAnJHJlZicpIHJldHVybiBmYWxzZTtcXFxcbiAgICAgIGl0ZW0gPSBzY2hlbWFba2V5XTtcXFxcbiAgICAgIGlmICh0eXBlb2YgaXRlbSA9PSAnb2JqZWN0JyAmJiAhY2hlY2tOb1JlZihpdGVtKSkgcmV0dXJuIGZhbHNlO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICByZXR1cm4gdHJ1ZTtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBjb3VudEtleXMoc2NoZW1hKSB7XFxcXG4gIHZhciBjb3VudCA9IDAsIGl0ZW07XFxcXG4gIGlmIChBcnJheS5pc0FycmF5KHNjaGVtYSkpIHtcXFxcbiAgICBmb3IgKHZhciBpPTA7IGk8c2NoZW1hLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgICBpdGVtID0gc2NoZW1hW2ldO1xcXFxuICAgICAgaWYgKHR5cGVvZiBpdGVtID09ICdvYmplY3QnKSBjb3VudCArPSBjb3VudEtleXMoaXRlbSk7XFxcXG4gICAgICBpZiAoY291bnQgPT0gSW5maW5pdHkpIHJldHVybiBJbmZpbml0eTtcXFxcbiAgICB9XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgZm9yICh2YXIga2V5IGluIHNjaGVtYSkge1xcXFxuICAgICAgaWYgKGtleSA9PSAnJHJlZicpIHJldHVybiBJbmZpbml0eTtcXFxcbiAgICAgIGlmIChTSU1QTEVfSU5MSU5FRFtrZXldKSB7XFxcXG4gICAgICAgIGNvdW50Kys7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBpdGVtID0gc2NoZW1hW2tleV07XFxcXG4gICAgICAgIGlmICh0eXBlb2YgaXRlbSA9PSAnb2JqZWN0JykgY291bnQgKz0gY291bnRLZXlzKGl0ZW0pICsgMTtcXFxcbiAgICAgICAgaWYgKGNvdW50ID09IEluZmluaXR5KSByZXR1cm4gSW5maW5pdHk7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIHJldHVybiBjb3VudDtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBnZXRGdWxsUGF0aChpZCwgbm9ybWFsaXplKSB7XFxcXG4gIGlmIChub3JtYWxpemUgIT09IGZhbHNlKSBpZCA9IG5vcm1hbGl6ZUlkKGlkKTtcXFxcbiAgdmFyIHAgPSB1cmwucGFyc2UoaWQsIGZhbHNlLCB0cnVlKTtcXFxcbiAgcmV0dXJuIF9nZXRGdWxsUGF0aChwKTtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBfZ2V0RnVsbFBhdGgocCkge1xcXFxuICB2YXIgcHJvdG9jb2xTZXBhcmF0b3IgPSBwLnByb3RvY29sIHx8IHAuaHJlZi5zbGljZSgwLDIpID09ICcvLycgPyAnLy8nIDogJyc7XFxcXG4gIHJldHVybiAocC5wcm90b2NvbHx8JycpICsgcHJvdG9jb2xTZXBhcmF0b3IgKyAocC5ob3N0fHwnJykgKyAocC5wYXRofHwnJykgICsgJyMnO1xcXFxufVxcXFxuXFxcXG5cXFxcbnZhciBUUkFJTElOR19TTEFTSF9IQVNIID0gLyNcXFxcXFxcXC8/JC87XFxcXG5mdW5jdGlvbiBub3JtYWxpemVJZChpZCkge1xcXFxuICByZXR1cm4gaWQgPyBpZC5yZXBsYWNlKFRSQUlMSU5HX1NMQVNIX0hBU0gsICcnKSA6ICcnO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIHJlc29sdmVVcmwoYmFzZUlkLCBpZCkge1xcXFxuICBpZCA9IG5vcm1hbGl6ZUlkKGlkKTtcXFxcbiAgcmV0dXJuIHVybC5yZXNvbHZlKGJhc2VJZCwgaWQpO1xcXFxufVxcXFxuXFxcXG5cXFxcbi8qIEB0aGlzIEFqdiAqL1xcXFxuZnVuY3Rpb24gcmVzb2x2ZUlkcyhzY2hlbWEpIHtcXFxcbiAgdmFyIHNjaGVtYUlkID0gbm9ybWFsaXplSWQodGhpcy5fZ2V0SWQoc2NoZW1hKSk7XFxcXG4gIHZhciBiYXNlSWRzID0geycnOiBzY2hlbWFJZH07XFxcXG4gIHZhciBmdWxsUGF0aHMgPSB7Jyc6IGdldEZ1bGxQYXRoKHNjaGVtYUlkLCBmYWxzZSl9O1xcXFxuICB2YXIgbG9jYWxSZWZzID0ge307XFxcXG4gIHZhciBzZWxmID0gdGhpcztcXFxcblxcXFxuICB0cmF2ZXJzZShzY2hlbWEsIHthbGxLZXlzOiB0cnVlfSwgZnVuY3Rpb24oc2NoLCBqc29uUHRyLCByb290U2NoZW1hLCBwYXJlbnRKc29uUHRyLCBwYXJlbnRLZXl3b3JkLCBwYXJlbnRTY2hlbWEsIGtleUluZGV4KSB7XFxcXG4gICAgaWYgKGpzb25QdHIgPT09ICcnKSByZXR1cm47XFxcXG4gICAgdmFyIGlkID0gc2VsZi5fZ2V0SWQoc2NoKTtcXFxcbiAgICB2YXIgYmFzZUlkID0gYmFzZUlkc1twYXJlbnRKc29uUHRyXTtcXFxcbiAgICB2YXIgZnVsbFBhdGggPSBmdWxsUGF0aHNbcGFyZW50SnNvblB0cl0gKyAnLycgKyBwYXJlbnRLZXl3b3JkO1xcXFxuICAgIGlmIChrZXlJbmRleCAhPT0gdW5kZWZpbmVkKVxcXFxuICAgICAgZnVsbFBhdGggKz0gJy8nICsgKHR5cGVvZiBrZXlJbmRleCA9PSAnbnVtYmVyJyA/IGtleUluZGV4IDogdXRpbC5lc2NhcGVGcmFnbWVudChrZXlJbmRleCkpO1xcXFxuXFxcXG4gICAgaWYgKHR5cGVvZiBpZCA9PSAnc3RyaW5nJykge1xcXFxuICAgICAgaWQgPSBiYXNlSWQgPSBub3JtYWxpemVJZChiYXNlSWQgPyB1cmwucmVzb2x2ZShiYXNlSWQsIGlkKSA6IGlkKTtcXFxcblxcXFxuICAgICAgdmFyIHJlZlZhbCA9IHNlbGYuX3JlZnNbaWRdO1xcXFxuICAgICAgaWYgKHR5cGVvZiByZWZWYWwgPT0gJ3N0cmluZycpIHJlZlZhbCA9IHNlbGYuX3JlZnNbcmVmVmFsXTtcXFxcbiAgICAgIGlmIChyZWZWYWwgJiYgcmVmVmFsLnNjaGVtYSkge1xcXFxuICAgICAgICBpZiAoIWVxdWFsKHNjaCwgcmVmVmFsLnNjaGVtYSkpXFxcXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpZCBcXFxcXFxcIicgKyBpZCArICdcXFxcXFxcIiByZXNvbHZlcyB0byBtb3JlIHRoYW4gb25lIHNjaGVtYScpO1xcXFxuICAgICAgfSBlbHNlIGlmIChpZCAhPSBub3JtYWxpemVJZChmdWxsUGF0aCkpIHtcXFxcbiAgICAgICAgaWYgKGlkWzBdID09ICcjJykge1xcXFxuICAgICAgICAgIGlmIChsb2NhbFJlZnNbaWRdICYmICFlcXVhbChzY2gsIGxvY2FsUmVmc1tpZF0pKVxcXFxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpZCBcXFxcXFxcIicgKyBpZCArICdcXFxcXFxcIiByZXNvbHZlcyB0byBtb3JlIHRoYW4gb25lIHNjaGVtYScpO1xcXFxuICAgICAgICAgIGxvY2FsUmVmc1tpZF0gPSBzY2g7XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgc2VsZi5fcmVmc1tpZF0gPSBmdWxsUGF0aDtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBiYXNlSWRzW2pzb25QdHJdID0gYmFzZUlkO1xcXFxuICAgIGZ1bGxQYXRoc1tqc29uUHRyXSA9IGZ1bGxQYXRoO1xcXFxuICB9KTtcXFxcblxcXFxuICByZXR1cm4gbG9jYWxSZWZzO1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5amIyMXdhV3hsTDNKbGMyOXNkbVV1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTloYW5ZdmJHbGlMMk52YlhCcGJHVXZjbVZ6YjJ4MlpTNXFjejloT1RjeElsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVkbUZ5SUhWeWJDQTlJSEpsY1hWcGNtVW9KM1Z5YkNjcFhHNGdJQ3dnWlhGMVlXd2dQU0J5WlhGMWFYSmxLQ2N1TDJWeGRXRnNKeWxjYmlBZ0xDQjFkR2xzSUQwZ2NtVnhkV2x5WlNnbkxpOTFkR2xzSnlsY2JpQWdMQ0JUWTJobGJXRlBZbXBsWTNRZ1BTQnlaWEYxYVhKbEtDY3VMM05qYUdWdFlWOXZZbW9uS1Z4dUlDQXNJSFJ5WVhabGNuTmxJRDBnY21WeGRXbHlaU2duYW5OdmJpMXpZMmhsYldFdGRISmhkbVZ5YzJVbktUdGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0J5WlhOdmJIWmxPMXh1WEc1eVpYTnZiSFpsTG01dmNtMWhiR2w2WlVsa0lEMGdibTl5YldGc2FYcGxTV1E3WEc1eVpYTnZiSFpsTG1aMWJHeFFZWFJvSUQwZ1oyVjBSblZzYkZCaGRHZzdYRzV5WlhOdmJIWmxMblZ5YkNBOUlISmxjMjlzZG1WVmNtdzdYRzV5WlhOdmJIWmxMbWxrY3lBOUlISmxjMjlzZG1WSlpITTdYRzV5WlhOdmJIWmxMbWx1YkdsdVpWSmxaaUE5SUdsdWJHbHVaVkpsWmp0Y2JuSmxjMjlzZG1VdWMyTm9aVzFoSUQwZ2NtVnpiMngyWlZOamFHVnRZVHRjYmx4dUx5b3FYRzRnS2lCYmNtVnpiMngyWlNCaGJtUWdZMjl0Y0dsc1pTQjBhR1VnY21WbVpYSmxibU5sY3lBb0pISmxaaWxkWEc0Z0tpQkFkR2hwY3lBZ0lFRnFkbHh1SUNvZ1FIQmhjbUZ0SUNCN1JuVnVZM1JwYjI1OUlHTnZiWEJwYkdVZ2NtVm1aWEpsYm1ObElIUnZJSE5qYUdWdFlTQmpiMjF3YVd4aGRHbHZiaUJtZFc1amFYUnZiaUFvYkc5allXeERiMjF3YVd4bEtWeHVJQ29nUUhCaGNtRnRJQ0I3VDJKcVpXTjBmU0J5YjI5MElHOWlhbVZqZENCM2FYUm9JR2x1Wm05eWJXRjBhVzl1SUdGaWIzVjBJSFJvWlNCeWIyOTBJSE5qYUdWdFlTQm1iM0lnZEdobElHTjFjbkpsYm5RZ2MyTm9aVzFoWEc0Z0tpQkFjR0Z5WVcwZ0lIdFRkSEpwYm1kOUlISmxaaUJ5WldabGNtVnVZMlVnZEc4Z2NtVnpiMngyWlZ4dUlDb2dRSEpsZEhWeWJpQjdUMkpxWldOMGZFWjFibU4wYVc5dWZTQnpZMmhsYldFZ2IySnFaV04wSUNocFppQjBhR1VnYzJOb1pXMWhJR05oYmlCaVpTQnBibXhwYm1Wa0tTQnZjaUIyWVd4cFpHRjBhVzl1SUdaMWJtTjBhVzl1WEc0Z0tpOWNibVoxYm1OMGFXOXVJSEpsYzI5c2RtVW9ZMjl0Y0dsc1pTd2djbTl2ZEN3Z2NtVm1LU0I3WEc0Z0lDOHFJR3B6YUdsdWRDQjJZV3hwWkhSb2FYTTZJSFJ5ZFdVZ0tpOWNiaUFnZG1GeUlISmxabFpoYkNBOUlIUm9hWE11WDNKbFpuTmJjbVZtWFR0Y2JpQWdhV1lnS0hSNWNHVnZaaUJ5WldaV1lXd2dQVDBnSjNOMGNtbHVaeWNwSUh0Y2JpQWdJQ0JwWmlBb2RHaHBjeTVmY21WbWMxdHlaV1pXWVd4ZEtTQnlaV1pXWVd3Z1BTQjBhR2x6TGw5eVpXWnpXM0psWmxaaGJGMDdYRzRnSUNBZ1pXeHpaU0J5WlhSMWNtNGdjbVZ6YjJ4MlpTNWpZV3hzS0hSb2FYTXNJR052YlhCcGJHVXNJSEp2YjNRc0lISmxabFpoYkNrN1hHNGdJSDFjYmx4dUlDQnlaV1pXWVd3Z1BTQnlaV1pXWVd3Z2ZId2dkR2hwY3k1ZmMyTm9aVzFoYzF0eVpXWmRPMXh1SUNCcFppQW9jbVZtVm1Gc0lHbHVjM1JoYm1ObGIyWWdVMk5vWlcxaFQySnFaV04wS1NCN1hHNGdJQ0FnY21WMGRYSnVJR2x1YkdsdVpWSmxaaWh5WldaV1lXd3VjMk5vWlcxaExDQjBhR2x6TGw5dmNIUnpMbWx1YkdsdVpWSmxabk1wWEc0Z0lDQWdJQ0FnSUNBZ0lDQS9JSEpsWmxaaGJDNXpZMmhsYldGY2JpQWdJQ0FnSUNBZ0lDQWdJRG9nY21WbVZtRnNMblpoYkdsa1lYUmxJSHg4SUhSb2FYTXVYMk52YlhCcGJHVW9jbVZtVm1Gc0tUdGNiaUFnZlZ4dVhHNGdJSFpoY2lCeVpYTWdQU0J5WlhOdmJIWmxVMk5vWlcxaExtTmhiR3dvZEdocGN5d2djbTl2ZEN3Z2NtVm1LVHRjYmlBZ2RtRnlJSE5qYUdWdFlTd2dkaXdnWW1GelpVbGtPMXh1SUNCcFppQW9jbVZ6S1NCN1hHNGdJQ0FnYzJOb1pXMWhJRDBnY21WekxuTmphR1Z0WVR0Y2JpQWdJQ0J5YjI5MElEMGdjbVZ6TG5KdmIzUTdYRzRnSUNBZ1ltRnpaVWxrSUQwZ2NtVnpMbUpoYzJWSlpEdGNiaUFnZlZ4dVhHNGdJR2xtSUNoelkyaGxiV0VnYVc1emRHRnVZMlZ2WmlCVFkyaGxiV0ZQWW1wbFkzUXBJSHRjYmlBZ0lDQjJJRDBnYzJOb1pXMWhMblpoYkdsa1lYUmxJSHg4SUdOdmJYQnBiR1V1WTJGc2JDaDBhR2x6TENCelkyaGxiV0V1YzJOb1pXMWhMQ0J5YjI5MExDQjFibVJsWm1sdVpXUXNJR0poYzJWSlpDazdYRzRnSUgwZ1pXeHpaU0JwWmlBb2MyTm9aVzFoSUNFOVBTQjFibVJsWm1sdVpXUXBJSHRjYmlBZ0lDQjJJRDBnYVc1c2FXNWxVbVZtS0hOamFHVnRZU3dnZEdocGN5NWZiM0IwY3k1cGJteHBibVZTWldaektWeHVJQ0FnSUNBZ0lDQS9JSE5qYUdWdFlWeHVJQ0FnSUNBZ0lDQTZJR052YlhCcGJHVXVZMkZzYkNoMGFHbHpMQ0J6WTJobGJXRXNJSEp2YjNRc0lIVnVaR1ZtYVc1bFpDd2dZbUZ6WlVsa0tUdGNiaUFnZlZ4dVhHNGdJSEpsZEhWeWJpQjJPMXh1ZlZ4dVhHNWNiaThxS2x4dUlDb2dVbVZ6YjJ4MlpTQnpZMmhsYldFc0lHbDBjeUJ5YjI5MElHRnVaQ0JpWVhObFNXUmNiaUFxSUVCMGFHbHpJRUZxZGx4dUlDb2dRSEJoY21GdElDQjdUMkpxWldOMGZTQnliMjkwSUhKdmIzUWdiMkpxWldOMElIZHBkR2dnY0hKdmNHVnlkR2xsY3lCelkyaGxiV0VzSUhKbFpsWmhiQ3dnY21WbWMxeHVJQ29nUUhCaGNtRnRJQ0I3VTNSeWFXNW5mU0J5WldZZ0lISmxabVZ5Wlc1alpTQjBieUJ5WlhOdmJIWmxYRzRnS2lCQWNtVjBkWEp1SUh0UFltcGxZM1I5SUc5aWFtVmpkQ0IzYVhSb0lIQnliM0JsY25ScFpYTWdjMk5vWlcxaExDQnliMjkwTENCaVlYTmxTV1JjYmlBcUwxeHVablZ1WTNScGIyNGdjbVZ6YjJ4MlpWTmphR1Z0WVNoeWIyOTBMQ0J5WldZcElIdGNiaUFnTHlvZ2FuTm9hVzUwSUhaaGJHbGtkR2hwY3pvZ2RISjFaU0FxTDF4dUlDQjJZWElnY0NBOUlIVnliQzV3WVhKelpTaHlaV1lzSUdaaGJITmxMQ0IwY25WbEtWeHVJQ0FnSUN3Z2NtVm1VR0YwYUNBOUlGOW5aWFJHZFd4c1VHRjBhQ2h3S1Z4dUlDQWdJQ3dnWW1GelpVbGtJRDBnWjJWMFJuVnNiRkJoZEdnb2RHaHBjeTVmWjJWMFNXUW9jbTl2ZEM1elkyaGxiV0VwS1R0Y2JpQWdhV1lnS0hKbFpsQmhkR2dnSVQwOUlHSmhjMlZKWkNrZ2UxeHVJQ0FnSUhaaGNpQnBaQ0E5SUc1dmNtMWhiR2w2WlVsa0tISmxabEJoZEdncE8xeHVJQ0FnSUhaaGNpQnlaV1pXWVd3Z1BTQjBhR2x6TGw5eVpXWnpXMmxrWFR0Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUhKbFpsWmhiQ0E5UFNBbmMzUnlhVzVuSnlrZ2UxeHVJQ0FnSUNBZ2NtVjBkWEp1SUhKbGMyOXNkbVZTWldOMWNuTnBkbVV1WTJGc2JDaDBhR2x6TENCeWIyOTBMQ0J5WldaV1lXd3NJSEFwTzF4dUlDQWdJSDBnWld4elpTQnBaaUFvY21WbVZtRnNJR2x1YzNSaGJtTmxiMllnVTJOb1pXMWhUMkpxWldOMEtTQjdYRzRnSUNBZ0lDQnBaaUFvSVhKbFpsWmhiQzUyWVd4cFpHRjBaU2tnZEdocGN5NWZZMjl0Y0dsc1pTaHlaV1pXWVd3cE8xeHVJQ0FnSUNBZ2NtOXZkQ0E5SUhKbFpsWmhiRHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2NtVm1WbUZzSUQwZ2RHaHBjeTVmYzJOb1pXMWhjMXRwWkYwN1hHNGdJQ0FnSUNCcFppQW9jbVZtVm1Gc0lHbHVjM1JoYm1ObGIyWWdVMk5vWlcxaFQySnFaV04wS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doY21WbVZtRnNMblpoYkdsa1lYUmxLU0IwYUdsekxsOWpiMjF3YVd4bEtISmxabFpoYkNrN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hwWkNBOVBTQnViM0p0WVd4cGVtVkpaQ2h5WldZcEtWeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjdJSE5qYUdWdFlUb2djbVZtVm1Gc0xDQnliMjkwT2lCeWIyOTBMQ0JpWVhObFNXUTZJR0poYzJWSlpDQjlPMXh1SUNBZ0lDQWdJQ0J5YjI5MElEMGdjbVZtVm1Gc08xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1TzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQnBaaUFvSVhKdmIzUXVjMk5vWlcxaEtTQnlaWFIxY200N1hHNGdJQ0FnWW1GelpVbGtJRDBnWjJWMFJuVnNiRkJoZEdnb2RHaHBjeTVmWjJWMFNXUW9jbTl2ZEM1elkyaGxiV0VwS1R0Y2JpQWdmVnh1SUNCeVpYUjFjbTRnWjJWMFNuTnZibEJ2YVc1MFpYSXVZMkZzYkNoMGFHbHpMQ0J3TENCaVlYTmxTV1FzSUhKdmIzUXVjMk5vWlcxaExDQnliMjkwS1R0Y2JuMWNibHh1WEc0dktpQkFkR2hwY3lCQmFuWWdLaTljYm1aMWJtTjBhVzl1SUhKbGMyOXNkbVZTWldOMWNuTnBkbVVvY205dmRDd2djbVZtTENCd1lYSnpaV1JTWldZcElIdGNiaUFnTHlvZ2FuTm9hVzUwSUhaaGJHbGtkR2hwY3pvZ2RISjFaU0FxTDF4dUlDQjJZWElnY21WeklEMGdjbVZ6YjJ4MlpWTmphR1Z0WVM1allXeHNLSFJvYVhNc0lISnZiM1FzSUhKbFppazdYRzRnSUdsbUlDaHlaWE1wSUh0Y2JpQWdJQ0IyWVhJZ2MyTm9aVzFoSUQwZ2NtVnpMbk5qYUdWdFlUdGNiaUFnSUNCMllYSWdZbUZ6WlVsa0lEMGdjbVZ6TG1KaGMyVkpaRHRjYmlBZ0lDQnliMjkwSUQwZ2NtVnpMbkp2YjNRN1hHNGdJQ0FnZG1GeUlHbGtJRDBnZEdocGN5NWZaMlYwU1dRb2MyTm9aVzFoS1R0Y2JpQWdJQ0JwWmlBb2FXUXBJR0poYzJWSlpDQTlJSEpsYzI5c2RtVlZjbXdvWW1GelpVbGtMQ0JwWkNrN1hHNGdJQ0FnY21WMGRYSnVJR2RsZEVwemIyNVFiMmx1ZEdWeUxtTmhiR3dvZEdocGN5d2djR0Z5YzJWa1VtVm1MQ0JpWVhObFNXUXNJSE5qYUdWdFlTd2djbTl2ZENrN1hHNGdJSDFjYm4xY2JseHVYRzUyWVhJZ1VGSkZWa1ZPVkY5VFEwOVFSVjlEU0VGT1IwVWdQU0IxZEdsc0xuUnZTR0Z6YUNoYkozQnliM0JsY25ScFpYTW5MQ0FuY0dGMGRHVnlibEJ5YjNCbGNuUnBaWE1uTENBblpXNTFiU2NzSUNka1pYQmxibVJsYm1OcFpYTW5MQ0FuWkdWbWFXNXBkR2x2Ym5NblhTazdYRzR2S2lCQWRHaHBjeUJCYW5ZZ0tpOWNibVoxYm1OMGFXOXVJR2RsZEVwemIyNVFiMmx1ZEdWeUtIQmhjbk5sWkZKbFppd2dZbUZ6WlVsa0xDQnpZMmhsYldFc0lISnZiM1FwSUh0Y2JpQWdMeW9nYW5Ob2FXNTBJSFpoYkdsa2RHaHBjem9nZEhKMVpTQXFMMXh1SUNCd1lYSnpaV1JTWldZdWFHRnphQ0E5SUhCaGNuTmxaRkpsWmk1b1lYTm9JSHg4SUNjbk8xeHVJQ0JwWmlBb2NHRnljMlZrVW1WbUxtaGhjMmd1YzJ4cFkyVW9NQ3d5S1NBaFBTQW5JeThuS1NCeVpYUjFjbTQ3WEc0Z0lIWmhjaUJ3WVhKMGN5QTlJSEJoY25ObFpGSmxaaTVvWVhOb0xuTndiR2wwS0Njdkp5azdYRzVjYmlBZ1ptOXlJQ2gyWVhJZ2FTQTlJREU3SUdrZ1BDQndZWEowY3k1c1pXNW5kR2c3SUdrckt5a2dlMXh1SUNBZ0lIWmhjaUJ3WVhKMElEMGdjR0Z5ZEhOYmFWMDdYRzRnSUNBZ2FXWWdLSEJoY25RcElIdGNiaUFnSUNBZ0lIQmhjblFnUFNCMWRHbHNMblZ1WlhOallYQmxSbkpoWjIxbGJuUW9jR0Z5ZENrN1hHNGdJQ0FnSUNCelkyaGxiV0VnUFNCelkyaGxiV0ZiY0dGeWRGMDdYRzRnSUNBZ0lDQnBaaUFvYzJOb1pXMWhJRDA5UFNCMWJtUmxabWx1WldRcElHSnlaV0ZyTzF4dUlDQWdJQ0FnZG1GeUlHbGtPMXh1SUNBZ0lDQWdhV1lnS0NGUVVrVldSVTVVWDFORFQxQkZYME5JUVU1SFJWdHdZWEowWFNrZ2UxeHVJQ0FnSUNBZ0lDQnBaQ0E5SUhSb2FYTXVYMmRsZEVsa0tITmphR1Z0WVNrN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hwWkNrZ1ltRnpaVWxrSUQwZ2NtVnpiMngyWlZWeWJDaGlZWE5sU1dRc0lHbGtLVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tITmphR1Z0WVM0a2NtVm1LU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RtRnlJQ1J5WldZZ1BTQnlaWE52YkhabFZYSnNLR0poYzJWSlpDd2djMk5vWlcxaExpUnlaV1lwTzF4dUlDQWdJQ0FnSUNBZ0lIWmhjaUJ5WlhNZ1BTQnlaWE52YkhabFUyTm9aVzFoTG1OaGJHd29kR2hwY3l3Z2NtOXZkQ3dnSkhKbFppazdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tISmxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjMk5vWlcxaElEMGdjbVZ6TG5OamFHVnRZVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISnZiM1FnUFNCeVpYTXVjbTl2ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0poYzJWSlpDQTlJSEpsY3k1aVlYTmxTV1E3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lHbG1JQ2h6WTJobGJXRWdJVDA5SUhWdVpHVm1hVzVsWkNBbUppQnpZMmhsYldFZ0lUMDlJSEp2YjNRdWMyTm9aVzFoS1Z4dUlDQWdJSEpsZEhWeWJpQjdJSE5qYUdWdFlUb2djMk5vWlcxaExDQnliMjkwT2lCeWIyOTBMQ0JpWVhObFNXUTZJR0poYzJWSlpDQjlPMXh1ZlZ4dVhHNWNiblpoY2lCVFNVMVFURVZmU1U1TVNVNUZSQ0E5SUhWMGFXd3VkRzlJWVhOb0tGdGNiaUFnSjNSNWNHVW5MQ0FuWm05eWJXRjBKeXdnSjNCaGRIUmxjbTRuTEZ4dUlDQW5iV0Y0VEdWdVozUm9KeXdnSjIxcGJreGxibWQwYUNjc1hHNGdJQ2R0WVhoUWNtOXdaWEowYVdWekp5d2dKMjFwYmxCeWIzQmxjblJwWlhNbkxGeHVJQ0FuYldGNFNYUmxiWE1uTENBbmJXbHVTWFJsYlhNbkxGeHVJQ0FuYldGNGFXMTFiU2NzSUNkdGFXNXBiWFZ0Snl4Y2JpQWdKM1Z1YVhGMVpVbDBaVzF6Snl3Z0oyMTFiSFJwY0d4bFQyWW5MRnh1SUNBbmNtVnhkV2x5WldRbkxDQW5aVzUxYlNkY2JsMHBPMXh1Wm5WdVkzUnBiMjRnYVc1c2FXNWxVbVZtS0hOamFHVnRZU3dnYkdsdGFYUXBJSHRjYmlBZ2FXWWdLR3hwYldsMElEMDlQU0JtWVd4elpTa2djbVYwZFhKdUlHWmhiSE5sTzF4dUlDQnBaaUFvYkdsdGFYUWdQVDA5SUhWdVpHVm1hVzVsWkNCOGZDQnNhVzFwZENBOVBUMGdkSEoxWlNrZ2NtVjBkWEp1SUdOb1pXTnJUbTlTWldZb2MyTm9aVzFoS1R0Y2JpQWdaV3h6WlNCcFppQW9iR2x0YVhRcElISmxkSFZ5YmlCamIzVnVkRXRsZVhNb2MyTm9aVzFoS1NBOFBTQnNhVzFwZER0Y2JuMWNibHh1WEc1bWRXNWpkR2x2YmlCamFHVmphMDV2VW1WbUtITmphR1Z0WVNrZ2UxeHVJQ0IyWVhJZ2FYUmxiVHRjYmlBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb2MyTm9aVzFoS1NrZ2UxeHVJQ0FnSUdadmNpQW9kbUZ5SUdrOU1Ec2dhVHh6WTJobGJXRXViR1Z1WjNSb095QnBLeXNwSUh0Y2JpQWdJQ0FnSUdsMFpXMGdQU0J6WTJobGJXRmJhVjA3WEc0Z0lDQWdJQ0JwWmlBb2RIbHdaVzltSUdsMFpXMGdQVDBnSjI5aWFtVmpkQ2NnSmlZZ0lXTm9aV05yVG05U1pXWW9hWFJsYlNrcElISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQjlYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdabTl5SUNoMllYSWdhMlY1SUdsdUlITmphR1Z0WVNrZ2UxeHVJQ0FnSUNBZ2FXWWdLR3RsZVNBOVBTQW5KSEpsWmljcElISmxkSFZ5YmlCbVlXeHpaVHRjYmlBZ0lDQWdJR2wwWlcwZ1BTQnpZMmhsYldGYmEyVjVYVHRjYmlBZ0lDQWdJR2xtSUNoMGVYQmxiMllnYVhSbGJTQTlQU0FuYjJKcVpXTjBKeUFtSmlBaFkyaGxZMnRPYjFKbFppaHBkR1Z0S1NrZ2NtVjBkWEp1SUdaaGJITmxPMXh1SUNBZ0lIMWNiaUFnZlZ4dUlDQnlaWFIxY200Z2RISjFaVHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJqYjNWdWRFdGxlWE1vYzJOb1pXMWhLU0I3WEc0Z0lIWmhjaUJqYjNWdWRDQTlJREFzSUdsMFpXMDdYRzRnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0hOamFHVnRZU2twSUh0Y2JpQWdJQ0JtYjNJZ0tIWmhjaUJwUFRBN0lHazhjMk5vWlcxaExteGxibWQwYURzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0JwZEdWdElEMGdjMk5vWlcxaFcybGRPMXh1SUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJwZEdWdElEMDlJQ2R2WW1wbFkzUW5LU0JqYjNWdWRDQXJQU0JqYjNWdWRFdGxlWE1vYVhSbGJTazdYRzRnSUNBZ0lDQnBaaUFvWTI5MWJuUWdQVDBnU1c1bWFXNXBkSGtwSUhKbGRIVnliaUJKYm1acGJtbDBlVHRjYmlBZ0lDQjlYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdabTl5SUNoMllYSWdhMlY1SUdsdUlITmphR1Z0WVNrZ2UxeHVJQ0FnSUNBZ2FXWWdLR3RsZVNBOVBTQW5KSEpsWmljcElISmxkSFZ5YmlCSmJtWnBibWwwZVR0Y2JpQWdJQ0FnSUdsbUlDaFRTVTFRVEVWZlNVNU1TVTVGUkZ0clpYbGRLU0I3WEc0Z0lDQWdJQ0FnSUdOdmRXNTBLeXM3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0JwZEdWdElEMGdjMk5vWlcxaFcydGxlVjA3WEc0Z0lDQWdJQ0FnSUdsbUlDaDBlWEJsYjJZZ2FYUmxiU0E5UFNBbmIySnFaV04wSnlrZ1kyOTFiblFnS3owZ1kyOTFiblJMWlhsektHbDBaVzBwSUNzZ01UdGNiaUFnSUNBZ0lDQWdhV1lnS0dOdmRXNTBJRDA5SUVsdVptbHVhWFI1S1NCeVpYUjFjbTRnU1c1bWFXNXBkSGs3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNCOVhHNGdJSEpsZEhWeWJpQmpiM1Z1ZER0Y2JuMWNibHh1WEc1bWRXNWpkR2x2YmlCblpYUkdkV3hzVUdGMGFDaHBaQ3dnYm05eWJXRnNhWHBsS1NCN1hHNGdJR2xtSUNodWIzSnRZV3hwZW1VZ0lUMDlJR1poYkhObEtTQnBaQ0E5SUc1dmNtMWhiR2w2WlVsa0tHbGtLVHRjYmlBZ2RtRnlJSEFnUFNCMWNtd3VjR0Z5YzJVb2FXUXNJR1poYkhObExDQjBjblZsS1R0Y2JpQWdjbVYwZFhKdUlGOW5aWFJHZFd4c1VHRjBhQ2h3S1R0Y2JuMWNibHh1WEc1bWRXNWpkR2x2YmlCZloyVjBSblZzYkZCaGRHZ29jQ2tnZTF4dUlDQjJZWElnY0hKdmRHOWpiMnhUWlhCaGNtRjBiM0lnUFNCd0xuQnliM1J2WTI5c0lIeDhJSEF1YUhKbFppNXpiR2xqWlNnd0xESXBJRDA5SUNjdkx5Y2dQeUFuTHk4bklEb2dKeWM3WEc0Z0lISmxkSFZ5YmlBb2NDNXdjbTkwYjJOdmJIeDhKeWNwSUNzZ2NISnZkRzlqYjJ4VFpYQmhjbUYwYjNJZ0t5QW9jQzVvYjNOMGZId25KeWtnS3lBb2NDNXdZWFJvZkh3bkp5a2dJQ3NnSnlNbk8xeHVmVnh1WEc1Y2JuWmhjaUJVVWtGSlRFbE9SMTlUVEVGVFNGOUlRVk5JSUQwZ0x5TmNYQzgvSkM4N1hHNW1kVzVqZEdsdmJpQnViM0p0WVd4cGVtVkpaQ2hwWkNrZ2UxeHVJQ0J5WlhSMWNtNGdhV1FnUHlCcFpDNXlaWEJzWVdObEtGUlNRVWxNU1U1SFgxTk1RVk5JWDBoQlUwZ3NJQ2NuS1NBNklDY25PMXh1ZlZ4dVhHNWNibVoxYm1OMGFXOXVJSEpsYzI5c2RtVlZjbXdvWW1GelpVbGtMQ0JwWkNrZ2UxeHVJQ0JwWkNBOUlHNXZjbTFoYkdsNlpVbGtLR2xrS1R0Y2JpQWdjbVYwZFhKdUlIVnliQzV5WlhOdmJIWmxLR0poYzJWSlpDd2dhV1FwTzF4dWZWeHVYRzVjYmk4cUlFQjBhR2x6SUVGcWRpQXFMMXh1Wm5WdVkzUnBiMjRnY21WemIyeDJaVWxrY3loelkyaGxiV0VwSUh0Y2JpQWdkbUZ5SUhOamFHVnRZVWxrSUQwZ2JtOXliV0ZzYVhwbFNXUW9kR2hwY3k1ZloyVjBTV1FvYzJOb1pXMWhLU2s3WEc0Z0lIWmhjaUJpWVhObFNXUnpJRDBnZXljbk9pQnpZMmhsYldGSlpIMDdYRzRnSUhaaGNpQm1kV3hzVUdGMGFITWdQU0I3SnljNklHZGxkRVoxYkd4UVlYUm9LSE5qYUdWdFlVbGtMQ0JtWVd4elpTbDlPMXh1SUNCMllYSWdiRzlqWVd4U1pXWnpJRDBnZTMwN1hHNGdJSFpoY2lCelpXeG1JRDBnZEdocGN6dGNibHh1SUNCMGNtRjJaWEp6WlNoelkyaGxiV0VzSUh0aGJHeExaWGx6T2lCMGNuVmxmU3dnWm5WdVkzUnBiMjRvYzJOb0xDQnFjMjl1VUhSeUxDQnliMjkwVTJOb1pXMWhMQ0J3WVhKbGJuUktjMjl1VUhSeUxDQndZWEpsYm5STFpYbDNiM0prTENCd1lYSmxiblJUWTJobGJXRXNJR3RsZVVsdVpHVjRLU0I3WEc0Z0lDQWdhV1lnS0dwemIyNVFkSElnUFQwOUlDY25LU0J5WlhSMWNtNDdYRzRnSUNBZ2RtRnlJR2xrSUQwZ2MyVnNaaTVmWjJWMFNXUW9jMk5vS1R0Y2JpQWdJQ0IyWVhJZ1ltRnpaVWxrSUQwZ1ltRnpaVWxrYzF0d1lYSmxiblJLYzI5dVVIUnlYVHRjYmlBZ0lDQjJZWElnWm5Wc2JGQmhkR2dnUFNCbWRXeHNVR0YwYUhOYmNHRnlaVzUwU25OdmJsQjBjbDBnS3lBbkx5Y2dLeUJ3WVhKbGJuUkxaWGwzYjNKa08xeHVJQ0FnSUdsbUlDaHJaWGxKYm1SbGVDQWhQVDBnZFc1a1pXWnBibVZrS1Z4dUlDQWdJQ0FnWm5Wc2JGQmhkR2dnS3owZ0p5OG5JQ3NnS0hSNWNHVnZaaUJyWlhsSmJtUmxlQ0E5UFNBbmJuVnRZbVZ5SnlBL0lHdGxlVWx1WkdWNElEb2dkWFJwYkM1bGMyTmhjR1ZHY21GbmJXVnVkQ2hyWlhsSmJtUmxlQ2twTzF4dVhHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCcFpDQTlQU0FuYzNSeWFXNW5KeWtnZTF4dUlDQWdJQ0FnYVdRZ1BTQmlZWE5sU1dRZ1BTQnViM0p0WVd4cGVtVkpaQ2hpWVhObFNXUWdQeUIxY213dWNtVnpiMngyWlNoaVlYTmxTV1FzSUdsa0tTQTZJR2xrS1R0Y2JseHVJQ0FnSUNBZ2RtRnlJSEpsWmxaaGJDQTlJSE5sYkdZdVgzSmxabk5iYVdSZE8xeHVJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQnlaV1pXWVd3Z1BUMGdKM04wY21sdVp5Y3BJSEpsWmxaaGJDQTlJSE5sYkdZdVgzSmxabk5iY21WbVZtRnNYVHRjYmlBZ0lDQWdJR2xtSUNoeVpXWldZV3dnSmlZZ2NtVm1WbUZzTG5OamFHVnRZU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9JV1Z4ZFdGc0tITmphQ3dnY21WbVZtRnNMbk5qYUdWdFlTa3BYRzRnSUNBZ0lDQWdJQ0FnZEdoeWIzY2dibVYzSUVWeWNtOXlLQ2RwWkNCY0lpY2dLeUJwWkNBcklDZGNJaUJ5WlhOdmJIWmxjeUIwYnlCdGIzSmxJSFJvWVc0Z2IyNWxJSE5qYUdWdFlTY3BPMXh1SUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hwWkNBaFBTQnViM0p0WVd4cGVtVkpaQ2htZFd4c1VHRjBhQ2twSUh0Y2JpQWdJQ0FnSUNBZ2FXWWdLR2xrV3pCZElEMDlJQ2NqSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJR2xtSUNoc2IyTmhiRkpsWm5OYmFXUmRJQ1ltSUNGbGNYVmhiQ2h6WTJnc0lHeHZZMkZzVW1WbWMxdHBaRjBwS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDZHBaQ0JjSWljZ0t5QnBaQ0FySUNkY0lpQnlaWE52YkhabGN5QjBieUJ0YjNKbElIUm9ZVzRnYjI1bElITmphR1Z0WVNjcE8xeHVJQ0FnSUNBZ0lDQWdJR3h2WTJGc1VtVm1jMXRwWkYwZ1BTQnpZMmc3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ2MyVnNaaTVmY21WbWMxdHBaRjBnUFNCbWRXeHNVR0YwYUR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0JpWVhObFNXUnpXMnB6YjI1UWRISmRJRDBnWW1GelpVbGtPMXh1SUNBZ0lHWjFiR3hRWVhSb2MxdHFjMjl1VUhSeVhTQTlJR1oxYkd4UVlYUm9PMXh1SUNCOUtUdGNibHh1SUNCeVpYUjFjbTRnYkc5allXeFNaV1p6TzF4dWZWeHVJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3Jlc29sdmUuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvcnVsZXMuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9ydWxlcy5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxudmFyIHJ1bGVNb2R1bGVzID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9fcnVsZXMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvX3J1bGVzLmpzXFxcXFxcXCIpXFxcXG4gICwgdG9IYXNoID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3V0aWwuanNcXFxcXFxcIikudG9IYXNoO1xcXFxuXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJ1bGVzKCkge1xcXFxuICB2YXIgUlVMRVMgPSBbXFxcXG4gICAgeyB0eXBlOiAnbnVtYmVyJyxcXFxcbiAgICAgIHJ1bGVzOiBbIHsgJ21heGltdW0nOiBbJ2V4Y2x1c2l2ZU1heGltdW0nXSB9LFxcXFxuICAgICAgICAgICAgICAgeyAnbWluaW11bSc6IFsnZXhjbHVzaXZlTWluaW11bSddIH0sICdtdWx0aXBsZU9mJywgJ2Zvcm1hdCddIH0sXFxcXG4gICAgeyB0eXBlOiAnc3RyaW5nJyxcXFxcbiAgICAgIHJ1bGVzOiBbICdtYXhMZW5ndGgnLCAnbWluTGVuZ3RoJywgJ3BhdHRlcm4nLCAnZm9ybWF0JyBdIH0sXFxcXG4gICAgeyB0eXBlOiAnYXJyYXknLFxcXFxuICAgICAgcnVsZXM6IFsgJ21heEl0ZW1zJywgJ21pbkl0ZW1zJywgJ3VuaXF1ZUl0ZW1zJywgJ2NvbnRhaW5zJywgJ2l0ZW1zJyBdIH0sXFxcXG4gICAgeyB0eXBlOiAnb2JqZWN0JyxcXFxcbiAgICAgIHJ1bGVzOiBbICdtYXhQcm9wZXJ0aWVzJywgJ21pblByb3BlcnRpZXMnLCAncmVxdWlyZWQnLCAnZGVwZW5kZW5jaWVzJywgJ3Byb3BlcnR5TmFtZXMnLFxcXFxuICAgICAgICAgICAgICAgeyAncHJvcGVydGllcyc6IFsnYWRkaXRpb25hbFByb3BlcnRpZXMnLCAncGF0dGVyblByb3BlcnRpZXMnXSB9IF0gfSxcXFxcbiAgICB7IHJ1bGVzOiBbICckcmVmJywgJ2NvbnN0JywgJ2VudW0nLCAnbm90JywgJ2FueU9mJywgJ29uZU9mJywgJ2FsbE9mJyBdIH1cXFxcbiAgXTtcXFxcblxcXFxuICB2YXIgQUxMID0gWyAndHlwZScgXTtcXFxcbiAgdmFyIEtFWVdPUkRTID0gW1xcXFxuICAgICdhZGRpdGlvbmFsSXRlbXMnLCAnJHNjaGVtYScsICdpZCcsICd0aXRsZScsXFxcXG4gICAgJ2Rlc2NyaXB0aW9uJywgJ2RlZmF1bHQnLCAnZGVmaW5pdGlvbnMnXFxcXG4gIF07XFxcXG4gIHZhciBUWVBFUyA9IFsgJ251bWJlcicsICdpbnRlZ2VyJywgJ3N0cmluZycsICdhcnJheScsICdvYmplY3QnLCAnYm9vbGVhbicsICdudWxsJyBdO1xcXFxuICBSVUxFUy5hbGwgPSB0b0hhc2goQUxMKTtcXFxcbiAgUlVMRVMudHlwZXMgPSB0b0hhc2goVFlQRVMpO1xcXFxuXFxcXG4gIFJVTEVTLmZvckVhY2goZnVuY3Rpb24gKGdyb3VwKSB7XFxcXG4gICAgZ3JvdXAucnVsZXMgPSBncm91cC5ydWxlcy5tYXAoZnVuY3Rpb24gKGtleXdvcmQpIHtcXFxcbiAgICAgIHZhciBpbXBsS2V5d29yZHM7XFxcXG4gICAgICBpZiAodHlwZW9mIGtleXdvcmQgPT0gJ29iamVjdCcpIHtcXFxcbiAgICAgICAgdmFyIGtleSA9IE9iamVjdC5rZXlzKGtleXdvcmQpWzBdO1xcXFxuICAgICAgICBpbXBsS2V5d29yZHMgPSBrZXl3b3JkW2tleV07XFxcXG4gICAgICAgIGtleXdvcmQgPSBrZXk7XFxcXG4gICAgICAgIGltcGxLZXl3b3Jkcy5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XFxcXG4gICAgICAgICAgQUxMLnB1c2goayk7XFxcXG4gICAgICAgICAgUlVMRVMuYWxsW2tdID0gdHJ1ZTtcXFxcbiAgICAgICAgfSk7XFxcXG4gICAgICB9XFxcXG4gICAgICBBTEwucHVzaChrZXl3b3JkKTtcXFxcbiAgICAgIHZhciBydWxlID0gUlVMRVMuYWxsW2tleXdvcmRdID0ge1xcXFxuICAgICAgICBrZXl3b3JkOiBrZXl3b3JkLFxcXFxuICAgICAgICBjb2RlOiBydWxlTW9kdWxlc1trZXl3b3JkXSxcXFxcbiAgICAgICAgaW1wbGVtZW50czogaW1wbEtleXdvcmRzXFxcXG4gICAgICB9O1xcXFxuICAgICAgcmV0dXJuIHJ1bGU7XFxcXG4gICAgfSk7XFxcXG5cXFxcbiAgICBpZiAoZ3JvdXAudHlwZSkgUlVMRVMudHlwZXNbZ3JvdXAudHlwZV0gPSBncm91cDtcXFxcbiAgfSk7XFxcXG5cXFxcbiAgUlVMRVMua2V5d29yZHMgPSB0b0hhc2goQUxMLmNvbmNhdChLRVlXT1JEUykpO1xcXFxuICBSVUxFUy5jdXN0b20gPSB7fTtcXFxcblxcXFxuICByZXR1cm4gUlVMRVM7XFxcXG59O1xcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5amIyMXdhV3hsTDNKMWJHVnpMbXB6TG1weklpd2ljMjkxY21ObGN5STZXeUozWldKd1lXTnJPaTh2YVcxcWIzbFNVRU12TGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWpiMjF3YVd4bEwzSjFiR1Z6TG1welAyTXhOMk1pWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUozVnpaU0J6ZEhKcFkzUW5PMXh1WEc1MllYSWdjblZzWlUxdlpIVnNaWE1nUFNCeVpYRjFhWEpsS0NjdUwxOXlkV3hsY3ljcFhHNGdJQ3dnZEc5SVlYTm9JRDBnY21WeGRXbHlaU2duTGk5MWRHbHNKeWt1ZEc5SVlYTm9PMXh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUhKMWJHVnpLQ2tnZTF4dUlDQjJZWElnVWxWTVJWTWdQU0JiWEc0Z0lDQWdleUIwZVhCbE9pQW5iblZ0WW1WeUp5eGNiaUFnSUNBZ0lISjFiR1Z6T2lCYklIc2dKMjFoZUdsdGRXMG5PaUJiSjJWNFkyeDFjMmwyWlUxaGVHbHRkVzBuWFNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2V5QW5iV2x1YVcxMWJTYzZJRnNuWlhoamJIVnphWFpsVFdsdWFXMTFiU2RkSUgwc0lDZHRkV3gwYVhCc1pVOW1KeXdnSjJadmNtMWhkQ2RkSUgwc1hHNGdJQ0FnZXlCMGVYQmxPaUFuYzNSeWFXNW5KeXhjYmlBZ0lDQWdJSEoxYkdWek9pQmJJQ2R0WVhoTVpXNW5kR2duTENBbmJXbHVUR1Z1WjNSb0p5d2dKM0JoZEhSbGNtNG5MQ0FuWm05eWJXRjBKeUJkSUgwc1hHNGdJQ0FnZXlCMGVYQmxPaUFuWVhKeVlYa25MRnh1SUNBZ0lDQWdjblZzWlhNNklGc2dKMjFoZUVsMFpXMXpKeXdnSjIxcGJrbDBaVzF6Snl3Z0ozVnVhWEYxWlVsMFpXMXpKeXdnSjJOdmJuUmhhVzV6Snl3Z0oybDBaVzF6SnlCZElIMHNYRzRnSUNBZ2V5QjBlWEJsT2lBbmIySnFaV04wSnl4Y2JpQWdJQ0FnSUhKMWJHVnpPaUJiSUNkdFlYaFFjbTl3WlhKMGFXVnpKeXdnSjIxcGJsQnliM0JsY25ScFpYTW5MQ0FuY21WeGRXbHlaV1FuTENBblpHVndaVzVrWlc1amFXVnpKeXdnSjNCeWIzQmxjblI1VG1GdFpYTW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdleUFuY0hKdmNHVnlkR2xsY3ljNklGc25ZV1JrYVhScGIyNWhiRkJ5YjNCbGNuUnBaWE1uTENBbmNHRjBkR1Z5YmxCeWIzQmxjblJwWlhNblhTQjlJRjBnZlN4Y2JpQWdJQ0I3SUhKMWJHVnpPaUJiSUNja2NtVm1KeXdnSjJOdmJuTjBKeXdnSjJWdWRXMG5MQ0FuYm05MEp5d2dKMkZ1ZVU5bUp5d2dKMjl1WlU5bUp5d2dKMkZzYkU5bUp5QmRJSDFjYmlBZ1hUdGNibHh1SUNCMllYSWdRVXhNSUQwZ1d5QW5kSGx3WlNjZ1hUdGNiaUFnZG1GeUlFdEZXVmRQVWtSVElEMGdXMXh1SUNBZ0lDZGhaR1JwZEdsdmJtRnNTWFJsYlhNbkxDQW5KSE5qYUdWdFlTY3NJQ2RwWkNjc0lDZDBhWFJzWlNjc1hHNGdJQ0FnSjJSbGMyTnlhWEIwYVc5dUp5d2dKMlJsWm1GMWJIUW5MQ0FuWkdWbWFXNXBkR2x2Ym5NblhHNGdJRjA3WEc0Z0lIWmhjaUJVV1ZCRlV5QTlJRnNnSjI1MWJXSmxjaWNzSUNkcGJuUmxaMlZ5Snl3Z0ozTjBjbWx1Wnljc0lDZGhjbkpoZVNjc0lDZHZZbXBsWTNRbkxDQW5ZbTl2YkdWaGJpY3NJQ2R1ZFd4c0p5QmRPMXh1SUNCU1ZVeEZVeTVoYkd3Z1BTQjBiMGhoYzJnb1FVeE1LVHRjYmlBZ1VsVk1SVk11ZEhsd1pYTWdQU0IwYjBoaGMyZ29WRmxRUlZNcE8xeHVYRzRnSUZKVlRFVlRMbVp2Y2tWaFkyZ29ablZ1WTNScGIyNGdLR2R5YjNWd0tTQjdYRzRnSUNBZ1ozSnZkWEF1Y25Wc1pYTWdQU0JuY205MWNDNXlkV3hsY3k1dFlYQW9ablZ1WTNScGIyNGdLR3RsZVhkdmNtUXBJSHRjYmlBZ0lDQWdJSFpoY2lCcGJYQnNTMlY1ZDI5eVpITTdYRzRnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR3RsZVhkdmNtUWdQVDBnSjI5aWFtVmpkQ2NwSUh0Y2JpQWdJQ0FnSUNBZ2RtRnlJR3RsZVNBOUlFOWlhbVZqZEM1clpYbHpLR3RsZVhkdmNtUXBXekJkTzF4dUlDQWdJQ0FnSUNCcGJYQnNTMlY1ZDI5eVpITWdQU0JyWlhsM2IzSmtXMnRsZVYwN1hHNGdJQ0FnSUNBZ0lHdGxlWGR2Y21RZ1BTQnJaWGs3WEc0Z0lDQWdJQ0FnSUdsdGNHeExaWGwzYjNKa2N5NW1iM0pGWVdOb0tHWjFibU4wYVc5dUlDaHJLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1FVeE1MbkIxYzJnb2F5azdYRzRnSUNBZ0lDQWdJQ0FnVWxWTVJWTXVZV3hzVzJ0ZElEMGdkSEoxWlR0Y2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQkJURXd1Y0hWemFDaHJaWGwzYjNKa0tUdGNiaUFnSUNBZ0lIWmhjaUJ5ZFd4bElEMGdVbFZNUlZNdVlXeHNXMnRsZVhkdmNtUmRJRDBnZTF4dUlDQWdJQ0FnSUNCclpYbDNiM0prT2lCclpYbDNiM0prTEZ4dUlDQWdJQ0FnSUNCamIyUmxPaUJ5ZFd4bFRXOWtkV3hsYzF0clpYbDNiM0prWFN4Y2JpQWdJQ0FnSUNBZ2FXMXdiR1Z0Wlc1MGN6b2dhVzF3YkV0bGVYZHZjbVJ6WEc0Z0lDQWdJQ0I5TzF4dUlDQWdJQ0FnY21WMGRYSnVJSEoxYkdVN1hHNGdJQ0FnZlNrN1hHNWNiaUFnSUNCcFppQW9aM0p2ZFhBdWRIbHdaU2tnVWxWTVJWTXVkSGx3WlhOYlozSnZkWEF1ZEhsd1pWMGdQU0JuY205MWNEdGNiaUFnZlNrN1hHNWNiaUFnVWxWTVJWTXVhMlY1ZDI5eVpITWdQU0IwYjBoaGMyZ29RVXhNTG1OdmJtTmhkQ2hMUlZsWFQxSkVVeWtwTzF4dUlDQlNWVXhGVXk1amRYTjBiMjBnUFNCN2ZUdGNibHh1SUNCeVpYUjFjbTRnVWxWTVJWTTdYRzU5TzF4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9ydWxlcy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9zY2hlbWFfb2JqLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS9zY2hlbWFfb2JqLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5cXFxcbnZhciB1dGlsID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi91dGlsICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3V0aWwuanNcXFxcXFxcIik7XFxcXG5cXFxcbm1vZHVsZS5leHBvcnRzID0gU2NoZW1hT2JqZWN0O1xcXFxuXFxcXG5mdW5jdGlvbiBTY2hlbWFPYmplY3Qob2JqKSB7XFxcXG4gIHV0aWwuY29weShvYmosIHRoaXMpO1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5amIyMXdhV3hsTDNOamFHVnRZVjl2WW1vdWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OHVMMjV2WkdWZmJXOWtkV3hsY3k5aGFuWXZiR2xpTDJOdmJYQnBiR1V2YzJOb1pXMWhYMjlpYWk1cWN6OWlZVEF3SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFYwYVd3Z1BTQnlaWEYxYVhKbEtDY3VMM1YwYVd3bktUdGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JUWTJobGJXRlBZbXBsWTNRN1hHNWNibVoxYm1OMGFXOXVJRk5qYUdWdFlVOWlhbVZqZENodlltb3BJSHRjYmlBZ2RYUnBiQzVqYjNCNUtHOWlhaXdnZEdocGN5azdYRzU5WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3NjaGVtYV9vYmouanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvdWNzMmxlbmd0aC5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvdWNzMmxlbmd0aC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxuXFxcXG4vLyBodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvamF2YXNjcmlwdC1lbmNvZGluZ1xcXFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL3B1bnljb2RlLmpzIC0gcHVueWNvZGUudWNzMi5kZWNvZGVcXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdWNzMmxlbmd0aChzdHIpIHtcXFxcbiAgdmFyIGxlbmd0aCA9IDBcXFxcbiAgICAsIGxlbiA9IHN0ci5sZW5ndGhcXFxcbiAgICAsIHBvcyA9IDBcXFxcbiAgICAsIHZhbHVlO1xcXFxuICB3aGlsZSAocG9zIDwgbGVuKSB7XFxcXG4gICAgbGVuZ3RoKys7XFxcXG4gICAgdmFsdWUgPSBzdHIuY2hhckNvZGVBdChwb3MrKyk7XFxcXG4gICAgaWYgKHZhbHVlID49IDB4RDgwMCAmJiB2YWx1ZSA8PSAweERCRkYgJiYgcG9zIDwgbGVuKSB7XFxcXG4gICAgICAvLyBoaWdoIHN1cnJvZ2F0ZSwgYW5kIHRoZXJlIGlzIGEgbmV4dCBjaGFyYWN0ZXJcXFxcbiAgICAgIHZhbHVlID0gc3RyLmNoYXJDb2RlQXQocG9zKTtcXFxcbiAgICAgIGlmICgodmFsdWUgJiAweEZDMDApID09IDB4REMwMCkgcG9zKys7IC8vIGxvdyBzdXJyb2dhdGVcXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgcmV0dXJuIGxlbmd0aDtcXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlqYjIxd2FXeGxMM1ZqY3pKc1pXNW5kR2d1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTloYW5ZdmJHbGlMMk52YlhCcGJHVXZkV056TW14bGJtZDBhQzVxY3o4M056VmxJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlkMWMyVWdjM1J5YVdOMEp6dGNibHh1THk4Z2FIUjBjSE02THk5dFlYUm9hV0Z6WW5sdVpXNXpMbUpsTDI1dmRHVnpMMnBoZG1GelkzSnBjSFF0Wlc1amIyUnBibWRjYmk4dklHaDBkSEJ6T2k4dloybDBhSFZpTG1OdmJTOWlaWE4wYVdWcWN5OXdkVzU1WTI5a1pTNXFjeUF0SUhCMWJubGpiMlJsTG5WamN6SXVaR1ZqYjJSbFhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlIVmpjekpzWlc1bmRHZ29jM1J5S1NCN1hHNGdJSFpoY2lCc1pXNW5kR2dnUFNBd1hHNGdJQ0FnTENCc1pXNGdQU0J6ZEhJdWJHVnVaM1JvWEc0Z0lDQWdMQ0J3YjNNZ1BTQXdYRzRnSUNBZ0xDQjJZV3gxWlR0Y2JpQWdkMmhwYkdVZ0tIQnZjeUE4SUd4bGJpa2dlMXh1SUNBZ0lHeGxibWQwYUNzck8xeHVJQ0FnSUhaaGJIVmxJRDBnYzNSeUxtTm9ZWEpEYjJSbFFYUW9jRzl6S3lzcE8xeHVJQ0FnSUdsbUlDaDJZV3gxWlNBK1BTQXdlRVE0TURBZ0ppWWdkbUZzZFdVZ1BEMGdNSGhFUWtaR0lDWW1JSEJ2Y3lBOElHeGxiaWtnZTF4dUlDQWdJQ0FnTHk4Z2FHbG5hQ0J6ZFhKeWIyZGhkR1VzSUdGdVpDQjBhR1Z5WlNCcGN5QmhJRzVsZUhRZ1kyaGhjbUZqZEdWeVhHNGdJQ0FnSUNCMllXeDFaU0E5SUhOMGNpNWphR0Z5UTI5a1pVRjBLSEJ2Y3lrN1hHNGdJQ0FnSUNCcFppQW9LSFpoYkhWbElDWWdNSGhHUXpBd0tTQTlQU0F3ZUVSRE1EQXBJSEJ2Y3lzck95QXZMeUJzYjNjZ2MzVnljbTluWVhSbFhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUhKbGRIVnliaUJzWlc1bmRHZzdYRzU5TzF4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS91Y3MybGVuZ3RoLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3V0aWwuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3V0aWwuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxuXFxcXG5tb2R1bGUuZXhwb3J0cyA9IHtcXFxcbiAgY29weTogY29weSxcXFxcbiAgY2hlY2tEYXRhVHlwZTogY2hlY2tEYXRhVHlwZSxcXFxcbiAgY2hlY2tEYXRhVHlwZXM6IGNoZWNrRGF0YVR5cGVzLFxcXFxuICBjb2VyY2VUb1R5cGVzOiBjb2VyY2VUb1R5cGVzLFxcXFxuICB0b0hhc2g6IHRvSGFzaCxcXFxcbiAgZ2V0UHJvcGVydHk6IGdldFByb3BlcnR5LFxcXFxuICBlc2NhcGVRdW90ZXM6IGVzY2FwZVF1b3RlcyxcXFxcbiAgZXF1YWw6IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZXF1YWwgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2NvbXBpbGUvZXF1YWwuanNcXFxcXFxcIiksXFxcXG4gIHVjczJsZW5ndGg6IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdWNzMmxlbmd0aCAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvY29tcGlsZS91Y3MybGVuZ3RoLmpzXFxcXFxcXCIpLFxcXFxuICB2YXJPY2N1cmVuY2VzOiB2YXJPY2N1cmVuY2VzLFxcXFxuICB2YXJSZXBsYWNlOiB2YXJSZXBsYWNlLFxcXFxuICBjbGVhblVwQ29kZTogY2xlYW5VcENvZGUsXFxcXG4gIGZpbmFsQ2xlYW5VcENvZGU6IGZpbmFsQ2xlYW5VcENvZGUsXFxcXG4gIHNjaGVtYUhhc1J1bGVzOiBzY2hlbWFIYXNSdWxlcyxcXFxcbiAgc2NoZW1hSGFzUnVsZXNFeGNlcHQ6IHNjaGVtYUhhc1J1bGVzRXhjZXB0LFxcXFxuICB0b1F1b3RlZFN0cmluZzogdG9RdW90ZWRTdHJpbmcsXFxcXG4gIGdldFBhdGhFeHByOiBnZXRQYXRoRXhwcixcXFxcbiAgZ2V0UGF0aDogZ2V0UGF0aCxcXFxcbiAgZ2V0RGF0YTogZ2V0RGF0YSxcXFxcbiAgdW5lc2NhcGVGcmFnbWVudDogdW5lc2NhcGVGcmFnbWVudCxcXFxcbiAgZXNjYXBlRnJhZ21lbnQ6IGVzY2FwZUZyYWdtZW50LFxcXFxuICBlc2NhcGVKc29uUG9pbnRlcjogZXNjYXBlSnNvblBvaW50ZXJcXFxcbn07XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gY29weShvLCB0bykge1xcXFxuICB0byA9IHRvIHx8IHt9O1xcXFxuICBmb3IgKHZhciBrZXkgaW4gbykgdG9ba2V5XSA9IG9ba2V5XTtcXFxcbiAgcmV0dXJuIHRvO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIGNoZWNrRGF0YVR5cGUoZGF0YVR5cGUsIGRhdGEsIG5lZ2F0ZSkge1xcXFxuICB2YXIgRVFVQUwgPSBuZWdhdGUgPyAnICE9PSAnIDogJyA9PT0gJ1xcXFxuICAgICwgQU5EID0gbmVnYXRlID8gJyB8fCAnIDogJyAmJiAnXFxcXG4gICAgLCBPSyA9IG5lZ2F0ZSA/ICchJyA6ICcnXFxcXG4gICAgLCBOT1QgPSBuZWdhdGUgPyAnJyA6ICchJztcXFxcbiAgc3dpdGNoIChkYXRhVHlwZSkge1xcXFxuICAgIGNhc2UgJ251bGwnOiByZXR1cm4gZGF0YSArIEVRVUFMICsgJ251bGwnO1xcXFxuICAgIGNhc2UgJ2FycmF5JzogcmV0dXJuIE9LICsgJ0FycmF5LmlzQXJyYXkoJyArIGRhdGEgKyAnKSc7XFxcXG4gICAgY2FzZSAnb2JqZWN0JzogcmV0dXJuICcoJyArIE9LICsgZGF0YSArIEFORCArXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICd0eXBlb2YgJyArIGRhdGEgKyBFUVVBTCArICdcXFxcXFxcIm9iamVjdFxcXFxcXFwiJyArIEFORCArXFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgIE5PVCArICdBcnJheS5pc0FycmF5KCcgKyBkYXRhICsgJykpJztcXFxcbiAgICBjYXNlICdpbnRlZ2VyJzogcmV0dXJuICcodHlwZW9mICcgKyBkYXRhICsgRVFVQUwgKyAnXFxcXFxcXCJudW1iZXJcXFxcXFxcIicgKyBBTkQgK1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgTk9UICsgJygnICsgZGF0YSArICcgJSAxKScgK1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgQU5EICsgZGF0YSArIEVRVUFMICsgZGF0YSArICcpJztcXFxcbiAgICBkZWZhdWx0OiByZXR1cm4gJ3R5cGVvZiAnICsgZGF0YSArIEVRVUFMICsgJ1xcXFxcXFwiJyArIGRhdGFUeXBlICsgJ1xcXFxcXFwiJztcXFxcbiAgfVxcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIGNoZWNrRGF0YVR5cGVzKGRhdGFUeXBlcywgZGF0YSkge1xcXFxuICBzd2l0Y2ggKGRhdGFUeXBlcy5sZW5ndGgpIHtcXFxcbiAgICBjYXNlIDE6IHJldHVybiBjaGVja0RhdGFUeXBlKGRhdGFUeXBlc1swXSwgZGF0YSwgdHJ1ZSk7XFxcXG4gICAgZGVmYXVsdDpcXFxcbiAgICAgIHZhciBjb2RlID0gJyc7XFxcXG4gICAgICB2YXIgdHlwZXMgPSB0b0hhc2goZGF0YVR5cGVzKTtcXFxcbiAgICAgIGlmICh0eXBlcy5hcnJheSAmJiB0eXBlcy5vYmplY3QpIHtcXFxcbiAgICAgICAgY29kZSA9IHR5cGVzLm51bGwgPyAnKCc6ICcoIScgKyBkYXRhICsgJyB8fCAnO1xcXFxuICAgICAgICBjb2RlICs9ICd0eXBlb2YgJyArIGRhdGEgKyAnICE9PSBcXFxcXFxcIm9iamVjdFxcXFxcXFwiKSc7XFxcXG4gICAgICAgIGRlbGV0ZSB0eXBlcy5udWxsO1xcXFxuICAgICAgICBkZWxldGUgdHlwZXMuYXJyYXk7XFxcXG4gICAgICAgIGRlbGV0ZSB0eXBlcy5vYmplY3Q7XFxcXG4gICAgICB9XFxcXG4gICAgICBpZiAodHlwZXMubnVtYmVyKSBkZWxldGUgdHlwZXMuaW50ZWdlcjtcXFxcbiAgICAgIGZvciAodmFyIHQgaW4gdHlwZXMpXFxcXG4gICAgICAgIGNvZGUgKz0gKGNvZGUgPyAnICYmICcgOiAnJyApICsgY2hlY2tEYXRhVHlwZSh0LCBkYXRhLCB0cnVlKTtcXFxcblxcXFxuICAgICAgcmV0dXJuIGNvZGU7XFxcXG4gIH1cXFxcbn1cXFxcblxcXFxuXFxcXG52YXIgQ09FUkNFX1RPX1RZUEVTID0gdG9IYXNoKFsgJ3N0cmluZycsICdudW1iZXInLCAnaW50ZWdlcicsICdib29sZWFuJywgJ251bGwnIF0pO1xcXFxuZnVuY3Rpb24gY29lcmNlVG9UeXBlcyhvcHRpb25Db2VyY2VUeXBlcywgZGF0YVR5cGVzKSB7XFxcXG4gIGlmIChBcnJheS5pc0FycmF5KGRhdGFUeXBlcykpIHtcXFxcbiAgICB2YXIgdHlwZXMgPSBbXTtcXFxcbiAgICBmb3IgKHZhciBpPTA7IGk8ZGF0YVR5cGVzLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgICB2YXIgdCA9IGRhdGFUeXBlc1tpXTtcXFxcbiAgICAgIGlmIChDT0VSQ0VfVE9fVFlQRVNbdF0pIHR5cGVzW3R5cGVzLmxlbmd0aF0gPSB0O1xcXFxuICAgICAgZWxzZSBpZiAob3B0aW9uQ29lcmNlVHlwZXMgPT09ICdhcnJheScgJiYgdCA9PT0gJ2FycmF5JykgdHlwZXNbdHlwZXMubGVuZ3RoXSA9IHQ7XFxcXG4gICAgfVxcXFxuICAgIGlmICh0eXBlcy5sZW5ndGgpIHJldHVybiB0eXBlcztcXFxcbiAgfSBlbHNlIGlmIChDT0VSQ0VfVE9fVFlQRVNbZGF0YVR5cGVzXSkge1xcXFxuICAgIHJldHVybiBbZGF0YVR5cGVzXTtcXFxcbiAgfSBlbHNlIGlmIChvcHRpb25Db2VyY2VUeXBlcyA9PT0gJ2FycmF5JyAmJiBkYXRhVHlwZXMgPT09ICdhcnJheScpIHtcXFxcbiAgICByZXR1cm4gWydhcnJheSddO1xcXFxuICB9XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gdG9IYXNoKGFycikge1xcXFxuICB2YXIgaGFzaCA9IHt9O1xcXFxuICBmb3IgKHZhciBpPTA7IGk8YXJyLmxlbmd0aDsgaSsrKSBoYXNoW2FycltpXV0gPSB0cnVlO1xcXFxuICByZXR1cm4gaGFzaDtcXFxcbn1cXFxcblxcXFxuXFxcXG52YXIgSURFTlRJRklFUiA9IC9eW2EteiRfXVthLXokXzAtOV0qJC9pO1xcXFxudmFyIFNJTkdMRV9RVU9URSA9IC8nfFxcXFxcXFxcXFxcXFxcXFwvZztcXFxcbmZ1bmN0aW9uIGdldFByb3BlcnR5KGtleSkge1xcXFxuICByZXR1cm4gdHlwZW9mIGtleSA9PSAnbnVtYmVyJ1xcXFxuICAgICAgICAgID8gJ1snICsga2V5ICsgJ10nXFxcXG4gICAgICAgICAgOiBJREVOVElGSUVSLnRlc3Qoa2V5KVxcXFxuICAgICAgICAgICAgPyAnLicgKyBrZXlcXFxcbiAgICAgICAgICAgIDogXFxcXFxcXCJbJ1xcXFxcXFwiICsgZXNjYXBlUXVvdGVzKGtleSkgKyBcXFxcXFxcIiddXFxcXFxcXCI7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gZXNjYXBlUXVvdGVzKHN0cikge1xcXFxuICByZXR1cm4gc3RyLnJlcGxhY2UoU0lOR0xFX1FVT1RFLCAnXFxcXFxcXFxcXFxcXFxcXCQmJylcXFxcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXFxcXG4vZywgJ1xcXFxcXFxcXFxcXFxcXFxuJylcXFxcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXFxcXHIvZywgJ1xcXFxcXFxcXFxcXFxcXFxyJylcXFxcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXFxcXGYvZywgJ1xcXFxcXFxcXFxcXFxcXFxmJylcXFxcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXFxcXHQvZywgJ1xcXFxcXFxcXFxcXFxcXFx0Jyk7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gdmFyT2NjdXJlbmNlcyhzdHIsIGRhdGFWYXIpIHtcXFxcbiAgZGF0YVZhciArPSAnW14wLTldJztcXFxcbiAgdmFyIG1hdGNoZXMgPSBzdHIubWF0Y2gobmV3IFJlZ0V4cChkYXRhVmFyLCAnZycpKTtcXFxcbiAgcmV0dXJuIG1hdGNoZXMgPyBtYXRjaGVzLmxlbmd0aCA6IDA7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gdmFyUmVwbGFjZShzdHIsIGRhdGFWYXIsIGV4cHIpIHtcXFxcbiAgZGF0YVZhciArPSAnKFteMC05XSknO1xcXFxuICBleHByID0gZXhwci5yZXBsYWNlKC9cXFxcXFxcXCQvZywgJyQkJCQnKTtcXFxcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKG5ldyBSZWdFeHAoZGF0YVZhciwgJ2cnKSwgZXhwciArICckMScpO1xcXFxufVxcXFxuXFxcXG5cXFxcbnZhciBFTVBUWV9FTFNFID0gL2Vsc2VcXFxcXFxcXHMqe1xcXFxcXFxccyp9L2dcXFxcbiAgLCBFTVBUWV9JRl9OT19FTFNFID0gL2lmXFxcXFxcXFxzKlxcXFxcXFxcKFteKV0rXFxcXFxcXFwpXFxcXFxcXFxzKlxcXFxcXFxce1xcXFxcXFxccypcXFxcXFxcXH0oPyFcXFxcXFxcXHMqZWxzZSkvZ1xcXFxuICAsIEVNUFRZX0lGX1dJVEhfRUxTRSA9IC9pZlxcXFxcXFxccypcXFxcXFxcXCgoW14pXSspXFxcXFxcXFwpXFxcXFxcXFxzKlxcXFxcXFxce1xcXFxcXFxccypcXFxcXFxcXH1cXFxcXFxcXHMqZWxzZSg/IVxcXFxcXFxccyppZikvZztcXFxcbmZ1bmN0aW9uIGNsZWFuVXBDb2RlKG91dCkge1xcXFxuICByZXR1cm4gb3V0LnJlcGxhY2UoRU1QVFlfRUxTRSwgJycpXFxcXG4gICAgICAgICAgICAucmVwbGFjZShFTVBUWV9JRl9OT19FTFNFLCAnJylcXFxcbiAgICAgICAgICAgIC5yZXBsYWNlKEVNUFRZX0lGX1dJVEhfRUxTRSwgJ2lmICghKCQxKSknKTtcXFxcbn1cXFxcblxcXFxuXFxcXG52YXIgRVJST1JTX1JFR0VYUCA9IC9bXnZcXFxcXFxcXC5dZXJyb3JzL2dcXFxcbiAgLCBSRU1PVkVfRVJST1JTID0gL3ZhciBlcnJvcnMgPSAwO3x2YXIgdkVycm9ycyA9IG51bGw7fHZhbGlkYXRlLmVycm9ycyA9IHZFcnJvcnM7L2dcXFxcbiAgLCBSRU1PVkVfRVJST1JTX0FTWU5DID0gL3ZhciBlcnJvcnMgPSAwO3x2YXIgdkVycm9ycyA9IG51bGw7L2dcXFxcbiAgLCBSRVRVUk5fVkFMSUQgPSAncmV0dXJuIGVycm9ycyA9PT0gMDsnXFxcXG4gICwgUkVUVVJOX1RSVUUgPSAndmFsaWRhdGUuZXJyb3JzID0gbnVsbDsgcmV0dXJuIHRydWU7J1xcXFxuICAsIFJFVFVSTl9BU1lOQyA9IC9pZiBcXFxcXFxcXChlcnJvcnMgPT09IDBcXFxcXFxcXCkgcmV0dXJuIGRhdGE7XFxcXFxcXFxzKmVsc2UgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvclxcXFxcXFxcKHZFcnJvcnNcXFxcXFxcXCk7L1xcXFxuICAsIFJFVFVSTl9EQVRBX0FTWU5DID0gJ3JldHVybiBkYXRhOydcXFxcbiAgLCBST09UREFUQV9SRUdFWFAgPSAvW15BLVphLXpfJF1yb290RGF0YVteQS1aYS16MC05XyRdL2dcXFxcbiAgLCBSRU1PVkVfUk9PVERBVEEgPSAvaWYgXFxcXFxcXFwocm9vdERhdGEgPT09IHVuZGVmaW5lZFxcXFxcXFxcKSByb290RGF0YSA9IGRhdGE7LztcXFxcblxcXFxuZnVuY3Rpb24gZmluYWxDbGVhblVwQ29kZShvdXQsIGFzeW5jKSB7XFxcXG4gIHZhciBtYXRjaGVzID0gb3V0Lm1hdGNoKEVSUk9SU19SRUdFWFApO1xcXFxuICBpZiAobWF0Y2hlcyAmJiBtYXRjaGVzLmxlbmd0aCA9PSAyKSB7XFxcXG4gICAgb3V0ID0gYXN5bmNcXFxcbiAgICAgICAgICA/IG91dC5yZXBsYWNlKFJFTU9WRV9FUlJPUlNfQVNZTkMsICcnKVxcXFxuICAgICAgICAgICAgICAgLnJlcGxhY2UoUkVUVVJOX0FTWU5DLCBSRVRVUk5fREFUQV9BU1lOQylcXFxcbiAgICAgICAgICA6IG91dC5yZXBsYWNlKFJFTU9WRV9FUlJPUlMsICcnKVxcXFxuICAgICAgICAgICAgICAgLnJlcGxhY2UoUkVUVVJOX1ZBTElELCBSRVRVUk5fVFJVRSk7XFxcXG4gIH1cXFxcblxcXFxuICBtYXRjaGVzID0gb3V0Lm1hdGNoKFJPT1REQVRBX1JFR0VYUCk7XFxcXG4gIGlmICghbWF0Y2hlcyB8fCBtYXRjaGVzLmxlbmd0aCAhPT0gMykgcmV0dXJuIG91dDtcXFxcbiAgcmV0dXJuIG91dC5yZXBsYWNlKFJFTU9WRV9ST09UREFUQSwgJycpO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIHNjaGVtYUhhc1J1bGVzKHNjaGVtYSwgcnVsZXMpIHtcXFxcbiAgaWYgKHR5cGVvZiBzY2hlbWEgPT0gJ2Jvb2xlYW4nKSByZXR1cm4gIXNjaGVtYTtcXFxcbiAgZm9yICh2YXIga2V5IGluIHNjaGVtYSkgaWYgKHJ1bGVzW2tleV0pIHJldHVybiB0cnVlO1xcXFxufVxcXFxuXFxcXG5cXFxcbmZ1bmN0aW9uIHNjaGVtYUhhc1J1bGVzRXhjZXB0KHNjaGVtYSwgcnVsZXMsIGV4Y2VwdEtleXdvcmQpIHtcXFxcbiAgaWYgKHR5cGVvZiBzY2hlbWEgPT0gJ2Jvb2xlYW4nKSByZXR1cm4gIXNjaGVtYSAmJiBleGNlcHRLZXl3b3JkICE9ICdub3QnO1xcXFxuICBmb3IgKHZhciBrZXkgaW4gc2NoZW1hKSBpZiAoa2V5ICE9IGV4Y2VwdEtleXdvcmQgJiYgcnVsZXNba2V5XSkgcmV0dXJuIHRydWU7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gdG9RdW90ZWRTdHJpbmcoc3RyKSB7XFxcXG4gIHJldHVybiAnXFxcXFxcXFwnJyArIGVzY2FwZVF1b3RlcyhzdHIpICsgJ1xcXFxcXFxcJyc7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gZ2V0UGF0aEV4cHIoY3VycmVudFBhdGgsIGV4cHIsIGpzb25Qb2ludGVycywgaXNOdW1iZXIpIHtcXFxcbiAgdmFyIHBhdGggPSBqc29uUG9pbnRlcnMgLy8gZmFsc2UgYnkgZGVmYXVsdFxcXFxuICAgICAgICAgICAgICA/ICdcXFxcXFxcXCcvXFxcXFxcXFwnICsgJyArIGV4cHIgKyAoaXNOdW1iZXIgPyAnJyA6ICcucmVwbGFjZSgvfi9nLCBcXFxcXFxcXCd+MFxcXFxcXFxcJykucmVwbGFjZSgvXFxcXFxcXFxcXFxcXFxcXC8vZywgXFxcXFxcXFwnfjFcXFxcXFxcXCcpJylcXFxcbiAgICAgICAgICAgICAgOiAoaXNOdW1iZXIgPyAnXFxcXFxcXFwnW1xcXFxcXFxcJyArICcgKyBleHByICsgJyArIFxcXFxcXFxcJ11cXFxcXFxcXCcnIDogJ1xcXFxcXFxcJ1tcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnXFxcXFxcXFwnICsgJyArIGV4cHIgKyAnICsgXFxcXFxcXFwnXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcJ11cXFxcXFxcXCcnKTtcXFxcbiAgcmV0dXJuIGpvaW5QYXRocyhjdXJyZW50UGF0aCwgcGF0aCk7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gZ2V0UGF0aChjdXJyZW50UGF0aCwgcHJvcCwganNvblBvaW50ZXJzKSB7XFxcXG4gIHZhciBwYXRoID0ganNvblBvaW50ZXJzIC8vIGZhbHNlIGJ5IGRlZmF1bHRcXFxcbiAgICAgICAgICAgICAgPyB0b1F1b3RlZFN0cmluZygnLycgKyBlc2NhcGVKc29uUG9pbnRlcihwcm9wKSlcXFxcbiAgICAgICAgICAgICAgOiB0b1F1b3RlZFN0cmluZyhnZXRQcm9wZXJ0eShwcm9wKSk7XFxcXG4gIHJldHVybiBqb2luUGF0aHMoY3VycmVudFBhdGgsIHBhdGgpO1xcXFxufVxcXFxuXFxcXG5cXFxcbnZhciBKU09OX1BPSU5URVIgPSAvXlxcXFxcXFxcLyg/Oltefl18fjB8fjEpKiQvO1xcXFxudmFyIFJFTEFUSVZFX0pTT05fUE9JTlRFUiA9IC9eKFswLTldKykoI3xcXFxcXFxcXC8oPzpbXn5dfH4wfH4xKSopPyQvO1xcXFxuZnVuY3Rpb24gZ2V0RGF0YSgkZGF0YSwgbHZsLCBwYXRocykge1xcXFxuICB2YXIgdXAsIGpzb25Qb2ludGVyLCBkYXRhLCBtYXRjaGVzO1xcXFxuICBpZiAoJGRhdGEgPT09ICcnKSByZXR1cm4gJ3Jvb3REYXRhJztcXFxcbiAgaWYgKCRkYXRhWzBdID09ICcvJykge1xcXFxuICAgIGlmICghSlNPTl9QT0lOVEVSLnRlc3QoJGRhdGEpKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgSlNPTi1wb2ludGVyOiAnICsgJGRhdGEpO1xcXFxuICAgIGpzb25Qb2ludGVyID0gJGRhdGE7XFxcXG4gICAgZGF0YSA9ICdyb290RGF0YSc7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgbWF0Y2hlcyA9ICRkYXRhLm1hdGNoKFJFTEFUSVZFX0pTT05fUE9JTlRFUik7XFxcXG4gICAgaWYgKCFtYXRjaGVzKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgSlNPTi1wb2ludGVyOiAnICsgJGRhdGEpO1xcXFxuICAgIHVwID0gK21hdGNoZXNbMV07XFxcXG4gICAganNvblBvaW50ZXIgPSBtYXRjaGVzWzJdO1xcXFxuICAgIGlmIChqc29uUG9pbnRlciA9PSAnIycpIHtcXFxcbiAgICAgIGlmICh1cCA+PSBsdmwpIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGFjY2VzcyBwcm9wZXJ0eS9pbmRleCAnICsgdXAgKyAnIGxldmVscyB1cCwgY3VycmVudCBsZXZlbCBpcyAnICsgbHZsKTtcXFxcbiAgICAgIHJldHVybiBwYXRoc1tsdmwgLSB1cF07XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgaWYgKHVwID4gbHZsKSB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBhY2Nlc3MgZGF0YSAnICsgdXAgKyAnIGxldmVscyB1cCwgY3VycmVudCBsZXZlbCBpcyAnICsgbHZsKTtcXFxcbiAgICBkYXRhID0gJ2RhdGEnICsgKChsdmwgLSB1cCkgfHwgJycpO1xcXFxuICAgIGlmICghanNvblBvaW50ZXIpIHJldHVybiBkYXRhO1xcXFxuICB9XFxcXG5cXFxcbiAgdmFyIGV4cHIgPSBkYXRhO1xcXFxuICB2YXIgc2VnbWVudHMgPSBqc29uUG9pbnRlci5zcGxpdCgnLycpO1xcXFxuICBmb3IgKHZhciBpPTA7IGk8c2VnbWVudHMubGVuZ3RoOyBpKyspIHtcXFxcbiAgICB2YXIgc2VnbWVudCA9IHNlZ21lbnRzW2ldO1xcXFxuICAgIGlmIChzZWdtZW50KSB7XFxcXG4gICAgICBkYXRhICs9IGdldFByb3BlcnR5KHVuZXNjYXBlSnNvblBvaW50ZXIoc2VnbWVudCkpO1xcXFxuICAgICAgZXhwciArPSAnICYmICcgKyBkYXRhO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICByZXR1cm4gZXhwcjtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBqb2luUGF0aHMgKGEsIGIpIHtcXFxcbiAgaWYgKGEgPT0gJ1xcXFxcXFwiXFxcXFxcXCInKSByZXR1cm4gYjtcXFxcbiAgcmV0dXJuIChhICsgJyArICcgKyBiKS5yZXBsYWNlKC8nIFxcXFxcXFxcKyAnL2csICcnKTtcXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiB1bmVzY2FwZUZyYWdtZW50KHN0cikge1xcXFxuICByZXR1cm4gdW5lc2NhcGVKc29uUG9pbnRlcihkZWNvZGVVUklDb21wb25lbnQoc3RyKSk7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gZXNjYXBlRnJhZ21lbnQoc3RyKSB7XFxcXG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoZXNjYXBlSnNvblBvaW50ZXIoc3RyKSk7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gZXNjYXBlSnNvblBvaW50ZXIoc3RyKSB7XFxcXG4gIHJldHVybiBzdHIucmVwbGFjZSgvfi9nLCAnfjAnKS5yZXBsYWNlKC9cXFxcXFxcXC8vZywgJ34xJyk7XFxcXG59XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gdW5lc2NhcGVKc29uUG9pbnRlcihzdHIpIHtcXFxcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9+MS9nLCAnLycpLnJlcGxhY2UoL34wL2csICd+Jyk7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlqYjIxd2FXeGxMM1YwYVd3dWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OHVMMjV2WkdWZmJXOWtkV3hsY3k5aGFuWXZiR2xpTDJOdmJYQnBiR1V2ZFhScGJDNXFjejltWW1SaElsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaWQxYzJVZ2MzUnlhV04wSnp0Y2JseHVYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJSHRjYmlBZ1kyOXdlVG9nWTI5d2VTeGNiaUFnWTJobFkydEVZWFJoVkhsd1pUb2dZMmhsWTJ0RVlYUmhWSGx3WlN4Y2JpQWdZMmhsWTJ0RVlYUmhWSGx3WlhNNklHTm9aV05yUkdGMFlWUjVjR1Z6TEZ4dUlDQmpiMlZ5WTJWVWIxUjVjR1Z6T2lCamIyVnlZMlZVYjFSNWNHVnpMRnh1SUNCMGIwaGhjMmc2SUhSdlNHRnphQ3hjYmlBZ1oyVjBVSEp2Y0dWeWRIazZJR2RsZEZCeWIzQmxjblI1TEZ4dUlDQmxjMk5oY0dWUmRXOTBaWE02SUdWelkyRndaVkYxYjNSbGN5eGNiaUFnWlhGMVlXdzZJSEpsY1hWcGNtVW9KeTR2WlhGMVlXd25LU3hjYmlBZ2RXTnpNbXhsYm1kMGFEb2djbVZ4ZFdseVpTZ25MaTkxWTNNeWJHVnVaM1JvSnlrc1hHNGdJSFpoY2s5alkzVnlaVzVqWlhNNklIWmhjazlqWTNWeVpXNWpaWE1zWEc0Z0lIWmhjbEpsY0d4aFkyVTZJSFpoY2xKbGNHeGhZMlVzWEc0Z0lHTnNaV0Z1VlhCRGIyUmxPaUJqYkdWaGJsVndRMjlrWlN4Y2JpQWdabWx1WVd4RGJHVmhibFZ3UTI5a1pUb2dabWx1WVd4RGJHVmhibFZ3UTI5a1pTeGNiaUFnYzJOb1pXMWhTR0Z6VW5Wc1pYTTZJSE5qYUdWdFlVaGhjMUoxYkdWekxGeHVJQ0J6WTJobGJXRklZWE5TZFd4bGMwVjRZMlZ3ZERvZ2MyTm9aVzFoU0dGelVuVnNaWE5GZUdObGNIUXNYRzRnSUhSdlVYVnZkR1ZrVTNSeWFXNW5PaUIwYjFGMWIzUmxaRk4wY21sdVp5eGNiaUFnWjJWMFVHRjBhRVY0Y0hJNklHZGxkRkJoZEdoRmVIQnlMRnh1SUNCblpYUlFZWFJvT2lCblpYUlFZWFJvTEZ4dUlDQm5aWFJFWVhSaE9pQm5aWFJFWVhSaExGeHVJQ0IxYm1WelkyRndaVVp5WVdkdFpXNTBPaUIxYm1WelkyRndaVVp5WVdkdFpXNTBMRnh1SUNCbGMyTmhjR1ZHY21GbmJXVnVkRG9nWlhOallYQmxSbkpoWjIxbGJuUXNYRzRnSUdWelkyRndaVXB6YjI1UWIybHVkR1Z5T2lCbGMyTmhjR1ZLYzI5dVVHOXBiblJsY2x4dWZUdGNibHh1WEc1bWRXNWpkR2x2YmlCamIzQjVLRzhzSUhSdktTQjdYRzRnSUhSdklEMGdkRzhnZkh3Z2UzMDdYRzRnSUdadmNpQW9kbUZ5SUd0bGVTQnBiaUJ2S1NCMGIxdHJaWGxkSUQwZ2IxdHJaWGxkTzF4dUlDQnlaWFIxY200Z2RHODdYRzU5WEc1Y2JseHVablZ1WTNScGIyNGdZMmhsWTJ0RVlYUmhWSGx3WlNoa1lYUmhWSGx3WlN3Z1pHRjBZU3dnYm1WbllYUmxLU0I3WEc0Z0lIWmhjaUJGVVZWQlRDQTlJRzVsWjJGMFpTQS9JQ2NnSVQwOUlDY2dPaUFuSUQwOVBTQW5YRzRnSUNBZ0xDQkJUa1FnUFNCdVpXZGhkR1VnUHlBbklIeDhJQ2NnT2lBbklDWW1JQ2RjYmlBZ0lDQXNJRTlMSUQwZ2JtVm5ZWFJsSUQ4Z0p5RW5JRG9nSnlkY2JpQWdJQ0FzSUU1UFZDQTlJRzVsWjJGMFpTQS9JQ2NuSURvZ0p5RW5PMXh1SUNCemQybDBZMmdnS0dSaGRHRlVlWEJsS1NCN1hHNGdJQ0FnWTJGelpTQW5iblZzYkNjNklISmxkSFZ5YmlCa1lYUmhJQ3NnUlZGVlFVd2dLeUFuYm5Wc2JDYzdYRzRnSUNBZ1kyRnpaU0FuWVhKeVlYa25PaUJ5WlhSMWNtNGdUMHNnS3lBblFYSnlZWGt1YVhOQmNuSmhlU2duSUNzZ1pHRjBZU0FySUNjcEp6dGNiaUFnSUNCallYTmxJQ2R2WW1wbFkzUW5PaUJ5WlhSMWNtNGdKeWduSUNzZ1Qwc2dLeUJrWVhSaElDc2dRVTVFSUN0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0ozUjVjR1Z2WmlBbklDc2daR0YwWVNBcklFVlJWVUZNSUNzZ0oxd2liMkpxWldOMFhDSW5JQ3NnUVU1RUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdUazlVSUNzZ0owRnljbUY1TG1selFYSnlZWGtvSnlBcklHUmhkR0VnS3lBbktTa25PMXh1SUNBZ0lHTmhjMlVnSjJsdWRHVm5aWEluT2lCeVpYUjFjbTRnSnloMGVYQmxiMllnSnlBcklHUmhkR0VnS3lCRlVWVkJUQ0FySUNkY0ltNTFiV0psY2x3aUp5QXJJRUZPUkNBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQk9UMVFnS3lBbktDY2dLeUJrWVhSaElDc2dKeUFsSURFcEp5QXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JCVGtRZ0t5QmtZWFJoSUNzZ1JWRlZRVXdnS3lCa1lYUmhJQ3NnSnlrbk8xeHVJQ0FnSUdSbFptRjFiSFE2SUhKbGRIVnliaUFuZEhsd1pXOW1JQ2NnS3lCa1lYUmhJQ3NnUlZGVlFVd2dLeUFuWENJbklDc2daR0YwWVZSNWNHVWdLeUFuWENJbk8xeHVJQ0I5WEc1OVhHNWNibHh1Wm5WdVkzUnBiMjRnWTJobFkydEVZWFJoVkhsd1pYTW9aR0YwWVZSNWNHVnpMQ0JrWVhSaEtTQjdYRzRnSUhOM2FYUmphQ0FvWkdGMFlWUjVjR1Z6TG14bGJtZDBhQ2tnZTF4dUlDQWdJR05oYzJVZ01Ub2djbVYwZFhKdUlHTm9aV05yUkdGMFlWUjVjR1VvWkdGMFlWUjVjR1Z6V3pCZExDQmtZWFJoTENCMGNuVmxLVHRjYmlBZ0lDQmtaV1poZFd4ME9seHVJQ0FnSUNBZ2RtRnlJR052WkdVZ1BTQW5KenRjYmlBZ0lDQWdJSFpoY2lCMGVYQmxjeUE5SUhSdlNHRnphQ2hrWVhSaFZIbHdaWE1wTzF4dUlDQWdJQ0FnYVdZZ0tIUjVjR1Z6TG1GeWNtRjVJQ1ltSUhSNWNHVnpMbTlpYW1WamRDa2dlMXh1SUNBZ0lDQWdJQ0JqYjJSbElEMGdkSGx3WlhNdWJuVnNiQ0EvSUNjb0p6b2dKeWdoSnlBcklHUmhkR0VnS3lBbklIeDhJQ2M3WEc0Z0lDQWdJQ0FnSUdOdlpHVWdLejBnSjNSNWNHVnZaaUFuSUNzZ1pHRjBZU0FySUNjZ0lUMDlJRndpYjJKcVpXTjBYQ0lwSnp0Y2JpQWdJQ0FnSUNBZ1pHVnNaWFJsSUhSNWNHVnpMbTUxYkd3N1hHNGdJQ0FnSUNBZ0lHUmxiR1YwWlNCMGVYQmxjeTVoY25KaGVUdGNiaUFnSUNBZ0lDQWdaR1ZzWlhSbElIUjVjR1Z6TG05aWFtVmpkRHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJR2xtSUNoMGVYQmxjeTV1ZFcxaVpYSXBJR1JsYkdWMFpTQjBlWEJsY3k1cGJuUmxaMlZ5TzF4dUlDQWdJQ0FnWm05eUlDaDJZWElnZENCcGJpQjBlWEJsY3lsY2JpQWdJQ0FnSUNBZ1kyOWtaU0FyUFNBb1kyOWtaU0EvSUNjZ0ppWWdKeUE2SUNjbklDa2dLeUJqYUdWamEwUmhkR0ZVZVhCbEtIUXNJR1JoZEdFc0lIUnlkV1VwTzF4dVhHNGdJQ0FnSUNCeVpYUjFjbTRnWTI5a1pUdGNiaUFnZlZ4dWZWeHVYRzVjYm5aaGNpQkRUMFZTUTBWZlZFOWZWRmxRUlZNZ1BTQjBiMGhoYzJnb1d5QW5jM1J5YVc1bkp5d2dKMjUxYldKbGNpY3NJQ2RwYm5SbFoyVnlKeXdnSjJKdmIyeGxZVzRuTENBbmJuVnNiQ2NnWFNrN1hHNW1kVzVqZEdsdmJpQmpiMlZ5WTJWVWIxUjVjR1Z6S0c5d2RHbHZia052WlhKalpWUjVjR1Z6TENCa1lYUmhWSGx3WlhNcElIdGNiaUFnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWkdGMFlWUjVjR1Z6S1NrZ2UxeHVJQ0FnSUhaaGNpQjBlWEJsY3lBOUlGdGRPMXh1SUNBZ0lHWnZjaUFvZG1GeUlHazlNRHNnYVR4a1lYUmhWSGx3WlhNdWJHVnVaM1JvT3lCcEt5c3BJSHRjYmlBZ0lDQWdJSFpoY2lCMElEMGdaR0YwWVZSNWNHVnpXMmxkTzF4dUlDQWdJQ0FnYVdZZ0tFTlBSVkpEUlY5VVQxOVVXVkJGVTF0MFhTa2dkSGx3WlhOYmRIbHdaWE11YkdWdVozUm9YU0E5SUhRN1hHNGdJQ0FnSUNCbGJITmxJR2xtSUNodmNIUnBiMjVEYjJWeVkyVlVlWEJsY3lBOVBUMGdKMkZ5Y21GNUp5QW1KaUIwSUQwOVBTQW5ZWEp5WVhrbktTQjBlWEJsYzF0MGVYQmxjeTVzWlc1bmRHaGRJRDBnZER0Y2JpQWdJQ0I5WEc0Z0lDQWdhV1lnS0hSNWNHVnpMbXhsYm1kMGFDa2djbVYwZFhKdUlIUjVjR1Z6TzF4dUlDQjlJR1ZzYzJVZ2FXWWdLRU5QUlZKRFJWOVVUMTlVV1ZCRlUxdGtZWFJoVkhsd1pYTmRLU0I3WEc0Z0lDQWdjbVYwZFhKdUlGdGtZWFJoVkhsd1pYTmRPMXh1SUNCOUlHVnNjMlVnYVdZZ0tHOXdkR2x2YmtOdlpYSmpaVlI1Y0dWeklEMDlQU0FuWVhKeVlYa25JQ1ltSUdSaGRHRlVlWEJsY3lBOVBUMGdKMkZ5Y21GNUp5a2dlMXh1SUNBZ0lISmxkSFZ5YmlCYkoyRnljbUY1SjEwN1hHNGdJSDFjYm4xY2JseHVYRzVtZFc1amRHbHZiaUIwYjBoaGMyZ29ZWEp5S1NCN1hHNGdJSFpoY2lCb1lYTm9JRDBnZTMwN1hHNGdJR1p2Y2lBb2RtRnlJR2s5TURzZ2FUeGhjbkl1YkdWdVozUm9PeUJwS3lzcElHaGhjMmhiWVhKeVcybGRYU0E5SUhSeWRXVTdYRzRnSUhKbGRIVnliaUJvWVhOb08xeHVmVnh1WEc1Y2JuWmhjaUJKUkVWT1ZFbEdTVVZTSUQwZ0wxNWJZUzE2SkY5ZFcyRXRlaVJmTUMwNVhTb2tMMms3WEc1MllYSWdVMGxPUjB4RlgxRlZUMVJGSUQwZ0x5ZDhYRnhjWEM5bk8xeHVablZ1WTNScGIyNGdaMlYwVUhKdmNHVnlkSGtvYTJWNUtTQjdYRzRnSUhKbGRIVnliaUIwZVhCbGIyWWdhMlY1SUQwOUlDZHVkVzFpWlhJblhHNGdJQ0FnSUNBZ0lDQWdQeUFuV3ljZ0t5QnJaWGtnS3lBblhTZGNiaUFnSUNBZ0lDQWdJQ0E2SUVsRVJVNVVTVVpKUlZJdWRHVnpkQ2hyWlhrcFhHNGdJQ0FnSUNBZ0lDQWdJQ0EvSUNjdUp5QXJJR3RsZVZ4dUlDQWdJQ0FnSUNBZ0lDQWdPaUJjSWxzblhDSWdLeUJsYzJOaGNHVlJkVzkwWlhNb2EyVjVLU0FySUZ3aUoxMWNJanRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJsYzJOaGNHVlJkVzkwWlhNb2MzUnlLU0I3WEc0Z0lISmxkSFZ5YmlCemRISXVjbVZ3YkdGalpTaFRTVTVIVEVWZlVWVlBWRVVzSUNkY1hGeGNKQ1luS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdMbkpsY0d4aFkyVW9MMXhjYmk5bkxDQW5YRnhjWEc0bktWeHVJQ0FnSUNBZ0lDQWdJQ0FnTG5KbGNHeGhZMlVvTDF4Y2NpOW5MQ0FuWEZ4Y1hISW5LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0xuSmxjR3hoWTJVb0wxeGNaaTluTENBblhGeGNYR1luS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdMbkpsY0d4aFkyVW9MMXhjZEM5bkxDQW5YRnhjWEhRbktUdGNibjFjYmx4dVhHNW1kVzVqZEdsdmJpQjJZWEpQWTJOMWNtVnVZMlZ6S0hOMGNpd2daR0YwWVZaaGNpa2dlMXh1SUNCa1lYUmhWbUZ5SUNzOUlDZGJYakF0T1Ywbk8xeHVJQ0IyWVhJZ2JXRjBZMmhsY3lBOUlITjBjaTV0WVhSamFDaHVaWGNnVW1WblJYaHdLR1JoZEdGV1lYSXNJQ2RuSnlrcE8xeHVJQ0J5WlhSMWNtNGdiV0YwWTJobGN5QS9JRzFoZEdOb1pYTXViR1Z1WjNSb0lEb2dNRHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUIyWVhKU1pYQnNZV05sS0hOMGNpd2daR0YwWVZaaGNpd2daWGh3Y2lrZ2UxeHVJQ0JrWVhSaFZtRnlJQ3M5SUNjb1cxNHdMVGxkS1NjN1hHNGdJR1Y0Y0hJZ1BTQmxlSEJ5TG5KbGNHeGhZMlVvTDF4Y0pDOW5MQ0FuSkNRa0pDY3BPMXh1SUNCeVpYUjFjbTRnYzNSeUxuSmxjR3hoWTJVb2JtVjNJRkpsWjBWNGNDaGtZWFJoVm1GeUxDQW5aeWNwTENCbGVIQnlJQ3NnSnlReEp5azdYRzU5WEc1Y2JseHVkbUZ5SUVWTlVGUlpYMFZNVTBVZ1BTQXZaV3h6WlZ4Y2N5cDdYRnh6S24wdloxeHVJQ0FzSUVWTlVGUlpYMGxHWDA1UFgwVk1VMFVnUFNBdmFXWmNYSE1xWEZ3b1cxNHBYU3RjWENsY1hITXFYRng3WEZ4ektseGNmU2cvSVZ4Y2N5cGxiSE5sS1M5blhHNGdJQ3dnUlUxUVZGbGZTVVpmVjBsVVNGOUZURk5GSUQwZ0wybG1YRnh6S2x4Y0tDaGJYaWxkS3lsY1hDbGNYSE1xWEZ4N1hGeHpLbHhjZlZ4Y2N5cGxiSE5sS0Q4aFhGeHpLbWxtS1M5bk8xeHVablZ1WTNScGIyNGdZMnhsWVc1VmNFTnZaR1VvYjNWMEtTQjdYRzRnSUhKbGRIVnliaUJ2ZFhRdWNtVndiR0ZqWlNoRlRWQlVXVjlGVEZORkxDQW5KeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDNXlaWEJzWVdObEtFVk5VRlJaWDBsR1gwNVBYMFZNVTBVc0lDY25LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0xuSmxjR3hoWTJVb1JVMVFWRmxmU1VaZlYwbFVTRjlGVEZORkxDQW5hV1lnS0NFb0pERXBLU2NwTzF4dWZWeHVYRzVjYm5aaGNpQkZVbEpQVWxOZlVrVkhSVmhRSUQwZ0wxdGVkbHhjTGwxbGNuSnZjbk12WjF4dUlDQXNJRkpGVFU5V1JWOUZVbEpQVWxNZ1BTQXZkbUZ5SUdWeWNtOXljeUE5SURBN2ZIWmhjaUIyUlhKeWIzSnpJRDBnYm5Wc2JEdDhkbUZzYVdSaGRHVXVaWEp5YjNKeklEMGdka1Z5Y205eWN6c3ZaMXh1SUNBc0lGSkZUVTlXUlY5RlVsSlBVbE5mUVZOWlRrTWdQU0F2ZG1GeUlHVnljbTl5Y3lBOUlEQTdmSFpoY2lCMlJYSnliM0p6SUQwZ2JuVnNiRHN2WjF4dUlDQXNJRkpGVkZWU1RsOVdRVXhKUkNBOUlDZHlaWFIxY200Z1pYSnliM0p6SUQwOVBTQXdPeWRjYmlBZ0xDQlNSVlJWVWs1ZlZGSlZSU0E5SUNkMllXeHBaR0YwWlM1bGNuSnZjbk1nUFNCdWRXeHNPeUJ5WlhSMWNtNGdkSEoxWlRzblhHNGdJQ3dnVWtWVVZWSk9YMEZUV1U1RElEMGdMMmxtSUZ4Y0tHVnljbTl5Y3lBOVBUMGdNRnhjS1NCeVpYUjFjbTRnWkdGMFlUdGNYSE1xWld4elpTQjBhSEp2ZHlCdVpYY2dWbUZzYVdSaGRHbHZia1Z5Y205eVhGd29ka1Z5Y205eWMxeGNLVHN2WEc0Z0lDd2dVa1ZVVlZKT1gwUkJWRUZmUVZOWlRrTWdQU0FuY21WMGRYSnVJR1JoZEdFN0oxeHVJQ0FzSUZKUFQxUkVRVlJCWDFKRlIwVllVQ0E5SUM5YlhrRXRXbUV0ZWw4a1hYSnZiM1JFWVhSaFcxNUJMVnBoTFhvd0xUbGZKRjB2WjF4dUlDQXNJRkpGVFU5V1JWOVNUMDlVUkVGVVFTQTlJQzlwWmlCY1hDaHliMjkwUkdGMFlTQTlQVDBnZFc1a1pXWnBibVZrWEZ3cElISnZiM1JFWVhSaElEMGdaR0YwWVRzdk8xeHVYRzVtZFc1amRHbHZiaUJtYVc1aGJFTnNaV0Z1VlhCRGIyUmxLRzkxZEN3Z1lYTjVibU1wSUh0Y2JpQWdkbUZ5SUcxaGRHTm9aWE1nUFNCdmRYUXViV0YwWTJnb1JWSlNUMUpUWDFKRlIwVllVQ2s3WEc0Z0lHbG1JQ2h0WVhSamFHVnpJQ1ltSUcxaGRHTm9aWE11YkdWdVozUm9JRDA5SURJcElIdGNiaUFnSUNCdmRYUWdQU0JoYzNsdVkxeHVJQ0FnSUNBZ0lDQWdJRDhnYjNWMExuSmxjR3hoWTJVb1VrVk5UMVpGWDBWU1VrOVNVMTlCVTFsT1F5d2dKeWNwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1Y21Wd2JHRmpaU2hTUlZSVlVrNWZRVk5aVGtNc0lGSkZWRlZTVGw5RVFWUkJYMEZUV1U1REtWeHVJQ0FnSUNBZ0lDQWdJRG9nYjNWMExuSmxjR3hoWTJVb1VrVk5UMVpGWDBWU1VrOVNVeXdnSnljcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdWNtVndiR0ZqWlNoU1JWUlZVazVmVmtGTVNVUXNJRkpGVkZWU1RsOVVVbFZGS1R0Y2JpQWdmVnh1WEc0Z0lHMWhkR05vWlhNZ1BTQnZkWFF1YldGMFkyZ29VazlQVkVSQlZFRmZVa1ZIUlZoUUtUdGNiaUFnYVdZZ0tDRnRZWFJqYUdWeklIeDhJRzFoZEdOb1pYTXViR1Z1WjNSb0lDRTlQU0F6S1NCeVpYUjFjbTRnYjNWME8xeHVJQ0J5WlhSMWNtNGdiM1YwTG5KbGNHeGhZMlVvVWtWTlQxWkZYMUpQVDFSRVFWUkJMQ0FuSnlrN1hHNTlYRzVjYmx4dVpuVnVZM1JwYjI0Z2MyTm9aVzFoU0dGelVuVnNaWE1vYzJOb1pXMWhMQ0J5ZFd4bGN5a2dlMXh1SUNCcFppQW9kSGx3Wlc5bUlITmphR1Z0WVNBOVBTQW5ZbTl2YkdWaGJpY3BJSEpsZEhWeWJpQWhjMk5vWlcxaE8xeHVJQ0JtYjNJZ0tIWmhjaUJyWlhrZ2FXNGdjMk5vWlcxaEtTQnBaaUFvY25Wc1pYTmJhMlY1WFNrZ2NtVjBkWEp1SUhSeWRXVTdYRzU5WEc1Y2JseHVablZ1WTNScGIyNGdjMk5vWlcxaFNHRnpVblZzWlhORmVHTmxjSFFvYzJOb1pXMWhMQ0J5ZFd4bGN5d2daWGhqWlhCMFMyVjVkMjl5WkNrZ2UxeHVJQ0JwWmlBb2RIbHdaVzltSUhOamFHVnRZU0E5UFNBblltOXZiR1ZoYmljcElISmxkSFZ5YmlBaGMyTm9aVzFoSUNZbUlHVjRZMlZ3ZEV0bGVYZHZjbVFnSVQwZ0oyNXZkQ2M3WEc0Z0lHWnZjaUFvZG1GeUlHdGxlU0JwYmlCelkyaGxiV0VwSUdsbUlDaHJaWGtnSVQwZ1pYaGpaWEIwUzJWNWQyOXlaQ0FtSmlCeWRXeGxjMXRyWlhsZEtTQnlaWFIxY200Z2RISjFaVHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUIwYjFGMWIzUmxaRk4wY21sdVp5aHpkSElwSUh0Y2JpQWdjbVYwZFhKdUlDZGNYQ2NuSUNzZ1pYTmpZWEJsVVhWdmRHVnpLSE4wY2lrZ0t5QW5YRnduSnp0Y2JuMWNibHh1WEc1bWRXNWpkR2x2YmlCblpYUlFZWFJvUlhod2NpaGpkWEp5Wlc1MFVHRjBhQ3dnWlhod2Npd2dhbk52YmxCdmFXNTBaWEp6TENCcGMwNTFiV0psY2lrZ2UxeHVJQ0IyWVhJZ2NHRjBhQ0E5SUdwemIyNVFiMmx1ZEdWeWN5QXZMeUJtWVd4elpTQmllU0JrWldaaGRXeDBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lEOGdKMXhjSnk5Y1hDY2dLeUFuSUNzZ1pYaHdjaUFySUNocGMwNTFiV0psY2lBL0lDY25JRG9nSnk1eVpYQnNZV05sS0M5K0wyY3NJRnhjSjM0d1hGd25LUzV5WlhCc1lXTmxLQzljWEZ4Y0x5OW5MQ0JjWENkK01WeGNKeWtuS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0E2SUNocGMwNTFiV0psY2lBL0lDZGNYQ2RiWEZ3bklDc2dKeUFySUdWNGNISWdLeUFuSUNzZ1hGd25YVnhjSnljZ09pQW5YRnduVzF4Y1hGeGNYQ2RjWENjZ0t5QW5JQ3NnWlhod2NpQXJJQ2NnS3lCY1hDZGNYRnhjWEZ3blhWeGNKeWNwTzF4dUlDQnlaWFIxY200Z2FtOXBibEJoZEdoektHTjFjbkpsYm5SUVlYUm9MQ0J3WVhSb0tUdGNibjFjYmx4dVhHNW1kVzVqZEdsdmJpQm5aWFJRWVhSb0tHTjFjbkpsYm5SUVlYUm9MQ0J3Y205d0xDQnFjMjl1VUc5cGJuUmxjbk1wSUh0Y2JpQWdkbUZ5SUhCaGRHZ2dQU0JxYzI5dVVHOXBiblJsY25NZ0x5OGdabUZzYzJVZ1lua2daR1ZtWVhWc2RGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBL0lIUnZVWFZ2ZEdWa1UzUnlhVzVuS0Njdkp5QXJJR1Z6WTJGd1pVcHpiMjVRYjJsdWRHVnlLSEJ5YjNBcEtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBNklIUnZVWFZ2ZEdWa1UzUnlhVzVuS0dkbGRGQnliM0JsY25SNUtIQnliM0FwS1R0Y2JpQWdjbVYwZFhKdUlHcHZhVzVRWVhSb2N5aGpkWEp5Wlc1MFVHRjBhQ3dnY0dGMGFDazdYRzU5WEc1Y2JseHVkbUZ5SUVwVFQwNWZVRTlKVGxSRlVpQTlJQzllWEZ3dktEODZXMTUrWFh4K01IeCtNU2txSkM4N1hHNTJZWElnVWtWTVFWUkpWa1ZmU2xOUFRsOVFUMGxPVkVWU0lEMGdMMTRvV3pBdE9WMHJLU2dqZkZ4Y0x5Zy9PbHRlZmwxOGZqQjhmakVwS2lrL0pDODdYRzVtZFc1amRHbHZiaUJuWlhSRVlYUmhLQ1JrWVhSaExDQnNkbXdzSUhCaGRHaHpLU0I3WEc0Z0lIWmhjaUIxY0N3Z2FuTnZibEJ2YVc1MFpYSXNJR1JoZEdFc0lHMWhkR05vWlhNN1hHNGdJR2xtSUNna1pHRjBZU0E5UFQwZ0p5Y3BJSEpsZEhWeWJpQW5jbTl2ZEVSaGRHRW5PMXh1SUNCcFppQW9KR1JoZEdGYk1GMGdQVDBnSnk4bktTQjdYRzRnSUNBZ2FXWWdLQ0ZLVTA5T1gxQlBTVTVVUlZJdWRHVnpkQ2drWkdGMFlTa3BJSFJvY205M0lHNWxkeUJGY25KdmNpZ25TVzUyWVd4cFpDQktVMDlPTFhCdmFXNTBaWEk2SUNjZ0t5QWtaR0YwWVNrN1hHNGdJQ0FnYW5OdmJsQnZhVzUwWlhJZ1BTQWtaR0YwWVR0Y2JpQWdJQ0JrWVhSaElEMGdKM0p2YjNSRVlYUmhKenRjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0J0WVhSamFHVnpJRDBnSkdSaGRHRXViV0YwWTJnb1VrVk1RVlJKVmtWZlNsTlBUbDlRVDBsT1ZFVlNLVHRjYmlBZ0lDQnBaaUFvSVcxaGRHTm9aWE1wSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduU1c1MllXeHBaQ0JLVTA5T0xYQnZhVzUwWlhJNklDY2dLeUFrWkdGMFlTazdYRzRnSUNBZ2RYQWdQU0FyYldGMFkyaGxjMXN4WFR0Y2JpQWdJQ0JxYzI5dVVHOXBiblJsY2lBOUlHMWhkR05vWlhOYk1sMDdYRzRnSUNBZ2FXWWdLR3B6YjI1UWIybHVkR1Z5SUQwOUlDY2pKeWtnZTF4dUlDQWdJQ0FnYVdZZ0tIVndJRDQ5SUd4MmJDa2dkR2h5YjNjZ2JtVjNJRVZ5Y205eUtDZERZVzV1YjNRZ1lXTmpaWE56SUhCeWIzQmxjblI1TDJsdVpHVjRJQ2NnS3lCMWNDQXJJQ2NnYkdWMlpXeHpJSFZ3TENCamRYSnlaVzUwSUd4bGRtVnNJR2x6SUNjZ0t5QnNkbXdwTzF4dUlDQWdJQ0FnY21WMGRYSnVJSEJoZEdoelcyeDJiQ0F0SUhWd1hUdGNiaUFnSUNCOVhHNWNiaUFnSUNCcFppQW9kWEFnUGlCc2Rtd3BJSFJvY205M0lHNWxkeUJGY25KdmNpZ25RMkZ1Ym05MElHRmpZMlZ6Y3lCa1lYUmhJQ2NnS3lCMWNDQXJJQ2NnYkdWMlpXeHpJSFZ3TENCamRYSnlaVzUwSUd4bGRtVnNJR2x6SUNjZ0t5QnNkbXdwTzF4dUlDQWdJR1JoZEdFZ1BTQW5aR0YwWVNjZ0t5QW9LR3gyYkNBdElIVndLU0I4ZkNBbkp5azdYRzRnSUNBZ2FXWWdLQ0ZxYzI5dVVHOXBiblJsY2lrZ2NtVjBkWEp1SUdSaGRHRTdYRzRnSUgxY2JseHVJQ0IyWVhJZ1pYaHdjaUE5SUdSaGRHRTdYRzRnSUhaaGNpQnpaV2R0Wlc1MGN5QTlJR3B6YjI1UWIybHVkR1Z5TG5Od2JHbDBLQ2N2SnlrN1hHNGdJR1p2Y2lBb2RtRnlJR2s5TURzZ2FUeHpaV2R0Wlc1MGN5NXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJSFpoY2lCelpXZHRaVzUwSUQwZ2MyVm5iV1Z1ZEhOYmFWMDdYRzRnSUNBZ2FXWWdLSE5sWjIxbGJuUXBJSHRjYmlBZ0lDQWdJR1JoZEdFZ0t6MGdaMlYwVUhKdmNHVnlkSGtvZFc1bGMyTmhjR1ZLYzI5dVVHOXBiblJsY2loelpXZHRaVzUwS1NrN1hHNGdJQ0FnSUNCbGVIQnlJQ3M5SUNjZ0ppWWdKeUFySUdSaGRHRTdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lISmxkSFZ5YmlCbGVIQnlPMXh1ZlZ4dVhHNWNibVoxYm1OMGFXOXVJR3B2YVc1UVlYUm9jeUFvWVN3Z1lpa2dlMXh1SUNCcFppQW9ZU0E5UFNBblhDSmNJaWNwSUhKbGRIVnliaUJpTzF4dUlDQnlaWFIxY200Z0tHRWdLeUFuSUNzZ0p5QXJJR0lwTG5KbGNHeGhZMlVvTHljZ1hGd3JJQ2N2Wnl3Z0p5Y3BPMXh1ZlZ4dVhHNWNibVoxYm1OMGFXOXVJSFZ1WlhOallYQmxSbkpoWjIxbGJuUW9jM1J5S1NCN1hHNGdJSEpsZEhWeWJpQjFibVZ6WTJGd1pVcHpiMjVRYjJsdWRHVnlLR1JsWTI5a1pWVlNTVU52YlhCdmJtVnVkQ2h6ZEhJcEtUdGNibjFjYmx4dVhHNW1kVzVqZEdsdmJpQmxjMk5oY0dWR2NtRm5iV1Z1ZENoemRISXBJSHRjYmlBZ2NtVjBkWEp1SUdWdVkyOWtaVlZTU1VOdmJYQnZibVZ1ZENobGMyTmhjR1ZLYzI5dVVHOXBiblJsY2loemRISXBLVHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUJsYzJOaGNHVktjMjl1VUc5cGJuUmxjaWh6ZEhJcElIdGNiaUFnY21WMGRYSnVJSE4wY2k1eVpYQnNZV05sS0M5K0wyY3NJQ2QrTUNjcExuSmxjR3hoWTJVb0wxeGNMeTluTENBbmZqRW5LVHRjYm4xY2JseHVYRzVtZFc1amRHbHZiaUIxYm1WelkyRndaVXB6YjI1UWIybHVkR1Z5S0hOMGNpa2dlMXh1SUNCeVpYUjFjbTRnYzNSeUxuSmxjR3hoWTJVb0wzNHhMMmNzSUNjdkp5a3VjbVZ3YkdGalpTZ3ZmakF2Wnl3Z0ozNG5LVHRjYm4xY2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9jb21waWxlL3V0aWwuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdC5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9fbGltaXQoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcgJztcXFxcbiAgdmFyICRsdmwgPSBpdC5sZXZlbDtcXFxcbiAgdmFyICRkYXRhTHZsID0gaXQuZGF0YUxldmVsO1xcXFxuICB2YXIgJHNjaGVtYSA9IGl0LnNjaGVtYVska2V5d29yZF07XFxcXG4gIHZhciAkc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyBpdC51dGlsLmdldFByb3BlcnR5KCRrZXl3b3JkKTtcXFxcbiAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICB2YXIgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgdmFyICRlcnJvcktleXdvcmQ7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXFxcXG4gICAgJHNjaGVtYVZhbHVlO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcXFxcbiAgfVxcXFxuICB2YXIgJGlzTWF4ID0gJGtleXdvcmQgPT0gJ21heGltdW0nLFxcXFxuICAgICRleGNsdXNpdmVLZXl3b3JkID0gJGlzTWF4ID8gJ2V4Y2x1c2l2ZU1heGltdW0nIDogJ2V4Y2x1c2l2ZU1pbmltdW0nLFxcXFxuICAgICRzY2hlbWFFeGNsID0gaXQuc2NoZW1hWyRleGNsdXNpdmVLZXl3b3JkXSxcXFxcbiAgICAkaXNEYXRhRXhjbCA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYUV4Y2wgJiYgJHNjaGVtYUV4Y2wuJGRhdGEsXFxcXG4gICAgJG9wID0gJGlzTWF4ID8gJzwnIDogJz4nLFxcXFxuICAgICRub3RPcCA9ICRpc01heCA/ICc+JyA6ICc8JyxcXFxcbiAgICAkZXJyb3JLZXl3b3JkID0gdW5kZWZpbmVkO1xcXFxuICBpZiAoJGlzRGF0YUV4Y2wpIHtcXFxcbiAgICB2YXIgJHNjaGVtYVZhbHVlRXhjbCA9IGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hRXhjbC4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSxcXFxcbiAgICAgICRleGNsdXNpdmUgPSAnZXhjbHVzaXZlJyArICRsdmwsXFxcXG4gICAgICAkZXhjbFR5cGUgPSAnZXhjbFR5cGUnICsgJGx2bCxcXFxcbiAgICAgICRleGNsSXNOdW1iZXIgPSAnZXhjbElzTnVtYmVyJyArICRsdmwsXFxcXG4gICAgICAkb3BFeHByID0gJ29wJyArICRsdmwsXFxcXG4gICAgICAkb3BTdHIgPSAnXFxcXFxcXFwnICsgJyArICRvcEV4cHIgKyAnICsgXFxcXFxcXFwnJztcXFxcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hRXhjbCcgKyAoJGx2bCkgKyAnID0gJyArICgkc2NoZW1hVmFsdWVFeGNsKSArICc7ICc7XFxcXG4gICAgJHNjaGVtYVZhbHVlRXhjbCA9ICdzY2hlbWFFeGNsJyArICRsdmw7XFxcXG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJGV4Y2x1c2l2ZSkgKyAnOyB2YXIgJyArICgkZXhjbFR5cGUpICsgJyA9IHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZUV4Y2wpICsgJzsgaWYgKCcgKyAoJGV4Y2xUeXBlKSArICcgIT0gXFxcXFxcXFwnYm9vbGVhblxcXFxcXFxcJyAmJiAnICsgKCRleGNsVHlwZSkgKyAnICE9IFxcXFxcXFxcJ3VuZGVmaW5lZFxcXFxcXFxcJyAmJiAnICsgKCRleGNsVHlwZSkgKyAnICE9IFxcXFxcXFxcJ251bWJlclxcXFxcXFxcJykgeyAnO1xcXFxuICAgIHZhciAkZXJyb3JLZXl3b3JkID0gJGV4Y2x1c2l2ZUtleXdvcmQ7XFxcXG4gICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJGVycm9yS2V5d29yZCB8fCAnX2V4Y2x1c2l2ZUxpbWl0JykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczoge30gJztcXFxcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJycgKyAoJGV4Y2x1c2l2ZUtleXdvcmQpICsgJyBzaG91bGQgYmUgYm9vbGVhblxcXFxcXFxcJyAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgfSAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgIH1cXFxcbiAgICB2YXIgX19lcnIgPSBvdXQ7XFxcXG4gICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgfSBlbHNlIGlmICggJztcXFxcbiAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgb3V0ICs9ICcgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPSBcXFxcXFxcXCdudW1iZXJcXFxcXFxcXCcpIHx8ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnICcgKyAoJGV4Y2xUeXBlKSArICcgPT0gXFxcXFxcXFwnbnVtYmVyXFxcXFxcXFwnID8gKCAoJyArICgkZXhjbHVzaXZlKSArICcgPSAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnID09PSB1bmRlZmluZWQgfHwgJyArICgkc2NoZW1hVmFsdWVFeGNsKSArICcgJyArICgkb3ApICsgJz0gJyArICgkc2NoZW1hVmFsdWUpICsgJykgPyAnICsgKCRkYXRhKSArICcgJyArICgkbm90T3ApICsgJz0gJyArICgkc2NoZW1hVmFsdWVFeGNsKSArICcgOiAnICsgKCRkYXRhKSArICcgJyArICgkbm90T3ApICsgJyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICkgOiAoICgnICsgKCRleGNsdXNpdmUpICsgJyA9ICcgKyAoJHNjaGVtYVZhbHVlRXhjbCkgKyAnID09PSB0cnVlKSA/ICcgKyAoJGRhdGEpICsgJyAnICsgKCRub3RPcCkgKyAnPSAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnIDogJyArICgkZGF0YSkgKyAnICcgKyAoJG5vdE9wKSArICcgJyArICgkc2NoZW1hVmFsdWUpICsgJyApIHx8ICcgKyAoJGRhdGEpICsgJyAhPT0gJyArICgkZGF0YSkgKyAnKSB7IHZhciBvcCcgKyAoJGx2bCkgKyAnID0gJyArICgkZXhjbHVzaXZlKSArICcgPyBcXFxcXFxcXCcnICsgKCRvcCkgKyAnXFxcXFxcXFwnIDogXFxcXFxcXFwnJyArICgkb3ApICsgJz1cXFxcXFxcXCc7JztcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICB2YXIgJGV4Y2xJc051bWJlciA9IHR5cGVvZiAkc2NoZW1hRXhjbCA9PSAnbnVtYmVyJyxcXFxcbiAgICAgICRvcFN0ciA9ICRvcDtcXFxcbiAgICBpZiAoJGV4Y2xJc051bWJlciAmJiAkaXNEYXRhKSB7XFxcXG4gICAgICB2YXIgJG9wRXhwciA9ICdcXFxcXFxcXCcnICsgJG9wU3RyICsgJ1xcXFxcXFxcJyc7XFxcXG4gICAgICBvdXQgKz0gJyBpZiAoICc7XFxcXG4gICAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcXFxcXFxcJ251bWJlclxcXFxcXFxcJykgfHwgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnICggJyArICgkc2NoZW1hVmFsdWUpICsgJyA9PT0gdW5kZWZpbmVkIHx8ICcgKyAoJHNjaGVtYUV4Y2wpICsgJyAnICsgKCRvcCkgKyAnPSAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnID8gJyArICgkZGF0YSkgKyAnICcgKyAoJG5vdE9wKSArICc9ICcgKyAoJHNjaGVtYUV4Y2wpICsgJyA6ICcgKyAoJGRhdGEpICsgJyAnICsgKCRub3RPcCkgKyAnICcgKyAoJHNjaGVtYVZhbHVlKSArICcgKSB8fCAnICsgKCRkYXRhKSArICcgIT09ICcgKyAoJGRhdGEpICsgJykgeyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBpZiAoJGV4Y2xJc051bWJlciAmJiAkc2NoZW1hID09PSB1bmRlZmluZWQpIHtcXFxcbiAgICAgICAgJGV4Y2x1c2l2ZSA9IHRydWU7XFxcXG4gICAgICAgICRlcnJvcktleXdvcmQgPSAkZXhjbHVzaXZlS2V5d29yZDtcXFxcbiAgICAgICAgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGV4Y2x1c2l2ZUtleXdvcmQ7XFxcXG4gICAgICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWFFeGNsO1xcXFxuICAgICAgICAkbm90T3AgKz0gJz0nO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgaWYgKCRleGNsSXNOdW1iZXIpICRzY2hlbWFWYWx1ZSA9IE1hdGhbJGlzTWF4ID8gJ21pbicgOiAnbWF4J10oJHNjaGVtYUV4Y2wsICRzY2hlbWEpO1xcXFxuICAgICAgICBpZiAoJHNjaGVtYUV4Y2wgPT09ICgkZXhjbElzTnVtYmVyID8gJHNjaGVtYVZhbHVlIDogdHJ1ZSkpIHtcXFxcbiAgICAgICAgICAkZXhjbHVzaXZlID0gdHJ1ZTtcXFxcbiAgICAgICAgICAkZXJyb3JLZXl3b3JkID0gJGV4Y2x1c2l2ZUtleXdvcmQ7XFxcXG4gICAgICAgICAgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGV4Y2x1c2l2ZUtleXdvcmQ7XFxcXG4gICAgICAgICAgJG5vdE9wICs9ICc9JztcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAkZXhjbHVzaXZlID0gZmFsc2U7XFxcXG4gICAgICAgICAgJG9wU3RyICs9ICc9JztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgICAgdmFyICRvcEV4cHIgPSAnXFxcXFxcXFwnJyArICRvcFN0ciArICdcXFxcXFxcXCcnO1xcXFxuICAgICAgb3V0ICs9ICcgaWYgKCAnO1xcXFxuICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPSBcXFxcXFxcXCdudW1iZXJcXFxcXFxcXCcpIHx8ICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCRkYXRhKSArICcgJyArICgkbm90T3ApICsgJyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnIHx8ICcgKyAoJGRhdGEpICsgJyAhPT0gJyArICgkZGF0YSkgKyAnKSB7ICc7XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gICRlcnJvcktleXdvcmQgPSAkZXJyb3JLZXl3b3JkIHx8ICRrZXl3b3JkO1xcXFxuICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJGVycm9yS2V5d29yZCB8fCAnX2xpbWl0JykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBjb21wYXJpc29uOiAnICsgKCRvcEV4cHIpICsgJywgbGltaXQ6ICcgKyAoJHNjaGVtYVZhbHVlKSArICcsIGV4Y2x1c2l2ZTogJyArICgkZXhjbHVzaXZlKSArICcgfSAnO1xcXFxuICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXFxcXFxcXCdzaG91bGQgYmUgJyArICgkb3BTdHIpICsgJyAnO1xcXFxuICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgKyAnICsgKCRzY2hlbWFWYWx1ZSk7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYVZhbHVlKSArICdcXFxcXFxcXCcnO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogICc7XFxcXG4gICAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgICBvdXQgKz0gJ3ZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWEpO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgICAgICAgICAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgfSAnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHt9ICc7XFxcXG4gIH1cXFxcbiAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgIH1cXFxcbiAgfSBlbHNlIHtcXFxcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICcgfSAnO1xcXFxuICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgIG91dCArPSAnIGVsc2UgeyAnO1xcXFxuICB9XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OWZiR2x0YVhRdWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OHVMMjV2WkdWZmJXOWtkV3hsY3k5aGFuWXZiR2xpTDJSdmRHcHpMMTlzYVcxcGRDNXFjejlpWmpoa0lsMHNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJaWQxYzJVZ2MzUnlhV04wSnp0Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1puVnVZM1JwYjI0Z1oyVnVaWEpoZEdWZlgyeHBiV2wwS0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pYSnliM0pMWlhsM2IzSmtPMXh1SUNCMllYSWdKR1JoZEdFZ1BTQW5aR0YwWVNjZ0t5QW9KR1JoZEdGTWRtd2dmSHdnSnljcE8xeHVJQ0IyWVhJZ0pHbHpSR0YwWVNBOUlHbDBMbTl3ZEhNdUpHUmhkR0VnSmlZZ0pITmphR1Z0WVNBbUppQWtjMk5vWlcxaExpUmtZWFJoTEZ4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlR0Y2JpQWdhV1lnS0NScGMwUmhkR0VwSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ2MyTm9aVzFoSnlBcklDZ2tiSFpzS1NBcklDY2dQU0FuSUNzZ0tHbDBMblYwYVd3dVoyVjBSR0YwWVNna2MyTm9aVzFoTGlSa1lYUmhMQ0FrWkdGMFlVeDJiQ3dnYVhRdVpHRjBZVkJoZEdoQmNuSXBLU0FySUNjN0lDYzdYRzRnSUNBZ0pITmphR1Z0WVZaaGJIVmxJRDBnSjNOamFHVnRZU2NnS3lBa2JIWnNPMXh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlNBOUlDUnpZMmhsYldFN1hHNGdJSDFjYmlBZ2RtRnlJQ1JwYzAxaGVDQTlJQ1JyWlhsM2IzSmtJRDA5SUNkdFlYaHBiWFZ0Snl4Y2JpQWdJQ0FrWlhoamJIVnphWFpsUzJWNWQyOXlaQ0E5SUNScGMwMWhlQ0EvSUNkbGVHTnNkWE5wZG1WTllYaHBiWFZ0SnlBNklDZGxlR05zZFhOcGRtVk5hVzVwYlhWdEp5eGNiaUFnSUNBa2MyTm9aVzFoUlhoamJDQTlJR2wwTG5OamFHVnRZVnNrWlhoamJIVnphWFpsUzJWNWQyOXlaRjBzWEc0Z0lDQWdKR2x6UkdGMFlVVjRZMndnUFNCcGRDNXZjSFJ6TGlSa1lYUmhJQ1ltSUNSelkyaGxiV0ZGZUdOc0lDWW1JQ1J6WTJobGJXRkZlR05zTGlSa1lYUmhMRnh1SUNBZ0lDUnZjQ0E5SUNScGMwMWhlQ0EvSUNjOEp5QTZJQ2MrSnl4Y2JpQWdJQ0FrYm05MFQzQWdQU0FrYVhOTllYZ2dQeUFuUGljZ09pQW5QQ2NzWEc0Z0lDQWdKR1Z5Y205eVMyVjVkMjl5WkNBOUlIVnVaR1ZtYVc1bFpEdGNiaUFnYVdZZ0tDUnBjMFJoZEdGRmVHTnNLU0I3WEc0Z0lDQWdkbUZ5SUNSelkyaGxiV0ZXWVd4MVpVVjRZMndnUFNCcGRDNTFkR2xzTG1kbGRFUmhkR0VvSkhOamFHVnRZVVY0WTJ3dUpHUmhkR0VzSUNSa1lYUmhUSFpzTENCcGRDNWtZWFJoVUdGMGFFRnljaWtzWEc0Z0lDQWdJQ0FrWlhoamJIVnphWFpsSUQwZ0oyVjRZMngxYzJsMlpTY2dLeUFrYkhac0xGeHVJQ0FnSUNBZ0pHVjRZMnhVZVhCbElEMGdKMlY0WTJ4VWVYQmxKeUFySUNSc2Rtd3NYRzRnSUNBZ0lDQWtaWGhqYkVselRuVnRZbVZ5SUQwZ0oyVjRZMnhKYzA1MWJXSmxjaWNnS3lBa2JIWnNMRnh1SUNBZ0lDQWdKRzl3Ulhod2NpQTlJQ2R2Y0NjZ0t5QWtiSFpzTEZ4dUlDQWdJQ0FnSkc5d1UzUnlJRDBnSjF4Y0p5QXJJQ2NnS3lBa2IzQkZlSEJ5SUNzZ0p5QXJJRnhjSnljN1hHNGdJQ0FnYjNWMElDczlJQ2NnZG1GeUlITmphR1Z0WVVWNFkyd25JQ3NnS0NSc2Rtd3BJQ3NnSnlBOUlDY2dLeUFvSkhOamFHVnRZVlpoYkhWbFJYaGpiQ2tnS3lBbk95QW5PMXh1SUNBZ0lDUnpZMmhsYldGV1lXeDFaVVY0WTJ3Z1BTQW5jMk5vWlcxaFJYaGpiQ2NnS3lBa2JIWnNPMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUmxlR05zZFhOcGRtVXBJQ3NnSnpzZ2RtRnlJQ2NnS3lBb0pHVjRZMnhVZVhCbEtTQXJJQ2NnUFNCMGVYQmxiMllnSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1ZGZUdOc0tTQXJJQ2M3SUdsbUlDZ25JQ3NnS0NSbGVHTnNWSGx3WlNrZ0t5QW5JQ0U5SUZ4Y0oySnZiMnhsWVc1Y1hDY2dKaVlnSnlBcklDZ2taWGhqYkZSNWNHVXBJQ3NnSnlBaFBTQmNYQ2QxYm1SbFptbHVaV1JjWENjZ0ppWWdKeUFySUNna1pYaGpiRlI1Y0dVcElDc2dKeUFoUFNCY1hDZHVkVzFpWlhKY1hDY3BJSHNnSnp0Y2JpQWdJQ0IyWVhJZ0pHVnljbTl5UzJWNWQyOXlaQ0E5SUNSbGVHTnNkWE5wZG1WTFpYbDNiM0prTzF4dUlDQWdJSFpoY2lBa0pHOTFkRk4wWVdOcklEMGdKQ1J2ZFhSVGRHRmpheUI4ZkNCYlhUdGNiaUFnSUNBa0pHOTFkRk4wWVdOckxuQjFjMmdvYjNWMEtUdGNiaUFnSUNCdmRYUWdQU0FuSnpzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHVnNjMlVnS2k5Y2JpQWdJQ0JwWmlBb2FYUXVZM0psWVhSbFJYSnliM0p6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2V5QnJaWGwzYjNKa09pQmNYQ2NuSUNzZ0tDUmxjbkp2Y2t0bGVYZHZjbVFnZkh3Z0oxOWxlR05zZFhOcGRtVk1hVzFwZENjcElDc2dKMXhjSnlBc0lHUmhkR0ZRWVhSb09pQW9aR0YwWVZCaGRHZ2dmSHdnWEZ3blhGd25LU0FySUNjZ0t5QW9hWFF1WlhKeWIzSlFZWFJvS1NBcklDY2dMQ0J6WTJobGJXRlFZWFJvT2lBbklDc2dLR2wwTG5WMGFXd3VkRzlSZFc5MFpXUlRkSEpwYm1jb0pHVnljbE5qYUdWdFlWQmhkR2dwS1NBcklDY2dMQ0J3WVhKaGJYTTZJSHQ5SUNjN1hHNGdJQ0FnSUNCcFppQW9hWFF1YjNCMGN5NXRaWE56WVdkbGN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnTENCdFpYTnpZV2RsT2lCY1hDY25JQ3NnS0NSbGVHTnNkWE5wZG1WTFpYbDNiM0prS1NBcklDY2djMmh2ZFd4a0lHSmxJR0p2YjJ4bFlXNWNYQ2NnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxuWmxjbUp2YzJVcElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J6WTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvSkhOamFHVnRZVkJoZEdncElDc2dKeUFzSUhCaGNtVnVkRk5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2hwZEM1elkyaGxiV0ZRWVhSb0tTQXJJQ2NnTENCa1lYUmhPaUFuSUNzZ0tDUmtZWFJoS1NBcklDY2dKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRzkxZENBclBTQW5JSDBnSnp0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdJQ0I5WEc0Z0lDQWdkbUZ5SUY5ZlpYSnlJRDBnYjNWME8xeHVJQ0FnSUc5MWRDQTlJQ1FrYjNWMFUzUmhZMnN1Y0c5d0tDazdYRzRnSUNBZ2FXWWdLQ0ZwZEM1amIyMXdiM05wZEdWU2RXeGxJQ1ltSUNSaWNtVmhhMDl1UlhKeWIzSXBJSHNnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUdsbUlDb3ZYRzRnSUNBZ0lDQnBaaUFvYVhRdVlYTjVibU1wSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RHaHliM2NnYm1WM0lGWmhiR2xrWVhScGIyNUZjbkp2Y2loYkp5QXJJQ2hmWDJWeWNpa2dLeUFuWFNrN0lDYzdYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZV3hwWkdGMFpTNWxjbkp2Y25NZ1BTQmJKeUFySUNoZlgyVnljaWtnS3lBblhUc2djbVYwZFhKdUlHWmhiSE5sT3lBbk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ1pYSnlJRDBnSnlBcklDaGZYMlZ5Y2lrZ0t5QW5PeUFnYVdZZ0tIWkZjbkp2Y25NZ1BUMDlJRzUxYkd3cElIWkZjbkp2Y25NZ1BTQmJaWEp5WFRzZ1pXeHpaU0IyUlhKeWIzSnpMbkIxYzJnb1pYSnlLVHNnWlhKeWIzSnpLeXM3SUNjN1hHNGdJQ0FnZlZ4dUlDQWdJRzkxZENBclBTQW5JSDBnWld4elpTQnBaaUFvSUNjN1hHNGdJQ0FnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklDZ25JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuSUNFOVBTQjFibVJsWm1sdVpXUWdKaVlnZEhsd1pXOW1JQ2NnS3lBb0pITmphR1Z0WVZaaGJIVmxLU0FySUNjZ0lUMGdYRnduYm5WdFltVnlYRnduS1NCOGZDQW5PMXh1SUNBZ0lIMWNiaUFnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1JsZUdOc1ZIbHdaU2tnS3lBbklEMDlJRnhjSjI1MWJXSmxjbHhjSnlBL0lDZ2dLQ2NnS3lBb0pHVjRZMngxYzJsMlpTa2dLeUFuSUQwZ0p5QXJJQ2drYzJOb1pXMWhWbUZzZFdVcElDc2dKeUE5UFQwZ2RXNWtaV1pwYm1Wa0lIeDhJQ2NnS3lBb0pITmphR1Z0WVZaaGJIVmxSWGhqYkNrZ0t5QW5JQ2NnS3lBb0pHOXdLU0FySUNjOUlDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NwSUQ4Z0p5QXJJQ2drWkdGMFlTa2dLeUFuSUNjZ0t5QW9KRzV2ZEU5d0tTQXJJQ2M5SUNjZ0t5QW9KSE5qYUdWdFlWWmhiSFZsUlhoamJDa2dLeUFuSURvZ0p5QXJJQ2drWkdGMFlTa2dLeUFuSUNjZ0t5QW9KRzV2ZEU5d0tTQXJJQ2NnSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwSUNzZ0p5QXBJRG9nS0NBb0p5QXJJQ2drWlhoamJIVnphWFpsS1NBcklDY2dQU0FuSUNzZ0tDUnpZMmhsYldGV1lXeDFaVVY0WTJ3cElDc2dKeUE5UFQwZ2RISjFaU2tnUHlBbklDc2dLQ1JrWVhSaEtTQXJJQ2NnSnlBcklDZ2tibTkwVDNBcElDc2dKejBnSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwSUNzZ0p5QTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5JQ3NnS0NSdWIzUlBjQ2tnS3lBbklDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NnS1NCOGZDQW5JQ3NnS0NSa1lYUmhLU0FySUNjZ0lUMDlJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5a2dleUIyWVhJZ2IzQW5JQ3NnS0NSc2Rtd3BJQ3NnSnlBOUlDY2dLeUFvSkdWNFkyeDFjMmwyWlNrZ0t5QW5JRDhnWEZ3bkp5QXJJQ2drYjNBcElDc2dKMXhjSnlBNklGeGNKeWNnS3lBb0pHOXdLU0FySUNjOVhGd25PeWM3WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnZG1GeUlDUmxlR05zU1hOT2RXMWlaWElnUFNCMGVYQmxiMllnSkhOamFHVnRZVVY0WTJ3Z1BUMGdKMjUxYldKbGNpY3NYRzRnSUNBZ0lDQWtiM0JUZEhJZ1BTQWtiM0E3WEc0Z0lDQWdhV1lnS0NSbGVHTnNTWE5PZFcxaVpYSWdKaVlnSkdselJHRjBZU2tnZTF4dUlDQWdJQ0FnZG1GeUlDUnZjRVY0Y0hJZ1BTQW5YRnduSnlBcklDUnZjRk4wY2lBcklDZGNYQ2NuTzF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDQW5PMXh1SUNBZ0lDQWdhV1lnS0NScGMwUmhkR0VwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0tDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NnSVQwOUlIVnVaR1ZtYVc1bFpDQW1KaUIwZVhCbGIyWWdKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBJQ3NnSnlBaFBTQmNYQ2R1ZFcxaVpYSmNYQ2NwSUh4OElDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QW9JQ2NnS3lBb0pITmphR1Z0WVZaaGJIVmxLU0FySUNjZ1BUMDlJSFZ1WkdWbWFXNWxaQ0I4ZkNBbklDc2dLQ1J6WTJobGJXRkZlR05zS1NBcklDY2dKeUFySUNna2IzQXBJQ3NnSnowZ0p5QXJJQ2drYzJOb1pXMWhWbUZzZFdVcElDc2dKeUEvSUNjZ0t5QW9KR1JoZEdFcElDc2dKeUFuSUNzZ0tDUnViM1JQY0NrZ0t5QW5QU0FuSUNzZ0tDUnpZMmhsYldGRmVHTnNLU0FySUNjZ09pQW5JQ3NnS0NSa1lYUmhLU0FySUNjZ0p5QXJJQ2drYm05MFQzQXBJQ3NnSnlBbklDc2dLQ1J6WTJobGJXRldZV3gxWlNrZ0t5QW5JQ2tnZkh3Z0p5QXJJQ2drWkdGMFlTa2dLeUFuSUNFOVBTQW5JQ3NnS0NSa1lYUmhLU0FySUNjcElIc2dKenRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2FXWWdLQ1JsZUdOc1NYTk9kVzFpWlhJZ0ppWWdKSE5qYUdWdFlTQTlQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNBZ0lDUmxlR05zZFhOcGRtVWdQU0IwY25WbE8xeHVJQ0FnSUNBZ0lDQWtaWEp5YjNKTFpYbDNiM0prSUQwZ0pHVjRZMngxYzJsMlpVdGxlWGR2Y21RN1hHNGdJQ0FnSUNBZ0lDUmxjbkpUWTJobGJXRlFZWFJvSUQwZ2FYUXVaWEp5VTJOb1pXMWhVR0YwYUNBcklDY3ZKeUFySUNSbGVHTnNkWE5wZG1WTFpYbDNiM0prTzF4dUlDQWdJQ0FnSUNBa2MyTm9aVzFoVm1Gc2RXVWdQU0FrYzJOb1pXMWhSWGhqYkR0Y2JpQWdJQ0FnSUNBZ0pHNXZkRTl3SUNzOUlDYzlKenRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJR2xtSUNna1pYaGpiRWx6VG5WdFltVnlLU0FrYzJOb1pXMWhWbUZzZFdVZ1BTQk5ZWFJvV3lScGMwMWhlQ0EvSUNkdGFXNG5JRG9nSjIxaGVDZGRLQ1J6WTJobGJXRkZlR05zTENBa2MyTm9aVzFoS1R0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ1J6WTJobGJXRkZlR05zSUQwOVBTQW9KR1Y0WTJ4SmMwNTFiV0psY2lBL0lDUnpZMmhsYldGV1lXeDFaU0E2SUhSeWRXVXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0pHVjRZMngxYzJsMlpTQTlJSFJ5ZFdVN1hHNGdJQ0FnSUNBZ0lDQWdKR1Z5Y205eVMyVjVkMjl5WkNBOUlDUmxlR05zZFhOcGRtVkxaWGwzYjNKa08xeHVJQ0FnSUNBZ0lDQWdJQ1JsY25KVFkyaGxiV0ZRWVhSb0lEMGdhWFF1WlhKeVUyTm9aVzFoVUdGMGFDQXJJQ2N2SnlBcklDUmxlR05zZFhOcGRtVkxaWGwzYjNKa08xeHVJQ0FnSUNBZ0lDQWdJQ1J1YjNSUGNDQXJQU0FuUFNjN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdKR1Y0WTJ4MWMybDJaU0E5SUdaaGJITmxPMXh1SUNBZ0lDQWdJQ0FnSUNSdmNGTjBjaUFyUFNBblBTYzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSFpoY2lBa2IzQkZlSEJ5SUQwZ0oxeGNKeWNnS3lBa2IzQlRkSElnS3lBblhGd25KenRjYmlBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNnbklDc2dLQ1J6WTJobGJXRldZV3gxWlNrZ0t5QW5JQ0U5UFNCMWJtUmxabWx1WldRZ0ppWWdkSGx3Wlc5bUlDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NnSVQwZ1hGd25iblZ0WW1WeVhGd25LU0I4ZkNBbk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2drWkdGMFlTa2dLeUFuSUNjZ0t5QW9KRzV2ZEU5d0tTQXJJQ2NnSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwSUNzZ0p5QjhmQ0FuSUNzZ0tDUmtZWFJoS1NBcklDY2dJVDA5SUNjZ0t5QW9KR1JoZEdFcElDc2dKeWtnZXlBbk8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNBa1pYSnliM0pMWlhsM2IzSmtJRDBnSkdWeWNtOXlTMlY1ZDI5eVpDQjhmQ0FrYTJWNWQyOXlaRHRjYmlBZ2RtRnlJQ1FrYjNWMFUzUmhZMnNnUFNBa0pHOTFkRk4wWVdOcklIeDhJRnRkTzF4dUlDQWtKRzkxZEZOMFlXTnJMbkIxYzJnb2IzVjBLVHRjYmlBZ2IzVjBJRDBnSnljN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQmxiSE5sSUNvdlhHNGdJR2xtSUNocGRDNWpjbVZoZEdWRmNuSnZjbk1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnYjNWMElDczlJQ2NnZXlCclpYbDNiM0prT2lCY1hDY25JQ3NnS0NSbGNuSnZja3RsZVhkdmNtUWdmSHdnSjE5c2FXMXBkQ2NwSUNzZ0oxeGNKeUFzSUdSaGRHRlFZWFJvT2lBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjZ0xDQnpZMmhsYldGUVlYUm9PaUFuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvSkdWeWNsTmphR1Z0WVZCaGRHZ3BLU0FySUNjZ0xDQndZWEpoYlhNNklIc2dZMjl0Y0dGeWFYTnZiam9nSnlBcklDZ2tiM0JGZUhCeUtTQXJJQ2NzSUd4cGJXbDBPaUFuSUNzZ0tDUnpZMmhsYldGV1lXeDFaU2tnS3lBbkxDQmxlR05zZFhOcGRtVTZJQ2NnS3lBb0pHVjRZMngxYzJsMlpTa2dLeUFuSUgwZ0p6dGNiaUFnSUNCcFppQW9hWFF1YjNCMGN5NXRaWE56WVdkbGN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYldWemMyRm5aVG9nWEZ3bmMyaHZkV3hrSUdKbElDY2dLeUFvSkc5d1UzUnlLU0FySUNjZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuWEZ3bklDc2dKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBPMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY25JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuWEZ3bkp6dGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWRtVnlZbTl6WlNrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnpZMmhsYldFNklDQW5PMXh1SUNBZ0lDQWdhV1lnS0NScGMwUmhkR0VwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tDUnpZMmhsYldGUVlYUm9LVHRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5KeUFySUNna2MyTm9aVzFoS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUNBZ0lDQWdJQ0FnTENCd1lYSmxiblJUWTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvYVhRdWMyTm9aVzFoVUdGMGFDa2dLeUFuSUN3Z1pHRjBZVG9nSnlBcklDZ2taR0YwWVNrZ0t5QW5JQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUI3ZlNBbk8xeHVJQ0I5WEc0Z0lIWmhjaUJmWDJWeWNpQTlJRzkxZER0Y2JpQWdiM1YwSUQwZ0pDUnZkWFJUZEdGamF5NXdiM0FvS1R0Y2JpQWdhV1lnS0NGcGRDNWpiMjF3YjNOcGRHVlNkV3hsSUNZbUlDUmljbVZoYTA5dVJYSnliM0lwSUhzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHbG1JQ292WEc0Z0lDQWdhV1lnS0dsMExtRnplVzVqS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlCMGFISnZkeUJ1WlhjZ1ZtRnNhV1JoZEdsdmJrVnljbTl5S0ZzbklDc2dLRjlmWlhKeUtTQXJJQ2RkS1RzZ0p6dGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnZG1Gc2FXUmhkR1V1WlhKeWIzSnpJRDBnV3ljZ0t5QW9YMTlsY25JcElDc2dKMTA3SUhKbGRIVnliaUJtWVd4elpUc2dKenRjYmlBZ0lDQjlYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUdWeWNpQTlJQ2NnS3lBb1gxOWxjbklwSUNzZ0p6c2dJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ1cyVnljbDA3SUdWc2MyVWdka1Z5Y205eWN5NXdkWE5vS0dWeWNpazdJR1Z5Y205eWN5c3JPeUFuTzF4dUlDQjlYRzRnSUc5MWRDQXJQU0FuSUgwZ0p6dGNiaUFnYVdZZ0tDUmljbVZoYTA5dVJYSnliM0lwSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUJsYkhObElIc2dKenRjYmlBZ2ZWeHVJQ0J5WlhSMWNtNGdiM1YwTzF4dWZWeHVJbDBzSW0xaGNIQnBibWR6SWpvaVFVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0LmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRJdGVtcy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0SXRlbXMuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9fbGltaXRJdGVtcyhpdCwgJGtleXdvcmQsICRydWxlVHlwZSkge1xcXFxuICB2YXIgb3V0ID0gJyAnO1xcXFxuICB2YXIgJGx2bCA9IGl0LmxldmVsO1xcXFxuICB2YXIgJGRhdGFMdmwgPSBpdC5kYXRhTGV2ZWw7XFxcXG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcXFxcbiAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJGtleXdvcmQpO1xcXFxuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XFxcXG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xcXFxuICB2YXIgJGVycm9yS2V5d29yZDtcXFxcbiAgdmFyICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcXFxcbiAgICAkc2NoZW1hVmFsdWU7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xcXFxuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xcXFxuICB9XFxcXG4gIHZhciAkb3AgPSAka2V5d29yZCA9PSAnbWF4SXRlbXMnID8gJz4nIDogJzwnO1xcXFxuICBvdXQgKz0gJ2lmICggJztcXFxcbiAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcXFxcXFxcJ251bWJlclxcXFxcXFxcJykgfHwgJztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJyAnICsgKCRkYXRhKSArICcubGVuZ3RoICcgKyAoJG9wKSArICcgJyArICgkc2NoZW1hVmFsdWUpICsgJykgeyAnO1xcXFxuICB2YXIgJGVycm9yS2V5d29yZCA9ICRrZXl3b3JkO1xcXFxuICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJGVycm9yS2V5d29yZCB8fCAnX2xpbWl0SXRlbXMnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IGxpbWl0OiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnIH0gJztcXFxcbiAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnc2hvdWxkIE5PVCBoYXZlICc7XFxcXG4gICAgICBpZiAoJGtleXdvcmQgPT0gJ21heEl0ZW1zJykge1xcXFxuICAgICAgICBvdXQgKz0gJ21vcmUnO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICdsZXNzJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnIHRoYW4gJztcXFxcbiAgICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICAgIG91dCArPSAnXFxcXFxcXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcXFxcXFxcJyc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyBpdGVtc1xcXFxcXFxcJyAnO1xcXFxuICAgIH1cXFxcbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogICc7XFxcXG4gICAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgICBvdXQgKz0gJ3ZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWEpO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgICAgICAgICAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgfSAnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHt9ICc7XFxcXG4gIH1cXFxcbiAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgIH1cXFxcbiAgfSBlbHNlIHtcXFxcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICd9ICc7XFxcXG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XFxcXG4gIH1cXFxcbiAgcmV0dXJuIG91dDtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5ZmJHbHRhWFJKZEdWdGN5NXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwyRnFkaTlzYVdJdlpHOTBhbk12WDJ4cGJXbDBTWFJsYlhNdWFuTS9aR0V6WWlKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW5kWE5sSUhOMGNtbGpkQ2M3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdkbGJtVnlZWFJsWDE5c2FXMXBkRWwwWlcxektHbDBMQ0FrYTJWNWQyOXlaQ3dnSkhKMWJHVlVlWEJsS1NCN1hHNGdJSFpoY2lCdmRYUWdQU0FuSUNjN1hHNGdJSFpoY2lBa2JIWnNJRDBnYVhRdWJHVjJaV3c3WEc0Z0lIWmhjaUFrWkdGMFlVeDJiQ0E5SUdsMExtUmhkR0ZNWlhabGJEdGNiaUFnZG1GeUlDUnpZMmhsYldFZ1BTQnBkQzV6WTJobGJXRmJKR3RsZVhkdmNtUmRPMXh1SUNCMllYSWdKSE5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2EyVjVkMjl5WkNrN1hHNGdJSFpoY2lBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkx5Y2dLeUFrYTJWNWQyOXlaRHRjYmlBZ2RtRnlJQ1JpY21WaGEwOXVSWEp5YjNJZ1BTQWhhWFF1YjNCMGN5NWhiR3hGY25KdmNuTTdYRzRnSUhaaGNpQWtaWEp5YjNKTFpYbDNiM0prTzF4dUlDQjJZWElnSkdSaGRHRWdQU0FuWkdGMFlTY2dLeUFvSkdSaGRHRk1kbXdnZkh3Z0p5Y3BPMXh1SUNCMllYSWdKR2x6UkdGMFlTQTlJR2wwTG05d2RITXVKR1JoZEdFZ0ppWWdKSE5qYUdWdFlTQW1KaUFrYzJOb1pXMWhMaVJrWVhSaExGeHVJQ0FnSUNSelkyaGxiV0ZXWVd4MVpUdGNiaUFnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNCdmRYUWdLejBnSnlCMllYSWdjMk5vWlcxaEp5QXJJQ2drYkhac0tTQXJJQ2NnUFNBbklDc2dLR2wwTG5WMGFXd3VaMlYwUkdGMFlTZ2tjMk5vWlcxaExpUmtZWFJoTENBa1pHRjBZVXgyYkN3Z2FYUXVaR0YwWVZCaGRHaEJjbklwS1NBcklDYzdJQ2M3WEc0Z0lDQWdKSE5qYUdWdFlWWmhiSFZsSUQwZ0ozTmphR1Z0WVNjZ0t5QWtiSFpzTzF4dUlDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNSelkyaGxiV0ZXWVd4MVpTQTlJQ1J6WTJobGJXRTdYRzRnSUgxY2JpQWdkbUZ5SUNSdmNDQTlJQ1JyWlhsM2IzSmtJRDA5SUNkdFlYaEpkR1Z0Y3ljZ1B5QW5QaWNnT2lBblBDYzdYRzRnSUc5MWRDQXJQU0FuYVdZZ0tDQW5PMXh1SUNCcFppQW9KR2x6UkdGMFlTa2dlMXh1SUNBZ0lHOTFkQ0FyUFNBbklDZ25JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuSUNFOVBTQjFibVJsWm1sdVpXUWdKaVlnZEhsd1pXOW1JQ2NnS3lBb0pITmphR1Z0WVZaaGJIVmxLU0FySUNjZ0lUMGdYRnduYm5WdFltVnlYRnduS1NCOGZDQW5PMXh1SUNCOVhHNGdJRzkxZENBclBTQW5JQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5NXNaVzVuZEdnZ0p5QXJJQ2drYjNBcElDc2dKeUFuSUNzZ0tDUnpZMmhsYldGV1lXeDFaU2tnS3lBbktTQjdJQ2M3WEc0Z0lIWmhjaUFrWlhKeWIzSkxaWGwzYjNKa0lEMGdKR3RsZVhkdmNtUTdYRzRnSUhaaGNpQWtKRzkxZEZOMFlXTnJJRDBnSkNSdmRYUlRkR0ZqYXlCOGZDQmJYVHRjYmlBZ0pDUnZkWFJUZEdGamF5NXdkWE5vS0c5MWRDazdYRzRnSUc5MWRDQTlJQ2NuT3lBdktpQnBjM1JoYm1KMWJDQnBaMjV2Y21VZ1pXeHpaU0FxTDF4dUlDQnBaaUFvYVhRdVkzSmxZWFJsUlhKeWIzSnpJQ0U5UFNCbVlXeHpaU2tnZTF4dUlDQWdJRzkxZENBclBTQW5JSHNnYTJWNWQyOXlaRG9nWEZ3bkp5QXJJQ2drWlhKeWIzSkxaWGwzYjNKa0lIeDhJQ2RmYkdsdGFYUkpkR1Z0Y3ljcElDc2dKMXhjSnlBc0lHUmhkR0ZRWVhSb09pQW9aR0YwWVZCaGRHZ2dmSHdnWEZ3blhGd25LU0FySUNjZ0t5QW9hWFF1WlhKeWIzSlFZWFJvS1NBcklDY2dMQ0J6WTJobGJXRlFZWFJvT2lBbklDc2dLR2wwTG5WMGFXd3VkRzlSZFc5MFpXUlRkSEpwYm1jb0pHVnljbE5qYUdWdFlWQmhkR2dwS1NBcklDY2dMQ0J3WVhKaGJYTTZJSHNnYkdsdGFYUTZJQ2NnS3lBb0pITmphR1Z0WVZaaGJIVmxLU0FySUNjZ2ZTQW5PMXh1SUNBZ0lHbG1JQ2hwZEM1dmNIUnpMbTFsYzNOaFoyVnpJQ0U5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnTENCdFpYTnpZV2RsT2lCY1hDZHphRzkxYkdRZ1RrOVVJR2hoZG1VZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drYTJWNWQyOXlaQ0E5UFNBbmJXRjRTWFJsYlhNbktTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5iVzl5WlNjN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSjJ4bGMzTW5PMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dkR2hoYmlBbk8xeHVJQ0FnSUNBZ2FXWWdLQ1JwYzBSaGRHRXBJSHRjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2RjWENjZ0t5QW5JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuSUNzZ1hGd25KenRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5KeUFySUNna2MyTm9aVzFoS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUdsMFpXMXpYRnduSUNjN1hHNGdJQ0FnZlZ4dUlDQWdJR2xtSUNocGRDNXZjSFJ6TG5abGNtSnZjMlVwSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUN3Z2MyTm9aVzFoT2lBZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNna2MyTm9aVzFoVUdGMGFDazdYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5Y2dLeUFvSkhOamFHVnRZU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFnSUNBZ0lDQWdJQ3dnY0dGeVpXNTBVMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLR2wwTG5OamFHVnRZVkJoZEdncElDc2dKeUFzSUdSaGRHRTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5PMXh1SUNBZ0lIMWNiaUFnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdmVnh1SUNCMllYSWdYMTlsY25JZ1BTQnZkWFE3WEc0Z0lHOTFkQ0E5SUNRa2IzVjBVM1JoWTJzdWNHOXdLQ2s3WEc0Z0lHbG1JQ2doYVhRdVkyOXRjRzl6YVhSbFVuVnNaU0FtSmlBa1luSmxZV3RQYmtWeWNtOXlLU0I3SUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCcFppQXFMMXh1SUNBZ0lHbG1JQ2hwZEM1aGMzbHVZeWtnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnZEdoeWIzY2dibVYzSUZaaGJHbGtZWFJwYjI1RmNuSnZjaWhiSnlBcklDaGZYMlZ5Y2lrZ0t5QW5YU2s3SUNjN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFpoYkdsa1lYUmxMbVZ5Y205eWN5QTlJRnNuSUNzZ0tGOWZaWEp5S1NBcklDZGRPeUJ5WlhSMWNtNGdabUZzYzJVN0lDYzdYRzRnSUNBZ2ZWeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUJsY25JZ1BTQW5JQ3NnS0Y5ZlpYSnlLU0FySUNjN0lDQnBaaUFvZGtWeWNtOXljeUE5UFQwZ2JuVnNiQ2tnZGtWeWNtOXljeUE5SUZ0bGNuSmRPeUJsYkhObElIWkZjbkp2Y25NdWNIVnphQ2hsY25JcE95Qmxjbkp2Y25Nckt6c2dKenRjYmlBZ2ZWeHVJQ0J2ZFhRZ0t6MGdKMzBnSnp0Y2JpQWdhV1lnS0NSaWNtVmhhMDl1UlhKeWIzSXBJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QmxiSE5sSUhzZ0p6dGNiaUFnZlZ4dUlDQnlaWFIxY200Z2IzVjBPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0SXRlbXMuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdExlbmd0aC5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdExlbmd0aC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9fbGltaXRMZW5ndGgoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcgJztcXFxcbiAgdmFyICRsdmwgPSBpdC5sZXZlbDtcXFxcbiAgdmFyICRkYXRhTHZsID0gaXQuZGF0YUxldmVsO1xcXFxuICB2YXIgJHNjaGVtYSA9IGl0LnNjaGVtYVska2V5d29yZF07XFxcXG4gIHZhciAkc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyBpdC51dGlsLmdldFByb3BlcnR5KCRrZXl3b3JkKTtcXFxcbiAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICB2YXIgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgdmFyICRlcnJvcktleXdvcmQ7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXFxcXG4gICAgJHNjaGVtYVZhbHVlO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcXFxcbiAgfVxcXFxuICB2YXIgJG9wID0gJGtleXdvcmQgPT0gJ21heExlbmd0aCcgPyAnPicgOiAnPCc7XFxcXG4gIG91dCArPSAnaWYgKCAnO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnICgnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mICcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT0gXFxcXFxcXFwnbnVtYmVyXFxcXFxcXFwnKSB8fCAnO1xcXFxuICB9XFxcXG4gIGlmIChpdC5vcHRzLnVuaWNvZGUgPT09IGZhbHNlKSB7XFxcXG4gICAgb3V0ICs9ICcgJyArICgkZGF0YSkgKyAnLmxlbmd0aCAnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHVjczJsZW5ndGgoJyArICgkZGF0YSkgKyAnKSAnO1xcXFxuICB9XFxcXG4gIG91dCArPSAnICcgKyAoJG9wKSArICcgJyArICgkc2NoZW1hVmFsdWUpICsgJykgeyAnO1xcXFxuICB2YXIgJGVycm9yS2V5d29yZCA9ICRrZXl3b3JkO1xcXFxuICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJGVycm9yS2V5d29yZCB8fCAnX2xpbWl0TGVuZ3RoJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBsaW1pdDogJyArICgkc2NoZW1hVmFsdWUpICsgJyB9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBOT1QgYmUgJztcXFxcbiAgICAgIGlmICgka2V5d29yZCA9PSAnbWF4TGVuZ3RoJykge1xcXFxuICAgICAgICBvdXQgKz0gJ2xvbmdlcic7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJ3Nob3J0ZXInO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgdGhhbiAnO1xcXFxuICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgKyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICsgXFxcXFxcXFwnJztcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnJyArICgkc2NoZW1hKTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnIGNoYXJhY3RlcnNcXFxcXFxcXCcgJztcXFxcbiAgICB9XFxcXG4gICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6ICAnO1xcXFxuICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgb3V0ICs9ICd2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKTtcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnJyArICgkc2NoZW1hKTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnICAgICAgICAgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIH0gJztcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICB9XFxcXG4gIHZhciBfX2VyciA9IG91dDtcXFxcbiAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICB9XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICB9XFxcXG4gIG91dCArPSAnfSAnO1xcXFxuICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgIG91dCArPSAnIGVsc2UgeyAnO1xcXFxuICB9XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OWZiR2x0YVhSTVpXNW5kR2d1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTloYW5ZdmJHbGlMMlJ2ZEdwekwxOXNhVzFwZEV4bGJtZDBhQzVxY3o4NU9UQTJJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlkMWMyVWdjM1J5YVdOMEp6dGNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNGdaMlZ1WlhKaGRHVmZYMnhwYldsMFRHVnVaM1JvS0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pYSnliM0pMWlhsM2IzSmtPMXh1SUNCMllYSWdKR1JoZEdFZ1BTQW5aR0YwWVNjZ0t5QW9KR1JoZEdGTWRtd2dmSHdnSnljcE8xeHVJQ0IyWVhJZ0pHbHpSR0YwWVNBOUlHbDBMbTl3ZEhNdUpHUmhkR0VnSmlZZ0pITmphR1Z0WVNBbUppQWtjMk5vWlcxaExpUmtZWFJoTEZ4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlR0Y2JpQWdhV1lnS0NScGMwUmhkR0VwSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ2MyTm9aVzFoSnlBcklDZ2tiSFpzS1NBcklDY2dQU0FuSUNzZ0tHbDBMblYwYVd3dVoyVjBSR0YwWVNna2MyTm9aVzFoTGlSa1lYUmhMQ0FrWkdGMFlVeDJiQ3dnYVhRdVpHRjBZVkJoZEdoQmNuSXBLU0FySUNjN0lDYzdYRzRnSUNBZ0pITmphR1Z0WVZaaGJIVmxJRDBnSjNOamFHVnRZU2NnS3lBa2JIWnNPMXh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlNBOUlDUnpZMmhsYldFN1hHNGdJSDFjYmlBZ2RtRnlJQ1J2Y0NBOUlDUnJaWGwzYjNKa0lEMDlJQ2R0WVhoTVpXNW5kR2duSUQ4Z0p6NG5JRG9nSnp3bk8xeHVJQ0J2ZFhRZ0t6MGdKMmxtSUNnZ0p6dGNiaUFnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNCdmRYUWdLejBnSnlBb0p5QXJJQ2drYzJOb1pXMWhWbUZzZFdVcElDc2dKeUFoUFQwZ2RXNWtaV1pwYm1Wa0lDWW1JSFI1Y0dWdlppQW5JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuSUNFOUlGeGNKMjUxYldKbGNseGNKeWtnZkh3Z0p6dGNiaUFnZlZ4dUlDQnBaaUFvYVhRdWIzQjBjeTUxYm1samIyUmxJRDA5UFNCbVlXeHpaU2tnZTF4dUlDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5NXNaVzVuZEdnZ0p6dGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QjFZM015YkdWdVozUm9LQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5a2dKenRjYmlBZ2ZWeHVJQ0J2ZFhRZ0t6MGdKeUFuSUNzZ0tDUnZjQ2tnS3lBbklDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NwSUhzZ0p6dGNiaUFnZG1GeUlDUmxjbkp2Y2t0bGVYZHZjbVFnUFNBa2EyVjVkMjl5WkR0Y2JpQWdkbUZ5SUNRa2IzVjBVM1JoWTJzZ1BTQWtKRzkxZEZOMFlXTnJJSHg4SUZ0ZE8xeHVJQ0FrSkc5MWRGTjBZV05yTG5CMWMyZ29iM1YwS1R0Y2JpQWdiM1YwSUQwZ0p5YzdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JsYkhObElDb3ZYRzRnSUdsbUlDaHBkQzVqY21WaGRHVkZjbkp2Y25NZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2V5QnJaWGwzYjNKa09pQmNYQ2NuSUNzZ0tDUmxjbkp2Y2t0bGVYZHZjbVFnZkh3Z0oxOXNhVzFwZEV4bGJtZDBhQ2NwSUNzZ0oxeGNKeUFzSUdSaGRHRlFZWFJvT2lBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjZ0xDQnpZMmhsYldGUVlYUm9PaUFuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvSkdWeWNsTmphR1Z0WVZCaGRHZ3BLU0FySUNjZ0xDQndZWEpoYlhNNklIc2diR2x0YVhRNklDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NnZlNBbk8xeHVJQ0FnSUdsbUlDaHBkQzV2Y0hSekxtMWxjM05oWjJWeklDRTlQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J0WlhOellXZGxPaUJjWENkemFHOTFiR1FnVGs5VUlHSmxJQ2M3WEc0Z0lDQWdJQ0JwWmlBb0pHdGxlWGR2Y21RZ1BUMGdKMjFoZUV4bGJtZDBhQ2NwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkc2IyNW5aWEluTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2R6YUc5eWRHVnlKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFJvWVc0Z0p6dGNiaUFnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuWEZ3bklDc2dKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBJQ3NnSnlBcklGeGNKeWM3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeWNnS3lBb0pITmphR1Z0WVNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCdmRYUWdLejBnSnlCamFHRnlZV04wWlhKelhGd25JQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2hwZEM1dmNIUnpMblpsY21KdmMyVXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYzJOb1pXMWhPaUFnSnp0Y2JpQWdJQ0FnSUdsbUlDZ2thWE5FWVhSaEtTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5kbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2drYzJOb1pXMWhVR0YwYUNrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnljZ0t5QW9KSE5qYUdWdFlTazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QWdJQ0FnSUNBZ0lDd2djR0Z5Wlc1MFUyTm9aVzFoT2lCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tHbDBMbk5qYUdWdFlWQmhkR2dwSUNzZ0p5QXNJR1JoZEdFNklDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBbk8xeHVJQ0FnSUgxY2JpQWdJQ0J2ZFhRZ0t6MGdKeUI5SUNjN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2UzMGdKenRjYmlBZ2ZWeHVJQ0IyWVhJZ1gxOWxjbklnUFNCdmRYUTdYRzRnSUc5MWRDQTlJQ1FrYjNWMFUzUmhZMnN1Y0c5d0tDazdYRzRnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUdsbUlDaHBkQzVoYzNsdVl5a2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dkR2h5YjNjZ2JtVjNJRlpoYkdsa1lYUnBiMjVGY25KdmNpaGJKeUFySUNoZlgyVnljaWtnS3lBblhTazdJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIWmhiR2xrWVhSbExtVnljbTl5Y3lBOUlGc25JQ3NnS0Y5ZlpYSnlLU0FySUNkZE95QnlaWFIxY200Z1ptRnNjMlU3SUNjN1hHNGdJQ0FnZlZ4dUlDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQmxjbklnUFNBbklDc2dLRjlmWlhKeUtTQXJJQ2M3SUNCcFppQW9ka1Z5Y205eWN5QTlQVDBnYm5Wc2JDa2dka1Z5Y205eWN5QTlJRnRsY25KZE95QmxiSE5sSUhaRmNuSnZjbk11Y0hWemFDaGxjbklwT3lCbGNuSnZjbk1yS3pzZ0p6dGNiaUFnZlZ4dUlDQnZkWFFnS3owZ0ozMGdKenRjYmlBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNCdmRYUWdLejBnSnlCbGJITmxJSHNnSnp0Y2JpQWdmVnh1SUNCeVpYUjFjbTRnYjNWME8xeHVmVnh1SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdJaXdpYzI5MWNtTmxVbTl2ZENJNklpSjlcXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL19saW1pdExlbmd0aC5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0UHJvcGVydGllcy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9fbGltaXRQcm9wZXJ0aWVzLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9fbGltaXRQcm9wZXJ0aWVzKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZXJyb3JLZXl3b3JkO1xcXFxuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xcXFxuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxcXFxuICAgICRzY2hlbWFWYWx1ZTtcXFxcbiAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XFxcXG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XFxcXG4gIH1cXFxcbiAgdmFyICRvcCA9ICRrZXl3b3JkID09ICdtYXhQcm9wZXJ0aWVzJyA/ICc+JyA6ICc8JztcXFxcbiAgb3V0ICs9ICdpZiAoICc7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPSBcXFxcXFxcXCdudW1iZXJcXFxcXFxcXCcpIHx8ICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICcgT2JqZWN0LmtleXMoJyArICgkZGF0YSkgKyAnKS5sZW5ndGggJyArICgkb3ApICsgJyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnKSB7ICc7XFxcXG4gIHZhciAkZXJyb3JLZXl3b3JkID0gJGtleXdvcmQ7XFxcXG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgkZXJyb3JLZXl3b3JkIHx8ICdfbGltaXRQcm9wZXJ0aWVzJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBsaW1pdDogJyArICgkc2NoZW1hVmFsdWUpICsgJyB9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBOT1QgaGF2ZSAnO1xcXFxuICAgICAgaWYgKCRrZXl3b3JkID09ICdtYXhQcm9wZXJ0aWVzJykge1xcXFxuICAgICAgICBvdXQgKz0gJ21vcmUnO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICdsZXNzJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnIHRoYW4gJztcXFxcbiAgICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICAgIG91dCArPSAnXFxcXFxcXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcXFxcXFxcJyc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyBwcm9wZXJ0aWVzXFxcXFxcXFwnICc7XFxcXG4gICAgfVxcXFxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcXFxcbiAgICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYSk7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcge30gJztcXFxcbiAgfVxcXFxuICB2YXIgX19lcnIgPSBvdXQ7XFxcXG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJ30gJztcXFxcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcXFxcbiAgfVxcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTlmYkdsdGFYUlFjbTl3WlhKMGFXVnpMbXB6TG1weklpd2ljMjkxY21ObGN5STZXeUozWldKd1lXTnJPaTh2YVcxcWIzbFNVRU12TGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5ZmJHbHRhWFJRY205d1pYSjBhV1Z6TG1welB6YzNaV0VpWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUozVnpaU0J6ZEhKcFkzUW5PMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUJuWlc1bGNtRjBaVjlmYkdsdGFYUlFjbTl3WlhKMGFXVnpLR2wwTENBa2EyVjVkMjl5WkN3Z0pISjFiR1ZVZVhCbEtTQjdYRzRnSUhaaGNpQnZkWFFnUFNBbklDYzdYRzRnSUhaaGNpQWtiSFpzSUQwZ2FYUXViR1YyWld3N1hHNGdJSFpoY2lBa1pHRjBZVXgyYkNBOUlHbDBMbVJoZEdGTVpYWmxiRHRjYmlBZ2RtRnlJQ1J6WTJobGJXRWdQU0JwZEM1elkyaGxiV0ZiSkd0bGVYZHZjbVJkTzF4dUlDQjJZWElnSkhOamFHVnRZVkJoZEdnZ1BTQnBkQzV6WTJobGJXRlFZWFJvSUNzZ2FYUXVkWFJwYkM1blpYUlFjbTl3WlhKMGVTZ2thMlY1ZDI5eVpDazdYRzRnSUhaaGNpQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lBa2EyVjVkMjl5WkR0Y2JpQWdkbUZ5SUNSaWNtVmhhMDl1UlhKeWIzSWdQU0FoYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk03WEc0Z0lIWmhjaUFrWlhKeWIzSkxaWGwzYjNKa08xeHVJQ0IyWVhJZ0pHUmhkR0VnUFNBblpHRjBZU2NnS3lBb0pHUmhkR0ZNZG13Z2ZId2dKeWNwTzF4dUlDQjJZWElnSkdselJHRjBZU0E5SUdsMExtOXdkSE11SkdSaGRHRWdKaVlnSkhOamFHVnRZU0FtSmlBa2MyTm9aVzFoTGlSa1lYUmhMRnh1SUNBZ0lDUnpZMmhsYldGV1lXeDFaVHRjYmlBZ2FXWWdLQ1JwYzBSaGRHRXBJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QjJZWElnYzJOb1pXMWhKeUFySUNna2JIWnNLU0FySUNjZ1BTQW5JQ3NnS0dsMExuVjBhV3d1WjJWMFJHRjBZU2drYzJOb1pXMWhMaVJrWVhSaExDQWtaR0YwWVV4MmJDd2dhWFF1WkdGMFlWQmhkR2hCY25JcEtTQXJJQ2M3SUNjN1hHNGdJQ0FnSkhOamFHVnRZVlpoYkhWbElEMGdKM05qYUdWdFlTY2dLeUFrYkhac08xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDUnpZMmhsYldGV1lXeDFaU0E5SUNSelkyaGxiV0U3WEc0Z0lIMWNiaUFnZG1GeUlDUnZjQ0E5SUNSclpYbDNiM0prSUQwOUlDZHRZWGhRY205d1pYSjBhV1Z6SnlBL0lDYytKeUE2SUNjOEp6dGNiaUFnYjNWMElDczlJQ2RwWmlBb0lDYzdYRzRnSUdsbUlDZ2thWE5FWVhSaEtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ0tDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NnSVQwOUlIVnVaR1ZtYVc1bFpDQW1KaUIwZVhCbGIyWWdKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBJQ3NnSnlBaFBTQmNYQ2R1ZFcxaVpYSmNYQ2NwSUh4OElDYzdYRzRnSUgxY2JpQWdiM1YwSUNzOUlDY2dUMkpxWldOMExtdGxlWE1vSnlBcklDZ2taR0YwWVNrZ0t5QW5LUzVzWlc1bmRHZ2dKeUFySUNna2IzQXBJQ3NnSnlBbklDc2dLQ1J6WTJobGJXRldZV3gxWlNrZ0t5QW5LU0I3SUNjN1hHNGdJSFpoY2lBa1pYSnliM0pMWlhsM2IzSmtJRDBnSkd0bGVYZHZjbVE3WEc0Z0lIWmhjaUFrSkc5MWRGTjBZV05ySUQwZ0pDUnZkWFJUZEdGamF5QjhmQ0JiWFR0Y2JpQWdKQ1J2ZFhSVGRHRmpheTV3ZFhOb0tHOTFkQ2s3WEc0Z0lHOTFkQ0E5SUNjbk95QXZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdaV3h6WlNBcUwxeHVJQ0JwWmlBb2FYUXVZM0psWVhSbFJYSnliM0p6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUhzZ2EyVjVkMjl5WkRvZ1hGd25KeUFySUNna1pYSnliM0pMWlhsM2IzSmtJSHg4SUNkZmJHbHRhWFJRY205d1pYSjBhV1Z6SnlrZ0t5QW5YRnduSUN3Z1pHRjBZVkJoZEdnNklDaGtZWFJoVUdGMGFDQjhmQ0JjWENkY1hDY3BJQ3NnSnlBcklDaHBkQzVsY25KdmNsQmhkR2dwSUNzZ0p5QXNJSE5qYUdWdFlWQmhkR2c2SUNjZ0t5QW9hWFF1ZFhScGJDNTBiMUYxYjNSbFpGTjBjbWx1Wnlna1pYSnlVMk5vWlcxaFVHRjBhQ2twSUNzZ0p5QXNJSEJoY21GdGN6b2dleUJzYVcxcGREb2dKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBJQ3NnSnlCOUlDYzdYRzRnSUNBZ2FXWWdLR2wwTG05d2RITXViV1Z6YzJGblpYTWdJVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFzSUcxbGMzTmhaMlU2SUZ4Y0ozTm9iM1ZzWkNCT1QxUWdhR0YyWlNBbk8xeHVJQ0FnSUNBZ2FXWWdLQ1JyWlhsM2IzSmtJRDA5SUNkdFlYaFFjbTl3WlhKMGFXVnpKeWtnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSjIxdmNtVW5PMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDZHNaWE56Snp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUhSb1lXNGdKenRjYmlBZ0lDQWdJR2xtSUNna2FYTkVZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBblhGd25JQ3NnSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwSUNzZ0p5QXJJRnhjSnljN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnljZ0t5QW9KSE5qYUdWdFlTazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QndjbTl3WlhKMGFXVnpYRnduSUNjN1hHNGdJQ0FnZlZ4dUlDQWdJR2xtSUNocGRDNXZjSFJ6TG5abGNtSnZjMlVwSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUN3Z2MyTm9aVzFoT2lBZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNna2MyTm9aVzFoVUdGMGFDazdYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5Y2dLeUFvSkhOamFHVnRZU2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFnSUNBZ0lDQWdJQ3dnY0dGeVpXNTBVMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLR2wwTG5OamFHVnRZVkJoZEdncElDc2dKeUFzSUdSaGRHRTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5PMXh1SUNBZ0lIMWNiaUFnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdmVnh1SUNCMllYSWdYMTlsY25JZ1BTQnZkWFE3WEc0Z0lHOTFkQ0E5SUNRa2IzVjBVM1JoWTJzdWNHOXdLQ2s3WEc0Z0lHbG1JQ2doYVhRdVkyOXRjRzl6YVhSbFVuVnNaU0FtSmlBa1luSmxZV3RQYmtWeWNtOXlLU0I3SUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCcFppQXFMMXh1SUNBZ0lHbG1JQ2hwZEM1aGMzbHVZeWtnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnZEdoeWIzY2dibVYzSUZaaGJHbGtZWFJwYjI1RmNuSnZjaWhiSnlBcklDaGZYMlZ5Y2lrZ0t5QW5YU2s3SUNjN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFpoYkdsa1lYUmxMbVZ5Y205eWN5QTlJRnNuSUNzZ0tGOWZaWEp5S1NBcklDZGRPeUJ5WlhSMWNtNGdabUZzYzJVN0lDYzdYRzRnSUNBZ2ZWeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUJsY25JZ1BTQW5JQ3NnS0Y5ZlpYSnlLU0FySUNjN0lDQnBaaUFvZGtWeWNtOXljeUE5UFQwZ2JuVnNiQ2tnZGtWeWNtOXljeUE5SUZ0bGNuSmRPeUJsYkhObElIWkZjbkp2Y25NdWNIVnphQ2hsY25JcE95Qmxjbkp2Y25Nckt6c2dKenRjYmlBZ2ZWeHVJQ0J2ZFhRZ0t6MGdKMzBnSnp0Y2JpQWdhV1lnS0NSaWNtVmhhMDl1UlhKeWIzSXBJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QmxiSE5sSUhzZ0p6dGNiaUFnZlZ4dUlDQnlaWFIxY200Z2IzVjBPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvX2xpbWl0UHJvcGVydGllcy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYWxsT2YuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2FsbE9mLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfYWxsT2YoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcgJztcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkaXQgPSBpdC51dGlsLmNvcHkoaXQpO1xcXFxuICB2YXIgJGNsb3NpbmdCcmFjZXMgPSAnJztcXFxcbiAgJGl0LmxldmVsKys7XFxcXG4gIHZhciAkbmV4dFZhbGlkID0gJ3ZhbGlkJyArICRpdC5sZXZlbDtcXFxcbiAgdmFyICRjdXJyZW50QmFzZUlkID0gJGl0LmJhc2VJZCxcXFxcbiAgICAkYWxsU2NoZW1hc0VtcHR5ID0gdHJ1ZTtcXFxcbiAgdmFyIGFycjEgPSAkc2NoZW1hO1xcXFxuICBpZiAoYXJyMSkge1xcXFxuICAgIHZhciAkc2NoLCAkaSA9IC0xLFxcXFxuICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XFxcXG4gICAgd2hpbGUgKCRpIDwgbDEpIHtcXFxcbiAgICAgICRzY2ggPSBhcnIxWyRpICs9IDFdO1xcXFxuICAgICAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKSkge1xcXFxuICAgICAgICAkYWxsU2NoZW1hc0VtcHR5ID0gZmFsc2U7XFxcXG4gICAgICAgICRpdC5zY2hlbWEgPSAkc2NoO1xcXFxuICAgICAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoICsgJ1snICsgJGkgKyAnXSc7XFxcXG4gICAgICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGggKyAnLycgKyAkaTtcXFxcbiAgICAgICAgb3V0ICs9ICcgICcgKyAoaXQudmFsaWRhdGUoJGl0KSkgKyAnICc7XFxcXG4gICAgICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcXFxcbiAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkbmV4dFZhbGlkKSArICcpIHsgJztcXFxcbiAgICAgICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICBpZiAoJGFsbFNjaGVtYXNFbXB0eSkge1xcXFxuICAgICAgb3V0ICs9ICcgaWYgKHRydWUpIHsgJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcgJyArICgkY2xvc2luZ0JyYWNlcy5zbGljZSgwLCAtMSkpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICBvdXQgPSBpdC51dGlsLmNsZWFuVXBDb2RlKG91dCk7XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OWhiR3hQWmk1cWN5NXFjeUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwybHRhbTk1VWxCREx5NHZibTlrWlY5dGIyUjFiR1Z6TDJGcWRpOXNhV0l2Wkc5MGFuTXZZV3hzVDJZdWFuTS9aV0V3TnlKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW5kWE5sSUhOMGNtbGpkQ2M3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdkbGJtVnlZWFJsWDJGc2JFOW1LR2wwTENBa2EyVjVkMjl5WkN3Z0pISjFiR1ZVZVhCbEtTQjdYRzRnSUhaaGNpQnZkWFFnUFNBbklDYzdYRzRnSUhaaGNpQWtjMk5vWlcxaElEMGdhWFF1YzJOb1pXMWhXeVJyWlhsM2IzSmtYVHRjYmlBZ2RtRnlJQ1J6WTJobGJXRlFZWFJvSUQwZ2FYUXVjMk5vWlcxaFVHRjBhQ0FySUdsMExuVjBhV3d1WjJWMFVISnZjR1Z5ZEhrb0pHdGxlWGR2Y21RcE8xeHVJQ0IyWVhJZ0pHVnljbE5qYUdWdFlWQmhkR2dnUFNCcGRDNWxjbkpUWTJobGJXRlFZWFJvSUNzZ0p5OG5JQ3NnSkd0bGVYZHZjbVE3WEc0Z0lIWmhjaUFrWW5KbFlXdFBia1Z5Y205eUlEMGdJV2wwTG05d2RITXVZV3hzUlhKeWIzSnpPMXh1SUNCMllYSWdKR2wwSUQwZ2FYUXVkWFJwYkM1amIzQjVLR2wwS1R0Y2JpQWdkbUZ5SUNSamJHOXphVzVuUW5KaFkyVnpJRDBnSnljN1hHNGdJQ1JwZEM1c1pYWmxiQ3NyTzF4dUlDQjJZWElnSkc1bGVIUldZV3hwWkNBOUlDZDJZV3hwWkNjZ0t5QWthWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtZM1Z5Y21WdWRFSmhjMlZKWkNBOUlDUnBkQzVpWVhObFNXUXNYRzRnSUNBZ0pHRnNiRk5qYUdWdFlYTkZiWEIwZVNBOUlIUnlkV1U3WEc0Z0lIWmhjaUJoY25JeElEMGdKSE5qYUdWdFlUdGNiaUFnYVdZZ0tHRnljakVwSUh0Y2JpQWdJQ0IyWVhJZ0pITmphQ3dnSkdrZ1BTQXRNU3hjYmlBZ0lDQWdJR3d4SUQwZ1lYSnlNUzVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJSGRvYVd4bElDZ2thU0E4SUd3eEtTQjdYRzRnSUNBZ0lDQWtjMk5vSUQwZ1lYSnlNVnNrYVNBclBTQXhYVHRjYmlBZ0lDQWdJR2xtSUNocGRDNTFkR2xzTG5OamFHVnRZVWhoYzFKMWJHVnpLQ1J6WTJnc0lHbDBMbEpWVEVWVExtRnNiQ2twSUh0Y2JpQWdJQ0FnSUNBZ0pHRnNiRk5qYUdWdFlYTkZiWEIwZVNBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBa2FYUXVjMk5vWlcxaElEMGdKSE5qYUR0Y2JpQWdJQ0FnSUNBZ0pHbDBMbk5qYUdWdFlWQmhkR2dnUFNBa2MyTm9aVzFoVUdGMGFDQXJJQ2RiSnlBcklDUnBJQ3NnSjEwbk8xeHVJQ0FnSUNBZ0lDQWthWFF1WlhKeVUyTm9aVzFoVUdGMGFDQTlJQ1JsY25KVFkyaGxiV0ZRWVhSb0lDc2dKeThuSUNzZ0pHazdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ0FuSUNzZ0tHbDBMblpoYkdsa1lYUmxLQ1JwZENrcElDc2dKeUFuTzF4dUlDQWdJQ0FnSUNBa2FYUXVZbUZ6WlVsa0lEMGdKR04xY25KbGJuUkNZWE5sU1dRN1hHNGdJQ0FnSUNBZ0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDY2dLeUFvSkc1bGVIUldZV3hwWkNrZ0t5QW5LU0I3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdKR05zYjNOcGJtZENjbUZqWlhNZ0t6MGdKMzBuTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzRnSUdsbUlDZ2tZbkpsWVd0UGJrVnljbTl5S1NCN1hHNGdJQ0FnYVdZZ0tDUmhiR3hUWTJobGJXRnpSVzF3ZEhrcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2gwY25WbEtTQjdJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklDY2dLeUFvSkdOc2IzTnBibWRDY21GalpYTXVjMnhwWTJVb01Dd2dMVEVwS1NBcklDY2dKenRjYmlBZ0lDQjlYRzRnSUgxY2JpQWdiM1YwSUQwZ2FYUXVkWFJwYkM1amJHVmhibFZ3UTI5a1pTaHZkWFFwTzF4dUlDQnlaWFIxY200Z2IzVjBPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9hbGxPZi5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYW55T2YuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2FueU9mLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfYW55T2YoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcgJztcXFxcbiAgdmFyICRsdmwgPSBpdC5sZXZlbDtcXFxcbiAgdmFyICRkYXRhTHZsID0gaXQuZGF0YUxldmVsO1xcXFxuICB2YXIgJHNjaGVtYSA9IGl0LnNjaGVtYVska2V5d29yZF07XFxcXG4gIHZhciAkc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyBpdC51dGlsLmdldFByb3BlcnR5KCRrZXl3b3JkKTtcXFxcbiAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICB2YXIgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgdmFyICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgdmFyICR2YWxpZCA9ICd2YWxpZCcgKyAkbHZsO1xcXFxuICB2YXIgJGVycnMgPSAnZXJyc19fJyArICRsdmw7XFxcXG4gIHZhciAkaXQgPSBpdC51dGlsLmNvcHkoaXQpO1xcXFxuICB2YXIgJGNsb3NpbmdCcmFjZXMgPSAnJztcXFxcbiAgJGl0LmxldmVsKys7XFxcXG4gIHZhciAkbmV4dFZhbGlkID0gJ3ZhbGlkJyArICRpdC5sZXZlbDtcXFxcbiAgdmFyICRub0VtcHR5U2NoZW1hID0gJHNjaGVtYS5ldmVyeShmdW5jdGlvbigkc2NoKSB7XFxcXG4gICAgcmV0dXJuIGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKTtcXFxcbiAgfSk7XFxcXG4gIGlmICgkbm9FbXB0eVNjaGVtYSkge1xcXFxuICAgIHZhciAkY3VycmVudEJhc2VJZCA9ICRpdC5iYXNlSWQ7XFxcXG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJGVycnMpICsgJyA9IGVycm9yczsgdmFyICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgICc7XFxcXG4gICAgdmFyICR3YXNDb21wb3NpdGUgPSBpdC5jb21wb3NpdGVSdWxlO1xcXFxuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9IHRydWU7XFxcXG4gICAgdmFyIGFycjEgPSAkc2NoZW1hO1xcXFxuICAgIGlmIChhcnIxKSB7XFxcXG4gICAgICB2YXIgJHNjaCwgJGkgPSAtMSxcXFxcbiAgICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XFxcXG4gICAgICB3aGlsZSAoJGkgPCBsMSkge1xcXFxuICAgICAgICAkc2NoID0gYXJyMVskaSArPSAxXTtcXFxcbiAgICAgICAgJGl0LnNjaGVtYSA9ICRzY2g7XFxcXG4gICAgICAgICRpdC5zY2hlbWFQYXRoID0gJHNjaGVtYVBhdGggKyAnWycgKyAkaSArICddJztcXFxcbiAgICAgICAgJGl0LmVyclNjaGVtYVBhdGggPSAkZXJyU2NoZW1hUGF0aCArICcvJyArICRpO1xcXFxuICAgICAgICBvdXQgKz0gJyAgJyArIChpdC52YWxpZGF0ZSgkaXQpKSArICcgJztcXFxcbiAgICAgICAgJGl0LmJhc2VJZCA9ICRjdXJyZW50QmFzZUlkO1xcXFxuICAgICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gJyArICgkdmFsaWQpICsgJyB8fCAnICsgKCRuZXh0VmFsaWQpICsgJzsgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICc7XFxcXG4gICAgICAgICRjbG9zaW5nQnJhY2VzICs9ICd9JztcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gJHdhc0NvbXBvc2l0ZTtcXFxcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdhbnlPZicpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XFxcXG4gICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXFxcXFxcXCdzaG91bGQgbWF0Y2ggc29tZSBzY2hlbWEgaW4gYW55T2ZcXFxcXFxcXCcgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcge30gJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKHZFcnJvcnMpOyAnO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gdkVycm9yczsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9IGVsc2UgeyAgZXJyb3JzID0gJyArICgkZXJycykgKyAnOyBpZiAodkVycm9ycyAhPT0gbnVsbCkgeyBpZiAoJyArICgkZXJycykgKyAnKSB2RXJyb3JzLmxlbmd0aCA9ICcgKyAoJGVycnMpICsgJzsgZWxzZSB2RXJyb3JzID0gbnVsbDsgfSAnO1xcXFxuICAgIGlmIChpdC5vcHRzLmFsbEVycm9ycykge1xcXFxuICAgICAgb3V0ICs9ICcgfSAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgPSBpdC51dGlsLmNsZWFuVXBDb2RlKG91dCk7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgIG91dCArPSAnIGlmICh0cnVlKSB7ICc7XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OWhibmxQWmk1cWN5NXFjeUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwybHRhbTk1VWxCREx5NHZibTlrWlY5dGIyUjFiR1Z6TDJGcWRpOXNhV0l2Wkc5MGFuTXZZVzU1VDJZdWFuTS9OakJtTlNKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW5kWE5sSUhOMGNtbGpkQ2M3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdkbGJtVnlZWFJsWDJGdWVVOW1LR2wwTENBa2EyVjVkMjl5WkN3Z0pISjFiR1ZVZVhCbEtTQjdYRzRnSUhaaGNpQnZkWFFnUFNBbklDYzdYRzRnSUhaaGNpQWtiSFpzSUQwZ2FYUXViR1YyWld3N1hHNGdJSFpoY2lBa1pHRjBZVXgyYkNBOUlHbDBMbVJoZEdGTVpYWmxiRHRjYmlBZ2RtRnlJQ1J6WTJobGJXRWdQU0JwZEM1elkyaGxiV0ZiSkd0bGVYZHZjbVJkTzF4dUlDQjJZWElnSkhOamFHVnRZVkJoZEdnZ1BTQnBkQzV6WTJobGJXRlFZWFJvSUNzZ2FYUXVkWFJwYkM1blpYUlFjbTl3WlhKMGVTZ2thMlY1ZDI5eVpDazdYRzRnSUhaaGNpQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lBa2EyVjVkMjl5WkR0Y2JpQWdkbUZ5SUNSaWNtVmhhMDl1UlhKeWIzSWdQU0FoYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk03WEc0Z0lIWmhjaUFrWkdGMFlTQTlJQ2RrWVhSaEp5QXJJQ2drWkdGMFlVeDJiQ0I4ZkNBbkp5azdYRzRnSUhaaGNpQWtkbUZzYVdRZ1BTQW5kbUZzYVdRbklDc2dKR3gyYkR0Y2JpQWdkbUZ5SUNSbGNuSnpJRDBnSjJWeWNuTmZYeWNnS3lBa2JIWnNPMXh1SUNCMllYSWdKR2wwSUQwZ2FYUXVkWFJwYkM1amIzQjVLR2wwS1R0Y2JpQWdkbUZ5SUNSamJHOXphVzVuUW5KaFkyVnpJRDBnSnljN1hHNGdJQ1JwZEM1c1pYWmxiQ3NyTzF4dUlDQjJZWElnSkc1bGVIUldZV3hwWkNBOUlDZDJZV3hwWkNjZ0t5QWthWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtibTlGYlhCMGVWTmphR1Z0WVNBOUlDUnpZMmhsYldFdVpYWmxjbmtvWm5WdVkzUnBiMjRvSkhOamFDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCcGRDNTFkR2xzTG5OamFHVnRZVWhoYzFKMWJHVnpLQ1J6WTJnc0lHbDBMbEpWVEVWVExtRnNiQ2s3WEc0Z0lIMHBPMXh1SUNCcFppQW9KRzV2Ulcxd2RIbFRZMmhsYldFcElIdGNiaUFnSUNCMllYSWdKR04xY25KbGJuUkNZWE5sU1dRZ1BTQWthWFF1WW1GelpVbGtPMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUmxjbkp6S1NBcklDY2dQU0JsY25KdmNuTTdJSFpoY2lBbklDc2dLQ1IyWVd4cFpDa2dLeUFuSUQwZ1ptRnNjMlU3SUNBbk8xeHVJQ0FnSUhaaGNpQWtkMkZ6UTI5dGNHOXphWFJsSUQwZ2FYUXVZMjl0Y0c5emFYUmxVblZzWlR0Y2JpQWdJQ0JwZEM1amIyMXdiM05wZEdWU2RXeGxJRDBnSkdsMExtTnZiWEJ2YzJsMFpWSjFiR1VnUFNCMGNuVmxPMXh1SUNBZ0lIWmhjaUJoY25JeElEMGdKSE5qYUdWdFlUdGNiaUFnSUNCcFppQW9ZWEp5TVNrZ2UxeHVJQ0FnSUNBZ2RtRnlJQ1J6WTJnc0lDUnBJRDBnTFRFc1hHNGdJQ0FnSUNBZ0lHd3hJRDBnWVhKeU1TNXNaVzVuZEdnZ0xTQXhPMXh1SUNBZ0lDQWdkMmhwYkdVZ0tDUnBJRHdnYkRFcElIdGNiaUFnSUNBZ0lDQWdKSE5qYUNBOUlHRnljakZiSkdrZ0t6MGdNVjA3WEc0Z0lDQWdJQ0FnSUNScGRDNXpZMmhsYldFZ1BTQWtjMk5vTzF4dUlDQWdJQ0FnSUNBa2FYUXVjMk5vWlcxaFVHRjBhQ0E5SUNSelkyaGxiV0ZRWVhSb0lDc2dKMXNuSUNzZ0pHa2dLeUFuWFNjN1hHNGdJQ0FnSUNBZ0lDUnBkQzVsY25KVFkyaGxiV0ZRWVhSb0lEMGdKR1Z5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lBa2FUdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY2dJQ2NnS3lBb2FYUXVkbUZzYVdSaGRHVW9KR2wwS1NrZ0t5QW5JQ2M3WEc0Z0lDQWdJQ0FnSUNScGRDNWlZWE5sU1dRZ1BTQWtZM1Z5Y21WdWRFSmhjMlZKWkR0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2drZG1Gc2FXUXBJQ3NnSnlBOUlDY2dLeUFvSkhaaGJHbGtLU0FySUNjZ2ZId2dKeUFySUNna2JtVjRkRlpoYkdsa0tTQXJJQ2M3SUdsbUlDZ2hKeUFySUNna2RtRnNhV1FwSUNzZ0p5a2dleUFuTzF4dUlDQWdJQ0FnSUNBa1kyeHZjMmx1WjBKeVlXTmxjeUFyUFNBbmZTYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0FnSUdsMExtTnZiWEJ2YzJsMFpWSjFiR1VnUFNBa2FYUXVZMjl0Y0c5emFYUmxVblZzWlNBOUlDUjNZWE5EYjIxd2IzTnBkR1U3WEc0Z0lDQWdiM1YwSUNzOUlDY2dKeUFySUNna1kyeHZjMmx1WjBKeVlXTmxjeWtnS3lBbklHbG1JQ2doSnlBcklDZ2tkbUZzYVdRcElDc2dKeWtnZXlBZ0lIWmhjaUJsY25JZ1BTQWdJQ2M3SUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCbGJITmxJQ292WEc0Z0lDQWdhV1lnS0dsMExtTnlaV0YwWlVWeWNtOXljeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUhzZ2EyVjVkMjl5WkRvZ1hGd25KeUFySUNnbllXNTVUMlluS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdmU0FuTzF4dUlDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXVnpjMkZuWlhNZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYldWemMyRm5aVG9nWEZ3bmMyaHZkV3hrSUcxaGRHTm9JSE52YldVZ2MyTm9aVzFoSUdsdUlHRnVlVTltWEZ3bklDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTUyWlhKaWIzTmxLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUN3Z2MyTm9aVzFoT2lCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tDUnpZMmhsYldGUVlYUm9LU0FySUNjZ0xDQndZWEpsYm5SVFkyaGxiV0U2SUhaaGJHbGtZWFJsTG5OamFHVnRZU2NnS3lBb2FYUXVjMk5vWlcxaFVHRjBhQ2tnS3lBbklDd2daR0YwWVRvZ0p5QXJJQ2drWkdGMFlTa2dLeUFuSUNjN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUh0OUlDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuT3lBZ2FXWWdLSFpGY25KdmNuTWdQVDA5SUc1MWJHd3BJSFpGY25KdmNuTWdQU0JiWlhKeVhUc2daV3h6WlNCMlJYSnliM0p6TG5CMWMyZ29aWEp5S1RzZ1pYSnliM0p6S3lzN0lDYzdYRzRnSUNBZ2FXWWdLQ0ZwZEM1amIyMXdiM05wZEdWU2RXeGxJQ1ltSUNSaWNtVmhhMDl1UlhKeWIzSXBJSHNnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUdsbUlDb3ZYRzRnSUNBZ0lDQnBaaUFvYVhRdVlYTjVibU1wSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RHaHliM2NnYm1WM0lGWmhiR2xrWVhScGIyNUZjbkp2Y2loMlJYSnliM0p6S1RzZ0p6dGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhiR2xrWVhSbExtVnljbTl5Y3lBOUlIWkZjbkp2Y25NN0lISmxkSFZ5YmlCbVlXeHpaVHNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdiM1YwSUNzOUlDY2dmU0JsYkhObElIc2dJR1Z5Y205eWN5QTlJQ2NnS3lBb0pHVnljbk1wSUNzZ0p6c2dhV1lnS0haRmNuSnZjbk1nSVQwOUlHNTFiR3dwSUhzZ2FXWWdLQ2NnS3lBb0pHVnljbk1wSUNzZ0p5a2dka1Z5Y205eWN5NXNaVzVuZEdnZ1BTQW5JQ3NnS0NSbGNuSnpLU0FySUNjN0lHVnNjMlVnZGtWeWNtOXljeUE5SUc1MWJHdzdJSDBnSnp0Y2JpQWdJQ0JwWmlBb2FYUXViM0IwY3k1aGJHeEZjbkp2Y25NcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ0lDQjlYRzRnSUNBZ2IzVjBJRDBnYVhRdWRYUnBiQzVqYkdWaGJsVndRMjlrWlNodmRYUXBPMXh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJR2xtSUNna1luSmxZV3RQYmtWeWNtOXlLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb2RISjFaU2tnZXlBbk8xeHVJQ0FnSUgxY2JpQWdmVnh1SUNCeVpYUjFjbTRnYjNWME8xeHVmVnh1SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvYW55T2YuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2NvbnN0LmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jb25zdC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2NvbnN0KGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcXFxcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcXFxcbiAgICAkc2NoZW1hVmFsdWU7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xcXFxuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xcXFxuICB9XFxcXG4gIGlmICghJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJzsnO1xcXFxuICB9XFxcXG4gIG91dCArPSAndmFyICcgKyAoJHZhbGlkKSArICcgPSBlcXVhbCgnICsgKCRkYXRhKSArICcsIHNjaGVtYScgKyAoJGx2bCkgKyAnKTsgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgJztcXFxcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdjb25zdCcpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBiZSBlcXVhbCB0byBjb25zdGFudFxcXFxcXFxcJyAnO1xcXFxuICAgIH1cXFxcbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcge30gJztcXFxcbiAgfVxcXFxuICB2YXIgX19lcnIgPSBvdXQ7XFxcXG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJyB9JztcXFxcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICBvdXQgKz0gJyBlbHNlIHsgJztcXFxcbiAgfVxcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTlqYjI1emRDNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwyRnFkaTlzYVdJdlpHOTBhbk12WTI5dWMzUXVhbk0vTURNd01pSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUluZFhObElITjBjbWxqZENjN1hHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlHZGxibVZ5WVhSbFgyTnZibk4wS0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pHRjBZU0E5SUNka1lYUmhKeUFySUNna1pHRjBZVXgyYkNCOGZDQW5KeWs3WEc0Z0lIWmhjaUFrZG1Gc2FXUWdQU0FuZG1Gc2FXUW5JQ3NnSkd4MmJEdGNiaUFnZG1GeUlDUnBjMFJoZEdFZ1BTQnBkQzV2Y0hSekxpUmtZWFJoSUNZbUlDUnpZMmhsYldFZ0ppWWdKSE5qYUdWdFlTNGtaR0YwWVN4Y2JpQWdJQ0FrYzJOb1pXMWhWbUZzZFdVN1hHNGdJR2xtSUNna2FYTkVZWFJoS1NCN1hHNGdJQ0FnYjNWMElDczlJQ2NnZG1GeUlITmphR1Z0WVNjZ0t5QW9KR3gyYkNrZ0t5QW5JRDBnSnlBcklDaHBkQzUxZEdsc0xtZGxkRVJoZEdFb0pITmphR1Z0WVM0a1pHRjBZU3dnSkdSaGRHRk1kbXdzSUdsMExtUmhkR0ZRWVhSb1FYSnlLU2tnS3lBbk95QW5PMXh1SUNBZ0lDUnpZMmhsYldGV1lXeDFaU0E5SUNkelkyaGxiV0VuSUNzZ0pHeDJiRHRjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FrYzJOb1pXMWhWbUZzZFdVZ1BTQWtjMk5vWlcxaE8xeHVJQ0I5WEc0Z0lHbG1JQ2doSkdselJHRjBZU2tnZTF4dUlDQWdJRzkxZENBclBTQW5JSFpoY2lCelkyaGxiV0VuSUNzZ0tDUnNkbXdwSUNzZ0p5QTlJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvSkhOamFHVnRZVkJoZEdncElDc2dKenNuTzF4dUlDQjlYRzRnSUc5MWRDQXJQU0FuZG1GeUlDY2dLeUFvSkhaaGJHbGtLU0FySUNjZ1BTQmxjWFZoYkNnbklDc2dLQ1JrWVhSaEtTQXJJQ2NzSUhOamFHVnRZU2NnS3lBb0pHeDJiQ2tnS3lBbktUc2dhV1lnS0NFbklDc2dLQ1IyWVd4cFpDa2dLeUFuS1NCN0lDQWdKenRjYmlBZ2RtRnlJQ1FrYjNWMFUzUmhZMnNnUFNBa0pHOTFkRk4wWVdOcklIeDhJRnRkTzF4dUlDQWtKRzkxZEZOMFlXTnJMbkIxYzJnb2IzVjBLVHRjYmlBZ2IzVjBJRDBnSnljN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQmxiSE5sSUNvdlhHNGdJR2xtSUNocGRDNWpjbVZoZEdWRmNuSnZjbk1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnYjNWMElDczlJQ2NnZXlCclpYbDNiM0prT2lCY1hDY25JQ3NnS0NkamIyNXpkQ2NwSUNzZ0oxeGNKeUFzSUdSaGRHRlFZWFJvT2lBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjZ0xDQnpZMmhsYldGUVlYUm9PaUFuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvSkdWeWNsTmphR1Z0WVZCaGRHZ3BLU0FySUNjZ0xDQndZWEpoYlhNNklIdDlJQ2M3WEc0Z0lDQWdhV1lnS0dsMExtOXdkSE11YldWemMyRm5aWE1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBc0lHMWxjM05oWjJVNklGeGNKM05vYjNWc1pDQmlaU0JsY1hWaGJDQjBieUJqYjI1emRHRnVkRnhjSnlBbk8xeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBc0lITmphR1Z0WVRvZ2RtRnNhV1JoZEdVdWMyTm9aVzFoSnlBcklDZ2tjMk5vWlcxaFVHRjBhQ2tnS3lBbklDd2djR0Z5Wlc1MFUyTm9aVzFoT2lCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tHbDBMbk5qYUdWdFlWQmhkR2dwSUNzZ0p5QXNJR1JoZEdFNklDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBbk8xeHVJQ0FnSUgxY2JpQWdJQ0J2ZFhRZ0t6MGdKeUI5SUNjN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2UzMGdKenRjYmlBZ2ZWeHVJQ0IyWVhJZ1gxOWxjbklnUFNCdmRYUTdYRzRnSUc5MWRDQTlJQ1FrYjNWMFUzUmhZMnN1Y0c5d0tDazdYRzRnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUdsbUlDaHBkQzVoYzNsdVl5a2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dkR2h5YjNjZ2JtVjNJRlpoYkdsa1lYUnBiMjVGY25KdmNpaGJKeUFySUNoZlgyVnljaWtnS3lBblhTazdJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIWmhiR2xrWVhSbExtVnljbTl5Y3lBOUlGc25JQ3NnS0Y5ZlpYSnlLU0FySUNkZE95QnlaWFIxY200Z1ptRnNjMlU3SUNjN1hHNGdJQ0FnZlZ4dUlDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQmxjbklnUFNBbklDc2dLRjlmWlhKeUtTQXJJQ2M3SUNCcFppQW9ka1Z5Y205eWN5QTlQVDBnYm5Wc2JDa2dka1Z5Y205eWN5QTlJRnRsY25KZE95QmxiSE5sSUhaRmNuSnZjbk11Y0hWemFDaGxjbklwT3lCbGNuSnZjbk1yS3pzZ0p6dGNiaUFnZlZ4dUlDQnZkWFFnS3owZ0p5QjlKenRjYmlBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNCdmRYUWdLejBnSnlCbGJITmxJSHNnSnp0Y2JpQWdmVnh1SUNCeVpYUjFjbTRnYjNWME8xeHVmVnh1SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY29uc3QuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2NvbnRhaW5zLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jb250YWlucy5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2NvbnRhaW5zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcXFxcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xcXFxuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcXFxcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XFxcXG4gICRpdC5sZXZlbCsrO1xcXFxuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XFxcXG4gIHZhciAkaWR4ID0gJ2knICsgJGx2bCxcXFxcbiAgICAkZGF0YU54dCA9ICRpdC5kYXRhTGV2ZWwgPSBpdC5kYXRhTGV2ZWwgKyAxLFxcXFxuICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxcXFxuICAgICRjdXJyZW50QmFzZUlkID0gaXQuYmFzZUlkLFxcXFxuICAgICRub25FbXB0eVNjaGVtYSA9IGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaGVtYSwgaXQuUlVMRVMuYWxsKTtcXFxcbiAgb3V0ICs9ICd2YXIgJyArICgkZXJycykgKyAnID0gZXJyb3JzO3ZhciAnICsgKCR2YWxpZCkgKyAnOyc7XFxcXG4gIGlmICgkbm9uRW1wdHlTY2hlbWEpIHtcXFxcbiAgICB2YXIgJHdhc0NvbXBvc2l0ZSA9IGl0LmNvbXBvc2l0ZVJ1bGU7XFxcXG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcXFxcbiAgICAkaXQuc2NoZW1hID0gJHNjaGVtYTtcXFxcbiAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoO1xcXFxuICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XFxcXG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHRWYWxpZCkgKyAnID0gZmFsc2U7IGZvciAodmFyICcgKyAoJGlkeCkgKyAnID0gMDsgJyArICgkaWR4KSArICcgPCAnICsgKCRkYXRhKSArICcubGVuZ3RoOyAnICsgKCRpZHgpICsgJysrKSB7ICc7XFxcXG4gICAgJGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aEV4cHIoaXQuZXJyb3JQYXRoLCAkaWR4LCBpdC5vcHRzLmpzb25Qb2ludGVycywgdHJ1ZSk7XFxcXG4gICAgdmFyICRwYXNzRGF0YSA9ICRkYXRhICsgJ1snICsgJGlkeCArICddJztcXFxcbiAgICAkaXQuZGF0YVBhdGhBcnJbJGRhdGFOeHRdID0gJGlkeDtcXFxcbiAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xcXFxuICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcXFxcbiAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xcXFxuICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJykgYnJlYWs7IH0gICc7XFxcXG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gJHdhc0NvbXBvc2l0ZTtcXFxcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgeyc7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcgaWYgKCcgKyAoJGRhdGEpICsgJy5sZW5ndGggPT0gMCkgeyc7XFxcXG4gIH1cXFxcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdjb250YWlucycpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBjb250YWluIGEgdmFsaWQgaXRlbVxcXFxcXFxcJyAnO1xcXFxuICAgIH1cXFxcbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcge30gJztcXFxcbiAgfVxcXFxuICB2YXIgX19lcnIgPSBvdXQ7XFxcXG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJyB9IGVsc2UgeyAnO1xcXFxuICBpZiAoJG5vbkVtcHR5U2NoZW1hKSB7XFxcXG4gICAgb3V0ICs9ICcgIGVycm9ycyA9ICcgKyAoJGVycnMpICsgJzsgaWYgKHZFcnJvcnMgIT09IG51bGwpIHsgaWYgKCcgKyAoJGVycnMpICsgJykgdkVycm9ycy5sZW5ndGggPSAnICsgKCRlcnJzKSArICc7IGVsc2UgdkVycm9ycyA9IG51bGw7IH0gJztcXFxcbiAgfVxcXFxuICBpZiAoaXQub3B0cy5hbGxFcnJvcnMpIHtcXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gIH1cXFxcbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTlqYjI1MFlXbHVjeTVxY3k1cWN5SXNJbk52ZFhKalpYTWlPbHNpZDJWaWNHRmphem92TDJsdGFtOTVVbEJETHk0dmJtOWtaVjl0YjJSMWJHVnpMMkZxZGk5c2FXSXZaRzkwYW5NdlkyOXVkR0ZwYm5NdWFuTS9OV05tTlNKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW5kWE5sSUhOMGNtbGpkQ2M3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdkbGJtVnlZWFJsWDJOdmJuUmhhVzV6S0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pHRjBZU0E5SUNka1lYUmhKeUFySUNna1pHRjBZVXgyYkNCOGZDQW5KeWs3WEc0Z0lIWmhjaUFrZG1Gc2FXUWdQU0FuZG1Gc2FXUW5JQ3NnSkd4MmJEdGNiaUFnZG1GeUlDUmxjbkp6SUQwZ0oyVnljbk5mWHljZ0t5QWtiSFpzTzF4dUlDQjJZWElnSkdsMElEMGdhWFF1ZFhScGJDNWpiM0I1S0dsMEtUdGNiaUFnZG1GeUlDUmpiRzl6YVc1blFuSmhZMlZ6SUQwZ0p5YzdYRzRnSUNScGRDNXNaWFpsYkNzck8xeHVJQ0IyWVhJZ0pHNWxlSFJXWVd4cFpDQTlJQ2QyWVd4cFpDY2dLeUFrYVhRdWJHVjJaV3c3WEc0Z0lIWmhjaUFrYVdSNElEMGdKMmtuSUNzZ0pHeDJiQ3hjYmlBZ0lDQWtaR0YwWVU1NGRDQTlJQ1JwZEM1a1lYUmhUR1YyWld3Z1BTQnBkQzVrWVhSaFRHVjJaV3dnS3lBeExGeHVJQ0FnSUNSdVpYaDBSR0YwWVNBOUlDZGtZWFJoSnlBcklDUmtZWFJoVG5oMExGeHVJQ0FnSUNSamRYSnlaVzUwUW1GelpVbGtJRDBnYVhRdVltRnpaVWxrTEZ4dUlDQWdJQ1J1YjI1RmJYQjBlVk5qYUdWdFlTQTlJR2wwTG5WMGFXd3VjMk5vWlcxaFNHRnpVblZzWlhNb0pITmphR1Z0WVN3Z2FYUXVVbFZNUlZNdVlXeHNLVHRjYmlBZ2IzVjBJQ3M5SUNkMllYSWdKeUFySUNna1pYSnljeWtnS3lBbklEMGdaWEp5YjNKek8zWmhjaUFuSUNzZ0tDUjJZV3hwWkNrZ0t5QW5PeWM3WEc0Z0lHbG1JQ2drYm05dVJXMXdkSGxUWTJobGJXRXBJSHRjYmlBZ0lDQjJZWElnSkhkaGMwTnZiWEJ2YzJsMFpTQTlJR2wwTG1OdmJYQnZjMmwwWlZKMWJHVTdYRzRnSUNBZ2FYUXVZMjl0Y0c5emFYUmxVblZzWlNBOUlDUnBkQzVqYjIxd2IzTnBkR1ZTZFd4bElEMGdkSEoxWlR0Y2JpQWdJQ0FrYVhRdWMyTm9aVzFoSUQwZ0pITmphR1Z0WVR0Y2JpQWdJQ0FrYVhRdWMyTm9aVzFoVUdGMGFDQTlJQ1J6WTJobGJXRlFZWFJvTzF4dUlDQWdJQ1JwZEM1bGNuSlRZMmhsYldGUVlYUm9JRDBnSkdWeWNsTmphR1Z0WVZCaGRHZzdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJQ2NnS3lBb0pHNWxlSFJXWVd4cFpDa2dLeUFuSUQwZ1ptRnNjMlU3SUdadmNpQW9kbUZ5SUNjZ0t5QW9KR2xrZUNrZ0t5QW5JRDBnTURzZ0p5QXJJQ2drYVdSNEtTQXJJQ2NnUENBbklDc2dLQ1JrWVhSaEtTQXJJQ2N1YkdWdVozUm9PeUFuSUNzZ0tDUnBaSGdwSUNzZ0p5c3JLU0I3SUNjN1hHNGdJQ0FnSkdsMExtVnljbTl5VUdGMGFDQTlJR2wwTG5WMGFXd3VaMlYwVUdGMGFFVjRjSElvYVhRdVpYSnliM0pRWVhSb0xDQWthV1I0TENCcGRDNXZjSFJ6TG1wemIyNVFiMmx1ZEdWeWN5d2dkSEoxWlNrN1hHNGdJQ0FnZG1GeUlDUndZWE56UkdGMFlTQTlJQ1JrWVhSaElDc2dKMXNuSUNzZ0pHbGtlQ0FySUNkZEp6dGNiaUFnSUNBa2FYUXVaR0YwWVZCaGRHaEJjbkpiSkdSaGRHRk9lSFJkSUQwZ0pHbGtlRHRjYmlBZ0lDQjJZWElnSkdOdlpHVWdQU0JwZEM1MllXeHBaR0YwWlNna2FYUXBPMXh1SUNBZ0lDUnBkQzVpWVhObFNXUWdQU0FrWTNWeWNtVnVkRUpoYzJWSlpEdGNiaUFnSUNCcFppQW9hWFF1ZFhScGJDNTJZWEpQWTJOMWNtVnVZMlZ6S0NSamIyUmxMQ0FrYm1WNGRFUmhkR0VwSUR3Z01pa2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dKeUFySUNocGRDNTFkR2xzTG5aaGNsSmxjR3hoWTJVb0pHTnZaR1VzSUNSdVpYaDBSR0YwWVN3Z0pIQmhjM05FWVhSaEtTa2dLeUFuSUNjN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFpoY2lBbklDc2dLQ1J1WlhoMFJHRjBZU2tnS3lBbklEMGdKeUFySUNna2NHRnpjMFJoZEdFcElDc2dKenNnSnlBcklDZ2tZMjlrWlNrZ0t5QW5JQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2duSUNzZ0tDUnVaWGgwVm1Gc2FXUXBJQ3NnSnlrZ1luSmxZV3M3SUgwZ0lDYzdYRzRnSUNBZ2FYUXVZMjl0Y0c5emFYUmxVblZzWlNBOUlDUnBkQzVqYjIxd2IzTnBkR1ZTZFd4bElEMGdKSGRoYzBOdmJYQnZjMmwwWlR0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUFuSUNzZ0tDUmpiRzl6YVc1blFuSmhZMlZ6S1NBcklDY2dhV1lnS0NFbklDc2dLQ1J1WlhoMFZtRnNhV1FwSUNzZ0p5a2dleWM3WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDY2dLeUFvSkdSaGRHRXBJQ3NnSnk1c1pXNW5kR2dnUFQwZ01Da2dleWM3WEc0Z0lIMWNiaUFnZG1GeUlDUWtiM1YwVTNSaFkyc2dQU0FrSkc5MWRGTjBZV05ySUh4OElGdGRPMXh1SUNBa0pHOTFkRk4wWVdOckxuQjFjMmdvYjNWMEtUdGNiaUFnYjNWMElEMGdKeWM3SUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCbGJITmxJQ292WEc0Z0lHbG1JQ2hwZEM1amNtVmhkR1ZGY25KdmNuTWdJVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dleUJyWlhsM2IzSmtPaUJjWENjbklDc2dLQ2RqYjI1MFlXbHVjeWNwSUNzZ0oxeGNKeUFzSUdSaGRHRlFZWFJvT2lBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjZ0xDQnpZMmhsYldGUVlYUm9PaUFuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvSkdWeWNsTmphR1Z0WVZCaGRHZ3BLU0FySUNjZ0xDQndZWEpoYlhNNklIdDlJQ2M3WEc0Z0lDQWdhV1lnS0dsMExtOXdkSE11YldWemMyRm5aWE1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBc0lHMWxjM05oWjJVNklGeGNKM05vYjNWc1pDQmpiMjUwWVdsdUlHRWdkbUZzYVdRZ2FYUmxiVnhjSnlBbk8xeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBc0lITmphR1Z0WVRvZ2RtRnNhV1JoZEdVdWMyTm9aVzFoSnlBcklDZ2tjMk5vWlcxaFVHRjBhQ2tnS3lBbklDd2djR0Z5Wlc1MFUyTm9aVzFoT2lCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tHbDBMbk5qYUdWdFlWQmhkR2dwSUNzZ0p5QXNJR1JoZEdFNklDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBbk8xeHVJQ0FnSUgxY2JpQWdJQ0J2ZFhRZ0t6MGdKeUI5SUNjN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2UzMGdKenRjYmlBZ2ZWeHVJQ0IyWVhJZ1gxOWxjbklnUFNCdmRYUTdYRzRnSUc5MWRDQTlJQ1FrYjNWMFUzUmhZMnN1Y0c5d0tDazdYRzRnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUdsbUlDaHBkQzVoYzNsdVl5a2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dkR2h5YjNjZ2JtVjNJRlpoYkdsa1lYUnBiMjVGY25KdmNpaGJKeUFySUNoZlgyVnljaWtnS3lBblhTazdJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIWmhiR2xrWVhSbExtVnljbTl5Y3lBOUlGc25JQ3NnS0Y5ZlpYSnlLU0FySUNkZE95QnlaWFIxY200Z1ptRnNjMlU3SUNjN1hHNGdJQ0FnZlZ4dUlDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQmxjbklnUFNBbklDc2dLRjlmWlhKeUtTQXJJQ2M3SUNCcFppQW9ka1Z5Y205eWN5QTlQVDBnYm5Wc2JDa2dka1Z5Y205eWN5QTlJRnRsY25KZE95QmxiSE5sSUhaRmNuSnZjbk11Y0hWemFDaGxjbklwT3lCbGNuSnZjbk1yS3pzZ0p6dGNiaUFnZlZ4dUlDQnZkWFFnS3owZ0p5QjlJR1ZzYzJVZ2V5QW5PMXh1SUNCcFppQW9KRzV2YmtWdGNIUjVVMk5vWlcxaEtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ0lHVnljbTl5Y3lBOUlDY2dLeUFvSkdWeWNuTXBJQ3NnSnpzZ2FXWWdLSFpGY25KdmNuTWdJVDA5SUc1MWJHd3BJSHNnYVdZZ0tDY2dLeUFvSkdWeWNuTXBJQ3NnSnlrZ2RrVnljbTl5Y3k1c1pXNW5kR2dnUFNBbklDc2dLQ1JsY25KektTQXJJQ2M3SUdWc2MyVWdka1Z5Y205eWN5QTlJRzUxYkd3N0lIMGdKenRjYmlBZ2ZWeHVJQ0JwWmlBb2FYUXViM0IwY3k1aGJHeEZjbkp2Y25NcElIdGNiaUFnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUgxY2JpQWdiM1YwSUQwZ2FYUXVkWFJwYkM1amJHVmhibFZ3UTI5a1pTaHZkWFFwTzF4dUlDQnlaWFIxY200Z2IzVjBPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3SWl3aWMyOTFjbU5sVW05dmRDSTZJaUo5XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jb250YWlucy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY3VzdG9tLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvY3VzdG9tLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2N1c3RvbShpdCwgJGtleXdvcmQsICRydWxlVHlwZSkge1xcXFxuICB2YXIgb3V0ID0gJyAnO1xcXFxuICB2YXIgJGx2bCA9IGl0LmxldmVsO1xcXFxuICB2YXIgJGRhdGFMdmwgPSBpdC5kYXRhTGV2ZWw7XFxcXG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcXFxcbiAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJGtleXdvcmQpO1xcXFxuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XFxcXG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xcXFxuICB2YXIgJGVycm9yS2V5d29yZDtcXFxcbiAgdmFyICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgdmFyICR2YWxpZCA9ICd2YWxpZCcgKyAkbHZsO1xcXFxuICB2YXIgJGVycnMgPSAnZXJyc19fJyArICRsdmw7XFxcXG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXFxcXG4gICAgJHNjaGVtYVZhbHVlO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcXFxcbiAgfVxcXFxuICB2YXIgJHJ1bGUgPSB0aGlzLFxcXFxuICAgICRkZWZpbml0aW9uID0gJ2RlZmluaXRpb24nICsgJGx2bCxcXFxcbiAgICAkckRlZiA9ICRydWxlLmRlZmluaXRpb24sXFxcXG4gICAgJGNsb3NpbmdCcmFjZXMgPSAnJztcXFxcbiAgdmFyICRjb21waWxlLCAkaW5saW5lLCAkbWFjcm8sICRydWxlVmFsaWRhdGUsICR2YWxpZGF0ZUNvZGU7XFxcXG4gIGlmICgkaXNEYXRhICYmICRyRGVmLiRkYXRhKSB7XFxcXG4gICAgJHZhbGlkYXRlQ29kZSA9ICdrZXl3b3JkVmFsaWRhdGUnICsgJGx2bDtcXFxcbiAgICB2YXIgJHZhbGlkYXRlU2NoZW1hID0gJHJEZWYudmFsaWRhdGVTY2hlbWE7XFxcXG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJGRlZmluaXRpb24pICsgJyA9IFJVTEVTLmN1c3RvbVtcXFxcXFxcXCcnICsgKCRrZXl3b3JkKSArICdcXFxcXFxcXCddLmRlZmluaXRpb247IHZhciAnICsgKCR2YWxpZGF0ZUNvZGUpICsgJyA9ICcgKyAoJGRlZmluaXRpb24pICsgJy52YWxpZGF0ZTsnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgICRydWxlVmFsaWRhdGUgPSBpdC51c2VDdXN0b21SdWxlKCRydWxlLCAkc2NoZW1hLCBpdC5zY2hlbWEsIGl0KTtcXFxcbiAgICBpZiAoISRydWxlVmFsaWRhdGUpIHJldHVybjtcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAndmFsaWRhdGUuc2NoZW1hJyArICRzY2hlbWFQYXRoO1xcXFxuICAgICR2YWxpZGF0ZUNvZGUgPSAkcnVsZVZhbGlkYXRlLmNvZGU7XFxcXG4gICAgJGNvbXBpbGUgPSAkckRlZi5jb21waWxlO1xcXFxuICAgICRpbmxpbmUgPSAkckRlZi5pbmxpbmU7XFxcXG4gICAgJG1hY3JvID0gJHJEZWYubWFjcm87XFxcXG4gIH1cXFxcbiAgdmFyICRydWxlRXJycyA9ICR2YWxpZGF0ZUNvZGUgKyAnLmVycm9ycycsXFxcXG4gICAgJGkgPSAnaScgKyAkbHZsLFxcXFxuICAgICRydWxlRXJyID0gJ3J1bGVFcnInICsgJGx2bCxcXFxcbiAgICAkYXN5bmNLZXl3b3JkID0gJHJEZWYuYXN5bmM7XFxcXG4gIGlmICgkYXN5bmNLZXl3b3JkICYmICFpdC5hc3luYykgdGhyb3cgbmV3IEVycm9yKCdhc3luYyBrZXl3b3JkIGluIHN5bmMgc2NoZW1hJyk7XFxcXG4gIGlmICghKCRpbmxpbmUgfHwgJG1hY3JvKSkge1xcXFxuICAgIG91dCArPSAnJyArICgkcnVsZUVycnMpICsgJyA9IG51bGw7JztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJ3ZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7dmFyICcgKyAoJHZhbGlkKSArICc7JztcXFxcbiAgaWYgKCRpc0RhdGEgJiYgJHJEZWYuJGRhdGEpIHtcXFxcbiAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XFxcXG4gICAgb3V0ICs9ICcgaWYgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgPT09IHVuZGVmaW5lZCkgeyAnICsgKCR2YWxpZCkgKyAnID0gdHJ1ZTsgfSBlbHNlIHsgJztcXFxcbiAgICBpZiAoJHZhbGlkYXRlU2NoZW1hKSB7XFxcXG4gICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gJyArICgkZGVmaW5pdGlvbikgKyAnLnZhbGlkYXRlU2NoZW1hKCcgKyAoJHNjaGVtYVZhbHVlKSArICcpOyBpZiAoJyArICgkdmFsaWQpICsgJykgeyAnO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICBpZiAoJGlubGluZSkge1xcXFxuICAgIGlmICgkckRlZi5zdGF0ZW1lbnRzKSB7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCRydWxlVmFsaWRhdGUudmFsaWRhdGUpICsgJyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gJyArICgkcnVsZVZhbGlkYXRlLnZhbGlkYXRlKSArICc7ICc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2UgaWYgKCRtYWNybykge1xcXFxuICAgIHZhciAkaXQgPSBpdC51dGlsLmNvcHkoaXQpO1xcXFxuICAgIHZhciAkY2xvc2luZ0JyYWNlcyA9ICcnO1xcXFxuICAgICRpdC5sZXZlbCsrO1xcXFxuICAgIHZhciAkbmV4dFZhbGlkID0gJ3ZhbGlkJyArICRpdC5sZXZlbDtcXFxcbiAgICAkaXQuc2NoZW1hID0gJHJ1bGVWYWxpZGF0ZS52YWxpZGF0ZTtcXFxcbiAgICAkaXQuc2NoZW1hUGF0aCA9ICcnO1xcXFxuICAgIHZhciAkd2FzQ29tcG9zaXRlID0gaXQuY29tcG9zaXRlUnVsZTtcXFxcbiAgICBpdC5jb21wb3NpdGVSdWxlID0gJGl0LmNvbXBvc2l0ZVJ1bGUgPSB0cnVlO1xcXFxuICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCkucmVwbGFjZSgvdmFsaWRhdGVcXFxcXFxcXC5zY2hlbWEvZywgJHZhbGlkYXRlQ29kZSk7XFxcXG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gJHdhc0NvbXBvc2l0ZTtcXFxcbiAgICBvdXQgKz0gJyAnICsgKCRjb2RlKTtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgb3V0ID0gJyc7XFxcXG4gICAgb3V0ICs9ICcgICcgKyAoJHZhbGlkYXRlQ29kZSkgKyAnLmNhbGwoICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMucGFzc0NvbnRleHQpIHtcXFxcbiAgICAgIG91dCArPSAndGhpcyc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnc2VsZic7XFxcXG4gICAgfVxcXFxuICAgIGlmICgkY29tcGlsZSB8fCAkckRlZi5zY2hlbWEgPT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyAsICcgKyAoJHNjaGVtYVZhbHVlKSArICcgLCAnICsgKCRkYXRhKSArICcgLCB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyAsIChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpJztcXFxcbiAgICBpZiAoaXQuZXJyb3JQYXRoICE9ICdcXFxcXFxcIlxcXFxcXFwiJykge1xcXFxuICAgICAgb3V0ICs9ICcgKyAnICsgKGl0LmVycm9yUGF0aCk7XFxcXG4gICAgfVxcXFxuICAgIHZhciAkcGFyZW50RGF0YSA9ICRkYXRhTHZsID8gJ2RhdGEnICsgKCgkZGF0YUx2bCAtIDEpIHx8ICcnKSA6ICdwYXJlbnREYXRhJyxcXFxcbiAgICAgICRwYXJlbnREYXRhUHJvcGVydHkgPSAkZGF0YUx2bCA/IGl0LmRhdGFQYXRoQXJyWyRkYXRhTHZsXSA6ICdwYXJlbnREYXRhUHJvcGVydHknO1xcXFxuICAgIG91dCArPSAnICwgJyArICgkcGFyZW50RGF0YSkgKyAnICwgJyArICgkcGFyZW50RGF0YVByb3BlcnR5KSArICcgLCByb290RGF0YSApICAnO1xcXFxuICAgIHZhciBkZWZfY2FsbFJ1bGVWYWxpZGF0ZSA9IG91dDtcXFxcbiAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICAgIGlmICgkckRlZi5lcnJvcnMgPT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gJztcXFxcbiAgICAgIGlmICgkYXN5bmNLZXl3b3JkKSB7XFxcXG4gICAgICAgIG91dCArPSAnJyArIChpdC55aWVsZEF3YWl0KTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnJyArIChkZWZfY2FsbFJ1bGVWYWxpZGF0ZSkgKyAnOyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBpZiAoJGFzeW5jS2V5d29yZCkge1xcXFxuICAgICAgICAkcnVsZUVycnMgPSAnY3VzdG9tRXJyb3JzJyArICRsdmw7XFxcXG4gICAgICAgIG91dCArPSAnIHZhciAnICsgKCRydWxlRXJycykgKyAnID0gbnVsbDsgdHJ5IHsgJyArICgkdmFsaWQpICsgJyA9ICcgKyAoaXQueWllbGRBd2FpdCkgKyAoZGVmX2NhbGxSdWxlVmFsaWRhdGUpICsgJzsgfSBjYXRjaCAoZSkgeyAnICsgKCR2YWxpZCkgKyAnID0gZmFsc2U7IGlmIChlIGluc3RhbmNlb2YgVmFsaWRhdGlvbkVycm9yKSAnICsgKCRydWxlRXJycykgKyAnID0gZS5lcnJvcnM7IGVsc2UgdGhyb3cgZTsgfSAnO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgJyArICgkcnVsZUVycnMpICsgJyA9IG51bGw7ICcgKyAoJHZhbGlkKSArICcgPSAnICsgKGRlZl9jYWxsUnVsZVZhbGlkYXRlKSArICc7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGlmICgkckRlZi5tb2RpZnlpbmcpIHtcXFxcbiAgICBvdXQgKz0gJyBpZiAoJyArICgkcGFyZW50RGF0YSkgKyAnKSAnICsgKCRkYXRhKSArICcgPSAnICsgKCRwYXJlbnREYXRhKSArICdbJyArICgkcGFyZW50RGF0YVByb3BlcnR5KSArICddOyc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICcnICsgKCRjbG9zaW5nQnJhY2VzKTtcXFxcbiAgaWYgKCRyRGVmLnZhbGlkKSB7XFxcXG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgIG91dCArPSAnIGlmICh0cnVlKSB7ICc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIGlmICggJztcXFxcbiAgICBpZiAoJHJEZWYudmFsaWQgPT09IHVuZGVmaW5lZCkge1xcXFxuICAgICAgb3V0ICs9ICcgISc7XFxcXG4gICAgICBpZiAoJG1hY3JvKSB7XFxcXG4gICAgICAgIG91dCArPSAnJyArICgkbmV4dFZhbGlkKTtcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnJyArICgkdmFsaWQpO1xcXFxuICAgICAgfVxcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCEkckRlZi52YWxpZCkgKyAnICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnKSB7ICc7XFxcXG4gICAgJGVycm9yS2V5d29yZCA9ICRydWxlLmtleXdvcmQ7XFxcXG4gICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICAgIG91dCA9ICcnO1xcXFxuICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCRlcnJvcktleXdvcmQgfHwgJ2N1c3RvbScpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsga2V5d29yZDogXFxcXFxcXFwnJyArICgkcnVsZS5rZXl3b3JkKSArICdcXFxcXFxcXCcgfSAnO1xcXFxuICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnc2hvdWxkIHBhc3MgXFxcXFxcXCInICsgKCRydWxlLmtleXdvcmQpICsgJ1xcXFxcXFwiIGtleXdvcmQgdmFsaWRhdGlvblxcXFxcXFxcJyAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgfSAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgIH1cXFxcbiAgICB2YXIgX19lcnIgPSBvdXQ7XFxcXG4gICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgICB9XFxcXG4gICAgdmFyIGRlZl9jdXN0b21FcnJvciA9IG91dDtcXFxcbiAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICAgIGlmICgkaW5saW5lKSB7XFxcXG4gICAgICBpZiAoJHJEZWYuZXJyb3JzKSB7XFxcXG4gICAgICAgIGlmICgkckRlZi5lcnJvcnMgIT0gJ2Z1bGwnKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgIGZvciAodmFyICcgKyAoJGkpICsgJz0nICsgKCRlcnJzKSArICc7ICcgKyAoJGkpICsgJzxlcnJvcnM7ICcgKyAoJGkpICsgJysrKSB7IHZhciAnICsgKCRydWxlRXJyKSArICcgPSB2RXJyb3JzWycgKyAoJGkpICsgJ107IGlmICgnICsgKCRydWxlRXJyKSArICcuZGF0YVBhdGggPT09IHVuZGVmaW5lZCkgJyArICgkcnVsZUVycikgKyAnLmRhdGFQYXRoID0gKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnOyBpZiAoJyArICgkcnVsZUVycikgKyAnLnNjaGVtYVBhdGggPT09IHVuZGVmaW5lZCkgeyAnICsgKCRydWxlRXJyKSArICcuc2NoZW1hUGF0aCA9IFxcXFxcXFwiJyArICgkZXJyU2NoZW1hUGF0aCkgKyAnXFxcXFxcXCI7IH0gJztcXFxcbiAgICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAnICsgKCRydWxlRXJyKSArICcuc2NoZW1hID0gJyArICgkc2NoZW1hVmFsdWUpICsgJzsgJyArICgkcnVsZUVycikgKyAnLmRhdGEgPSAnICsgKCRkYXRhKSArICc7ICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgaWYgKCRyRGVmLmVycm9ycyA9PT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyAnICsgKGRlZl9jdXN0b21FcnJvcikgKyAnICc7XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJGVycnMpICsgJyA9PSBlcnJvcnMpIHsgJyArIChkZWZfY3VzdG9tRXJyb3IpICsgJyB9IGVsc2UgeyAgZm9yICh2YXIgJyArICgkaSkgKyAnPScgKyAoJGVycnMpICsgJzsgJyArICgkaSkgKyAnPGVycm9yczsgJyArICgkaSkgKyAnKyspIHsgdmFyICcgKyAoJHJ1bGVFcnIpICsgJyA9IHZFcnJvcnNbJyArICgkaSkgKyAnXTsgaWYgKCcgKyAoJHJ1bGVFcnIpICsgJy5kYXRhUGF0aCA9PT0gdW5kZWZpbmVkKSAnICsgKCRydWxlRXJyKSArICcuZGF0YVBhdGggPSAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICc7IGlmICgnICsgKCRydWxlRXJyKSArICcuc2NoZW1hUGF0aCA9PT0gdW5kZWZpbmVkKSB7ICcgKyAoJHJ1bGVFcnIpICsgJy5zY2hlbWFQYXRoID0gXFxcXFxcXCInICsgKCRlcnJTY2hlbWFQYXRoKSArICdcXFxcXFxcIjsgfSAnO1xcXFxuICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICcgKyAoJHJ1bGVFcnIpICsgJy5zY2hlbWEgPSAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnOyAnICsgKCRydWxlRXJyKSArICcuZGF0YSA9ICcgKyAoJGRhdGEpICsgJzsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfSB9ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH1cXFxcbiAgICB9IGVsc2UgaWYgKCRtYWNybykge1xcXFxuICAgICAgb3V0ICs9ICcgICB2YXIgZXJyID0gICAnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCRlcnJvcktleXdvcmQgfHwgJ2N1c3RvbScpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsga2V5d29yZDogXFxcXFxcXFwnJyArICgkcnVsZS5rZXl3b3JkKSArICdcXFxcXFxcXCcgfSAnO1xcXFxuICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBwYXNzIFxcXFxcXFwiJyArICgkcnVsZS5rZXl3b3JkKSArICdcXFxcXFxcIiBrZXl3b3JkIHZhbGlkYXRpb25cXFxcXFxcXCcgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgICAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKHZFcnJvcnMpOyAnO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IHZFcnJvcnM7IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBpZiAoJHJEZWYuZXJyb3JzID09PSBmYWxzZSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAnICsgKGRlZl9jdXN0b21FcnJvcikgKyAnICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyBpZiAoQXJyYXkuaXNBcnJheSgnICsgKCRydWxlRXJycykgKyAnKSkgeyBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9ICcgKyAoJHJ1bGVFcnJzKSArICc7IGVsc2UgdkVycm9ycyA9IHZFcnJvcnMuY29uY2F0KCcgKyAoJHJ1bGVFcnJzKSArICcpOyBlcnJvcnMgPSB2RXJyb3JzLmxlbmd0aDsgIGZvciAodmFyICcgKyAoJGkpICsgJz0nICsgKCRlcnJzKSArICc7ICcgKyAoJGkpICsgJzxlcnJvcnM7ICcgKyAoJGkpICsgJysrKSB7IHZhciAnICsgKCRydWxlRXJyKSArICcgPSB2RXJyb3JzWycgKyAoJGkpICsgJ107IGlmICgnICsgKCRydWxlRXJyKSArICcuZGF0YVBhdGggPT09IHVuZGVmaW5lZCkgJyArICgkcnVsZUVycikgKyAnLmRhdGFQYXRoID0gKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnOyAgJyArICgkcnVsZUVycikgKyAnLnNjaGVtYVBhdGggPSBcXFxcXFxcIicgKyAoJGVyclNjaGVtYVBhdGgpICsgJ1xcXFxcXFwiOyAgJztcXFxcbiAgICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgICAgIG91dCArPSAnICcgKyAoJHJ1bGVFcnIpICsgJy5zY2hlbWEgPSAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnOyAnICsgKCRydWxlRXJyKSArICcuZGF0YSA9ICcgKyAoJGRhdGEpICsgJzsgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyB9IH0gZWxzZSB7ICcgKyAoZGVmX2N1c3RvbUVycm9yKSArICcgfSAnO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgIG91dCArPSAnIGVsc2UgeyAnO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTlqZFhOMGIyMHVhbk11YW5NaUxDSnpiM1Z5WTJWeklqcGJJbmRsWW5CaFkyczZMeTlwYldwdmVWSlFReTh1TDI1dlpHVmZiVzlrZFd4bGN5OWhhbll2YkdsaUwyUnZkR3B6TDJOMWMzUnZiUzVxY3o4M01qTTJJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlkMWMyVWdjM1J5YVdOMEp6dGNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNGdaMlZ1WlhKaGRHVmZZM1Z6ZEc5dEtHbDBMQ0FrYTJWNWQyOXlaQ3dnSkhKMWJHVlVlWEJsS1NCN1hHNGdJSFpoY2lCdmRYUWdQU0FuSUNjN1hHNGdJSFpoY2lBa2JIWnNJRDBnYVhRdWJHVjJaV3c3WEc0Z0lIWmhjaUFrWkdGMFlVeDJiQ0E5SUdsMExtUmhkR0ZNWlhabGJEdGNiaUFnZG1GeUlDUnpZMmhsYldFZ1BTQnBkQzV6WTJobGJXRmJKR3RsZVhkdmNtUmRPMXh1SUNCMllYSWdKSE5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2EyVjVkMjl5WkNrN1hHNGdJSFpoY2lBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkx5Y2dLeUFrYTJWNWQyOXlaRHRjYmlBZ2RtRnlJQ1JpY21WaGEwOXVSWEp5YjNJZ1BTQWhhWFF1YjNCMGN5NWhiR3hGY25KdmNuTTdYRzRnSUhaaGNpQWtaWEp5YjNKTFpYbDNiM0prTzF4dUlDQjJZWElnSkdSaGRHRWdQU0FuWkdGMFlTY2dLeUFvSkdSaGRHRk1kbXdnZkh3Z0p5Y3BPMXh1SUNCMllYSWdKSFpoYkdsa0lEMGdKM1poYkdsa0p5QXJJQ1JzZG13N1hHNGdJSFpoY2lBa1pYSnljeUE5SUNkbGNuSnpYMThuSUNzZ0pHeDJiRHRjYmlBZ2RtRnlJQ1JwYzBSaGRHRWdQU0JwZEM1dmNIUnpMaVJrWVhSaElDWW1JQ1J6WTJobGJXRWdKaVlnSkhOamFHVnRZUzRrWkdGMFlTeGNiaUFnSUNBa2MyTm9aVzFoVm1Gc2RXVTdYRzRnSUdsbUlDZ2thWE5FWVhSaEtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJSE5qYUdWdFlTY2dLeUFvSkd4MmJDa2dLeUFuSUQwZ0p5QXJJQ2hwZEM1MWRHbHNMbWRsZEVSaGRHRW9KSE5qYUdWdFlTNGtaR0YwWVN3Z0pHUmhkR0ZNZG13c0lHbDBMbVJoZEdGUVlYUm9RWEp5S1NrZ0t5QW5PeUFuTzF4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlNBOUlDZHpZMmhsYldFbklDc2dKR3gyYkR0Y2JpQWdmU0JsYkhObElIdGNiaUFnSUNBa2MyTm9aVzFoVm1Gc2RXVWdQU0FrYzJOb1pXMWhPMXh1SUNCOVhHNGdJSFpoY2lBa2NuVnNaU0E5SUhSb2FYTXNYRzRnSUNBZ0pHUmxabWx1YVhScGIyNGdQU0FuWkdWbWFXNXBkR2x2YmljZ0t5QWtiSFpzTEZ4dUlDQWdJQ1J5UkdWbUlEMGdKSEoxYkdVdVpHVm1hVzVwZEdsdmJpeGNiaUFnSUNBa1kyeHZjMmx1WjBKeVlXTmxjeUE5SUNjbk8xeHVJQ0IyWVhJZ0pHTnZiWEJwYkdVc0lDUnBibXhwYm1Vc0lDUnRZV055Ynl3Z0pISjFiR1ZXWVd4cFpHRjBaU3dnSkhaaGJHbGtZWFJsUTI5a1pUdGNiaUFnYVdZZ0tDUnBjMFJoZEdFZ0ppWWdKSEpFWldZdUpHUmhkR0VwSUh0Y2JpQWdJQ0FrZG1Gc2FXUmhkR1ZEYjJSbElEMGdKMnRsZVhkdmNtUldZV3hwWkdGMFpTY2dLeUFrYkhac08xeHVJQ0FnSUhaaGNpQWtkbUZzYVdSaGRHVlRZMmhsYldFZ1BTQWtja1JsWmk1MllXeHBaR0YwWlZOamFHVnRZVHRjYmlBZ0lDQnZkWFFnS3owZ0p5QjJZWElnSnlBcklDZ2taR1ZtYVc1cGRHbHZiaWtnS3lBbklEMGdVbFZNUlZNdVkzVnpkRzl0VzF4Y0p5Y2dLeUFvSkd0bGVYZHZjbVFwSUNzZ0oxeGNKMTB1WkdWbWFXNXBkR2x2YmpzZ2RtRnlJQ2NnS3lBb0pIWmhiR2xrWVhSbFEyOWtaU2tnS3lBbklEMGdKeUFySUNna1pHVm1hVzVwZEdsdmJpa2dLeUFuTG5aaGJHbGtZWFJsT3ljN1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ0pISjFiR1ZXWVd4cFpHRjBaU0E5SUdsMExuVnpaVU4xYzNSdmJWSjFiR1VvSkhKMWJHVXNJQ1J6WTJobGJXRXNJR2wwTG5OamFHVnRZU3dnYVhRcE8xeHVJQ0FnSUdsbUlDZ2hKSEoxYkdWV1lXeHBaR0YwWlNrZ2NtVjBkWEp1TzF4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlNBOUlDZDJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dKSE5qYUdWdFlWQmhkR2c3WEc0Z0lDQWdKSFpoYkdsa1lYUmxRMjlrWlNBOUlDUnlkV3hsVm1Gc2FXUmhkR1V1WTI5a1pUdGNiaUFnSUNBa1kyOXRjR2xzWlNBOUlDUnlSR1ZtTG1OdmJYQnBiR1U3WEc0Z0lDQWdKR2x1YkdsdVpTQTlJQ1J5UkdWbUxtbHViR2x1WlR0Y2JpQWdJQ0FrYldGamNtOGdQU0FrY2tSbFppNXRZV055Ynp0Y2JpQWdmVnh1SUNCMllYSWdKSEoxYkdWRmNuSnpJRDBnSkhaaGJHbGtZWFJsUTI5a1pTQXJJQ2N1WlhKeWIzSnpKeXhjYmlBZ0lDQWthU0E5SUNkcEp5QXJJQ1JzZG13c1hHNGdJQ0FnSkhKMWJHVkZjbklnUFNBbmNuVnNaVVZ5Y2ljZ0t5QWtiSFpzTEZ4dUlDQWdJQ1JoYzNsdVkwdGxlWGR2Y21RZ1BTQWtja1JsWmk1aGMzbHVZenRjYmlBZ2FXWWdLQ1JoYzNsdVkwdGxlWGR2Y21RZ0ppWWdJV2wwTG1GemVXNWpLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KMkZ6ZVc1aklHdGxlWGR2Y21RZ2FXNGdjM2x1WXlCelkyaGxiV0VuS1R0Y2JpQWdhV1lnS0NFb0pHbHViR2x1WlNCOGZDQWtiV0ZqY204cEtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjbklDc2dLQ1J5ZFd4bFJYSnljeWtnS3lBbklEMGdiblZzYkRzbk8xeHVJQ0I5WEc0Z0lHOTFkQ0FyUFNBbmRtRnlJQ2NnS3lBb0pHVnljbk1wSUNzZ0p5QTlJR1Z5Y205eWN6dDJZWElnSnlBcklDZ2tkbUZzYVdRcElDc2dKenNuTzF4dUlDQnBaaUFvSkdselJHRjBZU0FtSmlBa2NrUmxaaTRrWkdGMFlTa2dlMXh1SUNBZ0lDUmpiRzl6YVc1blFuSmhZMlZ6SUNzOUlDZDlKenRjYmlBZ0lDQnZkWFFnS3owZ0p5QnBaaUFvSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwSUNzZ0p5QTlQVDBnZFc1a1pXWnBibVZrS1NCN0lDY2dLeUFvSkhaaGJHbGtLU0FySUNjZ1BTQjBjblZsT3lCOUlHVnNjMlVnZXlBbk8xeHVJQ0FnSUdsbUlDZ2tkbUZzYVdSaGRHVlRZMmhsYldFcElIdGNiaUFnSUNBZ0lDUmpiRzl6YVc1blFuSmhZMlZ6SUNzOUlDZDlKenRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pIWmhiR2xrS1NBcklDY2dQU0FuSUNzZ0tDUmtaV1pwYm1sMGFXOXVLU0FySUNjdWRtRnNhV1JoZEdWVFkyaGxiV0VvSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwSUNzZ0p5azdJR2xtSUNnbklDc2dLQ1IyWVd4cFpDa2dLeUFuS1NCN0lDYzdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lHbG1JQ2drYVc1c2FXNWxLU0I3WEc0Z0lDQWdhV1lnS0NSeVJHVm1Mbk4wWVhSbGJXVnVkSE1wSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KSEoxYkdWV1lXeHBaR0YwWlM1MllXeHBaR0YwWlNrZ0t5QW5JQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklDY2dLeUFvSkhaaGJHbGtLU0FySUNjZ1BTQW5JQ3NnS0NSeWRXeGxWbUZzYVdSaGRHVXVkbUZzYVdSaGRHVXBJQ3NnSnpzZ0p6dGNiaUFnSUNCOVhHNGdJSDBnWld4elpTQnBaaUFvSkcxaFkzSnZLU0I3WEc0Z0lDQWdkbUZ5SUNScGRDQTlJR2wwTG5WMGFXd3VZMjl3ZVNocGRDazdYRzRnSUNBZ2RtRnlJQ1JqYkc5emFXNW5RbkpoWTJWeklEMGdKeWM3WEc0Z0lDQWdKR2wwTG14bGRtVnNLeXM3WEc0Z0lDQWdkbUZ5SUNSdVpYaDBWbUZzYVdRZ1BTQW5kbUZzYVdRbklDc2dKR2wwTG14bGRtVnNPMXh1SUNBZ0lDUnBkQzV6WTJobGJXRWdQU0FrY25Wc1pWWmhiR2xrWVhSbExuWmhiR2xrWVhSbE8xeHVJQ0FnSUNScGRDNXpZMmhsYldGUVlYUm9JRDBnSnljN1hHNGdJQ0FnZG1GeUlDUjNZWE5EYjIxd2IzTnBkR1VnUFNCcGRDNWpiMjF3YjNOcGRHVlNkV3hsTzF4dUlDQWdJR2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdQU0FrYVhRdVkyOXRjRzl6YVhSbFVuVnNaU0E5SUhSeWRXVTdYRzRnSUNBZ2RtRnlJQ1JqYjJSbElEMGdhWFF1ZG1Gc2FXUmhkR1VvSkdsMEtTNXlaWEJzWVdObEtDOTJZV3hwWkdGMFpWeGNMbk5qYUdWdFlTOW5MQ0FrZG1Gc2FXUmhkR1ZEYjJSbEtUdGNiaUFnSUNCcGRDNWpiMjF3YjNOcGRHVlNkV3hsSUQwZ0pHbDBMbU52YlhCdmMybDBaVkoxYkdVZ1BTQWtkMkZ6UTI5dGNHOXphWFJsTzF4dUlDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pHTnZaR1VwTzF4dUlDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUhaaGNpQWtKRzkxZEZOMFlXTnJJRDBnSkNSdmRYUlRkR0ZqYXlCOGZDQmJYVHRjYmlBZ0lDQWtKRzkxZEZOMFlXTnJMbkIxYzJnb2IzVjBLVHRjYmlBZ0lDQnZkWFFnUFNBbkp6dGNiaUFnSUNCdmRYUWdLejBnSnlBZ0p5QXJJQ2drZG1Gc2FXUmhkR1ZEYjJSbEtTQXJJQ2N1WTJGc2JDZ2dKenRjYmlBZ0lDQnBaaUFvYVhRdWIzQjBjeTV3WVhOelEyOXVkR1Y0ZENrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNkMGFHbHpKenRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNkelpXeG1KenRjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLQ1JqYjIxd2FXeGxJSHg4SUNSeVJHVm1Mbk5qYUdWdFlTQTlQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ3dnSnlBcklDZ2taR0YwWVNrZ0t5QW5JQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklDd2dKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBJQ3NnSnlBc0lDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBc0lIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9hWFF1YzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHOTFkQ0FyUFNBbklDd2dLR1JoZEdGUVlYUm9JSHg4SUZ4Y0oxeGNKeWtuTzF4dUlDQWdJR2xtSUNocGRDNWxjbkp2Y2xCaGRHZ2dJVDBnSjF3aVhDSW5LU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFySUNjZ0t5QW9hWFF1WlhKeWIzSlFZWFJvS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdkbUZ5SUNSd1lYSmxiblJFWVhSaElEMGdKR1JoZEdGTWRtd2dQeUFuWkdGMFlTY2dLeUFvS0NSa1lYUmhUSFpzSUMwZ01Ta2dmSHdnSnljcElEb2dKM0JoY21WdWRFUmhkR0VuTEZ4dUlDQWdJQ0FnSkhCaGNtVnVkRVJoZEdGUWNtOXdaWEowZVNBOUlDUmtZWFJoVEhac0lEOGdhWFF1WkdGMFlWQmhkR2hCY25KYkpHUmhkR0ZNZG14ZElEb2dKM0JoY21WdWRFUmhkR0ZRY205d1pYSjBlU2M3WEc0Z0lDQWdiM1YwSUNzOUlDY2dMQ0FuSUNzZ0tDUndZWEpsYm5SRVlYUmhLU0FySUNjZ0xDQW5JQ3NnS0NSd1lYSmxiblJFWVhSaFVISnZjR1Z5ZEhrcElDc2dKeUFzSUhKdmIzUkVZWFJoSUNrZ0lDYzdYRzRnSUNBZ2RtRnlJR1JsWmw5allXeHNVblZzWlZaaGJHbGtZWFJsSUQwZ2IzVjBPMXh1SUNBZ0lHOTFkQ0E5SUNRa2IzVjBVM1JoWTJzdWNHOXdLQ2s3WEc0Z0lDQWdhV1lnS0NSeVJHVm1MbVZ5Y205eWN5QTlQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pIWmhiR2xrS1NBcklDY2dQU0FuTzF4dUlDQWdJQ0FnYVdZZ0tDUmhjM2x1WTB0bGVYZHZjbVFwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjbklDc2dLR2wwTG5scFpXeGtRWGRoYVhRcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjbklDc2dLR1JsWmw5allXeHNVblZzWlZaaGJHbGtZWFJsS1NBcklDYzdJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHbG1JQ2drWVhONWJtTkxaWGwzYjNKa0tTQjdYRzRnSUNBZ0lDQWdJQ1J5ZFd4bFJYSnljeUE5SUNkamRYTjBiMjFGY25KdmNuTW5JQ3NnSkd4MmJEdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUNjZ0t5QW9KSEoxYkdWRmNuSnpLU0FySUNjZ1BTQnVkV3hzT3lCMGNua2dleUFuSUNzZ0tDUjJZV3hwWkNrZ0t5QW5JRDBnSnlBcklDaHBkQzU1YVdWc1pFRjNZV2wwS1NBcklDaGtaV1pmWTJGc2JGSjFiR1ZXWVd4cFpHRjBaU2tnS3lBbk95QjlJR05oZEdOb0lDaGxLU0I3SUNjZ0t5QW9KSFpoYkdsa0tTQXJJQ2NnUFNCbVlXeHpaVHNnYVdZZ0tHVWdhVzV6ZEdGdVkyVnZaaUJXWVd4cFpHRjBhVzl1UlhKeWIzSXBJQ2NnS3lBb0pISjFiR1ZGY25KektTQXJJQ2NnUFNCbExtVnljbTl5Y3pzZ1pXeHpaU0IwYUhKdmR5QmxPeUI5SUNjN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1J5ZFd4bFJYSnljeWtnS3lBbklEMGdiblZzYkRzZ0p5QXJJQ2drZG1Gc2FXUXBJQ3NnSnlBOUlDY2dLeUFvWkdWbVgyTmhiR3hTZFd4bFZtRnNhV1JoZEdVcElDc2dKenNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNiaUFnYVdZZ0tDUnlSR1ZtTG0xdlpHbG1lV2x1WnlrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDZ25JQ3NnS0NSd1lYSmxiblJFWVhSaEtTQXJJQ2NwSUNjZ0t5QW9KR1JoZEdFcElDc2dKeUE5SUNjZ0t5QW9KSEJoY21WdWRFUmhkR0VwSUNzZ0oxc25JQ3NnS0NSd1lYSmxiblJFWVhSaFVISnZjR1Z5ZEhrcElDc2dKMTA3Snp0Y2JpQWdmVnh1SUNCdmRYUWdLejBnSnljZ0t5QW9KR05zYjNOcGJtZENjbUZqWlhNcE8xeHVJQ0JwWmlBb0pISkVaV1l1ZG1Gc2FXUXBJSHRjYmlBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0hSeWRXVXBJSHNnSnp0Y2JpQWdJQ0I5WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDQW5PMXh1SUNBZ0lHbG1JQ2drY2tSbFppNTJZV3hwWkNBOVBUMGdkVzVrWldacGJtVmtLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFoSnp0Y2JpQWdJQ0FnSUdsbUlDZ2tiV0ZqY204cElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY25JQ3NnS0NSdVpYaDBWbUZzYVdRcE8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjbklDc2dLQ1IyWVd4cFpDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9JU1J5UkdWbUxuWmhiR2xrS1NBcklDY2dKenRjYmlBZ0lDQjlYRzRnSUNBZ2IzVjBJQ3M5SUNjcElIc2dKenRjYmlBZ0lDQWtaWEp5YjNKTFpYbDNiM0prSUQwZ0pISjFiR1V1YTJWNWQyOXlaRHRjYmlBZ0lDQjJZWElnSkNSdmRYUlRkR0ZqYXlBOUlDUWtiM1YwVTNSaFkyc2dmSHdnVzEwN1hHNGdJQ0FnSkNSdmRYUlRkR0ZqYXk1d2RYTm9LRzkxZENrN1hHNGdJQ0FnYjNWMElEMGdKeWM3WEc0Z0lDQWdkbUZ5SUNRa2IzVjBVM1JoWTJzZ1BTQWtKRzkxZEZOMFlXTnJJSHg4SUZ0ZE8xeHVJQ0FnSUNRa2IzVjBVM1JoWTJzdWNIVnphQ2h2ZFhRcE8xeHVJQ0FnSUc5MWRDQTlJQ2NuT3lBdktpQnBjM1JoYm1KMWJDQnBaMjV2Y21VZ1pXeHpaU0FxTDF4dUlDQWdJR2xtSUNocGRDNWpjbVZoZEdWRmNuSnZjbk1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0pHVnljbTl5UzJWNWQyOXlaQ0I4ZkNBblkzVnpkRzl0SnlrZ0t5QW5YRnduSUN3Z1pHRjBZVkJoZEdnNklDaGtZWFJoVUdGMGFDQjhmQ0JjWENkY1hDY3BJQ3NnSnlBcklDaHBkQzVsY25KdmNsQmhkR2dwSUNzZ0p5QXNJSE5qYUdWdFlWQmhkR2c2SUNjZ0t5QW9hWFF1ZFhScGJDNTBiMUYxYjNSbFpGTjBjbWx1Wnlna1pYSnlVMk5vWlcxaFVHRjBhQ2twSUNzZ0p5QXNJSEJoY21GdGN6b2dleUJyWlhsM2IzSmtPaUJjWENjbklDc2dLQ1J5ZFd4bExtdGxlWGR2Y21RcElDc2dKMXhjSnlCOUlDYzdYRzRnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTV0WlhOellXZGxjeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnRaWE56WVdkbE9pQmNYQ2R6YUc5MWJHUWdjR0Z6Y3lCY0lpY2dLeUFvSkhKMWJHVXVhMlY1ZDI5eVpDa2dLeUFuWENJZ2EyVjVkMjl5WkNCMllXeHBaR0YwYVc5dVhGd25JQ2M3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDd2djMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLQ1J6WTJobGJXRlFZWFJvS1NBcklDY2dMQ0J3WVhKbGJuUlRZMmhsYldFNklIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9hWFF1YzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnWkdGMFlUb2dKeUFySUNna1pHRjBZU2tnS3lBbklDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjlJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lIWmhjaUJmWDJWeWNpQTlJRzkxZER0Y2JpQWdJQ0J2ZFhRZ1BTQWtKRzkxZEZOMFlXTnJMbkJ2Y0NncE8xeHVJQ0FnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUNBZ2FXWWdLR2wwTG1GemVXNWpLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhSb2NtOTNJRzVsZHlCV1lXeHBaR0YwYVc5dVJYSnliM0lvV3ljZ0t5QW9YMTlsY25JcElDc2dKMTBwT3lBbk8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnNhV1JoZEdVdVpYSnliM0p6SUQwZ1d5Y2dLeUFvWDE5bGNuSXBJQ3NnSjEwN0lISmxkSFZ5YmlCbVlXeHpaVHNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUdWeWNpQTlJQ2NnS3lBb1gxOWxjbklwSUNzZ0p6c2dJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ1cyVnljbDA3SUdWc2MyVWdka1Z5Y205eWN5NXdkWE5vS0dWeWNpazdJR1Z5Y205eWN5c3JPeUFuTzF4dUlDQWdJSDFjYmlBZ0lDQjJZWElnWkdWbVgyTjFjM1J2YlVWeWNtOXlJRDBnYjNWME8xeHVJQ0FnSUc5MWRDQTlJQ1FrYjNWMFUzUmhZMnN1Y0c5d0tDazdYRzRnSUNBZ2FXWWdLQ1JwYm14cGJtVXBJSHRjYmlBZ0lDQWdJR2xtSUNna2NrUmxaaTVsY25KdmNuTXBJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tDUnlSR1ZtTG1WeWNtOXljeUFoUFNBblpuVnNiQ2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QWdabTl5SUNoMllYSWdKeUFySUNna2FTa2dLeUFuUFNjZ0t5QW9KR1Z5Y25NcElDc2dKenNnSnlBcklDZ2thU2tnS3lBblBHVnljbTl5Y3pzZ0p5QXJJQ2drYVNrZ0t5QW5LeXNwSUhzZ2RtRnlJQ2NnS3lBb0pISjFiR1ZGY25JcElDc2dKeUE5SUhaRmNuSnZjbk5iSnlBcklDZ2thU2tnS3lBblhUc2dhV1lnS0NjZ0t5QW9KSEoxYkdWRmNuSXBJQ3NnSnk1a1lYUmhVR0YwYUNBOVBUMGdkVzVrWldacGJtVmtLU0FuSUNzZ0tDUnlkV3hsUlhKeUtTQXJJQ2N1WkdGMFlWQmhkR2dnUFNBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjN0lHbG1JQ2duSUNzZ0tDUnlkV3hsUlhKeUtTQXJJQ2N1YzJOb1pXMWhVR0YwYUNBOVBUMGdkVzVrWldacGJtVmtLU0I3SUNjZ0t5QW9KSEoxYkdWRmNuSXBJQ3NnSnk1elkyaGxiV0ZRWVhSb0lEMGdYQ0luSUNzZ0tDUmxjbkpUWTJobGJXRlFZWFJvS1NBcklDZGNJanNnZlNBbk8xeHVJQ0FnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TG5abGNtSnZjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pISjFiR1ZGY25JcElDc2dKeTV6WTJobGJXRWdQU0FuSUNzZ0tDUnpZMmhsYldGV1lXeDFaU2tnS3lBbk95QW5JQ3NnS0NSeWRXeGxSWEp5S1NBcklDY3VaR0YwWVNBOUlDY2dLeUFvSkdSaGRHRXBJQ3NnSnpzZ0p6dGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2ZTQW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0JwWmlBb0pISkVaV1l1WlhKeWIzSnpJRDA5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDY2dLeUFvWkdWbVgyTjFjM1J2YlVWeWNtOXlLU0FySUNjZ0p6dGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb0p5QXJJQ2drWlhKeWN5a2dLeUFuSUQwOUlHVnljbTl5Y3lrZ2V5QW5JQ3NnS0dSbFpsOWpkWE4wYjIxRmNuSnZjaWtnS3lBbklIMGdaV3h6WlNCN0lDQm1iM0lnS0haaGNpQW5JQ3NnS0NScEtTQXJJQ2M5SnlBcklDZ2taWEp5Y3lrZ0t5QW5PeUFuSUNzZ0tDUnBLU0FySUNjOFpYSnliM0p6T3lBbklDc2dLQ1JwS1NBcklDY3JLeWtnZXlCMllYSWdKeUFySUNna2NuVnNaVVZ5Y2lrZ0t5QW5JRDBnZGtWeWNtOXljMXNuSUNzZ0tDUnBLU0FySUNkZE95QnBaaUFvSnlBcklDZ2tjblZzWlVWeWNpa2dLeUFuTG1SaGRHRlFZWFJvSUQwOVBTQjFibVJsWm1sdVpXUXBJQ2NnS3lBb0pISjFiR1ZGY25JcElDc2dKeTVrWVhSaFVHRjBhQ0E5SUNoa1lYUmhVR0YwYUNCOGZDQmNYQ2RjWENjcElDc2dKeUFySUNocGRDNWxjbkp2Y2xCaGRHZ3BJQ3NnSnpzZ2FXWWdLQ2NnS3lBb0pISjFiR1ZGY25JcElDc2dKeTV6WTJobGJXRlFZWFJvSUQwOVBTQjFibVJsWm1sdVpXUXBJSHNnSnlBcklDZ2tjblZzWlVWeWNpa2dLeUFuTG5OamFHVnRZVkJoZEdnZ1BTQmNJaWNnS3lBb0pHVnljbE5qYUdWdFlWQmhkR2dwSUNzZ0oxd2lPeUI5SUNjN1hHNGdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtOXdkSE11ZG1WeVltOXpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dKeUFySUNna2NuVnNaVVZ5Y2lrZ0t5QW5Mbk5qYUdWdFlTQTlJQ2NnS3lBb0pITmphR1Z0WVZaaGJIVmxLU0FySUNjN0lDY2dLeUFvSkhKMWJHVkZjbklwSUNzZ0p5NWtZWFJoSUQwZ0p5QXJJQ2drWkdGMFlTa2dLeUFuT3lBbk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCOUlIMGdKenRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDBnWld4elpTQnBaaUFvSkcxaFkzSnZLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFnSUhaaGNpQmxjbklnUFNBZ0lDYzdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JsYkhObElDb3ZYRzRnSUNBZ0lDQnBaaUFvYVhRdVkzSmxZWFJsUlhKeWIzSnpJQ0U5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0pHVnljbTl5UzJWNWQyOXlaQ0I4ZkNBblkzVnpkRzl0SnlrZ0t5QW5YRnduSUN3Z1pHRjBZVkJoZEdnNklDaGtZWFJoVUdGMGFDQjhmQ0JjWENkY1hDY3BJQ3NnSnlBcklDaHBkQzVsY25KdmNsQmhkR2dwSUNzZ0p5QXNJSE5qYUdWdFlWQmhkR2c2SUNjZ0t5QW9hWFF1ZFhScGJDNTBiMUYxYjNSbFpGTjBjbWx1Wnlna1pYSnlVMk5vWlcxaFVHRjBhQ2twSUNzZ0p5QXNJSEJoY21GdGN6b2dleUJyWlhsM2IzSmtPaUJjWENjbklDc2dLQ1J5ZFd4bExtdGxlWGR2Y21RcElDc2dKMXhjSnlCOUlDYzdYRzRnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TG0xbGMzTmhaMlZ6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYldWemMyRm5aVG9nWEZ3bmMyaHZkV3hrSUhCaGMzTWdYQ0luSUNzZ0tDUnlkV3hsTG10bGVYZHZjbVFwSUNzZ0oxd2lJR3RsZVhkdmNtUWdkbUZzYVdSaGRHbHZibHhjSnlBbk8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TG5abGNtSnZjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QXNJSE5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2drYzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnY0dGeVpXNTBVMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLR2wwTG5OamFHVnRZVkJoZEdncElDc2dKeUFzSUdSaGRHRTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUgwZ0p6dGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKenNnSUdsbUlDaDJSWEp5YjNKeklEMDlQU0J1ZFd4c0tTQjJSWEp5YjNKeklEMGdXMlZ5Y2wwN0lHVnNjMlVnZGtWeWNtOXljeTV3ZFhOb0tHVnljaWs3SUdWeWNtOXljeXNyT3lBbk8xeHVJQ0FnSUNBZ2FXWWdLQ0ZwZEM1amIyMXdiM05wZEdWU2RXeGxJQ1ltSUNSaWNtVmhhMDl1UlhKeWIzSXBJSHNnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUdsbUlDb3ZYRzRnSUNBZ0lDQWdJR2xtSUNocGRDNWhjM2x1WXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFJvY205M0lHNWxkeUJXWVd4cFpHRjBhVzl1UlhKeWIzSW9ka1Z5Y205eWN5azdJQ2M3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnNhV1JoZEdVdVpYSnliM0p6SUQwZ2RrVnljbTl5Y3pzZ2NtVjBkWEp1SUdaaGJITmxPeUFuTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJR2xtSUNna2NrUmxaaTVsY25KdmNuTWdQVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9aR1ZtWDJOMWMzUnZiVVZ5Y205eUtTQXJJQ2NnSnp0Y2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0NjZ0t5QW9KSEoxYkdWRmNuSnpLU0FySUNjcEtTQjdJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ0p5QXJJQ2drY25Wc1pVVnljbk1wSUNzZ0p6c2daV3h6WlNCMlJYSnliM0p6SUQwZ2RrVnljbTl5Y3k1amIyNWpZWFFvSnlBcklDZ2tjblZzWlVWeWNuTXBJQ3NnSnlrN0lHVnljbTl5Y3lBOUlIWkZjbkp2Y25NdWJHVnVaM1JvT3lBZ1ptOXlJQ2gyWVhJZ0p5QXJJQ2drYVNrZ0t5QW5QU2NnS3lBb0pHVnljbk1wSUNzZ0p6c2dKeUFySUNna2FTa2dLeUFuUEdWeWNtOXljenNnSnlBcklDZ2thU2tnS3lBbkt5c3BJSHNnZG1GeUlDY2dLeUFvSkhKMWJHVkZjbklwSUNzZ0p5QTlJSFpGY25KdmNuTmJKeUFySUNna2FTa2dLeUFuWFRzZ2FXWWdLQ2NnS3lBb0pISjFiR1ZGY25JcElDc2dKeTVrWVhSaFVHRjBhQ0E5UFQwZ2RXNWtaV1pwYm1Wa0tTQW5JQ3NnS0NSeWRXeGxSWEp5S1NBcklDY3VaR0YwWVZCaGRHZ2dQU0FvWkdGMFlWQmhkR2dnZkh3Z1hGd25YRnduS1NBcklDY2dLeUFvYVhRdVpYSnliM0pRWVhSb0tTQXJJQ2M3SUNBbklDc2dLQ1J5ZFd4bFJYSnlLU0FySUNjdWMyTm9aVzFoVUdGMGFDQTlJRndpSnlBcklDZ2taWEp5VTJOb1pXMWhVR0YwYUNrZ0t5QW5YQ0k3SUNBbk8xeHVJQ0FnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTUyWlhKaWIzTmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2drY25Wc1pVVnljaWtnS3lBbkxuTmphR1Z0WVNBOUlDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2M3SUNjZ0t5QW9KSEoxYkdWRmNuSXBJQ3NnSnk1a1lYUmhJRDBnSnlBcklDZ2taR0YwWVNrZ0t5QW5PeUFuTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIMGdmU0JsYkhObElIc2dKeUFySUNoa1pXWmZZM1Z6ZEc5dFJYSnliM0lwSUNzZ0p5QjlJQ2M3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2daV3h6WlNCN0lDYzdYRzRnSUNBZ2ZWeHVJQ0I5WEc0Z0lISmxkSFZ5YmlCdmRYUTdYRzU5WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk95SXNJbk52ZFhKalpWSnZiM1FpT2lJaWZRPT1cXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2N1c3RvbS5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvZGVwZW5kZW5jaWVzLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvZGVwZW5kZW5jaWVzLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX2RlcGVuZGVuY2llcyhpdCwgJGtleXdvcmQsICRydWxlVHlwZSkge1xcXFxuICB2YXIgb3V0ID0gJyAnO1xcXFxuICB2YXIgJGx2bCA9IGl0LmxldmVsO1xcXFxuICB2YXIgJGRhdGFMdmwgPSBpdC5kYXRhTGV2ZWw7XFxcXG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcXFxcbiAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJGtleXdvcmQpO1xcXFxuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XFxcXG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xcXFxuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xcXFxuICB2YXIgJGVycnMgPSAnZXJyc19fJyArICRsdmw7XFxcXG4gIHZhciAkaXQgPSBpdC51dGlsLmNvcHkoaXQpO1xcXFxuICB2YXIgJGNsb3NpbmdCcmFjZXMgPSAnJztcXFxcbiAgJGl0LmxldmVsKys7XFxcXG4gIHZhciAkbmV4dFZhbGlkID0gJ3ZhbGlkJyArICRpdC5sZXZlbDtcXFxcbiAgdmFyICRzY2hlbWFEZXBzID0ge30sXFxcXG4gICAgJHByb3BlcnR5RGVwcyA9IHt9LFxcXFxuICAgICRvd25Qcm9wZXJ0aWVzID0gaXQub3B0cy5vd25Qcm9wZXJ0aWVzO1xcXFxuICBmb3IgKCRwcm9wZXJ0eSBpbiAkc2NoZW1hKSB7XFxcXG4gICAgdmFyICRzY2ggPSAkc2NoZW1hWyRwcm9wZXJ0eV07XFxcXG4gICAgdmFyICRkZXBzID0gQXJyYXkuaXNBcnJheSgkc2NoKSA/ICRwcm9wZXJ0eURlcHMgOiAkc2NoZW1hRGVwcztcXFxcbiAgICAkZGVwc1skcHJvcGVydHldID0gJHNjaDtcXFxcbiAgfVxcXFxuICBvdXQgKz0gJ3ZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7JztcXFxcbiAgdmFyICRjdXJyZW50RXJyb3JQYXRoID0gaXQuZXJyb3JQYXRoO1xcXFxuICBvdXQgKz0gJ3ZhciBtaXNzaW5nJyArICgkbHZsKSArICc7JztcXFxcbiAgZm9yICh2YXIgJHByb3BlcnR5IGluICRwcm9wZXJ0eURlcHMpIHtcXFxcbiAgICAkZGVwcyA9ICRwcm9wZXJ0eURlcHNbJHByb3BlcnR5XTtcXFxcbiAgICBpZiAoJGRlcHMubGVuZ3RoKSB7XFxcXG4gICAgICBvdXQgKz0gJyBpZiAoICcgKyAoJGRhdGEpICsgKGl0LnV0aWwuZ2V0UHJvcGVydHkoJHByb3BlcnR5KSkgKyAnICE9PSB1bmRlZmluZWQgJztcXFxcbiAgICAgIGlmICgkb3duUHJvcGVydGllcykge1xcXFxuICAgICAgICBvdXQgKz0gJyAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJyArICgkZGF0YSkgKyAnLCBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eSkpICsgJ1xcXFxcXFxcJykgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgIG91dCArPSAnICYmICggJztcXFxcbiAgICAgICAgdmFyIGFycjEgPSAkZGVwcztcXFxcbiAgICAgICAgaWYgKGFycjEpIHtcXFxcbiAgICAgICAgICB2YXIgJHByb3BlcnR5S2V5LCAkaSA9IC0xLFxcXFxuICAgICAgICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XFxcXG4gICAgICAgICAgd2hpbGUgKCRpIDwgbDEpIHtcXFxcbiAgICAgICAgICAgICRwcm9wZXJ0eUtleSA9IGFycjFbJGkgKz0gMV07XFxcXG4gICAgICAgICAgICBpZiAoJGkpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgfHwgJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIHZhciAkcHJvcCA9IGl0LnV0aWwuZ2V0UHJvcGVydHkoJHByb3BlcnR5S2V5KSxcXFxcbiAgICAgICAgICAgICAgJHVzZURhdGEgPSAkZGF0YSArICRwcm9wO1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgKCAoICcgKyAoJHVzZURhdGEpICsgJyA9PT0gdW5kZWZpbmVkICc7XFxcXG4gICAgICAgICAgICBpZiAoJG93blByb3BlcnRpZXMpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgfHwgISBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJyArICgkZGF0YSkgKyAnLCBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eUtleSkpICsgJ1xcXFxcXFxcJykgJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIG91dCArPSAnKSAmJiAobWlzc2luZycgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKGl0Lm9wdHMuanNvblBvaW50ZXJzID8gJHByb3BlcnR5S2V5IDogJHByb3ApKSArICcpICkgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgb3V0ICs9ICcpKSB7ICAnO1xcXFxuICAgICAgICB2YXIgJHByb3BlcnR5UGF0aCA9ICdtaXNzaW5nJyArICRsdmwsXFxcXG4gICAgICAgICAgJG1pc3NpbmdQcm9wZXJ0eSA9ICdcXFxcXFxcXCcgKyAnICsgJHByb3BlcnR5UGF0aCArICcgKyBcXFxcXFxcXCcnO1xcXFxuICAgICAgICBpZiAoaXQub3B0cy5fZXJyb3JEYXRhUGF0aFByb3BlcnR5KSB7XFxcXG4gICAgICAgICAgaXQuZXJyb3JQYXRoID0gaXQub3B0cy5qc29uUG9pbnRlcnMgPyBpdC51dGlsLmdldFBhdGhFeHByKCRjdXJyZW50RXJyb3JQYXRoLCAkcHJvcGVydHlQYXRoLCB0cnVlKSA6ICRjdXJyZW50RXJyb3JQYXRoICsgJyArICcgKyAkcHJvcGVydHlQYXRoO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgICAgICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgnZGVwZW5kZW5jaWVzJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBwcm9wZXJ0eTogXFxcXFxcXFwnJyArIChpdC51dGlsLmVzY2FwZVF1b3RlcygkcHJvcGVydHkpKSArICdcXFxcXFxcXCcsIG1pc3NpbmdQcm9wZXJ0eTogXFxcXFxcXFwnJyArICgkbWlzc2luZ1Byb3BlcnR5KSArICdcXFxcXFxcXCcsIGRlcHNDb3VudDogJyArICgkZGVwcy5sZW5ndGgpICsgJywgZGVwczogXFxcXFxcXFwnJyArIChpdC51dGlsLmVzY2FwZVF1b3RlcygkZGVwcy5sZW5ndGggPT0gMSA/ICRkZXBzWzBdIDogJGRlcHMuam9pbihcXFxcXFxcIiwgXFxcXFxcXCIpKSkgKyAnXFxcXFxcXFwnIH0gJztcXFxcbiAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnc2hvdWxkIGhhdmUgJztcXFxcbiAgICAgICAgICAgIGlmICgkZGVwcy5sZW5ndGggPT0gMSkge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJ3Byb3BlcnR5ICcgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJGRlcHNbMF0pKTtcXFxcbiAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAncHJvcGVydGllcyAnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRkZXBzLmpvaW4oXFxcXFxcXCIsIFxcXFxcXFwiKSkpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgb3V0ICs9ICcgd2hlbiBwcm9wZXJ0eSAnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eSkpICsgJyBpcyBwcmVzZW50XFxcXFxcXFwnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyApIHsgJztcXFxcbiAgICAgICAgdmFyIGFycjIgPSAkZGVwcztcXFxcbiAgICAgICAgaWYgKGFycjIpIHtcXFxcbiAgICAgICAgICB2YXIgJHByb3BlcnR5S2V5LCBpMiA9IC0xLFxcXFxuICAgICAgICAgICAgbDIgPSBhcnIyLmxlbmd0aCAtIDE7XFxcXG4gICAgICAgICAgd2hpbGUgKGkyIDwgbDIpIHtcXFxcbiAgICAgICAgICAgICRwcm9wZXJ0eUtleSA9IGFycjJbaTIgKz0gMV07XFxcXG4gICAgICAgICAgICB2YXIgJHByb3AgPSBpdC51dGlsLmdldFByb3BlcnR5KCRwcm9wZXJ0eUtleSksXFxcXG4gICAgICAgICAgICAgICRtaXNzaW5nUHJvcGVydHkgPSBpdC51dGlsLmVzY2FwZVF1b3RlcygkcHJvcGVydHlLZXkpLFxcXFxuICAgICAgICAgICAgICAkdXNlRGF0YSA9ICRkYXRhICsgJHByb3A7XFxcXG4gICAgICAgICAgICBpZiAoaXQub3B0cy5fZXJyb3JEYXRhUGF0aFByb3BlcnR5KSB7XFxcXG4gICAgICAgICAgICAgIGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aCgkY3VycmVudEVycm9yUGF0aCwgJHByb3BlcnR5S2V5LCBpdC5vcHRzLmpzb25Qb2ludGVycyk7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyBpZiAoICcgKyAoJHVzZURhdGEpICsgJyA9PT0gdW5kZWZpbmVkICc7XFxcXG4gICAgICAgICAgICBpZiAoJG93blByb3BlcnRpZXMpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgfHwgISBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJyArICgkZGF0YSkgKyAnLCBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eUtleSkpICsgJ1xcXFxcXFxcJykgJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIG91dCArPSAnKSB7ICB2YXIgZXJyID0gICAnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdkZXBlbmRlbmNpZXMnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IHByb3BlcnR5OiBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eSkpICsgJ1xcXFxcXFxcJywgbWlzc2luZ1Byb3BlcnR5OiBcXFxcXFxcXCcnICsgKCRtaXNzaW5nUHJvcGVydHkpICsgJ1xcXFxcXFxcJywgZGVwc0NvdW50OiAnICsgKCRkZXBzLmxlbmd0aCkgKyAnLCBkZXBzOiBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRkZXBzLmxlbmd0aCA9PSAxID8gJGRlcHNbMF0gOiAkZGVwcy5qb2luKFxcXFxcXFwiLCBcXFxcXFxcIikpKSArICdcXFxcXFxcXCcgfSAnO1xcXFxuICAgICAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBoYXZlICc7XFxcXG4gICAgICAgICAgICAgICAgaWYgKCRkZXBzLmxlbmd0aCA9PSAxKSB7XFxcXG4gICAgICAgICAgICAgICAgICBvdXQgKz0gJ3Byb3BlcnR5ICcgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJGRlcHNbMF0pKTtcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICdwcm9wZXJ0aWVzICcgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJGRlcHMuam9pbihcXFxcXFxcIiwgXFxcXFxcXCIpKSk7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnIHdoZW4gcHJvcGVydHkgJyArIChpdC51dGlsLmVzY2FwZVF1b3RlcygkcHJvcGVydHkpKSArICcgaXMgcHJlc2VudFxcXFxcXFxcJyAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIHt9ICc7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBvdXQgKz0gJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyB9ICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB9ICAgJztcXFxcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICRjbG9zaW5nQnJhY2VzICs9ICd9JztcXFxcbiAgICAgICAgb3V0ICs9ICcgZWxzZSB7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGl0LmVycm9yUGF0aCA9ICRjdXJyZW50RXJyb3JQYXRoO1xcXFxuICB2YXIgJGN1cnJlbnRCYXNlSWQgPSAkaXQuYmFzZUlkO1xcXFxuICBmb3IgKHZhciAkcHJvcGVydHkgaW4gJHNjaGVtYURlcHMpIHtcXFxcbiAgICB2YXIgJHNjaCA9ICRzY2hlbWFEZXBzWyRwcm9wZXJ0eV07XFxcXG4gICAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKSkge1xcXFxuICAgICAgb3V0ICs9ICcgJyArICgkbmV4dFZhbGlkKSArICcgPSB0cnVlOyBpZiAoICcgKyAoJGRhdGEpICsgKGl0LnV0aWwuZ2V0UHJvcGVydHkoJHByb3BlcnR5KSkgKyAnICE9PSB1bmRlZmluZWQgJztcXFxcbiAgICAgIGlmICgkb3duUHJvcGVydGllcykge1xcXFxuICAgICAgICBvdXQgKz0gJyAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJyArICgkZGF0YSkgKyAnLCBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eSkpICsgJ1xcXFxcXFxcJykgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnKSB7ICc7XFxcXG4gICAgICAkaXQuc2NoZW1hID0gJHNjaDtcXFxcbiAgICAgICRpdC5zY2hlbWFQYXRoID0gJHNjaGVtYVBhdGggKyBpdC51dGlsLmdldFByb3BlcnR5KCRwcm9wZXJ0eSk7XFxcXG4gICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoICsgJy8nICsgaXQudXRpbC5lc2NhcGVGcmFnbWVudCgkcHJvcGVydHkpO1xcXFxuICAgICAgb3V0ICs9ICcgICcgKyAoaXQudmFsaWRhdGUoJGl0KSkgKyAnICc7XFxcXG4gICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XFxcXG4gICAgICBvdXQgKz0gJyB9ICAnO1xcXFxuICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XFxcXG4gICAgICAgICRjbG9zaW5nQnJhY2VzICs9ICd9JztcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICBvdXQgKz0gJyAgICcgKyAoJGNsb3NpbmdCcmFjZXMpICsgJyBpZiAoJyArICgkZXJycykgKyAnID09IGVycm9ycykgeyc7XFxcXG4gIH1cXFxcbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTlrWlhCbGJtUmxibU5wWlhNdWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OHVMMjV2WkdWZmJXOWtkV3hsY3k5aGFuWXZiR2xpTDJSdmRHcHpMMlJsY0dWdVpHVnVZMmxsY3k1cWN6OWlPVEl3SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnWjJWdVpYSmhkR1ZmWkdWd1pXNWtaVzVqYVdWektHbDBMQ0FrYTJWNWQyOXlaQ3dnSkhKMWJHVlVlWEJsS1NCN1hHNGdJSFpoY2lCdmRYUWdQU0FuSUNjN1hHNGdJSFpoY2lBa2JIWnNJRDBnYVhRdWJHVjJaV3c3WEc0Z0lIWmhjaUFrWkdGMFlVeDJiQ0E5SUdsMExtUmhkR0ZNWlhabGJEdGNiaUFnZG1GeUlDUnpZMmhsYldFZ1BTQnBkQzV6WTJobGJXRmJKR3RsZVhkdmNtUmRPMXh1SUNCMllYSWdKSE5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2EyVjVkMjl5WkNrN1hHNGdJSFpoY2lBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkx5Y2dLeUFrYTJWNWQyOXlaRHRjYmlBZ2RtRnlJQ1JpY21WaGEwOXVSWEp5YjNJZ1BTQWhhWFF1YjNCMGN5NWhiR3hGY25KdmNuTTdYRzRnSUhaaGNpQWtaR0YwWVNBOUlDZGtZWFJoSnlBcklDZ2taR0YwWVV4MmJDQjhmQ0FuSnlrN1hHNGdJSFpoY2lBa1pYSnljeUE5SUNkbGNuSnpYMThuSUNzZ0pHeDJiRHRjYmlBZ2RtRnlJQ1JwZENBOUlHbDBMblYwYVd3dVkyOXdlU2hwZENrN1hHNGdJSFpoY2lBa1kyeHZjMmx1WjBKeVlXTmxjeUE5SUNjbk8xeHVJQ0FrYVhRdWJHVjJaV3dyS3p0Y2JpQWdkbUZ5SUNSdVpYaDBWbUZzYVdRZ1BTQW5kbUZzYVdRbklDc2dKR2wwTG14bGRtVnNPMXh1SUNCMllYSWdKSE5qYUdWdFlVUmxjSE1nUFNCN2ZTeGNiaUFnSUNBa2NISnZjR1Z5ZEhsRVpYQnpJRDBnZTMwc1hHNGdJQ0FnSkc5M2JsQnliM0JsY25ScFpYTWdQU0JwZEM1dmNIUnpMbTkzYmxCeWIzQmxjblJwWlhNN1hHNGdJR1p2Y2lBb0pIQnliM0JsY25SNUlHbHVJQ1J6WTJobGJXRXBJSHRjYmlBZ0lDQjJZWElnSkhOamFDQTlJQ1J6WTJobGJXRmJKSEJ5YjNCbGNuUjVYVHRjYmlBZ0lDQjJZWElnSkdSbGNITWdQU0JCY25KaGVTNXBjMEZ5Y21GNUtDUnpZMmdwSUQ4Z0pIQnliM0JsY25SNVJHVndjeUE2SUNSelkyaGxiV0ZFWlhCek8xeHVJQ0FnSUNSa1pYQnpXeVJ3Y205d1pYSjBlVjBnUFNBa2MyTm9PMXh1SUNCOVhHNGdJRzkxZENBclBTQW5kbUZ5SUNjZ0t5QW9KR1Z5Y25NcElDc2dKeUE5SUdWeWNtOXljenNuTzF4dUlDQjJZWElnSkdOMWNuSmxiblJGY25KdmNsQmhkR2dnUFNCcGRDNWxjbkp2Y2xCaGRHZzdYRzRnSUc5MWRDQXJQU0FuZG1GeUlHMXBjM05wYm1jbklDc2dLQ1JzZG13cElDc2dKenNuTzF4dUlDQm1iM0lnS0haaGNpQWtjSEp2Y0dWeWRIa2dhVzRnSkhCeWIzQmxjblI1UkdWd2N5a2dlMXh1SUNBZ0lDUmtaWEJ6SUQwZ0pIQnliM0JsY25SNVJHVndjMXNrY0hKdmNHVnlkSGxkTzF4dUlDQWdJR2xtSUNna1pHVndjeTVzWlc1bmRHZ3BJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnZ0p5QXJJQ2drWkdGMFlTa2dLeUFvYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2NISnZjR1Z5ZEhrcEtTQXJJQ2NnSVQwOUlIVnVaR1ZtYVc1bFpDQW5PMXh1SUNBZ0lDQWdhV1lnS0NSdmQyNVFjbTl3WlhKMGFXVnpLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNZbUlFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdWFHRnpUM2R1VUhKdmNHVnlkSGt1WTJGc2JDZ25JQ3NnS0NSa1lYUmhLU0FySUNjc0lGeGNKeWNnS3lBb2FYUXVkWFJwYkM1bGMyTmhjR1ZSZFc5MFpYTW9KSEJ5YjNCbGNuUjVLU2tnS3lBblhGd25LU0FuTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYVdZZ0tDUmljbVZoYTA5dVJYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0ppWWdLQ0FuTzF4dUlDQWdJQ0FnSUNCMllYSWdZWEp5TVNBOUlDUmtaWEJ6TzF4dUlDQWdJQ0FnSUNCcFppQW9ZWEp5TVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFpoY2lBa2NISnZjR1Z5ZEhsTFpYa3NJQ1JwSUQwZ0xURXNYRzRnSUNBZ0lDQWdJQ0FnSUNCc01TQTlJR0Z5Y2pFdWJHVnVaM1JvSUMwZ01UdGNiaUFnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9KR2tnUENCc01Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0pIQnliM0JsY25SNVMyVjVJRDBnWVhKeU1Wc2thU0FyUFNBeFhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2thU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI4ZkNBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUNSd2NtOXdJRDBnYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2NISnZjR1Z5ZEhsTFpYa3BMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWtkWE5sUkdGMFlTQTlJQ1JrWVhSaElDc2dKSEJ5YjNBN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFvSUNnZ0p5QXJJQ2drZFhObFJHRjBZU2tnS3lBbklEMDlQU0IxYm1SbFptbHVaV1FnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna2IzZHVVSEp2Y0dWeWRHbGxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI4ZkNBaElFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdWFHRnpUM2R1VUhKdmNHVnlkSGt1WTJGc2JDZ25JQ3NnS0NSa1lYUmhLU0FySUNjc0lGeGNKeWNnS3lBb2FYUXVkWFJwYkM1bGMyTmhjR1ZSZFc5MFpYTW9KSEJ5YjNCbGNuUjVTMlY1S1NrZ0t5QW5YRnduS1NBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY3BJQ1ltSUNodGFYTnphVzVuSnlBcklDZ2tiSFpzS1NBcklDY2dQU0FuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvYVhRdWIzQjBjeTVxYzI5dVVHOXBiblJsY25NZ1B5QWtjSEp2Y0dWeWRIbExaWGtnT2lBa2NISnZjQ2twSUNzZ0p5a2dLU0FuTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeWtwSUhzZ0lDYzdYRzRnSUNBZ0lDQWdJSFpoY2lBa2NISnZjR1Z5ZEhsUVlYUm9JRDBnSjIxcGMzTnBibWNuSUNzZ0pHeDJiQ3hjYmlBZ0lDQWdJQ0FnSUNBa2JXbHpjMmx1WjFCeWIzQmxjblI1SUQwZ0oxeGNKeUFySUNjZ0t5QWtjSEp2Y0dWeWRIbFFZWFJvSUNzZ0p5QXJJRnhjSnljN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hwZEM1dmNIUnpMbDlsY25KdmNrUmhkR0ZRWVhSb1VISnZjR1Z5ZEhrcElIdGNiaUFnSUNBZ0lDQWdJQ0JwZEM1bGNuSnZjbEJoZEdnZ1BTQnBkQzV2Y0hSekxtcHpiMjVRYjJsdWRHVnljeUEvSUdsMExuVjBhV3d1WjJWMFVHRjBhRVY0Y0hJb0pHTjFjbkpsYm5SRmNuSnZjbEJoZEdnc0lDUndjbTl3WlhKMGVWQmhkR2dzSUhSeWRXVXBJRG9nSkdOMWNuSmxiblJGY25KdmNsQmhkR2dnS3lBbklDc2dKeUFySUNSd2NtOXdaWEowZVZCaGRHZzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZG1GeUlDUWtiM1YwVTNSaFkyc2dQU0FrSkc5MWRGTjBZV05ySUh4OElGdGRPMXh1SUNBZ0lDQWdJQ0FrSkc5MWRGTjBZV05yTG5CMWMyZ29iM1YwS1R0Y2JpQWdJQ0FnSUNBZ2IzVjBJRDBnSnljN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQmxiSE5sSUNvdlhHNGdJQ0FnSUNBZ0lHbG1JQ2hwZEM1amNtVmhkR1ZGY25KdmNuTWdJVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2V5QnJaWGwzYjNKa09pQmNYQ2NuSUNzZ0tDZGtaWEJsYm1SbGJtTnBaWE1uS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdJSEJ5YjNCbGNuUjVPaUJjWENjbklDc2dLR2wwTG5WMGFXd3VaWE5qWVhCbFVYVnZkR1Z6S0NSd2NtOXdaWEowZVNrcElDc2dKMXhjSnl3Z2JXbHpjMmx1WjFCeWIzQmxjblI1T2lCY1hDY25JQ3NnS0NSdGFYTnphVzVuVUhKdmNHVnlkSGtwSUNzZ0oxeGNKeXdnWkdWd2MwTnZkVzUwT2lBbklDc2dLQ1JrWlhCekxteGxibWQwYUNrZ0t5QW5MQ0JrWlhCek9pQmNYQ2NuSUNzZ0tHbDBMblYwYVd3dVpYTmpZWEJsVVhWdmRHVnpLQ1JrWlhCekxteGxibWQwYUNBOVBTQXhJRDhnSkdSbGNITmJNRjBnT2lBa1pHVndjeTVxYjJsdUtGd2lMQ0JjSWlrcEtTQXJJQ2RjWENjZ2ZTQW5PMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxtMWxjM05oWjJWeklDRTlQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnRaWE56WVdkbE9pQmNYQ2R6YUc5MWJHUWdhR0YyWlNBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDUmtaWEJ6TG14bGJtZDBhQ0E5UFNBeEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbmNISnZjR1Z5ZEhrZ0p5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna1pHVndjMXN3WFNrcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDZHdjbTl3WlhKMGFXVnpJQ2NnS3lBb2FYUXVkWFJwYkM1bGMyTmhjR1ZSZFc5MFpYTW9KR1JsY0hNdWFtOXBiaWhjSWl3Z1hDSXBLU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCM2FHVnVJSEJ5YjNCbGNuUjVJQ2NnS3lBb2FYUXVkWFJwYkM1bGMyTmhjR1ZSZFc5MFpYTW9KSEJ5YjNCbGNuUjVLU2tnS3lBbklHbHpJSEJ5WlhObGJuUmNYQ2NnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWRtVnlZbTl6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnTENCelkyaGxiV0U2SUhaaGJHbGtZWFJsTG5OamFHVnRZU2NnS3lBb0pITmphR1Z0WVZCaGRHZ3BJQ3NnSnlBc0lIQmhjbVZ1ZEZOamFHVnRZVG9nZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNocGRDNXpZMmhsYldGUVlYUm9LU0FySUNjZ0xDQmtZWFJoT2lBbklDc2dLQ1JrWVhSaEtTQXJJQ2NnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZlNBbk8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSHQ5SUNjN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdkbUZ5SUY5ZlpYSnlJRDBnYjNWME8xeHVJQ0FnSUNBZ0lDQnZkWFFnUFNBa0pHOTFkRk4wWVdOckxuQnZjQ2dwTzF4dUlDQWdJQ0FnSUNCcFppQW9JV2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdKaVlnSkdKeVpXRnJUMjVGY25KdmNpa2dleUF2S2lCcGMzUmhibUoxYkNCcFoyNXZjbVVnYVdZZ0tpOWNiaUFnSUNBZ0lDQWdJQ0JwWmlBb2FYUXVZWE41Ym1NcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhSb2NtOTNJRzVsZHlCV1lXeHBaR0YwYVc5dVJYSnliM0lvV3ljZ0t5QW9YMTlsY25JcElDc2dKMTBwT3lBbk8xeHVJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCMllXeHBaR0YwWlM1bGNuSnZjbk1nUFNCYkp5QXJJQ2hmWDJWeWNpa2dLeUFuWFRzZ2NtVjBkWEp1SUdaaGJITmxPeUFuTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ1pYSnlJRDBnSnlBcklDaGZYMlZ5Y2lrZ0t5QW5PeUFnYVdZZ0tIWkZjbkp2Y25NZ1BUMDlJRzUxYkd3cElIWkZjbkp2Y25NZ1BTQmJaWEp5WFRzZ1pXeHpaU0IyUlhKeWIzSnpMbkIxYzJnb1pYSnlLVHNnWlhKeWIzSnpLeXM3SUNjN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDa2dleUFuTzF4dUlDQWdJQ0FnSUNCMllYSWdZWEp5TWlBOUlDUmtaWEJ6TzF4dUlDQWdJQ0FnSUNCcFppQW9ZWEp5TWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFpoY2lBa2NISnZjR1Z5ZEhsTFpYa3NJR2t5SUQwZ0xURXNYRzRnSUNBZ0lDQWdJQ0FnSUNCc01pQTlJR0Z5Y2pJdWJHVnVaM1JvSUMwZ01UdGNiaUFnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9hVElnUENCc01pa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0pIQnliM0JsY25SNVMyVjVJRDBnWVhKeU1sdHBNaUFyUFNBeFhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQWtjSEp2Y0NBOUlHbDBMblYwYVd3dVoyVjBVSEp2Y0dWeWRIa29KSEJ5YjNCbGNuUjVTMlY1S1N4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSkcxcGMzTnBibWRRY205d1pYSjBlU0E5SUdsMExuVjBhV3d1WlhOallYQmxVWFZ2ZEdWektDUndjbTl3WlhKMGVVdGxlU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ1IxYzJWRVlYUmhJRDBnSkdSaGRHRWdLeUFrY0hKdmNEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxsOWxjbkp2Y2tSaGRHRlFZWFJvVUhKdmNHVnlkSGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhRdVpYSnliM0pRWVhSb0lEMGdhWFF1ZFhScGJDNW5aWFJRWVhSb0tDUmpkWEp5Wlc1MFJYSnliM0pRWVhSb0xDQWtjSEp2Y0dWeWRIbExaWGtzSUdsMExtOXdkSE11YW5OdmJsQnZhVzUwWlhKektUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnZ0p5QXJJQ2drZFhObFJHRjBZU2tnS3lBbklEMDlQU0IxYm1SbFptbHVaV1FnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna2IzZHVVSEp2Y0dWeWRHbGxjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI4ZkNBaElFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdWFHRnpUM2R1VUhKdmNHVnlkSGt1WTJGc2JDZ25JQ3NnS0NSa1lYUmhLU0FySUNjc0lGeGNKeWNnS3lBb2FYUXVkWFJwYkM1bGMyTmhjR1ZSZFc5MFpYTW9KSEJ5YjNCbGNuUjVTMlY1S1NrZ0t5QW5YRnduS1NBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY3BJSHNnSUhaaGNpQmxjbklnUFNBZ0lDYzdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JsYkhObElDb3ZYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1WTNKbFlYUmxSWEp5YjNKeklDRTlQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjdJR3RsZVhkdmNtUTZJRnhjSnljZ0t5QW9KMlJsY0dWdVpHVnVZMmxsY3ljcElDc2dKMXhjSnlBc0lHUmhkR0ZRWVhSb09pQW9aR0YwWVZCaGRHZ2dmSHdnWEZ3blhGd25LU0FySUNjZ0t5QW9hWFF1WlhKeWIzSlFZWFJvS1NBcklDY2dMQ0J6WTJobGJXRlFZWFJvT2lBbklDc2dLR2wwTG5WMGFXd3VkRzlSZFc5MFpXUlRkSEpwYm1jb0pHVnljbE5qYUdWdFlWQmhkR2dwS1NBcklDY2dMQ0J3WVhKaGJYTTZJSHNnY0hKdmNHVnlkSGs2SUZ4Y0p5Y2dLeUFvYVhRdWRYUnBiQzVsYzJOaGNHVlJkVzkwWlhNb0pIQnliM0JsY25SNUtTa2dLeUFuWEZ3bkxDQnRhWE56YVc1blVISnZjR1Z5ZEhrNklGeGNKeWNnS3lBb0pHMXBjM05wYm1kUWNtOXdaWEowZVNrZ0t5QW5YRnduTENCa1pYQnpRMjkxYm5RNklDY2dLeUFvSkdSbGNITXViR1Z1WjNSb0tTQXJJQ2NzSUdSbGNITTZJRnhjSnljZ0t5QW9hWFF1ZFhScGJDNWxjMk5oY0dWUmRXOTBaWE1vSkdSbGNITXViR1Z1WjNSb0lEMDlJREVnUHlBa1pHVndjMXN3WFNBNklDUmtaWEJ6TG1wdmFXNG9YQ0lzSUZ3aUtTa3BJQ3NnSjF4Y0p5QjlJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TG0xbGMzTmhaMlZ6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDd2diV1Z6YzJGblpUb2dYRnduYzJodmRXeGtJR2hoZG1VZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSkdSbGNITXViR1Z1WjNSb0lEMDlJREVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbmNISnZjR1Z5ZEhrZ0p5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna1pHVndjMXN3WFNrcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0ozQnliM0JsY25ScFpYTWdKeUFySUNocGRDNTFkR2xzTG1WelkyRndaVkYxYjNSbGN5Z2taR1Z3Y3k1cWIybHVLRndpTENCY0lpa3BLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZDJobGJpQndjbTl3WlhKMGVTQW5JQ3NnS0dsMExuVjBhV3d1WlhOallYQmxVWFZ2ZEdWektDUndjbTl3WlhKMGVTa3BJQ3NnSnlCcGN5QndjbVZ6Wlc1MFhGd25JQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtOXdkSE11ZG1WeVltOXpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUN3Z2MyTm9aVzFoT2lCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tDUnpZMmhsYldGUVlYUm9LU0FySUNjZ0xDQndZWEpsYm5SVFkyaGxiV0U2SUhaaGJHbGtZWFJsTG5OamFHVnRZU2NnS3lBb2FYUXVjMk5vWlcxaFVHRjBhQ2tnS3lBbklDd2daR0YwWVRvZ0p5QXJJQ2drWkdGMFlTa2dLeUFuSUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZlNBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbk95QWdhV1lnS0haRmNuSnZjbk1nUFQwOUlHNTFiR3dwSUhaRmNuSnZjbk1nUFNCYlpYSnlYVHNnWld4elpTQjJSWEp5YjNKekxuQjFjMmdvWlhKeUtUc2daWEp5YjNKekt5czdJSDBnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRzkxZENBclBTQW5JSDBnSUNBbk8xeHVJQ0FnSUNBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNBZ0lDQWdKR05zYjNOcGJtZENjbUZqWlhNZ0t6MGdKMzBuTzF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCbGJITmxJSHNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNiaUFnYVhRdVpYSnliM0pRWVhSb0lEMGdKR04xY25KbGJuUkZjbkp2Y2xCaGRHZzdYRzRnSUhaaGNpQWtZM1Z5Y21WdWRFSmhjMlZKWkNBOUlDUnBkQzVpWVhObFNXUTdYRzRnSUdadmNpQW9kbUZ5SUNSd2NtOXdaWEowZVNCcGJpQWtjMk5vWlcxaFJHVndjeWtnZTF4dUlDQWdJSFpoY2lBa2MyTm9JRDBnSkhOamFHVnRZVVJsY0hOYkpIQnliM0JsY25SNVhUdGNiaUFnSUNCcFppQW9hWFF1ZFhScGJDNXpZMmhsYldGSVlYTlNkV3hsY3lna2MyTm9MQ0JwZEM1U1ZVeEZVeTVoYkd3cEtTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0NSdVpYaDBWbUZzYVdRcElDc2dKeUE5SUhSeWRXVTdJR2xtSUNnZ0p5QXJJQ2drWkdGMFlTa2dLeUFvYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2NISnZjR1Z5ZEhrcEtTQXJJQ2NnSVQwOUlIVnVaR1ZtYVc1bFpDQW5PMXh1SUNBZ0lDQWdhV1lnS0NSdmQyNVFjbTl3WlhKMGFXVnpLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNZbUlFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdWFHRnpUM2R1VUhKdmNHVnlkSGt1WTJGc2JDZ25JQ3NnS0NSa1lYUmhLU0FySUNjc0lGeGNKeWNnS3lBb2FYUXVkWFJwYkM1bGMyTmhjR1ZSZFc5MFpYTW9KSEJ5YjNCbGNuUjVLU2tnS3lBblhGd25LU0FuTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYjNWMElDczlJQ2NwSUhzZ0p6dGNiaUFnSUNBZ0lDUnBkQzV6WTJobGJXRWdQU0FrYzJOb08xeHVJQ0FnSUNBZ0pHbDBMbk5qYUdWdFlWQmhkR2dnUFNBa2MyTm9aVzFoVUdGMGFDQXJJR2wwTG5WMGFXd3VaMlYwVUhKdmNHVnlkSGtvSkhCeWIzQmxjblI1S1R0Y2JpQWdJQ0FnSUNScGRDNWxjbkpUWTJobGJXRlFZWFJvSUQwZ0pHVnljbE5qYUdWdFlWQmhkR2dnS3lBbkx5Y2dLeUJwZEM1MWRHbHNMbVZ6WTJGd1pVWnlZV2R0Wlc1MEtDUndjbTl3WlhKMGVTazdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QWdKeUFySUNocGRDNTJZV3hwWkdGMFpTZ2thWFFwS1NBcklDY2dKenRjYmlBZ0lDQWdJQ1JwZEM1aVlYTmxTV1FnUFNBa1kzVnljbVZ1ZEVKaGMyVkpaRHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSDBnSUNjN1hHNGdJQ0FnSUNCcFppQW9KR0p5WldGclQyNUZjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QnBaaUFvSnlBcklDZ2tibVY0ZEZaaGJHbGtLU0FySUNjcElIc2dKenRjYmlBZ0lDQWdJQ0FnSkdOc2IzTnBibWRDY21GalpYTWdLejBnSjMwbk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1SUNCcFppQW9KR0p5WldGclQyNUZjbkp2Y2lrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUNBZ0p5QXJJQ2drWTJ4dmMybHVaMEp5WVdObGN5a2dLeUFuSUdsbUlDZ25JQ3NnS0NSbGNuSnpLU0FySUNjZ1BUMGdaWEp5YjNKektTQjdKenRjYmlBZ2ZWeHVJQ0J2ZFhRZ1BTQnBkQzUxZEdsc0xtTnNaV0Z1VlhCRGIyUmxLRzkxZENrN1hHNGdJSEpsZEhWeWJpQnZkWFE3WEc1OVhHNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3SWl3aWMyOTFjbU5sVW05dmRDSTZJaUo5XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9kZXBlbmRlbmNpZXMuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2VudW0uanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvZW51bS5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfZW51bShpdCwgJGtleXdvcmQsICRydWxlVHlwZSkge1xcXFxuICB2YXIgb3V0ID0gJyAnO1xcXFxuICB2YXIgJGx2bCA9IGl0LmxldmVsO1xcXFxuICB2YXIgJGRhdGFMdmwgPSBpdC5kYXRhTGV2ZWw7XFxcXG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcXFxcbiAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJGtleXdvcmQpO1xcXFxuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XFxcXG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xcXFxuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xcXFxuICB2YXIgJHZhbGlkID0gJ3ZhbGlkJyArICRsdmw7XFxcXG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXFxcXG4gICAgJHNjaGVtYVZhbHVlO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcXFxcbiAgfVxcXFxuICB2YXIgJGkgPSAnaScgKyAkbHZsLFxcXFxuICAgICR2U2NoZW1hID0gJ3NjaGVtYScgKyAkbHZsO1xcXFxuICBpZiAoISRpc0RhdGEpIHtcXFxcbiAgICBvdXQgKz0gJyB2YXIgJyArICgkdlNjaGVtYSkgKyAnID0gdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnOyc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICd2YXIgJyArICgkdmFsaWQpICsgJzsnO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnIGlmIChzY2hlbWEnICsgKCRsdmwpICsgJyA9PT0gdW5kZWZpbmVkKSAnICsgKCR2YWxpZCkgKyAnID0gdHJ1ZTsgZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkoc2NoZW1hJyArICgkbHZsKSArICcpKSAnICsgKCR2YWxpZCkgKyAnID0gZmFsc2U7IGVsc2Ugeyc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICcnICsgKCR2YWxpZCkgKyAnID0gZmFsc2U7Zm9yICh2YXIgJyArICgkaSkgKyAnPTA7ICcgKyAoJGkpICsgJzwnICsgKCR2U2NoZW1hKSArICcubGVuZ3RoOyAnICsgKCRpKSArICcrKykgaWYgKGVxdWFsKCcgKyAoJGRhdGEpICsgJywgJyArICgkdlNjaGVtYSkgKyAnWycgKyAoJGkpICsgJ10pKSB7ICcgKyAoJHZhbGlkKSArICcgPSB0cnVlOyBicmVhazsgfSc7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgIH0gICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICcgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgJztcXFxcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdlbnVtJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBhbGxvd2VkVmFsdWVzOiBzY2hlbWEnICsgKCRsdmwpICsgJyB9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBiZSBlcXVhbCB0byBvbmUgb2YgdGhlIGFsbG93ZWQgdmFsdWVzXFxcXFxcXFwnICc7XFxcXG4gICAgfVxcXFxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIH0gJztcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICB9XFxcXG4gIHZhciBfX2VyciA9IG91dDtcXFxcbiAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICB9XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICB9XFxcXG4gIG91dCArPSAnIH0nO1xcXFxuICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgIG91dCArPSAnIGVsc2UgeyAnO1xcXFxuICB9XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OWxiblZ0TG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OWxiblZ0TG1welAyVTRZeklpWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUozVnpaU0J6ZEhKcFkzUW5PMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUJuWlc1bGNtRjBaVjlsYm5WdEtHbDBMQ0FrYTJWNWQyOXlaQ3dnSkhKMWJHVlVlWEJsS1NCN1hHNGdJSFpoY2lCdmRYUWdQU0FuSUNjN1hHNGdJSFpoY2lBa2JIWnNJRDBnYVhRdWJHVjJaV3c3WEc0Z0lIWmhjaUFrWkdGMFlVeDJiQ0E5SUdsMExtUmhkR0ZNWlhabGJEdGNiaUFnZG1GeUlDUnpZMmhsYldFZ1BTQnBkQzV6WTJobGJXRmJKR3RsZVhkdmNtUmRPMXh1SUNCMllYSWdKSE5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2EyVjVkMjl5WkNrN1hHNGdJSFpoY2lBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkx5Y2dLeUFrYTJWNWQyOXlaRHRjYmlBZ2RtRnlJQ1JpY21WaGEwOXVSWEp5YjNJZ1BTQWhhWFF1YjNCMGN5NWhiR3hGY25KdmNuTTdYRzRnSUhaaGNpQWtaR0YwWVNBOUlDZGtZWFJoSnlBcklDZ2taR0YwWVV4MmJDQjhmQ0FuSnlrN1hHNGdJSFpoY2lBa2RtRnNhV1FnUFNBbmRtRnNhV1FuSUNzZ0pHeDJiRHRjYmlBZ2RtRnlJQ1JwYzBSaGRHRWdQU0JwZEM1dmNIUnpMaVJrWVhSaElDWW1JQ1J6WTJobGJXRWdKaVlnSkhOamFHVnRZUzRrWkdGMFlTeGNiaUFnSUNBa2MyTm9aVzFoVm1Gc2RXVTdYRzRnSUdsbUlDZ2thWE5FWVhSaEtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJSE5qYUdWdFlTY2dLeUFvSkd4MmJDa2dLeUFuSUQwZ0p5QXJJQ2hwZEM1MWRHbHNMbWRsZEVSaGRHRW9KSE5qYUdWdFlTNGtaR0YwWVN3Z0pHUmhkR0ZNZG13c0lHbDBMbVJoZEdGUVlYUm9RWEp5S1NrZ0t5QW5PeUFuTzF4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlNBOUlDZHpZMmhsYldFbklDc2dKR3gyYkR0Y2JpQWdmU0JsYkhObElIdGNiaUFnSUNBa2MyTm9aVzFoVm1Gc2RXVWdQU0FrYzJOb1pXMWhPMXh1SUNCOVhHNGdJSFpoY2lBa2FTQTlJQ2RwSnlBcklDUnNkbXdzWEc0Z0lDQWdKSFpUWTJobGJXRWdQU0FuYzJOb1pXMWhKeUFySUNSc2RtdzdYRzRnSUdsbUlDZ2hKR2x6UkdGMFlTa2dlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUjJVMk5vWlcxaEtTQXJJQ2NnUFNCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tDUnpZMmhsYldGUVlYUm9LU0FySUNjN0p6dGNiaUFnZlZ4dUlDQnZkWFFnS3owZ0ozWmhjaUFuSUNzZ0tDUjJZV3hwWkNrZ0t5QW5PeWM3WEc0Z0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dhV1lnS0hOamFHVnRZU2NnS3lBb0pHeDJiQ2tnS3lBbklEMDlQU0IxYm1SbFptbHVaV1FwSUNjZ0t5QW9KSFpoYkdsa0tTQXJJQ2NnUFNCMGNuVmxPeUJsYkhObElHbG1JQ2doUVhKeVlYa3VhWE5CY25KaGVTaHpZMmhsYldFbklDc2dLQ1JzZG13cElDc2dKeWtwSUNjZ0t5QW9KSFpoYkdsa0tTQXJJQ2NnUFNCbVlXeHpaVHNnWld4elpTQjdKenRjYmlBZ2ZWeHVJQ0J2ZFhRZ0t6MGdKeWNnS3lBb0pIWmhiR2xrS1NBcklDY2dQU0JtWVd4elpUdG1iM0lnS0haaGNpQW5JQ3NnS0NScEtTQXJJQ2M5TURzZ0p5QXJJQ2drYVNrZ0t5QW5QQ2NnS3lBb0pIWlRZMmhsYldFcElDc2dKeTVzWlc1bmRHZzdJQ2NnS3lBb0pHa3BJQ3NnSnlzcktTQnBaaUFvWlhGMVlXd29KeUFySUNna1pHRjBZU2tnS3lBbkxDQW5JQ3NnS0NSMlUyTm9aVzFoS1NBcklDZGJKeUFySUNna2FTa2dLeUFuWFNrcElIc2dKeUFySUNna2RtRnNhV1FwSUNzZ0p5QTlJSFJ5ZFdVN0lHSnlaV0ZyT3lCOUp6dGNiaUFnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNCdmRYUWdLejBnSnlBZ2ZTQWdKenRjYmlBZ2ZWeHVJQ0J2ZFhRZ0t6MGdKeUJwWmlBb0lTY2dLeUFvSkhaaGJHbGtLU0FySUNjcElIc2dJQ0FuTzF4dUlDQjJZWElnSkNSdmRYUlRkR0ZqYXlBOUlDUWtiM1YwVTNSaFkyc2dmSHdnVzEwN1hHNGdJQ1FrYjNWMFUzUmhZMnN1Y0hWemFDaHZkWFFwTzF4dUlDQnZkWFFnUFNBbkp6c2dMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJR1ZzYzJVZ0tpOWNiaUFnYVdZZ0tHbDBMbU55WldGMFpVVnljbTl5Y3lBaFBUMGdabUZzYzJVcElIdGNiaUFnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0oyVnVkVzBuS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdJR0ZzYkc5M1pXUldZV3gxWlhNNklITmphR1Z0WVNjZ0t5QW9KR3gyYkNrZ0t5QW5JSDBnSnp0Y2JpQWdJQ0JwWmlBb2FYUXViM0IwY3k1dFpYTnpZV2RsY3lBaFBUMGdabUZzYzJVcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklDd2diV1Z6YzJGblpUb2dYRnduYzJodmRXeGtJR0psSUdWeGRXRnNJSFJ2SUc5dVpTQnZaaUIwYUdVZ1lXeHNiM2RsWkNCMllXeDFaWE5jWENjZ0p6dGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWRtVnlZbTl6WlNrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnpZMmhsYldFNklIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9KSE5qYUdWdFlWQmhkR2dwSUNzZ0p5QXNJSEJoY21WdWRGTmphR1Z0WVRvZ2RtRnNhV1JoZEdVdWMyTm9aVzFoSnlBcklDaHBkQzV6WTJobGJXRlFZWFJvS1NBcklDY2dMQ0JrWVhSaE9pQW5JQ3NnS0NSa1lYUmhLU0FySUNjZ0p6dGNiaUFnSUNCOVhHNGdJQ0FnYjNWMElDczlJQ2NnZlNBbk8xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lIMWNiaUFnZG1GeUlGOWZaWEp5SUQwZ2IzVjBPMXh1SUNCdmRYUWdQU0FrSkc5MWRGTjBZV05yTG5CdmNDZ3BPMXh1SUNCcFppQW9JV2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdKaVlnSkdKeVpXRnJUMjVGY25KdmNpa2dleUF2S2lCcGMzUmhibUoxYkNCcFoyNXZjbVVnYVdZZ0tpOWNiaUFnSUNCcFppQW9hWFF1WVhONWJtTXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFJvY205M0lHNWxkeUJXWVd4cFpHRjBhVzl1UlhKeWIzSW9XeWNnS3lBb1gxOWxjbklwSUNzZ0oxMHBPeUFuTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZV3hwWkdGMFpTNWxjbkp2Y25NZ1BTQmJKeUFySUNoZlgyVnljaWtnS3lBblhUc2djbVYwZFhKdUlHWmhiSE5sT3lBbk8xeHVJQ0FnSUgxY2JpQWdmU0JsYkhObElIdGNiaUFnSUNCdmRYUWdLejBnSnlCMllYSWdaWEp5SUQwZ0p5QXJJQ2hmWDJWeWNpa2dLeUFuT3lBZ2FXWWdLSFpGY25KdmNuTWdQVDA5SUc1MWJHd3BJSFpGY25KdmNuTWdQU0JiWlhKeVhUc2daV3h6WlNCMlJYSnliM0p6TG5CMWMyZ29aWEp5S1RzZ1pYSnliM0p6S3lzN0lDYzdYRzRnSUgxY2JpQWdiM1YwSUNzOUlDY2dmU2M3WEc0Z0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ1pXeHpaU0I3SUNjN1hHNGdJSDFjYmlBZ2NtVjBkWEp1SUc5MWREdGNibjFjYmlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9lbnVtLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9mb3JtYXQuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9mb3JtYXQuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfZm9ybWF0KGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIGlmIChpdC5vcHRzLmZvcm1hdCA9PT0gZmFsc2UpIHtcXFxcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgb3V0ICs9ICcgaWYgKHRydWUpIHsgJztcXFxcbiAgICB9XFxcXG4gICAgcmV0dXJuIG91dDtcXFxcbiAgfVxcXFxuICB2YXIgJGlzRGF0YSA9IGl0Lm9wdHMuJGRhdGEgJiYgJHNjaGVtYSAmJiAkc2NoZW1hLiRkYXRhLFxcXFxuICAgICRzY2hlbWFWYWx1ZTtcXFxcbiAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICBvdXQgKz0gJyB2YXIgc2NoZW1hJyArICgkbHZsKSArICcgPSAnICsgKGl0LnV0aWwuZ2V0RGF0YSgkc2NoZW1hLiRkYXRhLCAkZGF0YUx2bCwgaXQuZGF0YVBhdGhBcnIpKSArICc7ICc7XFxcXG4gICAgJHNjaGVtYVZhbHVlID0gJ3NjaGVtYScgKyAkbHZsO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgICRzY2hlbWFWYWx1ZSA9ICRzY2hlbWE7XFxcXG4gIH1cXFxcbiAgdmFyICR1bmtub3duRm9ybWF0cyA9IGl0Lm9wdHMudW5rbm93bkZvcm1hdHMsXFxcXG4gICAgJGFsbG93VW5rbm93biA9IEFycmF5LmlzQXJyYXkoJHVua25vd25Gb3JtYXRzKTtcXFxcbiAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICB2YXIgJGZvcm1hdCA9ICdmb3JtYXQnICsgJGx2bCxcXFxcbiAgICAgICRpc09iamVjdCA9ICdpc09iamVjdCcgKyAkbHZsLFxcXFxuICAgICAgJGZvcm1hdFR5cGUgPSAnZm9ybWF0VHlwZScgKyAkbHZsO1xcXFxuICAgIG91dCArPSAnIHZhciAnICsgKCRmb3JtYXQpICsgJyA9IGZvcm1hdHNbJyArICgkc2NoZW1hVmFsdWUpICsgJ107IHZhciAnICsgKCRpc09iamVjdCkgKyAnID0gdHlwZW9mICcgKyAoJGZvcm1hdCkgKyAnID09IFxcXFxcXFxcJ29iamVjdFxcXFxcXFxcJyAmJiAhKCcgKyAoJGZvcm1hdCkgKyAnIGluc3RhbmNlb2YgUmVnRXhwKSAmJiAnICsgKCRmb3JtYXQpICsgJy52YWxpZGF0ZTsgdmFyICcgKyAoJGZvcm1hdFR5cGUpICsgJyA9ICcgKyAoJGlzT2JqZWN0KSArICcgJiYgJyArICgkZm9ybWF0KSArICcudHlwZSB8fCBcXFxcXFxcXCdzdHJpbmdcXFxcXFxcXCc7IGlmICgnICsgKCRpc09iamVjdCkgKyAnKSB7ICc7XFxcXG4gICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YXIgYXN5bmMnICsgKCRsdmwpICsgJyA9ICcgKyAoJGZvcm1hdCkgKyAnLmFzeW5jOyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyAnICsgKCRmb3JtYXQpICsgJyA9ICcgKyAoJGZvcm1hdCkgKyAnLnZhbGlkYXRlOyB9IGlmICggICc7XFxcXG4gICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgIG91dCArPSAnICgnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9PSB1bmRlZmluZWQgJiYgdHlwZW9mICcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT0gXFxcXFxcXFwnc3RyaW5nXFxcXFxcXFwnKSB8fCAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyAoJztcXFxcbiAgICBpZiAoJHVua25vd25Gb3JtYXRzICE9ICdpZ25vcmUnKSB7XFxcXG4gICAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAmJiAhJyArICgkZm9ybWF0KSArICcgJztcXFxcbiAgICAgIGlmICgkYWxsb3dVbmtub3duKSB7XFxcXG4gICAgICAgIG91dCArPSAnICYmIHNlbGYuX29wdHMudW5rbm93bkZvcm1hdHMuaW5kZXhPZignICsgKCRzY2hlbWFWYWx1ZSkgKyAnKSA9PSAtMSAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcpIHx8ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnICgnICsgKCRmb3JtYXQpICsgJyAmJiAnICsgKCRmb3JtYXRUeXBlKSArICcgPT0gXFxcXFxcXFwnJyArICgkcnVsZVR5cGUpICsgJ1xcXFxcXFxcJyAmJiAhKHR5cGVvZiAnICsgKCRmb3JtYXQpICsgJyA9PSBcXFxcXFxcXCdmdW5jdGlvblxcXFxcXFxcJyA/ICc7XFxcXG4gICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICBvdXQgKz0gJyAoYXN5bmMnICsgKCRsdmwpICsgJyA/ICcgKyAoaXQueWllbGRBd2FpdCkgKyAnICcgKyAoJGZvcm1hdCkgKyAnKCcgKyAoJGRhdGEpICsgJykgOiAnICsgKCRmb3JtYXQpICsgJygnICsgKCRkYXRhKSArICcpKSAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCRmb3JtYXQpICsgJygnICsgKCRkYXRhKSArICcpICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIDogJyArICgkZm9ybWF0KSArICcudGVzdCgnICsgKCRkYXRhKSArICcpKSkpKSB7JztcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICB2YXIgJGZvcm1hdCA9IGl0LmZvcm1hdHNbJHNjaGVtYV07XFxcXG4gICAgaWYgKCEkZm9ybWF0KSB7XFxcXG4gICAgICBpZiAoJHVua25vd25Gb3JtYXRzID09ICdpZ25vcmUnKSB7XFxcXG4gICAgICAgIGNvbnNvbGUud2FybigndW5rbm93biBmb3JtYXQgXFxcXFxcXCInICsgJHNjaGVtYSArICdcXFxcXFxcIiBpZ25vcmVkIGluIHNjaGVtYSBhdCBwYXRoIFxcXFxcXFwiJyArIGl0LmVyclNjaGVtYVBhdGggKyAnXFxcXFxcXCInKTtcXFxcbiAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyBpZiAodHJ1ZSkgeyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHJldHVybiBvdXQ7XFxcXG4gICAgICB9IGVsc2UgaWYgKCRhbGxvd1Vua25vd24gJiYgJHVua25vd25Gb3JtYXRzLmluZGV4T2YoJHNjaGVtYSkgPj0gMCkge1xcXFxuICAgICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICAgIG91dCArPSAnIGlmICh0cnVlKSB7ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgcmV0dXJuIG91dDtcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biBmb3JtYXQgXFxcXFxcXCInICsgJHNjaGVtYSArICdcXFxcXFxcIiBpcyB1c2VkIGluIHNjaGVtYSBhdCBwYXRoIFxcXFxcXFwiJyArIGl0LmVyclNjaGVtYVBhdGggKyAnXFxcXFxcXCInKTtcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gICAgdmFyICRpc09iamVjdCA9IHR5cGVvZiAkZm9ybWF0ID09ICdvYmplY3QnICYmICEoJGZvcm1hdCBpbnN0YW5jZW9mIFJlZ0V4cCkgJiYgJGZvcm1hdC52YWxpZGF0ZTtcXFxcbiAgICB2YXIgJGZvcm1hdFR5cGUgPSAkaXNPYmplY3QgJiYgJGZvcm1hdC50eXBlIHx8ICdzdHJpbmcnO1xcXFxuICAgIGlmICgkaXNPYmplY3QpIHtcXFxcbiAgICAgIHZhciAkYXN5bmMgPSAkZm9ybWF0LmFzeW5jID09PSB0cnVlO1xcXFxuICAgICAgJGZvcm1hdCA9ICRmb3JtYXQudmFsaWRhdGU7XFxcXG4gICAgfVxcXFxuICAgIGlmICgkZm9ybWF0VHlwZSAhPSAkcnVsZVR5cGUpIHtcXFxcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgIG91dCArPSAnIGlmICh0cnVlKSB7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgICByZXR1cm4gb3V0O1xcXFxuICAgIH1cXFxcbiAgICBpZiAoJGFzeW5jKSB7XFxcXG4gICAgICBpZiAoIWl0LmFzeW5jKSB0aHJvdyBuZXcgRXJyb3IoJ2FzeW5jIGZvcm1hdCBpbiBzeW5jIHNjaGVtYScpO1xcXFxuICAgICAgdmFyICRmb3JtYXRSZWYgPSAnZm9ybWF0cycgKyBpdC51dGlsLmdldFByb3BlcnR5KCRzY2hlbWEpICsgJy52YWxpZGF0ZSc7XFxcXG4gICAgICBvdXQgKz0gJyBpZiAoISgnICsgKGl0LnlpZWxkQXdhaXQpICsgJyAnICsgKCRmb3JtYXRSZWYpICsgJygnICsgKCRkYXRhKSArICcpKSkgeyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyBpZiAoISAnO1xcXFxuICAgICAgdmFyICRmb3JtYXRSZWYgPSAnZm9ybWF0cycgKyBpdC51dGlsLmdldFByb3BlcnR5KCRzY2hlbWEpO1xcXFxuICAgICAgaWYgKCRpc09iamVjdCkgJGZvcm1hdFJlZiArPSAnLnZhbGlkYXRlJztcXFxcbiAgICAgIGlmICh0eXBlb2YgJGZvcm1hdCA9PSAnZnVuY3Rpb24nKSB7XFxcXG4gICAgICAgIG91dCArPSAnICcgKyAoJGZvcm1hdFJlZikgKyAnKCcgKyAoJGRhdGEpICsgJykgJztcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnICcgKyAoJGZvcm1hdFJlZikgKyAnLnRlc3QoJyArICgkZGF0YSkgKyAnKSAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcpIHsgJztcXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdmb3JtYXQnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IGZvcm1hdDogICc7XFxcXG4gICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgIG91dCArPSAnJyArICgkc2NoZW1hVmFsdWUpO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkc2NoZW1hKSk7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnICB9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBtYXRjaCBmb3JtYXQgXFxcXFxcXCInO1xcXFxuICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgKyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICsgXFxcXFxcXFwnJztcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnJyArIChpdC51dGlsLmVzY2FwZVF1b3Rlcygkc2NoZW1hKSk7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJ1xcXFxcXFwiXFxcXFxcXFwnICc7XFxcXG4gICAgfVxcXFxuICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgIG91dCArPSAnICwgc2NoZW1hOiAgJztcXFxcbiAgICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkc2NoZW1hKSk7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyAgICAgICAgICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcge30gJztcXFxcbiAgfVxcXFxuICB2YXIgX19lcnIgPSBvdXQ7XFxcXG4gIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJyB9ICc7XFxcXG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XFxcXG4gIH1cXFxcbiAgcmV0dXJuIG91dDtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5bWIzSnRZWFF1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTloYW5ZdmJHbGlMMlJ2ZEdwekwyWnZjbTFoZEM1cWN6OHdNR0ZrSWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnWjJWdVpYSmhkR1ZmWm05eWJXRjBLR2wwTENBa2EyVjVkMjl5WkN3Z0pISjFiR1ZVZVhCbEtTQjdYRzRnSUhaaGNpQnZkWFFnUFNBbklDYzdYRzRnSUhaaGNpQWtiSFpzSUQwZ2FYUXViR1YyWld3N1hHNGdJSFpoY2lBa1pHRjBZVXgyYkNBOUlHbDBMbVJoZEdGTVpYWmxiRHRjYmlBZ2RtRnlJQ1J6WTJobGJXRWdQU0JwZEM1elkyaGxiV0ZiSkd0bGVYZHZjbVJkTzF4dUlDQjJZWElnSkhOamFHVnRZVkJoZEdnZ1BTQnBkQzV6WTJobGJXRlFZWFJvSUNzZ2FYUXVkWFJwYkM1blpYUlFjbTl3WlhKMGVTZ2thMlY1ZDI5eVpDazdYRzRnSUhaaGNpQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lBa2EyVjVkMjl5WkR0Y2JpQWdkbUZ5SUNSaWNtVmhhMDl1UlhKeWIzSWdQU0FoYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk03WEc0Z0lIWmhjaUFrWkdGMFlTQTlJQ2RrWVhSaEp5QXJJQ2drWkdGMFlVeDJiQ0I4ZkNBbkp5azdYRzRnSUdsbUlDaHBkQzV2Y0hSekxtWnZjbTFoZENBOVBUMGdabUZzYzJVcElIdGNiaUFnSUNCcFppQW9KR0p5WldGclQyNUZjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2FXWWdLSFJ5ZFdVcElIc2dKenRjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUc5MWREdGNiaUFnZlZ4dUlDQjJZWElnSkdselJHRjBZU0E5SUdsMExtOXdkSE11SkdSaGRHRWdKaVlnSkhOamFHVnRZU0FtSmlBa2MyTm9aVzFoTGlSa1lYUmhMRnh1SUNBZ0lDUnpZMmhsYldGV1lXeDFaVHRjYmlBZ2FXWWdLQ1JwYzBSaGRHRXBJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QjJZWElnYzJOb1pXMWhKeUFySUNna2JIWnNLU0FySUNjZ1BTQW5JQ3NnS0dsMExuVjBhV3d1WjJWMFJHRjBZU2drYzJOb1pXMWhMaVJrWVhSaExDQWtaR0YwWVV4MmJDd2dhWFF1WkdGMFlWQmhkR2hCY25JcEtTQXJJQ2M3SUNjN1hHNGdJQ0FnSkhOamFHVnRZVlpoYkhWbElEMGdKM05qYUdWdFlTY2dLeUFrYkhac08xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDUnpZMmhsYldGV1lXeDFaU0E5SUNSelkyaGxiV0U3WEc0Z0lIMWNiaUFnZG1GeUlDUjFibXR1YjNkdVJtOXliV0YwY3lBOUlHbDBMbTl3ZEhNdWRXNXJibTkzYmtadmNtMWhkSE1zWEc0Z0lDQWdKR0ZzYkc5M1ZXNXJibTkzYmlBOUlFRnljbUY1TG1selFYSnlZWGtvSkhWdWEyNXZkMjVHYjNKdFlYUnpLVHRjYmlBZ2FXWWdLQ1JwYzBSaGRHRXBJSHRjYmlBZ0lDQjJZWElnSkdadmNtMWhkQ0E5SUNkbWIzSnRZWFFuSUNzZ0pHeDJiQ3hjYmlBZ0lDQWdJQ1JwYzA5aWFtVmpkQ0E5SUNkcGMwOWlhbVZqZENjZ0t5QWtiSFpzTEZ4dUlDQWdJQ0FnSkdadmNtMWhkRlI1Y0dVZ1BTQW5abTl5YldGMFZIbHdaU2NnS3lBa2JIWnNPMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUm1iM0p0WVhRcElDc2dKeUE5SUdadmNtMWhkSE5iSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwSUNzZ0oxMDdJSFpoY2lBbklDc2dLQ1JwYzA5aWFtVmpkQ2tnS3lBbklEMGdkSGx3Wlc5bUlDY2dLeUFvSkdadmNtMWhkQ2tnS3lBbklEMDlJRnhjSjI5aWFtVmpkRnhjSnlBbUppQWhLQ2NnS3lBb0pHWnZjbTFoZENrZ0t5QW5JR2x1YzNSaGJtTmxiMllnVW1WblJYaHdLU0FtSmlBbklDc2dLQ1JtYjNKdFlYUXBJQ3NnSnk1MllXeHBaR0YwWlRzZ2RtRnlJQ2NnS3lBb0pHWnZjbTFoZEZSNWNHVXBJQ3NnSnlBOUlDY2dLeUFvSkdselQySnFaV04wS1NBcklDY2dKaVlnSnlBcklDZ2tabTl5YldGMEtTQXJJQ2N1ZEhsd1pTQjhmQ0JjWENkemRISnBibWRjWENjN0lHbG1JQ2duSUNzZ0tDUnBjMDlpYW1WamRDa2dLeUFuS1NCN0lDYzdYRzRnSUNBZ2FXWWdLR2wwTG1GemVXNWpLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ1lYTjVibU1uSUNzZ0tDUnNkbXdwSUNzZ0p5QTlJQ2NnS3lBb0pHWnZjbTFoZENrZ0t5QW5MbUZ6ZVc1ak95QW5PMXh1SUNBZ0lIMWNiaUFnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1JtYjNKdFlYUXBJQ3NnSnlBOUlDY2dLeUFvSkdadmNtMWhkQ2tnS3lBbkxuWmhiR2xrWVhSbE95QjlJR2xtSUNnZ0lDYzdYRzRnSUNBZ2FXWWdLQ1JwYzBSaGRHRXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ2duSUNzZ0tDUnpZMmhsYldGV1lXeDFaU2tnS3lBbklDRTlQU0IxYm1SbFptbHVaV1FnSmlZZ2RIbHdaVzltSUNjZ0t5QW9KSE5qYUdWdFlWWmhiSFZsS1NBcklDY2dJVDBnWEZ3bmMzUnlhVzVuWEZ3bktTQjhmQ0FuTzF4dUlDQWdJSDFjYmlBZ0lDQnZkWFFnS3owZ0p5QW9KenRjYmlBZ0lDQnBaaUFvSkhWdWEyNXZkMjVHYjNKdFlYUnpJQ0U5SUNkcFoyNXZjbVVuS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBb0p5QXJJQ2drYzJOb1pXMWhWbUZzZFdVcElDc2dKeUFtSmlBaEp5QXJJQ2drWm05eWJXRjBLU0FySUNjZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drWVd4c2IzZFZibXR1YjNkdUtTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ1ltSUhObGJHWXVYMjl3ZEhNdWRXNXJibTkzYmtadmNtMWhkSE11YVc1a1pYaFBaaWduSUNzZ0tDUnpZMmhsYldGV1lXeDFaU2tnS3lBbktTQTlQU0F0TVNBbk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjcElIeDhJQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHOTFkQ0FyUFNBbklDZ25JQ3NnS0NSbWIzSnRZWFFwSUNzZ0p5QW1KaUFuSUNzZ0tDUm1iM0p0WVhSVWVYQmxLU0FySUNjZ1BUMGdYRnduSnlBcklDZ2tjblZzWlZSNWNHVXBJQ3NnSjF4Y0p5QW1KaUFoS0hSNWNHVnZaaUFuSUNzZ0tDUm1iM0p0WVhRcElDc2dKeUE5UFNCY1hDZG1kVzVqZEdsdmJseGNKeUEvSUNjN1hHNGdJQ0FnYVdZZ0tHbDBMbUZ6ZVc1aktTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QW9ZWE41Ym1NbklDc2dLQ1JzZG13cElDc2dKeUEvSUNjZ0t5QW9hWFF1ZVdsbGJHUkJkMkZwZENrZ0t5QW5JQ2NnS3lBb0pHWnZjbTFoZENrZ0t5QW5LQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5a2dPaUFuSUNzZ0tDUm1iM0p0WVhRcElDc2dKeWduSUNzZ0tDUmtZWFJoS1NBcklDY3BLU0FuTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0NSbWIzSnRZWFFwSUNzZ0p5Z25JQ3NnS0NSa1lYUmhLU0FySUNjcElDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSURvZ0p5QXJJQ2drWm05eWJXRjBLU0FySUNjdWRHVnpkQ2duSUNzZ0tDUmtZWFJoS1NBcklDY3BLU2twS1NCN0p6dGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQjJZWElnSkdadmNtMWhkQ0E5SUdsMExtWnZjbTFoZEhOYkpITmphR1Z0WVYwN1hHNGdJQ0FnYVdZZ0tDRWtabTl5YldGMEtTQjdYRzRnSUNBZ0lDQnBaaUFvSkhWdWEyNXZkMjVHYjNKdFlYUnpJRDA5SUNkcFoyNXZjbVVuS1NCN1hHNGdJQ0FnSUNBZ0lHTnZibk52YkdVdWQyRnliaWduZFc1cmJtOTNiaUJtYjNKdFlYUWdYQ0luSUNzZ0pITmphR1Z0WVNBcklDZGNJaUJwWjI1dmNtVmtJR2x1SUhOamFHVnRZU0JoZENCd1lYUm9JRndpSnlBcklHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5YQ0luS1R0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb2RISjFaU2tnZXlBbk8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnZkWFE3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0NSaGJHeHZkMVZ1YTI1dmQyNGdKaVlnSkhWdWEyNXZkMjVHYjNKdFlYUnpMbWx1WkdWNFQyWW9KSE5qYUdWdFlTa2dQajBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDaDBjblZsS1NCN0lDYzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzkxZER0Y2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUhSb2NtOTNJRzVsZHlCRmNuSnZjaWduZFc1cmJtOTNiaUJtYjNKdFlYUWdYQ0luSUNzZ0pITmphR1Z0WVNBcklDZGNJaUJwY3lCMWMyVmtJR2x1SUhOamFHVnRZU0JoZENCd1lYUm9JRndpSnlBcklHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5YQ0luS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lDQWdkbUZ5SUNScGMwOWlhbVZqZENBOUlIUjVjR1Z2WmlBa1ptOXliV0YwSUQwOUlDZHZZbXBsWTNRbklDWW1JQ0VvSkdadmNtMWhkQ0JwYm5OMFlXNWpaVzltSUZKbFowVjRjQ2tnSmlZZ0pHWnZjbTFoZEM1MllXeHBaR0YwWlR0Y2JpQWdJQ0IyWVhJZ0pHWnZjbTFoZEZSNWNHVWdQU0FrYVhOUFltcGxZM1FnSmlZZ0pHWnZjbTFoZEM1MGVYQmxJSHg4SUNkemRISnBibWNuTzF4dUlDQWdJR2xtSUNna2FYTlBZbXBsWTNRcElIdGNiaUFnSUNBZ0lIWmhjaUFrWVhONWJtTWdQU0FrWm05eWJXRjBMbUZ6ZVc1aklEMDlQU0IwY25WbE8xeHVJQ0FnSUNBZ0pHWnZjbTFoZENBOUlDUm1iM0p0WVhRdWRtRnNhV1JoZEdVN1hHNGdJQ0FnZlZ4dUlDQWdJR2xtSUNna1ptOXliV0YwVkhsd1pTQWhQU0FrY25Wc1pWUjVjR1VwSUh0Y2JpQWdJQ0FnSUdsbUlDZ2tZbkpsWVd0UGJrVnljbTl5S1NCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2gwY25WbEtTQjdJQ2M3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0J5WlhSMWNtNGdiM1YwTzF4dUlDQWdJSDFjYmlBZ0lDQnBaaUFvSkdGemVXNWpLU0I3WEc0Z0lDQWdJQ0JwWmlBb0lXbDBMbUZ6ZVc1aktTQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb0oyRnplVzVqSUdadmNtMWhkQ0JwYmlCemVXNWpJSE5qYUdWdFlTY3BPMXh1SUNBZ0lDQWdkbUZ5SUNSbWIzSnRZWFJTWldZZ1BTQW5abTl5YldGMGN5Y2dLeUJwZEM1MWRHbHNMbWRsZEZCeWIzQmxjblI1S0NSelkyaGxiV0VwSUNzZ0p5NTJZV3hwWkdGMFpTYzdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QnBaaUFvSVNnbklDc2dLR2wwTG5scFpXeGtRWGRoYVhRcElDc2dKeUFuSUNzZ0tDUm1iM0p0WVhSU1pXWXBJQ3NnSnlnbklDc2dLQ1JrWVhSaEtTQXJJQ2NwS1NrZ2V5QW5PMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlCcFppQW9JU0FuTzF4dUlDQWdJQ0FnZG1GeUlDUm1iM0p0WVhSU1pXWWdQU0FuWm05eWJXRjBjeWNnS3lCcGRDNTFkR2xzTG1kbGRGQnliM0JsY25SNUtDUnpZMmhsYldFcE8xeHVJQ0FnSUNBZ2FXWWdLQ1JwYzA5aWFtVmpkQ2tnSkdadmNtMWhkRkpsWmlBclBTQW5MblpoYkdsa1lYUmxKenRjYmlBZ0lDQWdJR2xtSUNoMGVYQmxiMllnSkdadmNtMWhkQ0E5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pHWnZjbTFoZEZKbFppa2dLeUFuS0NjZ0t5QW9KR1JoZEdFcElDc2dKeWtnSnp0Y2JpQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KR1p2Y20xaGRGSmxaaWtnS3lBbkxuUmxjM1FvSnlBcklDZ2taR0YwWVNrZ0t5QW5LU0FuTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYjNWMElDczlJQ2NwSUhzZ0p6dGNiaUFnSUNCOVhHNGdJSDFjYmlBZ2RtRnlJQ1FrYjNWMFUzUmhZMnNnUFNBa0pHOTFkRk4wWVdOcklIeDhJRnRkTzF4dUlDQWtKRzkxZEZOMFlXTnJMbkIxYzJnb2IzVjBLVHRjYmlBZ2IzVjBJRDBnSnljN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQmxiSE5sSUNvdlhHNGdJR2xtSUNocGRDNWpjbVZoZEdWRmNuSnZjbk1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnYjNWMElDczlJQ2NnZXlCclpYbDNiM0prT2lCY1hDY25JQ3NnS0NkbWIzSnRZWFFuS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdJR1p2Y20xaGREb2dJQ2M3WEc0Z0lDQWdhV1lnS0NScGMwUmhkR0VwSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSnlBcklDZ2tjMk5vWlcxaFZtRnNkV1VwTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5Y2dLeUFvYVhRdWRYUnBiQzUwYjFGMWIzUmxaRk4wY21sdVp5Z2tjMk5vWlcxaEtTazdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSUNCOUlDYzdYRzRnSUNBZ2FXWWdLR2wwTG05d2RITXViV1Z6YzJGblpYTWdJVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFzSUcxbGMzTmhaMlU2SUZ4Y0ozTm9iM1ZzWkNCdFlYUmphQ0JtYjNKdFlYUWdYQ0luTzF4dUlDQWdJQ0FnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDZGNYQ2NnS3lBbklDc2dLQ1J6WTJobGJXRldZV3gxWlNrZ0t5QW5JQ3NnWEZ3bkp6dGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbkp5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna2MyTm9aVzFoS1NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCdmRYUWdLejBnSjF3aVhGd25JQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHbG1JQ2hwZEM1dmNIUnpMblpsY21KdmMyVXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYzJOb1pXMWhPaUFnSnp0Y2JpQWdJQ0FnSUdsbUlDZ2thWE5FWVhSaEtTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5kbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2drYzJOb1pXMWhVR0YwYUNrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnljZ0t5QW9hWFF1ZFhScGJDNTBiMUYxYjNSbFpGTjBjbWx1Wnlna2MyTm9aVzFoS1NrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCdmRYUWdLejBnSnlBZ0lDQWdJQ0FnSUN3Z2NHRnlaVzUwVTJOb1pXMWhPaUIyWVd4cFpHRjBaUzV6WTJobGJXRW5JQ3NnS0dsMExuTmphR1Z0WVZCaGRHZ3BJQ3NnSnlBc0lHUmhkR0U2SUNjZ0t5QW9KR1JoZEdFcElDc2dKeUFuTzF4dUlDQWdJSDFjYmlBZ0lDQnZkWFFnS3owZ0p5QjlJQ2M3WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnYjNWMElDczlJQ2NnZTMwZ0p6dGNiaUFnZlZ4dUlDQjJZWElnWDE5bGNuSWdQU0J2ZFhRN1hHNGdJRzkxZENBOUlDUWtiM1YwVTNSaFkyc3VjRzl3S0NrN1hHNGdJR2xtSUNnaGFYUXVZMjl0Y0c5emFYUmxVblZzWlNBbUppQWtZbkpsWVd0UGJrVnljbTl5S1NCN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQnBaaUFxTDF4dUlDQWdJR2xtSUNocGRDNWhjM2x1WXlrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RHaHliM2NnYm1WM0lGWmhiR2xrWVhScGIyNUZjbkp2Y2loYkp5QXJJQ2hmWDJWeWNpa2dLeUFuWFNrN0lDYzdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUhaaGJHbGtZWFJsTG1WeWNtOXljeUE5SUZzbklDc2dLRjlmWlhKeUtTQXJJQ2RkT3lCeVpYUjFjbTRnWm1Gc2MyVTdJQ2M3WEc0Z0lDQWdmVnh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJRzkxZENBclBTQW5JSFpoY2lCbGNuSWdQU0FuSUNzZ0tGOWZaWEp5S1NBcklDYzdJQ0JwWmlBb2RrVnljbTl5Y3lBOVBUMGdiblZzYkNrZ2RrVnljbTl5Y3lBOUlGdGxjbkpkT3lCbGJITmxJSFpGY25KdmNuTXVjSFZ6YUNobGNuSXBPeUJsY25KdmNuTXJLenNnSnp0Y2JpQWdmVnh1SUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUdsbUlDZ2tZbkpsWVd0UGJrVnljbTl5S1NCN1hHNGdJQ0FnYjNWMElDczlJQ2NnWld4elpTQjdJQ2M3WEc0Z0lIMWNiaUFnY21WMGRYSnVJRzkxZER0Y2JuMWNiaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVRzaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvZm9ybWF0LmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9pdGVtcy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvaXRlbXMuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9pdGVtcyhpdCwgJGtleXdvcmQsICRydWxlVHlwZSkge1xcXFxuICB2YXIgb3V0ID0gJyAnO1xcXFxuICB2YXIgJGx2bCA9IGl0LmxldmVsO1xcXFxuICB2YXIgJGRhdGFMdmwgPSBpdC5kYXRhTGV2ZWw7XFxcXG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcXFxcbiAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJGtleXdvcmQpO1xcXFxuICB2YXIgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy8nICsgJGtleXdvcmQ7XFxcXG4gIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xcXFxuICB2YXIgJGRhdGEgPSAnZGF0YScgKyAoJGRhdGFMdmwgfHwgJycpO1xcXFxuICB2YXIgJHZhbGlkID0gJ3ZhbGlkJyArICRsdmw7XFxcXG4gIHZhciAkZXJycyA9ICdlcnJzX18nICsgJGx2bDtcXFxcbiAgdmFyICRpdCA9IGl0LnV0aWwuY29weShpdCk7XFxcXG4gIHZhciAkY2xvc2luZ0JyYWNlcyA9ICcnO1xcXFxuICAkaXQubGV2ZWwrKztcXFxcbiAgdmFyICRuZXh0VmFsaWQgPSAndmFsaWQnICsgJGl0LmxldmVsO1xcXFxuICB2YXIgJGlkeCA9ICdpJyArICRsdmwsXFxcXG4gICAgJGRhdGFOeHQgPSAkaXQuZGF0YUxldmVsID0gaXQuZGF0YUxldmVsICsgMSxcXFxcbiAgICAkbmV4dERhdGEgPSAnZGF0YScgKyAkZGF0YU54dCxcXFxcbiAgICAkY3VycmVudEJhc2VJZCA9IGl0LmJhc2VJZDtcXFxcbiAgb3V0ICs9ICd2YXIgJyArICgkZXJycykgKyAnID0gZXJyb3JzO3ZhciAnICsgKCR2YWxpZCkgKyAnOyc7XFxcXG4gIGlmIChBcnJheS5pc0FycmF5KCRzY2hlbWEpKSB7XFxcXG4gICAgdmFyICRhZGRpdGlvbmFsSXRlbXMgPSBpdC5zY2hlbWEuYWRkaXRpb25hbEl0ZW1zO1xcXFxuICAgIGlmICgkYWRkaXRpb25hbEl0ZW1zID09PSBmYWxzZSkge1xcXFxuICAgICAgb3V0ICs9ICcgJyArICgkdmFsaWQpICsgJyA9ICcgKyAoJGRhdGEpICsgJy5sZW5ndGggPD0gJyArICgkc2NoZW1hLmxlbmd0aCkgKyAnOyAnO1xcXFxuICAgICAgdmFyICRjdXJyRXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoO1xcXFxuICAgICAgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy9hZGRpdGlvbmFsSXRlbXMnO1xcXFxuICAgICAgb3V0ICs9ICcgIGlmICghJyArICgkdmFsaWQpICsgJykgeyAgICc7XFxcXG4gICAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdhZGRpdGlvbmFsSXRlbXMnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IGxpbWl0OiAnICsgKCRzY2hlbWEubGVuZ3RoKSArICcgfSAnO1xcXFxuICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBOT1QgaGF2ZSBtb3JlIHRoYW4gJyArICgkc2NoZW1hLmxlbmd0aCkgKyAnIGl0ZW1zXFxcXFxcXFwnICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiBmYWxzZSAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgICAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICAkZXJyU2NoZW1hUGF0aCA9ICRjdXJyRXJyU2NoZW1hUGF0aDtcXFxcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICRjbG9zaW5nQnJhY2VzICs9ICd9JztcXFxcbiAgICAgICAgb3V0ICs9ICcgZWxzZSB7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICAgIHZhciBhcnIxID0gJHNjaGVtYTtcXFxcbiAgICBpZiAoYXJyMSkge1xcXFxuICAgICAgdmFyICRzY2gsICRpID0gLTEsXFxcXG4gICAgICAgIGwxID0gYXJyMS5sZW5ndGggLSAxO1xcXFxuICAgICAgd2hpbGUgKCRpIDwgbDEpIHtcXFxcbiAgICAgICAgJHNjaCA9IGFycjFbJGkgKz0gMV07XFxcXG4gICAgICAgIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2gsIGl0LlJVTEVTLmFsbCkpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyAnICsgKCRuZXh0VmFsaWQpICsgJyA9IHRydWU7IGlmICgnICsgKCRkYXRhKSArICcubGVuZ3RoID4gJyArICgkaSkgKyAnKSB7ICc7XFxcXG4gICAgICAgICAgdmFyICRwYXNzRGF0YSA9ICRkYXRhICsgJ1snICsgJGkgKyAnXSc7XFxcXG4gICAgICAgICAgJGl0LnNjaGVtYSA9ICRzY2g7XFxcXG4gICAgICAgICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aCArICdbJyArICRpICsgJ10nO1xcXFxuICAgICAgICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGggKyAnLycgKyAkaTtcXFxcbiAgICAgICAgICAkaXQuZXJyb3JQYXRoID0gaXQudXRpbC5nZXRQYXRoRXhwcihpdC5lcnJvclBhdGgsICRpLCBpdC5vcHRzLmpzb25Qb2ludGVycywgdHJ1ZSk7XFxcXG4gICAgICAgICAgJGl0LmRhdGFQYXRoQXJyWyRkYXRhTnh0XSA9ICRpO1xcXFxuICAgICAgICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCk7XFxcXG4gICAgICAgICAgJGl0LmJhc2VJZCA9ICRjdXJyZW50QmFzZUlkO1xcXFxuICAgICAgICAgIGlmIChpdC51dGlsLnZhck9jY3VyZW5jZXMoJGNvZGUsICRuZXh0RGF0YSkgPCAyKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAnICsgKGl0LnV0aWwudmFyUmVwbGFjZSgkY29kZSwgJG5leHREYXRhLCAkcGFzc0RhdGEpKSArICcgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHREYXRhKSArICcgPSAnICsgKCRwYXNzRGF0YSkgKyAnOyAnICsgKCRjb2RlKSArICcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfSAgJztcXFxcbiAgICAgICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XFxcXG4gICAgICAgICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICAgIGlmICh0eXBlb2YgJGFkZGl0aW9uYWxJdGVtcyA9PSAnb2JqZWN0JyAmJiBpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRhZGRpdGlvbmFsSXRlbXMsIGl0LlJVTEVTLmFsbCkpIHtcXFxcbiAgICAgICRpdC5zY2hlbWEgPSAkYWRkaXRpb25hbEl0ZW1zO1xcXFxuICAgICAgJGl0LnNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgJy5hZGRpdGlvbmFsSXRlbXMnO1xcXFxuICAgICAgJGl0LmVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy9hZGRpdGlvbmFsSXRlbXMnO1xcXFxuICAgICAgb3V0ICs9ICcgJyArICgkbmV4dFZhbGlkKSArICcgPSB0cnVlOyBpZiAoJyArICgkZGF0YSkgKyAnLmxlbmd0aCA+ICcgKyAoJHNjaGVtYS5sZW5ndGgpICsgJykgeyAgZm9yICh2YXIgJyArICgkaWR4KSArICcgPSAnICsgKCRzY2hlbWEubGVuZ3RoKSArICc7ICcgKyAoJGlkeCkgKyAnIDwgJyArICgkZGF0YSkgKyAnLmxlbmd0aDsgJyArICgkaWR4KSArICcrKykgeyAnO1xcXFxuICAgICAgJGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aEV4cHIoaXQuZXJyb3JQYXRoLCAkaWR4LCBpdC5vcHRzLmpzb25Qb2ludGVycywgdHJ1ZSk7XFxcXG4gICAgICB2YXIgJHBhc3NEYXRhID0gJGRhdGEgKyAnWycgKyAkaWR4ICsgJ10nO1xcXFxuICAgICAgJGl0LmRhdGFQYXRoQXJyWyRkYXRhTnh0XSA9ICRpZHg7XFxcXG4gICAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xcXFxuICAgICAgJGl0LmJhc2VJZCA9ICRjdXJyZW50QmFzZUlkO1xcXFxuICAgICAgaWYgKGl0LnV0aWwudmFyT2NjdXJlbmNlcygkY29kZSwgJG5leHREYXRhKSA8IDIpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkbmV4dERhdGEpICsgJyA9ICcgKyAoJHBhc3NEYXRhKSArICc7ICcgKyAoJGNvZGUpICsgJyAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgYnJlYWs7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB9IH0gICc7XFxcXG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkbmV4dFZhbGlkKSArICcpIHsgJztcXFxcbiAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgfSBlbHNlIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2hlbWEsIGl0LlJVTEVTLmFsbCkpIHtcXFxcbiAgICAkaXQuc2NoZW1hID0gJHNjaGVtYTtcXFxcbiAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoO1xcXFxuICAgICRpdC5lcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XFxcXG4gICAgb3V0ICs9ICcgIGZvciAodmFyICcgKyAoJGlkeCkgKyAnID0gJyArICgwKSArICc7ICcgKyAoJGlkeCkgKyAnIDwgJyArICgkZGF0YSkgKyAnLmxlbmd0aDsgJyArICgkaWR4KSArICcrKykgeyAnO1xcXFxuICAgICRpdC5lcnJvclBhdGggPSBpdC51dGlsLmdldFBhdGhFeHByKGl0LmVycm9yUGF0aCwgJGlkeCwgaXQub3B0cy5qc29uUG9pbnRlcnMsIHRydWUpO1xcXFxuICAgIHZhciAkcGFzc0RhdGEgPSAkZGF0YSArICdbJyArICRpZHggKyAnXSc7XFxcXG4gICAgJGl0LmRhdGFQYXRoQXJyWyRkYXRhTnh0XSA9ICRpZHg7XFxcXG4gICAgdmFyICRjb2RlID0gaXQudmFsaWRhdGUoJGl0KTtcXFxcbiAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XFxcXG4gICAgaWYgKGl0LnV0aWwudmFyT2NjdXJlbmNlcygkY29kZSwgJG5leHREYXRhKSA8IDIpIHtcXFxcbiAgICAgIG91dCArPSAnICcgKyAoaXQudXRpbC52YXJSZXBsYWNlKCRjb2RlLCAkbmV4dERhdGEsICRwYXNzRGF0YSkpICsgJyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YXIgJyArICgkbmV4dERhdGEpICsgJyA9ICcgKyAoJHBhc3NEYXRhKSArICc7ICcgKyAoJGNvZGUpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgb3V0ICs9ICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgYnJlYWs7ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIH0nO1xcXFxuICB9XFxcXG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgb3V0ICs9ICcgJyArICgkY2xvc2luZ0JyYWNlcykgKyAnIGlmICgnICsgKCRlcnJzKSArICcgPT0gZXJyb3JzKSB7JztcXFxcbiAgfVxcXFxuICBvdXQgPSBpdC51dGlsLmNsZWFuVXBDb2RlKG91dCk7XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OXBkR1Z0Y3k1cWN5NXFjeUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwybHRhbTk1VWxCREx5NHZibTlrWlY5dGIyUjFiR1Z6TDJGcWRpOXNhV0l2Wkc5MGFuTXZhWFJsYlhNdWFuTS9Oems0WlNKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW5kWE5sSUhOMGNtbGpkQ2M3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdkbGJtVnlZWFJsWDJsMFpXMXpLR2wwTENBa2EyVjVkMjl5WkN3Z0pISjFiR1ZVZVhCbEtTQjdYRzRnSUhaaGNpQnZkWFFnUFNBbklDYzdYRzRnSUhaaGNpQWtiSFpzSUQwZ2FYUXViR1YyWld3N1hHNGdJSFpoY2lBa1pHRjBZVXgyYkNBOUlHbDBMbVJoZEdGTVpYWmxiRHRjYmlBZ2RtRnlJQ1J6WTJobGJXRWdQU0JwZEM1elkyaGxiV0ZiSkd0bGVYZHZjbVJkTzF4dUlDQjJZWElnSkhOamFHVnRZVkJoZEdnZ1BTQnBkQzV6WTJobGJXRlFZWFJvSUNzZ2FYUXVkWFJwYkM1blpYUlFjbTl3WlhKMGVTZ2thMlY1ZDI5eVpDazdYRzRnSUhaaGNpQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lBa2EyVjVkMjl5WkR0Y2JpQWdkbUZ5SUNSaWNtVmhhMDl1UlhKeWIzSWdQU0FoYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk03WEc0Z0lIWmhjaUFrWkdGMFlTQTlJQ2RrWVhSaEp5QXJJQ2drWkdGMFlVeDJiQ0I4ZkNBbkp5azdYRzRnSUhaaGNpQWtkbUZzYVdRZ1BTQW5kbUZzYVdRbklDc2dKR3gyYkR0Y2JpQWdkbUZ5SUNSbGNuSnpJRDBnSjJWeWNuTmZYeWNnS3lBa2JIWnNPMXh1SUNCMllYSWdKR2wwSUQwZ2FYUXVkWFJwYkM1amIzQjVLR2wwS1R0Y2JpQWdkbUZ5SUNSamJHOXphVzVuUW5KaFkyVnpJRDBnSnljN1hHNGdJQ1JwZEM1c1pYWmxiQ3NyTzF4dUlDQjJZWElnSkc1bGVIUldZV3hwWkNBOUlDZDJZV3hwWkNjZ0t5QWthWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWthV1I0SUQwZ0oya25JQ3NnSkd4MmJDeGNiaUFnSUNBa1pHRjBZVTU0ZENBOUlDUnBkQzVrWVhSaFRHVjJaV3dnUFNCcGRDNWtZWFJoVEdWMlpXd2dLeUF4TEZ4dUlDQWdJQ1J1WlhoMFJHRjBZU0E5SUNka1lYUmhKeUFySUNSa1lYUmhUbmgwTEZ4dUlDQWdJQ1JqZFhKeVpXNTBRbUZ6WlVsa0lEMGdhWFF1WW1GelpVbGtPMXh1SUNCdmRYUWdLejBnSjNaaGNpQW5JQ3NnS0NSbGNuSnpLU0FySUNjZ1BTQmxjbkp2Y25NN2RtRnlJQ2NnS3lBb0pIWmhiR2xrS1NBcklDYzdKenRjYmlBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb0pITmphR1Z0WVNrcElIdGNiaUFnSUNCMllYSWdKR0ZrWkdsMGFXOXVZV3hKZEdWdGN5QTlJR2wwTG5OamFHVnRZUzVoWkdScGRHbHZibUZzU1hSbGJYTTdYRzRnSUNBZ2FXWWdLQ1JoWkdScGRHbHZibUZzU1hSbGJYTWdQVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUFuSUNzZ0tDUjJZV3hwWkNrZ0t5QW5JRDBnSnlBcklDZ2taR0YwWVNrZ0t5QW5MbXhsYm1kMGFDQThQU0FuSUNzZ0tDUnpZMmhsYldFdWJHVnVaM1JvS1NBcklDYzdJQ2M3WEc0Z0lDQWdJQ0IyWVhJZ0pHTjFjbkpGY25KVFkyaGxiV0ZRWVhSb0lEMGdKR1Z5Y2xOamFHVnRZVkJoZEdnN1hHNGdJQ0FnSUNBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkwyRmtaR2wwYVc5dVlXeEpkR1Z0Y3ljN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBZ2FXWWdLQ0VuSUNzZ0tDUjJZV3hwWkNrZ0t5QW5LU0I3SUNBZ0p6dGNiaUFnSUNBZ0lIWmhjaUFrSkc5MWRGTjBZV05ySUQwZ0pDUnZkWFJUZEdGamF5QjhmQ0JiWFR0Y2JpQWdJQ0FnSUNRa2IzVjBVM1JoWTJzdWNIVnphQ2h2ZFhRcE8xeHVJQ0FnSUNBZ2IzVjBJRDBnSnljN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQmxiSE5sSUNvdlhHNGdJQ0FnSUNCcFppQW9hWFF1WTNKbFlYUmxSWEp5YjNKeklDRTlQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI3SUd0bGVYZHZjbVE2SUZ4Y0p5Y2dLeUFvSjJGa1pHbDBhVzl1WVd4SmRHVnRjeWNwSUNzZ0oxeGNKeUFzSUdSaGRHRlFZWFJvT2lBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjZ0xDQnpZMmhsYldGUVlYUm9PaUFuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvSkdWeWNsTmphR1Z0WVZCaGRHZ3BLU0FySUNjZ0xDQndZWEpoYlhNNklIc2diR2x0YVhRNklDY2dLeUFvSkhOamFHVnRZUzVzWlc1bmRHZ3BJQ3NnSnlCOUlDYzdYRzRnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TG0xbGMzTmhaMlZ6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYldWemMyRm5aVG9nWEZ3bmMyaHZkV3hrSUU1UFZDQm9ZWFpsSUcxdmNtVWdkR2hoYmlBbklDc2dLQ1J6WTJobGJXRXViR1Z1WjNSb0tTQXJJQ2NnYVhSbGJYTmNYQ2NnSnp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTUyWlhKaWIzTmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnpZMmhsYldFNklHWmhiSE5sSUN3Z2NHRnlaVzUwVTJOb1pXMWhPaUIyWVd4cFpHRjBaUzV6WTJobGJXRW5JQ3NnS0dsMExuTmphR1Z0WVZCaGRHZ3BJQ3NnSnlBc0lHUmhkR0U2SUNjZ0t5QW9KR1JoZEdFcElDc2dKeUFuTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JSHQ5SUNjN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCMllYSWdYMTlsY25JZ1BTQnZkWFE3WEc0Z0lDQWdJQ0J2ZFhRZ1BTQWtKRzkxZEZOMFlXTnJMbkJ2Y0NncE8xeHVJQ0FnSUNBZ2FXWWdLQ0ZwZEM1amIyMXdiM05wZEdWU2RXeGxJQ1ltSUNSaWNtVmhhMDl1UlhKeWIzSXBJSHNnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUdsbUlDb3ZYRzRnSUNBZ0lDQWdJR2xtSUNocGRDNWhjM2x1WXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFJvY205M0lHNWxkeUJXWVd4cFpHRjBhVzl1UlhKeWIzSW9XeWNnS3lBb1gxOWxjbklwSUNzZ0oxMHBPeUFuTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhiR2xrWVhSbExtVnljbTl5Y3lBOUlGc25JQ3NnS0Y5ZlpYSnlLU0FySUNkZE95QnlaWFIxY200Z1ptRnNjMlU3SUNjN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUJsY25JZ1BTQW5JQ3NnS0Y5ZlpYSnlLU0FySUNjN0lDQnBaaUFvZGtWeWNtOXljeUE5UFQwZ2JuVnNiQ2tnZGtWeWNtOXljeUE5SUZ0bGNuSmRPeUJsYkhObElIWkZjbkp2Y25NdWNIVnphQ2hsY25JcE95Qmxjbkp2Y25Nckt6c2dKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRzkxZENBclBTQW5JSDBnSnp0Y2JpQWdJQ0FnSUNSbGNuSlRZMmhsYldGUVlYUm9JRDBnSkdOMWNuSkZjbkpUWTJobGJXRlFZWFJvTzF4dUlDQWdJQ0FnYVdZZ0tDUmljbVZoYTA5dVJYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ0pHTnNiM05wYm1kQ2NtRmpaWE1nS3owZ0ozMG5PMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJsYkhObElIc2dKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ2RtRnlJR0Z5Y2pFZ1BTQWtjMk5vWlcxaE8xeHVJQ0FnSUdsbUlDaGhjbkl4S1NCN1hHNGdJQ0FnSUNCMllYSWdKSE5qYUN3Z0pHa2dQU0F0TVN4Y2JpQWdJQ0FnSUNBZ2JERWdQU0JoY25JeExteGxibWQwYUNBdElERTdYRzRnSUNBZ0lDQjNhR2xzWlNBb0pHa2dQQ0JzTVNrZ2UxeHVJQ0FnSUNBZ0lDQWtjMk5vSUQwZ1lYSnlNVnNrYVNBclBTQXhYVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHbDBMblYwYVd3dWMyTm9aVzFoU0dGelVuVnNaWE1vSkhOamFDd2dhWFF1VWxWTVJWTXVZV3hzS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pHNWxlSFJXWVd4cFpDa2dLeUFuSUQwZ2RISjFaVHNnYVdZZ0tDY2dLeUFvSkdSaGRHRXBJQ3NnSnk1c1pXNW5kR2dnUGlBbklDc2dLQ1JwS1NBcklDY3BJSHNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjJZWElnSkhCaGMzTkVZWFJoSUQwZ0pHUmhkR0VnS3lBbld5Y2dLeUFrYVNBcklDZGRKenRjYmlBZ0lDQWdJQ0FnSUNBa2FYUXVjMk5vWlcxaElEMGdKSE5qYUR0Y2JpQWdJQ0FnSUNBZ0lDQWthWFF1YzJOb1pXMWhVR0YwYUNBOUlDUnpZMmhsYldGUVlYUm9JQ3NnSjFzbklDc2dKR2tnS3lBblhTYzdYRzRnSUNBZ0lDQWdJQ0FnSkdsMExtVnljbE5qYUdWdFlWQmhkR2dnUFNBa1pYSnlVMk5vWlcxaFVHRjBhQ0FySUNjdkp5QXJJQ1JwTzF4dUlDQWdJQ0FnSUNBZ0lDUnBkQzVsY25KdmNsQmhkR2dnUFNCcGRDNTFkR2xzTG1kbGRGQmhkR2hGZUhCeUtHbDBMbVZ5Y205eVVHRjBhQ3dnSkdrc0lHbDBMbTl3ZEhNdWFuTnZibEJ2YVc1MFpYSnpMQ0IwY25WbEtUdGNiaUFnSUNBZ0lDQWdJQ0FrYVhRdVpHRjBZVkJoZEdoQmNuSmJKR1JoZEdGT2VIUmRJRDBnSkdrN1hHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUNSamIyUmxJRDBnYVhRdWRtRnNhV1JoZEdVb0pHbDBLVHRjYmlBZ0lDQWdJQ0FnSUNBa2FYUXVZbUZ6WlVsa0lEMGdKR04xY25KbGJuUkNZWE5sU1dRN1hHNGdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExuVjBhV3d1ZG1GeVQyTmpkWEpsYm1ObGN5Z2tZMjlrWlN3Z0pHNWxlSFJFWVhSaEtTQThJRElwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb2FYUXVkWFJwYkM1MllYSlNaWEJzWVdObEtDUmpiMlJsTENBa2JtVjRkRVJoZEdFc0lDUndZWE56UkdGMFlTa3BJQ3NnSnlBbk8xeHVJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCMllYSWdKeUFySUNna2JtVjRkRVJoZEdFcElDc2dKeUE5SUNjZ0t5QW9KSEJoYzNORVlYUmhLU0FySUNjN0lDY2dLeUFvSkdOdlpHVXBJQ3NnSnlBbk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCOUlDQW5PMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDZ2tZbkpsWVd0UGJrVnljbTl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb0p5QXJJQ2drYm1WNGRGWmhiR2xrS1NBcklDY3BJSHNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1JqYkc5emFXNW5RbkpoWTJWeklDczlJQ2Q5Snp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQWtZV1JrYVhScGIyNWhiRWwwWlcxeklEMDlJQ2R2WW1wbFkzUW5JQ1ltSUdsMExuVjBhV3d1YzJOb1pXMWhTR0Z6VW5Wc1pYTW9KR0ZrWkdsMGFXOXVZV3hKZEdWdGN5d2dhWFF1VWxWTVJWTXVZV3hzS1NrZ2UxeHVJQ0FnSUNBZ0pHbDBMbk5qYUdWdFlTQTlJQ1JoWkdScGRHbHZibUZzU1hSbGJYTTdYRzRnSUNBZ0lDQWthWFF1YzJOb1pXMWhVR0YwYUNBOUlHbDBMbk5qYUdWdFlWQmhkR2dnS3lBbkxtRmtaR2wwYVc5dVlXeEpkR1Z0Y3ljN1hHNGdJQ0FnSUNBa2FYUXVaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MMkZrWkdsMGFXOXVZV3hKZEdWdGN5YzdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0NSdVpYaDBWbUZzYVdRcElDc2dKeUE5SUhSeWRXVTdJR2xtSUNnbklDc2dLQ1JrWVhSaEtTQXJJQ2N1YkdWdVozUm9JRDRnSnlBcklDZ2tjMk5vWlcxaExteGxibWQwYUNrZ0t5QW5LU0I3SUNCbWIzSWdLSFpoY2lBbklDc2dLQ1JwWkhncElDc2dKeUE5SUNjZ0t5QW9KSE5qYUdWdFlTNXNaVzVuZEdncElDc2dKenNnSnlBcklDZ2thV1I0S1NBcklDY2dQQ0FuSUNzZ0tDUmtZWFJoS1NBcklDY3ViR1Z1WjNSb095QW5JQ3NnS0NScFpIZ3BJQ3NnSnlzcktTQjdJQ2M3WEc0Z0lDQWdJQ0FrYVhRdVpYSnliM0pRWVhSb0lEMGdhWFF1ZFhScGJDNW5aWFJRWVhSb1JYaHdjaWhwZEM1bGNuSnZjbEJoZEdnc0lDUnBaSGdzSUdsMExtOXdkSE11YW5OdmJsQnZhVzUwWlhKekxDQjBjblZsS1R0Y2JpQWdJQ0FnSUhaaGNpQWtjR0Z6YzBSaGRHRWdQU0FrWkdGMFlTQXJJQ2RiSnlBcklDUnBaSGdnS3lBblhTYzdYRzRnSUNBZ0lDQWthWFF1WkdGMFlWQmhkR2hCY25KYkpHUmhkR0ZPZUhSZElEMGdKR2xrZUR0Y2JpQWdJQ0FnSUhaaGNpQWtZMjlrWlNBOUlHbDBMblpoYkdsa1lYUmxLQ1JwZENrN1hHNGdJQ0FnSUNBa2FYUXVZbUZ6WlVsa0lEMGdKR04xY25KbGJuUkNZWE5sU1dRN1hHNGdJQ0FnSUNCcFppQW9hWFF1ZFhScGJDNTJZWEpQWTJOMWNtVnVZMlZ6S0NSamIyUmxMQ0FrYm1WNGRFUmhkR0VwSUR3Z01pa2dlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFuSUNzZ0tHbDBMblYwYVd3dWRtRnlVbVZ3YkdGalpTZ2tZMjlrWlN3Z0pHNWxlSFJFWVhSaExDQWtjR0Z6YzBSaGRHRXBLU0FySUNjZ0p6dGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUnVaWGgwUkdGMFlTa2dLeUFuSUQwZ0p5QXJJQ2drY0dGemMwUmhkR0VwSUNzZ0p6c2dKeUFySUNna1kyOWtaU2tnS3lBbklDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb0lTY2dLeUFvSkc1bGVIUldZV3hwWkNrZ0t5QW5LU0JpY21WaGF6c2dKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRzkxZENBclBTQW5JSDBnZlNBZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnbklDc2dLQ1J1WlhoMFZtRnNhV1FwSUNzZ0p5a2dleUFuTzF4dUlDQWdJQ0FnSUNBa1kyeHZjMmx1WjBKeVlXTmxjeUFyUFNBbmZTYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5SUdWc2MyVWdhV1lnS0dsMExuVjBhV3d1YzJOb1pXMWhTR0Z6VW5Wc1pYTW9KSE5qYUdWdFlTd2dhWFF1VWxWTVJWTXVZV3hzS1NrZ2UxeHVJQ0FnSUNScGRDNXpZMmhsYldFZ1BTQWtjMk5vWlcxaE8xeHVJQ0FnSUNScGRDNXpZMmhsYldGUVlYUm9JRDBnSkhOamFHVnRZVkJoZEdnN1hHNGdJQ0FnSkdsMExtVnljbE5qYUdWdFlWQmhkR2dnUFNBa1pYSnlVMk5vWlcxaFVHRjBhRHRjYmlBZ0lDQnZkWFFnS3owZ0p5QWdabTl5SUNoMllYSWdKeUFySUNna2FXUjRLU0FySUNjZ1BTQW5JQ3NnS0RBcElDc2dKenNnSnlBcklDZ2thV1I0S1NBcklDY2dQQ0FuSUNzZ0tDUmtZWFJoS1NBcklDY3ViR1Z1WjNSb095QW5JQ3NnS0NScFpIZ3BJQ3NnSnlzcktTQjdJQ2M3WEc0Z0lDQWdKR2wwTG1WeWNtOXlVR0YwYUNBOUlHbDBMblYwYVd3dVoyVjBVR0YwYUVWNGNISW9hWFF1WlhKeWIzSlFZWFJvTENBa2FXUjRMQ0JwZEM1dmNIUnpMbXB6YjI1UWIybHVkR1Z5Y3l3Z2RISjFaU2s3WEc0Z0lDQWdkbUZ5SUNSd1lYTnpSR0YwWVNBOUlDUmtZWFJoSUNzZ0oxc25JQ3NnSkdsa2VDQXJJQ2RkSnp0Y2JpQWdJQ0FrYVhRdVpHRjBZVkJoZEdoQmNuSmJKR1JoZEdGT2VIUmRJRDBnSkdsa2VEdGNiaUFnSUNCMllYSWdKR052WkdVZ1BTQnBkQzUyWVd4cFpHRjBaU2drYVhRcE8xeHVJQ0FnSUNScGRDNWlZWE5sU1dRZ1BTQWtZM1Z5Y21WdWRFSmhjMlZKWkR0Y2JpQWdJQ0JwWmlBb2FYUXVkWFJwYkM1MllYSlBZMk4xY21WdVkyVnpLQ1JqYjJSbExDQWtibVY0ZEVSaGRHRXBJRHdnTWlrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2hwZEM1MWRHbHNMblpoY2xKbGNHeGhZMlVvSkdOdlpHVXNJQ1J1WlhoMFJHRjBZU3dnSkhCaGMzTkVZWFJoS1NrZ0t5QW5JQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUnVaWGgwUkdGMFlTa2dLeUFuSUQwZ0p5QXJJQ2drY0dGemMwUmhkR0VwSUNzZ0p6c2dKeUFySUNna1kyOWtaU2tnS3lBbklDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUdsbUlDZ2tZbkpsWVd0UGJrVnljbTl5S1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlCcFppQW9JU2NnS3lBb0pHNWxlSFJXWVd4cFpDa2dLeUFuS1NCaWNtVmhhenNnSnp0Y2JpQWdJQ0I5WEc0Z0lDQWdiM1YwSUNzOUlDY2dmU2M3WEc0Z0lIMWNiaUFnYVdZZ0tDUmljbVZoYTA5dVJYSnliM0lwSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUFuSUNzZ0tDUmpiRzl6YVc1blFuSmhZMlZ6S1NBcklDY2dhV1lnS0NjZ0t5QW9KR1Z5Y25NcElDc2dKeUE5UFNCbGNuSnZjbk1wSUhzbk8xeHVJQ0I5WEc0Z0lHOTFkQ0E5SUdsMExuVjBhV3d1WTJ4bFlXNVZjRU52WkdVb2IzVjBLVHRjYmlBZ2NtVjBkWEp1SUc5MWREdGNibjFjYmlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUc2lMQ0p6YjNWeVkyVlNiMjkwSWpvaUluMD1cXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL2l0ZW1zLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9tdWx0aXBsZU9mLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL211bHRpcGxlT2YuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX211bHRpcGxlT2YoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcgJztcXFxcbiAgdmFyICRsdmwgPSBpdC5sZXZlbDtcXFxcbiAgdmFyICRkYXRhTHZsID0gaXQuZGF0YUxldmVsO1xcXFxuICB2YXIgJHNjaGVtYSA9IGl0LnNjaGVtYVska2V5d29yZF07XFxcXG4gIHZhciAkc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyBpdC51dGlsLmdldFByb3BlcnR5KCRrZXl3b3JkKTtcXFxcbiAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICB2YXIgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgdmFyICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcXFxcbiAgICAkc2NoZW1hVmFsdWU7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xcXFxuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xcXFxuICB9XFxcXG4gIG91dCArPSAndmFyIGRpdmlzaW9uJyArICgkbHZsKSArICc7aWYgKCc7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmICggdHlwZW9mICcgKyAoJHNjaGVtYVZhbHVlKSArICcgIT0gXFxcXFxcXFwnbnVtYmVyXFxcXFxcXFwnIHx8ICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICcgKGRpdmlzaW9uJyArICgkbHZsKSArICcgPSAnICsgKCRkYXRhKSArICcgLyAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnLCAnO1xcXFxuICBpZiAoaXQub3B0cy5tdWx0aXBsZU9mUHJlY2lzaW9uKSB7XFxcXG4gICAgb3V0ICs9ICcgTWF0aC5hYnMoTWF0aC5yb3VuZChkaXZpc2lvbicgKyAoJGx2bCkgKyAnKSAtIGRpdmlzaW9uJyArICgkbHZsKSArICcpID4gMWUtJyArIChpdC5vcHRzLm11bHRpcGxlT2ZQcmVjaXNpb24pICsgJyAnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIGRpdmlzaW9uJyArICgkbHZsKSArICcgIT09IHBhcnNlSW50KGRpdmlzaW9uJyArICgkbHZsKSArICcpICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICcgKSAnO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnICApICAnO1xcXFxuICB9XFxcXG4gIG91dCArPSAnICkgeyAgICc7XFxcXG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgnbXVsdGlwbGVPZicpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgbXVsdGlwbGVPZjogJyArICgkc2NoZW1hVmFsdWUpICsgJyB9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBiZSBtdWx0aXBsZSBvZiAnO1xcXFxuICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgKyAnICsgKCRzY2hlbWFWYWx1ZSk7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJycgKyAoJHNjaGVtYVZhbHVlKSArICdcXFxcXFxcXCcnO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogICc7XFxcXG4gICAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgICBvdXQgKz0gJ3ZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWEpO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgICAgICAgICAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgfSAnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHt9ICc7XFxcXG4gIH1cXFxcbiAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgIH1cXFxcbiAgfSBlbHNlIHtcXFxcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICd9ICc7XFxcXG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XFxcXG4gIH1cXFxcbiAgcmV0dXJuIG91dDtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5dGRXeDBhWEJzWlU5bUxtcHpMbXB6SWl3aWMyOTFjbU5sY3lJNld5SjNaV0p3WVdOck9pOHZhVzFxYjNsU1VFTXZMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTl0ZFd4MGFYQnNaVTltTG1welAyRTVNekVpWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUozVnpaU0J6ZEhKcFkzUW5PMXh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUJuWlc1bGNtRjBaVjl0ZFd4MGFYQnNaVTltS0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pHRjBZU0E5SUNka1lYUmhKeUFySUNna1pHRjBZVXgyYkNCOGZDQW5KeWs3WEc0Z0lIWmhjaUFrYVhORVlYUmhJRDBnYVhRdWIzQjBjeTRrWkdGMFlTQW1KaUFrYzJOb1pXMWhJQ1ltSUNSelkyaGxiV0V1SkdSaGRHRXNYRzRnSUNBZ0pITmphR1Z0WVZaaGJIVmxPMXh1SUNCcFppQW9KR2x6UkdGMFlTa2dlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUJ6WTJobGJXRW5JQ3NnS0NSc2Rtd3BJQ3NnSnlBOUlDY2dLeUFvYVhRdWRYUnBiQzVuWlhSRVlYUmhLQ1J6WTJobGJXRXVKR1JoZEdFc0lDUmtZWFJoVEhac0xDQnBkQzVrWVhSaFVHRjBhRUZ5Y2lrcElDc2dKenNnSnp0Y2JpQWdJQ0FrYzJOb1pXMWhWbUZzZFdVZ1BTQW5jMk5vWlcxaEp5QXJJQ1JzZG13N1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ0pITmphR1Z0WVZaaGJIVmxJRDBnSkhOamFHVnRZVHRjYmlBZ2ZWeHVJQ0J2ZFhRZ0t6MGdKM1poY2lCa2FYWnBjMmx2YmljZ0t5QW9KR3gyYkNrZ0t5QW5PMmxtSUNnbk8xeHVJQ0JwWmlBb0pHbHpSR0YwWVNrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KSE5qYUdWdFlWWmhiSFZsS1NBcklDY2dJVDA5SUhWdVpHVm1hVzVsWkNBbUppQW9JSFI1Y0dWdlppQW5JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuSUNFOUlGeGNKMjUxYldKbGNseGNKeUI4ZkNBbk8xeHVJQ0I5WEc0Z0lHOTFkQ0FyUFNBbklDaGthWFpwYzJsdmJpY2dLeUFvSkd4MmJDa2dLeUFuSUQwZ0p5QXJJQ2drWkdGMFlTa2dLeUFuSUM4Z0p5QXJJQ2drYzJOb1pXMWhWbUZzZFdVcElDc2dKeXdnSnp0Y2JpQWdhV1lnS0dsMExtOXdkSE11YlhWc2RHbHdiR1ZQWmxCeVpXTnBjMmx2YmlrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUUxaGRHZ3VZV0p6S0UxaGRHZ3VjbTkxYm1Rb1pHbDJhWE5wYjI0bklDc2dLQ1JzZG13cElDc2dKeWtnTFNCa2FYWnBjMmx2YmljZ0t5QW9KR3gyYkNrZ0t5QW5LU0ErSURGbExTY2dLeUFvYVhRdWIzQjBjeTV0ZFd4MGFYQnNaVTltVUhKbFkybHphVzl1S1NBcklDY2dKenRjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUJrYVhacGMybHZiaWNnS3lBb0pHeDJiQ2tnS3lBbklDRTlQU0J3WVhKelpVbHVkQ2hrYVhacGMybHZiaWNnS3lBb0pHeDJiQ2tnS3lBbktTQW5PMXh1SUNCOVhHNGdJRzkxZENBclBTQW5JQ2tnSnp0Y2JpQWdhV1lnS0NScGMwUmhkR0VwSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUFnS1NBZ0p6dGNiaUFnZlZ4dUlDQnZkWFFnS3owZ0p5QXBJSHNnSUNBbk8xeHVJQ0IyWVhJZ0pDUnZkWFJUZEdGamF5QTlJQ1FrYjNWMFUzUmhZMnNnZkh3Z1cxMDdYRzRnSUNRa2IzVjBVM1JoWTJzdWNIVnphQ2h2ZFhRcE8xeHVJQ0J2ZFhRZ1BTQW5KenNnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUdWc2MyVWdLaTljYmlBZ2FXWWdLR2wwTG1OeVpXRjBaVVZ5Y205eWN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QjdJR3RsZVhkdmNtUTZJRnhjSnljZ0t5QW9KMjExYkhScGNHeGxUMlluS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdJRzExYkhScGNHeGxUMlk2SUNjZ0t5QW9KSE5qYUdWdFlWWmhiSFZsS1NBcklDY2dmU0FuTzF4dUlDQWdJR2xtSUNocGRDNXZjSFJ6TG0xbGMzTmhaMlZ6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnRaWE56WVdkbE9pQmNYQ2R6YUc5MWJHUWdZbVVnYlhWc2RHbHdiR1VnYjJZZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuWEZ3bklDc2dKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBPMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY25JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuWEZ3bkp6dGNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWRtVnlZbTl6WlNrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnpZMmhsYldFNklDQW5PMXh1SUNBZ0lDQWdhV1lnS0NScGMwUmhkR0VwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tDUnpZMmhsYldGUVlYUm9LVHRjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5KeUFySUNna2MyTm9aVzFoS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUNBZ0lDQWdJQ0FnTENCd1lYSmxiblJUWTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvYVhRdWMyTm9aVzFoVUdGMGFDa2dLeUFuSUN3Z1pHRjBZVG9nSnlBcklDZ2taR0YwWVNrZ0t5QW5JQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUI3ZlNBbk8xeHVJQ0I5WEc0Z0lIWmhjaUJmWDJWeWNpQTlJRzkxZER0Y2JpQWdiM1YwSUQwZ0pDUnZkWFJUZEdGamF5NXdiM0FvS1R0Y2JpQWdhV1lnS0NGcGRDNWpiMjF3YjNOcGRHVlNkV3hsSUNZbUlDUmljbVZoYTA5dVJYSnliM0lwSUhzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHbG1JQ292WEc0Z0lDQWdhV1lnS0dsMExtRnplVzVqS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlCMGFISnZkeUJ1WlhjZ1ZtRnNhV1JoZEdsdmJrVnljbTl5S0ZzbklDc2dLRjlmWlhKeUtTQXJJQ2RkS1RzZ0p6dGNiaUFnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnZG1Gc2FXUmhkR1V1WlhKeWIzSnpJRDBnV3ljZ0t5QW9YMTlsY25JcElDc2dKMTA3SUhKbGRIVnliaUJtWVd4elpUc2dKenRjYmlBZ0lDQjlYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUdWeWNpQTlJQ2NnS3lBb1gxOWxjbklwSUNzZ0p6c2dJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ1cyVnljbDA3SUdWc2MyVWdka1Z5Y205eWN5NXdkWE5vS0dWeWNpazdJR1Z5Y205eWN5c3JPeUFuTzF4dUlDQjlYRzRnSUc5MWRDQXJQU0FuZlNBbk8xeHVJQ0JwWmlBb0pHSnlaV0ZyVDI1RmNuSnZjaWtnZTF4dUlDQWdJRzkxZENBclBTQW5JR1ZzYzJVZ2V5QW5PMXh1SUNCOVhHNGdJSEpsZEhWeWJpQnZkWFE3WEc1OVhHNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk95SXNJbk52ZFhKalpWSnZiM1FpT2lJaWZRPT1cXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL211bHRpcGxlT2YuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL25vdC5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL25vdC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9ub3QoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcgJztcXFxcbiAgdmFyICRsdmwgPSBpdC5sZXZlbDtcXFxcbiAgdmFyICRkYXRhTHZsID0gaXQuZGF0YUxldmVsO1xcXFxuICB2YXIgJHNjaGVtYSA9IGl0LnNjaGVtYVska2V5d29yZF07XFxcXG4gIHZhciAkc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyBpdC51dGlsLmdldFByb3BlcnR5KCRrZXl3b3JkKTtcXFxcbiAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICB2YXIgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgdmFyICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xcXFxuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcXFxcbiAgJGl0LmxldmVsKys7XFxcXG4gIHZhciAkbmV4dFZhbGlkID0gJ3ZhbGlkJyArICRpdC5sZXZlbDtcXFxcbiAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaGVtYSwgaXQuUlVMRVMuYWxsKSkge1xcXFxuICAgICRpdC5zY2hlbWEgPSAkc2NoZW1hO1xcXFxuICAgICRpdC5zY2hlbWFQYXRoID0gJHNjaGVtYVBhdGg7XFxcXG4gICAgJGl0LmVyclNjaGVtYVBhdGggPSAkZXJyU2NoZW1hUGF0aDtcXFxcbiAgICBvdXQgKz0gJyB2YXIgJyArICgkZXJycykgKyAnID0gZXJyb3JzOyAgJztcXFxcbiAgICB2YXIgJHdhc0NvbXBvc2l0ZSA9IGl0LmNvbXBvc2l0ZVJ1bGU7XFxcXG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcXFxcbiAgICAkaXQuY3JlYXRlRXJyb3JzID0gZmFsc2U7XFxcXG4gICAgdmFyICRhbGxFcnJvcnNPcHRpb247XFxcXG4gICAgaWYgKCRpdC5vcHRzLmFsbEVycm9ycykge1xcXFxuICAgICAgJGFsbEVycm9yc09wdGlvbiA9ICRpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgICAgICRpdC5vcHRzLmFsbEVycm9ycyA9IGZhbHNlO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyAnICsgKGl0LnZhbGlkYXRlKCRpdCkpICsgJyAnO1xcXFxuICAgICRpdC5jcmVhdGVFcnJvcnMgPSB0cnVlO1xcXFxuICAgIGlmICgkYWxsRXJyb3JzT3B0aW9uKSAkaXQub3B0cy5hbGxFcnJvcnMgPSAkYWxsRXJyb3JzT3B0aW9uO1xcXFxuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XFxcXG4gICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICAgJztcXFxcbiAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgnbm90JykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczoge30gJztcXFxcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBOT1QgYmUgdmFsaWRcXFxcXFxcXCcgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcge30gJztcXFxcbiAgICB9XFxcXG4gICAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICAgIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgfVxcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIH0gZWxzZSB7ICBlcnJvcnMgPSAnICsgKCRlcnJzKSArICc7IGlmICh2RXJyb3JzICE9PSBudWxsKSB7IGlmICgnICsgKCRlcnJzKSArICcpIHZFcnJvcnMubGVuZ3RoID0gJyArICgkZXJycykgKyAnOyBlbHNlIHZFcnJvcnMgPSBudWxsOyB9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMuYWxsRXJyb3JzKSB7XFxcXG4gICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnICB2YXIgZXJyID0gICAnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJ25vdCcpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHt9ICc7XFxcXG4gICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXFxcXFxcXCdzaG91bGQgTk9UIGJlIHZhbGlkXFxcXFxcXFwnICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHt9ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgIG91dCArPSAnIGlmIChmYWxzZSkgeyAnO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTl1YjNRdWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OHVMMjV2WkdWZmJXOWtkV3hsY3k5aGFuWXZiR2xpTDJSdmRHcHpMMjV2ZEM1cWN6OHdNR1kxSWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYm0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRnWjJWdVpYSmhkR1ZmYm05MEtHbDBMQ0FrYTJWNWQyOXlaQ3dnSkhKMWJHVlVlWEJsS1NCN1hHNGdJSFpoY2lCdmRYUWdQU0FuSUNjN1hHNGdJSFpoY2lBa2JIWnNJRDBnYVhRdWJHVjJaV3c3WEc0Z0lIWmhjaUFrWkdGMFlVeDJiQ0E5SUdsMExtUmhkR0ZNWlhabGJEdGNiaUFnZG1GeUlDUnpZMmhsYldFZ1BTQnBkQzV6WTJobGJXRmJKR3RsZVhkdmNtUmRPMXh1SUNCMllYSWdKSE5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2EyVjVkMjl5WkNrN1hHNGdJSFpoY2lBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkx5Y2dLeUFrYTJWNWQyOXlaRHRjYmlBZ2RtRnlJQ1JpY21WaGEwOXVSWEp5YjNJZ1BTQWhhWFF1YjNCMGN5NWhiR3hGY25KdmNuTTdYRzRnSUhaaGNpQWtaR0YwWVNBOUlDZGtZWFJoSnlBcklDZ2taR0YwWVV4MmJDQjhmQ0FuSnlrN1hHNGdJSFpoY2lBa1pYSnljeUE5SUNkbGNuSnpYMThuSUNzZ0pHeDJiRHRjYmlBZ2RtRnlJQ1JwZENBOUlHbDBMblYwYVd3dVkyOXdlU2hwZENrN1hHNGdJQ1JwZEM1c1pYWmxiQ3NyTzF4dUlDQjJZWElnSkc1bGVIUldZV3hwWkNBOUlDZDJZV3hwWkNjZ0t5QWthWFF1YkdWMlpXdzdYRzRnSUdsbUlDaHBkQzUxZEdsc0xuTmphR1Z0WVVoaGMxSjFiR1Z6S0NSelkyaGxiV0VzSUdsMExsSlZURVZUTG1Gc2JDa3BJSHRjYmlBZ0lDQWthWFF1YzJOb1pXMWhJRDBnSkhOamFHVnRZVHRjYmlBZ0lDQWthWFF1YzJOb1pXMWhVR0YwYUNBOUlDUnpZMmhsYldGUVlYUm9PMXh1SUNBZ0lDUnBkQzVsY25KVFkyaGxiV0ZRWVhSb0lEMGdKR1Z5Y2xOamFHVnRZVkJoZEdnN1hHNGdJQ0FnYjNWMElDczlJQ2NnZG1GeUlDY2dLeUFvSkdWeWNuTXBJQ3NnSnlBOUlHVnljbTl5Y3pzZ0lDYzdYRzRnSUNBZ2RtRnlJQ1IzWVhORGIyMXdiM05wZEdVZ1BTQnBkQzVqYjIxd2IzTnBkR1ZTZFd4bE8xeHVJQ0FnSUdsMExtTnZiWEJ2YzJsMFpWSjFiR1VnUFNBa2FYUXVZMjl0Y0c5emFYUmxVblZzWlNBOUlIUnlkV1U3WEc0Z0lDQWdKR2wwTG1OeVpXRjBaVVZ5Y205eWN5QTlJR1poYkhObE8xeHVJQ0FnSUhaaGNpQWtZV3hzUlhKeWIzSnpUM0IwYVc5dU8xeHVJQ0FnSUdsbUlDZ2thWFF1YjNCMGN5NWhiR3hGY25KdmNuTXBJSHRjYmlBZ0lDQWdJQ1JoYkd4RmNuSnZjbk5QY0hScGIyNGdQU0FrYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk03WEc0Z0lDQWdJQ0FrYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk1nUFNCbVlXeHpaVHRjYmlBZ0lDQjlYRzRnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2hwZEM1MllXeHBaR0YwWlNna2FYUXBLU0FySUNjZ0p6dGNiaUFnSUNBa2FYUXVZM0psWVhSbFJYSnliM0p6SUQwZ2RISjFaVHRjYmlBZ0lDQnBaaUFvSkdGc2JFVnljbTl5YzA5d2RHbHZiaWtnSkdsMExtOXdkSE11WVd4c1JYSnliM0p6SUQwZ0pHRnNiRVZ5Y205eWMwOXdkR2x2Ymp0Y2JpQWdJQ0JwZEM1amIyMXdiM05wZEdWU2RXeGxJRDBnSkdsMExtTnZiWEJ2YzJsMFpWSjFiR1VnUFNBa2QyRnpRMjl0Y0c5emFYUmxPMXh1SUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2duSUNzZ0tDUnVaWGgwVm1Gc2FXUXBJQ3NnSnlrZ2V5QWdJQ2M3WEc0Z0lDQWdkbUZ5SUNRa2IzVjBVM1JoWTJzZ1BTQWtKRzkxZEZOMFlXTnJJSHg4SUZ0ZE8xeHVJQ0FnSUNRa2IzVjBVM1JoWTJzdWNIVnphQ2h2ZFhRcE8xeHVJQ0FnSUc5MWRDQTlJQ2NuT3lBdktpQnBjM1JoYm1KMWJDQnBaMjV2Y21VZ1pXeHpaU0FxTDF4dUlDQWdJR2xtSUNocGRDNWpjbVZoZEdWRmNuSnZjbk1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0oyNXZkQ2NwSUNzZ0oxeGNKeUFzSUdSaGRHRlFZWFJvT2lBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjZ0xDQnpZMmhsYldGUVlYUm9PaUFuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvSkdWeWNsTmphR1Z0WVZCaGRHZ3BLU0FySUNjZ0xDQndZWEpoYlhNNklIdDlJQ2M3WEc0Z0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1dFpYTnpZV2RsY3lBaFBUMGdabUZzYzJVcElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J0WlhOellXZGxPaUJjWENkemFHOTFiR1FnVGs5VUlHSmxJSFpoYkdsa1hGd25JQ2M3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDd2djMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLQ1J6WTJobGJXRlFZWFJvS1NBcklDY2dMQ0J3WVhKbGJuUlRZMmhsYldFNklIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9hWFF1YzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnWkdGMFlUb2dKeUFySUNna1pHRjBZU2tnS3lBbklDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjlJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lIWmhjaUJmWDJWeWNpQTlJRzkxZER0Y2JpQWdJQ0J2ZFhRZ1BTQWtKRzkxZEZOMFlXTnJMbkJ2Y0NncE8xeHVJQ0FnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUNBZ2FXWWdLR2wwTG1GemVXNWpLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhSb2NtOTNJRzVsZHlCV1lXeHBaR0YwYVc5dVJYSnliM0lvV3ljZ0t5QW9YMTlsY25JcElDc2dKMTBwT3lBbk8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnNhV1JoZEdVdVpYSnliM0p6SUQwZ1d5Y2dLeUFvWDE5bGNuSXBJQ3NnSjEwN0lISmxkSFZ5YmlCbVlXeHpaVHNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUdWeWNpQTlJQ2NnS3lBb1gxOWxjbklwSUNzZ0p6c2dJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ1cyVnljbDA3SUdWc2MyVWdka1Z5Y205eWN5NXdkWE5vS0dWeWNpazdJR1Z5Y205eWN5c3JPeUFuTzF4dUlDQWdJSDFjYmlBZ0lDQnZkWFFnS3owZ0p5QjlJR1ZzYzJVZ2V5QWdaWEp5YjNKeklEMGdKeUFySUNna1pYSnljeWtnS3lBbk95QnBaaUFvZGtWeWNtOXljeUFoUFQwZ2JuVnNiQ2tnZXlCcFppQW9KeUFySUNna1pYSnljeWtnS3lBbktTQjJSWEp5YjNKekxteGxibWQwYUNBOUlDY2dLeUFvSkdWeWNuTXBJQ3NnSnpzZ1pXeHpaU0IyUlhKeWIzSnpJRDBnYm5Wc2JEc2dmU0FuTzF4dUlDQWdJR2xtSUNocGRDNXZjSFJ6TG1Gc2JFVnljbTl5Y3lrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2ZTQW5PMXh1SUNBZ0lIMWNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QWdkbUZ5SUdWeWNpQTlJQ0FnSnpzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHVnNjMlVnS2k5Y2JpQWdJQ0JwWmlBb2FYUXVZM0psWVhSbFJYSnliM0p6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2V5QnJaWGwzYjNKa09pQmNYQ2NuSUNzZ0tDZHViM1FuS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdmU0FuTzF4dUlDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXVnpjMkZuWlhNZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYldWemMyRm5aVG9nWEZ3bmMyaHZkV3hrSUU1UFZDQmlaU0IyWVd4cFpGeGNKeUFuTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWRtVnlZbTl6WlNrZ2UxeHVJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QXNJSE5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2drYzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnY0dGeVpXNTBVMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLR2wwTG5OamFHVnRZVkJoZEdncElDc2dKeUFzSUdSaGRHRTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5PMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dmU0FuTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjdmU0FuTzF4dUlDQWdJSDFjYmlBZ0lDQnZkWFFnS3owZ0p6c2dJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ1cyVnljbDA3SUdWc2MyVWdka1Z5Y205eWN5NXdkWE5vS0dWeWNpazdJR1Z5Y205eWN5c3JPeUFuTzF4dUlDQWdJR2xtSUNna1luSmxZV3RQYmtWeWNtOXlLU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb1ptRnNjMlVwSUhzZ0p6dGNiaUFnSUNCOVhHNGdJSDFjYmlBZ2NtVjBkWEp1SUc5MWREdGNibjFjYmlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9ub3QuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL29uZU9mLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9vbmVPZi5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX29uZU9mKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcXFxcbiAgdmFyICRlcnJzID0gJ2VycnNfXycgKyAkbHZsO1xcXFxuICB2YXIgJGl0ID0gaXQudXRpbC5jb3B5KGl0KTtcXFxcbiAgdmFyICRjbG9zaW5nQnJhY2VzID0gJyc7XFxcXG4gICRpdC5sZXZlbCsrO1xcXFxuICB2YXIgJG5leHRWYWxpZCA9ICd2YWxpZCcgKyAkaXQubGV2ZWw7XFxcXG4gIG91dCArPSAndmFyICcgKyAoJGVycnMpICsgJyA9IGVycm9yczt2YXIgcHJldlZhbGlkJyArICgkbHZsKSArICcgPSBmYWxzZTt2YXIgJyArICgkdmFsaWQpICsgJyA9IGZhbHNlOyc7XFxcXG4gIHZhciAkY3VycmVudEJhc2VJZCA9ICRpdC5iYXNlSWQ7XFxcXG4gIHZhciAkd2FzQ29tcG9zaXRlID0gaXQuY29tcG9zaXRlUnVsZTtcXFxcbiAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcXFxcbiAgdmFyIGFycjEgPSAkc2NoZW1hO1xcXFxuICBpZiAoYXJyMSkge1xcXFxuICAgIHZhciAkc2NoLCAkaSA9IC0xLFxcXFxuICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XFxcXG4gICAgd2hpbGUgKCRpIDwgbDEpIHtcXFxcbiAgICAgICRzY2ggPSBhcnIxWyRpICs9IDFdO1xcXFxuICAgICAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKSkge1xcXFxuICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcXFxcbiAgICAgICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aCArICdbJyArICRpICsgJ10nO1xcXFxuICAgICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoICsgJy8nICsgJGk7XFxcXG4gICAgICAgIG91dCArPSAnICAnICsgKGl0LnZhbGlkYXRlKCRpdCkpICsgJyAnO1xcXFxuICAgICAgICAkaXQuYmFzZUlkID0gJGN1cnJlbnRCYXNlSWQ7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkbmV4dFZhbGlkKSArICcgPSB0cnVlOyAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgaWYgKCRpKSB7XFxcXG4gICAgICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJyAmJiBwcmV2VmFsaWQnICsgKCRsdmwpICsgJykgJyArICgkdmFsaWQpICsgJyA9IGZhbHNlOyBlbHNlIHsgJztcXFxcbiAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSAnICsgKCR2YWxpZCkgKyAnID0gcHJldlZhbGlkJyArICgkbHZsKSArICcgPSB0cnVlOyc7XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XFxcXG4gIG91dCArPSAnJyArICgkY2xvc2luZ0JyYWNlcykgKyAnaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJ29uZU9mJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczoge30gJztcXFxcbiAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnc2hvdWxkIG1hdGNoIGV4YWN0bHkgb25lIHNjaGVtYSBpbiBvbmVPZlxcXFxcXFxcJyAnO1xcXFxuICAgIH1cXFxcbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgb3V0ICs9ICcge30gJztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IodkVycm9ycyk7ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IHZFcnJvcnM7IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICd9IGVsc2UgeyAgZXJyb3JzID0gJyArICgkZXJycykgKyAnOyBpZiAodkVycm9ycyAhPT0gbnVsbCkgeyBpZiAoJyArICgkZXJycykgKyAnKSB2RXJyb3JzLmxlbmd0aCA9ICcgKyAoJGVycnMpICsgJzsgZWxzZSB2RXJyb3JzID0gbnVsbDsgfSc7XFxcXG4gIGlmIChpdC5vcHRzLmFsbEVycm9ycykge1xcXFxuICAgIG91dCArPSAnIH0gJztcXFxcbiAgfVxcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTl2Ym1WUFppNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwyRnFkaTlzYVdJdlpHOTBhbk12YjI1bFQyWXVhbk0vTkdSaU1TSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUluZFhObElITjBjbWxqZENjN1hHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlHZGxibVZ5WVhSbFgyOXVaVTltS0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pHRjBZU0E5SUNka1lYUmhKeUFySUNna1pHRjBZVXgyYkNCOGZDQW5KeWs3WEc0Z0lIWmhjaUFrZG1Gc2FXUWdQU0FuZG1Gc2FXUW5JQ3NnSkd4MmJEdGNiaUFnZG1GeUlDUmxjbkp6SUQwZ0oyVnljbk5mWHljZ0t5QWtiSFpzTzF4dUlDQjJZWElnSkdsMElEMGdhWFF1ZFhScGJDNWpiM0I1S0dsMEtUdGNiaUFnZG1GeUlDUmpiRzl6YVc1blFuSmhZMlZ6SUQwZ0p5YzdYRzRnSUNScGRDNXNaWFpsYkNzck8xeHVJQ0IyWVhJZ0pHNWxlSFJXWVd4cFpDQTlJQ2QyWVd4cFpDY2dLeUFrYVhRdWJHVjJaV3c3WEc0Z0lHOTFkQ0FyUFNBbmRtRnlJQ2NnS3lBb0pHVnljbk1wSUNzZ0p5QTlJR1Z5Y205eWN6dDJZWElnY0hKbGRsWmhiR2xrSnlBcklDZ2tiSFpzS1NBcklDY2dQU0JtWVd4elpUdDJZWElnSnlBcklDZ2tkbUZzYVdRcElDc2dKeUE5SUdaaGJITmxPeWM3WEc0Z0lIWmhjaUFrWTNWeWNtVnVkRUpoYzJWSlpDQTlJQ1JwZEM1aVlYTmxTV1E3WEc0Z0lIWmhjaUFrZDJGelEyOXRjRzl6YVhSbElEMGdhWFF1WTI5dGNHOXphWFJsVW5Wc1pUdGNiaUFnYVhRdVkyOXRjRzl6YVhSbFVuVnNaU0E5SUNScGRDNWpiMjF3YjNOcGRHVlNkV3hsSUQwZ2RISjFaVHRjYmlBZ2RtRnlJR0Z5Y2pFZ1BTQWtjMk5vWlcxaE8xeHVJQ0JwWmlBb1lYSnlNU2tnZTF4dUlDQWdJSFpoY2lBa2MyTm9MQ0FrYVNBOUlDMHhMRnh1SUNBZ0lDQWdiREVnUFNCaGNuSXhMbXhsYm1kMGFDQXRJREU3WEc0Z0lDQWdkMmhwYkdVZ0tDUnBJRHdnYkRFcElIdGNiaUFnSUNBZ0lDUnpZMmdnUFNCaGNuSXhXeVJwSUNzOUlERmRPMXh1SUNBZ0lDQWdhV1lnS0dsMExuVjBhV3d1YzJOb1pXMWhTR0Z6VW5Wc1pYTW9KSE5qYUN3Z2FYUXVVbFZNUlZNdVlXeHNLU2tnZTF4dUlDQWdJQ0FnSUNBa2FYUXVjMk5vWlcxaElEMGdKSE5qYUR0Y2JpQWdJQ0FnSUNBZ0pHbDBMbk5qYUdWdFlWQmhkR2dnUFNBa2MyTm9aVzFoVUdGMGFDQXJJQ2RiSnlBcklDUnBJQ3NnSjEwbk8xeHVJQ0FnSUNBZ0lDQWthWFF1WlhKeVUyTm9aVzFoVUdGMGFDQTlJQ1JsY25KVFkyaGxiV0ZRWVhSb0lDc2dKeThuSUNzZ0pHazdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ0FuSUNzZ0tHbDBMblpoYkdsa1lYUmxLQ1JwZENrcElDc2dKeUFuTzF4dUlDQWdJQ0FnSUNBa2FYUXVZbUZ6WlVsa0lEMGdKR04xY25KbGJuUkNZWE5sU1dRN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCMllYSWdKeUFySUNna2JtVjRkRlpoYkdsa0tTQXJJQ2NnUFNCMGNuVmxPeUFuTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYVdZZ0tDUnBLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDZ25JQ3NnS0NSdVpYaDBWbUZzYVdRcElDc2dKeUFtSmlCd2NtVjJWbUZzYVdRbklDc2dLQ1JzZG13cElDc2dKeWtnSnlBcklDZ2tkbUZzYVdRcElDc2dKeUE5SUdaaGJITmxPeUJsYkhObElIc2dKenRjYmlBZ0lDQWdJQ0FnSkdOc2IzTnBibWRDY21GalpYTWdLejBnSjMwbk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2FXWWdLQ2NnS3lBb0pHNWxlSFJXWVd4cFpDa2dLeUFuS1NBbklDc2dLQ1IyWVd4cFpDa2dLeUFuSUQwZ2NISmxkbFpoYkdsa0p5QXJJQ2drYkhac0tTQXJJQ2NnUFNCMGNuVmxPeWM3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJR2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdQU0FrYVhRdVkyOXRjRzl6YVhSbFVuVnNaU0E5SUNSM1lYTkRiMjF3YjNOcGRHVTdYRzRnSUc5MWRDQXJQU0FuSnlBcklDZ2tZMnh2YzJsdVowSnlZV05sY3lrZ0t5QW5hV1lnS0NFbklDc2dLQ1IyWVd4cFpDa2dLeUFuS1NCN0lDQWdkbUZ5SUdWeWNpQTlJQ0FnSnpzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHVnNjMlVnS2k5Y2JpQWdhV1lnS0dsMExtTnlaV0YwWlVWeWNtOXljeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0J2ZFhRZ0t6MGdKeUI3SUd0bGVYZHZjbVE2SUZ4Y0p5Y2dLeUFvSjI5dVpVOW1KeWtnS3lBblhGd25JQ3dnWkdGMFlWQmhkR2c2SUNoa1lYUmhVR0YwYUNCOGZDQmNYQ2RjWENjcElDc2dKeUFySUNocGRDNWxjbkp2Y2xCaGRHZ3BJQ3NnSnlBc0lITmphR1Z0WVZCaGRHZzZJQ2NnS3lBb2FYUXVkWFJwYkM1MGIxRjFiM1JsWkZOMGNtbHVaeWdrWlhKeVUyTm9aVzFoVUdGMGFDa3BJQ3NnSnlBc0lIQmhjbUZ0Y3pvZ2UzMGdKenRjYmlBZ0lDQnBaaUFvYVhRdWIzQjBjeTV0WlhOellXZGxjeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUN3Z2JXVnpjMkZuWlRvZ1hGd25jMmh2ZFd4a0lHMWhkR05vSUdWNFlXTjBiSGtnYjI1bElITmphR1Z0WVNCcGJpQnZibVZQWmx4Y0p5QW5PMXh1SUNBZ0lIMWNiaUFnSUNCcFppQW9hWFF1YjNCMGN5NTJaWEppYjNObEtTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QXNJSE5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2drYzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnY0dGeVpXNTBVMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLR2wwTG5OamFHVnRZVkJoZEdncElDc2dKeUFzSUdSaGRHRTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5PMXh1SUNBZ0lIMWNiaUFnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdmVnh1SUNCdmRYUWdLejBnSnpzZ0lHbG1JQ2gyUlhKeWIzSnpJRDA5UFNCdWRXeHNLU0IyUlhKeWIzSnpJRDBnVzJWeWNsMDdJR1ZzYzJVZ2RrVnljbTl5Y3k1d2RYTm9LR1Z5Y2lrN0lHVnljbTl5Y3lzck95QW5PMXh1SUNCcFppQW9JV2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdKaVlnSkdKeVpXRnJUMjVGY25KdmNpa2dleUF2S2lCcGMzUmhibUoxYkNCcFoyNXZjbVVnYVdZZ0tpOWNiaUFnSUNCcFppQW9hWFF1WVhONWJtTXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFJvY205M0lHNWxkeUJXWVd4cFpHRjBhVzl1UlhKeWIzSW9ka1Z5Y205eWN5azdJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIWmhiR2xrWVhSbExtVnljbTl5Y3lBOUlIWkZjbkp2Y25NN0lISmxkSFZ5YmlCbVlXeHpaVHNnSnp0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnYjNWMElDczlJQ2Q5SUdWc2MyVWdleUFnWlhKeWIzSnpJRDBnSnlBcklDZ2taWEp5Y3lrZ0t5QW5PeUJwWmlBb2RrVnljbTl5Y3lBaFBUMGdiblZzYkNrZ2V5QnBaaUFvSnlBcklDZ2taWEp5Y3lrZ0t5QW5LU0IyUlhKeWIzSnpMbXhsYm1kMGFDQTlJQ2NnS3lBb0pHVnljbk1wSUNzZ0p6c2daV3h6WlNCMlJYSnliM0p6SUQwZ2JuVnNiRHNnZlNjN1hHNGdJR2xtSUNocGRDNXZjSFJ6TG1Gc2JFVnljbTl5Y3lrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUgwZ0p6dGNiaUFnZlZ4dUlDQnlaWFIxY200Z2IzVjBPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9vbmVPZi5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvcGF0dGVybi5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wYXR0ZXJuLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9wYXR0ZXJuKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkaXNEYXRhID0gaXQub3B0cy4kZGF0YSAmJiAkc2NoZW1hICYmICRzY2hlbWEuJGRhdGEsXFxcXG4gICAgJHNjaGVtYVZhbHVlO1xcXFxuICBpZiAoJGlzRGF0YSkge1xcXFxuICAgIG91dCArPSAnIHZhciBzY2hlbWEnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC5nZXREYXRhKCRzY2hlbWEuJGRhdGEsICRkYXRhTHZsLCBpdC5kYXRhUGF0aEFycikpICsgJzsgJztcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAnc2NoZW1hJyArICRsdmw7XFxcXG4gIH0gZWxzZSB7XFxcXG4gICAgJHNjaGVtYVZhbHVlID0gJHNjaGVtYTtcXFxcbiAgfVxcXFxuICB2YXIgJHJlZ2V4cCA9ICRpc0RhdGEgPyAnKG5ldyBSZWdFeHAoJyArICRzY2hlbWFWYWx1ZSArICcpKScgOiBpdC51c2VQYXR0ZXJuKCRzY2hlbWEpO1xcXFxuICBvdXQgKz0gJ2lmICggJztcXFxcbiAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICBvdXQgKz0gJyAoJyArICgkc2NoZW1hVmFsdWUpICsgJyAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcXFxcXFxcJ3N0cmluZ1xcXFxcXFxcJykgfHwgJztcXFxcbiAgfVxcXFxuICBvdXQgKz0gJyAhJyArICgkcmVnZXhwKSArICcudGVzdCgnICsgKCRkYXRhKSArICcpICkgeyAgICc7XFxcXG4gIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgncGF0dGVybicpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgcGF0dGVybjogICc7XFxcXG4gICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgIG91dCArPSAnJyArICgkc2NoZW1hVmFsdWUpO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkc2NoZW1hKSk7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnICB9ICc7XFxcXG4gICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBtYXRjaCBwYXR0ZXJuIFxcXFxcXFwiJztcXFxcbiAgICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICAgIG91dCArPSAnXFxcXFxcXFwnICsgJyArICgkc2NoZW1hVmFsdWUpICsgJyArIFxcXFxcXFxcJyc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJycgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJHNjaGVtYSkpO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICdcXFxcXFxcIlxcXFxcXFxcJyAnO1xcXFxuICAgIH1cXFxcbiAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICBvdXQgKz0gJyAsIHNjaGVtYTogICc7XFxcXG4gICAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgICBvdXQgKz0gJ3ZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJHNjaGVtYSkpO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcgICAgICAgICAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgfSAnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHt9ICc7XFxcXG4gIH1cXFxcbiAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgIH1cXFxcbiAgfSBlbHNlIHtcXFxcbiAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICd9ICc7XFxcXG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgb3V0ICs9ICcgZWxzZSB7ICc7XFxcXG4gIH1cXFxcbiAgcmV0dXJuIG91dDtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5d1lYUjBaWEp1TG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OXdZWFIwWlhKdUxtcHpQemN4TkdJaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lKM1Z6WlNCemRISnBZM1FuTzF4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlCblpXNWxjbUYwWlY5d1lYUjBaWEp1S0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pHRjBZU0E5SUNka1lYUmhKeUFySUNna1pHRjBZVXgyYkNCOGZDQW5KeWs3WEc0Z0lIWmhjaUFrYVhORVlYUmhJRDBnYVhRdWIzQjBjeTRrWkdGMFlTQW1KaUFrYzJOb1pXMWhJQ1ltSUNSelkyaGxiV0V1SkdSaGRHRXNYRzRnSUNBZ0pITmphR1Z0WVZaaGJIVmxPMXh1SUNCcFppQW9KR2x6UkdGMFlTa2dlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUJ6WTJobGJXRW5JQ3NnS0NSc2Rtd3BJQ3NnSnlBOUlDY2dLeUFvYVhRdWRYUnBiQzVuWlhSRVlYUmhLQ1J6WTJobGJXRXVKR1JoZEdFc0lDUmtZWFJoVEhac0xDQnBkQzVrWVhSaFVHRjBhRUZ5Y2lrcElDc2dKenNnSnp0Y2JpQWdJQ0FrYzJOb1pXMWhWbUZzZFdVZ1BTQW5jMk5vWlcxaEp5QXJJQ1JzZG13N1hHNGdJSDBnWld4elpTQjdYRzRnSUNBZ0pITmphR1Z0WVZaaGJIVmxJRDBnSkhOamFHVnRZVHRjYmlBZ2ZWeHVJQ0IyWVhJZ0pISmxaMlY0Y0NBOUlDUnBjMFJoZEdFZ1B5QW5LRzVsZHlCU1pXZEZlSEFvSnlBcklDUnpZMmhsYldGV1lXeDFaU0FySUNjcEtTY2dPaUJwZEM1MWMyVlFZWFIwWlhKdUtDUnpZMmhsYldFcE8xeHVJQ0J2ZFhRZ0t6MGdKMmxtSUNnZ0p6dGNiaUFnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNCdmRYUWdLejBnSnlBb0p5QXJJQ2drYzJOb1pXMWhWbUZzZFdVcElDc2dKeUFoUFQwZ2RXNWtaV1pwYm1Wa0lDWW1JSFI1Y0dWdlppQW5JQ3NnS0NSelkyaGxiV0ZXWVd4MVpTa2dLeUFuSUNFOUlGeGNKM04wY21sdVoxeGNKeWtnZkh3Z0p6dGNiaUFnZlZ4dUlDQnZkWFFnS3owZ0p5QWhKeUFySUNna2NtVm5aWGh3S1NBcklDY3VkR1Z6ZENnbklDc2dLQ1JrWVhSaEtTQXJJQ2NwSUNrZ2V5QWdJQ2M3WEc0Z0lIWmhjaUFrSkc5MWRGTjBZV05ySUQwZ0pDUnZkWFJUZEdGamF5QjhmQ0JiWFR0Y2JpQWdKQ1J2ZFhSVGRHRmpheTV3ZFhOb0tHOTFkQ2s3WEc0Z0lHOTFkQ0E5SUNjbk95QXZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdaV3h6WlNBcUwxeHVJQ0JwWmlBb2FYUXVZM0psWVhSbFJYSnliM0p6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUhzZ2EyVjVkMjl5WkRvZ1hGd25KeUFySUNnbmNHRjBkR1Z5YmljcElDc2dKMXhjSnlBc0lHUmhkR0ZRWVhSb09pQW9aR0YwWVZCaGRHZ2dmSHdnWEZ3blhGd25LU0FySUNjZ0t5QW9hWFF1WlhKeWIzSlFZWFJvS1NBcklDY2dMQ0J6WTJobGJXRlFZWFJvT2lBbklDc2dLR2wwTG5WMGFXd3VkRzlSZFc5MFpXUlRkSEpwYm1jb0pHVnljbE5qYUdWdFlWQmhkR2dwS1NBcklDY2dMQ0J3WVhKaGJYTTZJSHNnY0dGMGRHVnliam9nSUNjN1hHNGdJQ0FnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbkp5QXJJQ2drYzJOb1pXMWhWbUZzZFdVcE8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeWNnS3lBb2FYUXVkWFJwYkM1MGIxRjFiM1JsWkZOMGNtbHVaeWdrYzJOb1pXMWhLU2s3WEc0Z0lDQWdmVnh1SUNBZ0lHOTFkQ0FyUFNBbklDQjlJQ2M3WEc0Z0lDQWdhV1lnS0dsMExtOXdkSE11YldWemMyRm5aWE1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBc0lHMWxjM05oWjJVNklGeGNKM05vYjNWc1pDQnRZWFJqYUNCd1lYUjBaWEp1SUZ3aUp6dGNiaUFnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuWEZ3bklDc2dKeUFySUNna2MyTm9aVzFoVm1Gc2RXVXBJQ3NnSnlBcklGeGNKeWM3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeWNnS3lBb2FYUXVkWFJwYkM1bGMyTmhjR1ZSZFc5MFpYTW9KSE5qYUdWdFlTa3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdiM1YwSUNzOUlDZGNJbHhjSnlBbk8xeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBc0lITmphR1Z0WVRvZ0lDYzdYRzRnSUNBZ0lDQnBaaUFvSkdselJHRjBZU2tnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSjNaaGJHbGtZWFJsTG5OamFHVnRZU2NnS3lBb0pITmphR1Z0WVZCaGRHZ3BPMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY25JQ3NnS0dsMExuVjBhV3d1ZEc5UmRXOTBaV1JUZEhKcGJtY29KSE5qYUdWdFlTa3BPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dJQ0FnSUNBZ0lDQXNJSEJoY21WdWRGTmphR1Z0WVRvZ2RtRnNhV1JoZEdVdWMyTm9aVzFoSnlBcklDaHBkQzV6WTJobGJXRlFZWFJvS1NBcklDY2dMQ0JrWVhSaE9pQW5JQ3NnS0NSa1lYUmhLU0FySUNjZ0p6dGNiaUFnSUNCOVhHNGdJQ0FnYjNWMElDczlJQ2NnZlNBbk8xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lIMWNiaUFnZG1GeUlGOWZaWEp5SUQwZ2IzVjBPMXh1SUNCdmRYUWdQU0FrSkc5MWRGTjBZV05yTG5CdmNDZ3BPMXh1SUNCcFppQW9JV2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdKaVlnSkdKeVpXRnJUMjVGY25KdmNpa2dleUF2S2lCcGMzUmhibUoxYkNCcFoyNXZjbVVnYVdZZ0tpOWNiaUFnSUNCcFppQW9hWFF1WVhONWJtTXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFJvY205M0lHNWxkeUJXWVd4cFpHRjBhVzl1UlhKeWIzSW9XeWNnS3lBb1gxOWxjbklwSUNzZ0oxMHBPeUFuTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZV3hwWkdGMFpTNWxjbkp2Y25NZ1BTQmJKeUFySUNoZlgyVnljaWtnS3lBblhUc2djbVYwZFhKdUlHWmhiSE5sT3lBbk8xeHVJQ0FnSUgxY2JpQWdmU0JsYkhObElIdGNiaUFnSUNCdmRYUWdLejBnSnlCMllYSWdaWEp5SUQwZ0p5QXJJQ2hmWDJWeWNpa2dLeUFuT3lBZ2FXWWdLSFpGY25KdmNuTWdQVDA5SUc1MWJHd3BJSFpGY25KdmNuTWdQU0JiWlhKeVhUc2daV3h6WlNCMlJYSnliM0p6TG5CMWMyZ29aWEp5S1RzZ1pYSnliM0p6S3lzN0lDYzdYRzRnSUgxY2JpQWdiM1YwSUNzOUlDZDlJQ2M3WEc0Z0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ1pXeHpaU0I3SUNjN1hHNGdJSDFjYmlBZ2NtVjBkWEp1SUc5MWREdGNibjFjYmlKZExDSnRZWEJ3YVc1bmN5STZJa0ZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wYXR0ZXJuLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0aWVzLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3Byb3BlcnRpZXMuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX3Byb3BlcnRpZXMoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcgJztcXFxcbiAgdmFyICRsdmwgPSBpdC5sZXZlbDtcXFxcbiAgdmFyICRkYXRhTHZsID0gaXQuZGF0YUxldmVsO1xcXFxuICB2YXIgJHNjaGVtYSA9IGl0LnNjaGVtYVska2V5d29yZF07XFxcXG4gIHZhciAkc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyBpdC51dGlsLmdldFByb3BlcnR5KCRrZXl3b3JkKTtcXFxcbiAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICB2YXIgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgdmFyICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgdmFyICR2YWxpZCA9ICd2YWxpZCcgKyAkbHZsO1xcXFxuICB2YXIgJGVycnMgPSAnZXJyc19fJyArICRsdmw7XFxcXG4gIHZhciAkaXQgPSBpdC51dGlsLmNvcHkoaXQpO1xcXFxuICB2YXIgJGNsb3NpbmdCcmFjZXMgPSAnJztcXFxcbiAgJGl0LmxldmVsKys7XFxcXG4gIHZhciAkbmV4dFZhbGlkID0gJ3ZhbGlkJyArICRpdC5sZXZlbDtcXFxcbiAgdmFyICRrZXkgPSAna2V5JyArICRsdmwsXFxcXG4gICAgJGlkeCA9ICdpZHgnICsgJGx2bCxcXFxcbiAgICAkZGF0YU54dCA9ICRpdC5kYXRhTGV2ZWwgPSBpdC5kYXRhTGV2ZWwgKyAxLFxcXFxuICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxcXFxuICAgICRkYXRhUHJvcGVydGllcyA9ICdkYXRhUHJvcGVydGllcycgKyAkbHZsO1xcXFxuICB2YXIgJHNjaGVtYUtleXMgPSBPYmplY3Qua2V5cygkc2NoZW1hIHx8IHt9KSxcXFxcbiAgICAkcFByb3BlcnRpZXMgPSBpdC5zY2hlbWEucGF0dGVyblByb3BlcnRpZXMgfHwge30sXFxcXG4gICAgJHBQcm9wZXJ0eUtleXMgPSBPYmplY3Qua2V5cygkcFByb3BlcnRpZXMpLFxcXFxuICAgICRhUHJvcGVydGllcyA9IGl0LnNjaGVtYS5hZGRpdGlvbmFsUHJvcGVydGllcyxcXFxcbiAgICAkc29tZVByb3BlcnRpZXMgPSAkc2NoZW1hS2V5cy5sZW5ndGggfHwgJHBQcm9wZXJ0eUtleXMubGVuZ3RoLFxcXFxuICAgICRub0FkZGl0aW9uYWwgPSAkYVByb3BlcnRpZXMgPT09IGZhbHNlLFxcXFxuICAgICRhZGRpdGlvbmFsSXNTY2hlbWEgPSB0eXBlb2YgJGFQcm9wZXJ0aWVzID09ICdvYmplY3QnICYmIE9iamVjdC5rZXlzKCRhUHJvcGVydGllcykubGVuZ3RoLFxcXFxuICAgICRyZW1vdmVBZGRpdGlvbmFsID0gaXQub3B0cy5yZW1vdmVBZGRpdGlvbmFsLFxcXFxuICAgICRjaGVja0FkZGl0aW9uYWwgPSAkbm9BZGRpdGlvbmFsIHx8ICRhZGRpdGlvbmFsSXNTY2hlbWEgfHwgJHJlbW92ZUFkZGl0aW9uYWwsXFxcXG4gICAgJG93blByb3BlcnRpZXMgPSBpdC5vcHRzLm93blByb3BlcnRpZXMsXFxcXG4gICAgJGN1cnJlbnRCYXNlSWQgPSBpdC5iYXNlSWQ7XFxcXG4gIHZhciAkcmVxdWlyZWQgPSBpdC5zY2hlbWEucmVxdWlyZWQ7XFxcXG4gIGlmICgkcmVxdWlyZWQgJiYgIShpdC5vcHRzLnY1ICYmICRyZXF1aXJlZC4kZGF0YSkgJiYgJHJlcXVpcmVkLmxlbmd0aCA8IGl0Lm9wdHMubG9vcFJlcXVpcmVkKSB2YXIgJHJlcXVpcmVkSGFzaCA9IGl0LnV0aWwudG9IYXNoKCRyZXF1aXJlZCk7XFxcXG4gIGlmIChpdC5vcHRzLnBhdHRlcm5Hcm91cHMpIHtcXFxcbiAgICB2YXIgJHBnUHJvcGVydGllcyA9IGl0LnNjaGVtYS5wYXR0ZXJuR3JvdXBzIHx8IHt9LFxcXFxuICAgICAgJHBnUHJvcGVydHlLZXlzID0gT2JqZWN0LmtleXMoJHBnUHJvcGVydGllcyk7XFxcXG4gIH1cXFxcbiAgb3V0ICs9ICd2YXIgJyArICgkZXJycykgKyAnID0gZXJyb3JzO3ZhciAnICsgKCRuZXh0VmFsaWQpICsgJyA9IHRydWU7JztcXFxcbiAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyICcgKyAoJGRhdGFQcm9wZXJ0aWVzKSArICcgPSB1bmRlZmluZWQ7JztcXFxcbiAgfVxcXFxuICBpZiAoJGNoZWNrQWRkaXRpb25hbCkge1xcXFxuICAgIGlmICgkb3duUHJvcGVydGllcykge1xcXFxuICAgICAgb3V0ICs9ICcgJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyA9ICcgKyAoJGRhdGFQcm9wZXJ0aWVzKSArICcgfHwgT2JqZWN0LmtleXMoJyArICgkZGF0YSkgKyAnKTsgZm9yICh2YXIgJyArICgkaWR4KSArICc9MDsgJyArICgkaWR4KSArICc8JyArICgkZGF0YVByb3BlcnRpZXMpICsgJy5sZW5ndGg7ICcgKyAoJGlkeCkgKyAnKyspIHsgdmFyICcgKyAoJGtleSkgKyAnID0gJyArICgkZGF0YVByb3BlcnRpZXMpICsgJ1snICsgKCRpZHgpICsgJ107ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIGZvciAodmFyICcgKyAoJGtleSkgKyAnIGluICcgKyAoJGRhdGEpICsgJykgeyAnO1xcXFxuICAgIH1cXFxcbiAgICBpZiAoJHNvbWVQcm9wZXJ0aWVzKSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YXIgaXNBZGRpdGlvbmFsJyArICgkbHZsKSArICcgPSAhKGZhbHNlICc7XFxcXG4gICAgICBpZiAoJHNjaGVtYUtleXMubGVuZ3RoKSB7XFxcXG4gICAgICAgIGlmICgkc2NoZW1hS2V5cy5sZW5ndGggPiA1KSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfHwgdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnWycgKyAoJGtleSkgKyAnXSAnO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIHZhciBhcnIxID0gJHNjaGVtYUtleXM7XFxcXG4gICAgICAgICAgaWYgKGFycjEpIHtcXFxcbiAgICAgICAgICAgIHZhciAkcHJvcGVydHlLZXksIGkxID0gLTEsXFxcXG4gICAgICAgICAgICAgIGwxID0gYXJyMS5sZW5ndGggLSAxO1xcXFxuICAgICAgICAgICAgd2hpbGUgKGkxIDwgbDEpIHtcXFxcbiAgICAgICAgICAgICAgJHByb3BlcnR5S2V5ID0gYXJyMVtpMSArPSAxXTtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgfHwgJyArICgka2V5KSArICcgPT0gJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRwcm9wZXJ0eUtleSkpICsgJyAnO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgICAgaWYgKCRwUHJvcGVydHlLZXlzLmxlbmd0aCkge1xcXFxuICAgICAgICB2YXIgYXJyMiA9ICRwUHJvcGVydHlLZXlzO1xcXFxuICAgICAgICBpZiAoYXJyMikge1xcXFxuICAgICAgICAgIHZhciAkcFByb3BlcnR5LCAkaSA9IC0xLFxcXFxuICAgICAgICAgICAgbDIgPSBhcnIyLmxlbmd0aCAtIDE7XFxcXG4gICAgICAgICAgd2hpbGUgKCRpIDwgbDIpIHtcXFxcbiAgICAgICAgICAgICRwUHJvcGVydHkgPSBhcnIyWyRpICs9IDFdO1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgfHwgJyArIChpdC51c2VQYXR0ZXJuKCRwUHJvcGVydHkpKSArICcudGVzdCgnICsgKCRrZXkpICsgJykgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH1cXFxcbiAgICAgIGlmIChpdC5vcHRzLnBhdHRlcm5Hcm91cHMgJiYgJHBnUHJvcGVydHlLZXlzLmxlbmd0aCkge1xcXFxuICAgICAgICB2YXIgYXJyMyA9ICRwZ1Byb3BlcnR5S2V5cztcXFxcbiAgICAgICAgaWYgKGFycjMpIHtcXFxcbiAgICAgICAgICB2YXIgJHBnUHJvcGVydHksICRpID0gLTEsXFxcXG4gICAgICAgICAgICBsMyA9IGFycjMubGVuZ3RoIC0gMTtcXFxcbiAgICAgICAgICB3aGlsZSAoJGkgPCBsMykge1xcXFxuICAgICAgICAgICAgJHBnUHJvcGVydHkgPSBhcnIzWyRpICs9IDFdO1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgfHwgJyArIChpdC51c2VQYXR0ZXJuKCRwZ1Byb3BlcnR5KSkgKyAnLnRlc3QoJyArICgka2V5KSArICcpICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyApOyBpZiAoaXNBZGRpdGlvbmFsJyArICgkbHZsKSArICcpIHsgJztcXFxcbiAgICB9XFxcXG4gICAgaWYgKCRyZW1vdmVBZGRpdGlvbmFsID09ICdhbGwnKSB7XFxcXG4gICAgICBvdXQgKz0gJyBkZWxldGUgJyArICgkZGF0YSkgKyAnWycgKyAoJGtleSkgKyAnXTsgJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgdmFyICRjdXJyZW50RXJyb3JQYXRoID0gaXQuZXJyb3JQYXRoO1xcXFxuICAgICAgdmFyICRhZGRpdGlvbmFsUHJvcGVydHkgPSAnXFxcXFxcXFwnICsgJyArICRrZXkgKyAnICsgXFxcXFxcXFwnJztcXFxcbiAgICAgIGlmIChpdC5vcHRzLl9lcnJvckRhdGFQYXRoUHJvcGVydHkpIHtcXFxcbiAgICAgICAgaXQuZXJyb3JQYXRoID0gaXQudXRpbC5nZXRQYXRoRXhwcihpdC5lcnJvclBhdGgsICRrZXksIGl0Lm9wdHMuanNvblBvaW50ZXJzKTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIGlmICgkbm9BZGRpdGlvbmFsKSB7XFxcXG4gICAgICAgIGlmICgkcmVtb3ZlQWRkaXRpb25hbCkge1xcXFxuICAgICAgICAgIG91dCArPSAnIGRlbGV0ZSAnICsgKCRkYXRhKSArICdbJyArICgka2V5KSArICddOyAnO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIG91dCArPSAnICcgKyAoJG5leHRWYWxpZCkgKyAnID0gZmFsc2U7ICc7XFxcXG4gICAgICAgICAgdmFyICRjdXJyRXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoO1xcXFxuICAgICAgICAgICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvYWRkaXRpb25hbFByb3BlcnRpZXMnO1xcXFxuICAgICAgICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgICAgICAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgICAgICAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICAgICAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdhZGRpdGlvbmFsUHJvcGVydGllcycpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgYWRkaXRpb25hbFByb3BlcnR5OiBcXFxcXFxcXCcnICsgKCRhZGRpdGlvbmFsUHJvcGVydHkpICsgJ1xcXFxcXFxcJyB9ICc7XFxcXG4gICAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXFxcXFxcXCdzaG91bGQgTk9UIGhhdmUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzXFxcXFxcXFwnICc7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiBmYWxzZSAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcge30gJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICAgICAgICAgIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gICAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XFxcXG4gICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgICRlcnJTY2hlbWFQYXRoID0gJGN1cnJFcnJTY2hlbWFQYXRoO1xcXFxuICAgICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyBicmVhazsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSBpZiAoJGFkZGl0aW9uYWxJc1NjaGVtYSkge1xcXFxuICAgICAgICBpZiAoJHJlbW92ZUFkZGl0aW9uYWwgPT0gJ2ZhaWxpbmcnKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgdmFyICcgKyAoJGVycnMpICsgJyA9IGVycm9yczsgICc7XFxcXG4gICAgICAgICAgdmFyICR3YXNDb21wb3NpdGUgPSBpdC5jb21wb3NpdGVSdWxlO1xcXFxuICAgICAgICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9IHRydWU7XFxcXG4gICAgICAgICAgJGl0LnNjaGVtYSA9ICRhUHJvcGVydGllcztcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyAnLmFkZGl0aW9uYWxQcm9wZXJ0aWVzJztcXFxcbiAgICAgICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnL2FkZGl0aW9uYWxQcm9wZXJ0aWVzJztcXFxcbiAgICAgICAgICAkaXQuZXJyb3JQYXRoID0gaXQub3B0cy5fZXJyb3JEYXRhUGF0aFByb3BlcnR5ID8gaXQuZXJyb3JQYXRoIDogaXQudXRpbC5nZXRQYXRoRXhwcihpdC5lcnJvclBhdGgsICRrZXksIGl0Lm9wdHMuanNvblBvaW50ZXJzKTtcXFxcbiAgICAgICAgICB2YXIgJHBhc3NEYXRhID0gJGRhdGEgKyAnWycgKyAka2V5ICsgJ10nO1xcXFxuICAgICAgICAgICRpdC5kYXRhUGF0aEFyclskZGF0YU54dF0gPSAka2V5O1xcXFxuICAgICAgICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCk7XFxcXG4gICAgICAgICAgJGl0LmJhc2VJZCA9ICRjdXJyZW50QmFzZUlkO1xcXFxuICAgICAgICAgIGlmIChpdC51dGlsLnZhck9jY3VyZW5jZXMoJGNvZGUsICRuZXh0RGF0YSkgPCAyKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAnICsgKGl0LnV0aWwudmFyUmVwbGFjZSgkY29kZSwgJG5leHREYXRhLCAkcGFzc0RhdGEpKSArICcgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHREYXRhKSArICcgPSAnICsgKCRwYXNzRGF0YSkgKyAnOyAnICsgKCRjb2RlKSArICcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgeyBlcnJvcnMgPSAnICsgKCRlcnJzKSArICc7IGlmICh2YWxpZGF0ZS5lcnJvcnMgIT09IG51bGwpIHsgaWYgKGVycm9ycykgdmFsaWRhdGUuZXJyb3JzLmxlbmd0aCA9IGVycm9yczsgZWxzZSB2YWxpZGF0ZS5lcnJvcnMgPSBudWxsOyB9IGRlbGV0ZSAnICsgKCRkYXRhKSArICdbJyArICgka2V5KSArICddOyB9ICAnO1xcXFxuICAgICAgICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgJGl0LnNjaGVtYSA9ICRhUHJvcGVydGllcztcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyAnLmFkZGl0aW9uYWxQcm9wZXJ0aWVzJztcXFxcbiAgICAgICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnL2FkZGl0aW9uYWxQcm9wZXJ0aWVzJztcXFxcbiAgICAgICAgICAkaXQuZXJyb3JQYXRoID0gaXQub3B0cy5fZXJyb3JEYXRhUGF0aFByb3BlcnR5ID8gaXQuZXJyb3JQYXRoIDogaXQudXRpbC5nZXRQYXRoRXhwcihpdC5lcnJvclBhdGgsICRrZXksIGl0Lm9wdHMuanNvblBvaW50ZXJzKTtcXFxcbiAgICAgICAgICB2YXIgJHBhc3NEYXRhID0gJGRhdGEgKyAnWycgKyAka2V5ICsgJ10nO1xcXFxuICAgICAgICAgICRpdC5kYXRhUGF0aEFyclskZGF0YU54dF0gPSAka2V5O1xcXFxuICAgICAgICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCk7XFxcXG4gICAgICAgICAgJGl0LmJhc2VJZCA9ICRjdXJyZW50QmFzZUlkO1xcXFxuICAgICAgICAgIGlmIChpdC51dGlsLnZhck9jY3VyZW5jZXMoJGNvZGUsICRuZXh0RGF0YSkgPCAyKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAnICsgKGl0LnV0aWwudmFyUmVwbGFjZSgkY29kZSwgJG5leHREYXRhLCAkcGFzc0RhdGEpKSArICcgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHREYXRhKSArICcgPSAnICsgKCRwYXNzRGF0YSkgKyAnOyAnICsgKCRjb2RlKSArICcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIGlmICghJyArICgkbmV4dFZhbGlkKSArICcpIGJyZWFrOyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgICAgaXQuZXJyb3JQYXRoID0gJGN1cnJlbnRFcnJvclBhdGg7XFxcXG4gICAgfVxcXFxuICAgIGlmICgkc29tZVByb3BlcnRpZXMpIHtcXFxcbiAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgfSAgJztcXFxcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XFxcXG4gICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIHZhciAkdXNlRGVmYXVsdHMgPSBpdC5vcHRzLnVzZURlZmF1bHRzICYmICFpdC5jb21wb3NpdGVSdWxlO1xcXFxuICBpZiAoJHNjaGVtYUtleXMubGVuZ3RoKSB7XFxcXG4gICAgdmFyIGFycjQgPSAkc2NoZW1hS2V5cztcXFxcbiAgICBpZiAoYXJyNCkge1xcXFxuICAgICAgdmFyICRwcm9wZXJ0eUtleSwgaTQgPSAtMSxcXFxcbiAgICAgICAgbDQgPSBhcnI0Lmxlbmd0aCAtIDE7XFxcXG4gICAgICB3aGlsZSAoaTQgPCBsNCkge1xcXFxuICAgICAgICAkcHJvcGVydHlLZXkgPSBhcnI0W2k0ICs9IDFdO1xcXFxuICAgICAgICB2YXIgJHNjaCA9ICRzY2hlbWFbJHByb3BlcnR5S2V5XTtcXFxcbiAgICAgICAgaWYgKGl0LnV0aWwuc2NoZW1hSGFzUnVsZXMoJHNjaCwgaXQuUlVMRVMuYWxsKSkge1xcXFxuICAgICAgICAgIHZhciAkcHJvcCA9IGl0LnV0aWwuZ2V0UHJvcGVydHkoJHByb3BlcnR5S2V5KSxcXFxcbiAgICAgICAgICAgICRwYXNzRGF0YSA9ICRkYXRhICsgJHByb3AsXFxcXG4gICAgICAgICAgICAkaGFzRGVmYXVsdCA9ICR1c2VEZWZhdWx0cyAmJiAkc2NoLmRlZmF1bHQgIT09IHVuZGVmaW5lZDtcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hUGF0aCA9ICRzY2hlbWFQYXRoICsgJHByb3A7XFxcXG4gICAgICAgICAgJGl0LmVyclNjaGVtYVBhdGggPSAkZXJyU2NoZW1hUGF0aCArICcvJyArIGl0LnV0aWwuZXNjYXBlRnJhZ21lbnQoJHByb3BlcnR5S2V5KTtcXFxcbiAgICAgICAgICAkaXQuZXJyb3JQYXRoID0gaXQudXRpbC5nZXRQYXRoKGl0LmVycm9yUGF0aCwgJHByb3BlcnR5S2V5LCBpdC5vcHRzLmpzb25Qb2ludGVycyk7XFxcXG4gICAgICAgICAgJGl0LmRhdGFQYXRoQXJyWyRkYXRhTnh0XSA9IGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJHByb3BlcnR5S2V5KTtcXFxcbiAgICAgICAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xcXFxuICAgICAgICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcXFxcbiAgICAgICAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xcXFxuICAgICAgICAgICAgJGNvZGUgPSBpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKTtcXFxcbiAgICAgICAgICAgIHZhciAkdXNlRGF0YSA9ICRwYXNzRGF0YTtcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgdmFyICR1c2VEYXRhID0gJG5leHREYXRhO1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHREYXRhKSArICcgPSAnICsgKCRwYXNzRGF0YSkgKyAnOyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBpZiAoJGhhc0RlZmF1bHQpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICcgKyAoJGNvZGUpICsgJyAnO1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBpZiAoJHJlcXVpcmVkSGFzaCAmJiAkcmVxdWlyZWRIYXNoWyRwcm9wZXJ0eUtleV0pIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCAnICsgKCR1c2VEYXRhKSArICcgPT09IHVuZGVmaW5lZCAnO1xcXFxuICAgICAgICAgICAgICBpZiAoJG93blByb3BlcnRpZXMpIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyB8fCAhIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCgnICsgKCRkYXRhKSArICcsIFxcXFxcXFxcJycgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJHByb3BlcnR5S2V5KSkgKyAnXFxcXFxcXFwnKSAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnKSB7ICcgKyAoJG5leHRWYWxpZCkgKyAnID0gZmFsc2U7ICc7XFxcXG4gICAgICAgICAgICAgIHZhciAkY3VycmVudEVycm9yUGF0aCA9IGl0LmVycm9yUGF0aCxcXFxcbiAgICAgICAgICAgICAgICAkY3VyckVyclNjaGVtYVBhdGggPSAkZXJyU2NoZW1hUGF0aCxcXFxcbiAgICAgICAgICAgICAgICAkbWlzc2luZ1Byb3BlcnR5ID0gaXQudXRpbC5lc2NhcGVRdW90ZXMoJHByb3BlcnR5S2V5KTtcXFxcbiAgICAgICAgICAgICAgaWYgKGl0Lm9wdHMuX2Vycm9yRGF0YVBhdGhQcm9wZXJ0eSkge1xcXFxuICAgICAgICAgICAgICAgIGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aCgkY3VycmVudEVycm9yUGF0aCwgJHByb3BlcnR5S2V5LCBpdC5vcHRzLmpzb25Qb2ludGVycyk7XFxcXG4gICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy9yZXF1aXJlZCc7XFxcXG4gICAgICAgICAgICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgICAgICAgICAgICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgICAgICAgICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgICAgICAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgncmVxdWlyZWQnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IG1pc3NpbmdQcm9wZXJ0eTogXFxcXFxcXFwnJyArICgkbWlzc2luZ1Byb3BlcnR5KSArICdcXFxcXFxcXCcgfSAnO1xcXFxuICAgICAgICAgICAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXFxcXFxcXCcnO1xcXFxuICAgICAgICAgICAgICAgICAgaWYgKGl0Lm9wdHMuX2Vycm9yRGF0YVBhdGhQcm9wZXJ0eSkge1xcXFxuICAgICAgICAgICAgICAgICAgICBvdXQgKz0gJ2lzIGEgcmVxdWlyZWQgcHJvcGVydHknO1xcXFxuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICdzaG91bGQgaGF2ZSByZXF1aXJlZCBwcm9wZXJ0eSBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnJyArICgkbWlzc2luZ1Byb3BlcnR5KSArICdcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnJztcXFxcbiAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnXFxcXFxcXFwnICc7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICAgICAgICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgICAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgICAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICRlcnJTY2hlbWFQYXRoID0gJGN1cnJFcnJTY2hlbWFQYXRoO1xcXFxuICAgICAgICAgICAgICBpdC5lcnJvclBhdGggPSAkY3VycmVudEVycm9yUGF0aDtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgfSBlbHNlIHsgJztcXFxcbiAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCAnICsgKCR1c2VEYXRhKSArICcgPT09IHVuZGVmaW5lZCAnO1xcXFxuICAgICAgICAgICAgICAgIGlmICgkb3duUHJvcGVydGllcykge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgfHwgISBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJyArICgkZGF0YSkgKyAnLCBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eUtleSkpICsgJ1xcXFxcXFxcJykgJztcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcpIHsgJyArICgkbmV4dFZhbGlkKSArICcgPSB0cnVlOyB9IGVsc2UgeyAnO1xcXFxuICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnIGlmICgnICsgKCR1c2VEYXRhKSArICcgIT09IHVuZGVmaW5lZCAnO1xcXFxuICAgICAgICAgICAgICAgIGlmICgkb3duUHJvcGVydGllcykge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgJiYgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJyArICgkZGF0YSkgKyAnLCBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwcm9wZXJ0eUtleSkpICsgJ1xcXFxcXFxcJykgJztcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgKSB7ICc7XFxcXG4gICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIG91dCArPSAnICcgKyAoJGNvZGUpICsgJyB9ICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XFxcXG4gICAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGlmICgkcFByb3BlcnR5S2V5cy5sZW5ndGgpIHtcXFxcbiAgICB2YXIgYXJyNSA9ICRwUHJvcGVydHlLZXlzO1xcXFxuICAgIGlmIChhcnI1KSB7XFxcXG4gICAgICB2YXIgJHBQcm9wZXJ0eSwgaTUgPSAtMSxcXFxcbiAgICAgICAgbDUgPSBhcnI1Lmxlbmd0aCAtIDE7XFxcXG4gICAgICB3aGlsZSAoaTUgPCBsNSkge1xcXFxuICAgICAgICAkcFByb3BlcnR5ID0gYXJyNVtpNSArPSAxXTtcXFxcbiAgICAgICAgdmFyICRzY2ggPSAkcFByb3BlcnRpZXNbJHBQcm9wZXJ0eV07XFxcXG4gICAgICAgIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2gsIGl0LlJVTEVTLmFsbCkpIHtcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyAnLnBhdHRlcm5Qcm9wZXJ0aWVzJyArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJHBQcm9wZXJ0eSk7XFxcXG4gICAgICAgICAgJGl0LmVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy9wYXR0ZXJuUHJvcGVydGllcy8nICsgaXQudXRpbC5lc2NhcGVGcmFnbWVudCgkcFByb3BlcnR5KTtcXFxcbiAgICAgICAgICBpZiAoJG93blByb3BlcnRpZXMpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICcgKyAoJGRhdGFQcm9wZXJ0aWVzKSArICcgPSAnICsgKCRkYXRhUHJvcGVydGllcykgKyAnIHx8IE9iamVjdC5rZXlzKCcgKyAoJGRhdGEpICsgJyk7IGZvciAodmFyICcgKyAoJGlkeCkgKyAnPTA7ICcgKyAoJGlkeCkgKyAnPCcgKyAoJGRhdGFQcm9wZXJ0aWVzKSArICcubGVuZ3RoOyAnICsgKCRpZHgpICsgJysrKSB7IHZhciAnICsgKCRrZXkpICsgJyA9ICcgKyAoJGRhdGFQcm9wZXJ0aWVzKSArICdbJyArICgkaWR4KSArICddOyAnO1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyBmb3IgKHZhciAnICsgKCRrZXkpICsgJyBpbiAnICsgKCRkYXRhKSArICcpIHsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoaXQudXNlUGF0dGVybigkcFByb3BlcnR5KSkgKyAnLnRlc3QoJyArICgka2V5KSArICcpKSB7ICc7XFxcXG4gICAgICAgICAgJGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aEV4cHIoaXQuZXJyb3JQYXRoLCAka2V5LCBpdC5vcHRzLmpzb25Qb2ludGVycyk7XFxcXG4gICAgICAgICAgdmFyICRwYXNzRGF0YSA9ICRkYXRhICsgJ1snICsgJGtleSArICddJztcXFxcbiAgICAgICAgICAkaXQuZGF0YVBhdGhBcnJbJGRhdGFOeHRdID0gJGtleTtcXFxcbiAgICAgICAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xcXFxuICAgICAgICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcXFxcbiAgICAgICAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XFxcXG4gICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyBpZiAoIScgKyAoJG5leHRWYWxpZCkgKyAnKSBicmVhazsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfSAnO1xcXFxuICAgICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyBlbHNlICcgKyAoJG5leHRWYWxpZCkgKyAnID0gdHJ1ZTsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfSAgJztcXFxcbiAgICAgICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJG5leHRWYWxpZCkgKyAnKSB7ICc7XFxcXG4gICAgICAgICAgICAkY2xvc2luZ0JyYWNlcyArPSAnfSc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGlmIChpdC5vcHRzLnBhdHRlcm5Hcm91cHMgJiYgJHBnUHJvcGVydHlLZXlzLmxlbmd0aCkge1xcXFxuICAgIHZhciBhcnI2ID0gJHBnUHJvcGVydHlLZXlzO1xcXFxuICAgIGlmIChhcnI2KSB7XFxcXG4gICAgICB2YXIgJHBnUHJvcGVydHksIGk2ID0gLTEsXFxcXG4gICAgICAgIGw2ID0gYXJyNi5sZW5ndGggLSAxO1xcXFxuICAgICAgd2hpbGUgKGk2IDwgbDYpIHtcXFxcbiAgICAgICAgJHBnUHJvcGVydHkgPSBhcnI2W2k2ICs9IDFdO1xcXFxuICAgICAgICB2YXIgJHBnU2NoZW1hID0gJHBnUHJvcGVydGllc1skcGdQcm9wZXJ0eV0sXFxcXG4gICAgICAgICAgJHNjaCA9ICRwZ1NjaGVtYS5zY2hlbWE7XFxcXG4gICAgICAgIGlmIChpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRzY2gsIGl0LlJVTEVTLmFsbCkpIHtcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hID0gJHNjaDtcXFxcbiAgICAgICAgICAkaXQuc2NoZW1hUGF0aCA9IGl0LnNjaGVtYVBhdGggKyAnLnBhdHRlcm5Hcm91cHMnICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgkcGdQcm9wZXJ0eSkgKyAnLnNjaGVtYSc7XFxcXG4gICAgICAgICAgJGl0LmVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy9wYXR0ZXJuR3JvdXBzLycgKyBpdC51dGlsLmVzY2FwZUZyYWdtZW50KCRwZ1Byb3BlcnR5KSArICcvc2NoZW1hJztcXFxcbiAgICAgICAgICBvdXQgKz0gJyB2YXIgcGdQcm9wQ291bnQnICsgKCRsdmwpICsgJyA9IDA7ICAnO1xcXFxuICAgICAgICAgIGlmICgkb3duUHJvcGVydGllcykge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyA9ICcgKyAoJGRhdGFQcm9wZXJ0aWVzKSArICcgfHwgT2JqZWN0LmtleXMoJyArICgkZGF0YSkgKyAnKTsgZm9yICh2YXIgJyArICgkaWR4KSArICc9MDsgJyArICgkaWR4KSArICc8JyArICgkZGF0YVByb3BlcnRpZXMpICsgJy5sZW5ndGg7ICcgKyAoJGlkeCkgKyAnKyspIHsgdmFyICcgKyAoJGtleSkgKyAnID0gJyArICgkZGF0YVByb3BlcnRpZXMpICsgJ1snICsgKCRpZHgpICsgJ107ICc7XFxcXG4gICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIGZvciAodmFyICcgKyAoJGtleSkgKyAnIGluICcgKyAoJGRhdGEpICsgJykgeyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArIChpdC51c2VQYXR0ZXJuKCRwZ1Byb3BlcnR5KSkgKyAnLnRlc3QoJyArICgka2V5KSArICcpKSB7IHBnUHJvcENvdW50JyArICgkbHZsKSArICcrKzsgJztcXFxcbiAgICAgICAgICAkaXQuZXJyb3JQYXRoID0gaXQudXRpbC5nZXRQYXRoRXhwcihpdC5lcnJvclBhdGgsICRrZXksIGl0Lm9wdHMuanNvblBvaW50ZXJzKTtcXFxcbiAgICAgICAgICB2YXIgJHBhc3NEYXRhID0gJGRhdGEgKyAnWycgKyAka2V5ICsgJ10nO1xcXFxuICAgICAgICAgICRpdC5kYXRhUGF0aEFyclskZGF0YU54dF0gPSAka2V5O1xcXFxuICAgICAgICAgIHZhciAkY29kZSA9IGl0LnZhbGlkYXRlKCRpdCk7XFxcXG4gICAgICAgICAgJGl0LmJhc2VJZCA9ICRjdXJyZW50QmFzZUlkO1xcXFxuICAgICAgICAgIGlmIChpdC51dGlsLnZhck9jY3VyZW5jZXMoJGNvZGUsICRuZXh0RGF0YSkgPCAyKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAnICsgKGl0LnV0aWwudmFyUmVwbGFjZSgkY29kZSwgJG5leHREYXRhLCAkcGFzc0RhdGEpKSArICcgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFyICcgKyAoJG5leHREYXRhKSArICcgPSAnICsgKCRwYXNzRGF0YSkgKyAnOyAnICsgKCRjb2RlKSArICcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIGlmICghJyArICgkbmV4dFZhbGlkKSArICcpIGJyZWFrOyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIGVsc2UgJyArICgkbmV4dFZhbGlkKSArICcgPSB0cnVlOyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBvdXQgKz0gJyB9ICAnO1xcXFxuICAgICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkbmV4dFZhbGlkKSArICcpIHsgJztcXFxcbiAgICAgICAgICAgICRjbG9zaW5nQnJhY2VzICs9ICd9JztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgdmFyICRwZ01pbiA9ICRwZ1NjaGVtYS5taW5pbXVtLFxcXFxuICAgICAgICAgICAgJHBnTWF4ID0gJHBnU2NoZW1hLm1heGltdW07XFxcXG4gICAgICAgICAgaWYgKCRwZ01pbiAhPT0gdW5kZWZpbmVkIHx8ICRwZ01heCAhPT0gdW5kZWZpbmVkKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJyA9IHRydWU7ICc7XFxcXG4gICAgICAgICAgICB2YXIgJGN1cnJFcnJTY2hlbWFQYXRoID0gJGVyclNjaGVtYVBhdGg7XFxcXG4gICAgICAgICAgICBpZiAoJHBnTWluICE9PSB1bmRlZmluZWQpIHtcXFxcbiAgICAgICAgICAgICAgdmFyICRsaW1pdCA9ICRwZ01pbixcXFxcbiAgICAgICAgICAgICAgICAkcmVhc29uID0gJ21pbmltdW0nLFxcXFxuICAgICAgICAgICAgICAgICRtb3JlT3JMZXNzID0gJ2xlc3MnO1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gcGdQcm9wQ291bnQnICsgKCRsdmwpICsgJyA+PSAnICsgKCRwZ01pbikgKyAnOyAnO1xcXFxuICAgICAgICAgICAgICAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnL3BhdHRlcm5Hcm91cHMvbWluaW11bSc7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnICBpZiAoIScgKyAoJHZhbGlkKSArICcpIHsgICAnO1xcXFxuICAgICAgICAgICAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICAgICAgICAgICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICAgICAgICAgICAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICAgICAgICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJ3BhdHRlcm5Hcm91cHMnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IHJlYXNvbjogXFxcXFxcXFwnJyArICgkcmVhc29uKSArICdcXFxcXFxcXCcsIGxpbWl0OiAnICsgKCRsaW1pdCkgKyAnLCBwYXR0ZXJuOiBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwZ1Byb3BlcnR5KSkgKyAnXFxcXFxcXFwnIH0gJztcXFxcbiAgICAgICAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnc2hvdWxkIE5PVCBoYXZlICcgKyAoJG1vcmVPckxlc3MpICsgJyB0aGFuICcgKyAoJGxpbWl0KSArICcgcHJvcGVydGllcyBtYXRjaGluZyBwYXR0ZXJuIFxcXFxcXFwiJyArIChpdC51dGlsLmVzY2FwZVF1b3RlcygkcGdQcm9wZXJ0eSkpICsgJ1xcXFxcXFwiXFxcXFxcXFwnICc7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICAgICAgICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgICAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgICAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICAgICAgaWYgKCRwZ01heCAhPT0gdW5kZWZpbmVkKSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgZWxzZSAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBpZiAoJHBnTWF4ICE9PSB1bmRlZmluZWQpIHtcXFxcbiAgICAgICAgICAgICAgdmFyICRsaW1pdCA9ICRwZ01heCxcXFxcbiAgICAgICAgICAgICAgICAkcmVhc29uID0gJ21heGltdW0nLFxcXFxuICAgICAgICAgICAgICAgICRtb3JlT3JMZXNzID0gJ21vcmUnO1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gcGdQcm9wQ291bnQnICsgKCRsdmwpICsgJyA8PSAnICsgKCRwZ01heCkgKyAnOyAnO1xcXFxuICAgICAgICAgICAgICAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnL3BhdHRlcm5Hcm91cHMvbWF4aW11bSc7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnICBpZiAoIScgKyAoJHZhbGlkKSArICcpIHsgICAnO1xcXFxuICAgICAgICAgICAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICAgICAgICAgICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICAgICAgICAgICAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICAgICAgICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJ3BhdHRlcm5Hcm91cHMnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IHJlYXNvbjogXFxcXFxcXFwnJyArICgkcmVhc29uKSArICdcXFxcXFxcXCcsIGxpbWl0OiAnICsgKCRsaW1pdCkgKyAnLCBwYXR0ZXJuOiBcXFxcXFxcXCcnICsgKGl0LnV0aWwuZXNjYXBlUXVvdGVzKCRwZ1Byb3BlcnR5KSkgKyAnXFxcXFxcXFwnIH0gJztcXFxcbiAgICAgICAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnc2hvdWxkIE5PVCBoYXZlICcgKyAoJG1vcmVPckxlc3MpICsgJyB0aGFuICcgKyAoJGxpbWl0KSArICcgcHJvcGVydGllcyBtYXRjaGluZyBwYXR0ZXJuIFxcXFxcXFwiJyArIChpdC51dGlsLmVzY2FwZVF1b3RlcygkcGdQcm9wZXJ0eSkpICsgJ1xcXFxcXFwiXFxcXFxcXFwnICc7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICAgICAgICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgICAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgICAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICRlcnJTY2hlbWFQYXRoID0gJGN1cnJFcnJTY2hlbWFQYXRoO1xcXFxuICAgICAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJHZhbGlkKSArICcpIHsgJztcXFxcbiAgICAgICAgICAgICAgJGNsb3NpbmdCcmFjZXMgKz0gJ30nO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgfVxcXFxuICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgIG91dCArPSAnICcgKyAoJGNsb3NpbmdCcmFjZXMpICsgJyBpZiAoJyArICgkZXJycykgKyAnID09IGVycm9ycykgeyc7XFxcXG4gIH1cXFxcbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xcXFxuICByZXR1cm4gb3V0O1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5a2IzUnFjeTl3Y205d1pYSjBhV1Z6TG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OXdjbTl3WlhKMGFXVnpMbXB6UDJKa05XSWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpSjNWelpTQnpkSEpwWTNRbk8xeHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpQm5aVzVsY21GMFpWOXdjbTl3WlhKMGFXVnpLR2wwTENBa2EyVjVkMjl5WkN3Z0pISjFiR1ZVZVhCbEtTQjdYRzRnSUhaaGNpQnZkWFFnUFNBbklDYzdYRzRnSUhaaGNpQWtiSFpzSUQwZ2FYUXViR1YyWld3N1hHNGdJSFpoY2lBa1pHRjBZVXgyYkNBOUlHbDBMbVJoZEdGTVpYWmxiRHRjYmlBZ2RtRnlJQ1J6WTJobGJXRWdQU0JwZEM1elkyaGxiV0ZiSkd0bGVYZHZjbVJkTzF4dUlDQjJZWElnSkhOamFHVnRZVkJoZEdnZ1BTQnBkQzV6WTJobGJXRlFZWFJvSUNzZ2FYUXVkWFJwYkM1blpYUlFjbTl3WlhKMGVTZ2thMlY1ZDI5eVpDazdYRzRnSUhaaGNpQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lBa2EyVjVkMjl5WkR0Y2JpQWdkbUZ5SUNSaWNtVmhhMDl1UlhKeWIzSWdQU0FoYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk03WEc0Z0lIWmhjaUFrWkdGMFlTQTlJQ2RrWVhSaEp5QXJJQ2drWkdGMFlVeDJiQ0I4ZkNBbkp5azdYRzRnSUhaaGNpQWtkbUZzYVdRZ1BTQW5kbUZzYVdRbklDc2dKR3gyYkR0Y2JpQWdkbUZ5SUNSbGNuSnpJRDBnSjJWeWNuTmZYeWNnS3lBa2JIWnNPMXh1SUNCMllYSWdKR2wwSUQwZ2FYUXVkWFJwYkM1amIzQjVLR2wwS1R0Y2JpQWdkbUZ5SUNSamJHOXphVzVuUW5KaFkyVnpJRDBnSnljN1hHNGdJQ1JwZEM1c1pYWmxiQ3NyTzF4dUlDQjJZWElnSkc1bGVIUldZV3hwWkNBOUlDZDJZV3hwWkNjZ0t5QWthWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWthMlY1SUQwZ0oydGxlU2NnS3lBa2JIWnNMRnh1SUNBZ0lDUnBaSGdnUFNBbmFXUjRKeUFySUNSc2Rtd3NYRzRnSUNBZ0pHUmhkR0ZPZUhRZ1BTQWthWFF1WkdGMFlVeGxkbVZzSUQwZ2FYUXVaR0YwWVV4bGRtVnNJQ3NnTVN4Y2JpQWdJQ0FrYm1WNGRFUmhkR0VnUFNBblpHRjBZU2NnS3lBa1pHRjBZVTU0ZEN4Y2JpQWdJQ0FrWkdGMFlWQnliM0JsY25ScFpYTWdQU0FuWkdGMFlWQnliM0JsY25ScFpYTW5JQ3NnSkd4MmJEdGNiaUFnZG1GeUlDUnpZMmhsYldGTFpYbHpJRDBnVDJKcVpXTjBMbXRsZVhNb0pITmphR1Z0WVNCOGZDQjdmU2tzWEc0Z0lDQWdKSEJRY205d1pYSjBhV1Z6SUQwZ2FYUXVjMk5vWlcxaExuQmhkSFJsY201UWNtOXdaWEowYVdWeklIeDhJSHQ5TEZ4dUlDQWdJQ1J3VUhKdmNHVnlkSGxMWlhseklEMGdUMkpxWldOMExtdGxlWE1vSkhCUWNtOXdaWEowYVdWektTeGNiaUFnSUNBa1lWQnliM0JsY25ScFpYTWdQU0JwZEM1elkyaGxiV0V1WVdSa2FYUnBiMjVoYkZCeWIzQmxjblJwWlhNc1hHNGdJQ0FnSkhOdmJXVlFjbTl3WlhKMGFXVnpJRDBnSkhOamFHVnRZVXRsZVhNdWJHVnVaM1JvSUh4OElDUndVSEp2Y0dWeWRIbExaWGx6TG14bGJtZDBhQ3hjYmlBZ0lDQWtibTlCWkdScGRHbHZibUZzSUQwZ0pHRlFjbTl3WlhKMGFXVnpJRDA5UFNCbVlXeHpaU3hjYmlBZ0lDQWtZV1JrYVhScGIyNWhiRWx6VTJOb1pXMWhJRDBnZEhsd1pXOW1JQ1JoVUhKdmNHVnlkR2xsY3lBOVBTQW5iMkpxWldOMEp5QW1KaUJQWW1wbFkzUXVhMlY1Y3lna1lWQnliM0JsY25ScFpYTXBMbXhsYm1kMGFDeGNiaUFnSUNBa2NtVnRiM1psUVdSa2FYUnBiMjVoYkNBOUlHbDBMbTl3ZEhNdWNtVnRiM1psUVdSa2FYUnBiMjVoYkN4Y2JpQWdJQ0FrWTJobFkydEJaR1JwZEdsdmJtRnNJRDBnSkc1dlFXUmthWFJwYjI1aGJDQjhmQ0FrWVdSa2FYUnBiMjVoYkVselUyTm9aVzFoSUh4OElDUnlaVzF2ZG1WQlpHUnBkR2x2Ym1Gc0xGeHVJQ0FnSUNSdmQyNVFjbTl3WlhKMGFXVnpJRDBnYVhRdWIzQjBjeTV2ZDI1UWNtOXdaWEowYVdWekxGeHVJQ0FnSUNSamRYSnlaVzUwUW1GelpVbGtJRDBnYVhRdVltRnpaVWxrTzF4dUlDQjJZWElnSkhKbGNYVnBjbVZrSUQwZ2FYUXVjMk5vWlcxaExuSmxjWFZwY21Wa08xeHVJQ0JwWmlBb0pISmxjWFZwY21Wa0lDWW1JQ0VvYVhRdWIzQjBjeTUyTlNBbUppQWtjbVZ4ZFdseVpXUXVKR1JoZEdFcElDWW1JQ1J5WlhGMWFYSmxaQzVzWlc1bmRHZ2dQQ0JwZEM1dmNIUnpMbXh2YjNCU1pYRjFhWEpsWkNrZ2RtRnlJQ1J5WlhGMWFYSmxaRWhoYzJnZ1BTQnBkQzUxZEdsc0xuUnZTR0Z6YUNna2NtVnhkV2x5WldRcE8xeHVJQ0JwWmlBb2FYUXViM0IwY3k1d1lYUjBaWEp1UjNKdmRYQnpLU0I3WEc0Z0lDQWdkbUZ5SUNSd1oxQnliM0JsY25ScFpYTWdQU0JwZEM1elkyaGxiV0V1Y0dGMGRHVnlia2R5YjNWd2N5QjhmQ0I3ZlN4Y2JpQWdJQ0FnSUNSd1oxQnliM0JsY25SNVMyVjVjeUE5SUU5aWFtVmpkQzVyWlhsektDUndaMUJ5YjNCbGNuUnBaWE1wTzF4dUlDQjlYRzRnSUc5MWRDQXJQU0FuZG1GeUlDY2dLeUFvSkdWeWNuTXBJQ3NnSnlBOUlHVnljbTl5Y3p0MllYSWdKeUFySUNna2JtVjRkRlpoYkdsa0tTQXJJQ2NnUFNCMGNuVmxPeWM3WEc0Z0lHbG1JQ2drYjNkdVVISnZjR1Z5ZEdsbGN5a2dlMXh1SUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUmtZWFJoVUhKdmNHVnlkR2xsY3lrZ0t5QW5JRDBnZFc1a1pXWnBibVZrT3ljN1hHNGdJSDFjYmlBZ2FXWWdLQ1JqYUdWamEwRmtaR2wwYVc5dVlXd3BJSHRjYmlBZ0lDQnBaaUFvSkc5M2JsQnliM0JsY25ScFpYTXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb0pHUmhkR0ZRY205d1pYSjBhV1Z6S1NBcklDY2dQU0FuSUNzZ0tDUmtZWFJoVUhKdmNHVnlkR2xsY3lrZ0t5QW5JSHg4SUU5aWFtVmpkQzVyWlhsektDY2dLeUFvSkdSaGRHRXBJQ3NnSnlrN0lHWnZjaUFvZG1GeUlDY2dLeUFvSkdsa2VDa2dLeUFuUFRBN0lDY2dLeUFvSkdsa2VDa2dLeUFuUENjZ0t5QW9KR1JoZEdGUWNtOXdaWEowYVdWektTQXJJQ2N1YkdWdVozUm9PeUFuSUNzZ0tDUnBaSGdwSUNzZ0p5c3JLU0I3SUhaaGNpQW5JQ3NnS0NSclpYa3BJQ3NnSnlBOUlDY2dLeUFvSkdSaGRHRlFjbTl3WlhKMGFXVnpLU0FySUNkYkp5QXJJQ2drYVdSNEtTQXJJQ2RkT3lBbk8xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0J2ZFhRZ0t6MGdKeUJtYjNJZ0tIWmhjaUFuSUNzZ0tDUnJaWGtwSUNzZ0p5QnBiaUFuSUNzZ0tDUmtZWFJoS1NBcklDY3BJSHNnSnp0Y2JpQWdJQ0I5WEc0Z0lDQWdhV1lnS0NSemIyMWxVSEp2Y0dWeWRHbGxjeWtnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnZG1GeUlHbHpRV1JrYVhScGIyNWhiQ2NnS3lBb0pHeDJiQ2tnS3lBbklEMGdJU2htWVd4elpTQW5PMXh1SUNBZ0lDQWdhV1lnS0NSelkyaGxiV0ZMWlhsekxteGxibWQwYUNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSkhOamFHVnRZVXRsZVhNdWJHVnVaM1JvSUQ0Z05Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUh4OElIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9KSE5qYUdWdFlWQmhkR2dwSUNzZ0oxc25JQ3NnS0NSclpYa3BJQ3NnSjEwZ0p6dGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0IyWVhJZ1lYSnlNU0E5SUNSelkyaGxiV0ZMWlhsek8xeHVJQ0FnSUNBZ0lDQWdJR2xtSUNoaGNuSXhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnSkhCeWIzQmxjblI1UzJWNUxDQnBNU0E5SUMweExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCc01TQTlJR0Z5Y2pFdWJHVnVaM1JvSUMwZ01UdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkb2FXeGxJQ2hwTVNBOElHd3hLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ1J3Y205d1pYSjBlVXRsZVNBOUlHRnljakZiYVRFZ0t6MGdNVjA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSHg4SUNjZ0t5QW9KR3RsZVNrZ0t5QW5JRDA5SUNjZ0t5QW9hWFF1ZFhScGJDNTBiMUYxYjNSbFpGTjBjbWx1Wnlna2NISnZjR1Z5ZEhsTFpYa3BLU0FySUNjZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJR2xtSUNna2NGQnliM0JsY25SNVMyVjVjeTVzWlc1bmRHZ3BJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHRnljaklnUFNBa2NGQnliM0JsY25SNVMyVjVjenRjYmlBZ0lDQWdJQ0FnYVdZZ0tHRnljaklwSUh0Y2JpQWdJQ0FnSUNBZ0lDQjJZWElnSkhCUWNtOXdaWEowZVN3Z0pHa2dQU0F0TVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR3d5SUQwZ1lYSnlNaTVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJQ0FnSUNBZ0lIZG9hV3hsSUNna2FTQThJR3d5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FrY0ZCeWIzQmxjblI1SUQwZ1lYSnlNbHNrYVNBclBTQXhYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIeDhJQ2NnS3lBb2FYUXVkWE5sVUdGMGRHVnliaWdrY0ZCeWIzQmxjblI1S1NrZ0t5QW5MblJsYzNRb0p5QXJJQ2drYTJWNUtTQXJJQ2NwSUNjN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1d1lYUjBaWEp1UjNKdmRYQnpJQ1ltSUNSd1oxQnliM0JsY25SNVMyVjVjeTVzWlc1bmRHZ3BJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHRnljak1nUFNBa2NHZFFjbTl3WlhKMGVVdGxlWE03WEc0Z0lDQWdJQ0FnSUdsbUlDaGhjbkl6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUNSd1oxQnliM0JsY25SNUxDQWthU0E5SUMweExGeHVJQ0FnSUNBZ0lDQWdJQ0FnYkRNZ1BTQmhjbkl6TG14bGJtZDBhQ0F0SURFN1hHNGdJQ0FnSUNBZ0lDQWdkMmhwYkdVZ0tDUnBJRHdnYkRNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNSd1oxQnliM0JsY25SNUlEMGdZWEp5TTFza2FTQXJQU0F4WFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSHg4SUNjZ0t5QW9hWFF1ZFhObFVHRjBkR1Z5Ymlna2NHZFFjbTl3WlhKMGVTa3BJQ3NnSnk1MFpYTjBLQ2NnS3lBb0pHdGxlU2tnS3lBbktTQW5PMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0tUc2dhV1lnS0dselFXUmthWFJwYjI1aGJDY2dLeUFvSkd4MmJDa2dLeUFuS1NCN0lDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUdsbUlDZ2tjbVZ0YjNabFFXUmthWFJwYjI1aGJDQTlQU0FuWVd4c0p5a2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2daR1ZzWlhSbElDY2dLeUFvSkdSaGRHRXBJQ3NnSjFzbklDc2dLQ1JyWlhrcElDc2dKMTA3SUNjN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJSFpoY2lBa1kzVnljbVZ1ZEVWeWNtOXlVR0YwYUNBOUlHbDBMbVZ5Y205eVVHRjBhRHRjYmlBZ0lDQWdJSFpoY2lBa1lXUmthWFJwYjI1aGJGQnliM0JsY25SNUlEMGdKMXhjSnlBcklDY2dLeUFrYTJWNUlDc2dKeUFySUZ4Y0p5YzdYRzRnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTVmWlhKeWIzSkVZWFJoVUdGMGFGQnliM0JsY25SNUtTQjdYRzRnSUNBZ0lDQWdJR2wwTG1WeWNtOXlVR0YwYUNBOUlHbDBMblYwYVd3dVoyVjBVR0YwYUVWNGNISW9hWFF1WlhKeWIzSlFZWFJvTENBa2EyVjVMQ0JwZEM1dmNIUnpMbXB6YjI1UWIybHVkR1Z5Y3lrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCcFppQW9KRzV2UVdSa2FYUnBiMjVoYkNrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvSkhKbGJXOTJaVUZrWkdsMGFXOXVZV3dwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QmtaV3hsZEdVZ0p5QXJJQ2drWkdGMFlTa2dLeUFuV3ljZ0t5QW9KR3RsZVNrZ0t5QW5YVHNnSnp0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0NSdVpYaDBWbUZzYVdRcElDc2dKeUE5SUdaaGJITmxPeUFuTzF4dUlDQWdJQ0FnSUNBZ0lIWmhjaUFrWTNWeWNrVnljbE5qYUdWdFlWQmhkR2dnUFNBa1pYSnlVMk5vWlcxaFVHRjBhRHRjYmlBZ0lDQWdJQ0FnSUNBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkwyRmtaR2wwYVc5dVlXeFFjbTl3WlhKMGFXVnpKenRjYmlBZ0lDQWdJQ0FnSUNCMllYSWdKQ1J2ZFhSVGRHRmpheUE5SUNRa2IzVjBVM1JoWTJzZ2ZId2dXMTA3WEc0Z0lDQWdJQ0FnSUNBZ0pDUnZkWFJUZEdGamF5NXdkWE5vS0c5MWRDazdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElEMGdKeWM3SUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCbGJITmxJQ292WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLR2wwTG1OeVpXRjBaVVZ5Y205eWN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIc2dhMlY1ZDI5eVpEb2dYRnduSnlBcklDZ25ZV1JrYVhScGIyNWhiRkJ5YjNCbGNuUnBaWE1uS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdJR0ZrWkdsMGFXOXVZV3hRY205d1pYSjBlVG9nWEZ3bkp5QXJJQ2drWVdSa2FYUnBiMjVoYkZCeWIzQmxjblI1S1NBcklDZGNYQ2NnZlNBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXVnpjMkZuWlhNZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDd2diV1Z6YzJGblpUb2dYRnduYzJodmRXeGtJRTVQVkNCb1lYWmxJR0ZrWkdsMGFXOXVZV3dnY0hKdmNHVnlkR2xsYzF4Y0p5QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWRtVnlZbTl6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlBc0lITmphR1Z0WVRvZ1ptRnNjMlVnTENCd1lYSmxiblJUWTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvYVhRdWMyTm9aVzFoVUdGMGFDa2dLeUFuSUN3Z1pHRjBZVG9nSnlBcklDZ2taR0YwWVNrZ0t5QW5JQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJSFpoY2lCZlgyVnljaUE5SUc5MWREdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ1BTQWtKRzkxZEZOMFlXTnJMbkJ2Y0NncE8xeHVJQ0FnSUNBZ0lDQWdJR2xtSUNnaGFYUXVZMjl0Y0c5emFYUmxVblZzWlNBbUppQWtZbkpsWVd0UGJrVnljbTl5S1NCN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQnBaaUFxTDF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtRnplVzVqS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhSb2NtOTNJRzVsZHlCV1lXeHBaR0YwYVc5dVJYSnliM0lvV3ljZ0t5QW9YMTlsY25JcElDc2dKMTBwT3lBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZzYVdSaGRHVXVaWEp5YjNKeklEMGdXeWNnS3lBb1gxOWxjbklwSUNzZ0oxMDdJSEpsZEhWeWJpQm1ZV3h6WlRzZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZG1GeUlHVnljaUE5SUNjZ0t5QW9YMTlsY25JcElDc2dKenNnSUdsbUlDaDJSWEp5YjNKeklEMDlQU0J1ZFd4c0tTQjJSWEp5YjNKeklEMGdXMlZ5Y2wwN0lHVnNjMlVnZGtWeWNtOXljeTV3ZFhOb0tHVnljaWs3SUdWeWNtOXljeXNyT3lBbk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUNSamRYSnlSWEp5VTJOb1pXMWhVR0YwYUR0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ1luSmxZV3M3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0NSaFpHUnBkR2x2Ym1Gc1NYTlRZMmhsYldFcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0NSeVpXMXZkbVZCWkdScGRHbHZibUZzSUQwOUlDZG1ZV2xzYVc1bkp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQW5JQ3NnS0NSbGNuSnpLU0FySUNjZ1BTQmxjbkp2Y25NN0lDQW5PMXh1SUNBZ0lDQWdJQ0FnSUhaaGNpQWtkMkZ6UTI5dGNHOXphWFJsSUQwZ2FYUXVZMjl0Y0c5emFYUmxVblZzWlR0Y2JpQWdJQ0FnSUNBZ0lDQnBkQzVqYjIxd2IzTnBkR1ZTZFd4bElEMGdKR2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdQU0IwY25WbE8xeHVJQ0FnSUNBZ0lDQWdJQ1JwZEM1elkyaGxiV0VnUFNBa1lWQnliM0JsY25ScFpYTTdYRzRnSUNBZ0lDQWdJQ0FnSkdsMExuTmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dKeTVoWkdScGRHbHZibUZzVUhKdmNHVnlkR2xsY3ljN1hHNGdJQ0FnSUNBZ0lDQWdKR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dQU0JwZEM1bGNuSlRZMmhsYldGUVlYUm9JQ3NnSnk5aFpHUnBkR2x2Ym1Gc1VISnZjR1Z5ZEdsbGN5YzdYRzRnSUNBZ0lDQWdJQ0FnSkdsMExtVnljbTl5VUdGMGFDQTlJR2wwTG05d2RITXVYMlZ5Y205eVJHRjBZVkJoZEdoUWNtOXdaWEowZVNBL0lHbDBMbVZ5Y205eVVHRjBhQ0E2SUdsMExuVjBhV3d1WjJWMFVHRjBhRVY0Y0hJb2FYUXVaWEp5YjNKUVlYUm9MQ0FrYTJWNUxDQnBkQzV2Y0hSekxtcHpiMjVRYjJsdWRHVnljeWs3WEc0Z0lDQWdJQ0FnSUNBZ2RtRnlJQ1J3WVhOelJHRjBZU0E5SUNSa1lYUmhJQ3NnSjFzbklDc2dKR3RsZVNBcklDZGRKenRjYmlBZ0lDQWdJQ0FnSUNBa2FYUXVaR0YwWVZCaGRHaEJjbkpiSkdSaGRHRk9lSFJkSUQwZ0pHdGxlVHRjYmlBZ0lDQWdJQ0FnSUNCMllYSWdKR052WkdVZ1BTQnBkQzUyWVd4cFpHRjBaU2drYVhRcE8xeHVJQ0FnSUNBZ0lDQWdJQ1JwZEM1aVlYTmxTV1FnUFNBa1kzVnljbVZ1ZEVKaGMyVkpaRHRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1ZFhScGJDNTJZWEpQWTJOMWNtVnVZMlZ6S0NSamIyUmxMQ0FrYm1WNGRFUmhkR0VwSUR3Z01pa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2hwZEM1MWRHbHNMblpoY2xKbGNHeGhZMlVvSkdOdlpHVXNJQ1J1WlhoMFJHRjBZU3dnSkhCaGMzTkVZWFJoS1NrZ0t5QW5JQ2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFpoY2lBbklDc2dLQ1J1WlhoMFJHRjBZU2tnS3lBbklEMGdKeUFySUNna2NHRnpjMFJoZEdFcElDc2dKenNnSnlBcklDZ2tZMjlrWlNrZ0t5QW5JQ2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnaEp5QXJJQ2drYm1WNGRGWmhiR2xrS1NBcklDY3BJSHNnWlhKeWIzSnpJRDBnSnlBcklDZ2taWEp5Y3lrZ0t5QW5PeUJwWmlBb2RtRnNhV1JoZEdVdVpYSnliM0p6SUNFOVBTQnVkV3hzS1NCN0lHbG1JQ2hsY25KdmNuTXBJSFpoYkdsa1lYUmxMbVZ5Y205eWN5NXNaVzVuZEdnZ1BTQmxjbkp2Y25NN0lHVnNjMlVnZG1Gc2FXUmhkR1V1WlhKeWIzSnpJRDBnYm5Wc2JEc2dmU0JrWld4bGRHVWdKeUFySUNna1pHRjBZU2tnS3lBbld5Y2dLeUFvSkd0bGVTa2dLeUFuWFRzZ2ZTQWdKenRjYmlBZ0lDQWdJQ0FnSUNCcGRDNWpiMjF3YjNOcGRHVlNkV3hsSUQwZ0pHbDBMbU52YlhCdmMybDBaVkoxYkdVZ1BTQWtkMkZ6UTI5dGNHOXphWFJsTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDUnBkQzV6WTJobGJXRWdQU0FrWVZCeWIzQmxjblJwWlhNN1hHNGdJQ0FnSUNBZ0lDQWdKR2wwTG5OamFHVnRZVkJoZEdnZ1BTQnBkQzV6WTJobGJXRlFZWFJvSUNzZ0p5NWhaR1JwZEdsdmJtRnNVSEp2Y0dWeWRHbGxjeWM3WEc0Z0lDQWdJQ0FnSUNBZ0pHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ1BTQnBkQzVsY25KVFkyaGxiV0ZRWVhSb0lDc2dKeTloWkdScGRHbHZibUZzVUhKdmNHVnlkR2xsY3ljN1hHNGdJQ0FnSUNBZ0lDQWdKR2wwTG1WeWNtOXlVR0YwYUNBOUlHbDBMbTl3ZEhNdVgyVnljbTl5UkdGMFlWQmhkR2hRY205d1pYSjBlU0EvSUdsMExtVnljbTl5VUdGMGFDQTZJR2wwTG5WMGFXd3VaMlYwVUdGMGFFVjRjSElvYVhRdVpYSnliM0pRWVhSb0xDQWthMlY1TENCcGRDNXZjSFJ6TG1wemIyNVFiMmx1ZEdWeWN5azdYRzRnSUNBZ0lDQWdJQ0FnZG1GeUlDUndZWE56UkdGMFlTQTlJQ1JrWVhSaElDc2dKMXNuSUNzZ0pHdGxlU0FySUNkZEp6dGNiaUFnSUNBZ0lDQWdJQ0FrYVhRdVpHRjBZVkJoZEdoQmNuSmJKR1JoZEdGT2VIUmRJRDBnSkd0bGVUdGNiaUFnSUNBZ0lDQWdJQ0IyWVhJZ0pHTnZaR1VnUFNCcGRDNTJZV3hwWkdGMFpTZ2thWFFwTzF4dUlDQWdJQ0FnSUNBZ0lDUnBkQzVpWVhObFNXUWdQU0FrWTNWeWNtVnVkRUpoYzJWSlpEdGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb2FYUXVkWFJwYkM1MllYSlBZMk4xY21WdVkyVnpLQ1JqYjJSbExDQWtibVY0ZEVSaGRHRXBJRHdnTWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnSnlBcklDaHBkQzUxZEdsc0xuWmhjbEpsY0d4aFkyVW9KR052WkdVc0lDUnVaWGgwUkdGMFlTd2dKSEJoYzNORVlYUmhLU2tnS3lBbklDYzdYRzRnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUnVaWGgwUkdGMFlTa2dLeUFuSUQwZ0p5QXJJQ2drY0dGemMwUmhkR0VwSUNzZ0p6c2dKeUFySUNna1kyOWtaU2tnS3lBbklDYzdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCcFppQW9JU2NnS3lBb0pHNWxlSFJXWVd4cFpDa2dLeUFuS1NCaWNtVmhhenNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJR2wwTG1WeWNtOXlVR0YwYUNBOUlDUmpkWEp5Wlc1MFJYSnliM0pRWVhSb08xeHVJQ0FnSUgxY2JpQWdJQ0JwWmlBb0pITnZiV1ZRY205d1pYSjBhV1Z6S1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSUgwZ0lDYzdYRzRnSUNBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2duSUNzZ0tDUnVaWGgwVm1Gc2FXUXBJQ3NnSnlrZ2V5QW5PMXh1SUNBZ0lDQWdKR05zYjNOcGJtZENjbUZqWlhNZ0t6MGdKMzBuTzF4dUlDQWdJSDFjYmlBZ2ZWeHVJQ0IyWVhJZ0pIVnpaVVJsWm1GMWJIUnpJRDBnYVhRdWIzQjBjeTUxYzJWRVpXWmhkV3gwY3lBbUppQWhhWFF1WTI5dGNHOXphWFJsVW5Wc1pUdGNiaUFnYVdZZ0tDUnpZMmhsYldGTFpYbHpMbXhsYm1kMGFDa2dlMXh1SUNBZ0lIWmhjaUJoY25JMElEMGdKSE5qYUdWdFlVdGxlWE03WEc0Z0lDQWdhV1lnS0dGeWNqUXBJSHRjYmlBZ0lDQWdJSFpoY2lBa2NISnZjR1Z5ZEhsTFpYa3NJR2swSUQwZ0xURXNYRzRnSUNBZ0lDQWdJR3cwSUQwZ1lYSnlOQzVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJQ0FnZDJocGJHVWdLR2swSUR3Z2JEUXBJSHRjYmlBZ0lDQWdJQ0FnSkhCeWIzQmxjblI1UzJWNUlEMGdZWEp5TkZ0cE5DQXJQU0F4WFR0Y2JpQWdJQ0FnSUNBZ2RtRnlJQ1J6WTJnZ1BTQWtjMk5vWlcxaFd5UndjbTl3WlhKMGVVdGxlVjA3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBkQzUxZEdsc0xuTmphR1Z0WVVoaGMxSjFiR1Z6S0NSelkyZ3NJR2wwTGxKVlRFVlRMbUZzYkNrcElIdGNiaUFnSUNBZ0lDQWdJQ0IyWVhJZ0pIQnliM0FnUFNCcGRDNTFkR2xzTG1kbGRGQnliM0JsY25SNUtDUndjbTl3WlhKMGVVdGxlU2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWtjR0Z6YzBSaGRHRWdQU0FrWkdGMFlTQXJJQ1J3Y205d0xGeHVJQ0FnSUNBZ0lDQWdJQ0FnSkdoaGMwUmxabUYxYkhRZ1BTQWtkWE5sUkdWbVlYVnNkSE1nSmlZZ0pITmphQzVrWldaaGRXeDBJQ0U5UFNCMWJtUmxabWx1WldRN1hHNGdJQ0FnSUNBZ0lDQWdKR2wwTG5OamFHVnRZU0E5SUNSelkyZzdYRzRnSUNBZ0lDQWdJQ0FnSkdsMExuTmphR1Z0WVZCaGRHZ2dQU0FrYzJOb1pXMWhVR0YwYUNBcklDUndjbTl3TzF4dUlDQWdJQ0FnSUNBZ0lDUnBkQzVsY25KVFkyaGxiV0ZRWVhSb0lEMGdKR1Z5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lCcGRDNTFkR2xzTG1WelkyRndaVVp5WVdkdFpXNTBLQ1J3Y205d1pYSjBlVXRsZVNrN1hHNGdJQ0FnSUNBZ0lDQWdKR2wwTG1WeWNtOXlVR0YwYUNBOUlHbDBMblYwYVd3dVoyVjBVR0YwYUNocGRDNWxjbkp2Y2xCaGRHZ3NJQ1J3Y205d1pYSjBlVXRsZVN3Z2FYUXViM0IwY3k1cWMyOXVVRzlwYm5SbGNuTXBPMXh1SUNBZ0lDQWdJQ0FnSUNScGRDNWtZWFJoVUdGMGFFRnljbHNrWkdGMFlVNTRkRjBnUFNCcGRDNTFkR2xzTG5SdlVYVnZkR1ZrVTNSeWFXNW5LQ1J3Y205d1pYSjBlVXRsZVNrN1hHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUNSamIyUmxJRDBnYVhRdWRtRnNhV1JoZEdVb0pHbDBLVHRjYmlBZ0lDQWdJQ0FnSUNBa2FYUXVZbUZ6WlVsa0lEMGdKR04xY25KbGJuUkNZWE5sU1dRN1hHNGdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExuVjBhV3d1ZG1GeVQyTmpkWEpsYm1ObGN5Z2tZMjlrWlN3Z0pHNWxlSFJFWVhSaEtTQThJRElwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1JqYjJSbElEMGdhWFF1ZFhScGJDNTJZWEpTWlhCc1lXTmxLQ1JqYjJSbExDQWtibVY0ZEVSaGRHRXNJQ1J3WVhOelJHRjBZU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnSkhWelpVUmhkR0VnUFNBa2NHRnpjMFJoZEdFN1hHNGdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQWtkWE5sUkdGMFlTQTlJQ1J1WlhoMFJHRjBZVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUnVaWGgwUkdGMFlTa2dLeUFuSUQwZ0p5QXJJQ2drY0dGemMwUmhkR0VwSUNzZ0p6c2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0NSb1lYTkVaV1poZFd4MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1JqYjJSbEtTQXJJQ2NnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDUnlaWEYxYVhKbFpFaGhjMmdnSmlZZ0pISmxjWFZwY21Wa1NHRnphRnNrY0hKdmNHVnlkSGxMWlhsZEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2dnSnlBcklDZ2tkWE5sUkdGMFlTa2dLeUFuSUQwOVBTQjFibVJsWm1sdVpXUWdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NSdmQyNVFjbTl3WlhKMGFXVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZkh3Z0lTQlBZbXBsWTNRdWNISnZkRzkwZVhCbExtaGhjMDkzYmxCeWIzQmxjblI1TG1OaGJHd29KeUFySUNna1pHRjBZU2tnS3lBbkxDQmNYQ2NuSUNzZ0tHbDBMblYwYVd3dVpYTmpZWEJsVVhWdmRHVnpLQ1J3Y205d1pYSjBlVXRsZVNrcElDc2dKMXhjSnlrZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlrZ2V5QW5JQ3NnS0NSdVpYaDBWbUZzYVdRcElDc2dKeUE5SUdaaGJITmxPeUFuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ0pHTjFjbkpsYm5SRmNuSnZjbEJoZEdnZ1BTQnBkQzVsY25KdmNsQmhkR2dzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdOMWNuSkZjbkpUWTJobGJXRlFZWFJvSUQwZ0pHVnljbE5qYUdWdFlWQmhkR2dzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkcxcGMzTnBibWRRY205d1pYSjBlU0E5SUdsMExuVjBhV3d1WlhOallYQmxVWFZ2ZEdWektDUndjbTl3WlhKMGVVdGxlU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TGw5bGNuSnZja1JoZEdGUVlYUm9VSEp2Y0dWeWRIa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEM1bGNuSnZjbEJoZEdnZ1BTQnBkQzUxZEdsc0xtZGxkRkJoZEdnb0pHTjFjbkpsYm5SRmNuSnZjbEJoZEdnc0lDUndjbTl3WlhKMGVVdGxlU3dnYVhRdWIzQjBjeTVxYzI5dVVHOXBiblJsY25NcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNSbGNuSlRZMmhsYldGUVlYUm9JRDBnYVhRdVpYSnlVMk5vWlcxaFVHRjBhQ0FySUNjdmNtVnhkV2x5WldRbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdKQ1J2ZFhSVGRHRmpheUE5SUNRa2IzVjBVM1JoWTJzZ2ZId2dXMTA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ1FrYjNWMFUzUmhZMnN1Y0hWemFDaHZkWFFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ1BTQW5KenNnTHlvZ2FYTjBZVzVpZFd3Z2FXZHViM0psSUdWc2MyVWdLaTljYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtTnlaV0YwWlVWeWNtOXljeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0ozSmxjWFZwY21Wa0p5a2dLeUFuWEZ3bklDd2daR0YwWVZCaGRHZzZJQ2hrWVhSaFVHRjBhQ0I4ZkNCY1hDZGNYQ2NwSUNzZ0p5QXJJQ2hwZEM1bGNuSnZjbEJoZEdncElDc2dKeUFzSUhOamFHVnRZVkJoZEdnNklDY2dLeUFvYVhRdWRYUnBiQzUwYjFGMWIzUmxaRk4wY21sdVp5Z2taWEp5VTJOb1pXMWhVR0YwYUNrcElDc2dKeUFzSUhCaGNtRnRjem9nZXlCdGFYTnphVzVuVUhKdmNHVnlkSGs2SUZ4Y0p5Y2dLeUFvSkcxcGMzTnBibWRRY205d1pYSjBlU2tnS3lBblhGd25JSDBnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1YjNCMGN5NXRaWE56WVdkbGN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUN3Z2JXVnpjMkZuWlRvZ1hGd25KenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxsOWxjbkp2Y2tSaGRHRlFZWFJvVUhKdmNHVnlkSGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDZHBjeUJoSUhKbGNYVnBjbVZrSUhCeWIzQmxjblI1Snp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5jMmh2ZFd4a0lHaGhkbVVnY21WeGRXbHlaV1FnY0hKdmNHVnlkSGtnWEZ4Y1hGeGNKeWNnS3lBb0pHMXBjM05wYm1kUWNtOXdaWEowZVNrZ0t5QW5YRnhjWEZ4Y0p5YzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSjF4Y0p5QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QXNJSE5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2drYzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnY0dGeVpXNTBVMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLR2wwTG5OamFHVnRZVkJoZEdncElDc2dKeUFzSUdSaGRHRTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI5SUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZTMwZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdYMTlsY25JZ1BTQnZkWFE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBOUlDUWtiM1YwVTNSaFkyc3VjRzl3S0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwZEM1aGMzbHVZeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RHaHliM2NnYm1WM0lGWmhiR2xrWVhScGIyNUZjbkp2Y2loYkp5QXJJQ2hmWDJWeWNpa2dLeUFuWFNrN0lDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFpoYkdsa1lYUmxMbVZ5Y205eWN5QTlJRnNuSUNzZ0tGOWZaWEp5S1NBcklDZGRPeUJ5WlhSMWNtNGdabUZzYzJVN0lDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUJsY25JZ1BTQW5JQ3NnS0Y5ZlpYSnlLU0FySUNjN0lDQnBaaUFvZGtWeWNtOXljeUE5UFQwZ2JuVnNiQ2tnZGtWeWNtOXljeUE5SUZ0bGNuSmRPeUJsYkhObElIWkZjbkp2Y25NdWNIVnphQ2hsY25JcE95Qmxjbkp2Y25Nckt6c2dKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlDUmpkWEp5UlhKeVUyTm9aVzFoVUdGMGFEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2FYUXVaWEp5YjNKUVlYUm9JRDBnSkdOMWNuSmxiblJGY25KdmNsQmhkR2c3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSDBnWld4elpTQjdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9KR0p5WldGclQyNUZjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2dnSnlBcklDZ2tkWE5sUkdGMFlTa2dLeUFuSUQwOVBTQjFibVJsWm1sdVpXUWdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pHOTNibEJ5YjNCbGNuUnBaWE1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIeDhJQ0VnVDJKcVpXTjBMbkJ5YjNSdmRIbHdaUzVvWVhOUGQyNVFjbTl3WlhKMGVTNWpZV3hzS0NjZ0t5QW9KR1JoZEdFcElDc2dKeXdnWEZ3bkp5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna2NISnZjR1Z5ZEhsTFpYa3BLU0FySUNkY1hDY3BJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuS1NCN0lDY2dLeUFvSkc1bGVIUldZV3hwWkNrZ0t5QW5JRDBnZEhKMVpUc2dmU0JsYkhObElIc2dKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QnBaaUFvSnlBcklDZ2tkWE5sUkdGMFlTa2dLeUFuSUNFOVBTQjFibVJsWm1sdVpXUWdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pHOTNibEJ5YjNCbGNuUnBaWE1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDWW1JQ0FnVDJKcVpXTjBMbkJ5YjNSdmRIbHdaUzVvWVhOUGQyNVFjbTl3WlhKMGVTNWpZV3hzS0NjZ0t5QW9KR1JoZEdFcElDc2dKeXdnWEZ3bkp5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna2NISnZjR1Z5ZEhsTFpYa3BLU0FySUNkY1hDY3BJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNrZ2V5QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFuSUNzZ0tDUmpiMlJsS1NBcklDY2dmU0FuTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JwWmlBb0pHSnlaV0ZyVDI1RmNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2duSUNzZ0tDUnVaWGgwVm1Gc2FXUXBJQ3NnSnlrZ2V5QW5PMXh1SUNBZ0lDQWdJQ0FnSUNSamJHOXphVzVuUW5KaFkyVnpJQ3M5SUNkOUp6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dUlDQnBaaUFvSkhCUWNtOXdaWEowZVV0bGVYTXViR1Z1WjNSb0tTQjdYRzRnSUNBZ2RtRnlJR0Z5Y2pVZ1BTQWtjRkJ5YjNCbGNuUjVTMlY1Y3p0Y2JpQWdJQ0JwWmlBb1lYSnlOU2tnZTF4dUlDQWdJQ0FnZG1GeUlDUndVSEp2Y0dWeWRIa3NJR2sxSUQwZ0xURXNYRzRnSUNBZ0lDQWdJR3cxSUQwZ1lYSnlOUzVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJQ0FnZDJocGJHVWdLR2sxSUR3Z2JEVXBJSHRjYmlBZ0lDQWdJQ0FnSkhCUWNtOXdaWEowZVNBOUlHRnljalZiYVRVZ0t6MGdNVjA3WEc0Z0lDQWdJQ0FnSUhaaGNpQWtjMk5vSUQwZ0pIQlFjbTl3WlhKMGFXVnpXeVJ3VUhKdmNHVnlkSGxkTzF4dUlDQWdJQ0FnSUNCcFppQW9hWFF1ZFhScGJDNXpZMmhsYldGSVlYTlNkV3hsY3lna2MyTm9MQ0JwZEM1U1ZVeEZVeTVoYkd3cEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSkdsMExuTmphR1Z0WVNBOUlDUnpZMmc3WEc0Z0lDQWdJQ0FnSUNBZ0pHbDBMbk5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnSnk1d1lYUjBaWEp1VUhKdmNHVnlkR2xsY3ljZ0t5QnBkQzUxZEdsc0xtZGxkRkJ5YjNCbGNuUjVLQ1J3VUhKdmNHVnlkSGtwTzF4dUlDQWdJQ0FnSUNBZ0lDUnBkQzVsY25KVFkyaGxiV0ZRWVhSb0lEMGdhWFF1WlhKeVUyTm9aVzFoVUdGMGFDQXJJQ2N2Y0dGMGRHVnlibEJ5YjNCbGNuUnBaWE12SnlBcklHbDBMblYwYVd3dVpYTmpZWEJsUm5KaFoyMWxiblFvSkhCUWNtOXdaWEowZVNrN1hHNGdJQ0FnSUNBZ0lDQWdhV1lnS0NSdmQyNVFjbTl3WlhKMGFXVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0NSa1lYUmhVSEp2Y0dWeWRHbGxjeWtnS3lBbklEMGdKeUFySUNna1pHRjBZVkJ5YjNCbGNuUnBaWE1wSUNzZ0p5QjhmQ0JQWW1wbFkzUXVhMlY1Y3lnbklDc2dLQ1JrWVhSaEtTQXJJQ2NwT3lCbWIzSWdLSFpoY2lBbklDc2dLQ1JwWkhncElDc2dKejB3T3lBbklDc2dLQ1JwWkhncElDc2dKenduSUNzZ0tDUmtZWFJoVUhKdmNHVnlkR2xsY3lrZ0t5QW5MbXhsYm1kMGFEc2dKeUFySUNna2FXUjRLU0FySUNjckt5a2dleUIyWVhJZ0p5QXJJQ2drYTJWNUtTQXJJQ2NnUFNBbklDc2dLQ1JrWVhSaFVISnZjR1Z5ZEdsbGN5a2dLeUFuV3ljZ0t5QW9KR2xrZUNrZ0t5QW5YVHNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnWm05eUlDaDJZWElnSnlBcklDZ2thMlY1S1NBcklDY2dhVzRnSnlBcklDZ2taR0YwWVNrZ0t5QW5LU0I3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDZ25JQ3NnS0dsMExuVnpaVkJoZEhSbGNtNG9KSEJRY205d1pYSjBlU2twSUNzZ0p5NTBaWE4wS0NjZ0t5QW9KR3RsZVNrZ0t5QW5LU2tnZXlBbk8xeHVJQ0FnSUNBZ0lDQWdJQ1JwZEM1bGNuSnZjbEJoZEdnZ1BTQnBkQzUxZEdsc0xtZGxkRkJoZEdoRmVIQnlLR2wwTG1WeWNtOXlVR0YwYUN3Z0pHdGxlU3dnYVhRdWIzQjBjeTVxYzI5dVVHOXBiblJsY25NcE8xeHVJQ0FnSUNBZ0lDQWdJSFpoY2lBa2NHRnpjMFJoZEdFZ1BTQWtaR0YwWVNBcklDZGJKeUFySUNSclpYa2dLeUFuWFNjN1hHNGdJQ0FnSUNBZ0lDQWdKR2wwTG1SaGRHRlFZWFJvUVhKeVd5UmtZWFJoVG5oMFhTQTlJQ1JyWlhrN1hHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUNSamIyUmxJRDBnYVhRdWRtRnNhV1JoZEdVb0pHbDBLVHRjYmlBZ0lDQWdJQ0FnSUNBa2FYUXVZbUZ6WlVsa0lEMGdKR04xY25KbGJuUkNZWE5sU1dRN1hHNGdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExuVjBhV3d1ZG1GeVQyTmpkWEpsYm1ObGN5Z2tZMjlrWlN3Z0pHNWxlSFJFWVhSaEtTQThJRElwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ2NnS3lBb2FYUXVkWFJwYkM1MllYSlNaWEJzWVdObEtDUmpiMlJsTENBa2JtVjRkRVJoZEdFc0lDUndZWE56UkdGMFlTa3BJQ3NnSnlBbk8xeHVJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCMllYSWdKeUFySUNna2JtVjRkRVJoZEdFcElDc2dKeUE5SUNjZ0t5QW9KSEJoYzNORVlYUmhLU0FySUNjN0lDY2dLeUFvSkdOdlpHVXBJQ3NnSnlBbk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCcFppQW9KR0p5WldGclQyNUZjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDRW5JQ3NnS0NSdVpYaDBWbUZzYVdRcElDc2dKeWtnWW5KbFlXczdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSDBnSnp0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ1pXeHpaU0FuSUNzZ0tDUnVaWGgwVm1Gc2FXUXBJQ3NnSnlBOUlIUnlkV1U3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUgwZ0lDYzdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tDUmljbVZoYTA5dVJYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnbklDc2dLQ1J1WlhoMFZtRnNhV1FwSUNzZ0p5a2dleUFuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdKR05zYjNOcGJtZENjbUZqWlhNZ0t6MGdKMzBuTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnZlZ4dUlDQnBaaUFvYVhRdWIzQjBjeTV3WVhSMFpYSnVSM0p2ZFhCeklDWW1JQ1J3WjFCeWIzQmxjblI1UzJWNWN5NXNaVzVuZEdncElIdGNiaUFnSUNCMllYSWdZWEp5TmlBOUlDUndaMUJ5YjNCbGNuUjVTMlY1Y3p0Y2JpQWdJQ0JwWmlBb1lYSnlOaWtnZTF4dUlDQWdJQ0FnZG1GeUlDUndaMUJ5YjNCbGNuUjVMQ0JwTmlBOUlDMHhMRnh1SUNBZ0lDQWdJQ0JzTmlBOUlHRnljall1YkdWdVozUm9JQzBnTVR0Y2JpQWdJQ0FnSUhkb2FXeGxJQ2hwTmlBOElHdzJLU0I3WEc0Z0lDQWdJQ0FnSUNSd1oxQnliM0JsY25SNUlEMGdZWEp5Tmx0cE5pQXJQU0F4WFR0Y2JpQWdJQ0FnSUNBZ2RtRnlJQ1J3WjFOamFHVnRZU0E5SUNSd1oxQnliM0JsY25ScFpYTmJKSEJuVUhKdmNHVnlkSGxkTEZ4dUlDQWdJQ0FnSUNBZ0lDUnpZMmdnUFNBa2NHZFRZMmhsYldFdWMyTm9aVzFoTzF4dUlDQWdJQ0FnSUNCcFppQW9hWFF1ZFhScGJDNXpZMmhsYldGSVlYTlNkV3hsY3lna2MyTm9MQ0JwZEM1U1ZVeEZVeTVoYkd3cEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSkdsMExuTmphR1Z0WVNBOUlDUnpZMmc3WEc0Z0lDQWdJQ0FnSUNBZ0pHbDBMbk5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnSnk1d1lYUjBaWEp1UjNKdmRYQnpKeUFySUdsMExuVjBhV3d1WjJWMFVISnZjR1Z5ZEhrb0pIQm5VSEp2Y0dWeWRIa3BJQ3NnSnk1elkyaGxiV0VuTzF4dUlDQWdJQ0FnSUNBZ0lDUnBkQzVsY25KVFkyaGxiV0ZRWVhSb0lEMGdhWFF1WlhKeVUyTm9aVzFoVUdGMGFDQXJJQ2N2Y0dGMGRHVnlia2R5YjNWd2N5OG5JQ3NnYVhRdWRYUnBiQzVsYzJOaGNHVkdjbUZuYldWdWRDZ2tjR2RRY205d1pYSjBlU2tnS3lBbkwzTmphR1Z0WVNjN1hHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUhCblVISnZjRU52ZFc1MEp5QXJJQ2drYkhac0tTQXJJQ2NnUFNBd095QWdKenRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9KRzkzYmxCeWIzQmxjblJwWlhNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KR1JoZEdGUWNtOXdaWEowYVdWektTQXJJQ2NnUFNBbklDc2dLQ1JrWVhSaFVISnZjR1Z5ZEdsbGN5a2dLeUFuSUh4OElFOWlhbVZqZEM1clpYbHpLQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5azdJR1p2Y2lBb2RtRnlJQ2NnS3lBb0pHbGtlQ2tnS3lBblBUQTdJQ2NnS3lBb0pHbGtlQ2tnS3lBblBDY2dLeUFvSkdSaGRHRlFjbTl3WlhKMGFXVnpLU0FySUNjdWJHVnVaM1JvT3lBbklDc2dLQ1JwWkhncElDc2dKeXNyS1NCN0lIWmhjaUFuSUNzZ0tDUnJaWGtwSUNzZ0p5QTlJQ2NnS3lBb0pHUmhkR0ZRY205d1pYSjBhV1Z6S1NBcklDZGJKeUFySUNna2FXUjRLU0FySUNkZE95QW5PMXh1SUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5Qm1iM0lnS0haaGNpQW5JQ3NnS0NSclpYa3BJQ3NnSnlCcGJpQW5JQ3NnS0NSa1lYUmhLU0FySUNjcElIc2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0NjZ0t5QW9hWFF1ZFhObFVHRjBkR1Z5Ymlna2NHZFFjbTl3WlhKMGVTa3BJQ3NnSnk1MFpYTjBLQ2NnS3lBb0pHdGxlU2tnS3lBbktTa2dleUJ3WjFCeWIzQkRiM1Z1ZENjZ0t5QW9KR3gyYkNrZ0t5QW5LeXM3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdKR2wwTG1WeWNtOXlVR0YwYUNBOUlHbDBMblYwYVd3dVoyVjBVR0YwYUVWNGNISW9hWFF1WlhKeWIzSlFZWFJvTENBa2EyVjVMQ0JwZEM1dmNIUnpMbXB6YjI1UWIybHVkR1Z5Y3lrN1hHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUNSd1lYTnpSR0YwWVNBOUlDUmtZWFJoSUNzZ0oxc25JQ3NnSkd0bGVTQXJJQ2RkSnp0Y2JpQWdJQ0FnSUNBZ0lDQWthWFF1WkdGMFlWQmhkR2hCY25KYkpHUmhkR0ZPZUhSZElEMGdKR3RsZVR0Y2JpQWdJQ0FnSUNBZ0lDQjJZWElnSkdOdlpHVWdQU0JwZEM1MllXeHBaR0YwWlNna2FYUXBPMXh1SUNBZ0lDQWdJQ0FnSUNScGRDNWlZWE5sU1dRZ1BTQWtZM1Z5Y21WdWRFSmhjMlZKWkR0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvYVhRdWRYUnBiQzUyWVhKUFkyTjFjbVZ1WTJWektDUmpiMlJsTENBa2JtVjRkRVJoZEdFcElEd2dNaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dKeUFySUNocGRDNTFkR2xzTG5aaGNsSmxjR3hoWTJVb0pHTnZaR1VzSUNSdVpYaDBSR0YwWVN3Z0pIQmhjM05FWVhSaEtTa2dLeUFuSUNjN1hHNGdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQW5JQ3NnS0NSdVpYaDBSR0YwWVNrZ0t5QW5JRDBnSnlBcklDZ2tjR0Z6YzBSaGRHRXBJQ3NnSnpzZ0p5QXJJQ2drWTI5a1pTa2dLeUFuSUNjN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUdsbUlDZ2tZbkpsWVd0UGJrVnljbTl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb0lTY2dLeUFvSkc1bGVIUldZV3hwWkNrZ0t5QW5LU0JpY21WaGF6c2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dmU0FuTzF4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCbGJITmxJQ2NnS3lBb0pHNWxlSFJXWVd4cFpDa2dLeUFuSUQwZ2RISjFaVHNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZlNBZ0p6dGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb0pHSnlaV0ZyVDI1RmNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0NjZ0t5QW9KRzVsZUhSV1lXeHBaQ2tnS3lBbktTQjdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWtZMnh2YzJsdVowSnlZV05sY3lBclBTQW5mU2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJSFpoY2lBa2NHZE5hVzRnUFNBa2NHZFRZMmhsYldFdWJXbHVhVzExYlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1J3WjAxaGVDQTlJQ1J3WjFOamFHVnRZUzV0WVhocGJYVnRPMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDZ2tjR2ROYVc0Z0lUMDlJSFZ1WkdWbWFXNWxaQ0I4ZkNBa2NHZE5ZWGdnSVQwOUlIVnVaR1ZtYVc1bFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJQ2NnS3lBb0pIWmhiR2xrS1NBcklDY2dQU0IwY25WbE95QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJQ1JqZFhKeVJYSnlVMk5vWlcxaFVHRjBhQ0E5SUNSbGNuSlRZMmhsYldGUVlYUm9PMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ1J3WjAxcGJpQWhQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQWtiR2x0YVhRZ1BTQWtjR2ROYVc0c1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pISmxZWE52YmlBOUlDZHRhVzVwYlhWdEp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtiVzl5WlU5eVRHVnpjeUE5SUNkc1pYTnpKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dKeUFySUNna2RtRnNhV1FwSUNzZ0p5QTlJSEJuVUhKdmNFTnZkVzUwSnlBcklDZ2tiSFpzS1NBcklDY2dQajBnSnlBcklDZ2tjR2ROYVc0cElDc2dKenNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdWeWNsTmphR1Z0WVZCaGRHZ2dQU0JwZEM1bGNuSlRZMmhsYldGUVlYUm9JQ3NnSnk5d1lYUjBaWEp1UjNKdmRYQnpMMjFwYm1sdGRXMG5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QWdhV1lnS0NFbklDc2dLQ1IyWVd4cFpDa2dLeUFuS1NCN0lDQWdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUNRa2IzVjBVM1JoWTJzZ1BTQWtKRzkxZEZOMFlXTnJJSHg4SUZ0ZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBa0pHOTFkRk4wWVdOckxuQjFjMmdvYjNWMEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJRDBnSnljN0lDOHFJR2x6ZEdGdVluVnNJR2xuYm05eVpTQmxiSE5sSUNvdlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzVqY21WaGRHVkZjbkp2Y25NZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dleUJyWlhsM2IzSmtPaUJjWENjbklDc2dLQ2R3WVhSMFpYSnVSM0p2ZFhCekp5a2dLeUFuWEZ3bklDd2daR0YwWVZCaGRHZzZJQ2hrWVhSaFVHRjBhQ0I4ZkNCY1hDZGNYQ2NwSUNzZ0p5QXJJQ2hwZEM1bGNuSnZjbEJoZEdncElDc2dKeUFzSUhOamFHVnRZVkJoZEdnNklDY2dLeUFvYVhRdWRYUnBiQzUwYjFGMWIzUmxaRk4wY21sdVp5Z2taWEp5VTJOb1pXMWhVR0YwYUNrcElDc2dKeUFzSUhCaGNtRnRjem9nZXlCeVpXRnpiMjQ2SUZ4Y0p5Y2dLeUFvSkhKbFlYTnZiaWtnS3lBblhGd25MQ0JzYVcxcGREb2dKeUFySUNna2JHbHRhWFFwSUNzZ0p5d2djR0YwZEdWeWJqb2dYRnduSnlBcklDaHBkQzUxZEdsc0xtVnpZMkZ3WlZGMWIzUmxjeWdrY0dkUWNtOXdaWEowZVNrcElDc2dKMXhjSnlCOUlDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtOXdkSE11YldWemMyRm5aWE1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QXNJRzFsYzNOaFoyVTZJRnhjSjNOb2IzVnNaQ0JPVDFRZ2FHRjJaU0FuSUNzZ0tDUnRiM0psVDNKTVpYTnpLU0FySUNjZ2RHaGhiaUFuSUNzZ0tDUnNhVzFwZENrZ0t5QW5JSEJ5YjNCbGNuUnBaWE1nYldGMFkyaHBibWNnY0dGMGRHVnliaUJjSWljZ0t5QW9hWFF1ZFhScGJDNWxjMk5oY0dWUmRXOTBaWE1vSkhCblVISnZjR1Z5ZEhrcEtTQXJJQ2RjSWx4Y0p5QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QXNJSE5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2drYzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnY0dGeVpXNTBVMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLR2wwTG5OamFHVnRZVkJoZEdncElDc2dKeUFzSUdSaGRHRTZJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI5SUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZTMwZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdYMTlsY25JZ1BTQnZkWFE3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBOUlDUWtiM1YwVTNSaFkyc3VjRzl3S0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwZEM1aGMzbHVZeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RHaHliM2NnYm1WM0lGWmhiR2xrWVhScGIyNUZjbkp2Y2loYkp5QXJJQ2hmWDJWeWNpa2dLeUFuWFNrN0lDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFpoYkdsa1lYUmxMbVZ5Y205eWN5QTlJRnNuSUNzZ0tGOWZaWEp5S1NBcklDZGRPeUJ5WlhSMWNtNGdabUZzYzJVN0lDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUJsY25JZ1BTQW5JQ3NnS0Y5ZlpYSnlLU0FySUNjN0lDQnBaaUFvZGtWeWNtOXljeUE5UFQwZ2JuVnNiQ2tnZGtWeWNtOXljeUE5SUZ0bGNuSmRPeUJsYkhObElIWkZjbkp2Y25NdWNIVnphQ2hsY25JcE95Qmxjbkp2Y25Nckt6c2dKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjlJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna2NHZE5ZWGdnSVQwOUlIVnVaR1ZtYVc1bFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JR1ZzYzJVZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NSd1owMWhlQ0FoUFQwZ2RXNWtaV1pwYm1Wa0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUFrYkdsdGFYUWdQU0FrY0dkTllYZ3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKSEpsWVhOdmJpQTlJQ2R0WVhocGJYVnRKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrYlc5eVpVOXlUR1Z6Y3lBOUlDZHRiM0psSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnSnlBcklDZ2tkbUZzYVdRcElDc2dKeUE5SUhCblVISnZjRU52ZFc1MEp5QXJJQ2drYkhac0tTQXJJQ2NnUEQwZ0p5QXJJQ2drY0dkTllYZ3BJQ3NnSnpzZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0pHVnljbE5qYUdWdFlWQmhkR2dnUFNCcGRDNWxjbkpUWTJobGJXRlFZWFJvSUNzZ0p5OXdZWFIwWlhKdVIzSnZkWEJ6TDIxaGVHbHRkVzBuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFnYVdZZ0tDRW5JQ3NnS0NSMllXeHBaQ2tnS3lBbktTQjdJQ0FnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlDUWtiM1YwVTNSaFkyc2dQU0FrSkc5MWRGTjBZV05ySUh4OElGdGRPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWtKRzkxZEZOMFlXTnJMbkIxYzJnb2IzVjBLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUQwZ0p5YzdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JsYkhObElDb3ZYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hwZEM1amNtVmhkR1ZGY25KdmNuTWdJVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZXlCclpYbDNiM0prT2lCY1hDY25JQ3NnS0Nkd1lYUjBaWEp1UjNKdmRYQnpKeWtnS3lBblhGd25JQ3dnWkdGMFlWQmhkR2c2SUNoa1lYUmhVR0YwYUNCOGZDQmNYQ2RjWENjcElDc2dKeUFySUNocGRDNWxjbkp2Y2xCaGRHZ3BJQ3NnSnlBc0lITmphR1Z0WVZCaGRHZzZJQ2NnS3lBb2FYUXVkWFJwYkM1MGIxRjFiM1JsWkZOMGNtbHVaeWdrWlhKeVUyTm9aVzFoVUdGMGFDa3BJQ3NnSnlBc0lIQmhjbUZ0Y3pvZ2V5QnlaV0Z6YjI0NklGeGNKeWNnS3lBb0pISmxZWE52YmlrZ0t5QW5YRnduTENCc2FXMXBkRG9nSnlBcklDZ2tiR2x0YVhRcElDc2dKeXdnY0dGMGRHVnliam9nWEZ3bkp5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna2NHZFFjbTl3WlhKMGVTa3BJQ3NnSjF4Y0p5QjlJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXVnpjMkZuWlhNZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFzSUcxbGMzTmhaMlU2SUZ4Y0ozTm9iM1ZzWkNCT1QxUWdhR0YyWlNBbklDc2dLQ1J0YjNKbFQzSk1aWE56S1NBcklDY2dkR2hoYmlBbklDc2dLQ1JzYVcxcGRDa2dLeUFuSUhCeWIzQmxjblJwWlhNZ2JXRjBZMmhwYm1jZ2NHRjBkR1Z5YmlCY0lpY2dLeUFvYVhRdWRYUnBiQzVsYzJOaGNHVlJkVzkwWlhNb0pIQm5VSEp2Y0dWeWRIa3BLU0FySUNkY0lseGNKeUFuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1YjNCMGN5NTJaWEppYjNObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFzSUhOamFHVnRZVG9nZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNna2MyTm9aVzFoVUdGMGFDa2dLeUFuSUN3Z2NHRnlaVzUwVTJOb1pXMWhPaUIyWVd4cFpHRjBaUzV6WTJobGJXRW5JQ3NnS0dsMExuTmphR1Z0WVZCaGRHZ3BJQ3NnSnlBc0lHUmhkR0U2SUNjZ0t5QW9KR1JoZEdFcElDc2dKeUFuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2UzMGdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWDE5bGNuSWdQU0J2ZFhRN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQTlJQ1FrYjNWMFUzUmhZMnN1Y0c5d0tDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doYVhRdVkyOXRjRzl6YVhSbFVuVnNaU0FtSmlBa1luSmxZV3RQYmtWeWNtOXlLU0I3SUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCcFppQXFMMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGRDNWhjM2x1WXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dkR2h5YjNjZ2JtVjNJRlpoYkdsa1lYUnBiMjVGY25KdmNpaGJKeUFySUNoZlgyVnljaWtnS3lBblhTazdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhaaGJHbGtZWFJsTG1WeWNtOXljeUE5SUZzbklDc2dLRjlmWlhKeUtTQXJJQ2RkT3lCeVpYUjFjbTRnWm1Gc2MyVTdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFpoY2lCbGNuSWdQU0FuSUNzZ0tGOWZaWEp5S1NBcklDYzdJQ0JwWmlBb2RrVnljbTl5Y3lBOVBUMGdiblZzYkNrZ2RrVnljbTl5Y3lBOUlGdGxjbkpkT3lCbGJITmxJSFpGY25KdmNuTXVjSFZ6YUNobGNuSXBPeUJsY25KdmNuTXJLenNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI5SUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlDUmpkWEp5UlhKeVUyTm9aVzFoVUdGMGFEdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2tZbkpsWVd0UGJrVnljbTl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDZ25JQ3NnS0NSMllXeHBaQ2tnS3lBbktTQjdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ1JqYkc5emFXNW5RbkpoWTJWeklDczlJQ2Q5Snp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMWNiaUFnSUNCOVhHNGdJSDFjYmlBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1JqYkc5emFXNW5RbkpoWTJWektTQXJJQ2NnYVdZZ0tDY2dLeUFvSkdWeWNuTXBJQ3NnSnlBOVBTQmxjbkp2Y25NcElIc25PMXh1SUNCOVhHNGdJRzkxZENBOUlHbDBMblYwYVd3dVkyeGxZVzVWY0VOdlpHVW9iM1YwS1R0Y2JpQWdjbVYwZFhKdUlHOTFkRHRjYm4xY2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvcHJvcGVydGllcy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvcHJvcGVydHlOYW1lcy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9wcm9wZXJ0eU5hbWVzLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZW5lcmF0ZV9wcm9wZXJ0eU5hbWVzKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkZXJycyA9ICdlcnJzX18nICsgJGx2bDtcXFxcbiAgdmFyICRpdCA9IGl0LnV0aWwuY29weShpdCk7XFxcXG4gIHZhciAkY2xvc2luZ0JyYWNlcyA9ICcnO1xcXFxuICAkaXQubGV2ZWwrKztcXFxcbiAgdmFyICRuZXh0VmFsaWQgPSAndmFsaWQnICsgJGl0LmxldmVsO1xcXFxuICBpZiAoaXQudXRpbC5zY2hlbWFIYXNSdWxlcygkc2NoZW1hLCBpdC5SVUxFUy5hbGwpKSB7XFxcXG4gICAgJGl0LnNjaGVtYSA9ICRzY2hlbWE7XFxcXG4gICAgJGl0LnNjaGVtYVBhdGggPSAkc2NoZW1hUGF0aDtcXFxcbiAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRlcnJTY2hlbWFQYXRoO1xcXFxuICAgIHZhciAka2V5ID0gJ2tleScgKyAkbHZsLFxcXFxuICAgICAgJGlkeCA9ICdpZHgnICsgJGx2bCxcXFxcbiAgICAgICRpID0gJ2knICsgJGx2bCxcXFxcbiAgICAgICRpbnZhbGlkTmFtZSA9ICdcXFxcXFxcXCcgKyAnICsgJGtleSArICcgKyBcXFxcXFxcXCcnLFxcXFxuICAgICAgJGRhdGFOeHQgPSAkaXQuZGF0YUxldmVsID0gaXQuZGF0YUxldmVsICsgMSxcXFxcbiAgICAgICRuZXh0RGF0YSA9ICdkYXRhJyArICRkYXRhTnh0LFxcXFxuICAgICAgJGRhdGFQcm9wZXJ0aWVzID0gJ2RhdGFQcm9wZXJ0aWVzJyArICRsdmwsXFxcXG4gICAgICAkb3duUHJvcGVydGllcyA9IGl0Lm9wdHMub3duUHJvcGVydGllcyxcXFxcbiAgICAgICRjdXJyZW50QmFzZUlkID0gaXQuYmFzZUlkO1xcXFxuICAgIG91dCArPSAnIHZhciAnICsgKCRlcnJzKSArICcgPSBlcnJvcnM7ICc7XFxcXG4gICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YXIgJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyA9IHVuZGVmaW5lZDsgJztcXFxcbiAgICB9XFxcXG4gICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCRkYXRhUHJvcGVydGllcykgKyAnID0gJyArICgkZGF0YVByb3BlcnRpZXMpICsgJyB8fCBPYmplY3Qua2V5cygnICsgKCRkYXRhKSArICcpOyBmb3IgKHZhciAnICsgKCRpZHgpICsgJz0wOyAnICsgKCRpZHgpICsgJzwnICsgKCRkYXRhUHJvcGVydGllcykgKyAnLmxlbmd0aDsgJyArICgkaWR4KSArICcrKykgeyB2YXIgJyArICgka2V5KSArICcgPSAnICsgKCRkYXRhUHJvcGVydGllcykgKyAnWycgKyAoJGlkeCkgKyAnXTsgJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcgZm9yICh2YXIgJyArICgka2V5KSArICcgaW4gJyArICgkZGF0YSkgKyAnKSB7ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIHZhciBzdGFydEVycnMnICsgKCRsdmwpICsgJyA9IGVycm9yczsgJztcXFxcbiAgICB2YXIgJHBhc3NEYXRhID0gJGtleTtcXFxcbiAgICB2YXIgJHdhc0NvbXBvc2l0ZSA9IGl0LmNvbXBvc2l0ZVJ1bGU7XFxcXG4gICAgaXQuY29tcG9zaXRlUnVsZSA9ICRpdC5jb21wb3NpdGVSdWxlID0gdHJ1ZTtcXFxcbiAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpO1xcXFxuICAgICRpdC5iYXNlSWQgPSAkY3VycmVudEJhc2VJZDtcXFxcbiAgICBpZiAoaXQudXRpbC52YXJPY2N1cmVuY2VzKCRjb2RlLCAkbmV4dERhdGEpIDwgMikge1xcXFxuICAgICAgb3V0ICs9ICcgJyArIChpdC51dGlsLnZhclJlcGxhY2UoJGNvZGUsICRuZXh0RGF0YSwgJHBhc3NEYXRhKSkgKyAnICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHZhciAnICsgKCRuZXh0RGF0YSkgKyAnID0gJyArICgkcGFzc0RhdGEpICsgJzsgJyArICgkY29kZSkgKyAnICc7XFxcXG4gICAgfVxcXFxuICAgIGl0LmNvbXBvc2l0ZVJ1bGUgPSAkaXQuY29tcG9zaXRlUnVsZSA9ICR3YXNDb21wb3NpdGU7XFxcXG4gICAgb3V0ICs9ICcgaWYgKCEnICsgKCRuZXh0VmFsaWQpICsgJykgeyBmb3IgKHZhciAnICsgKCRpKSArICc9c3RhcnRFcnJzJyArICgkbHZsKSArICc7ICcgKyAoJGkpICsgJzxlcnJvcnM7ICcgKyAoJGkpICsgJysrKSB7IHZFcnJvcnNbJyArICgkaSkgKyAnXS5wcm9wZXJ0eU5hbWUgPSAnICsgKCRrZXkpICsgJzsgfSAgIHZhciBlcnIgPSAgICc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgncHJvcGVydHlOYW1lcycpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgcHJvcGVydHlOYW1lOiBcXFxcXFxcXCcnICsgKCRpbnZhbGlkTmFtZSkgKyAnXFxcXFxcXFwnIH0gJztcXFxcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Byb3BlcnR5IG5hbWUgXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcJycgKyAoJGludmFsaWROYW1lKSArICdcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnIGlzIGludmFsaWRcXFxcXFxcXCcgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcge30gJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKHZFcnJvcnMpOyAnO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gdkVycm9yczsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgb3V0ICs9ICcgYnJlYWs7ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIH0gfSc7XFxcXG4gIH1cXFxcbiAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICBvdXQgKz0gJyAnICsgKCRjbG9zaW5nQnJhY2VzKSArICcgaWYgKCcgKyAoJGVycnMpICsgJyA9PSBlcnJvcnMpIHsnO1xcXFxuICB9XFxcXG4gIG91dCA9IGl0LnV0aWwuY2xlYW5VcENvZGUob3V0KTtcXFxcbiAgcmV0dXJuIG91dDtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5d2NtOXdaWEowZVU1aGJXVnpMbXB6TG1weklpd2ljMjkxY21ObGN5STZXeUozWldKd1lXTnJPaTh2YVcxcWIzbFNVRU12TGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5d2NtOXdaWEowZVU1aGJXVnpMbXB6UHpaa05qTWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpSjNWelpTQnpkSEpwWTNRbk8xeHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpQm5aVzVsY21GMFpWOXdjbTl3WlhKMGVVNWhiV1Z6S0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pITmphR1Z0WVZCaGRHZ2dQU0JwZEM1elkyaGxiV0ZRWVhSb0lDc2dhWFF1ZFhScGJDNW5aWFJRY205d1pYSjBlU2drYTJWNWQyOXlaQ2s3WEc0Z0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnZG1GeUlDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25NN1hHNGdJSFpoY2lBa1pHRjBZU0E5SUNka1lYUmhKeUFySUNna1pHRjBZVXgyYkNCOGZDQW5KeWs3WEc0Z0lIWmhjaUFrWlhKeWN5QTlJQ2RsY25KelgxOG5JQ3NnSkd4MmJEdGNiaUFnZG1GeUlDUnBkQ0E5SUdsMExuVjBhV3d1WTI5d2VTaHBkQ2s3WEc0Z0lIWmhjaUFrWTJ4dmMybHVaMEp5WVdObGN5QTlJQ2NuTzF4dUlDQWthWFF1YkdWMlpXd3JLenRjYmlBZ2RtRnlJQ1J1WlhoMFZtRnNhV1FnUFNBbmRtRnNhV1FuSUNzZ0pHbDBMbXhsZG1Wc08xeHVJQ0JwWmlBb2FYUXVkWFJwYkM1elkyaGxiV0ZJWVhOU2RXeGxjeWdrYzJOb1pXMWhMQ0JwZEM1U1ZVeEZVeTVoYkd3cEtTQjdYRzRnSUNBZ0pHbDBMbk5qYUdWdFlTQTlJQ1J6WTJobGJXRTdYRzRnSUNBZ0pHbDBMbk5qYUdWdFlWQmhkR2dnUFNBa2MyTm9aVzFoVUdGMGFEdGNiaUFnSUNBa2FYUXVaWEp5VTJOb1pXMWhVR0YwYUNBOUlDUmxjbkpUWTJobGJXRlFZWFJvTzF4dUlDQWdJSFpoY2lBa2EyVjVJRDBnSjJ0bGVTY2dLeUFrYkhac0xGeHVJQ0FnSUNBZ0pHbGtlQ0E5SUNkcFpIZ25JQ3NnSkd4MmJDeGNiaUFnSUNBZ0lDUnBJRDBnSjJrbklDc2dKR3gyYkN4Y2JpQWdJQ0FnSUNScGJuWmhiR2xrVG1GdFpTQTlJQ2RjWENjZ0t5QW5JQ3NnSkd0bGVTQXJJQ2NnS3lCY1hDY25MRnh1SUNBZ0lDQWdKR1JoZEdGT2VIUWdQU0FrYVhRdVpHRjBZVXhsZG1Wc0lEMGdhWFF1WkdGMFlVeGxkbVZzSUNzZ01TeGNiaUFnSUNBZ0lDUnVaWGgwUkdGMFlTQTlJQ2RrWVhSaEp5QXJJQ1JrWVhSaFRuaDBMRnh1SUNBZ0lDQWdKR1JoZEdGUWNtOXdaWEowYVdWeklEMGdKMlJoZEdGUWNtOXdaWEowYVdWekp5QXJJQ1JzZG13c1hHNGdJQ0FnSUNBa2IzZHVVSEp2Y0dWeWRHbGxjeUE5SUdsMExtOXdkSE11YjNkdVVISnZjR1Z5ZEdsbGN5eGNiaUFnSUNBZ0lDUmpkWEp5Wlc1MFFtRnpaVWxrSUQwZ2FYUXVZbUZ6WlVsa08xeHVJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQW5JQ3NnS0NSbGNuSnpLU0FySUNjZ1BTQmxjbkp2Y25NN0lDYzdYRzRnSUNBZ2FXWWdLQ1J2ZDI1UWNtOXdaWEowYVdWektTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZWElnSnlBcklDZ2taR0YwWVZCeWIzQmxjblJwWlhNcElDc2dKeUE5SUhWdVpHVm1hVzVsWkRzZ0p6dGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tDUnZkMjVRY205d1pYSjBhV1Z6S1NCN1hHNGdJQ0FnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1JrWVhSaFVISnZjR1Z5ZEdsbGN5a2dLeUFuSUQwZ0p5QXJJQ2drWkdGMFlWQnliM0JsY25ScFpYTXBJQ3NnSnlCOGZDQlBZbXBsWTNRdWEyVjVjeWduSUNzZ0tDUmtZWFJoS1NBcklDY3BPeUJtYjNJZ0tIWmhjaUFuSUNzZ0tDUnBaSGdwSUNzZ0p6MHdPeUFuSUNzZ0tDUnBaSGdwSUNzZ0p6d25JQ3NnS0NSa1lYUmhVSEp2Y0dWeWRHbGxjeWtnS3lBbkxteGxibWQwYURzZ0p5QXJJQ2drYVdSNEtTQXJJQ2NyS3lrZ2V5QjJZWElnSnlBcklDZ2thMlY1S1NBcklDY2dQU0FuSUNzZ0tDUmtZWFJoVUhKdmNHVnlkR2xsY3lrZ0t5QW5XeWNnS3lBb0pHbGtlQ2tnS3lBblhUc2dKenRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ1ptOXlJQ2gyWVhJZ0p5QXJJQ2drYTJWNUtTQXJJQ2NnYVc0Z0p5QXJJQ2drWkdGMFlTa2dLeUFuS1NCN0lDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQnpkR0Z5ZEVWeWNuTW5JQ3NnS0NSc2Rtd3BJQ3NnSnlBOUlHVnljbTl5Y3pzZ0p6dGNiaUFnSUNCMllYSWdKSEJoYzNORVlYUmhJRDBnSkd0bGVUdGNiaUFnSUNCMllYSWdKSGRoYzBOdmJYQnZjMmwwWlNBOUlHbDBMbU52YlhCdmMybDBaVkoxYkdVN1hHNGdJQ0FnYVhRdVkyOXRjRzl6YVhSbFVuVnNaU0E5SUNScGRDNWpiMjF3YjNOcGRHVlNkV3hsSUQwZ2RISjFaVHRjYmlBZ0lDQjJZWElnSkdOdlpHVWdQU0JwZEM1MllXeHBaR0YwWlNna2FYUXBPMXh1SUNBZ0lDUnBkQzVpWVhObFNXUWdQU0FrWTNWeWNtVnVkRUpoYzJWSlpEdGNiaUFnSUNCcFppQW9hWFF1ZFhScGJDNTJZWEpQWTJOMWNtVnVZMlZ6S0NSamIyUmxMQ0FrYm1WNGRFUmhkR0VwSUR3Z01pa2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dKeUFySUNocGRDNTFkR2xzTG5aaGNsSmxjR3hoWTJVb0pHTnZaR1VzSUNSdVpYaDBSR0YwWVN3Z0pIQmhjM05FWVhSaEtTa2dLeUFuSUNjN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFpoY2lBbklDc2dLQ1J1WlhoMFJHRjBZU2tnS3lBbklEMGdKeUFySUNna2NHRnpjMFJoZEdFcElDc2dKenNnSnlBcklDZ2tZMjlrWlNrZ0t5QW5JQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lHbDBMbU52YlhCdmMybDBaVkoxYkdVZ1BTQWthWFF1WTI5dGNHOXphWFJsVW5Wc1pTQTlJQ1IzWVhORGIyMXdiM05wZEdVN1hHNGdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDRW5JQ3NnS0NSdVpYaDBWbUZzYVdRcElDc2dKeWtnZXlCbWIzSWdLSFpoY2lBbklDc2dLQ1JwS1NBcklDYzljM1JoY25SRmNuSnpKeUFySUNna2JIWnNLU0FySUNjN0lDY2dLeUFvSkdrcElDc2dKenhsY25KdmNuTTdJQ2NnS3lBb0pHa3BJQ3NnSnlzcktTQjdJSFpGY25KdmNuTmJKeUFySUNna2FTa2dLeUFuWFM1d2NtOXdaWEowZVU1aGJXVWdQU0FuSUNzZ0tDUnJaWGtwSUNzZ0p6c2dmU0FnSUhaaGNpQmxjbklnUFNBZ0lDYzdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JsYkhObElDb3ZYRzRnSUNBZ2FXWWdLR2wwTG1OeVpXRjBaVVZ5Y205eWN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSHNnYTJWNWQyOXlaRG9nWEZ3bkp5QXJJQ2duY0hKdmNHVnlkSGxPWVcxbGN5Y3BJQ3NnSjF4Y0p5QXNJR1JoZEdGUVlYUm9PaUFvWkdGMFlWQmhkR2dnZkh3Z1hGd25YRnduS1NBcklDY2dLeUFvYVhRdVpYSnliM0pRWVhSb0tTQXJJQ2NnTENCelkyaGxiV0ZRWVhSb09pQW5JQ3NnS0dsMExuVjBhV3d1ZEc5UmRXOTBaV1JUZEhKcGJtY29KR1Z5Y2xOamFHVnRZVkJoZEdncEtTQXJJQ2NnTENCd1lYSmhiWE02SUhzZ2NISnZjR1Z5ZEhsT1lXMWxPaUJjWENjbklDc2dLQ1JwYm5aaGJHbGtUbUZ0WlNrZ0t5QW5YRnduSUgwZ0p6dGNiaUFnSUNBZ0lHbG1JQ2hwZEM1dmNIUnpMbTFsYzNOaFoyVnpJQ0U5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlBc0lHMWxjM05oWjJVNklGeGNKM0J5YjNCbGNuUjVJRzVoYldVZ1hGeGNYRnhjSnljZ0t5QW9KR2x1ZG1Gc2FXUk9ZVzFsS1NBcklDZGNYRnhjWEZ3bklHbHpJR2x1ZG1Gc2FXUmNYQ2NnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxuWmxjbUp2YzJVcElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J6WTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvSkhOamFHVnRZVkJoZEdncElDc2dKeUFzSUhCaGNtVnVkRk5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2hwZEM1elkyaGxiV0ZRWVhSb0tTQXJJQ2NnTENCa1lYUmhPaUFuSUNzZ0tDUmtZWFJoS1NBcklDY2dKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJRzkxZENBclBTQW5JSDBnSnp0Y2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdJQ0I5WEc0Z0lDQWdiM1YwSUNzOUlDYzdJQ0JwWmlBb2RrVnljbTl5Y3lBOVBUMGdiblZzYkNrZ2RrVnljbTl5Y3lBOUlGdGxjbkpkT3lCbGJITmxJSFpGY25KdmNuTXVjSFZ6YUNobGNuSXBPeUJsY25KdmNuTXJLenNnSnp0Y2JpQWdJQ0JwWmlBb0lXbDBMbU52YlhCdmMybDBaVkoxYkdVZ0ppWWdKR0p5WldGclQyNUZjbkp2Y2lrZ2V5QXZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdhV1lnS2k5Y2JpQWdJQ0FnSUdsbUlDaHBkQzVoYzNsdVl5a2dlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIwYUhKdmR5QnVaWGNnVm1Gc2FXUmhkR2x2YmtWeWNtOXlLSFpGY25KdmNuTXBPeUFuTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZG1Gc2FXUmhkR1V1WlhKeWIzSnpJRDBnZGtWeWNtOXljenNnY21WMGRYSnVJR1poYkhObE95QW5PMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNCcFppQW9KR0p5WldGclQyNUZjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ1luSmxZV3M3SUNjN1hHNGdJQ0FnZlZ4dUlDQWdJRzkxZENBclBTQW5JSDBnZlNjN1hHNGdJSDFjYmlBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1JqYkc5emFXNW5RbkpoWTJWektTQXJJQ2NnYVdZZ0tDY2dLeUFvSkdWeWNuTXBJQ3NnSnlBOVBTQmxjbkp2Y25NcElIc25PMXh1SUNCOVhHNGdJRzkxZENBOUlHbDBMblYwYVd3dVkyeGxZVzVWY0VOdlpHVW9iM1YwS1R0Y2JpQWdjbVYwZFhKdUlHOTFkRHRjYm4xY2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvcHJvcGVydHlOYW1lcy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvcmVmLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvcmVmLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX3JlZihpdCwgJGtleXdvcmQsICRydWxlVHlwZSkge1xcXFxuICB2YXIgb3V0ID0gJyAnO1xcXFxuICB2YXIgJGx2bCA9IGl0LmxldmVsO1xcXFxuICB2YXIgJGRhdGFMdmwgPSBpdC5kYXRhTGV2ZWw7XFxcXG4gIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcXFxcbiAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICB2YXIgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycztcXFxcbiAgdmFyICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgdmFyICR2YWxpZCA9ICd2YWxpZCcgKyAkbHZsO1xcXFxuICB2YXIgJGFzeW5jLCAkcmVmQ29kZTtcXFxcbiAgaWYgKCRzY2hlbWEgPT0gJyMnIHx8ICRzY2hlbWEgPT0gJyMvJykge1xcXFxuICAgIGlmIChpdC5pc1Jvb3QpIHtcXFxcbiAgICAgICRhc3luYyA9IGl0LmFzeW5jO1xcXFxuICAgICAgJHJlZkNvZGUgPSAndmFsaWRhdGUnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICAkYXN5bmMgPSBpdC5yb290LnNjaGVtYS4kYXN5bmMgPT09IHRydWU7XFxcXG4gICAgICAkcmVmQ29kZSA9ICdyb290LnJlZlZhbFswXSc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIHZhciAkcmVmVmFsID0gaXQucmVzb2x2ZVJlZihpdC5iYXNlSWQsICRzY2hlbWEsIGl0LmlzUm9vdCk7XFxcXG4gICAgaWYgKCRyZWZWYWwgPT09IHVuZGVmaW5lZCkge1xcXFxuICAgICAgdmFyICRtZXNzYWdlID0gaXQuTWlzc2luZ1JlZkVycm9yLm1lc3NhZ2UoaXQuYmFzZUlkLCAkc2NoZW1hKTtcXFxcbiAgICAgIGlmIChpdC5vcHRzLm1pc3NpbmdSZWZzID09ICdmYWlsJykge1xcXFxuICAgICAgICBjb25zb2xlLmVycm9yKCRtZXNzYWdlKTtcXFxcbiAgICAgICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAgICAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgICAgICAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gICAgICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCckcmVmJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyByZWY6IFxcXFxcXFxcJycgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJHNjaGVtYSkpICsgJ1xcXFxcXFxcJyB9ICc7XFxcXG4gICAgICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ2NhblxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXCd0IHJlc29sdmUgcmVmZXJlbmNlICcgKyAoaXQudXRpbC5lc2NhcGVRdW90ZXMoJHNjaGVtYSkpICsgJ1xcXFxcXFxcJyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRzY2hlbWEpKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgaWYgKGZhbHNlKSB7ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSBpZiAoaXQub3B0cy5taXNzaW5nUmVmcyA9PSAnaWdub3JlJykge1xcXFxuICAgICAgICBjb25zb2xlLndhcm4oJG1lc3NhZ2UpO1xcXFxuICAgICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICAgIG91dCArPSAnIGlmICh0cnVlKSB7ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIHRocm93IG5ldyBpdC5NaXNzaW5nUmVmRXJyb3IoaXQuYmFzZUlkLCAkc2NoZW1hLCAkbWVzc2FnZSk7XFxcXG4gICAgICB9XFxcXG4gICAgfSBlbHNlIGlmICgkcmVmVmFsLmlubGluZSkge1xcXFxuICAgICAgdmFyICRpdCA9IGl0LnV0aWwuY29weShpdCk7XFxcXG4gICAgICAkaXQubGV2ZWwrKztcXFxcbiAgICAgIHZhciAkbmV4dFZhbGlkID0gJ3ZhbGlkJyArICRpdC5sZXZlbDtcXFxcbiAgICAgICRpdC5zY2hlbWEgPSAkcmVmVmFsLnNjaGVtYTtcXFxcbiAgICAgICRpdC5zY2hlbWFQYXRoID0gJyc7XFxcXG4gICAgICAkaXQuZXJyU2NoZW1hUGF0aCA9ICRzY2hlbWE7XFxcXG4gICAgICB2YXIgJGNvZGUgPSBpdC52YWxpZGF0ZSgkaXQpLnJlcGxhY2UoL3ZhbGlkYXRlXFxcXFxcXFwuc2NoZW1hL2csICRyZWZWYWwuY29kZSk7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCRjb2RlKSArICcgJztcXFxcbiAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgIG91dCArPSAnIGlmICgnICsgKCRuZXh0VmFsaWQpICsgJykgeyAnO1xcXFxuICAgICAgfVxcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICAkYXN5bmMgPSAkcmVmVmFsLiRhc3luYyA9PT0gdHJ1ZTtcXFxcbiAgICAgICRyZWZDb2RlID0gJHJlZlZhbC5jb2RlO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICBpZiAoJHJlZkNvZGUpIHtcXFxcbiAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgb3V0ID0gJyc7XFxcXG4gICAgaWYgKGl0Lm9wdHMucGFzc0NvbnRleHQpIHtcXFxcbiAgICAgIG91dCArPSAnICcgKyAoJHJlZkNvZGUpICsgJy5jYWxsKHRoaXMsICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnICcgKyAoJHJlZkNvZGUpICsgJyggJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgJyArICgkZGF0YSkgKyAnLCAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSc7XFxcXG4gICAgaWYgKGl0LmVycm9yUGF0aCAhPSAnXFxcXFxcXCJcXFxcXFxcIicpIHtcXFxcbiAgICAgIG91dCArPSAnICsgJyArIChpdC5lcnJvclBhdGgpO1xcXFxuICAgIH1cXFxcbiAgICB2YXIgJHBhcmVudERhdGEgPSAkZGF0YUx2bCA/ICdkYXRhJyArICgoJGRhdGFMdmwgLSAxKSB8fCAnJykgOiAncGFyZW50RGF0YScsXFxcXG4gICAgICAkcGFyZW50RGF0YVByb3BlcnR5ID0gJGRhdGFMdmwgPyBpdC5kYXRhUGF0aEFyclskZGF0YUx2bF0gOiAncGFyZW50RGF0YVByb3BlcnR5JztcXFxcbiAgICBvdXQgKz0gJyAsICcgKyAoJHBhcmVudERhdGEpICsgJyAsICcgKyAoJHBhcmVudERhdGFQcm9wZXJ0eSkgKyAnLCByb290RGF0YSkgICc7XFxcXG4gICAgdmFyIF9fY2FsbFZhbGlkYXRlID0gb3V0O1xcXFxuICAgIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gICAgaWYgKCRhc3luYykge1xcXFxuICAgICAgaWYgKCFpdC5hc3luYykgdGhyb3cgbmV3IEVycm9yKCdhc3luYyBzY2hlbWEgcmVmZXJlbmNlZCBieSBzeW5jIHNjaGVtYScpO1xcXFxuICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgdmFyICcgKyAoJHZhbGlkKSArICc7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB0cnkgeyAnICsgKGl0LnlpZWxkQXdhaXQpICsgJyAnICsgKF9fY2FsbFZhbGlkYXRlKSArICc7ICc7XFxcXG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gdHJ1ZTsgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIG91dCArPSAnIH0gY2F0Y2ggKGUpIHsgaWYgKCEoZSBpbnN0YW5jZW9mIFZhbGlkYXRpb25FcnJvcikpIHRocm93IGU7IGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gZS5lcnJvcnM7IGVsc2UgdkVycm9ycyA9IHZFcnJvcnMuY29uY2F0KGUuZXJyb3JzKTsgZXJyb3JzID0gdkVycm9ycy5sZW5ndGg7ICc7XFxcXG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICBvdXQgKz0gJyAnICsgKCR2YWxpZCkgKyAnID0gZmFsc2U7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkdmFsaWQpICsgJykgeyAnO1xcXFxuICAgICAgfVxcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyBpZiAoIScgKyAoX19jYWxsVmFsaWRhdGUpICsgJykgeyBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9ICcgKyAoJHJlZkNvZGUpICsgJy5lcnJvcnM7IGVsc2UgdkVycm9ycyA9IHZFcnJvcnMuY29uY2F0KCcgKyAoJHJlZkNvZGUpICsgJy5lcnJvcnMpOyBlcnJvcnMgPSB2RXJyb3JzLmxlbmd0aDsgfSAnO1xcXFxuICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgZWxzZSB7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OXlaV1l1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTloYW5ZdmJHbGlMMlJ2ZEdwekwzSmxaaTVxY3o4MlpXWTRJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlkMWMyVWdjM1J5YVdOMEp6dGNibTF2WkhWc1pTNWxlSEJ2Y25SeklEMGdablZ1WTNScGIyNGdaMlZ1WlhKaGRHVmZjbVZtS0dsMExDQWthMlY1ZDI5eVpDd2dKSEoxYkdWVWVYQmxLU0I3WEc0Z0lIWmhjaUJ2ZFhRZ1BTQW5JQ2M3WEc0Z0lIWmhjaUFrYkhac0lEMGdhWFF1YkdWMlpXdzdYRzRnSUhaaGNpQWtaR0YwWVV4MmJDQTlJR2wwTG1SaGRHRk1aWFpsYkR0Y2JpQWdkbUZ5SUNSelkyaGxiV0VnUFNCcGRDNXpZMmhsYldGYkpHdGxlWGR2Y21SZE8xeHVJQ0IyWVhJZ0pHVnljbE5qYUdWdFlWQmhkR2dnUFNCcGRDNWxjbkpUWTJobGJXRlFZWFJvSUNzZ0p5OG5JQ3NnSkd0bGVYZHZjbVE3WEc0Z0lIWmhjaUFrWW5KbFlXdFBia1Z5Y205eUlEMGdJV2wwTG05d2RITXVZV3hzUlhKeWIzSnpPMXh1SUNCMllYSWdKR1JoZEdFZ1BTQW5aR0YwWVNjZ0t5QW9KR1JoZEdGTWRtd2dmSHdnSnljcE8xeHVJQ0IyWVhJZ0pIWmhiR2xrSUQwZ0ozWmhiR2xrSnlBcklDUnNkbXc3WEc0Z0lIWmhjaUFrWVhONWJtTXNJQ1J5WldaRGIyUmxPMXh1SUNCcFppQW9KSE5qYUdWdFlTQTlQU0FuSXljZ2ZId2dKSE5qYUdWdFlTQTlQU0FuSXk4bktTQjdYRzRnSUNBZ2FXWWdLR2wwTG1selVtOXZkQ2tnZTF4dUlDQWdJQ0FnSkdGemVXNWpJRDBnYVhRdVlYTjVibU03WEc0Z0lDQWdJQ0FrY21WbVEyOWtaU0E5SUNkMllXeHBaR0YwWlNjN1hHNGdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ1JoYzNsdVl5QTlJR2wwTG5KdmIzUXVjMk5vWlcxaExpUmhjM2x1WXlBOVBUMGdkSEoxWlR0Y2JpQWdJQ0FnSUNSeVpXWkRiMlJsSUQwZ0ozSnZiM1F1Y21WbVZtRnNXekJkSnp0Y2JpQWdJQ0I5WEc0Z0lIMGdaV3h6WlNCN1hHNGdJQ0FnZG1GeUlDUnlaV1pXWVd3Z1BTQnBkQzV5WlhOdmJIWmxVbVZtS0dsMExtSmhjMlZKWkN3Z0pITmphR1Z0WVN3Z2FYUXVhWE5TYjI5MEtUdGNiaUFnSUNCcFppQW9KSEpsWmxaaGJDQTlQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNCMllYSWdKRzFsYzNOaFoyVWdQU0JwZEM1TmFYTnphVzVuVW1WbVJYSnliM0l1YldWemMyRm5aU2hwZEM1aVlYTmxTV1FzSUNSelkyaGxiV0VwTzF4dUlDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXbHpjMmx1WjFKbFpuTWdQVDBnSjJaaGFXd25LU0I3WEc0Z0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9KRzFsYzNOaFoyVXBPMXh1SUNBZ0lDQWdJQ0IyWVhJZ0pDUnZkWFJUZEdGamF5QTlJQ1FrYjNWMFUzUmhZMnNnZkh3Z1cxMDdYRzRnSUNBZ0lDQWdJQ1FrYjNWMFUzUmhZMnN1Y0hWemFDaHZkWFFwTzF4dUlDQWdJQ0FnSUNCdmRYUWdQU0FuSnpzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHVnNjMlVnS2k5Y2JpQWdJQ0FnSUNBZ2FXWWdLR2wwTG1OeVpXRjBaVVZ5Y205eWN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0p5UnlaV1luS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdJSEpsWmpvZ1hGd25KeUFySUNocGRDNTFkR2xzTG1WelkyRndaVkYxYjNSbGN5Z2tjMk5vWlcxaEtTa2dLeUFuWEZ3bklIMGdKenRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1YjNCMGN5NXRaWE56WVdkbGN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDd2diV1Z6YzJGblpUb2dYRnduWTJGdVhGeGNYRnhjSjNRZ2NtVnpiMngyWlNCeVpXWmxjbVZ1WTJVZ0p5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna2MyTm9aVzFoS1NrZ0t5QW5YRnduSUNjN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxuWmxjbUp2YzJVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUN3Z2MyTm9aVzFoT2lBbklDc2dLR2wwTG5WMGFXd3VkRzlSZFc5MFpXUlRkSEpwYm1jb0pITmphR1Z0WVNrcElDc2dKeUFzSUhCaGNtVnVkRk5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2hwZEM1elkyaGxiV0ZRWVhSb0tTQXJJQ2NnTENCa1lYUmhPaUFuSUNzZ0tDUmtZWFJoS1NBcklDY2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dmU0FuTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2RtRnlJRjlmWlhKeUlEMGdiM1YwTzF4dUlDQWdJQ0FnSUNCdmRYUWdQU0FrSkc5MWRGTjBZV05yTG5CdmNDZ3BPMXh1SUNBZ0lDQWdJQ0JwWmlBb0lXbDBMbU52YlhCdmMybDBaVkoxYkdVZ0ppWWdKR0p5WldGclQyNUZjbkp2Y2lrZ2V5QXZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdhV1lnS2k5Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvYVhRdVlYTjVibU1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFJvY205M0lHNWxkeUJXWVd4cFpHRjBhVzl1UlhKeWIzSW9XeWNnS3lBb1gxOWxjbklwSUNzZ0oxMHBPeUFuTzF4dUlDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVd4cFpHRjBaUzVsY25KdmNuTWdQU0JiSnlBcklDaGZYMlZ5Y2lrZ0t5QW5YVHNnY21WMGRYSnVJR1poYkhObE95QW5PMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZWElnWlhKeUlEMGdKeUFySUNoZlgyVnljaWtnS3lBbk95QWdhV1lnS0haRmNuSnZjbk1nUFQwOUlHNTFiR3dwSUhaRmNuSnZjbk1nUFNCYlpYSnlYVHNnWld4elpTQjJSWEp5YjNKekxuQjFjMmdvWlhKeUtUc2daWEp5YjNKekt5czdJQ2M3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb1ptRnNjMlVwSUhzZ0p6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hwZEM1dmNIUnpMbTFwYzNOcGJtZFNaV1p6SUQwOUlDZHBaMjV2Y21VbktTQjdYRzRnSUNBZ0lDQWdJR052Ym5OdmJHVXVkMkZ5Ymlna2JXVnpjMkZuWlNrN1hHNGdJQ0FnSUNBZ0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tIUnlkV1VwSUhzZ0p6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdkR2h5YjNjZ2JtVjNJR2wwTGsxcGMzTnBibWRTWldaRmNuSnZjaWhwZEM1aVlYTmxTV1FzSUNSelkyaGxiV0VzSUNSdFpYTnpZV2RsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5SUdWc2MyVWdhV1lnS0NSeVpXWldZV3d1YVc1c2FXNWxLU0I3WEc0Z0lDQWdJQ0IyWVhJZ0pHbDBJRDBnYVhRdWRYUnBiQzVqYjNCNUtHbDBLVHRjYmlBZ0lDQWdJQ1JwZEM1c1pYWmxiQ3NyTzF4dUlDQWdJQ0FnZG1GeUlDUnVaWGgwVm1Gc2FXUWdQU0FuZG1Gc2FXUW5JQ3NnSkdsMExteGxkbVZzTzF4dUlDQWdJQ0FnSkdsMExuTmphR1Z0WVNBOUlDUnlaV1pXWVd3dWMyTm9aVzFoTzF4dUlDQWdJQ0FnSkdsMExuTmphR1Z0WVZCaGRHZ2dQU0FuSnp0Y2JpQWdJQ0FnSUNScGRDNWxjbkpUWTJobGJXRlFZWFJvSUQwZ0pITmphR1Z0WVR0Y2JpQWdJQ0FnSUhaaGNpQWtZMjlrWlNBOUlHbDBMblpoYkdsa1lYUmxLQ1JwZENrdWNtVndiR0ZqWlNndmRtRnNhV1JoZEdWY1hDNXpZMmhsYldFdlp5d2dKSEpsWmxaaGJDNWpiMlJsS1R0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KR052WkdVcElDc2dKeUFuTzF4dUlDQWdJQ0FnYVdZZ0tDUmljbVZoYTA5dVJYSnliM0lwSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2FXWWdLQ2NnS3lBb0pHNWxlSFJXWVd4cFpDa2dLeUFuS1NCN0lDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNSaGMzbHVZeUE5SUNSeVpXWldZV3d1SkdGemVXNWpJRDA5UFNCMGNuVmxPMXh1SUNBZ0lDQWdKSEpsWmtOdlpHVWdQU0FrY21WbVZtRnNMbU52WkdVN1hHNGdJQ0FnZlZ4dUlDQjlYRzRnSUdsbUlDZ2tjbVZtUTI5a1pTa2dlMXh1SUNBZ0lIWmhjaUFrSkc5MWRGTjBZV05ySUQwZ0pDUnZkWFJUZEdGamF5QjhmQ0JiWFR0Y2JpQWdJQ0FrSkc5MWRGTjBZV05yTG5CMWMyZ29iM1YwS1R0Y2JpQWdJQ0J2ZFhRZ1BTQW5KenRjYmlBZ0lDQnBaaUFvYVhRdWIzQjBjeTV3WVhOelEyOXVkR1Y0ZENrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2drY21WbVEyOWtaU2tnS3lBbkxtTmhiR3dvZEdocGN5d2dKenRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2drY21WbVEyOWtaU2tnS3lBbktDQW5PMXh1SUNBZ0lIMWNiaUFnSUNCdmRYUWdLejBnSnlBbklDc2dLQ1JrWVhSaEtTQXJJQ2NzSUNoa1lYUmhVR0YwYUNCOGZDQmNYQ2RjWENjcEp6dGNiaUFnSUNCcFppQW9hWFF1WlhKeWIzSlFZWFJvSUNFOUlDZGNJbHdpSnlrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0t5QW5JQ3NnS0dsMExtVnljbTl5VUdGMGFDazdYRzRnSUNBZ2ZWeHVJQ0FnSUhaaGNpQWtjR0Z5Wlc1MFJHRjBZU0E5SUNSa1lYUmhUSFpzSUQ4Z0oyUmhkR0VuSUNzZ0tDZ2taR0YwWVV4MmJDQXRJREVwSUh4OElDY25LU0E2SUNkd1lYSmxiblJFWVhSaEp5eGNiaUFnSUNBZ0lDUndZWEpsYm5SRVlYUmhVSEp2Y0dWeWRIa2dQU0FrWkdGMFlVeDJiQ0EvSUdsMExtUmhkR0ZRWVhSb1FYSnlXeVJrWVhSaFRIWnNYU0E2SUNkd1lYSmxiblJFWVhSaFVISnZjR1Z5ZEhrbk8xeHVJQ0FnSUc5MWRDQXJQU0FuSUN3Z0p5QXJJQ2drY0dGeVpXNTBSR0YwWVNrZ0t5QW5JQ3dnSnlBcklDZ2tjR0Z5Wlc1MFJHRjBZVkJ5YjNCbGNuUjVLU0FySUNjc0lISnZiM1JFWVhSaEtTQWdKenRjYmlBZ0lDQjJZWElnWDE5allXeHNWbUZzYVdSaGRHVWdQU0J2ZFhRN1hHNGdJQ0FnYjNWMElEMGdKQ1J2ZFhSVGRHRmpheTV3YjNBb0tUdGNiaUFnSUNCcFppQW9KR0Z6ZVc1aktTQjdYRzRnSUNBZ0lDQnBaaUFvSVdsMExtRnplVzVqS1NCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSjJGemVXNWpJSE5qYUdWdFlTQnlaV1psY21WdVkyVmtJR0o1SUhONWJtTWdjMk5vWlcxaEp5azdYRzRnSUNBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ0p5QXJJQ2drZG1Gc2FXUXBJQ3NnSnpzZ0p6dGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIUnllU0I3SUNjZ0t5QW9hWFF1ZVdsbGJHUkJkMkZwZENrZ0t5QW5JQ2NnS3lBb1gxOWpZV3hzVm1Gc2FXUmhkR1VwSUNzZ0p6c2dKenRjYmlBZ0lDQWdJR2xtSUNna1luSmxZV3RQYmtWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KSFpoYkdsa0tTQXJJQ2NnUFNCMGNuVmxPeUFuTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYjNWMElDczlJQ2NnZlNCallYUmphQ0FvWlNrZ2V5QnBaaUFvSVNobElHbHVjM1JoYm1ObGIyWWdWbUZzYVdSaGRHbHZia1Z5Y205eUtTa2dkR2h5YjNjZ1pUc2dhV1lnS0haRmNuSnZjbk1nUFQwOUlHNTFiR3dwSUhaRmNuSnZjbk1nUFNCbExtVnljbTl5Y3pzZ1pXeHpaU0IyUlhKeWIzSnpJRDBnZGtWeWNtOXljeTVqYjI1allYUW9aUzVsY25KdmNuTXBPeUJsY25KdmNuTWdQU0IyUlhKeWIzSnpMbXhsYm1kMGFEc2dKenRjYmlBZ0lDQWdJR2xtSUNna1luSmxZV3RQYmtWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KSFpoYkdsa0tTQXJJQ2NnUFNCbVlXeHpaVHNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUgwZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnbklDc2dLQ1IyWVd4cFpDa2dLeUFuS1NCN0lDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDZ2hKeUFySUNoZlgyTmhiR3hXWVd4cFpHRjBaU2tnS3lBbktTQjdJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ0p5QXJJQ2drY21WbVEyOWtaU2tnS3lBbkxtVnljbTl5Y3pzZ1pXeHpaU0IyUlhKeWIzSnpJRDBnZGtWeWNtOXljeTVqYjI1allYUW9KeUFySUNna2NtVm1RMjlrWlNrZ0t5QW5MbVZ5Y205eWN5azdJR1Z5Y205eWN5QTlJSFpGY25KdmNuTXViR1Z1WjNSb095QjlJQ2M3WEc0Z0lDQWdJQ0JwWmlBb0pHSnlaV0ZyVDI1RmNuSnZjaWtnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCbGJITmxJSHNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc0Z0lIMWNiaUFnY21WMGRYSnVJRzkxZER0Y2JuMWNiaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlmUT09XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9yZWYuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3JlcXVpcmVkLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9yZXF1aXJlZC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX3JlcXVpcmVkKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcXFxcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcXFxcbiAgICAkc2NoZW1hVmFsdWU7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xcXFxuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xcXFxuICB9XFxcXG4gIHZhciAkdlNjaGVtYSA9ICdzY2hlbWEnICsgJGx2bDtcXFxcbiAgaWYgKCEkaXNEYXRhKSB7XFxcXG4gICAgaWYgKCRzY2hlbWEubGVuZ3RoIDwgaXQub3B0cy5sb29wUmVxdWlyZWQgJiYgaXQuc2NoZW1hLnByb3BlcnRpZXMgJiYgT2JqZWN0LmtleXMoaXQuc2NoZW1hLnByb3BlcnRpZXMpLmxlbmd0aCkge1xcXFxuICAgICAgdmFyICRyZXF1aXJlZCA9IFtdO1xcXFxuICAgICAgdmFyIGFycjEgPSAkc2NoZW1hO1xcXFxuICAgICAgaWYgKGFycjEpIHtcXFxcbiAgICAgICAgdmFyICRwcm9wZXJ0eSwgaTEgPSAtMSxcXFxcbiAgICAgICAgICBsMSA9IGFycjEubGVuZ3RoIC0gMTtcXFxcbiAgICAgICAgd2hpbGUgKGkxIDwgbDEpIHtcXFxcbiAgICAgICAgICAkcHJvcGVydHkgPSBhcnIxW2kxICs9IDFdO1xcXFxuICAgICAgICAgIHZhciAkcHJvcGVydHlTY2ggPSBpdC5zY2hlbWEucHJvcGVydGllc1skcHJvcGVydHldO1xcXFxuICAgICAgICAgIGlmICghKCRwcm9wZXJ0eVNjaCAmJiBpdC51dGlsLnNjaGVtYUhhc1J1bGVzKCRwcm9wZXJ0eVNjaCwgaXQuUlVMRVMuYWxsKSkpIHtcXFxcbiAgICAgICAgICAgICRyZXF1aXJlZFskcmVxdWlyZWQubGVuZ3RoXSA9ICRwcm9wZXJ0eTtcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH1cXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgdmFyICRyZXF1aXJlZCA9ICRzY2hlbWE7XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGlmICgkaXNEYXRhIHx8ICRyZXF1aXJlZC5sZW5ndGgpIHtcXFxcbiAgICB2YXIgJGN1cnJlbnRFcnJvclBhdGggPSBpdC5lcnJvclBhdGgsXFxcXG4gICAgICAkbG9vcFJlcXVpcmVkID0gJGlzRGF0YSB8fCAkcmVxdWlyZWQubGVuZ3RoID49IGl0Lm9wdHMubG9vcFJlcXVpcmVkLFxcXFxuICAgICAgJG93blByb3BlcnRpZXMgPSBpdC5vcHRzLm93blByb3BlcnRpZXM7XFxcXG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgIG91dCArPSAnIHZhciBtaXNzaW5nJyArICgkbHZsKSArICc7ICc7XFxcXG4gICAgICBpZiAoJGxvb3BSZXF1aXJlZCkge1xcXFxuICAgICAgICBpZiAoISRpc0RhdGEpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkdlNjaGVtYSkgKyAnID0gdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnOyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHZhciAkaSA9ICdpJyArICRsdmwsXFxcXG4gICAgICAgICAgJHByb3BlcnR5UGF0aCA9ICdzY2hlbWEnICsgJGx2bCArICdbJyArICRpICsgJ10nLFxcXFxuICAgICAgICAgICRtaXNzaW5nUHJvcGVydHkgPSAnXFxcXFxcXFwnICsgJyArICRwcm9wZXJ0eVBhdGggKyAnICsgXFxcXFxcXFwnJztcXFxcbiAgICAgICAgaWYgKGl0Lm9wdHMuX2Vycm9yRGF0YVBhdGhQcm9wZXJ0eSkge1xcXFxuICAgICAgICAgIGl0LmVycm9yUGF0aCA9IGl0LnV0aWwuZ2V0UGF0aEV4cHIoJGN1cnJlbnRFcnJvclBhdGgsICRwcm9wZXJ0eVBhdGgsIGl0Lm9wdHMuanNvblBvaW50ZXJzKTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJyA9IHRydWU7ICc7XFxcXG4gICAgICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgaWYgKHNjaGVtYScgKyAoJGx2bCkgKyAnID09PSB1bmRlZmluZWQpICcgKyAoJHZhbGlkKSArICcgPSB0cnVlOyBlbHNlIGlmICghQXJyYXkuaXNBcnJheShzY2hlbWEnICsgKCRsdmwpICsgJykpICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgZWxzZSB7JztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyBmb3IgKHZhciAnICsgKCRpKSArICcgPSAwOyAnICsgKCRpKSArICcgPCAnICsgKCR2U2NoZW1hKSArICcubGVuZ3RoOyAnICsgKCRpKSArICcrKykgeyAnICsgKCR2YWxpZCkgKyAnID0gJyArICgkZGF0YSkgKyAnWycgKyAoJHZTY2hlbWEpICsgJ1snICsgKCRpKSArICddXSAhPT0gdW5kZWZpbmVkICc7XFxcXG4gICAgICAgIGlmICgkb3duUHJvcGVydGllcykge1xcXFxuICAgICAgICAgIG91dCArPSAnICYmICAgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKCcgKyAoJGRhdGEpICsgJywgJyArICgkdlNjaGVtYSkgKyAnWycgKyAoJGkpICsgJ10pICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgb3V0ICs9ICc7IGlmICghJyArICgkdmFsaWQpICsgJykgYnJlYWs7IH0gJztcXFxcbiAgICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyAgfSAgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyAgaWYgKCEnICsgKCR2YWxpZCkgKyAnKSB7ICAgJztcXFxcbiAgICAgICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAgICAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgICAgICAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gICAgICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCdyZXF1aXJlZCcpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgbWlzc2luZ1Byb3BlcnR5OiBcXFxcXFxcXCcnICsgKCRtaXNzaW5nUHJvcGVydHkpICsgJ1xcXFxcXFxcJyB9ICc7XFxcXG4gICAgICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJyc7XFxcXG4gICAgICAgICAgICBpZiAoaXQub3B0cy5fZXJyb3JEYXRhUGF0aFByb3BlcnR5KSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnaXMgYSByZXF1aXJlZCBwcm9wZXJ0eSc7XFxcXG4gICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJ3Nob3VsZCBoYXZlIHJlcXVpcmVkIHByb3BlcnR5IFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXCcnICsgKCRtaXNzaW5nUHJvcGVydHkpICsgJ1xcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXCcnO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfSAnO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIG91dCArPSAnIHt9ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICAgICAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICAgICAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICAgICAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgb3V0ICs9ICcgfSBlbHNlIHsgJztcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnIGlmICggJztcXFxcbiAgICAgICAgdmFyIGFycjIgPSAkcmVxdWlyZWQ7XFxcXG4gICAgICAgIGlmIChhcnIyKSB7XFxcXG4gICAgICAgICAgdmFyICRwcm9wZXJ0eUtleSwgJGkgPSAtMSxcXFxcbiAgICAgICAgICAgIGwyID0gYXJyMi5sZW5ndGggLSAxO1xcXFxuICAgICAgICAgIHdoaWxlICgkaSA8IGwyKSB7XFxcXG4gICAgICAgICAgICAkcHJvcGVydHlLZXkgPSBhcnIyWyRpICs9IDFdO1xcXFxuICAgICAgICAgICAgaWYgKCRpKSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIHx8ICc7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB2YXIgJHByb3AgPSBpdC51dGlsLmdldFByb3BlcnR5KCRwcm9wZXJ0eUtleSksXFxcXG4gICAgICAgICAgICAgICR1c2VEYXRhID0gJGRhdGEgKyAkcHJvcDtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICggKCAnICsgKCR1c2VEYXRhKSArICcgPT09IHVuZGVmaW5lZCAnO1xcXFxuICAgICAgICAgICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIHx8ICEgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKCcgKyAoJGRhdGEpICsgJywgXFxcXFxcXFwnJyArIChpdC51dGlsLmVzY2FwZVF1b3RlcygkcHJvcGVydHlLZXkpKSArICdcXFxcXFxcXCcpICc7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBvdXQgKz0gJykgJiYgKG1pc3NpbmcnICsgKCRsdmwpICsgJyA9ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZyhpdC5vcHRzLmpzb25Qb2ludGVycyA/ICRwcm9wZXJ0eUtleSA6ICRwcm9wKSkgKyAnKSApICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIG91dCArPSAnKSB7ICAnO1xcXFxuICAgICAgICB2YXIgJHByb3BlcnR5UGF0aCA9ICdtaXNzaW5nJyArICRsdmwsXFxcXG4gICAgICAgICAgJG1pc3NpbmdQcm9wZXJ0eSA9ICdcXFxcXFxcXCcgKyAnICsgJHByb3BlcnR5UGF0aCArICcgKyBcXFxcXFxcXCcnO1xcXFxuICAgICAgICBpZiAoaXQub3B0cy5fZXJyb3JEYXRhUGF0aFByb3BlcnR5KSB7XFxcXG4gICAgICAgICAgaXQuZXJyb3JQYXRoID0gaXQub3B0cy5qc29uUG9pbnRlcnMgPyBpdC51dGlsLmdldFBhdGhFeHByKCRjdXJyZW50RXJyb3JQYXRoLCAkcHJvcGVydHlQYXRoLCB0cnVlKSA6ICRjdXJyZW50RXJyb3JQYXRoICsgJyArICcgKyAkcHJvcGVydHlQYXRoO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgICAgICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgncmVxdWlyZWQnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IG1pc3NpbmdQcm9wZXJ0eTogXFxcXFxcXFwnJyArICgkbWlzc2luZ1Byb3BlcnR5KSArICdcXFxcXFxcXCcgfSAnO1xcXFxuICAgICAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXFxcXFxcXCcnO1xcXFxuICAgICAgICAgICAgaWYgKGl0Lm9wdHMuX2Vycm9yRGF0YVBhdGhQcm9wZXJ0eSkge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJ2lzIGEgcmVxdWlyZWQgcHJvcGVydHknO1xcXFxuICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICdzaG91bGQgaGF2ZSByZXF1aXJlZCBwcm9wZXJ0eSBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnJyArICgkbWlzc2luZ1Byb3BlcnR5KSArICdcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIG91dCArPSAnXFxcXFxcXFwnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIG91dCArPSAnIH0gZWxzZSB7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIGlmICgkbG9vcFJlcXVpcmVkKSB7XFxcXG4gICAgICAgIGlmICghJGlzRGF0YSkge1xcXFxuICAgICAgICAgIG91dCArPSAnIHZhciAnICsgKCR2U2NoZW1hKSArICcgPSB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICc7ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgdmFyICRpID0gJ2knICsgJGx2bCxcXFxcbiAgICAgICAgICAkcHJvcGVydHlQYXRoID0gJ3NjaGVtYScgKyAkbHZsICsgJ1snICsgJGkgKyAnXScsXFxcXG4gICAgICAgICAgJG1pc3NpbmdQcm9wZXJ0eSA9ICdcXFxcXFxcXCcgKyAnICsgJHByb3BlcnR5UGF0aCArICcgKyBcXFxcXFxcXCcnO1xcXFxuICAgICAgICBpZiAoaXQub3B0cy5fZXJyb3JEYXRhUGF0aFByb3BlcnR5KSB7XFxcXG4gICAgICAgICAgaXQuZXJyb3JQYXRoID0gaXQudXRpbC5nZXRQYXRoRXhwcigkY3VycmVudEVycm9yUGF0aCwgJHByb3BlcnR5UGF0aCwgaXQub3B0cy5qc29uUG9pbnRlcnMpO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJHZTY2hlbWEpICsgJyAmJiAhQXJyYXkuaXNBcnJheSgnICsgKCR2U2NoZW1hKSArICcpKSB7ICB2YXIgZXJyID0gICAnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJ3JlcXVpcmVkJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBtaXNzaW5nUHJvcGVydHk6IFxcXFxcXFxcJycgKyAoJG1pc3NpbmdQcm9wZXJ0eSkgKyAnXFxcXFxcXFwnIH0gJztcXFxcbiAgICAgICAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJyc7XFxcXG4gICAgICAgICAgICAgIGlmIChpdC5vcHRzLl9lcnJvckRhdGFQYXRoUHJvcGVydHkpIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJ2lzIGEgcmVxdWlyZWQgcHJvcGVydHknO1xcXFxuICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnc2hvdWxkIGhhdmUgcmVxdWlyZWQgcHJvcGVydHkgXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcJycgKyAoJG1pc3NpbmdQcm9wZXJ0eSkgKyAnXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcJyc7XFxcXG4gICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcge30gJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgfSBlbHNlIGlmICgnICsgKCR2U2NoZW1hKSArICcgIT09IHVuZGVmaW5lZCkgeyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIG91dCArPSAnIGZvciAodmFyICcgKyAoJGkpICsgJyA9IDA7ICcgKyAoJGkpICsgJyA8ICcgKyAoJHZTY2hlbWEpICsgJy5sZW5ndGg7ICcgKyAoJGkpICsgJysrKSB7IGlmICgnICsgKCRkYXRhKSArICdbJyArICgkdlNjaGVtYSkgKyAnWycgKyAoJGkpICsgJ11dID09PSB1bmRlZmluZWQgJztcXFxcbiAgICAgICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfHwgISBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJyArICgkZGF0YSkgKyAnLCAnICsgKCR2U2NoZW1hKSArICdbJyArICgkaSkgKyAnXSkgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJykgeyAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJ3JlcXVpcmVkJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBtaXNzaW5nUHJvcGVydHk6IFxcXFxcXFxcJycgKyAoJG1pc3NpbmdQcm9wZXJ0eSkgKyAnXFxcXFxcXFwnIH0gJztcXFxcbiAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnJztcXFxcbiAgICAgICAgICAgIGlmIChpdC5vcHRzLl9lcnJvckRhdGFQYXRoUHJvcGVydHkpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICdpcyBhIHJlcXVpcmVkIHByb3BlcnR5JztcXFxcbiAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnc2hvdWxkIGhhdmUgcmVxdWlyZWQgcHJvcGVydHkgXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcJycgKyAoJG1pc3NpbmdQcm9wZXJ0eSkgKyAnXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcJyc7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBvdXQgKz0gJ1xcXFxcXFxcJyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcge30gJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyB9IH0gJztcXFxcbiAgICAgICAgaWYgKCRpc0RhdGEpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyAgfSAgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgdmFyIGFycjMgPSAkcmVxdWlyZWQ7XFxcXG4gICAgICAgIGlmIChhcnIzKSB7XFxcXG4gICAgICAgICAgdmFyICRwcm9wZXJ0eUtleSwgaTMgPSAtMSxcXFxcbiAgICAgICAgICAgIGwzID0gYXJyMy5sZW5ndGggLSAxO1xcXFxuICAgICAgICAgIHdoaWxlIChpMyA8IGwzKSB7XFxcXG4gICAgICAgICAgICAkcHJvcGVydHlLZXkgPSBhcnIzW2kzICs9IDFdO1xcXFxuICAgICAgICAgICAgdmFyICRwcm9wID0gaXQudXRpbC5nZXRQcm9wZXJ0eSgkcHJvcGVydHlLZXkpLFxcXFxuICAgICAgICAgICAgICAkbWlzc2luZ1Byb3BlcnR5ID0gaXQudXRpbC5lc2NhcGVRdW90ZXMoJHByb3BlcnR5S2V5KSxcXFxcbiAgICAgICAgICAgICAgJHVzZURhdGEgPSAkZGF0YSArICRwcm9wO1xcXFxuICAgICAgICAgICAgaWYgKGl0Lm9wdHMuX2Vycm9yRGF0YVBhdGhQcm9wZXJ0eSkge1xcXFxuICAgICAgICAgICAgICBpdC5lcnJvclBhdGggPSBpdC51dGlsLmdldFBhdGgoJGN1cnJlbnRFcnJvclBhdGgsICRwcm9wZXJ0eUtleSwgaXQub3B0cy5qc29uUG9pbnRlcnMpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCAnICsgKCR1c2VEYXRhKSArICcgPT09IHVuZGVmaW5lZCAnO1xcXFxuICAgICAgICAgICAgaWYgKCRvd25Qcm9wZXJ0aWVzKSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIHx8ICEgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKCcgKyAoJGRhdGEpICsgJywgXFxcXFxcXFwnJyArIChpdC51dGlsLmVzY2FwZVF1b3RlcygkcHJvcGVydHlLZXkpKSArICdcXFxcXFxcXCcpICc7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBvdXQgKz0gJykgeyAgdmFyIGVyciA9ICAgJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICAgICAgICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgncmVxdWlyZWQnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IG1pc3NpbmdQcm9wZXJ0eTogXFxcXFxcXFwnJyArICgkbWlzc2luZ1Byb3BlcnR5KSArICdcXFxcXFxcXCcgfSAnO1xcXFxuICAgICAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJyc7XFxcXG4gICAgICAgICAgICAgICAgaWYgKGl0Lm9wdHMuX2Vycm9yRGF0YVBhdGhQcm9wZXJ0eSkge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICdpcyBhIHJlcXVpcmVkIHByb3BlcnR5JztcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICdzaG91bGQgaGF2ZSByZXF1aXJlZCBwcm9wZXJ0eSBcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnJyArICgkbWlzc2luZ1Byb3BlcnR5KSArICdcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnJztcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgJztcXFxcbiAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgb3V0ICs9ICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgfSAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICBpdC5lcnJvclBhdGggPSAkY3VycmVudEVycm9yUGF0aDtcXFxcbiAgfSBlbHNlIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgb3V0ICs9ICcgaWYgKHRydWUpIHsnO1xcXFxuICB9XFxcXG4gIHJldHVybiBvdXQ7XFxcXG59XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlrYjNScWN5OXlaWEYxYVhKbFpDNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwyRnFkaTlzYVdJdlpHOTBhbk12Y21WeGRXbHlaV1F1YW5NL1lqZGxOaUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJbmRYTmxJSE4wY21samRDYzdYRzV0YjJSMWJHVXVaWGh3YjNKMGN5QTlJR1oxYm1OMGFXOXVJR2RsYm1WeVlYUmxYM0psY1hWcGNtVmtLR2wwTENBa2EyVjVkMjl5WkN3Z0pISjFiR1ZVZVhCbEtTQjdYRzRnSUhaaGNpQnZkWFFnUFNBbklDYzdYRzRnSUhaaGNpQWtiSFpzSUQwZ2FYUXViR1YyWld3N1hHNGdJSFpoY2lBa1pHRjBZVXgyYkNBOUlHbDBMbVJoZEdGTVpYWmxiRHRjYmlBZ2RtRnlJQ1J6WTJobGJXRWdQU0JwZEM1elkyaGxiV0ZiSkd0bGVYZHZjbVJkTzF4dUlDQjJZWElnSkhOamFHVnRZVkJoZEdnZ1BTQnBkQzV6WTJobGJXRlFZWFJvSUNzZ2FYUXVkWFJwYkM1blpYUlFjbTl3WlhKMGVTZ2thMlY1ZDI5eVpDazdYRzRnSUhaaGNpQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MeWNnS3lBa2EyVjVkMjl5WkR0Y2JpQWdkbUZ5SUNSaWNtVmhhMDl1UlhKeWIzSWdQU0FoYVhRdWIzQjBjeTVoYkd4RmNuSnZjbk03WEc0Z0lIWmhjaUFrWkdGMFlTQTlJQ2RrWVhSaEp5QXJJQ2drWkdGMFlVeDJiQ0I4ZkNBbkp5azdYRzRnSUhaaGNpQWtkbUZzYVdRZ1BTQW5kbUZzYVdRbklDc2dKR3gyYkR0Y2JpQWdkbUZ5SUNScGMwUmhkR0VnUFNCcGRDNXZjSFJ6TGlSa1lYUmhJQ1ltSUNSelkyaGxiV0VnSmlZZ0pITmphR1Z0WVM0a1pHRjBZU3hjYmlBZ0lDQWtjMk5vWlcxaFZtRnNkV1U3WEc0Z0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUhOamFHVnRZU2NnS3lBb0pHeDJiQ2tnS3lBbklEMGdKeUFySUNocGRDNTFkR2xzTG1kbGRFUmhkR0VvSkhOamFHVnRZUzRrWkdGMFlTd2dKR1JoZEdGTWRtd3NJR2wwTG1SaGRHRlFZWFJvUVhKeUtTa2dLeUFuT3lBbk8xeHVJQ0FnSUNSelkyaGxiV0ZXWVd4MVpTQTlJQ2R6WTJobGJXRW5JQ3NnSkd4MmJEdGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQWtjMk5vWlcxaFZtRnNkV1VnUFNBa2MyTm9aVzFoTzF4dUlDQjlYRzRnSUhaaGNpQWtkbE5qYUdWdFlTQTlJQ2R6WTJobGJXRW5JQ3NnSkd4MmJEdGNiaUFnYVdZZ0tDRWthWE5FWVhSaEtTQjdYRzRnSUNBZ2FXWWdLQ1J6WTJobGJXRXViR1Z1WjNSb0lEd2dhWFF1YjNCMGN5NXNiMjl3VW1WeGRXbHlaV1FnSmlZZ2FYUXVjMk5vWlcxaExuQnliM0JsY25ScFpYTWdKaVlnVDJKcVpXTjBMbXRsZVhNb2FYUXVjMk5vWlcxaExuQnliM0JsY25ScFpYTXBMbXhsYm1kMGFDa2dlMXh1SUNBZ0lDQWdkbUZ5SUNSeVpYRjFhWEpsWkNBOUlGdGRPMXh1SUNBZ0lDQWdkbUZ5SUdGeWNqRWdQU0FrYzJOb1pXMWhPMXh1SUNBZ0lDQWdhV1lnS0dGeWNqRXBJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlDUndjbTl3WlhKMGVTd2dhVEVnUFNBdE1TeGNiaUFnSUNBZ0lDQWdJQ0JzTVNBOUlHRnljakV1YkdWdVozUm9JQzBnTVR0Y2JpQWdJQ0FnSUNBZ2QyaHBiR1VnS0dreElEd2diREVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWtjSEp2Y0dWeWRIa2dQU0JoY25JeFcya3hJQ3M5SURGZE8xeHVJQ0FnSUNBZ0lDQWdJSFpoY2lBa2NISnZjR1Z5ZEhsVFkyZ2dQU0JwZEM1elkyaGxiV0V1Y0hKdmNHVnlkR2xsYzFza2NISnZjR1Z5ZEhsZE8xeHVJQ0FnSUNBZ0lDQWdJR2xtSUNnaEtDUndjbTl3WlhKMGVWTmphQ0FtSmlCcGRDNTFkR2xzTG5OamFHVnRZVWhoYzFKMWJHVnpLQ1J3Y205d1pYSjBlVk5qYUN3Z2FYUXVVbFZNUlZNdVlXeHNLU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ1J5WlhGMWFYSmxaRnNrY21WeGRXbHlaV1F1YkdWdVozUm9YU0E5SUNSd2NtOXdaWEowZVR0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2RtRnlJQ1J5WlhGMWFYSmxaQ0E5SUNSelkyaGxiV0U3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJR2xtSUNna2FYTkVZWFJoSUh4OElDUnlaWEYxYVhKbFpDNXNaVzVuZEdncElIdGNiaUFnSUNCMllYSWdKR04xY25KbGJuUkZjbkp2Y2xCaGRHZ2dQU0JwZEM1bGNuSnZjbEJoZEdnc1hHNGdJQ0FnSUNBa2JHOXZjRkpsY1hWcGNtVmtJRDBnSkdselJHRjBZU0I4ZkNBa2NtVnhkV2x5WldRdWJHVnVaM1JvSUQ0OUlHbDBMbTl3ZEhNdWJHOXZjRkpsY1hWcGNtVmtMRnh1SUNBZ0lDQWdKRzkzYmxCeWIzQmxjblJwWlhNZ1BTQnBkQzV2Y0hSekxtOTNibEJ5YjNCbGNuUnBaWE03WEc0Z0lDQWdhV1lnS0NSaWNtVmhhMDl1UlhKeWIzSXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JSFpoY2lCdGFYTnphVzVuSnlBcklDZ2tiSFpzS1NBcklDYzdJQ2M3WEc0Z0lDQWdJQ0JwWmlBb0pHeHZiM0JTWlhGMWFYSmxaQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9JU1JwYzBSaGRHRXBJSHRjYmlBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCMllYSWdKeUFySUNna2RsTmphR1Z0WVNrZ0t5QW5JRDBnZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNna2MyTm9aVzFoVUdGMGFDa2dLeUFuT3lBbk8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSFpoY2lBa2FTQTlJQ2RwSnlBcklDUnNkbXdzWEc0Z0lDQWdJQ0FnSUNBZ0pIQnliM0JsY25SNVVHRjBhQ0E5SUNkelkyaGxiV0VuSUNzZ0pHeDJiQ0FySUNkYkp5QXJJQ1JwSUNzZ0oxMG5MRnh1SUNBZ0lDQWdJQ0FnSUNSdGFYTnphVzVuVUhKdmNHVnlkSGtnUFNBblhGd25JQ3NnSnlBcklDUndjbTl3WlhKMGVWQmhkR2dnS3lBbklDc2dYRnduSnp0Y2JpQWdJQ0FnSUNBZ2FXWWdLR2wwTG05d2RITXVYMlZ5Y205eVJHRjBZVkJoZEdoUWNtOXdaWEowZVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJR2wwTG1WeWNtOXlVR0YwYUNBOUlHbDBMblYwYVd3dVoyVjBVR0YwYUVWNGNISW9KR04xY25KbGJuUkZjbkp2Y2xCaGRHZ3NJQ1J3Y205d1pYSjBlVkJoZEdnc0lHbDBMbTl3ZEhNdWFuTnZibEJ2YVc1MFpYSnpLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCMllYSWdKeUFySUNna2RtRnNhV1FwSUNzZ0p5QTlJSFJ5ZFdVN0lDYzdYRzRnSUNBZ0lDQWdJR2xtSUNna2FYTkVZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0hOamFHVnRZU2NnS3lBb0pHeDJiQ2tnS3lBbklEMDlQU0IxYm1SbFptbHVaV1FwSUNjZ0t5QW9KSFpoYkdsa0tTQXJJQ2NnUFNCMGNuVmxPeUJsYkhObElHbG1JQ2doUVhKeVlYa3VhWE5CY25KaGVTaHpZMmhsYldFbklDc2dLQ1JzZG13cElDc2dKeWtwSUNjZ0t5QW9KSFpoYkdsa0tTQXJJQ2NnUFNCbVlXeHpaVHNnWld4elpTQjdKenRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCbWIzSWdLSFpoY2lBbklDc2dLQ1JwS1NBcklDY2dQU0F3T3lBbklDc2dLQ1JwS1NBcklDY2dQQ0FuSUNzZ0tDUjJVMk5vWlcxaEtTQXJJQ2N1YkdWdVozUm9PeUFuSUNzZ0tDUnBLU0FySUNjckt5a2dleUFuSUNzZ0tDUjJZV3hwWkNrZ0t5QW5JRDBnSnlBcklDZ2taR0YwWVNrZ0t5QW5XeWNnS3lBb0pIWlRZMmhsYldFcElDc2dKMXNuSUNzZ0tDUnBLU0FySUNkZFhTQWhQVDBnZFc1a1pXWnBibVZrSUNjN1hHNGdJQ0FnSUNBZ0lHbG1JQ2drYjNkdVVISnZjR1Z5ZEdsbGN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNZbUlDQWdUMkpxWldOMExuQnliM1J2ZEhsd1pTNW9ZWE5QZDI1UWNtOXdaWEowZVM1allXeHNLQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5d2dKeUFySUNna2RsTmphR1Z0WVNrZ0t5QW5XeWNnS3lBb0pHa3BJQ3NnSjEwcElDYzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2M3SUdsbUlDZ2hKeUFySUNna2RtRnNhV1FwSUNzZ0p5a2dZbkpsWVdzN0lIMGdKenRjYmlBZ0lDQWdJQ0FnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFnZlNBZ0p6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFnYVdZZ0tDRW5JQ3NnS0NSMllXeHBaQ2tnS3lBbktTQjdJQ0FnSnp0Y2JpQWdJQ0FnSUNBZ2RtRnlJQ1FrYjNWMFUzUmhZMnNnUFNBa0pHOTFkRk4wWVdOcklIeDhJRnRkTzF4dUlDQWdJQ0FnSUNBa0pHOTFkRk4wWVdOckxuQjFjMmdvYjNWMEtUdGNiaUFnSUNBZ0lDQWdiM1YwSUQwZ0p5YzdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JsYkhObElDb3ZYRzRnSUNBZ0lDQWdJR2xtSUNocGRDNWpjbVZoZEdWRmNuSnZjbk1nSVQwOUlHWmhiSE5sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dleUJyWlhsM2IzSmtPaUJjWENjbklDc2dLQ2R5WlhGMWFYSmxaQ2NwSUNzZ0oxeGNKeUFzSUdSaGRHRlFZWFJvT2lBb1pHRjBZVkJoZEdnZ2ZId2dYRnduWEZ3bktTQXJJQ2NnS3lBb2FYUXVaWEp5YjNKUVlYUm9LU0FySUNjZ0xDQnpZMmhsYldGUVlYUm9PaUFuSUNzZ0tHbDBMblYwYVd3dWRHOVJkVzkwWldSVGRISnBibWNvSkdWeWNsTmphR1Z0WVZCaGRHZ3BLU0FySUNjZ0xDQndZWEpoYlhNNklIc2diV2x6YzJsdVoxQnliM0JsY25SNU9pQmNYQ2NuSUNzZ0tDUnRhWE56YVc1blVISnZjR1Z5ZEhrcElDc2dKMXhjSnlCOUlDYzdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXVnpjMkZuWlhNZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlBc0lHMWxjM05oWjJVNklGeGNKeWM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTVmWlhKeWIzSkVZWFJoVUdGMGFGQnliM0JsY25SNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbmFYTWdZU0J5WlhGMWFYSmxaQ0J3Y205d1pYSjBlU2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSjNOb2IzVnNaQ0JvWVhabElISmxjWFZwY21Wa0lIQnliM0JsY25SNUlGeGNYRnhjWENjbklDc2dLQ1J0YVhOemFXNW5VSEp2Y0dWeWRIa3BJQ3NnSjF4Y1hGeGNYQ2NuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkY1hDY2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtOXdkSE11ZG1WeVltOXpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J6WTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvSkhOamFHVnRZVkJoZEdncElDc2dKeUFzSUhCaGNtVnVkRk5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2hwZEM1elkyaGxiV0ZRWVhSb0tTQXJJQ2NnTENCa1lYUmhPaUFuSUNzZ0tDUmtZWFJoS1NBcklDY2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dmU0FuTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2RtRnlJRjlmWlhKeUlEMGdiM1YwTzF4dUlDQWdJQ0FnSUNCdmRYUWdQU0FrSkc5MWRGTjBZV05yTG5CdmNDZ3BPMXh1SUNBZ0lDQWdJQ0JwWmlBb0lXbDBMbU52YlhCdmMybDBaVkoxYkdVZ0ppWWdKR0p5WldGclQyNUZjbkp2Y2lrZ2V5QXZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdhV1lnS2k5Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvYVhRdVlYTjVibU1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFJvY205M0lHNWxkeUJXWVd4cFpHRjBhVzl1UlhKeWIzSW9XeWNnS3lBb1gxOWxjbklwSUNzZ0oxMHBPeUFuTzF4dUlDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVd4cFpHRjBaUzVsY25KdmNuTWdQU0JiSnlBcklDaGZYMlZ5Y2lrZ0t5QW5YVHNnY21WMGRYSnVJR1poYkhObE95QW5PMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZWElnWlhKeUlEMGdKeUFySUNoZlgyVnljaWtnS3lBbk95QWdhV1lnS0haRmNuSnZjbk1nUFQwOUlHNTFiR3dwSUhaRmNuSnZjbk1nUFNCYlpYSnlYVHNnWld4elpTQjJSWEp5YjNKekxuQjFjMmdvWlhKeUtUc2daWEp5YjNKekt5czdJQ2M3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2ZTQmxiSE5sSUhzZ0p6dGNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2dnSnp0Y2JpQWdJQ0FnSUNBZ2RtRnlJR0Z5Y2pJZ1BTQWtjbVZ4ZFdseVpXUTdYRzRnSUNBZ0lDQWdJR2xtSUNoaGNuSXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RtRnlJQ1J3Y205d1pYSjBlVXRsZVN3Z0pHa2dQU0F0TVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR3d5SUQwZ1lYSnlNaTVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJQ0FnSUNBZ0lIZG9hV3hsSUNna2FTQThJR3d5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FrY0hKdmNHVnlkSGxMWlhrZ1BTQmhjbkl5V3lScElDczlJREZkTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NScEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIeDhJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdKSEJ5YjNBZ1BTQnBkQzUxZEdsc0xtZGxkRkJ5YjNCbGNuUjVLQ1J3Y205d1pYSjBlVXRsZVNrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNSMWMyVkVZWFJoSUQwZ0pHUmhkR0VnS3lBa2NISnZjRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDZ2dLQ0FuSUNzZ0tDUjFjMlZFWVhSaEtTQXJJQ2NnUFQwOUlIVnVaR1ZtYVc1bFpDQW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ1J2ZDI1UWNtOXdaWEowYVdWektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIeDhJQ0VnVDJKcVpXTjBMbkJ5YjNSdmRIbHdaUzVvWVhOUGQyNVFjbTl3WlhKMGVTNWpZV3hzS0NjZ0t5QW9KR1JoZEdFcElDc2dKeXdnWEZ3bkp5QXJJQ2hwZEM1MWRHbHNMbVZ6WTJGd1pWRjFiM1JsY3lna2NISnZjR1Z5ZEhsTFpYa3BLU0FySUNkY1hDY3BJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlrZ0ppWWdLRzFwYzNOcGJtY25JQ3NnS0NSc2Rtd3BJQ3NnSnlBOUlDY2dLeUFvYVhRdWRYUnBiQzUwYjFGMWIzUmxaRk4wY21sdVp5aHBkQzV2Y0hSekxtcHpiMjVRYjJsdWRHVnljeUEvSUNSd2NtOXdaWEowZVV0bGVTQTZJQ1J3Y205d0tTa2dLeUFuS1NBcElDYzdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbktTQjdJQ0FuTzF4dUlDQWdJQ0FnSUNCMllYSWdKSEJ5YjNCbGNuUjVVR0YwYUNBOUlDZHRhWE56YVc1bkp5QXJJQ1JzZG13c1hHNGdJQ0FnSUNBZ0lDQWdKRzFwYzNOcGJtZFFjbTl3WlhKMGVTQTlJQ2RjWENjZ0t5QW5JQ3NnSkhCeWIzQmxjblI1VUdGMGFDQXJJQ2NnS3lCY1hDY25PMXh1SUNBZ0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1ZlpYSnliM0pFWVhSaFVHRjBhRkJ5YjNCbGNuUjVLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2FYUXVaWEp5YjNKUVlYUm9JRDBnYVhRdWIzQjBjeTVxYzI5dVVHOXBiblJsY25NZ1B5QnBkQzUxZEdsc0xtZGxkRkJoZEdoRmVIQnlLQ1JqZFhKeVpXNTBSWEp5YjNKUVlYUm9MQ0FrY0hKdmNHVnlkSGxRWVhSb0xDQjBjblZsS1NBNklDUmpkWEp5Wlc1MFJYSnliM0pRWVhSb0lDc2dKeUFySUNjZ0t5QWtjSEp2Y0dWeWRIbFFZWFJvTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIWmhjaUFrSkc5MWRGTjBZV05ySUQwZ0pDUnZkWFJUZEdGamF5QjhmQ0JiWFR0Y2JpQWdJQ0FnSUNBZ0pDUnZkWFJUZEdGamF5NXdkWE5vS0c5MWRDazdYRzRnSUNBZ0lDQWdJRzkxZENBOUlDY25PeUF2S2lCcGMzUmhibUoxYkNCcFoyNXZjbVVnWld4elpTQXFMMXh1SUNBZ0lDQWdJQ0JwWmlBb2FYUXVZM0psWVhSbFJYSnliM0p6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSHNnYTJWNWQyOXlaRG9nWEZ3bkp5QXJJQ2duY21WeGRXbHlaV1FuS1NBcklDZGNYQ2NnTENCa1lYUmhVR0YwYURvZ0tHUmhkR0ZRWVhSb0lIeDhJRnhjSjF4Y0p5a2dLeUFuSUNzZ0tHbDBMbVZ5Y205eVVHRjBhQ2tnS3lBbklDd2djMk5vWlcxaFVHRjBhRG9nSnlBcklDaHBkQzUxZEdsc0xuUnZVWFZ2ZEdWa1UzUnlhVzVuS0NSbGNuSlRZMmhsYldGUVlYUm9LU2tnS3lBbklDd2djR0Z5WVcxek9pQjdJRzFwYzNOcGJtZFFjbTl3WlhKMGVUb2dYRnduSnlBcklDZ2tiV2x6YzJsdVoxQnliM0JsY25SNUtTQXJJQ2RjWENjZ2ZTQW5PMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxtMWxjM05oWjJWeklDRTlQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnRaWE56WVdkbE9pQmNYQ2NuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtOXdkSE11WDJWeWNtOXlSR0YwWVZCaGRHaFFjbTl3WlhKMGVTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0oybHpJR0VnY21WeGRXbHlaV1FnY0hKdmNHVnlkSGtuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkemFHOTFiR1FnYUdGMlpTQnlaWEYxYVhKbFpDQndjbTl3WlhKMGVTQmNYRnhjWEZ3bkp5QXJJQ2drYldsemMybHVaMUJ5YjNCbGNuUjVLU0FySUNkY1hGeGNYRnduSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBblhGd25JQ2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TG5abGNtSnZjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYzJOb1pXMWhPaUIyWVd4cFpHRjBaUzV6WTJobGJXRW5JQ3NnS0NSelkyaGxiV0ZRWVhSb0tTQXJJQ2NnTENCd1lYSmxiblJUWTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvYVhRdWMyTm9aVzFoVUdGMGFDa2dLeUFuSUN3Z1pHRjBZVG9nSnlBcklDZ2taR0YwWVNrZ0t5QW5JQ2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSDBnSnp0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjdmU0FuTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIWmhjaUJmWDJWeWNpQTlJRzkxZER0Y2JpQWdJQ0FnSUNBZ2IzVjBJRDBnSkNSdmRYUlRkR0ZqYXk1d2IzQW9LVHRjYmlBZ0lDQWdJQ0FnYVdZZ0tDRnBkQzVqYjIxd2IzTnBkR1ZTZFd4bElDWW1JQ1JpY21WaGEwOXVSWEp5YjNJcElIc2dMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJR2xtSUNvdlhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtRnplVzVqS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIwYUhKdmR5QnVaWGNnVm1Gc2FXUmhkR2x2YmtWeWNtOXlLRnNuSUNzZ0tGOWZaWEp5S1NBcklDZGRLVHNnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZG1Gc2FXUmhkR1V1WlhKeWIzSnpJRDBnV3ljZ0t5QW9YMTlsY25JcElDc2dKMTA3SUhKbGRIVnliaUJtWVd4elpUc2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUdWeWNpQTlJQ2NnS3lBb1gxOWxjbklwSUNzZ0p6c2dJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ1cyVnljbDA3SUdWc2MyVWdka1Z5Y205eWN5NXdkWE5vS0dWeWNpazdJR1Z5Y205eWN5c3JPeUFuTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIMGdaV3h6WlNCN0lDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUdsbUlDZ2tiRzl2Y0ZKbGNYVnBjbVZrS1NCN1hHNGdJQ0FnSUNBZ0lHbG1JQ2doSkdselJHRjBZU2tnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhjaUFuSUNzZ0tDUjJVMk5vWlcxaEtTQXJJQ2NnUFNCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tDUnpZMmhsYldGUVlYUm9LU0FySUNjN0lDYzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZG1GeUlDUnBJRDBnSjJrbklDc2dKR3gyYkN4Y2JpQWdJQ0FnSUNBZ0lDQWtjSEp2Y0dWeWRIbFFZWFJvSUQwZ0ozTmphR1Z0WVNjZ0t5QWtiSFpzSUNzZ0oxc25JQ3NnSkdrZ0t5QW5YU2NzWEc0Z0lDQWdJQ0FnSUNBZ0pHMXBjM05wYm1kUWNtOXdaWEowZVNBOUlDZGNYQ2NnS3lBbklDc2dKSEJ5YjNCbGNuUjVVR0YwYUNBcklDY2dLeUJjWENjbk8xeHVJQ0FnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTVmWlhKeWIzSkVZWFJoVUdGMGFGQnliM0JsY25SNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnYVhRdVpYSnliM0pRWVhSb0lEMGdhWFF1ZFhScGJDNW5aWFJRWVhSb1JYaHdjaWdrWTNWeWNtVnVkRVZ5Y205eVVHRjBhQ3dnSkhCeWIzQmxjblI1VUdGMGFDd2dhWFF1YjNCMGN5NXFjMjl1VUc5cGJuUmxjbk1wTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lHbG1JQ2drYVhORVlYUmhLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2FXWWdLQ2NnS3lBb0pIWlRZMmhsYldFcElDc2dKeUFtSmlBaFFYSnlZWGt1YVhOQmNuSmhlU2duSUNzZ0tDUjJVMk5vWlcxaEtTQXJJQ2NwS1NCN0lDQjJZWElnWlhKeUlEMGdJQ0FuT3lBdktpQnBjM1JoYm1KMWJDQnBaMjV2Y21VZ1pXeHpaU0FxTDF4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2hwZEM1amNtVmhkR1ZGY25KdmNuTWdJVDA5SUdaaGJITmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjdJR3RsZVhkdmNtUTZJRnhjSnljZ0t5QW9KM0psY1hWcGNtVmtKeWtnS3lBblhGd25JQ3dnWkdGMFlWQmhkR2c2SUNoa1lYUmhVR0YwYUNCOGZDQmNYQ2RjWENjcElDc2dKeUFySUNocGRDNWxjbkp2Y2xCaGRHZ3BJQ3NnSnlBc0lITmphR1Z0WVZCaGRHZzZJQ2NnS3lBb2FYUXVkWFJwYkM1MGIxRjFiM1JsWkZOMGNtbHVaeWdrWlhKeVUyTm9aVzFoVUdGMGFDa3BJQ3NnSnlBc0lIQmhjbUZ0Y3pvZ2V5QnRhWE56YVc1blVISnZjR1Z5ZEhrNklGeGNKeWNnS3lBb0pHMXBjM05wYm1kUWNtOXdaWEowZVNrZ0t5QW5YRnduSUgwZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxtMWxjM05oWjJWeklDRTlQU0JtWVd4elpTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QXNJRzFsYzNOaFoyVTZJRnhjSnljN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxsOWxjbkp2Y2tSaGRHRlFZWFJvVUhKdmNHVnlkSGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSjJseklHRWdjbVZ4ZFdseVpXUWdjSEp2Y0dWeWRIa25PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbmMyaHZkV3hrSUdoaGRtVWdjbVZ4ZFdseVpXUWdjSEp2Y0dWeWRIa2dYRnhjWEZ4Y0p5Y2dLeUFvSkcxcGMzTnBibWRRY205d1pYSjBlU2tnS3lBblhGeGNYRnhjSnljN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2RjWENjZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocGRDNXZjSFJ6TG5abGNtSnZjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnTENCelkyaGxiV0U2SUhaaGJHbGtZWFJsTG5OamFHVnRZU2NnS3lBb0pITmphR1Z0WVZCaGRHZ3BJQ3NnSnlBc0lIQmhjbVZ1ZEZOamFHVnRZVG9nZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNocGRDNXpZMmhsYldGUVlYUm9LU0FySUNjZ0xDQmtZWFJoT2lBbklDc2dLQ1JrWVhSaEtTQXJJQ2NnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2M3SUNCcFppQW9ka1Z5Y205eWN5QTlQVDBnYm5Wc2JDa2dka1Z5Y205eWN5QTlJRnRsY25KZE95QmxiSE5sSUhaRmNuSnZjbk11Y0hWemFDaGxjbklwT3lCbGNuSnZjbk1yS3pzZ2ZTQmxiSE5sSUdsbUlDZ25JQ3NnS0NSMlUyTm9aVzFoS1NBcklDY2dJVDA5SUhWdVpHVm1hVzVsWkNrZ2V5QW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUdadmNpQW9kbUZ5SUNjZ0t5QW9KR2twSUNzZ0p5QTlJREE3SUNjZ0t5QW9KR2twSUNzZ0p5QThJQ2NnS3lBb0pIWlRZMmhsYldFcElDc2dKeTVzWlc1bmRHZzdJQ2NnS3lBb0pHa3BJQ3NnSnlzcktTQjdJR2xtSUNnbklDc2dLQ1JrWVhSaEtTQXJJQ2RiSnlBcklDZ2tkbE5qYUdWdFlTa2dLeUFuV3ljZ0t5QW9KR2twSUNzZ0oxMWRJRDA5UFNCMWJtUmxabWx1WldRZ0p6dGNiaUFnSUNBZ0lDQWdhV1lnS0NSdmQyNVFjbTl3WlhKMGFXVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2ZId2dJU0JQWW1wbFkzUXVjSEp2ZEc5MGVYQmxMbWhoYzA5M2JsQnliM0JsY25SNUxtTmhiR3dvSnlBcklDZ2taR0YwWVNrZ0t5QW5MQ0FuSUNzZ0tDUjJVMk5vWlcxaEtTQXJJQ2RiSnlBcklDZ2thU2tnS3lBblhTa2dKenRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlrZ2V5QWdkbUZ5SUdWeWNpQTlJQ0FnSnpzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHVnNjMlVnS2k5Y2JpQWdJQ0FnSUNBZ2FXWWdLR2wwTG1OeVpXRjBaVVZ5Y205eWN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0ozSmxjWFZwY21Wa0p5a2dLeUFuWEZ3bklDd2daR0YwWVZCaGRHZzZJQ2hrWVhSaFVHRjBhQ0I4ZkNCY1hDZGNYQ2NwSUNzZ0p5QXJJQ2hwZEM1bGNuSnZjbEJoZEdncElDc2dKeUFzSUhOamFHVnRZVkJoZEdnNklDY2dLeUFvYVhRdWRYUnBiQzUwYjFGMWIzUmxaRk4wY21sdVp5Z2taWEp5VTJOb1pXMWhVR0YwYUNrcElDc2dKeUFzSUhCaGNtRnRjem9nZXlCdGFYTnphVzVuVUhKdmNHVnlkSGs2SUZ4Y0p5Y2dLeUFvSkcxcGMzTnBibWRRY205d1pYSjBlU2tnS3lBblhGd25JSDBnSnp0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTV0WlhOellXZGxjeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ3dnYldWemMyRm5aVG9nWEZ3bkp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxsOWxjbkp2Y2tSaGRHRlFZWFJvVUhKdmNHVnlkSGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2RwY3lCaElISmxjWFZwY21Wa0lIQnliM0JsY25SNUp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5jMmh2ZFd4a0lHaGhkbVVnY21WeGRXbHlaV1FnY0hKdmNHVnlkSGtnWEZ4Y1hGeGNKeWNnS3lBb0pHMXBjM05wYm1kUWNtOXdaWEowZVNrZ0t5QW5YRnhjWEZ4Y0p5YzdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKMXhjSnlBbk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1YjNCMGN5NTJaWEppYjNObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlBc0lITmphR1Z0WVRvZ2RtRnNhV1JoZEdVdWMyTm9aVzFoSnlBcklDZ2tjMk5vWlcxaFVHRjBhQ2tnS3lBbklDd2djR0Z5Wlc1MFUyTm9aVzFoT2lCMllXeHBaR0YwWlM1elkyaGxiV0VuSUNzZ0tHbDBMbk5qYUdWdFlWQmhkR2dwSUNzZ0p5QXNJR1JoZEdFNklDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBbk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZTMwZ0p6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKenNnSUdsbUlDaDJSWEp5YjNKeklEMDlQU0J1ZFd4c0tTQjJSWEp5YjNKeklEMGdXMlZ5Y2wwN0lHVnNjMlVnZGtWeWNtOXljeTV3ZFhOb0tHVnljaWs3SUdWeWNtOXljeXNyT3lCOUlIMGdKenRjYmlBZ0lDQWdJQ0FnYVdZZ0tDUnBjMFJoZEdFcElIdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFnZlNBZ0p6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUdGeWNqTWdQU0FrY21WeGRXbHlaV1E3WEc0Z0lDQWdJQ0FnSUdsbUlDaGhjbkl6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUNSd2NtOXdaWEowZVV0bGVTd2dhVE1nUFNBdE1TeGNiaUFnSUNBZ0lDQWdJQ0FnSUd3eklEMGdZWEp5TXk1c1pXNW5kR2dnTFNBeE8xeHVJQ0FnSUNBZ0lDQWdJSGRvYVd4bElDaHBNeUE4SUd3ektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBa2NISnZjR1Z5ZEhsTFpYa2dQU0JoY25Jelcya3pJQ3M5SURGZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlDUndjbTl3SUQwZ2FYUXVkWFJwYkM1blpYUlFjbTl3WlhKMGVTZ2tjSEp2Y0dWeWRIbExaWGtwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FrYldsemMybHVaMUJ5YjNCbGNuUjVJRDBnYVhRdWRYUnBiQzVsYzJOaGNHVlJkVzkwWlhNb0pIQnliM0JsY25SNVMyVjVLU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdKSFZ6WlVSaGRHRWdQU0FrWkdGMFlTQXJJQ1J3Y205d08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdVgyVnljbTl5UkdGMFlWQmhkR2hRY205d1pYSjBlU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JwZEM1bGNuSnZjbEJoZEdnZ1BTQnBkQzUxZEdsc0xtZGxkRkJoZEdnb0pHTjFjbkpsYm5SRmNuSnZjbEJoZEdnc0lDUndjbTl3WlhKMGVVdGxlU3dnYVhRdWIzQjBjeTVxYzI5dVVHOXBiblJsY25NcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0NBbklDc2dLQ1IxYzJWRVlYUmhLU0FySUNjZ1BUMDlJSFZ1WkdWbWFXNWxaQ0FuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NSdmQyNVFjbTl3WlhKMGFXVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSHg4SUNFZ1QySnFaV04wTG5CeWIzUnZkSGx3WlM1b1lYTlBkMjVRY205d1pYSjBlUzVqWVd4c0tDY2dLeUFvSkdSaGRHRXBJQ3NnSnl3Z1hGd25KeUFySUNocGRDNTFkR2xzTG1WelkyRndaVkYxYjNSbGN5Z2tjSEp2Y0dWeWRIbExaWGtwS1NBcklDZGNYQ2NwSUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5a2dleUFnZG1GeUlHVnljaUE5SUNBZ0p6c2dMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJR1ZzYzJVZ0tpOWNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBkQzVqY21WaGRHVkZjbkp2Y25NZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIc2dhMlY1ZDI5eVpEb2dYRnduSnlBcklDZ25jbVZ4ZFdseVpXUW5LU0FySUNkY1hDY2dMQ0JrWVhSaFVHRjBhRG9nS0dSaGRHRlFZWFJvSUh4OElGeGNKMXhjSnlrZ0t5QW5JQ3NnS0dsMExtVnljbTl5VUdGMGFDa2dLeUFuSUN3Z2MyTm9aVzFoVUdGMGFEb2dKeUFySUNocGRDNTFkR2xzTG5SdlVYVnZkR1ZrVTNSeWFXNW5LQ1JsY25KVFkyaGxiV0ZRWVhSb0tTa2dLeUFuSUN3Z2NHRnlZVzF6T2lCN0lHMXBjM05wYm1kUWNtOXdaWEowZVRvZ1hGd25KeUFySUNna2JXbHpjMmx1WjFCeWIzQmxjblI1S1NBcklDZGNYQ2NnZlNBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1YjNCMGN5NXRaWE56WVdkbGN5QWhQVDBnWm1Gc2MyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFzSUcxbGMzTmhaMlU2SUZ4Y0p5YzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtOXdkSE11WDJWeWNtOXlSR0YwWVZCaGRHaFFjbTl3WlhKMGVTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2RwY3lCaElISmxjWFZwY21Wa0lIQnliM0JsY25SNUp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDZHphRzkxYkdRZ2FHRjJaU0J5WlhGMWFYSmxaQ0J3Y205d1pYSjBlU0JjWEZ4Y1hGd25KeUFySUNna2JXbHpjMmx1WjFCeWIzQmxjblI1S1NBcklDZGNYRnhjWEZ3bkp6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDZGNYQ2NnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0xDQnpZMmhsYldFNklIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9KSE5qYUdWdFlWQmhkR2dwSUNzZ0p5QXNJSEJoY21WdWRGTmphR1Z0WVRvZ2RtRnNhV1JoZEdVdWMyTm9aVzFoSnlBcklDaHBkQzV6WTJobGJXRlFZWFJvS1NBcklDY2dMQ0JrWVhSaE9pQW5JQ3NnS0NSa1lYUmhLU0FySUNjZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCOUlDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI3ZlNBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDYzdJQ0JwWmlBb2RrVnljbTl5Y3lBOVBUMGdiblZzYkNrZ2RrVnljbTl5Y3lBOUlGdGxjbkpkT3lCbGJITmxJSFpGY25KdmNuTXVjSFZ6YUNobGNuSXBPeUJsY25KdmNuTXJLenNnZlNBbk8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ0lDQnBkQzVsY25KdmNsQmhkR2dnUFNBa1kzVnljbVZ1ZEVWeWNtOXlVR0YwYUR0Y2JpQWdmU0JsYkhObElHbG1JQ2drWW5KbFlXdFBia1Z5Y205eUtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2FXWWdLSFJ5ZFdVcElIc25PMXh1SUNCOVhHNGdJSEpsZEhWeWJpQnZkWFE3WEc1OVhHNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvcmVxdWlyZWQuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3VuaXF1ZUl0ZW1zLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy91bmlxdWVJdGVtcy5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdlbmVyYXRlX3VuaXF1ZUl0ZW1zKGl0LCAka2V5d29yZCwgJHJ1bGVUeXBlKSB7XFxcXG4gIHZhciBvdXQgPSAnICc7XFxcXG4gIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gIHZhciAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbDtcXFxcbiAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWFbJGtleXdvcmRdO1xcXFxuICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gIHZhciAkZXJyU2NoZW1hUGF0aCA9IGl0LmVyclNjaGVtYVBhdGggKyAnLycgKyAka2V5d29yZDtcXFxcbiAgdmFyICRicmVha09uRXJyb3IgPSAhaXQub3B0cy5hbGxFcnJvcnM7XFxcXG4gIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gIHZhciAkdmFsaWQgPSAndmFsaWQnICsgJGx2bDtcXFxcbiAgdmFyICRpc0RhdGEgPSBpdC5vcHRzLiRkYXRhICYmICRzY2hlbWEgJiYgJHNjaGVtYS4kZGF0YSxcXFxcbiAgICAkc2NoZW1hVmFsdWU7XFxcXG4gIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgb3V0ICs9ICcgdmFyIHNjaGVtYScgKyAoJGx2bCkgKyAnID0gJyArIChpdC51dGlsLmdldERhdGEoJHNjaGVtYS4kZGF0YSwgJGRhdGFMdmwsIGl0LmRhdGFQYXRoQXJyKSkgKyAnOyAnO1xcXFxuICAgICRzY2hlbWFWYWx1ZSA9ICdzY2hlbWEnICsgJGx2bDtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICAkc2NoZW1hVmFsdWUgPSAkc2NoZW1hO1xcXFxuICB9XFxcXG4gIGlmICgoJHNjaGVtYSB8fCAkaXNEYXRhKSAmJiBpdC5vcHRzLnVuaXF1ZUl0ZW1zICE9PSBmYWxzZSkge1xcXFxuICAgIGlmICgkaXNEYXRhKSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJzsgaWYgKCcgKyAoJHNjaGVtYVZhbHVlKSArICcgPT09IGZhbHNlIHx8ICcgKyAoJHNjaGVtYVZhbHVlKSArICcgPT09IHVuZGVmaW5lZCkgJyArICgkdmFsaWQpICsgJyA9IHRydWU7IGVsc2UgaWYgKHR5cGVvZiAnICsgKCRzY2hlbWFWYWx1ZSkgKyAnICE9IFxcXFxcXFxcJ2Jvb2xlYW5cXFxcXFxcXCcpICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgZWxzZSB7ICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIHZhciAnICsgKCR2YWxpZCkgKyAnID0gdHJ1ZTsgaWYgKCcgKyAoJGRhdGEpICsgJy5sZW5ndGggPiAxKSB7IHZhciBpID0gJyArICgkZGF0YSkgKyAnLmxlbmd0aCwgajsgb3V0ZXI6IGZvciAoO2ktLTspIHsgZm9yIChqID0gaTsgai0tOykgeyBpZiAoZXF1YWwoJyArICgkZGF0YSkgKyAnW2ldLCAnICsgKCRkYXRhKSArICdbal0pKSB7ICcgKyAoJHZhbGlkKSArICcgPSBmYWxzZTsgYnJlYWsgb3V0ZXI7IH0gfSB9IH0gJztcXFxcbiAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgb3V0ICs9ICcgIH0gICc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIGlmICghJyArICgkdmFsaWQpICsgJykgeyAgICc7XFxcXG4gICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJ3VuaXF1ZUl0ZW1zJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyBpOiBpLCBqOiBqIH0gJztcXFxcbiAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBOT1QgaGF2ZSBkdXBsaWNhdGUgaXRlbXMgKGl0ZW1zICMjIFxcXFxcXFxcJyArIGogKyBcXFxcXFxcXCcgYW5kIFxcXFxcXFxcJyArIGkgKyBcXFxcXFxcXCcgYXJlIGlkZW50aWNhbClcXFxcXFxcXCcgJztcXFxcbiAgICAgIH1cXFxcbiAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6ICAnO1xcXFxuICAgICAgICBpZiAoJGlzRGF0YSkge1xcXFxuICAgICAgICAgIG91dCArPSAndmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCk7XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcnICsgKCRzY2hlbWEpO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIG91dCArPSAnICAgICAgICAgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIG91dCArPSAnIHt9ICc7XFxcXG4gICAgfVxcXFxuICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgIH1cXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgIH1cXFxcbiAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgIG91dCArPSAnIGVsc2UgeyAnO1xcXFxuICAgIH1cXFxcbiAgfSBlbHNlIHtcXFxcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgb3V0ICs9ICcgaWYgKHRydWUpIHsgJztcXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgcmV0dXJuIG91dDtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5MWJtbHhkV1ZKZEdWdGN5NXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwyRnFkaTlzYVdJdlpHOTBhbk12ZFc1cGNYVmxTWFJsYlhNdWFuTS9aRE13WlNKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW5kWE5sSUhOMGNtbGpkQ2M3WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUdkbGJtVnlZWFJsWDNWdWFYRjFaVWwwWlcxektHbDBMQ0FrYTJWNWQyOXlaQ3dnSkhKMWJHVlVlWEJsS1NCN1hHNGdJSFpoY2lCdmRYUWdQU0FuSUNjN1hHNGdJSFpoY2lBa2JIWnNJRDBnYVhRdWJHVjJaV3c3WEc0Z0lIWmhjaUFrWkdGMFlVeDJiQ0E5SUdsMExtUmhkR0ZNWlhabGJEdGNiaUFnZG1GeUlDUnpZMmhsYldFZ1BTQnBkQzV6WTJobGJXRmJKR3RsZVhkdmNtUmRPMXh1SUNCMllYSWdKSE5qYUdWdFlWQmhkR2dnUFNCcGRDNXpZMmhsYldGUVlYUm9JQ3NnYVhRdWRYUnBiQzVuWlhSUWNtOXdaWEowZVNna2EyVjVkMjl5WkNrN1hHNGdJSFpoY2lBa1pYSnlVMk5vWlcxaFVHRjBhQ0E5SUdsMExtVnljbE5qYUdWdFlWQmhkR2dnS3lBbkx5Y2dLeUFrYTJWNWQyOXlaRHRjYmlBZ2RtRnlJQ1JpY21WaGEwOXVSWEp5YjNJZ1BTQWhhWFF1YjNCMGN5NWhiR3hGY25KdmNuTTdYRzRnSUhaaGNpQWtaR0YwWVNBOUlDZGtZWFJoSnlBcklDZ2taR0YwWVV4MmJDQjhmQ0FuSnlrN1hHNGdJSFpoY2lBa2RtRnNhV1FnUFNBbmRtRnNhV1FuSUNzZ0pHeDJiRHRjYmlBZ2RtRnlJQ1JwYzBSaGRHRWdQU0JwZEM1dmNIUnpMaVJrWVhSaElDWW1JQ1J6WTJobGJXRWdKaVlnSkhOamFHVnRZUzRrWkdGMFlTeGNiaUFnSUNBa2MyTm9aVzFoVm1Gc2RXVTdYRzRnSUdsbUlDZ2thWE5FWVhSaEtTQjdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJSE5qYUdWdFlTY2dLeUFvSkd4MmJDa2dLeUFuSUQwZ0p5QXJJQ2hwZEM1MWRHbHNMbWRsZEVSaGRHRW9KSE5qYUdWdFlTNGtaR0YwWVN3Z0pHUmhkR0ZNZG13c0lHbDBMbVJoZEdGUVlYUm9RWEp5S1NrZ0t5QW5PeUFuTzF4dUlDQWdJQ1J6WTJobGJXRldZV3gxWlNBOUlDZHpZMmhsYldFbklDc2dKR3gyYkR0Y2JpQWdmU0JsYkhObElIdGNiaUFnSUNBa2MyTm9aVzFoVm1Gc2RXVWdQU0FrYzJOb1pXMWhPMXh1SUNCOVhHNGdJR2xtSUNnb0pITmphR1Z0WVNCOGZDQWthWE5FWVhSaEtTQW1KaUJwZEM1dmNIUnpMblZ1YVhGMVpVbDBaVzF6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUdsbUlDZ2thWE5FWVhSaEtTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZWElnSnlBcklDZ2tkbUZzYVdRcElDc2dKenNnYVdZZ0tDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NnUFQwOUlHWmhiSE5sSUh4OElDY2dLeUFvSkhOamFHVnRZVlpoYkhWbEtTQXJJQ2NnUFQwOUlIVnVaR1ZtYVc1bFpDa2dKeUFySUNna2RtRnNhV1FwSUNzZ0p5QTlJSFJ5ZFdVN0lHVnNjMlVnYVdZZ0tIUjVjR1Z2WmlBbklDc2dLQ1J6WTJobGJXRldZV3gxWlNrZ0t5QW5JQ0U5SUZ4Y0oySnZiMnhsWVc1Y1hDY3BJQ2NnS3lBb0pIWmhiR2xrS1NBcklDY2dQU0JtWVd4elpUc2daV3h6WlNCN0lDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQW5JQ3NnS0NSMllXeHBaQ2tnS3lBbklEMGdkSEoxWlRzZ2FXWWdLQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5NXNaVzVuZEdnZ1BpQXhLU0I3SUhaaGNpQnBJRDBnSnlBcklDZ2taR0YwWVNrZ0t5QW5MbXhsYm1kMGFDd2dhanNnYjNWMFpYSTZJR1p2Y2lBb08ya3RMVHNwSUhzZ1ptOXlJQ2hxSUQwZ2FUc2dhaTB0T3lrZ2V5QnBaaUFvWlhGMVlXd29KeUFySUNna1pHRjBZU2tnS3lBblcybGRMQ0FuSUNzZ0tDUmtZWFJoS1NBcklDZGJhbDBwS1NCN0lDY2dLeUFvSkhaaGJHbGtLU0FySUNjZ1BTQm1ZV3h6WlRzZ1luSmxZV3NnYjNWMFpYSTdJSDBnZlNCOUlIMGdKenRjYmlBZ0lDQnBaaUFvSkdselJHRjBZU2tnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnSUgwZ0lDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSUdsbUlDZ2hKeUFySUNna2RtRnNhV1FwSUNzZ0p5a2dleUFnSUNjN1hHNGdJQ0FnZG1GeUlDUWtiM1YwVTNSaFkyc2dQU0FrSkc5MWRGTjBZV05ySUh4OElGdGRPMXh1SUNBZ0lDUWtiM1YwVTNSaFkyc3VjSFZ6YUNodmRYUXBPMXh1SUNBZ0lHOTFkQ0E5SUNjbk95QXZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdaV3h6WlNBcUwxeHVJQ0FnSUdsbUlDaHBkQzVqY21WaGRHVkZjbkp2Y25NZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjdJR3RsZVhkdmNtUTZJRnhjSnljZ0t5QW9KM1Z1YVhGMVpVbDBaVzF6SnlrZ0t5QW5YRnduSUN3Z1pHRjBZVkJoZEdnNklDaGtZWFJoVUdGMGFDQjhmQ0JjWENkY1hDY3BJQ3NnSnlBcklDaHBkQzVsY25KdmNsQmhkR2dwSUNzZ0p5QXNJSE5qYUdWdFlWQmhkR2c2SUNjZ0t5QW9hWFF1ZFhScGJDNTBiMUYxYjNSbFpGTjBjbWx1Wnlna1pYSnlVMk5vWlcxaFVHRjBhQ2twSUNzZ0p5QXNJSEJoY21GdGN6b2dleUJwT2lCcExDQnFPaUJxSUgwZ0p6dGNiaUFnSUNBZ0lHbG1JQ2hwZEM1dmNIUnpMbTFsYzNOaFoyVnpJQ0U5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlBc0lHMWxjM05oWjJVNklGeGNKM05vYjNWc1pDQk9UMVFnYUdGMlpTQmtkWEJzYVdOaGRHVWdhWFJsYlhNZ0tHbDBaVzF6SUNNaklGeGNKeUFySUdvZ0t5QmNYQ2NnWVc1a0lGeGNKeUFySUdrZ0t5QmNYQ2NnWVhKbElHbGtaVzUwYVdOaGJDbGNYQ2NnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxuWmxjbUp2YzJVcElIdGNiaUFnSUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J6WTJobGJXRTZJQ0FuTzF4dUlDQWdJQ0FnSUNCcFppQW9KR2x6UkdGMFlTa2dlMXh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNna2MyTm9aVzFoVUdGMGFDazdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NuSUNzZ0tDUnpZMmhsYldFcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ0FnSUNBZ0lDQWdMQ0J3WVhKbGJuUlRZMmhsYldFNklIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9hWFF1YzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnWkdGMFlUb2dKeUFySUNna1pHRjBZU2tnS3lBbklDYzdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQnZkWFFnS3owZ0p5QjlJQ2M3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIdDlJQ2M3WEc0Z0lDQWdmVnh1SUNBZ0lIWmhjaUJmWDJWeWNpQTlJRzkxZER0Y2JpQWdJQ0J2ZFhRZ1BTQWtKRzkxZEZOMFlXTnJMbkJ2Y0NncE8xeHVJQ0FnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUNBZ2FXWWdLR2wwTG1GemVXNWpLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhSb2NtOTNJRzVsZHlCV1lXeHBaR0YwYVc5dVJYSnliM0lvV3ljZ0t5QW9YMTlsY25JcElDc2dKMTBwT3lBbk8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnNhV1JoZEdVdVpYSnliM0p6SUQwZ1d5Y2dLeUFvWDE5bGNuSXBJQ3NnSjEwN0lISmxkSFZ5YmlCbVlXeHpaVHNnSnp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZ5SUdWeWNpQTlJQ2NnS3lBb1gxOWxjbklwSUNzZ0p6c2dJR2xtSUNoMlJYSnliM0p6SUQwOVBTQnVkV3hzS1NCMlJYSnliM0p6SUQwZ1cyVnljbDA3SUdWc2MyVWdka1Z5Y205eWN5NXdkWE5vS0dWeWNpazdJR1Z5Y205eWN5c3JPeUFuTzF4dUlDQWdJSDFjYmlBZ0lDQnZkWFFnS3owZ0p5QjlJQ2M3WEc0Z0lDQWdhV1lnS0NSaWNtVmhhMDl1UlhKeWIzSXBJSHRjYmlBZ0lDQWdJRzkxZENBclBTQW5JR1ZzYzJVZ2V5QW5PMXh1SUNBZ0lIMWNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0hSeWRXVXBJSHNnSnp0Y2JpQWdJQ0I5WEc0Z0lIMWNiaUFnY21WMGRYSnVJRzkxZER0Y2JuMWNiaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy91bmlxdWVJdGVtcy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvdmFsaWRhdGUuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL2RvdGpzL3ZhbGlkYXRlLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2VuZXJhdGVfdmFsaWRhdGUoaXQsICRrZXl3b3JkLCAkcnVsZVR5cGUpIHtcXFxcbiAgdmFyIG91dCA9ICcnO1xcXFxuICB2YXIgJGFzeW5jID0gaXQuc2NoZW1hLiRhc3luYyA9PT0gdHJ1ZSxcXFxcbiAgICAkcmVmS2V5d29yZHMgPSBpdC51dGlsLnNjaGVtYUhhc1J1bGVzRXhjZXB0KGl0LnNjaGVtYSwgaXQuUlVMRVMuYWxsLCAnJHJlZicpLFxcXFxuICAgICRpZCA9IGl0LnNlbGYuX2dldElkKGl0LnNjaGVtYSk7XFxcXG4gIGlmIChpdC5pc1RvcCkge1xcXFxuICAgIGlmICgkYXN5bmMpIHtcXFxcbiAgICAgIGl0LmFzeW5jID0gdHJ1ZTtcXFxcbiAgICAgIHZhciAkZXM3ID0gaXQub3B0cy5hc3luYyA9PSAnZXM3JztcXFxcbiAgICAgIGl0LnlpZWxkQXdhaXQgPSAkZXM3ID8gJ2F3YWl0JyA6ICd5aWVsZCc7XFxcXG4gICAgfVxcXFxuICAgIG91dCArPSAnIHZhciB2YWxpZGF0ZSA9ICc7XFxcXG4gICAgaWYgKCRhc3luYykge1xcXFxuICAgICAgaWYgKCRlczcpIHtcXFxcbiAgICAgICAgb3V0ICs9ICcgKGFzeW5jIGZ1bmN0aW9uICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBpZiAoaXQub3B0cy5hc3luYyAhPSAnKicpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJ2NvLndyYXAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIG91dCArPSAnKGZ1bmN0aW9uKiAnO1xcXFxuICAgICAgfVxcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyAoZnVuY3Rpb24gJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgKGRhdGEsIGRhdGFQYXRoLCBwYXJlbnREYXRhLCBwYXJlbnREYXRhUHJvcGVydHksIHJvb3REYXRhKSB7IFxcXFxcXFxcJ3VzZSBzdHJpY3RcXFxcXFxcXCc7ICc7XFxcXG4gICAgaWYgKCRpZCAmJiAoaXQub3B0cy5zb3VyY2VDb2RlIHx8IGl0Lm9wdHMucHJvY2Vzc0NvZGUpKSB7XFxcXG4gICAgICBvdXQgKz0gJyAnICsgKCcvXFxcXFxcXFwqIyBzb3VyY2VVUkw9JyArICRpZCArICcgKi8nKSArICcgJztcXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgaWYgKHR5cGVvZiBpdC5zY2hlbWEgPT0gJ2Jvb2xlYW4nIHx8ICEoJHJlZktleXdvcmRzIHx8IGl0LnNjaGVtYS4kcmVmKSkge1xcXFxuICAgIHZhciAka2V5d29yZCA9ICdmYWxzZSBzY2hlbWEnO1xcXFxuICAgIHZhciAkbHZsID0gaXQubGV2ZWw7XFxcXG4gICAgdmFyICRkYXRhTHZsID0gaXQuZGF0YUxldmVsO1xcXFxuICAgIHZhciAkc2NoZW1hID0gaXQuc2NoZW1hWyRrZXl3b3JkXTtcXFxcbiAgICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgaXQudXRpbC5nZXRQcm9wZXJ0eSgka2V5d29yZCk7XFxcXG4gICAgdmFyICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvJyArICRrZXl3b3JkO1xcXFxuICAgIHZhciAkYnJlYWtPbkVycm9yID0gIWl0Lm9wdHMuYWxsRXJyb3JzO1xcXFxuICAgIHZhciAkZXJyb3JLZXl3b3JkO1xcXFxuICAgIHZhciAkZGF0YSA9ICdkYXRhJyArICgkZGF0YUx2bCB8fCAnJyk7XFxcXG4gICAgdmFyICR2YWxpZCA9ICd2YWxpZCcgKyAkbHZsO1xcXFxuICAgIGlmIChpdC5zY2hlbWEgPT09IGZhbHNlKSB7XFxcXG4gICAgICBpZiAoaXQuaXNUb3ApIHtcXFxcbiAgICAgICAgJGJyZWFrT25FcnJvciA9IHRydWU7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkdmFsaWQpICsgJyA9IGZhbHNlOyAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAgICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgkZXJyb3JLZXl3b3JkIHx8ICdmYWxzZSBzY2hlbWEnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7fSAnO1xcXFxuICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ2Jvb2xlYW4gc2NoZW1hIGlzIGZhbHNlXFxcXFxcXFwnICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiBmYWxzZSAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgfVxcXFxuICAgICAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgICAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gICAgICB9XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIGlmIChpdC5pc1RvcCkge1xcXFxuICAgICAgICBpZiAoJGFzeW5jKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgcmV0dXJuIGRhdGE7ICc7XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gbnVsbDsgcmV0dXJuIHRydWU7ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnIHZhciAnICsgKCR2YWxpZCkgKyAnID0gdHJ1ZTsgJztcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gICAgaWYgKGl0LmlzVG9wKSB7XFxcXG4gICAgICBvdXQgKz0gJyB9KTsgcmV0dXJuIHZhbGlkYXRlOyAnO1xcXFxuICAgIH1cXFxcbiAgICByZXR1cm4gb3V0O1xcXFxuICB9XFxcXG4gIGlmIChpdC5pc1RvcCkge1xcXFxuICAgIHZhciAkdG9wID0gaXQuaXNUb3AsXFxcXG4gICAgICAkbHZsID0gaXQubGV2ZWwgPSAwLFxcXFxuICAgICAgJGRhdGFMdmwgPSBpdC5kYXRhTGV2ZWwgPSAwLFxcXFxuICAgICAgJGRhdGEgPSAnZGF0YSc7XFxcXG4gICAgaXQucm9vdElkID0gaXQucmVzb2x2ZS5mdWxsUGF0aChpdC5zZWxmLl9nZXRJZChpdC5yb290LnNjaGVtYSkpO1xcXFxuICAgIGl0LmJhc2VJZCA9IGl0LmJhc2VJZCB8fCBpdC5yb290SWQ7XFxcXG4gICAgZGVsZXRlIGl0LmlzVG9wO1xcXFxuICAgIGl0LmRhdGFQYXRoQXJyID0gW3VuZGVmaW5lZF07XFxcXG4gICAgb3V0ICs9ICcgdmFyIHZFcnJvcnMgPSBudWxsOyAnO1xcXFxuICAgIG91dCArPSAnIHZhciBlcnJvcnMgPSAwOyAgICAgJztcXFxcbiAgICBvdXQgKz0gJyBpZiAocm9vdERhdGEgPT09IHVuZGVmaW5lZCkgcm9vdERhdGEgPSBkYXRhOyAnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIHZhciAkbHZsID0gaXQubGV2ZWwsXFxcXG4gICAgICAkZGF0YUx2bCA9IGl0LmRhdGFMZXZlbCxcXFxcbiAgICAgICRkYXRhID0gJ2RhdGEnICsgKCRkYXRhTHZsIHx8ICcnKTtcXFxcbiAgICBpZiAoJGlkKSBpdC5iYXNlSWQgPSBpdC5yZXNvbHZlLnVybChpdC5iYXNlSWQsICRpZCk7XFxcXG4gICAgaWYgKCRhc3luYyAmJiAhaXQuYXN5bmMpIHRocm93IG5ldyBFcnJvcignYXN5bmMgc2NoZW1hIGluIHN5bmMgc2NoZW1hJyk7XFxcXG4gICAgb3V0ICs9ICcgdmFyIGVycnNfJyArICgkbHZsKSArICcgPSBlcnJvcnM7JztcXFxcbiAgfVxcXFxuICB2YXIgJHZhbGlkID0gJ3ZhbGlkJyArICRsdmwsXFxcXG4gICAgJGJyZWFrT25FcnJvciA9ICFpdC5vcHRzLmFsbEVycm9ycyxcXFxcbiAgICAkY2xvc2luZ0JyYWNlczEgPSAnJyxcXFxcbiAgICAkY2xvc2luZ0JyYWNlczIgPSAnJztcXFxcbiAgdmFyICRlcnJvcktleXdvcmQ7XFxcXG4gIHZhciAkdHlwZVNjaGVtYSA9IGl0LnNjaGVtYS50eXBlLFxcXFxuICAgICR0eXBlSXNBcnJheSA9IEFycmF5LmlzQXJyYXkoJHR5cGVTY2hlbWEpO1xcXFxuICBpZiAoJHR5cGVJc0FycmF5ICYmICR0eXBlU2NoZW1hLmxlbmd0aCA9PSAxKSB7XFxcXG4gICAgJHR5cGVTY2hlbWEgPSAkdHlwZVNjaGVtYVswXTtcXFxcbiAgICAkdHlwZUlzQXJyYXkgPSBmYWxzZTtcXFxcbiAgfVxcXFxuICBpZiAoaXQuc2NoZW1hLiRyZWYgJiYgJHJlZktleXdvcmRzKSB7XFxcXG4gICAgaWYgKGl0Lm9wdHMuZXh0ZW5kUmVmcyA9PSAnZmFpbCcpIHtcXFxcbiAgICAgIHRocm93IG5ldyBFcnJvcignJHJlZjogdmFsaWRhdGlvbiBrZXl3b3JkcyB1c2VkIGluIHNjaGVtYSBhdCBwYXRoIFxcXFxcXFwiJyArIGl0LmVyclNjaGVtYVBhdGggKyAnXFxcXFxcXCIgKHNlZSBvcHRpb24gZXh0ZW5kUmVmcyknKTtcXFxcbiAgICB9IGVsc2UgaWYgKGl0Lm9wdHMuZXh0ZW5kUmVmcyAhPT0gdHJ1ZSkge1xcXFxuICAgICAgJHJlZktleXdvcmRzID0gZmFsc2U7XFxcXG4gICAgICBjb25zb2xlLndhcm4oJyRyZWY6IGtleXdvcmRzIGlnbm9yZWQgaW4gc2NoZW1hIGF0IHBhdGggXFxcXFxcXCInICsgaXQuZXJyU2NoZW1hUGF0aCArICdcXFxcXFxcIicpO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICBpZiAoJHR5cGVTY2hlbWEpIHtcXFxcbiAgICBpZiAoaXQub3B0cy5jb2VyY2VUeXBlcykge1xcXFxuICAgICAgdmFyICRjb2VyY2VUb1R5cGVzID0gaXQudXRpbC5jb2VyY2VUb1R5cGVzKGl0Lm9wdHMuY29lcmNlVHlwZXMsICR0eXBlU2NoZW1hKTtcXFxcbiAgICB9XFxcXG4gICAgdmFyICRydWxlc0dyb3VwID0gaXQuUlVMRVMudHlwZXNbJHR5cGVTY2hlbWFdO1xcXFxuICAgIGlmICgkY29lcmNlVG9UeXBlcyB8fCAkdHlwZUlzQXJyYXkgfHwgJHJ1bGVzR3JvdXAgPT09IHRydWUgfHwgKCRydWxlc0dyb3VwICYmICEkc2hvdWxkVXNlR3JvdXAoJHJ1bGVzR3JvdXApKSkge1xcXFxuICAgICAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArICcudHlwZScsXFxcXG4gICAgICAgICRlcnJTY2hlbWFQYXRoID0gaXQuZXJyU2NoZW1hUGF0aCArICcvdHlwZSc7XFxcXG4gICAgICB2YXIgJHNjaGVtYVBhdGggPSBpdC5zY2hlbWFQYXRoICsgJy50eXBlJyxcXFxcbiAgICAgICAgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy90eXBlJyxcXFxcbiAgICAgICAgJG1ldGhvZCA9ICR0eXBlSXNBcnJheSA/ICdjaGVja0RhdGFUeXBlcycgOiAnY2hlY2tEYXRhVHlwZSc7XFxcXG4gICAgICBvdXQgKz0gJyBpZiAoJyArIChpdC51dGlsWyRtZXRob2RdKCR0eXBlU2NoZW1hLCAkZGF0YSwgdHJ1ZSkpICsgJykgeyAnO1xcXFxuICAgICAgaWYgKCRjb2VyY2VUb1R5cGVzKSB7XFxcXG4gICAgICAgIHZhciAkZGF0YVR5cGUgPSAnZGF0YVR5cGUnICsgJGx2bCxcXFxcbiAgICAgICAgICAkY29lcmNlZCA9ICdjb2VyY2VkJyArICRsdmw7XFxcXG4gICAgICAgIG91dCArPSAnIHZhciAnICsgKCRkYXRhVHlwZSkgKyAnID0gdHlwZW9mICcgKyAoJGRhdGEpICsgJzsgJztcXFxcbiAgICAgICAgaWYgKGl0Lm9wdHMuY29lcmNlVHlwZXMgPT0gJ2FycmF5Jykge1xcXFxuICAgICAgICAgIG91dCArPSAnIGlmICgnICsgKCRkYXRhVHlwZSkgKyAnID09IFxcXFxcXFxcJ29iamVjdFxcXFxcXFxcJyAmJiBBcnJheS5pc0FycmF5KCcgKyAoJGRhdGEpICsgJykpICcgKyAoJGRhdGFUeXBlKSArICcgPSBcXFxcXFxcXCdhcnJheVxcXFxcXFxcJzsgJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyB2YXIgJyArICgkY29lcmNlZCkgKyAnID0gdW5kZWZpbmVkOyAnO1xcXFxuICAgICAgICB2YXIgJGJyYWNlc0NvZXJjaW9uID0gJyc7XFxcXG4gICAgICAgIHZhciBhcnIxID0gJGNvZXJjZVRvVHlwZXM7XFxcXG4gICAgICAgIGlmIChhcnIxKSB7XFxcXG4gICAgICAgICAgdmFyICR0eXBlLCAkaSA9IC0xLFxcXFxuICAgICAgICAgICAgbDEgPSBhcnIxLmxlbmd0aCAtIDE7XFxcXG4gICAgICAgICAgd2hpbGUgKCRpIDwgbDEpIHtcXFxcbiAgICAgICAgICAgICR0eXBlID0gYXJyMVskaSArPSAxXTtcXFxcbiAgICAgICAgICAgIGlmICgkaSkge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkY29lcmNlZCkgKyAnID09PSB1bmRlZmluZWQpIHsgJztcXFxcbiAgICAgICAgICAgICAgJGJyYWNlc0NvZXJjaW9uICs9ICd9JztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIGlmIChpdC5vcHRzLmNvZXJjZVR5cGVzID09ICdhcnJheScgJiYgJHR5cGUgIT0gJ2FycmF5Jykge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkZGF0YVR5cGUpICsgJyA9PSBcXFxcXFxcXCdhcnJheVxcXFxcXFxcJyAmJiAnICsgKCRkYXRhKSArICcubGVuZ3RoID09IDEpIHsgJyArICgkY29lcmNlZCkgKyAnID0gJyArICgkZGF0YSkgKyAnID0gJyArICgkZGF0YSkgKyAnWzBdOyAnICsgKCRkYXRhVHlwZSkgKyAnID0gdHlwZW9mICcgKyAoJGRhdGEpICsgJzsgIH0gJztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIGlmICgkdHlwZSA9PSAnc3RyaW5nJykge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkZGF0YVR5cGUpICsgJyA9PSBcXFxcXFxcXCdudW1iZXJcXFxcXFxcXCcgfHwgJyArICgkZGF0YVR5cGUpICsgJyA9PSBcXFxcXFxcXCdib29sZWFuXFxcXFxcXFwnKSAnICsgKCRjb2VyY2VkKSArICcgPSBcXFxcXFxcXCdcXFxcXFxcXCcgKyAnICsgKCRkYXRhKSArICc7IGVsc2UgaWYgKCcgKyAoJGRhdGEpICsgJyA9PT0gbnVsbCkgJyArICgkY29lcmNlZCkgKyAnID0gXFxcXFxcXFwnXFxcXFxcXFwnOyAnO1xcXFxuICAgICAgICAgICAgfSBlbHNlIGlmICgkdHlwZSA9PSAnbnVtYmVyJyB8fCAkdHlwZSA9PSAnaW50ZWdlcicpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJGRhdGFUeXBlKSArICcgPT0gXFxcXFxcXFwnYm9vbGVhblxcXFxcXFxcJyB8fCAnICsgKCRkYXRhKSArICcgPT09IG51bGwgfHwgKCcgKyAoJGRhdGFUeXBlKSArICcgPT0gXFxcXFxcXFwnc3RyaW5nXFxcXFxcXFwnICYmICcgKyAoJGRhdGEpICsgJyAmJiAnICsgKCRkYXRhKSArICcgPT0gKycgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgICAgICAgICAgICBpZiAoJHR5cGUgPT0gJ2ludGVnZXInKSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgJiYgISgnICsgKCRkYXRhKSArICcgJSAxKSc7XFxcXG4gICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcpKSAnICsgKCRjb2VyY2VkKSArICcgPSArJyArICgkZGF0YSkgKyAnOyAnO1xcXFxuICAgICAgICAgICAgfSBlbHNlIGlmICgkdHlwZSA9PSAnYm9vbGVhbicpIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcgaWYgKCcgKyAoJGRhdGEpICsgJyA9PT0gXFxcXFxcXFwnZmFsc2VcXFxcXFxcXCcgfHwgJyArICgkZGF0YSkgKyAnID09PSAwIHx8ICcgKyAoJGRhdGEpICsgJyA9PT0gbnVsbCkgJyArICgkY29lcmNlZCkgKyAnID0gZmFsc2U7IGVsc2UgaWYgKCcgKyAoJGRhdGEpICsgJyA9PT0gXFxcXFxcXFwndHJ1ZVxcXFxcXFxcJyB8fCAnICsgKCRkYXRhKSArICcgPT09IDEpICcgKyAoJGNvZXJjZWQpICsgJyA9IHRydWU7ICc7XFxcXG4gICAgICAgICAgICB9IGVsc2UgaWYgKCR0eXBlID09ICdudWxsJykge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyBpZiAoJyArICgkZGF0YSkgKyAnID09PSBcXFxcXFxcXCdcXFxcXFxcXCcgfHwgJyArICgkZGF0YSkgKyAnID09PSAwIHx8ICcgKyAoJGRhdGEpICsgJyA9PT0gZmFsc2UpICcgKyAoJGNvZXJjZWQpICsgJyA9IG51bGw7ICc7XFxcXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGl0Lm9wdHMuY29lcmNlVHlwZXMgPT0gJ2FycmF5JyAmJiAkdHlwZSA9PSAnYXJyYXknKSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnIGlmICgnICsgKCRkYXRhVHlwZSkgKyAnID09IFxcXFxcXFxcJ3N0cmluZ1xcXFxcXFxcJyB8fCAnICsgKCRkYXRhVHlwZSkgKyAnID09IFxcXFxcXFxcJ251bWJlclxcXFxcXFxcJyB8fCAnICsgKCRkYXRhVHlwZSkgKyAnID09IFxcXFxcXFxcJ2Jvb2xlYW5cXFxcXFxcXCcgfHwgJyArICgkZGF0YSkgKyAnID09IG51bGwpICcgKyAoJGNvZXJjZWQpICsgJyA9IFsnICsgKCRkYXRhKSArICddOyAnO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyAnICsgKCRicmFjZXNDb2VyY2lvbikgKyAnIGlmICgnICsgKCRjb2VyY2VkKSArICcgPT09IHVuZGVmaW5lZCkgeyAgICc7XFxcXG4gICAgICAgIHZhciAkJG91dFN0YWNrID0gJCRvdXRTdGFjayB8fCBbXTtcXFxcbiAgICAgICAgJCRvdXRTdGFjay5wdXNoKG91dCk7XFxcXG4gICAgICAgIG91dCA9ICcnOyAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xcXFxuICAgICAgICBpZiAoaXQuY3JlYXRlRXJyb3JzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgIG91dCArPSAnIHsga2V5d29yZDogXFxcXFxcXFwnJyArICgkZXJyb3JLZXl3b3JkIHx8ICd0eXBlJykgKyAnXFxcXFxcXFwnICwgZGF0YVBhdGg6IChkYXRhUGF0aCB8fCBcXFxcXFxcXCdcXFxcXFxcXCcpICsgJyArIChpdC5lcnJvclBhdGgpICsgJyAsIHNjaGVtYVBhdGg6ICcgKyAoaXQudXRpbC50b1F1b3RlZFN0cmluZygkZXJyU2NoZW1hUGF0aCkpICsgJyAsIHBhcmFtczogeyB0eXBlOiBcXFxcXFxcXCcnO1xcXFxuICAgICAgICAgIGlmICgkdHlwZUlzQXJyYXkpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnJyArICgkdHlwZVNjaGVtYS5qb2luKFxcXFxcXFwiLFxcXFxcXFwiKSk7XFxcXG4gICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnJyArICgkdHlwZVNjaGVtYSk7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIG91dCArPSAnXFxcXFxcXFwnIH0gJztcXFxcbiAgICAgICAgICBpZiAoaXQub3B0cy5tZXNzYWdlcyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICwgbWVzc2FnZTogXFxcXFxcXFwnc2hvdWxkIGJlICc7XFxcXG4gICAgICAgICAgICBpZiAoJHR5cGVJc0FycmF5KSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnJyArICgkdHlwZVNjaGVtYS5qb2luKFxcXFxcXFwiLFxcXFxcXFwiKSk7XFxcXG4gICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJycgKyAoJHR5cGVTY2hlbWEpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgaWYgKGl0Lm9wdHMudmVyYm9zZSkge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgLCBzY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoJHNjaGVtYVBhdGgpICsgJyAsIHBhcmVudFNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArIChpdC5zY2hlbWFQYXRoKSArICcgLCBkYXRhOiAnICsgKCRkYXRhKSArICcgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgb3V0ICs9ICcgfSAnO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIG91dCArPSAnIHt9ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgdmFyIF9fZXJyID0gb3V0O1xcXFxuICAgICAgICBvdXQgPSAkJG91dFN0YWNrLnBvcCgpO1xcXFxuICAgICAgICBpZiAoIWl0LmNvbXBvc2l0ZVJ1bGUgJiYgJGJyZWFrT25FcnJvcikgeyAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cXFxcbiAgICAgICAgICBpZiAoaXQuYXN5bmMpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIHRocm93IG5ldyBWYWxpZGF0aW9uRXJyb3IoWycgKyAoX19lcnIpICsgJ10pOyAnO1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSBbJyArIChfX2VycikgKyAnXTsgcmV0dXJuIGZhbHNlOyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB2YXIgZXJyID0gJyArIChfX2VycikgKyAnOyAgaWYgKHZFcnJvcnMgPT09IG51bGwpIHZFcnJvcnMgPSBbZXJyXTsgZWxzZSB2RXJyb3JzLnB1c2goZXJyKTsgZXJyb3JzKys7ICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgb3V0ICs9ICcgfSBlbHNlIHsgICc7XFxcXG4gICAgICAgIHZhciAkcGFyZW50RGF0YSA9ICRkYXRhTHZsID8gJ2RhdGEnICsgKCgkZGF0YUx2bCAtIDEpIHx8ICcnKSA6ICdwYXJlbnREYXRhJyxcXFxcbiAgICAgICAgICAkcGFyZW50RGF0YVByb3BlcnR5ID0gJGRhdGFMdmwgPyBpdC5kYXRhUGF0aEFyclskZGF0YUx2bF0gOiAncGFyZW50RGF0YVByb3BlcnR5JztcXFxcbiAgICAgICAgb3V0ICs9ICcgJyArICgkZGF0YSkgKyAnID0gJyArICgkY29lcmNlZCkgKyAnOyAnO1xcXFxuICAgICAgICBpZiAoISRkYXRhTHZsKSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICdpZiAoJyArICgkcGFyZW50RGF0YSkgKyAnICE9PSB1bmRlZmluZWQpJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBvdXQgKz0gJyAnICsgKCRwYXJlbnREYXRhKSArICdbJyArICgkcGFyZW50RGF0YVByb3BlcnR5KSArICddID0gJyArICgkY29lcmNlZCkgKyAnOyB9ICc7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICB2YXIgJCRvdXRTdGFjayA9ICQkb3V0U3RhY2sgfHwgW107XFxcXG4gICAgICAgICQkb3V0U3RhY2sucHVzaChvdXQpO1xcXFxuICAgICAgICBvdXQgPSAnJzsgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cXFxcbiAgICAgICAgaWYgKGl0LmNyZWF0ZUVycm9ycyAhPT0gZmFsc2UpIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB7IGtleXdvcmQ6IFxcXFxcXFxcJycgKyAoJGVycm9yS2V5d29yZCB8fCAndHlwZScpICsgJ1xcXFxcXFxcJyAsIGRhdGFQYXRoOiAoZGF0YVBhdGggfHwgXFxcXFxcXFwnXFxcXFxcXFwnKSArICcgKyAoaXQuZXJyb3JQYXRoKSArICcgLCBzY2hlbWFQYXRoOiAnICsgKGl0LnV0aWwudG9RdW90ZWRTdHJpbmcoJGVyclNjaGVtYVBhdGgpKSArICcgLCBwYXJhbXM6IHsgdHlwZTogXFxcXFxcXFwnJztcXFxcbiAgICAgICAgICBpZiAoJHR5cGVJc0FycmF5KSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJycgKyAoJHR5cGVTY2hlbWEuam9pbihcXFxcXFxcIixcXFxcXFxcIikpO1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJycgKyAoJHR5cGVTY2hlbWEpO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBvdXQgKz0gJ1xcXFxcXFxcJyB9ICc7XFxcXG4gICAgICAgICAgaWYgKGl0Lm9wdHMubWVzc2FnZXMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyAsIG1lc3NhZ2U6IFxcXFxcXFxcJ3Nob3VsZCBiZSAnO1xcXFxuICAgICAgICAgICAgaWYgKCR0eXBlSXNBcnJheSkge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJycgKyAoJHR5cGVTY2hlbWEuam9pbihcXFxcXFxcIixcXFxcXFxcIikpO1xcXFxuICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcnICsgKCR0eXBlU2NoZW1hKTtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIG91dCArPSAnXFxcXFxcXFwnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIGlmIChpdC5vcHRzLnZlcmJvc2UpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICwgc2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKCRzY2hlbWFQYXRoKSArICcgLCBwYXJlbnRTY2hlbWE6IHZhbGlkYXRlLnNjaGVtYScgKyAoaXQuc2NoZW1hUGF0aCkgKyAnICwgZGF0YTogJyArICgkZGF0YSkgKyAnICc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIG91dCArPSAnIH0gJztcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBvdXQgKz0gJyB7fSAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHZhciBfX2VyciA9IG91dDtcXFxcbiAgICAgICAgb3V0ID0gJCRvdXRTdGFjay5wb3AoKTtcXFxcbiAgICAgICAgaWYgKCFpdC5jb21wb3NpdGVSdWxlICYmICRicmVha09uRXJyb3IpIHsgLyogaXN0YW5idWwgaWdub3JlIGlmICovXFxcXG4gICAgICAgICAgaWYgKGl0LmFzeW5jKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKFsnICsgKF9fZXJyKSArICddKTsgJztcXFxcbiAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgdmFsaWRhdGUuZXJyb3JzID0gWycgKyAoX19lcnIpICsgJ107IHJldHVybiBmYWxzZTsgJztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgb3V0ICs9ICcgdmFyIGVyciA9ICcgKyAoX19lcnIpICsgJzsgIGlmICh2RXJyb3JzID09PSBudWxsKSB2RXJyb3JzID0gW2Vycl07IGVsc2UgdkVycm9ycy5wdXNoKGVycik7IGVycm9ycysrOyAnO1xcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGlmIChpdC5zY2hlbWEuJHJlZiAmJiAhJHJlZktleXdvcmRzKSB7XFxcXG4gICAgb3V0ICs9ICcgJyArIChpdC5SVUxFUy5hbGwuJHJlZi5jb2RlKGl0LCAnJHJlZicpKSArICcgJztcXFxcbiAgICBpZiAoJGJyZWFrT25FcnJvcikge1xcXFxuICAgICAgb3V0ICs9ICcgfSBpZiAoZXJyb3JzID09PSAnO1xcXFxuICAgICAgaWYgKCR0b3ApIHtcXFxcbiAgICAgICAgb3V0ICs9ICcwJztcXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIG91dCArPSAnZXJyc18nICsgKCRsdmwpO1xcXFxuICAgICAgfVxcXFxuICAgICAgb3V0ICs9ICcpIHsgJztcXFxcbiAgICAgICRjbG9zaW5nQnJhY2VzMiArPSAnfSc7XFxcXG4gICAgfVxcXFxuICB9IGVsc2Uge1xcXFxuICAgIGlmIChpdC5vcHRzLnY1ICYmIGl0LnNjaGVtYS5wYXR0ZXJuR3JvdXBzKSB7XFxcXG4gICAgICBjb25zb2xlLndhcm4oJ2tleXdvcmQgXFxcXFxcXCJwYXR0ZXJuR3JvdXBzXFxcXFxcXCIgaXMgZGVwcmVjYXRlZCBhbmQgZGlzYWJsZWQuIFVzZSBvcHRpb24gcGF0dGVybkdyb3VwczogdHJ1ZSB0byBlbmFibGUuJyk7XFxcXG4gICAgfVxcXFxuICAgIHZhciBhcnIyID0gaXQuUlVMRVM7XFxcXG4gICAgaWYgKGFycjIpIHtcXFxcbiAgICAgIHZhciAkcnVsZXNHcm91cCwgaTIgPSAtMSxcXFxcbiAgICAgICAgbDIgPSBhcnIyLmxlbmd0aCAtIDE7XFxcXG4gICAgICB3aGlsZSAoaTIgPCBsMikge1xcXFxuICAgICAgICAkcnVsZXNHcm91cCA9IGFycjJbaTIgKz0gMV07XFxcXG4gICAgICAgIGlmICgkc2hvdWxkVXNlR3JvdXAoJHJ1bGVzR3JvdXApKSB7XFxcXG4gICAgICAgICAgaWYgKCRydWxlc0dyb3VwLnR5cGUpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnIGlmICgnICsgKGl0LnV0aWwuY2hlY2tEYXRhVHlwZSgkcnVsZXNHcm91cC50eXBlLCAkZGF0YSkpICsgJykgeyAnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBpZiAoaXQub3B0cy51c2VEZWZhdWx0cyAmJiAhaXQuY29tcG9zaXRlUnVsZSkge1xcXFxuICAgICAgICAgICAgaWYgKCRydWxlc0dyb3VwLnR5cGUgPT0gJ29iamVjdCcgJiYgaXQuc2NoZW1hLnByb3BlcnRpZXMpIHtcXFxcbiAgICAgICAgICAgICAgdmFyICRzY2hlbWEgPSBpdC5zY2hlbWEucHJvcGVydGllcyxcXFxcbiAgICAgICAgICAgICAgICAkc2NoZW1hS2V5cyA9IE9iamVjdC5rZXlzKCRzY2hlbWEpO1xcXFxuICAgICAgICAgICAgICB2YXIgYXJyMyA9ICRzY2hlbWFLZXlzO1xcXFxuICAgICAgICAgICAgICBpZiAoYXJyMykge1xcXFxuICAgICAgICAgICAgICAgIHZhciAkcHJvcGVydHlLZXksIGkzID0gLTEsXFxcXG4gICAgICAgICAgICAgICAgICBsMyA9IGFycjMubGVuZ3RoIC0gMTtcXFxcbiAgICAgICAgICAgICAgICB3aGlsZSAoaTMgPCBsMykge1xcXFxuICAgICAgICAgICAgICAgICAgJHByb3BlcnR5S2V5ID0gYXJyM1tpMyArPSAxXTtcXFxcbiAgICAgICAgICAgICAgICAgIHZhciAkc2NoID0gJHNjaGVtYVskcHJvcGVydHlLZXldO1xcXFxuICAgICAgICAgICAgICAgICAgaWYgKCRzY2guZGVmYXVsdCAhPT0gdW5kZWZpbmVkKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIHZhciAkcGFzc0RhdGEgPSAkZGF0YSArIGl0LnV0aWwuZ2V0UHJvcGVydHkoJHByb3BlcnR5S2V5KTtcXFxcbiAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgIGlmICgnICsgKCRwYXNzRGF0YSkgKyAnID09PSB1bmRlZmluZWQpICcgKyAoJHBhc3NEYXRhKSArICcgPSAnO1xcXFxuICAgICAgICAgICAgICAgICAgICBpZiAoaXQub3B0cy51c2VEZWZhdWx0cyA9PSAnc2hhcmVkJykge1xcXFxuICAgICAgICAgICAgICAgICAgICAgIG91dCArPSAnICcgKyAoaXQudXNlRGVmYXVsdCgkc2NoLmRlZmF1bHQpKSArICcgJztcXFxcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICBvdXQgKz0gJyAnICsgKEpTT04uc3RyaW5naWZ5KCRzY2guZGVmYXVsdCkpICsgJyAnO1xcXFxuICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgIG91dCArPSAnOyAnO1xcXFxuICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfSBlbHNlIGlmICgkcnVsZXNHcm91cC50eXBlID09ICdhcnJheScgJiYgQXJyYXkuaXNBcnJheShpdC5zY2hlbWEuaXRlbXMpKSB7XFxcXG4gICAgICAgICAgICAgIHZhciBhcnI0ID0gaXQuc2NoZW1hLml0ZW1zO1xcXFxuICAgICAgICAgICAgICBpZiAoYXJyNCkge1xcXFxuICAgICAgICAgICAgICAgIHZhciAkc2NoLCAkaSA9IC0xLFxcXFxuICAgICAgICAgICAgICAgICAgbDQgPSBhcnI0Lmxlbmd0aCAtIDE7XFxcXG4gICAgICAgICAgICAgICAgd2hpbGUgKCRpIDwgbDQpIHtcXFxcbiAgICAgICAgICAgICAgICAgICRzY2ggPSBhcnI0WyRpICs9IDFdO1xcXFxuICAgICAgICAgICAgICAgICAgaWYgKCRzY2guZGVmYXVsdCAhPT0gdW5kZWZpbmVkKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIHZhciAkcGFzc0RhdGEgPSAkZGF0YSArICdbJyArICRpICsgJ10nO1xcXFxuICAgICAgICAgICAgICAgICAgICBvdXQgKz0gJyAgaWYgKCcgKyAoJHBhc3NEYXRhKSArICcgPT09IHVuZGVmaW5lZCkgJyArICgkcGFzc0RhdGEpICsgJyA9ICc7XFxcXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdC5vcHRzLnVzZURlZmF1bHRzID09ICdzaGFyZWQnKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgJyArIChpdC51c2VEZWZhdWx0KCRzY2guZGVmYXVsdCkpICsgJyAnO1xcXFxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgICAgIG91dCArPSAnICcgKyAoSlNPTi5zdHJpbmdpZnkoJHNjaC5kZWZhdWx0KSkgKyAnICc7XFxcXG4gICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICc7ICc7XFxcXG4gICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIHZhciBhcnI1ID0gJHJ1bGVzR3JvdXAucnVsZXM7XFxcXG4gICAgICAgICAgaWYgKGFycjUpIHtcXFxcbiAgICAgICAgICAgIHZhciAkcnVsZSwgaTUgPSAtMSxcXFxcbiAgICAgICAgICAgICAgbDUgPSBhcnI1Lmxlbmd0aCAtIDE7XFxcXG4gICAgICAgICAgICB3aGlsZSAoaTUgPCBsNSkge1xcXFxuICAgICAgICAgICAgICAkcnVsZSA9IGFycjVbaTUgKz0gMV07XFxcXG4gICAgICAgICAgICAgIGlmICgkc2hvdWxkVXNlUnVsZSgkcnVsZSkpIHtcXFxcbiAgICAgICAgICAgICAgICB2YXIgJGNvZGUgPSAkcnVsZS5jb2RlKGl0LCAkcnVsZS5rZXl3b3JkLCAkcnVsZXNHcm91cC50eXBlKTtcXFxcbiAgICAgICAgICAgICAgICBpZiAoJGNvZGUpIHtcXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnICcgKyAoJGNvZGUpICsgJyAnO1xcXFxuICAgICAgICAgICAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgJGNsb3NpbmdCcmFjZXMxICs9ICd9JztcXFxcbiAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgaWYgKCRicmVha09uRXJyb3IpIHtcXFxcbiAgICAgICAgICAgIG91dCArPSAnICcgKyAoJGNsb3NpbmdCcmFjZXMxKSArICcgJztcXFxcbiAgICAgICAgICAgICRjbG9zaW5nQnJhY2VzMSA9ICcnO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBpZiAoJHJ1bGVzR3JvdXAudHlwZSkge1xcXFxuICAgICAgICAgICAgb3V0ICs9ICcgfSAnO1xcXFxuICAgICAgICAgICAgaWYgKCR0eXBlU2NoZW1hICYmICR0eXBlU2NoZW1hID09PSAkcnVsZXNHcm91cC50eXBlICYmICEkY29lcmNlVG9UeXBlcykge1xcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyBlbHNlIHsgJztcXFxcbiAgICAgICAgICAgICAgdmFyICRzY2hlbWFQYXRoID0gaXQuc2NoZW1hUGF0aCArICcudHlwZScsXFxcXG4gICAgICAgICAgICAgICAgJGVyclNjaGVtYVBhdGggPSBpdC5lcnJTY2hlbWFQYXRoICsgJy90eXBlJztcXFxcbiAgICAgICAgICAgICAgdmFyICQkb3V0U3RhY2sgPSAkJG91dFN0YWNrIHx8IFtdO1xcXFxuICAgICAgICAgICAgICAkJG91dFN0YWNrLnB1c2gob3V0KTtcXFxcbiAgICAgICAgICAgICAgb3V0ID0gJyc7IC8qIGlzdGFuYnVsIGlnbm9yZSBlbHNlICovXFxcXG4gICAgICAgICAgICAgIGlmIChpdC5jcmVhdGVFcnJvcnMgIT09IGZhbHNlKSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcgeyBrZXl3b3JkOiBcXFxcXFxcXCcnICsgKCRlcnJvcktleXdvcmQgfHwgJ3R5cGUnKSArICdcXFxcXFxcXCcgLCBkYXRhUGF0aDogKGRhdGFQYXRoIHx8IFxcXFxcXFxcJ1xcXFxcXFxcJykgKyAnICsgKGl0LmVycm9yUGF0aCkgKyAnICwgc2NoZW1hUGF0aDogJyArIChpdC51dGlsLnRvUXVvdGVkU3RyaW5nKCRlcnJTY2hlbWFQYXRoKSkgKyAnICwgcGFyYW1zOiB7IHR5cGU6IFxcXFxcXFxcJyc7XFxcXG4gICAgICAgICAgICAgICAgaWYgKCR0eXBlSXNBcnJheSkge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcnICsgKCR0eXBlU2NoZW1hLmpvaW4oXFxcXFxcXCIsXFxcXFxcXCIpKTtcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcnICsgKCR0eXBlU2NoZW1hKTtcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICdcXFxcXFxcXCcgfSAnO1xcXFxuICAgICAgICAgICAgICAgIGlmIChpdC5vcHRzLm1lc3NhZ2VzICE9PSBmYWxzZSkge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgLCBtZXNzYWdlOiBcXFxcXFxcXCdzaG91bGQgYmUgJztcXFxcbiAgICAgICAgICAgICAgICAgIGlmICgkdHlwZUlzQXJyYXkpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgb3V0ICs9ICcnICsgKCR0eXBlU2NoZW1hLmpvaW4oXFxcXFxcXCIsXFxcXFxcXCIpKTtcXFxcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIG91dCArPSAnJyArICgkdHlwZVNjaGVtYSk7XFxcXG4gICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICBvdXQgKz0gJ1xcXFxcXFxcJyAnO1xcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICBpZiAoaXQub3B0cy52ZXJib3NlKSB7XFxcXG4gICAgICAgICAgICAgICAgICBvdXQgKz0gJyAsIHNjaGVtYTogdmFsaWRhdGUuc2NoZW1hJyArICgkc2NoZW1hUGF0aCkgKyAnICwgcGFyZW50U2NoZW1hOiB2YWxpZGF0ZS5zY2hlbWEnICsgKGl0LnNjaGVtYVBhdGgpICsgJyAsIGRhdGE6ICcgKyAoJGRhdGEpICsgJyAnO1xcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgb3V0ICs9ICcge30gJztcXFxcbiAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICB2YXIgX19lcnIgPSBvdXQ7XFxcXG4gICAgICAgICAgICAgIG91dCA9ICQkb3V0U3RhY2sucG9wKCk7XFxcXG4gICAgICAgICAgICAgIGlmICghaXQuY29tcG9zaXRlUnVsZSAmJiAkYnJlYWtPbkVycm9yKSB7IC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xcXFxuICAgICAgICAgICAgICAgIGlmIChpdC5hc3luYykge1xcXFxuICAgICAgICAgICAgICAgICAgb3V0ICs9ICcgdGhyb3cgbmV3IFZhbGlkYXRpb25FcnJvcihbJyArIChfX2VycikgKyAnXSk7ICc7XFxcXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICAgIG91dCArPSAnIHZhbGlkYXRlLmVycm9ycyA9IFsnICsgKF9fZXJyKSArICddOyByZXR1cm4gZmFsc2U7ICc7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgIG91dCArPSAnIHZhciBlcnIgPSAnICsgKF9fZXJyKSArICc7ICBpZiAodkVycm9ycyA9PT0gbnVsbCkgdkVycm9ycyA9IFtlcnJdOyBlbHNlIHZFcnJvcnMucHVzaChlcnIpOyBlcnJvcnMrKzsgJztcXFxcbiAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICBvdXQgKz0gJyB9ICc7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICAgIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgICAgICAgICBvdXQgKz0gJyBpZiAoZXJyb3JzID09PSAnO1xcXFxuICAgICAgICAgICAgaWYgKCR0b3ApIHtcXFxcbiAgICAgICAgICAgICAgb3V0ICs9ICcwJztcXFxcbiAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgIG91dCArPSAnZXJyc18nICsgKCRsdmwpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgb3V0ICs9ICcpIHsgJztcXFxcbiAgICAgICAgICAgICRjbG9zaW5nQnJhY2VzMiArPSAnfSc7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9XFxcXG4gIGlmICgkYnJlYWtPbkVycm9yKSB7XFxcXG4gICAgb3V0ICs9ICcgJyArICgkY2xvc2luZ0JyYWNlczIpICsgJyAnO1xcXFxuICB9XFxcXG4gIGlmICgkdG9wKSB7XFxcXG4gICAgaWYgKCRhc3luYykge1xcXFxuICAgICAgb3V0ICs9ICcgaWYgKGVycm9ycyA9PT0gMCkgcmV0dXJuIGRhdGE7ICAgICAgICAgICAnO1xcXFxuICAgICAgb3V0ICs9ICcgZWxzZSB0aHJvdyBuZXcgVmFsaWRhdGlvbkVycm9yKHZFcnJvcnMpOyAnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvdXQgKz0gJyB2YWxpZGF0ZS5lcnJvcnMgPSB2RXJyb3JzOyAnO1xcXFxuICAgICAgb3V0ICs9ICcgcmV0dXJuIGVycm9ycyA9PT0gMDsgICAgICAgJztcXFxcbiAgICB9XFxcXG4gICAgb3V0ICs9ICcgfSk7IHJldHVybiB2YWxpZGF0ZTsnO1xcXFxuICB9IGVsc2Uge1xcXFxuICAgIG91dCArPSAnIHZhciAnICsgKCR2YWxpZCkgKyAnID0gZXJyb3JzID09PSBlcnJzXycgKyAoJGx2bCkgKyAnOyc7XFxcXG4gIH1cXFxcbiAgb3V0ID0gaXQudXRpbC5jbGVhblVwQ29kZShvdXQpO1xcXFxuICBpZiAoJHRvcCkge1xcXFxuICAgIG91dCA9IGl0LnV0aWwuZmluYWxDbGVhblVwQ29kZShvdXQsICRhc3luYyk7XFxcXG4gIH1cXFxcblxcXFxuICBmdW5jdGlvbiAkc2hvdWxkVXNlR3JvdXAoJHJ1bGVzR3JvdXApIHtcXFxcbiAgICB2YXIgcnVsZXMgPSAkcnVsZXNHcm91cC5ydWxlcztcXFxcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJ1bGVzLmxlbmd0aDsgaSsrKVxcXFxuICAgICAgaWYgKCRzaG91bGRVc2VSdWxlKHJ1bGVzW2ldKSkgcmV0dXJuIHRydWU7XFxcXG4gIH1cXFxcblxcXFxuICBmdW5jdGlvbiAkc2hvdWxkVXNlUnVsZSgkcnVsZSkge1xcXFxuICAgIHJldHVybiBpdC5zY2hlbWFbJHJ1bGUua2V5d29yZF0gIT09IHVuZGVmaW5lZCB8fCAoJHJ1bGUuaW1wbGVtZW50cyAmJiAkcnVsZUltbGVtZW50c1NvbWVLZXl3b3JkKCRydWxlKSk7XFxcXG4gIH1cXFxcblxcXFxuICBmdW5jdGlvbiAkcnVsZUltbGVtZW50c1NvbWVLZXl3b3JkKCRydWxlKSB7XFxcXG4gICAgdmFyIGltcGwgPSAkcnVsZS5pbXBsZW1lbnRzO1xcXFxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW1wbC5sZW5ndGg7IGkrKylcXFxcbiAgICAgIGlmIChpdC5zY2hlbWFbaW1wbFtpXV0gIT09IHVuZGVmaW5lZCkgcmV0dXJuIHRydWU7XFxcXG4gIH1cXFxcbiAgcmV0dXJuIG91dDtcXFxcbn1cXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOWtiM1JxY3k5MllXeHBaR0YwWlM1cWN5NXFjeUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwybHRhbTk1VWxCREx5NHZibTlrWlY5dGIyUjFiR1Z6TDJGcWRpOXNhV0l2Wkc5MGFuTXZkbUZzYVdSaGRHVXVhbk0vWkRVd09DSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUluZFhObElITjBjbWxqZENjN1hHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlHZGxibVZ5WVhSbFgzWmhiR2xrWVhSbEtHbDBMQ0FrYTJWNWQyOXlaQ3dnSkhKMWJHVlVlWEJsS1NCN1hHNGdJSFpoY2lCdmRYUWdQU0FuSnp0Y2JpQWdkbUZ5SUNSaGMzbHVZeUE5SUdsMExuTmphR1Z0WVM0a1lYTjVibU1nUFQwOUlIUnlkV1VzWEc0Z0lDQWdKSEpsWmt0bGVYZHZjbVJ6SUQwZ2FYUXVkWFJwYkM1elkyaGxiV0ZJWVhOU2RXeGxjMFY0WTJWd2RDaHBkQzV6WTJobGJXRXNJR2wwTGxKVlRFVlRMbUZzYkN3Z0p5UnlaV1luS1N4Y2JpQWdJQ0FrYVdRZ1BTQnBkQzV6Wld4bUxsOW5aWFJKWkNocGRDNXpZMmhsYldFcE8xeHVJQ0JwWmlBb2FYUXVhWE5VYjNBcElIdGNiaUFnSUNCcFppQW9KR0Z6ZVc1aktTQjdYRzRnSUNBZ0lDQnBkQzVoYzNsdVl5QTlJSFJ5ZFdVN1hHNGdJQ0FnSUNCMllYSWdKR1Z6TnlBOUlHbDBMbTl3ZEhNdVlYTjVibU1nUFQwZ0oyVnpOeWM3WEc0Z0lDQWdJQ0JwZEM1NWFXVnNaRUYzWVdsMElEMGdKR1Z6TnlBL0lDZGhkMkZwZENjZ09pQW5lV2xsYkdRbk8xeHVJQ0FnSUgxY2JpQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ2RtRnNhV1JoZEdVZ1BTQW5PMXh1SUNBZ0lHbG1JQ2drWVhONWJtTXBJSHRjYmlBZ0lDQWdJR2xtSUNna1pYTTNLU0I3WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNoaGMzbHVZeUJtZFc1amRHbHZiaUFuTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdVlYTjVibU1nSVQwZ0p5b25LU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkamJ5NTNjbUZ3Snp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5aG1kVzVqZEdsdmJpb2dKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0tHWjFibU4wYVc5dUlDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSUNoa1lYUmhMQ0JrWVhSaFVHRjBhQ3dnY0dGeVpXNTBSR0YwWVN3Z2NHRnlaVzUwUkdGMFlWQnliM0JsY25SNUxDQnliMjkwUkdGMFlTa2dleUJjWENkMWMyVWdjM1J5YVdOMFhGd25PeUFuTzF4dUlDQWdJR2xtSUNna2FXUWdKaVlnS0dsMExtOXdkSE11YzI5MWNtTmxRMjlrWlNCOGZDQnBkQzV2Y0hSekxuQnliMk5sYzNORGIyUmxLU2tnZTF4dUlDQWdJQ0FnYjNWMElDczlJQ2NnSnlBcklDZ25MMXhjS2lNZ2MyOTFjbU5sVlZKTVBTY2dLeUFrYVdRZ0t5QW5JQ292SnlrZ0t5QW5JQ2M3WEc0Z0lDQWdmVnh1SUNCOVhHNGdJR2xtSUNoMGVYQmxiMllnYVhRdWMyTm9aVzFoSUQwOUlDZGliMjlzWldGdUp5QjhmQ0FoS0NSeVpXWkxaWGwzYjNKa2N5QjhmQ0JwZEM1elkyaGxiV0V1SkhKbFppa3BJSHRjYmlBZ0lDQjJZWElnSkd0bGVYZHZjbVFnUFNBblptRnNjMlVnYzJOb1pXMWhKenRjYmlBZ0lDQjJZWElnSkd4MmJDQTlJR2wwTG14bGRtVnNPMXh1SUNBZ0lIWmhjaUFrWkdGMFlVeDJiQ0E5SUdsMExtUmhkR0ZNWlhabGJEdGNiaUFnSUNCMllYSWdKSE5qYUdWdFlTQTlJR2wwTG5OamFHVnRZVnNrYTJWNWQyOXlaRjA3WEc0Z0lDQWdkbUZ5SUNSelkyaGxiV0ZRWVhSb0lEMGdhWFF1YzJOb1pXMWhVR0YwYUNBcklHbDBMblYwYVd3dVoyVjBVSEp2Y0dWeWRIa29KR3RsZVhkdmNtUXBPMXh1SUNBZ0lIWmhjaUFrWlhKeVUyTm9aVzFoVUdGMGFDQTlJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuTHljZ0t5QWthMlY1ZDI5eVpEdGNiaUFnSUNCMllYSWdKR0p5WldGclQyNUZjbkp2Y2lBOUlDRnBkQzV2Y0hSekxtRnNiRVZ5Y205eWN6dGNiaUFnSUNCMllYSWdKR1Z5Y205eVMyVjVkMjl5WkR0Y2JpQWdJQ0IyWVhJZ0pHUmhkR0VnUFNBblpHRjBZU2NnS3lBb0pHUmhkR0ZNZG13Z2ZId2dKeWNwTzF4dUlDQWdJSFpoY2lBa2RtRnNhV1FnUFNBbmRtRnNhV1FuSUNzZ0pHeDJiRHRjYmlBZ0lDQnBaaUFvYVhRdWMyTm9aVzFoSUQwOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ2FXWWdLR2wwTG1selZHOXdLU0I3WEc0Z0lDQWdJQ0FnSUNSaWNtVmhhMDl1UlhKeWIzSWdQU0IwY25WbE8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJQ2NnS3lBb0pIWmhiR2xrS1NBcklDY2dQU0JtWVd4elpUc2dKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSFpoY2lBa0pHOTFkRk4wWVdOcklEMGdKQ1J2ZFhSVGRHRmpheUI4ZkNCYlhUdGNiaUFnSUNBZ0lDUWtiM1YwVTNSaFkyc3VjSFZ6YUNodmRYUXBPMXh1SUNBZ0lDQWdiM1YwSUQwZ0p5YzdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JsYkhObElDb3ZYRzRnSUNBZ0lDQnBaaUFvYVhRdVkzSmxZWFJsUlhKeWIzSnpJQ0U5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCN0lHdGxlWGR2Y21RNklGeGNKeWNnS3lBb0pHVnljbTl5UzJWNWQyOXlaQ0I4ZkNBblptRnNjMlVnYzJOb1pXMWhKeWtnS3lBblhGd25JQ3dnWkdGMFlWQmhkR2c2SUNoa1lYUmhVR0YwYUNCOGZDQmNYQ2RjWENjcElDc2dKeUFySUNocGRDNWxjbkp2Y2xCaGRHZ3BJQ3NnSnlBc0lITmphR1Z0WVZCaGRHZzZJQ2NnS3lBb2FYUXVkWFJwYkM1MGIxRjFiM1JsWkZOMGNtbHVaeWdrWlhKeVUyTm9aVzFoVUdGMGFDa3BJQ3NnSnlBc0lIQmhjbUZ0Y3pvZ2UzMGdKenRjYmlBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXVnpjMkZuWlhNZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnTENCdFpYTnpZV2RsT2lCY1hDZGliMjlzWldGdUlITmphR1Z0WVNCcGN5Qm1ZV3h6WlZ4Y0p5QW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxuWmxjbUp2YzJVcElIdGNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFzSUhOamFHVnRZVG9nWm1Gc2MyVWdMQ0J3WVhKbGJuUlRZMmhsYldFNklIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9hWFF1YzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnWkdGMFlUb2dKeUFySUNna1pHRjBZU2tnS3lBbklDYzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZlNBbk8xeHVJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2UzMGdKenRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSFpoY2lCZlgyVnljaUE5SUc5MWREdGNiaUFnSUNBZ0lHOTFkQ0E5SUNRa2IzVjBVM1JoWTJzdWNHOXdLQ2s3WEc0Z0lDQWdJQ0JwWmlBb0lXbDBMbU52YlhCdmMybDBaVkoxYkdVZ0ppWWdKR0p5WldGclQyNUZjbkp2Y2lrZ2V5QXZLaUJwYzNSaGJtSjFiQ0JwWjI1dmNtVWdhV1lnS2k5Y2JpQWdJQ0FnSUNBZ2FXWWdLR2wwTG1GemVXNWpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RHaHliM2NnYm1WM0lGWmhiR2xrWVhScGIyNUZjbkp2Y2loYkp5QXJJQ2hmWDJWeWNpa2dLeUFuWFNrN0lDYzdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZG1Gc2FXUmhkR1V1WlhKeWIzSnpJRDBnV3ljZ0t5QW9YMTlsY25JcElDc2dKMTA3SUhKbGRIVnliaUJtWVd4elpUc2dKenRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZG1GeUlHVnljaUE5SUNjZ0t5QW9YMTlsY25JcElDc2dKenNnSUdsbUlDaDJSWEp5YjNKeklEMDlQU0J1ZFd4c0tTQjJSWEp5YjNKeklEMGdXMlZ5Y2wwN0lHVnNjMlVnZGtWeWNtOXljeTV3ZFhOb0tHVnljaWs3SUdWeWNtOXljeXNyT3lBbk8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0JwWmlBb2FYUXVhWE5VYjNBcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0NSaGMzbHVZeWtnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklISmxkSFZ5YmlCa1lYUmhPeUFuTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIWmhiR2xrWVhSbExtVnljbTl5Y3lBOUlHNTFiR3c3SUhKbGRIVnliaUIwY25WbE95QW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVhJZ0p5QXJJQ2drZG1Gc2FXUXBJQ3NnSnlBOUlIUnlkV1U3SUNjN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJR2xtSUNocGRDNXBjMVJ2Y0NrZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2ZTazdJSEpsZEhWeWJpQjJZV3hwWkdGMFpUc2dKenRjYmlBZ0lDQjlYRzRnSUNBZ2NtVjBkWEp1SUc5MWREdGNiaUFnZlZ4dUlDQnBaaUFvYVhRdWFYTlViM0FwSUh0Y2JpQWdJQ0IyWVhJZ0pIUnZjQ0E5SUdsMExtbHpWRzl3TEZ4dUlDQWdJQ0FnSkd4MmJDQTlJR2wwTG14bGRtVnNJRDBnTUN4Y2JpQWdJQ0FnSUNSa1lYUmhUSFpzSUQwZ2FYUXVaR0YwWVV4bGRtVnNJRDBnTUN4Y2JpQWdJQ0FnSUNSa1lYUmhJRDBnSjJSaGRHRW5PMXh1SUNBZ0lHbDBMbkp2YjNSSlpDQTlJR2wwTG5KbGMyOXNkbVV1Wm5Wc2JGQmhkR2dvYVhRdWMyVnNaaTVmWjJWMFNXUW9hWFF1Y205dmRDNXpZMmhsYldFcEtUdGNiaUFnSUNCcGRDNWlZWE5sU1dRZ1BTQnBkQzVpWVhObFNXUWdmSHdnYVhRdWNtOXZkRWxrTzF4dUlDQWdJR1JsYkdWMFpTQnBkQzVwYzFSdmNEdGNiaUFnSUNCcGRDNWtZWFJoVUdGMGFFRnljaUE5SUZ0MWJtUmxabWx1WldSZE8xeHVJQ0FnSUc5MWRDQXJQU0FuSUhaaGNpQjJSWEp5YjNKeklEMGdiblZzYkRzZ0p6dGNiaUFnSUNCdmRYUWdLejBnSnlCMllYSWdaWEp5YjNKeklEMGdNRHNnSUNBZ0lDYzdYRzRnSUNBZ2IzVjBJQ3M5SUNjZ2FXWWdLSEp2YjNSRVlYUmhJRDA5UFNCMWJtUmxabWx1WldRcElISnZiM1JFWVhSaElEMGdaR0YwWVRzZ0p6dGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQjJZWElnSkd4MmJDQTlJR2wwTG14bGRtVnNMRnh1SUNBZ0lDQWdKR1JoZEdGTWRtd2dQU0JwZEM1a1lYUmhUR1YyWld3c1hHNGdJQ0FnSUNBa1pHRjBZU0E5SUNka1lYUmhKeUFySUNna1pHRjBZVXgyYkNCOGZDQW5KeWs3WEc0Z0lDQWdhV1lnS0NScFpDa2dhWFF1WW1GelpVbGtJRDBnYVhRdWNtVnpiMngyWlM1MWNtd29hWFF1WW1GelpVbGtMQ0FrYVdRcE8xeHVJQ0FnSUdsbUlDZ2tZWE41Ym1NZ0ppWWdJV2wwTG1GemVXNWpLU0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9KMkZ6ZVc1aklITmphR1Z0WVNCcGJpQnplVzVqSUhOamFHVnRZU2NwTzF4dUlDQWdJRzkxZENBclBTQW5JSFpoY2lCbGNuSnpYeWNnS3lBb0pHeDJiQ2tnS3lBbklEMGdaWEp5YjNKek95YzdYRzRnSUgxY2JpQWdkbUZ5SUNSMllXeHBaQ0E5SUNkMllXeHBaQ2NnS3lBa2JIWnNMRnh1SUNBZ0lDUmljbVZoYTA5dVJYSnliM0lnUFNBaGFYUXViM0IwY3k1aGJHeEZjbkp2Y25Nc1hHNGdJQ0FnSkdOc2IzTnBibWRDY21GalpYTXhJRDBnSnljc1hHNGdJQ0FnSkdOc2IzTnBibWRDY21GalpYTXlJRDBnSnljN1hHNGdJSFpoY2lBa1pYSnliM0pMWlhsM2IzSmtPMXh1SUNCMllYSWdKSFI1Y0dWVFkyaGxiV0VnUFNCcGRDNXpZMmhsYldFdWRIbHdaU3hjYmlBZ0lDQWtkSGx3WlVselFYSnlZWGtnUFNCQmNuSmhlUzVwYzBGeWNtRjVLQ1IwZVhCbFUyTm9aVzFoS1R0Y2JpQWdhV1lnS0NSMGVYQmxTWE5CY25KaGVTQW1KaUFrZEhsd1pWTmphR1Z0WVM1c1pXNW5kR2dnUFQwZ01Ta2dlMXh1SUNBZ0lDUjBlWEJsVTJOb1pXMWhJRDBnSkhSNWNHVlRZMmhsYldGYk1GMDdYRzRnSUNBZ0pIUjVjR1ZKYzBGeWNtRjVJRDBnWm1Gc2MyVTdYRzRnSUgxY2JpQWdhV1lnS0dsMExuTmphR1Z0WVM0a2NtVm1JQ1ltSUNSeVpXWkxaWGwzYjNKa2N5a2dlMXh1SUNBZ0lHbG1JQ2hwZEM1dmNIUnpMbVY0ZEdWdVpGSmxabk1nUFQwZ0oyWmhhV3duS1NCN1hHNGdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSnlSeVpXWTZJSFpoYkdsa1lYUnBiMjRnYTJWNWQyOXlaSE1nZFhObFpDQnBiaUJ6WTJobGJXRWdZWFFnY0dGMGFDQmNJaWNnS3lCcGRDNWxjbkpUWTJobGJXRlFZWFJvSUNzZ0oxd2lJQ2h6WldVZ2IzQjBhVzl1SUdWNGRHVnVaRkpsWm5NcEp5azdYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDaHBkQzV2Y0hSekxtVjRkR1Z1WkZKbFpuTWdJVDA5SUhSeWRXVXBJSHRjYmlBZ0lDQWdJQ1J5WldaTFpYbDNiM0prY3lBOUlHWmhiSE5sTzF4dUlDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDY2tjbVZtT2lCclpYbDNiM0prY3lCcFoyNXZjbVZrSUdsdUlITmphR1Z0WVNCaGRDQndZWFJvSUZ3aUp5QXJJR2wwTG1WeWNsTmphR1Z0WVZCaGRHZ2dLeUFuWENJbktUdGNiaUFnSUNCOVhHNGdJSDFjYmlBZ2FXWWdLQ1IwZVhCbFUyTm9aVzFoS1NCN1hHNGdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdVkyOWxjbU5sVkhsd1pYTXBJSHRjYmlBZ0lDQWdJSFpoY2lBa1kyOWxjbU5sVkc5VWVYQmxjeUE5SUdsMExuVjBhV3d1WTI5bGNtTmxWRzlVZVhCbGN5aHBkQzV2Y0hSekxtTnZaWEpqWlZSNWNHVnpMQ0FrZEhsd1pWTmphR1Z0WVNrN1hHNGdJQ0FnZlZ4dUlDQWdJSFpoY2lBa2NuVnNaWE5IY205MWNDQTlJR2wwTGxKVlRFVlRMblI1Y0dWeld5UjBlWEJsVTJOb1pXMWhYVHRjYmlBZ0lDQnBaaUFvSkdOdlpYSmpaVlJ2Vkhsd1pYTWdmSHdnSkhSNWNHVkpjMEZ5Y21GNUlIeDhJQ1J5ZFd4bGMwZHliM1Z3SUQwOVBTQjBjblZsSUh4OElDZ2tjblZzWlhOSGNtOTFjQ0FtSmlBaEpITm9iM1ZzWkZWelpVZHliM1Z3S0NSeWRXeGxjMGR5YjNWd0tTa3BJSHRjYmlBZ0lDQWdJSFpoY2lBa2MyTm9aVzFoVUdGMGFDQTlJR2wwTG5OamFHVnRZVkJoZEdnZ0t5QW5MblI1Y0dVbkxGeHVJQ0FnSUNBZ0lDQWtaWEp5VTJOb1pXMWhVR0YwYUNBOUlHbDBMbVZ5Y2xOamFHVnRZVkJoZEdnZ0t5QW5MM1I1Y0dVbk8xeHVJQ0FnSUNBZ2RtRnlJQ1J6WTJobGJXRlFZWFJvSUQwZ2FYUXVjMk5vWlcxaFVHRjBhQ0FySUNjdWRIbHdaU2NzWEc0Z0lDQWdJQ0FnSUNSbGNuSlRZMmhsYldGUVlYUm9JRDBnYVhRdVpYSnlVMk5vWlcxaFVHRjBhQ0FySUNjdmRIbHdaU2NzWEc0Z0lDQWdJQ0FnSUNSdFpYUm9iMlFnUFNBa2RIbHdaVWx6UVhKeVlYa2dQeUFuWTJobFkydEVZWFJoVkhsd1pYTW5JRG9nSjJOb1pXTnJSR0YwWVZSNWNHVW5PMXh1SUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0NjZ0t5QW9hWFF1ZFhScGJGc2tiV1YwYUc5a1hTZ2tkSGx3WlZOamFHVnRZU3dnSkdSaGRHRXNJSFJ5ZFdVcEtTQXJJQ2NwSUhzZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drWTI5bGNtTmxWRzlVZVhCbGN5a2dlMXh1SUNBZ0lDQWdJQ0IyWVhJZ0pHUmhkR0ZVZVhCbElEMGdKMlJoZEdGVWVYQmxKeUFySUNSc2Rtd3NYRzRnSUNBZ0lDQWdJQ0FnSkdOdlpYSmpaV1FnUFNBblkyOWxjbU5sWkNjZ0t5QWtiSFpzTzF4dUlDQWdJQ0FnSUNCdmRYUWdLejBnSnlCMllYSWdKeUFySUNna1pHRjBZVlI1Y0dVcElDc2dKeUE5SUhSNWNHVnZaaUFuSUNzZ0tDUmtZWFJoS1NBcklDYzdJQ2M3WEc0Z0lDQWdJQ0FnSUdsbUlDaHBkQzV2Y0hSekxtTnZaWEpqWlZSNWNHVnpJRDA5SUNkaGNuSmhlU2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QnBaaUFvSnlBcklDZ2taR0YwWVZSNWNHVXBJQ3NnSnlBOVBTQmNYQ2R2WW1wbFkzUmNYQ2NnSmlZZ1FYSnlZWGt1YVhOQmNuSmhlU2duSUNzZ0tDUmtZWFJoS1NBcklDY3BLU0FuSUNzZ0tDUmtZWFJoVkhsd1pTa2dLeUFuSUQwZ1hGd25ZWEp5WVhsY1hDYzdJQ2M3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJQ2NnS3lBb0pHTnZaWEpqWldRcElDc2dKeUE5SUhWdVpHVm1hVzVsWkRzZ0p6dGNiaUFnSUNBZ0lDQWdkbUZ5SUNSaWNtRmpaWE5EYjJWeVkybHZiaUE5SUNjbk8xeHVJQ0FnSUNBZ0lDQjJZWElnWVhKeU1TQTlJQ1JqYjJWeVkyVlViMVI1Y0dWek8xeHVJQ0FnSUNBZ0lDQnBaaUFvWVhKeU1Ta2dlMXh1SUNBZ0lDQWdJQ0FnSUhaaGNpQWtkSGx3WlN3Z0pHa2dQU0F0TVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR3d4SUQwZ1lYSnlNUzVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJQ0FnSUNBZ0lIZG9hV3hsSUNna2FTQThJR3d4S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FrZEhsd1pTQTlJR0Z5Y2pGYkpHa2dLejBnTVYwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0pHa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0NjZ0t5QW9KR052WlhKalpXUXBJQ3NnSnlBOVBUMGdkVzVrWldacGJtVmtLU0I3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNSaWNtRmpaWE5EYjJWeVkybHZiaUFyUFNBbmZTYzdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1amIyVnlZMlZVZVhCbGN5QTlQU0FuWVhKeVlYa25JQ1ltSUNSMGVYQmxJQ0U5SUNkaGNuSmhlU2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDY2dLeUFvSkdSaGRHRlVlWEJsS1NBcklDY2dQVDBnWEZ3bllYSnlZWGxjWENjZ0ppWWdKeUFySUNna1pHRjBZU2tnS3lBbkxteGxibWQwYUNBOVBTQXhLU0I3SUNjZ0t5QW9KR052WlhKalpXUXBJQ3NnSnlBOUlDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBOUlDY2dLeUFvSkdSaGRHRXBJQ3NnSjFzd1hUc2dKeUFySUNna1pHRjBZVlI1Y0dVcElDc2dKeUE5SUhSNWNHVnZaaUFuSUNzZ0tDUmtZWFJoS1NBcklDYzdJQ0I5SUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSkhSNWNHVWdQVDBnSjNOMGNtbHVaeWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnYVdZZ0tDY2dLeUFvSkdSaGRHRlVlWEJsS1NBcklDY2dQVDBnWEZ3bmJuVnRZbVZ5WEZ3bklIeDhJQ2NnS3lBb0pHUmhkR0ZVZVhCbEtTQXJJQ2NnUFQwZ1hGd25ZbTl2YkdWaGJseGNKeWtnSnlBcklDZ2tZMjlsY21ObFpDa2dLeUFuSUQwZ1hGd25YRnduSUNzZ0p5QXJJQ2drWkdGMFlTa2dLeUFuT3lCbGJITmxJR2xtSUNnbklDc2dLQ1JrWVhSaEtTQXJJQ2NnUFQwOUlHNTFiR3dwSUNjZ0t5QW9KR052WlhKalpXUXBJQ3NnSnlBOUlGeGNKMXhjSnpzZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb0pIUjVjR1VnUFQwZ0oyNTFiV0psY2ljZ2ZId2dKSFI1Y0dVZ1BUMGdKMmx1ZEdWblpYSW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JR2xtSUNnbklDc2dLQ1JrWVhSaFZIbHdaU2tnS3lBbklEMDlJRnhjSjJKdmIyeGxZVzVjWENjZ2ZId2dKeUFySUNna1pHRjBZU2tnS3lBbklEMDlQU0J1ZFd4c0lIeDhJQ2duSUNzZ0tDUmtZWFJoVkhsd1pTa2dLeUFuSUQwOUlGeGNKM04wY21sdVoxeGNKeUFtSmlBbklDc2dLQ1JrWVhSaEtTQXJJQ2NnSmlZZ0p5QXJJQ2drWkdGMFlTa2dLeUFuSUQwOUlDc25JQ3NnS0NSa1lYUmhLU0FySUNjZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ1IwZVhCbElEMDlJQ2RwYm5SbFoyVnlKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNZbUlDRW9KeUFySUNna1pHRjBZU2tnS3lBbklDVWdNU2tuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5LU2tnSnlBcklDZ2tZMjlsY21ObFpDa2dLeUFuSUQwZ0t5Y2dLeUFvSkdSaGRHRXBJQ3NnSnpzZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb0pIUjVjR1VnUFQwZ0oySnZiMnhsWVc0bktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2duSUNzZ0tDUmtZWFJoS1NBcklDY2dQVDA5SUZ4Y0oyWmhiSE5sWEZ3bklIeDhJQ2NnS3lBb0pHUmhkR0VwSUNzZ0p5QTlQVDBnTUNCOGZDQW5JQ3NnS0NSa1lYUmhLU0FySUNjZ1BUMDlJRzUxYkd3cElDY2dLeUFvSkdOdlpYSmpaV1FwSUNzZ0p5QTlJR1poYkhObE95QmxiSE5sSUdsbUlDZ25JQ3NnS0NSa1lYUmhLU0FySUNjZ1BUMDlJRnhjSjNSeWRXVmNYQ2NnZkh3Z0p5QXJJQ2drWkdGMFlTa2dLeUFuSUQwOVBTQXhLU0FuSUNzZ0tDUmpiMlZ5WTJWa0tTQXJJQ2NnUFNCMGNuVmxPeUFuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2drZEhsd1pTQTlQU0FuYm5Wc2JDY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dhV1lnS0NjZ0t5QW9KR1JoZEdFcElDc2dKeUE5UFQwZ1hGd25YRnduSUh4OElDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBOVBUMGdNQ0I4ZkNBbklDc2dLQ1JrWVhSaEtTQXJJQ2NnUFQwOUlHWmhiSE5sS1NBbklDc2dLQ1JqYjJWeVkyVmtLU0FySUNjZ1BTQnVkV3hzT3lBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJR2xtSUNocGRDNXZjSFJ6TG1OdlpYSmpaVlI1Y0dWeklEMDlJQ2RoY25KaGVTY2dKaVlnSkhSNWNHVWdQVDBnSjJGeWNtRjVKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUJwWmlBb0p5QXJJQ2drWkdGMFlWUjVjR1VwSUNzZ0p5QTlQU0JjWENkemRISnBibWRjWENjZ2ZId2dKeUFySUNna1pHRjBZVlI1Y0dVcElDc2dKeUE5UFNCY1hDZHVkVzFpWlhKY1hDY2dmSHdnSnlBcklDZ2taR0YwWVZSNWNHVXBJQ3NnSnlBOVBTQmNYQ2RpYjI5c1pXRnVYRnduSUh4OElDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBOVBTQnVkV3hzS1NBbklDc2dLQ1JqYjJWeVkyVmtLU0FySUNjZ1BTQmJKeUFySUNna1pHRjBZU2tnS3lBblhUc2dKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ0p5QXJJQ2drWW5KaFkyVnpRMjlsY21OcGIyNHBJQ3NnSnlCcFppQW9KeUFySUNna1kyOWxjbU5sWkNrZ0t5QW5JRDA5UFNCMWJtUmxabWx1WldRcElIc2dJQ0FuTzF4dUlDQWdJQ0FnSUNCMllYSWdKQ1J2ZFhSVGRHRmpheUE5SUNRa2IzVjBVM1JoWTJzZ2ZId2dXMTA3WEc0Z0lDQWdJQ0FnSUNRa2IzVjBVM1JoWTJzdWNIVnphQ2h2ZFhRcE8xeHVJQ0FnSUNBZ0lDQnZkWFFnUFNBbkp6c2dMeW9nYVhOMFlXNWlkV3dnYVdkdWIzSmxJR1ZzYzJVZ0tpOWNiaUFnSUNBZ0lDQWdhV1lnS0dsMExtTnlaV0YwWlVWeWNtOXljeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjdJR3RsZVhkdmNtUTZJRnhjSnljZ0t5QW9KR1Z5Y205eVMyVjVkMjl5WkNCOGZDQW5kSGx3WlNjcElDc2dKMXhjSnlBc0lHUmhkR0ZRWVhSb09pQW9aR0YwWVZCaGRHZ2dmSHdnWEZ3blhGd25LU0FySUNjZ0t5QW9hWFF1WlhKeWIzSlFZWFJvS1NBcklDY2dMQ0J6WTJobGJXRlFZWFJvT2lBbklDc2dLR2wwTG5WMGFXd3VkRzlSZFc5MFpXUlRkSEpwYm1jb0pHVnljbE5qYUdWdFlWQmhkR2dwS1NBcklDY2dMQ0J3WVhKaGJYTTZJSHNnZEhsd1pUb2dYRnduSnp0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvSkhSNWNHVkpjMEZ5Y21GNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnljZ0t5QW9KSFI1Y0dWVFkyaGxiV0V1YW05cGJpaGNJaXhjSWlrcE8xeHVJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnljZ0t5QW9KSFI1Y0dWVFkyaGxiV0VwTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKMXhjSnlCOUlDYzdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWJXVnpjMkZuWlhNZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlBc0lHMWxjM05oWjJVNklGeGNKM05vYjNWc1pDQmlaU0FuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NSMGVYQmxTWE5CY25KaGVTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5Y2dLeUFvSkhSNWNHVlRZMmhsYldFdWFtOXBiaWhjSWl4Y0lpa3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NuSUNzZ0tDUjBlWEJsVTJOb1pXMWhLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuWEZ3bklDYzdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2hwZEM1dmNIUnpMblpsY21KdmMyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDd2djMk5vWlcxaE9pQjJZV3hwWkdGMFpTNXpZMmhsYldFbklDc2dLQ1J6WTJobGJXRlFZWFJvS1NBcklDY2dMQ0J3WVhKbGJuUlRZMmhsYldFNklIWmhiR2xrWVhSbExuTmphR1Z0WVNjZ0t5QW9hWFF1YzJOb1pXMWhVR0YwYUNrZ0t5QW5JQ3dnWkdGMFlUb2dKeUFySUNna1pHRjBZU2tnS3lBbklDYzdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlCN2ZTQW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUhaaGNpQmZYMlZ5Y2lBOUlHOTFkRHRjYmlBZ0lDQWdJQ0FnYjNWMElEMGdKQ1J2ZFhSVGRHRmpheTV3YjNBb0tUdGNiaUFnSUNBZ0lDQWdhV1lnS0NGcGRDNWpiMjF3YjNOcGRHVlNkV3hsSUNZbUlDUmljbVZoYTA5dVJYSnliM0lwSUhzZ0x5b2dhWE4wWVc1aWRXd2dhV2R1YjNKbElHbG1JQ292WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLR2wwTG1GemVXNWpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjBhSEp2ZHlCdVpYY2dWbUZzYVdSaGRHbHZia1Z5Y205eUtGc25JQ3NnS0Y5ZlpYSnlLU0FySUNkZEtUc2dKenRjYmlBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dkbUZzYVdSaGRHVXVaWEp5YjNKeklEMGdXeWNnS3lBb1gxOWxjbklwSUNzZ0oxMDdJSEpsZEhWeWJpQm1ZV3h6WlRzZ0p6dGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnlJR1Z5Y2lBOUlDY2dLeUFvWDE5bGNuSXBJQ3NnSnpzZ0lHbG1JQ2gyUlhKeWIzSnpJRDA5UFNCdWRXeHNLU0IyUlhKeWIzSnpJRDBnVzJWeWNsMDdJR1ZzYzJVZ2RrVnljbTl5Y3k1d2RYTm9LR1Z5Y2lrN0lHVnljbTl5Y3lzck95QW5PMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUgwZ1pXeHpaU0I3SUNBbk8xeHVJQ0FnSUNBZ0lDQjJZWElnSkhCaGNtVnVkRVJoZEdFZ1BTQWtaR0YwWVV4MmJDQS9JQ2RrWVhSaEp5QXJJQ2dvSkdSaGRHRk1kbXdnTFNBeEtTQjhmQ0FuSnlrZ09pQW5jR0Z5Wlc1MFJHRjBZU2NzWEc0Z0lDQWdJQ0FnSUNBZ0pIQmhjbVZ1ZEVSaGRHRlFjbTl3WlhKMGVTQTlJQ1JrWVhSaFRIWnNJRDhnYVhRdVpHRjBZVkJoZEdoQmNuSmJKR1JoZEdGTWRteGRJRG9nSjNCaGNtVnVkRVJoZEdGUWNtOXdaWEowZVNjN1hHNGdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDY2dLeUFvSkdSaGRHRXBJQ3NnSnlBOUlDY2dLeUFvSkdOdlpYSmpaV1FwSUNzZ0p6c2dKenRjYmlBZ0lDQWdJQ0FnYVdZZ0tDRWtaR0YwWVV4MmJDa2dlMXh1SUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuYVdZZ0tDY2dLeUFvSkhCaGNtVnVkRVJoZEdFcElDc2dKeUFoUFQwZ2RXNWtaV1pwYm1Wa0tTYzdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnSnlBcklDZ2tjR0Z5Wlc1MFJHRjBZU2tnS3lBbld5Y2dLeUFvSkhCaGNtVnVkRVJoZEdGUWNtOXdaWEowZVNrZ0t5QW5YU0E5SUNjZ0t5QW9KR052WlhKalpXUXBJQ3NnSnpzZ2ZTQW5PMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdkbUZ5SUNRa2IzVjBVM1JoWTJzZ1BTQWtKRzkxZEZOMFlXTnJJSHg4SUZ0ZE8xeHVJQ0FnSUNBZ0lDQWtKRzkxZEZOMFlXTnJMbkIxYzJnb2IzVjBLVHRjYmlBZ0lDQWdJQ0FnYjNWMElEMGdKeWM3SUM4cUlHbHpkR0Z1WW5Wc0lHbG5ibTl5WlNCbGJITmxJQ292WEc0Z0lDQWdJQ0FnSUdsbUlDaHBkQzVqY21WaGRHVkZjbkp2Y25NZ0lUMDlJR1poYkhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZXlCclpYbDNiM0prT2lCY1hDY25JQ3NnS0NSbGNuSnZja3RsZVhkdmNtUWdmSHdnSjNSNWNHVW5LU0FySUNkY1hDY2dMQ0JrWVhSaFVHRjBhRG9nS0dSaGRHRlFZWFJvSUh4OElGeGNKMXhjSnlrZ0t5QW5JQ3NnS0dsMExtVnljbTl5VUdGMGFDa2dLeUFuSUN3Z2MyTm9aVzFoVUdGMGFEb2dKeUFySUNocGRDNTFkR2xzTG5SdlVYVnZkR1ZrVTNSeWFXNW5LQ1JsY25KVFkyaGxiV0ZRWVhSb0tTa2dLeUFuSUN3Z2NHRnlZVzF6T2lCN0lIUjVjR1U2SUZ4Y0p5YzdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tDUjBlWEJsU1hOQmNuSmhlU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY25JQ3NnS0NSMGVYQmxVMk5vWlcxaExtcHZhVzRvWENJc1hDSXBLVHRjYmlBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY25JQ3NnS0NSMGVYQmxVMk5vWlcxaEtUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkY1hDY2dmU0FuTzF4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2hwZEM1dmNIUnpMbTFsYzNOaFoyVnpJQ0U5UFNCbVlXeHpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J0WlhOellXZGxPaUJjWENkemFHOTFiR1FnWW1VZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2tkSGx3WlVselFYSnlZWGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NuSUNzZ0tDUjBlWEJsVTJOb1pXMWhMbXB2YVc0b1hDSXNYQ0lwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbkp5QXJJQ2drZEhsd1pWTmphR1Z0WVNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0oxeGNKeUFuTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0JwWmlBb2FYUXViM0IwY3k1MlpYSmliM05sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUFzSUhOamFHVnRZVG9nZG1Gc2FXUmhkR1V1YzJOb1pXMWhKeUFySUNna2MyTm9aVzFoVUdGMGFDa2dLeUFuSUN3Z2NHRnlaVzUwVTJOb1pXMWhPaUIyWVd4cFpHRjBaUzV6WTJobGJXRW5JQ3NnS0dsMExuTmphR1Z0WVZCaGRHZ3BJQ3NnSnlBc0lHUmhkR0U2SUNjZ0t5QW9KR1JoZEdFcElDc2dKeUFuTzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUI5SUNjN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dlMzBnSnp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjJZWElnWDE5bGNuSWdQU0J2ZFhRN1hHNGdJQ0FnSUNBZ0lHOTFkQ0E5SUNRa2IzVjBVM1JoWTJzdWNHOXdLQ2s3WEc0Z0lDQWdJQ0FnSUdsbUlDZ2hhWFF1WTI5dGNHOXphWFJsVW5Wc1pTQW1KaUFrWW5KbFlXdFBia1Z5Y205eUtTQjdJQzhxSUdsemRHRnVZblZzSUdsbmJtOXlaU0JwWmlBcUwxeHVJQ0FnSUNBZ0lDQWdJR2xtSUNocGRDNWhjM2x1WXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZEdoeWIzY2dibVYzSUZaaGJHbGtZWFJwYjI1RmNuSnZjaWhiSnlBcklDaGZYMlZ5Y2lrZ0t5QW5YU2s3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUhaaGJHbGtZWFJsTG1WeWNtOXljeUE5SUZzbklDc2dLRjlmWlhKeUtTQXJJQ2RkT3lCeVpYUjFjbTRnWm1Gc2MyVTdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JSFpoY2lCbGNuSWdQU0FuSUNzZ0tGOWZaWEp5S1NBcklDYzdJQ0JwWmlBb2RrVnljbTl5Y3lBOVBUMGdiblZzYkNrZ2RrVnljbTl5Y3lBOUlGdGxjbkpkT3lCbGJITmxJSFpGY25KdmNuTXVjSFZ6YUNobGNuSXBPeUJsY25KdmNuTXJLenNnSnp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2ZTQW5PMXh1SUNBZ0lIMWNiaUFnZlZ4dUlDQnBaaUFvYVhRdWMyTm9aVzFoTGlSeVpXWWdKaVlnSVNSeVpXWkxaWGwzYjNKa2N5a2dlMXh1SUNBZ0lHOTFkQ0FyUFNBbklDY2dLeUFvYVhRdVVsVk1SVk11WVd4c0xpUnlaV1l1WTI5a1pTaHBkQ3dnSnlSeVpXWW5LU2tnS3lBbklDYzdYRzRnSUNBZ2FXWWdLQ1JpY21WaGEwOXVSWEp5YjNJcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklIMGdhV1lnS0dWeWNtOXljeUE5UFQwZ0p6dGNiaUFnSUNBZ0lHbG1JQ2drZEc5d0tTQjdYRzRnSUNBZ0lDQWdJRzkxZENBclBTQW5NQ2M3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKMlZ5Y25OZkp5QXJJQ2drYkhac0tUdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lHOTFkQ0FyUFNBbktTQjdJQ2M3WEc0Z0lDQWdJQ0FrWTJ4dmMybHVaMEp5WVdObGN6SWdLejBnSjMwbk8xeHVJQ0FnSUgxY2JpQWdmU0JsYkhObElIdGNiaUFnSUNCcFppQW9hWFF1YjNCMGN5NTJOU0FtSmlCcGRDNXpZMmhsYldFdWNHRjBkR1Z5YmtkeWIzVndjeWtnZTF4dUlDQWdJQ0FnWTI5dWMyOXNaUzUzWVhKdUtDZHJaWGwzYjNKa0lGd2ljR0YwZEdWeWJrZHliM1Z3YzF3aUlHbHpJR1JsY0hKbFkyRjBaV1FnWVc1a0lHUnBjMkZpYkdWa0xpQlZjMlVnYjNCMGFXOXVJSEJoZEhSbGNtNUhjbTkxY0hNNklIUnlkV1VnZEc4Z1pXNWhZbXhsTGljcE8xeHVJQ0FnSUgxY2JpQWdJQ0IyWVhJZ1lYSnlNaUE5SUdsMExsSlZURVZUTzF4dUlDQWdJR2xtSUNoaGNuSXlLU0I3WEc0Z0lDQWdJQ0IyWVhJZ0pISjFiR1Z6UjNKdmRYQXNJR2t5SUQwZ0xURXNYRzRnSUNBZ0lDQWdJR3d5SUQwZ1lYSnlNaTVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJQ0FnZDJocGJHVWdLR2t5SUR3Z2JESXBJSHRjYmlBZ0lDQWdJQ0FnSkhKMWJHVnpSM0p2ZFhBZ1BTQmhjbkl5VzJreUlDczlJREZkTzF4dUlDQWdJQ0FnSUNCcFppQW9KSE5vYjNWc1pGVnpaVWR5YjNWd0tDUnlkV3hsYzBkeWIzVndLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2drY25Wc1pYTkhjbTkxY0M1MGVYQmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QnBaaUFvSnlBcklDaHBkQzUxZEdsc0xtTm9aV05yUkdGMFlWUjVjR1VvSkhKMWJHVnpSM0p2ZFhBdWRIbHdaU3dnSkdSaGRHRXBLU0FySUNjcElIc2dKenRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdhV1lnS0dsMExtOXdkSE11ZFhObFJHVm1ZWFZzZEhNZ0ppWWdJV2wwTG1OdmJYQnZjMmwwWlZKMWJHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2drY25Wc1pYTkhjbTkxY0M1MGVYQmxJRDA5SUNkdlltcGxZM1FuSUNZbUlHbDBMbk5qYUdWdFlTNXdjbTl3WlhKMGFXVnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lBa2MyTm9aVzFoSUQwZ2FYUXVjMk5vWlcxaExuQnliM0JsY25ScFpYTXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKSE5qYUdWdFlVdGxlWE1nUFNCUFltcGxZM1F1YTJWNWN5Z2tjMk5vWlcxaEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0Z5Y2pNZ1BTQWtjMk5vWlcxaFMyVjVjenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dGeWNqTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ0pIQnliM0JsY25SNVMyVjVMQ0JwTXlBOUlDMHhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkRNZ1BTQmhjbkl6TG14bGJtZDBhQ0F0SURFN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QyaHBiR1VnS0dreklEd2diRE1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUndjbTl3WlhKMGVVdGxlU0E5SUdGeWNqTmJhVE1nS3owZ01WMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ0pITmphQ0E5SUNSelkyaGxiV0ZiSkhCeWIzQmxjblI1UzJWNVhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna2MyTm9MbVJsWm1GMWJIUWdJVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ0pIQmhjM05FWVhSaElEMGdKR1JoZEdFZ0t5QnBkQzUxZEdsc0xtZGxkRkJ5YjNCbGNuUjVLQ1J3Y205d1pYSjBlVXRsZVNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5JQ0JwWmlBb0p5QXJJQ2drY0dGemMwUmhkR0VwSUNzZ0p5QTlQVDBnZFc1a1pXWnBibVZrS1NBbklDc2dLQ1J3WVhOelJHRjBZU2tnS3lBbklEMGdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2wwTG05d2RITXVkWE5sUkdWbVlYVnNkSE1nUFQwZ0ozTm9ZWEpsWkNjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnlBbklDc2dLR2wwTG5WelpVUmxabUYxYkhRb0pITmphQzVrWldaaGRXeDBLU2tnS3lBbklDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dKeUFySUNoS1UwOU9Mbk4wY21sdVoybG1lU2drYzJOb0xtUmxabUYxYkhRcEtTQXJJQ2NnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSnpzZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9KSEoxYkdWelIzSnZkWEF1ZEhsd1pTQTlQU0FuWVhKeVlYa25JQ1ltSUVGeWNtRjVMbWx6UVhKeVlYa29hWFF1YzJOb1pXMWhMbWwwWlcxektTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnWVhKeU5DQTlJR2wwTG5OamFHVnRZUzVwZEdWdGN6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0Z5Y2pRcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnSkhOamFDd2dKR2tnUFNBdE1TeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR3cwSUQwZ1lYSnlOQzVzWlc1bmRHZ2dMU0F4TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkb2FXeGxJQ2drYVNBOElHdzBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa2MyTm9JRDBnWVhKeU5Gc2thU0FyUFNBeFhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna2MyTm9MbVJsWm1GMWJIUWdJVDA5SUhWdVpHVm1hVzVsWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ0pIQmhjM05FWVhSaElEMGdKR1JoZEdFZ0t5QW5XeWNnS3lBa2FTQXJJQ2RkSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dJR2xtSUNnbklDc2dLQ1J3WVhOelJHRjBZU2tnS3lBbklEMDlQU0IxYm1SbFptbHVaV1FwSUNjZ0t5QW9KSEJoYzNORVlYUmhLU0FySUNjZ1BTQW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9hWFF1YjNCMGN5NTFjMlZFWldaaGRXeDBjeUE5UFNBbmMyaGhjbVZrSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9hWFF1ZFhObFJHVm1ZWFZzZENna2MyTm9MbVJsWm1GMWJIUXBLU0FySUNjZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0VwVFQwNHVjM1J5YVc1bmFXWjVLQ1J6WTJndVpHVm1ZWFZzZENrcElDc2dKeUFuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuT3lBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCMllYSWdZWEp5TlNBOUlDUnlkV3hsYzBkeWIzVndMbkoxYkdWek8xeHVJQ0FnSUNBZ0lDQWdJR2xtSUNoaGNuSTFLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnSkhKMWJHVXNJR2sxSUQwZ0xURXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHdzFJRDBnWVhKeU5TNXNaVzVuZEdnZ0xTQXhPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2QyaHBiR1VnS0drMUlEd2diRFVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSkhKMWJHVWdQU0JoY25JMVcyazFJQ3M5SURGZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9KSE5vYjNWc1pGVnpaVkoxYkdVb0pISjFiR1VwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJQ1JqYjJSbElEMGdKSEoxYkdVdVkyOWtaU2hwZEN3Z0pISjFiR1V1YTJWNWQyOXlaQ3dnSkhKMWJHVnpSM0p2ZFhBdWRIbHdaU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tDUmpiMlJsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0NSamIyUmxLU0FySUNjZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna1luSmxZV3RQYmtWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUmpiRzl6YVc1blFuSmhZMlZ6TVNBclBTQW5mU2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJR2xtSUNna1luSmxZV3RQYmtWeWNtOXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QW5JQ3NnS0NSamJHOXphVzVuUW5KaFkyVnpNU2tnS3lBbklDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBa1kyeHZjMmx1WjBKeVlXTmxjekVnUFNBbkp6dGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLQ1J5ZFd4bGMwZHliM1Z3TG5SNWNHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIMGdKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2drZEhsd1pWTmphR1Z0WVNBbUppQWtkSGx3WlZOamFHVnRZU0E5UFQwZ0pISjFiR1Z6UjNKdmRYQXVkSGx3WlNBbUppQWhKR052WlhKalpWUnZWSGx3WlhNcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ1pXeHpaU0I3SUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQWtjMk5vWlcxaFVHRjBhQ0E5SUdsMExuTmphR1Z0WVZCaGRHZ2dLeUFuTG5SNWNHVW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JsY25KVFkyaGxiV0ZRWVhSb0lEMGdhWFF1WlhKeVUyTm9aVzFoVUdGMGFDQXJJQ2N2ZEhsd1pTYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUFrSkc5MWRGTjBZV05ySUQwZ0pDUnZkWFJUZEdGamF5QjhmQ0JiWFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSkNSdmRYUlRkR0ZqYXk1d2RYTm9LRzkxZENrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQTlJQ2NuT3lBdktpQnBjM1JoYm1KMWJDQnBaMjV2Y21VZ1pXeHpaU0FxTDF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FYUXVZM0psWVhSbFJYSnliM0p6SUNFOVBTQm1ZV3h6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIc2dhMlY1ZDI5eVpEb2dYRnduSnlBcklDZ2taWEp5YjNKTFpYbDNiM0prSUh4OElDZDBlWEJsSnlrZ0t5QW5YRnduSUN3Z1pHRjBZVkJoZEdnNklDaGtZWFJoVUdGMGFDQjhmQ0JjWENkY1hDY3BJQ3NnSnlBcklDaHBkQzVsY25KdmNsQmhkR2dwSUNzZ0p5QXNJSE5qYUdWdFlWQmhkR2c2SUNjZ0t5QW9hWFF1ZFhScGJDNTBiMUYxYjNSbFpGTjBjbWx1Wnlna1pYSnlVMk5vWlcxaFVHRjBhQ2twSUNzZ0p5QXNJSEJoY21GdGN6b2dleUIwZVhCbE9pQmNYQ2NuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDZ2tkSGx3WlVselFYSnlZWGtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbkp5QXJJQ2drZEhsd1pWTmphR1Z0WVM1cWIybHVLRndpTEZ3aUtTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5KeUFySUNna2RIbHdaVk5qYUdWdFlTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5YRnduSUgwZ0p6dGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhRdWIzQjBjeTV0WlhOellXZGxjeUFoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklDd2diV1Z6YzJGblpUb2dYRnduYzJodmRXeGtJR0psSUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvSkhSNWNHVkpjMEZ5Y21GNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSnlBcklDZ2tkSGx3WlZOamFHVnRZUzVxYjJsdUtGd2lMRndpS1NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeWNnS3lBb0pIUjVjR1ZUWTJobGJXRXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNkY1hDY2dKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHbDBMbTl3ZEhNdWRtVnlZbTl6WlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dMQ0J6WTJobGJXRTZJSFpoYkdsa1lYUmxMbk5qYUdWdFlTY2dLeUFvSkhOamFHVnRZVkJoZEdncElDc2dKeUFzSUhCaGNtVnVkRk5qYUdWdFlUb2dkbUZzYVdSaGRHVXVjMk5vWlcxaEp5QXJJQ2hwZEM1elkyaGxiV0ZRWVhSb0tTQXJJQ2NnTENCa1lYUmhPaUFuSUNzZ0tDUmtZWFJoS1NBcklDY2dKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYjNWMElDczlJQ2NnZlNBbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuSUh0OUlDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJRjlmWlhKeUlEMGdiM1YwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ1BTQWtKRzkxZEZOMFlXTnJMbkJ2Y0NncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JV2wwTG1OdmJYQnZjMmwwWlZKMWJHVWdKaVlnSkdKeVpXRnJUMjVGY25KdmNpa2dleUF2S2lCcGMzUmhibUoxYkNCcFoyNXZjbVVnYVdZZ0tpOWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYVhRdVlYTjVibU1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHOTFkQ0FyUFNBbklIUm9jbTkzSUc1bGR5QldZV3hwWkdGMGFXOXVSWEp5YjNJb1d5Y2dLeUFvWDE5bGNuSXBJQ3NnSjEwcE95QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2ZFhRZ0t6MGdKeUIyWVd4cFpHRjBaUzVsY25KdmNuTWdQU0JiSnlBcklDaGZYMlZ5Y2lrZ0t5QW5YVHNnY21WMGRYSnVJR1poYkhObE95QW5PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFFnS3owZ0p5QjJZWElnWlhKeUlEMGdKeUFySUNoZlgyVnljaWtnS3lBbk95QWdhV1lnS0haRmNuSnZjbk1nUFQwOUlHNTFiR3dwSUhaRmNuSnZjbk1nUFNCYlpYSnlYVHNnWld4elpTQjJSWEp5YjNKekxuQjFjMmdvWlhKeUtUc2daWEp5YjNKekt5czdJQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwSUNzOUlDY2dmU0FuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQnBaaUFvSkdKeVpXRnJUMjVGY25KdmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2FXWWdLR1Z5Y205eWN5QTlQVDBnSnp0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNna2RHOXdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzkxZENBclBTQW5NQ2M3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmRYUWdLejBnSjJWeWNuTmZKeUFySUNna2JIWnNLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUc5MWRDQXJQU0FuS1NCN0lDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBa1kyeHZjMmx1WjBKeVlXTmxjeklnS3owZ0ozMG5PMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdmVnh1SUNCcFppQW9KR0p5WldGclQyNUZjbkp2Y2lrZ2UxeHVJQ0FnSUc5MWRDQXJQU0FuSUNjZ0t5QW9KR05zYjNOcGJtZENjbUZqWlhNeUtTQXJJQ2NnSnp0Y2JpQWdmVnh1SUNCcFppQW9KSFJ2Y0NrZ2UxeHVJQ0FnSUdsbUlDZ2tZWE41Ym1NcElIdGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklHbG1JQ2hsY25KdmNuTWdQVDA5SURBcElISmxkSFZ5YmlCa1lYUmhPeUFnSUNBZ0lDQWdJQ0FnSnp0Y2JpQWdJQ0FnSUc5MWRDQXJQU0FuSUdWc2MyVWdkR2h5YjNjZ2JtVjNJRlpoYkdsa1lYUnBiMjVGY25KdmNpaDJSWEp5YjNKektUc2dKenRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2IzVjBJQ3M5SUNjZ2RtRnNhV1JoZEdVdVpYSnliM0p6SUQwZ2RrVnljbTl5Y3pzZ0p6dGNiaUFnSUNBZ0lHOTFkQ0FyUFNBbklISmxkSFZ5YmlCbGNuSnZjbk1nUFQwOUlEQTdJQ0FnSUNBZ0lDYzdYRzRnSUNBZ2ZWeHVJQ0FnSUc5MWRDQXJQU0FuSUgwcE95QnlaWFIxY200Z2RtRnNhV1JoZEdVN0p6dGNiaUFnZlNCbGJITmxJSHRjYmlBZ0lDQnZkWFFnS3owZ0p5QjJZWElnSnlBcklDZ2tkbUZzYVdRcElDc2dKeUE5SUdWeWNtOXljeUE5UFQwZ1pYSnljMThuSUNzZ0tDUnNkbXdwSUNzZ0p6c25PMXh1SUNCOVhHNGdJRzkxZENBOUlHbDBMblYwYVd3dVkyeGxZVzVWY0VOdlpHVW9iM1YwS1R0Y2JpQWdhV1lnS0NSMGIzQXBJSHRjYmlBZ0lDQnZkWFFnUFNCcGRDNTFkR2xzTG1acGJtRnNRMnhsWVc1VmNFTnZaR1VvYjNWMExDQWtZWE41Ym1NcE8xeHVJQ0I5WEc1Y2JpQWdablZ1WTNScGIyNGdKSE5vYjNWc1pGVnpaVWR5YjNWd0tDUnlkV3hsYzBkeWIzVndLU0I3WEc0Z0lDQWdkbUZ5SUhKMWJHVnpJRDBnSkhKMWJHVnpSM0p2ZFhBdWNuVnNaWE03WEc0Z0lDQWdabTl5SUNoMllYSWdhU0E5SURBN0lHa2dQQ0J5ZFd4bGN5NXNaVzVuZEdnN0lHa3JLeWxjYmlBZ0lDQWdJR2xtSUNna2MyaHZkV3hrVlhObFVuVnNaU2h5ZFd4bGMxdHBYU2twSUhKbGRIVnliaUIwY25WbE8xeHVJQ0I5WEc1Y2JpQWdablZ1WTNScGIyNGdKSE5vYjNWc1pGVnpaVkoxYkdVb0pISjFiR1VwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdhWFF1YzJOb1pXMWhXeVJ5ZFd4bExtdGxlWGR2Y21SZElDRTlQU0IxYm1SbFptbHVaV1FnZkh3Z0tDUnlkV3hsTG1sdGNHeGxiV1Z1ZEhNZ0ppWWdKSEoxYkdWSmJXeGxiV1Z1ZEhOVGIyMWxTMlY1ZDI5eVpDZ2tjblZzWlNrcE8xeHVJQ0I5WEc1Y2JpQWdablZ1WTNScGIyNGdKSEoxYkdWSmJXeGxiV1Z1ZEhOVGIyMWxTMlY1ZDI5eVpDZ2tjblZzWlNrZ2UxeHVJQ0FnSUhaaGNpQnBiWEJzSUQwZ0pISjFiR1V1YVcxd2JHVnRaVzUwY3p0Y2JpQWdJQ0JtYjNJZ0tIWmhjaUJwSUQwZ01Ec2dhU0E4SUdsdGNHd3ViR1Z1WjNSb095QnBLeXNwWEc0Z0lDQWdJQ0JwWmlBb2FYUXVjMk5vWlcxaFcybHRjR3hiYVYxZElDRTlQU0IxYm1SbFptbHVaV1FwSUhKbGRIVnliaUIwY25WbE8xeHVJQ0I5WEc0Z0lISmxkSFZ5YmlCdmRYUTdYRzU5WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN0lpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvZG90anMvdmFsaWRhdGUuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL2tleXdvcmQuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Fqdi9saWIva2V5d29yZC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxudmFyIElERU5USUZJRVIgPSAvXlthLXpfJF1bYS16MC05XyRcXFxcXFxcXC1dKiQvaTtcXFxcbnZhciBjdXN0b21SdWxlQ29kZSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZG90anMvY3VzdG9tICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9kb3Rqcy9jdXN0b20uanNcXFxcXFxcIik7XFxcXG5cXFxcbm1vZHVsZS5leHBvcnRzID0ge1xcXFxuICBhZGQ6IGFkZEtleXdvcmQsXFxcXG4gIGdldDogZ2V0S2V5d29yZCxcXFxcbiAgcmVtb3ZlOiByZW1vdmVLZXl3b3JkXFxcXG59O1xcXFxuXFxcXG4vKipcXFxcbiAqIERlZmluZSBjdXN0b20ga2V5d29yZFxcXFxuICogQHRoaXMgIEFqdlxcXFxuICogQHBhcmFtIHtTdHJpbmd9IGtleXdvcmQgY3VzdG9tIGtleXdvcmQsIHNob3VsZCBiZSB1bmlxdWUgKGluY2x1ZGluZyBkaWZmZXJlbnQgZnJvbSBhbGwgc3RhbmRhcmQsIGN1c3RvbSBhbmQgbWFjcm8ga2V5d29yZHMpLlxcXFxuICogQHBhcmFtIHtPYmplY3R9IGRlZmluaXRpb24ga2V5d29yZCBkZWZpbml0aW9uIG9iamVjdCB3aXRoIHByb3BlcnRpZXMgYHR5cGVgICh0eXBlKHMpIHdoaWNoIHRoZSBrZXl3b3JkIGFwcGxpZXMgdG8pLCBgdmFsaWRhdGVgIG9yIGBjb21waWxlYC5cXFxcbiAqL1xcXFxuZnVuY3Rpb24gYWRkS2V5d29yZChrZXl3b3JkLCBkZWZpbml0aW9uKSB7XFxcXG4gIC8qIGpzaGludCB2YWxpZHRoaXM6IHRydWUgKi9cXFxcbiAgLyogZXNsaW50IG5vLXNoYWRvdzogMCAqL1xcXFxuICB2YXIgUlVMRVMgPSB0aGlzLlJVTEVTO1xcXFxuXFxcXG4gIGlmIChSVUxFUy5rZXl3b3Jkc1trZXl3b3JkXSlcXFxcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0tleXdvcmQgJyArIGtleXdvcmQgKyAnIGlzIGFscmVhZHkgZGVmaW5lZCcpO1xcXFxuXFxcXG4gIGlmICghSURFTlRJRklFUi50ZXN0KGtleXdvcmQpKVxcXFxuICAgIHRocm93IG5ldyBFcnJvcignS2V5d29yZCAnICsga2V5d29yZCArICcgaXMgbm90IGEgdmFsaWQgaWRlbnRpZmllcicpO1xcXFxuXFxcXG4gIGlmIChkZWZpbml0aW9uKSB7XFxcXG4gICAgaWYgKGRlZmluaXRpb24ubWFjcm8gJiYgZGVmaW5pdGlvbi52YWxpZCAhPT0gdW5kZWZpbmVkKVxcXFxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcXFxcXFxcInZhbGlkXFxcXFxcXCIgb3B0aW9uIGNhbm5vdCBiZSB1c2VkIHdpdGggbWFjcm8ga2V5d29yZHMnKTtcXFxcblxcXFxuICAgIHZhciBkYXRhVHlwZSA9IGRlZmluaXRpb24udHlwZTtcXFxcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhVHlwZSkpIHtcXFxcbiAgICAgIHZhciBpLCBsZW4gPSBkYXRhVHlwZS5sZW5ndGg7XFxcXG4gICAgICBmb3IgKGk9MDsgaTxsZW47IGkrKykgY2hlY2tEYXRhVHlwZShkYXRhVHlwZVtpXSk7XFxcXG4gICAgICBmb3IgKGk9MDsgaTxsZW47IGkrKykgX2FkZFJ1bGUoa2V5d29yZCwgZGF0YVR5cGVbaV0sIGRlZmluaXRpb24pO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBpZiAoZGF0YVR5cGUpIGNoZWNrRGF0YVR5cGUoZGF0YVR5cGUpO1xcXFxuICAgICAgX2FkZFJ1bGUoa2V5d29yZCwgZGF0YVR5cGUsIGRlZmluaXRpb24pO1xcXFxuICAgIH1cXFxcblxcXFxuICAgIHZhciAkZGF0YSA9IGRlZmluaXRpb24uJGRhdGEgPT09IHRydWUgJiYgdGhpcy5fb3B0cy4kZGF0YTtcXFxcbiAgICBpZiAoJGRhdGEgJiYgIWRlZmluaXRpb24udmFsaWRhdGUpXFxcXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJyRkYXRhIHN1cHBvcnQ6IFxcXFxcXFwidmFsaWRhdGVcXFxcXFxcIiBmdW5jdGlvbiBpcyBub3QgZGVmaW5lZCcpO1xcXFxuXFxcXG4gICAgdmFyIG1ldGFTY2hlbWEgPSBkZWZpbml0aW9uLm1ldGFTY2hlbWE7XFxcXG4gICAgaWYgKG1ldGFTY2hlbWEpIHtcXFxcbiAgICAgIGlmICgkZGF0YSkge1xcXFxuICAgICAgICBtZXRhU2NoZW1hID0ge1xcXFxuICAgICAgICAgIGFueU9mOiBbXFxcXG4gICAgICAgICAgICBtZXRhU2NoZW1hLFxcXFxuICAgICAgICAgICAgeyAnJHJlZic6ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZXBvYmVyZXpraW4vYWp2L21hc3Rlci9saWIvcmVmcy8kZGF0YS5qc29uIycgfVxcXFxuICAgICAgICAgIF1cXFxcbiAgICAgICAgfTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIGRlZmluaXRpb24udmFsaWRhdGVTY2hlbWEgPSB0aGlzLmNvbXBpbGUobWV0YVNjaGVtYSwgdHJ1ZSk7XFxcXG4gICAgfVxcXFxuICB9XFxcXG5cXFxcbiAgUlVMRVMua2V5d29yZHNba2V5d29yZF0gPSBSVUxFUy5hbGxba2V5d29yZF0gPSB0cnVlO1xcXFxuXFxcXG5cXFxcbiAgZnVuY3Rpb24gX2FkZFJ1bGUoa2V5d29yZCwgZGF0YVR5cGUsIGRlZmluaXRpb24pIHtcXFxcbiAgICB2YXIgcnVsZUdyb3VwO1xcXFxuICAgIGZvciAodmFyIGk9MDsgaTxSVUxFUy5sZW5ndGg7IGkrKykge1xcXFxuICAgICAgdmFyIHJnID0gUlVMRVNbaV07XFxcXG4gICAgICBpZiAocmcudHlwZSA9PSBkYXRhVHlwZSkge1xcXFxuICAgICAgICBydWxlR3JvdXAgPSByZztcXFxcbiAgICAgICAgYnJlYWs7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgaWYgKCFydWxlR3JvdXApIHtcXFxcbiAgICAgIHJ1bGVHcm91cCA9IHsgdHlwZTogZGF0YVR5cGUsIHJ1bGVzOiBbXSB9O1xcXFxuICAgICAgUlVMRVMucHVzaChydWxlR3JvdXApO1xcXFxuICAgIH1cXFxcblxcXFxuICAgIHZhciBydWxlID0ge1xcXFxuICAgICAga2V5d29yZDoga2V5d29yZCxcXFxcbiAgICAgIGRlZmluaXRpb246IGRlZmluaXRpb24sXFxcXG4gICAgICBjdXN0b206IHRydWUsXFxcXG4gICAgICBjb2RlOiBjdXN0b21SdWxlQ29kZSxcXFxcbiAgICAgIGltcGxlbWVudHM6IGRlZmluaXRpb24uaW1wbGVtZW50c1xcXFxuICAgIH07XFxcXG4gICAgcnVsZUdyb3VwLnJ1bGVzLnB1c2gocnVsZSk7XFxcXG4gICAgUlVMRVMuY3VzdG9tW2tleXdvcmRdID0gcnVsZTtcXFxcbiAgfVxcXFxuXFxcXG5cXFxcbiAgZnVuY3Rpb24gY2hlY2tEYXRhVHlwZShkYXRhVHlwZSkge1xcXFxuICAgIGlmICghUlVMRVMudHlwZXNbZGF0YVR5cGVdKSB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gdHlwZSAnICsgZGF0YVR5cGUpO1xcXFxuICB9XFxcXG59XFxcXG5cXFxcblxcXFxuLyoqXFxcXG4gKiBHZXQga2V5d29yZFxcXFxuICogQHRoaXMgIEFqdlxcXFxuICogQHBhcmFtIHtTdHJpbmd9IGtleXdvcmQgcHJlLWRlZmluZWQgb3IgY3VzdG9tIGtleXdvcmQuXFxcXG4gKiBAcmV0dXJuIHtPYmplY3R8Qm9vbGVhbn0gY3VzdG9tIGtleXdvcmQgZGVmaW5pdGlvbiwgYHRydWVgIGlmIGl0IGlzIGEgcHJlZGVmaW5lZCBrZXl3b3JkLCBgZmFsc2VgIG90aGVyd2lzZS5cXFxcbiAqL1xcXFxuZnVuY3Rpb24gZ2V0S2V5d29yZChrZXl3b3JkKSB7XFxcXG4gIC8qIGpzaGludCB2YWxpZHRoaXM6IHRydWUgKi9cXFxcbiAgdmFyIHJ1bGUgPSB0aGlzLlJVTEVTLmN1c3RvbVtrZXl3b3JkXTtcXFxcbiAgcmV0dXJuIHJ1bGUgPyBydWxlLmRlZmluaXRpb24gOiB0aGlzLlJVTEVTLmtleXdvcmRzW2tleXdvcmRdIHx8IGZhbHNlO1xcXFxufVxcXFxuXFxcXG5cXFxcbi8qKlxcXFxuICogUmVtb3ZlIGtleXdvcmRcXFxcbiAqIEB0aGlzICBBanZcXFxcbiAqIEBwYXJhbSB7U3RyaW5nfSBrZXl3b3JkIHByZS1kZWZpbmVkIG9yIGN1c3RvbSBrZXl3b3JkLlxcXFxuICovXFxcXG5mdW5jdGlvbiByZW1vdmVLZXl3b3JkKGtleXdvcmQpIHtcXFxcbiAgLyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xcXFxuICB2YXIgUlVMRVMgPSB0aGlzLlJVTEVTO1xcXFxuICBkZWxldGUgUlVMRVMua2V5d29yZHNba2V5d29yZF07XFxcXG4gIGRlbGV0ZSBSVUxFUy5hbGxba2V5d29yZF07XFxcXG4gIGRlbGV0ZSBSVUxFUy5jdXN0b21ba2V5d29yZF07XFxcXG4gIGZvciAodmFyIGk9MDsgaTxSVUxFUy5sZW5ndGg7IGkrKykge1xcXFxuICAgIHZhciBydWxlcyA9IFJVTEVTW2ldLnJ1bGVzO1xcXFxuICAgIGZvciAodmFyIGo9MDsgajxydWxlcy5sZW5ndGg7IGorKykge1xcXFxuICAgICAgaWYgKHJ1bGVzW2pdLmtleXdvcmQgPT0ga2V5d29yZCkge1xcXFxuICAgICAgICBydWxlcy5zcGxpY2UoaiwgMSk7XFxcXG4gICAgICAgIGJyZWFrO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgfVxcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5clpYbDNiM0prTG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTlyWlhsM2IzSmtMbXB6UDJabVpqSWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpSjNWelpTQnpkSEpwWTNRbk8xeHVYRzUyWVhJZ1NVUkZUbFJKUmtsRlVpQTlJQzllVzJFdGVsOGtYVnRoTFhvd0xUbGZKRnhjTFYwcUpDOXBPMXh1ZG1GeUlHTjFjM1J2YlZKMWJHVkRiMlJsSUQwZ2NtVnhkV2x5WlNnbkxpOWtiM1JxY3k5amRYTjBiMjBuS1R0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQjdYRzRnSUdGa1pEb2dZV1JrUzJWNWQyOXlaQ3hjYmlBZ1oyVjBPaUJuWlhSTFpYbDNiM0prTEZ4dUlDQnlaVzF2ZG1VNklISmxiVzkyWlV0bGVYZHZjbVJjYm4wN1hHNWNiaThxS2x4dUlDb2dSR1ZtYVc1bElHTjFjM1J2YlNCclpYbDNiM0prWEc0Z0tpQkFkR2hwY3lBZ1FXcDJYRzRnS2lCQWNHRnlZVzBnZTFOMGNtbHVaMzBnYTJWNWQyOXlaQ0JqZFhOMGIyMGdhMlY1ZDI5eVpDd2djMmh2ZFd4a0lHSmxJSFZ1YVhGMVpTQW9hVzVqYkhWa2FXNW5JR1JwWm1abGNtVnVkQ0JtY205dElHRnNiQ0J6ZEdGdVpHRnlaQ3dnWTNWemRHOXRJR0Z1WkNCdFlXTnlieUJyWlhsM2IzSmtjeWt1WEc0Z0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ1pHVm1hVzVwZEdsdmJpQnJaWGwzYjNKa0lHUmxabWx1YVhScGIyNGdiMkpxWldOMElIZHBkR2dnY0hKdmNHVnlkR2xsY3lCZ2RIbHdaV0FnS0hSNWNHVW9jeWtnZDJocFkyZ2dkR2hsSUd0bGVYZHZjbVFnWVhCd2JHbGxjeUIwYnlrc0lHQjJZV3hwWkdGMFpXQWdiM0lnWUdOdmJYQnBiR1ZnTGx4dUlDb3ZYRzVtZFc1amRHbHZiaUJoWkdSTFpYbDNiM0prS0d0bGVYZHZjbVFzSUdSbFptbHVhWFJwYjI0cElIdGNiaUFnTHlvZ2FuTm9hVzUwSUhaaGJHbGtkR2hwY3pvZ2RISjFaU0FxTDF4dUlDQXZLaUJsYzJ4cGJuUWdibTh0YzJoaFpHOTNPaUF3SUNvdlhHNGdJSFpoY2lCU1ZVeEZVeUE5SUhSb2FYTXVVbFZNUlZNN1hHNWNiaUFnYVdZZ0tGSlZURVZUTG10bGVYZHZjbVJ6VzJ0bGVYZHZjbVJkS1Z4dUlDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpZ25TMlY1ZDI5eVpDQW5JQ3NnYTJWNWQyOXlaQ0FySUNjZ2FYTWdZV3h5WldGa2VTQmtaV1pwYm1Wa0p5azdYRzVjYmlBZ2FXWWdLQ0ZKUkVWT1ZFbEdTVVZTTG5SbGMzUW9hMlY1ZDI5eVpDa3BYRzRnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0NkTFpYbDNiM0prSUNjZ0t5QnJaWGwzYjNKa0lDc2dKeUJwY3lCdWIzUWdZU0IyWVd4cFpDQnBaR1Z1ZEdsbWFXVnlKeWs3WEc1Y2JpQWdhV1lnS0dSbFptbHVhWFJwYjI0cElIdGNiaUFnSUNCcFppQW9aR1ZtYVc1cGRHbHZiaTV0WVdOeWJ5QW1KaUJrWldacGJtbDBhVzl1TG5aaGJHbGtJQ0U5UFNCMWJtUmxabWx1WldRcFhHNGdJQ0FnSUNCMGFISnZkeUJ1WlhjZ1JYSnliM0lvSjF3aWRtRnNhV1JjSWlCdmNIUnBiMjRnWTJGdWJtOTBJR0psSUhWelpXUWdkMmwwYUNCdFlXTnlieUJyWlhsM2IzSmtjeWNwTzF4dVhHNGdJQ0FnZG1GeUlHUmhkR0ZVZVhCbElEMGdaR1ZtYVc1cGRHbHZiaTUwZVhCbE8xeHVJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0dSaGRHRlVlWEJsS1NrZ2UxeHVJQ0FnSUNBZ2RtRnlJR2tzSUd4bGJpQTlJR1JoZEdGVWVYQmxMbXhsYm1kMGFEdGNiaUFnSUNBZ0lHWnZjaUFvYVQwd095QnBQR3hsYmpzZ2FTc3JLU0JqYUdWamEwUmhkR0ZVZVhCbEtHUmhkR0ZVZVhCbFcybGRLVHRjYmlBZ0lDQWdJR1p2Y2lBb2FUMHdPeUJwUEd4bGJqc2dhU3NyS1NCZllXUmtVblZzWlNoclpYbDNiM0prTENCa1lYUmhWSGx3WlZ0cFhTd2daR1ZtYVc1cGRHbHZiaWs3WEc0Z0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lHbG1JQ2hrWVhSaFZIbHdaU2tnWTJobFkydEVZWFJoVkhsd1pTaGtZWFJoVkhsd1pTazdYRzRnSUNBZ0lDQmZZV1JrVW5Wc1pTaHJaWGwzYjNKa0xDQmtZWFJoVkhsd1pTd2daR1ZtYVc1cGRHbHZiaWs3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkbUZ5SUNSa1lYUmhJRDBnWkdWbWFXNXBkR2x2Ymk0a1pHRjBZU0E5UFQwZ2RISjFaU0FtSmlCMGFHbHpMbDl2Y0hSekxpUmtZWFJoTzF4dUlDQWdJR2xtSUNna1pHRjBZU0FtSmlBaFpHVm1hVzVwZEdsdmJpNTJZV3hwWkdGMFpTbGNiaUFnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnbkpHUmhkR0VnYzNWd2NHOXlkRG9nWENKMllXeHBaR0YwWlZ3aUlHWjFibU4wYVc5dUlHbHpJRzV2ZENCa1pXWnBibVZrSnlrN1hHNWNiaUFnSUNCMllYSWdiV1YwWVZOamFHVnRZU0E5SUdSbFptbHVhWFJwYjI0dWJXVjBZVk5qYUdWdFlUdGNiaUFnSUNCcFppQW9iV1YwWVZOamFHVnRZU2tnZTF4dUlDQWdJQ0FnYVdZZ0tDUmtZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lHMWxkR0ZUWTJobGJXRWdQU0I3WEc0Z0lDQWdJQ0FnSUNBZ1lXNTVUMlk2SUZ0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdGVFkyaGxiV0VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjdJQ2NrY21WbUp6b2dKMmgwZEhCek9pOHZjbUYzTG1kcGRHaDFZblZ6WlhKamIyNTBaVzUwTG1OdmJTOWxjRzlpWlhKbGVtdHBiaTloYW5ZdmJXRnpkR1Z5TDJ4cFlpOXlaV1p6THlSa1lYUmhMbXB6YjI0akp5QjlYRzRnSUNBZ0lDQWdJQ0FnWFZ4dUlDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ1pHVm1hVzVwZEdsdmJpNTJZV3hwWkdGMFpWTmphR1Z0WVNBOUlIUm9hWE11WTI5dGNHbHNaU2h0WlhSaFUyTm9aVzFoTENCMGNuVmxLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JTVlV4RlV5NXJaWGwzYjNKa2MxdHJaWGwzYjNKa1hTQTlJRkpWVEVWVExtRnNiRnRyWlhsM2IzSmtYU0E5SUhSeWRXVTdYRzVjYmx4dUlDQm1kVzVqZEdsdmJpQmZZV1JrVW5Wc1pTaHJaWGwzYjNKa0xDQmtZWFJoVkhsd1pTd2daR1ZtYVc1cGRHbHZiaWtnZTF4dUlDQWdJSFpoY2lCeWRXeGxSM0p2ZFhBN1hHNGdJQ0FnWm05eUlDaDJZWElnYVQwd095QnBQRkpWVEVWVExteGxibWQwYURzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0IyWVhJZ2NtY2dQU0JTVlV4RlUxdHBYVHRjYmlBZ0lDQWdJR2xtSUNoeVp5NTBlWEJsSUQwOUlHUmhkR0ZVZVhCbEtTQjdYRzRnSUNBZ0lDQWdJSEoxYkdWSGNtOTFjQ0E5SUhKbk8xeHVJQ0FnSUNBZ0lDQmljbVZoYXp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0I5WEc1Y2JpQWdJQ0JwWmlBb0lYSjFiR1ZIY205MWNDa2dlMXh1SUNBZ0lDQWdjblZzWlVkeWIzVndJRDBnZXlCMGVYQmxPaUJrWVhSaFZIbHdaU3dnY25Wc1pYTTZJRnRkSUgwN1hHNGdJQ0FnSUNCU1ZVeEZVeTV3ZFhOb0tISjFiR1ZIY205MWNDazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ2RtRnlJSEoxYkdVZ1BTQjdYRzRnSUNBZ0lDQnJaWGwzYjNKa09pQnJaWGwzYjNKa0xGeHVJQ0FnSUNBZ1pHVm1hVzVwZEdsdmJqb2daR1ZtYVc1cGRHbHZiaXhjYmlBZ0lDQWdJR04xYzNSdmJUb2dkSEoxWlN4Y2JpQWdJQ0FnSUdOdlpHVTZJR04xYzNSdmJWSjFiR1ZEYjJSbExGeHVJQ0FnSUNBZ2FXMXdiR1Z0Wlc1MGN6b2daR1ZtYVc1cGRHbHZiaTVwYlhCc1pXMWxiblJ6WEc0Z0lDQWdmVHRjYmlBZ0lDQnlkV3hsUjNKdmRYQXVjblZzWlhNdWNIVnphQ2h5ZFd4bEtUdGNiaUFnSUNCU1ZVeEZVeTVqZFhOMGIyMWJhMlY1ZDI5eVpGMGdQU0J5ZFd4bE8xeHVJQ0I5WEc1Y2JseHVJQ0JtZFc1amRHbHZiaUJqYUdWamEwUmhkR0ZVZVhCbEtHUmhkR0ZVZVhCbEtTQjdYRzRnSUNBZ2FXWWdLQ0ZTVlV4RlV5NTBlWEJsYzF0a1lYUmhWSGx3WlYwcElIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnblZXNXJibTkzYmlCMGVYQmxJQ2NnS3lCa1lYUmhWSGx3WlNrN1hHNGdJSDFjYm4xY2JseHVYRzR2S2lwY2JpQXFJRWRsZENCclpYbDNiM0prWEc0Z0tpQkFkR2hwY3lBZ1FXcDJYRzRnS2lCQWNHRnlZVzBnZTFOMGNtbHVaMzBnYTJWNWQyOXlaQ0J3Y21VdFpHVm1hVzVsWkNCdmNpQmpkWE4wYjIwZ2EyVjVkMjl5WkM1Y2JpQXFJRUJ5WlhSMWNtNGdlMDlpYW1WamRIeENiMjlzWldGdWZTQmpkWE4wYjIwZ2EyVjVkMjl5WkNCa1pXWnBibWwwYVc5dUxDQmdkSEoxWldBZ2FXWWdhWFFnYVhNZ1lTQndjbVZrWldacGJtVmtJR3RsZVhkdmNtUXNJR0JtWVd4elpXQWdiM1JvWlhKM2FYTmxMbHh1SUNvdlhHNW1kVzVqZEdsdmJpQm5aWFJMWlhsM2IzSmtLR3RsZVhkdmNtUXBJSHRjYmlBZ0x5b2dhbk5vYVc1MElIWmhiR2xrZEdocGN6b2dkSEoxWlNBcUwxeHVJQ0IyWVhJZ2NuVnNaU0E5SUhSb2FYTXVVbFZNUlZNdVkzVnpkRzl0VzJ0bGVYZHZjbVJkTzF4dUlDQnlaWFIxY200Z2NuVnNaU0EvSUhKMWJHVXVaR1ZtYVc1cGRHbHZiaUE2SUhSb2FYTXVVbFZNUlZNdWEyVjVkMjl5WkhOYmEyVjVkMjl5WkYwZ2ZId2dabUZzYzJVN1hHNTlYRzVjYmx4dUx5b3FYRzRnS2lCU1pXMXZkbVVnYTJWNWQyOXlaRnh1SUNvZ1FIUm9hWE1nSUVGcWRseHVJQ29nUUhCaGNtRnRJSHRUZEhKcGJtZDlJR3RsZVhkdmNtUWdjSEpsTFdSbFptbHVaV1FnYjNJZ1kzVnpkRzl0SUd0bGVYZHZjbVF1WEc0Z0tpOWNibVoxYm1OMGFXOXVJSEpsYlc5MlpVdGxlWGR2Y21Rb2EyVjVkMjl5WkNrZ2UxeHVJQ0F2S2lCcWMyaHBiblFnZG1Gc2FXUjBhR2x6T2lCMGNuVmxJQ292WEc0Z0lIWmhjaUJTVlV4RlV5QTlJSFJvYVhNdVVsVk1SVk03WEc0Z0lHUmxiR1YwWlNCU1ZVeEZVeTVyWlhsM2IzSmtjMXRyWlhsM2IzSmtYVHRjYmlBZ1pHVnNaWFJsSUZKVlRFVlRMbUZzYkZ0clpYbDNiM0prWFR0Y2JpQWdaR1ZzWlhSbElGSlZURVZUTG1OMWMzUnZiVnRyWlhsM2IzSmtYVHRjYmlBZ1ptOXlJQ2gyWVhJZ2FUMHdPeUJwUEZKVlRFVlRMbXhsYm1kMGFEc2dhU3NyS1NCN1hHNGdJQ0FnZG1GeUlISjFiR1Z6SUQwZ1VsVk1SVk5iYVYwdWNuVnNaWE03WEc0Z0lDQWdabTl5SUNoMllYSWdhajB3T3lCcVBISjFiR1Z6TG14bGJtZDBhRHNnYWlzcktTQjdYRzRnSUNBZ0lDQnBaaUFvY25Wc1pYTmJhbDB1YTJWNWQyOXlaQ0E5UFNCclpYbDNiM0prS1NCN1hHNGdJQ0FnSUNBZ0lISjFiR1Z6TG5Od2JHbGpaU2hxTENBeEtUdGNiaUFnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzU5WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIva2V5d29yZC5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvcGF0dGVybkdyb3Vwcy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9wYXR0ZXJuR3JvdXBzLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XFxuXFxuXFxcInVzZSBzdHJpY3RcXFwiO1xcbmV2YWwoXFxcIlxcXFxuXFxcXG52YXIgTUVUQV9TQ0hFTUFfSUQgPSAnaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNi9zY2hlbWEnO1xcXFxuXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhanYpIHtcXFxcbiAgdmFyIGRlZmF1bHRNZXRhID0gYWp2Ll9vcHRzLmRlZmF1bHRNZXRhO1xcXFxuICB2YXIgbWV0YVNjaGVtYVJlZiA9IHR5cGVvZiBkZWZhdWx0TWV0YSA9PSAnc3RyaW5nJ1xcXFxuICAgICAgICAgICAgICAgICAgICAgID8geyAkcmVmOiBkZWZhdWx0TWV0YSB9XFxcXG4gICAgICAgICAgICAgICAgICAgICAgOiBhanYuZ2V0U2NoZW1hKE1FVEFfU0NIRU1BX0lEKVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgPyB7ICRyZWY6IE1FVEFfU0NIRU1BX0lEIH1cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIDoge307XFxcXG5cXFxcbiAgYWp2LmFkZEtleXdvcmQoJ3BhdHRlcm5Hcm91cHMnLCB7XFxcXG4gICAgLy8gaW1wbGVtZW50ZWQgaW4gcHJvcGVydGllcy5qc3RcXFxcbiAgICBtZXRhU2NoZW1hOiB7XFxcXG4gICAgICB0eXBlOiAnb2JqZWN0JyxcXFxcbiAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiB7XFxcXG4gICAgICAgIHR5cGU6ICdvYmplY3QnLFxcXFxuICAgICAgICByZXF1aXJlZDogWyAnc2NoZW1hJyBdLFxcXFxuICAgICAgICBwcm9wZXJ0aWVzOiB7XFxcXG4gICAgICAgICAgbWF4aW11bToge1xcXFxuICAgICAgICAgICAgdHlwZTogJ2ludGVnZXInLFxcXFxuICAgICAgICAgICAgbWluaW11bTogMFxcXFxuICAgICAgICAgIH0sXFxcXG4gICAgICAgICAgbWluaW11bToge1xcXFxuICAgICAgICAgICAgdHlwZTogJ2ludGVnZXInLFxcXFxuICAgICAgICAgICAgbWluaW11bTogMFxcXFxuICAgICAgICAgIH0sXFxcXG4gICAgICAgICAgc2NoZW1hOiBtZXRhU2NoZW1hUmVmXFxcXG4gICAgICAgIH0sXFxcXG4gICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiBmYWxzZVxcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgfSk7XFxcXG4gIGFqdi5SVUxFUy5hbGwucHJvcGVydGllcy5pbXBsZW1lbnRzLnB1c2goJ3BhdHRlcm5Hcm91cHMnKTtcXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTl3WVhSMFpYSnVSM0p2ZFhCekxtcHpMbXB6SWl3aWMyOTFjbU5sY3lJNld5SjNaV0p3WVdOck9pOHZhVzFxYjNsU1VFTXZMaTl1YjJSbFgyMXZaSFZzWlhNdllXcDJMMnhwWWk5d1lYUjBaWEp1UjNKdmRYQnpMbXB6UDJSaFpUTWlYU3dpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpSjNWelpTQnpkSEpwWTNRbk8xeHVYRzUyWVhJZ1RVVlVRVjlUUTBoRlRVRmZTVVFnUFNBbmFIUjBjRG92TDJwemIyNHRjMk5vWlcxaExtOXlaeTlrY21GbWRDMHdOaTl6WTJobGJXRW5PMXh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUNoaGFuWXBJSHRjYmlBZ2RtRnlJR1JsWm1GMWJIUk5aWFJoSUQwZ1lXcDJMbDl2Y0hSekxtUmxabUYxYkhSTlpYUmhPMXh1SUNCMllYSWdiV1YwWVZOamFHVnRZVkpsWmlBOUlIUjVjR1Z2WmlCa1pXWmhkV3gwVFdWMFlTQTlQU0FuYzNSeWFXNW5KMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEOGdleUFrY21WbU9pQmtaV1poZFd4MFRXVjBZU0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdPaUJoYW5ZdVoyVjBVMk5vWlcxaEtFMUZWRUZmVTBOSVJVMUJYMGxFS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUHlCN0lDUnlaV1k2SUUxRlZFRmZVME5JUlUxQlgwbEVJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRG9nZTMwN1hHNWNiaUFnWVdwMkxtRmtaRXRsZVhkdmNtUW9KM0JoZEhSbGNtNUhjbTkxY0hNbkxDQjdYRzRnSUNBZ0x5OGdhVzF3YkdWdFpXNTBaV1FnYVc0Z2NISnZjR1Z5ZEdsbGN5NXFjM1JjYmlBZ0lDQnRaWFJoVTJOb1pXMWhPaUI3WEc0Z0lDQWdJQ0IwZVhCbE9pQW5iMkpxWldOMEp5eGNiaUFnSUNBZ0lHRmtaR2wwYVc5dVlXeFFjbTl3WlhKMGFXVnpPaUI3WEc0Z0lDQWdJQ0FnSUhSNWNHVTZJQ2R2WW1wbFkzUW5MRnh1SUNBZ0lDQWdJQ0J5WlhGMWFYSmxaRG9nV3lBbmMyTm9aVzFoSnlCZExGeHVJQ0FnSUNBZ0lDQndjbTl3WlhKMGFXVnpPaUI3WEc0Z0lDQWdJQ0FnSUNBZ2JXRjRhVzExYlRvZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZEdWblpYSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JXbHVhVzExYlRvZ01GeHVJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ2JXbHVhVzExYlRvZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmx1ZEdWblpYSW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JXbHVhVzExYlRvZ01GeHVJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ2MyTm9aVzFoT2lCdFpYUmhVMk5vWlcxaFVtVm1YRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUdGa1pHbDBhVzl1WVd4UWNtOXdaWEowYVdWek9pQm1ZV3h6WlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZTazdYRzRnSUdGcWRpNVNWVXhGVXk1aGJHd3VjSEp2Y0dWeWRHbGxjeTVwYlhCc1pXMWxiblJ6TG5CMWMyZ29KM0JoZEhSbGNtNUhjbTkxY0hNbktUdGNibjA3WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHNpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9wYXR0ZXJuR3JvdXBzLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9yZWZzLyRkYXRhLmpzb25cXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9yZWZzLyRkYXRhLmpzb24gKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIGV4cG9ydHMgcHJvdmlkZWQ6ICRzY2hlbWEsICRpZCwgZGVzY3JpcHRpb24sIHR5cGUsIHJlcXVpcmVkLCBwcm9wZXJ0aWVzLCBhZGRpdGlvbmFsUHJvcGVydGllcywgZGVmYXVsdCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUpIHtcXG5cXG5ldmFsKFxcXCJtb2R1bGUuZXhwb3J0cyA9IEpTT04ucGFyc2UoXFxcXFxcXCJ7XFxcXFxcXFxcXFxcXFxcIiRzY2hlbWFcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJodHRwOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LTA2L3NjaGVtYSNcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCIkaWRcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vZXBvYmVyZXpraW4vYWp2L21hc3Rlci9saWIvcmVmcy8kZGF0YS5qc29uI1xcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcImRlc2NyaXB0aW9uXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiTWV0YS1zY2hlbWEgZm9yICRkYXRhIHJlZmVyZW5jZSAoSlNPTi1zY2hlbWEgZXh0ZW5zaW9uIHByb3Bvc2FsKVxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJvYmplY3RcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJyZXF1aXJlZFxcXFxcXFxcXFxcXFxcXCI6W1xcXFxcXFxcXFxcXFxcXCIkZGF0YVxcXFxcXFxcXFxcXFxcXCJdLFxcXFxcXFxcXFxcXFxcXCJwcm9wZXJ0aWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRkYXRhXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJzdHJpbmdcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJhbnlPZlxcXFxcXFxcXFxcXFxcXCI6W3tcXFxcXFxcXFxcXFxcXFwiZm9ybWF0XFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwicmVsYXRpdmUtanNvbi1wb2ludGVyXFxcXFxcXFxcXFxcXFxcIn0se1xcXFxcXFxcXFxcXFxcXCJmb3JtYXRcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJqc29uLXBvaW50ZXJcXFxcXFxcXFxcXFxcXFwifV19fSxcXFxcXFxcXFxcXFxcXFwiYWRkaXRpb25hbFByb3BlcnRpZXNcXFxcXFxcXFxcXFxcXFwiOmZhbHNlfVxcXFxcXFwiKTsvLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12WVdwMkwyeHBZaTl5Wldaekx5UmtZWFJoTG1wemIyNHVhbk1pTENKemIzVnlZMlZ6SWpwYlhTd2liV0Z3Y0dsdVozTWlPaUlpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvYWp2L2xpYi9yZWZzLyRkYXRhLmpzb25cXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9hanYvbGliL3JlZnMvanNvbi1zY2hlbWEtZHJhZnQtMDYuanNvblxcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9hanYvbGliL3JlZnMvanNvbi1zY2hlbWEtZHJhZnQtMDYuanNvbiAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogJHNjaGVtYSwgJGlkLCB0aXRsZSwgZGVmaW5pdGlvbnMsIHR5cGUsIHByb3BlcnRpZXMsIGRlZmF1bHQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlKSB7XFxuXFxuZXZhbChcXFwibW9kdWxlLmV4cG9ydHMgPSBKU09OLnBhcnNlKFxcXFxcXFwie1xcXFxcXFxcXFxcXFxcXCIkc2NoZW1hXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNi9zY2hlbWEjXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwiJGlkXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiaHR0cDovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC0wNi9zY2hlbWEjXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwidGl0bGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJDb3JlIHNjaGVtYSBtZXRhLXNjaGVtYVxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcImRlZmluaXRpb25zXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInNjaGVtYUFycmF5XFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJhcnJheVxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcIm1pbkl0ZW1zXFxcXFxcXFxcXFxcXFxcIjoxLFxcXFxcXFxcXFxcXFxcXCJpdGVtc1xcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCIkcmVmXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiI1xcXFxcXFxcXFxcXFxcXCJ9fSxcXFxcXFxcXFxcXFxcXFwibm9uTmVnYXRpdmVJbnRlZ2VyXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJpbnRlZ2VyXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwibWluaW11bVxcXFxcXFxcXFxcXFxcXCI6MH0sXFxcXFxcXFxcXFxcXFxcIm5vbk5lZ2F0aXZlSW50ZWdlckRlZmF1bHQwXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcImFsbE9mXFxcXFxcXFxcXFxcXFxcIjpbe1xcXFxcXFxcXFxcXFxcXCIkcmVmXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiIy9kZWZpbml0aW9ucy9ub25OZWdhdGl2ZUludGVnZXJcXFxcXFxcXFxcXFxcXFwifSx7XFxcXFxcXFxcXFxcXFxcImRlZmF1bHRcXFxcXFxcXFxcXFxcXFwiOjB9XX0sXFxcXFxcXFxcXFxcXFxcInNpbXBsZVR5cGVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcImVudW1cXFxcXFxcXFxcXFxcXFwiOltcXFxcXFxcXFxcXFxcXFwiYXJyYXlcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJib29sZWFuXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwiaW50ZWdlclxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcIm51bGxcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJudW1iZXJcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJvYmplY3RcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJzdHJpbmdcXFxcXFxcXFxcXFxcXFwiXX0sXFxcXFxcXFxcXFxcXFxcInN0cmluZ0FycmF5XFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJhcnJheVxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcIml0ZW1zXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJzdHJpbmdcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwidW5pcXVlSXRlbXNcXFxcXFxcXFxcXFxcXFwiOnRydWUsXFxcXFxcXFxcXFxcXFxcImRlZmF1bHRcXFxcXFxcXFxcXFxcXFwiOltdfX0sXFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOltcXFxcXFxcXFxcXFxcXFwib2JqZWN0XFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwiYm9vbGVhblxcXFxcXFxcXFxcXFxcXCJdLFxcXFxcXFxcXFxcXFxcXCJwcm9wZXJ0aWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRpZFxcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCJ0eXBlXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwic3RyaW5nXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwiZm9ybWF0XFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwidXJpLXJlZmVyZW5jZVxcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCIkc2NoZW1hXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJzdHJpbmdcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJmb3JtYXRcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJ1cmlcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwiJHJlZlxcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCJ0eXBlXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwic3RyaW5nXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwiZm9ybWF0XFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwidXJpLXJlZmVyZW5jZVxcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCJ0aXRsZVxcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCJ0eXBlXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwic3RyaW5nXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcImRlc2NyaXB0aW9uXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJzdHJpbmdcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwiZGVmYXVsdFxcXFxcXFxcXFxcXFxcXCI6e30sXFxcXFxcXFxcXFxcXFxcIm11bHRpcGxlT2ZcXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwidHlwZVxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIm51bWJlclxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcImV4Y2x1c2l2ZU1pbmltdW1cXFxcXFxcXFxcXFxcXFwiOjB9LFxcXFxcXFxcXFxcXFxcXCJtYXhpbXVtXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJudW1iZXJcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwiZXhjbHVzaXZlTWF4aW11bVxcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCJ0eXBlXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwibnVtYmVyXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcIm1pbmltdW1cXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwidHlwZVxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIm51bWJlclxcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCJleGNsdXNpdmVNaW5pbXVtXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJudW1iZXJcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwibWF4TGVuZ3RoXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL25vbk5lZ2F0aXZlSW50ZWdlclxcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCJtaW5MZW5ndGhcXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwiJHJlZlxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIiMvZGVmaW5pdGlvbnMvbm9uTmVnYXRpdmVJbnRlZ2VyRGVmYXVsdDBcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwicGF0dGVyblxcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCJ0eXBlXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwic3RyaW5nXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwiZm9ybWF0XFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwicmVnZXhcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwiYWRkaXRpb25hbEl0ZW1zXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcIml0ZW1zXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcImFueU9mXFxcXFxcXFxcXFxcXFxcIjpbe1xcXFxcXFxcXFxcXFxcXCIkcmVmXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiI1xcXFxcXFxcXFxcXFxcXCJ9LHtcXFxcXFxcXFxcXFxcXFwiJHJlZlxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIiMvZGVmaW5pdGlvbnMvc2NoZW1hQXJyYXlcXFxcXFxcXFxcXFxcXFwifV0sXFxcXFxcXFxcXFxcXFxcImRlZmF1bHRcXFxcXFxcXFxcXFxcXFwiOnt9fSxcXFxcXFxcXFxcXFxcXFwibWF4SXRlbXNcXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwiJHJlZlxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIiMvZGVmaW5pdGlvbnMvbm9uTmVnYXRpdmVJbnRlZ2VyXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcIm1pbkl0ZW1zXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL25vbk5lZ2F0aXZlSW50ZWdlckRlZmF1bHQwXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcInVuaXF1ZUl0ZW1zXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJib29sZWFuXFxcXFxcXFxcXFxcXFxcIixcXFxcXFxcXFxcXFxcXFwiZGVmYXVsdFxcXFxcXFxcXFxcXFxcXCI6ZmFsc2V9LFxcXFxcXFxcXFxcXFxcXCJjb250YWluc1xcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCIkcmVmXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiI1xcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCJtYXhQcm9wZXJ0aWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL25vbk5lZ2F0aXZlSW50ZWdlclxcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCJtaW5Qcm9wZXJ0aWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL25vbk5lZ2F0aXZlSW50ZWdlckRlZmF1bHQwXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcInJlcXVpcmVkXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL3N0cmluZ0FycmF5XFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcImRlZmluaXRpb25zXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJvYmplY3RcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJhZGRpdGlvbmFsUHJvcGVydGllc1xcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCIkcmVmXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiI1xcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCJkZWZhdWx0XFxcXFxcXFxcXFxcXFxcIjp7fX0sXFxcXFxcXFxcXFxcXFxcInByb3BlcnRpZXNcXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwidHlwZVxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIm9iamVjdFxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcImRlZmF1bHRcXFxcXFxcXFxcXFxcXFwiOnt9fSxcXFxcXFxcXFxcXFxcXFwicGF0dGVyblByb3BlcnRpZXNcXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwidHlwZVxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIm9iamVjdFxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcImFkZGl0aW9uYWxQcm9wZXJ0aWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcImRlZmF1bHRcXFxcXFxcXFxcXFxcXFwiOnt9fSxcXFxcXFxcXFxcXFxcXFwiZGVwZW5kZW5jaWVzXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJvYmplY3RcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJhZGRpdGlvbmFsUHJvcGVydGllc1xcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCJhbnlPZlxcXFxcXFxcXFxcXFxcXCI6W3tcXFxcXFxcXFxcXFxcXFwiJHJlZlxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIiNcXFxcXFxcXFxcXFxcXFwifSx7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL3N0cmluZ0FycmF5XFxcXFxcXFxcXFxcXFxcIn1dfX0sXFxcXFxcXFxcXFxcXFxcInByb3BlcnR5TmFtZXNcXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwiJHJlZlxcXFxcXFxcXFxcXFxcXCI6XFxcXFxcXFxcXFxcXFxcIiNcXFxcXFxcXFxcXFxcXFwifSxcXFxcXFxcXFxcXFxcXFwiY29uc3RcXFxcXFxcXFxcXFxcXFwiOnt9LFxcXFxcXFxcXFxcXFxcXCJlbnVtXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCJhcnJheVxcXFxcXFxcXFxcXFxcXCIsXFxcXFxcXFxcXFxcXFxcIm1pbkl0ZW1zXFxcXFxcXFxcXFxcXFxcIjoxLFxcXFxcXFxcXFxcXFxcXCJ1bmlxdWVJdGVtc1xcXFxcXFxcXFxcXFxcXCI6dHJ1ZX0sXFxcXFxcXFxcXFxcXFxcInR5cGVcXFxcXFxcXFxcXFxcXFwiOntcXFxcXFxcXFxcXFxcXFwiYW55T2ZcXFxcXFxcXFxcXFxcXFwiOlt7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL3NpbXBsZVR5cGVzXFxcXFxcXFxcXFxcXFxcIn0se1xcXFxcXFxcXFxcXFxcXCJ0eXBlXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiYXJyYXlcXFxcXFxcXFxcXFxcXFwiLFxcXFxcXFxcXFxcXFxcXCJpdGVtc1xcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCIkcmVmXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiIy9kZWZpbml0aW9ucy9zaW1wbGVUeXBlc1xcXFxcXFxcXFxcXFxcXCJ9LFxcXFxcXFxcXFxcXFxcXCJtaW5JdGVtc1xcXFxcXFxcXFxcXFxcXCI6MSxcXFxcXFxcXFxcXFxcXFwidW5pcXVlSXRlbXNcXFxcXFxcXFxcXFxcXFwiOnRydWV9XX0sXFxcXFxcXFxcXFxcXFxcImZvcm1hdFxcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCJ0eXBlXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwic3RyaW5nXFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcImFsbE9mXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL3NjaGVtYUFycmF5XFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcImFueU9mXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL3NjaGVtYUFycmF5XFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcIm9uZU9mXFxcXFxcXFxcXFxcXFxcIjp7XFxcXFxcXFxcXFxcXFxcIiRyZWZcXFxcXFxcXFxcXFxcXFwiOlxcXFxcXFxcXFxcXFxcXCIjL2RlZmluaXRpb25zL3NjaGVtYUFycmF5XFxcXFxcXFxcXFxcXFxcIn0sXFxcXFxcXFxcXFxcXFxcIm5vdFxcXFxcXFxcXFxcXFxcXCI6e1xcXFxcXFxcXFxcXFxcXCIkcmVmXFxcXFxcXFxcXFxcXFxcIjpcXFxcXFxcXFxcXFxcXFwiI1xcXFxcXFxcXFxcXFxcXCJ9fSxcXFxcXFxcXFxcXFxcXFwiZGVmYXVsdFxcXFxcXFxcXFxcXFxcXCI6e319XFxcXFxcXCIpOy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZZV3AyTDJ4cFlpOXlaV1p6TDJwemIyNHRjMk5vWlcxaExXUnlZV1owTFRBMkxtcHpiMjR1YW5NaUxDSnpiM1Z5WTJWeklqcGJYU3dpYldGd2NHbHVaM01pT2lJaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvcmVmcy9qc29uLXNjaGVtYS1kcmFmdC0wNi5qc29uXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvY28vaW5kZXguanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvY28vaW5kZXguanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xcblxcbmV2YWwoXFxcIlxcXFxuLyoqXFxcXG4gKiBzbGljZSgpIHJlZmVyZW5jZS5cXFxcbiAqL1xcXFxuXFxcXG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XFxcXG5cXFxcbi8qKlxcXFxuICogRXhwb3NlIGBjb2AuXFxcXG4gKi9cXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSBjb1snZGVmYXVsdCddID0gY28uY28gPSBjbztcXFxcblxcXFxuLyoqXFxcXG4gKiBXcmFwIHRoZSBnaXZlbiBnZW5lcmF0b3IgYGZuYCBpbnRvIGFcXFxcbiAqIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIHByb21pc2UuXFxcXG4gKiBUaGlzIGlzIGEgc2VwYXJhdGUgZnVuY3Rpb24gc28gdGhhdFxcXFxuICogZXZlcnkgYGNvKClgIGNhbGwgZG9lc24ndCBjcmVhdGUgYSBuZXcsXFxcXG4gKiB1bm5lY2Vzc2FyeSBjbG9zdXJlLlxcXFxuICpcXFxcbiAqIEBwYXJhbSB7R2VuZXJhdG9yRnVuY3Rpb259IGZuXFxcXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cXFxcbiAqIEBhcGkgcHVibGljXFxcXG4gKi9cXFxcblxcXFxuY28ud3JhcCA9IGZ1bmN0aW9uIChmbikge1xcXFxuICBjcmVhdGVQcm9taXNlLl9fZ2VuZXJhdG9yRnVuY3Rpb25fXyA9IGZuO1xcXFxuICByZXR1cm4gY3JlYXRlUHJvbWlzZTtcXFxcbiAgZnVuY3Rpb24gY3JlYXRlUHJvbWlzZSgpIHtcXFxcbiAgICByZXR1cm4gY28uY2FsbCh0aGlzLCBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcXFxcbiAgfVxcXFxufTtcXFxcblxcXFxuLyoqXFxcXG4gKiBFeGVjdXRlIHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24gb3IgYSBnZW5lcmF0b3JcXFxcbiAqIGFuZCByZXR1cm4gYSBwcm9taXNlLlxcXFxuICpcXFxcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXFxcXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxcXFxuICogQGFwaSBwdWJsaWNcXFxcbiAqL1xcXFxuXFxcXG5mdW5jdGlvbiBjbyhnZW4pIHtcXFxcbiAgdmFyIGN0eCA9IHRoaXM7XFxcXG4gIHZhciBhcmdzID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpXFxcXG5cXFxcbiAgLy8gd2Ugd3JhcCBldmVyeXRoaW5nIGluIGEgcHJvbWlzZSB0byBhdm9pZCBwcm9taXNlIGNoYWluaW5nLFxcXFxuICAvLyB3aGljaCBsZWFkcyB0byBtZW1vcnkgbGVhayBlcnJvcnMuXFxcXG4gIC8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vdGovY28vaXNzdWVzLzE4MFxcXFxuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XFxcXG4gICAgaWYgKHR5cGVvZiBnZW4gPT09ICdmdW5jdGlvbicpIGdlbiA9IGdlbi5hcHBseShjdHgsIGFyZ3MpO1xcXFxuICAgIGlmICghZ2VuIHx8IHR5cGVvZiBnZW4ubmV4dCAhPT0gJ2Z1bmN0aW9uJykgcmV0dXJuIHJlc29sdmUoZ2VuKTtcXFxcblxcXFxuICAgIG9uRnVsZmlsbGVkKCk7XFxcXG5cXFxcbiAgICAvKipcXFxcbiAgICAgKiBAcGFyYW0ge01peGVkfSByZXNcXFxcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxcXFxuICAgICAqIEBhcGkgcHJpdmF0ZVxcXFxuICAgICAqL1xcXFxuXFxcXG4gICAgZnVuY3Rpb24gb25GdWxmaWxsZWQocmVzKSB7XFxcXG4gICAgICB2YXIgcmV0O1xcXFxuICAgICAgdHJ5IHtcXFxcbiAgICAgICAgcmV0ID0gZ2VuLm5leHQocmVzKTtcXFxcbiAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgcmV0dXJuIHJlamVjdChlKTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIG5leHQocmV0KTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICAvKipcXFxcbiAgICAgKiBAcGFyYW0ge0Vycm9yfSBlcnJcXFxcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfVxcXFxuICAgICAqIEBhcGkgcHJpdmF0ZVxcXFxuICAgICAqL1xcXFxuXFxcXG4gICAgZnVuY3Rpb24gb25SZWplY3RlZChlcnIpIHtcXFxcbiAgICAgIHZhciByZXQ7XFxcXG4gICAgICB0cnkge1xcXFxuICAgICAgICByZXQgPSBnZW4udGhyb3coZXJyKTtcXFxcbiAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgcmV0dXJuIHJlamVjdChlKTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIG5leHQocmV0KTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICAvKipcXFxcbiAgICAgKiBHZXQgdGhlIG5leHQgdmFsdWUgaW4gdGhlIGdlbmVyYXRvcixcXFxcbiAgICAgKiByZXR1cm4gYSBwcm9taXNlLlxcXFxuICAgICAqXFxcXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHJldFxcXFxuICAgICAqIEByZXR1cm4ge1Byb21pc2V9XFxcXG4gICAgICogQGFwaSBwcml2YXRlXFxcXG4gICAgICovXFxcXG5cXFxcbiAgICBmdW5jdGlvbiBuZXh0KHJldCkge1xcXFxuICAgICAgaWYgKHJldC5kb25lKSByZXR1cm4gcmVzb2x2ZShyZXQudmFsdWUpO1xcXFxuICAgICAgdmFyIHZhbHVlID0gdG9Qcm9taXNlLmNhbGwoY3R4LCByZXQudmFsdWUpO1xcXFxuICAgICAgaWYgKHZhbHVlICYmIGlzUHJvbWlzZSh2YWx1ZSkpIHJldHVybiB2YWx1ZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKTtcXFxcbiAgICAgIHJldHVybiBvblJlamVjdGVkKG5ldyBUeXBlRXJyb3IoJ1lvdSBtYXkgb25seSB5aWVsZCBhIGZ1bmN0aW9uLCBwcm9taXNlLCBnZW5lcmF0b3IsIGFycmF5LCBvciBvYmplY3QsICdcXFxcbiAgICAgICAgKyAnYnV0IHRoZSBmb2xsb3dpbmcgb2JqZWN0IHdhcyBwYXNzZWQ6IFxcXFxcXFwiJyArIFN0cmluZyhyZXQudmFsdWUpICsgJ1xcXFxcXFwiJykpO1xcXFxuICAgIH1cXFxcbiAgfSk7XFxcXG59XFxcXG5cXFxcbi8qKlxcXFxuICogQ29udmVydCBhIGB5aWVsZGBlZCB2YWx1ZSBpbnRvIGEgcHJvbWlzZS5cXFxcbiAqXFxcXG4gKiBAcGFyYW0ge01peGVkfSBvYmpcXFxcbiAqIEByZXR1cm4ge1Byb21pc2V9XFxcXG4gKiBAYXBpIHByaXZhdGVcXFxcbiAqL1xcXFxuXFxcXG5mdW5jdGlvbiB0b1Byb21pc2Uob2JqKSB7XFxcXG4gIGlmICghb2JqKSByZXR1cm4gb2JqO1xcXFxuICBpZiAoaXNQcm9taXNlKG9iaikpIHJldHVybiBvYmo7XFxcXG4gIGlmIChpc0dlbmVyYXRvckZ1bmN0aW9uKG9iaikgfHwgaXNHZW5lcmF0b3Iob2JqKSkgcmV0dXJuIGNvLmNhbGwodGhpcywgb2JqKTtcXFxcbiAgaWYgKCdmdW5jdGlvbicgPT0gdHlwZW9mIG9iaikgcmV0dXJuIHRodW5rVG9Qcm9taXNlLmNhbGwodGhpcywgb2JqKTtcXFxcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkgcmV0dXJuIGFycmF5VG9Qcm9taXNlLmNhbGwodGhpcywgb2JqKTtcXFxcbiAgaWYgKGlzT2JqZWN0KG9iaikpIHJldHVybiBvYmplY3RUb1Byb21pc2UuY2FsbCh0aGlzLCBvYmopO1xcXFxuICByZXR1cm4gb2JqO1xcXFxufVxcXFxuXFxcXG4vKipcXFxcbiAqIENvbnZlcnQgYSB0aHVuayB0byBhIHByb21pc2UuXFxcXG4gKlxcXFxuICogQHBhcmFtIHtGdW5jdGlvbn1cXFxcbiAqIEByZXR1cm4ge1Byb21pc2V9XFxcXG4gKiBAYXBpIHByaXZhdGVcXFxcbiAqL1xcXFxuXFxcXG5mdW5jdGlvbiB0aHVua1RvUHJvbWlzZShmbikge1xcXFxuICB2YXIgY3R4ID0gdGhpcztcXFxcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcXFxcbiAgICBmbi5jYWxsKGN0eCwgZnVuY3Rpb24gKGVyciwgcmVzKSB7XFxcXG4gICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycik7XFxcXG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDIpIHJlcyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcXFxcbiAgICAgIHJlc29sdmUocmVzKTtcXFxcbiAgICB9KTtcXFxcbiAgfSk7XFxcXG59XFxcXG5cXFxcbi8qKlxcXFxuICogQ29udmVydCBhbiBhcnJheSBvZiBcXFxcXFxcInlpZWxkYWJsZXNcXFxcXFxcIiB0byBhIHByb21pc2UuXFxcXG4gKiBVc2VzIGBQcm9taXNlLmFsbCgpYCBpbnRlcm5hbGx5LlxcXFxuICpcXFxcbiAqIEBwYXJhbSB7QXJyYXl9IG9ialxcXFxuICogQHJldHVybiB7UHJvbWlzZX1cXFxcbiAqIEBhcGkgcHJpdmF0ZVxcXFxuICovXFxcXG5cXFxcbmZ1bmN0aW9uIGFycmF5VG9Qcm9taXNlKG9iaikge1xcXFxuICByZXR1cm4gUHJvbWlzZS5hbGwob2JqLm1hcCh0b1Byb21pc2UsIHRoaXMpKTtcXFxcbn1cXFxcblxcXFxuLyoqXFxcXG4gKiBDb252ZXJ0IGFuIG9iamVjdCBvZiBcXFxcXFxcInlpZWxkYWJsZXNcXFxcXFxcIiB0byBhIHByb21pc2UuXFxcXG4gKiBVc2VzIGBQcm9taXNlLmFsbCgpYCBpbnRlcm5hbGx5LlxcXFxuICpcXFxcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmpcXFxcbiAqIEByZXR1cm4ge1Byb21pc2V9XFxcXG4gKiBAYXBpIHByaXZhdGVcXFxcbiAqL1xcXFxuXFxcXG5mdW5jdGlvbiBvYmplY3RUb1Byb21pc2Uob2JqKXtcXFxcbiAgdmFyIHJlc3VsdHMgPSBuZXcgb2JqLmNvbnN0cnVjdG9yKCk7XFxcXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcXFxcbiAgdmFyIHByb21pc2VzID0gW107XFxcXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xcXFxuICAgIHZhciBrZXkgPSBrZXlzW2ldO1xcXFxuICAgIHZhciBwcm9taXNlID0gdG9Qcm9taXNlLmNhbGwodGhpcywgb2JqW2tleV0pO1xcXFxuICAgIGlmIChwcm9taXNlICYmIGlzUHJvbWlzZShwcm9taXNlKSkgZGVmZXIocHJvbWlzZSwga2V5KTtcXFxcbiAgICBlbHNlIHJlc3VsdHNba2V5XSA9IG9ialtrZXldO1xcXFxuICB9XFxcXG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihmdW5jdGlvbiAoKSB7XFxcXG4gICAgcmV0dXJuIHJlc3VsdHM7XFxcXG4gIH0pO1xcXFxuXFxcXG4gIGZ1bmN0aW9uIGRlZmVyKHByb21pc2UsIGtleSkge1xcXFxuICAgIC8vIHByZWRlZmluZSB0aGUga2V5IGluIHRoZSByZXN1bHRcXFxcbiAgICByZXN1bHRzW2tleV0gPSB1bmRlZmluZWQ7XFxcXG4gICAgcHJvbWlzZXMucHVzaChwcm9taXNlLnRoZW4oZnVuY3Rpb24gKHJlcykge1xcXFxuICAgICAgcmVzdWx0c1trZXldID0gcmVzO1xcXFxuICAgIH0pKTtcXFxcbiAgfVxcXFxufVxcXFxuXFxcXG4vKipcXFxcbiAqIENoZWNrIGlmIGBvYmpgIGlzIGEgcHJvbWlzZS5cXFxcbiAqXFxcXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXFxcXG4gKiBAcmV0dXJuIHtCb29sZWFufVxcXFxuICogQGFwaSBwcml2YXRlXFxcXG4gKi9cXFxcblxcXFxuZnVuY3Rpb24gaXNQcm9taXNlKG9iaikge1xcXFxuICByZXR1cm4gJ2Z1bmN0aW9uJyA9PSB0eXBlb2Ygb2JqLnRoZW47XFxcXG59XFxcXG5cXFxcbi8qKlxcXFxuICogQ2hlY2sgaWYgYG9iamAgaXMgYSBnZW5lcmF0b3IuXFxcXG4gKlxcXFxuICogQHBhcmFtIHtNaXhlZH0gb2JqXFxcXG4gKiBAcmV0dXJuIHtCb29sZWFufVxcXFxuICogQGFwaSBwcml2YXRlXFxcXG4gKi9cXFxcblxcXFxuZnVuY3Rpb24gaXNHZW5lcmF0b3Iob2JqKSB7XFxcXG4gIHJldHVybiAnZnVuY3Rpb24nID09IHR5cGVvZiBvYmoubmV4dCAmJiAnZnVuY3Rpb24nID09IHR5cGVvZiBvYmoudGhyb3c7XFxcXG59XFxcXG5cXFxcbi8qKlxcXFxuICogQ2hlY2sgaWYgYG9iamAgaXMgYSBnZW5lcmF0b3IgZnVuY3Rpb24uXFxcXG4gKlxcXFxuICogQHBhcmFtIHtNaXhlZH0gb2JqXFxcXG4gKiBAcmV0dXJuIHtCb29sZWFufVxcXFxuICogQGFwaSBwcml2YXRlXFxcXG4gKi9cXFxcbmZ1bmN0aW9uIGlzR2VuZXJhdG9yRnVuY3Rpb24ob2JqKSB7XFxcXG4gIHZhciBjb25zdHJ1Y3RvciA9IG9iai5jb25zdHJ1Y3RvcjtcXFxcbiAgaWYgKCFjb25zdHJ1Y3RvcikgcmV0dXJuIGZhbHNlO1xcXFxuICBpZiAoJ0dlbmVyYXRvckZ1bmN0aW9uJyA9PT0gY29uc3RydWN0b3IubmFtZSB8fCAnR2VuZXJhdG9yRnVuY3Rpb24nID09PSBjb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZSkgcmV0dXJuIHRydWU7XFxcXG4gIHJldHVybiBpc0dlbmVyYXRvcihjb25zdHJ1Y3Rvci5wcm90b3R5cGUpO1xcXFxufVxcXFxuXFxcXG4vKipcXFxcbiAqIENoZWNrIGZvciBwbGFpbiBvYmplY3QuXFxcXG4gKlxcXFxuICogQHBhcmFtIHtNaXhlZH0gdmFsXFxcXG4gKiBAcmV0dXJuIHtCb29sZWFufVxcXFxuICogQGFwaSBwcml2YXRlXFxcXG4gKi9cXFxcblxcXFxuZnVuY3Rpb24gaXNPYmplY3QodmFsKSB7XFxcXG4gIHJldHVybiBPYmplY3QgPT0gdmFsLmNvbnN0cnVjdG9yO1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdlkyOHZhVzVrWlhndWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OHVMMjV2WkdWZmJXOWtkV3hsY3k5amJ5OXBibVJsZUM1cWN6OHhPRGRrSWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklseHVMeW9xWEc0Z0tpQnpiR2xqWlNncElISmxabVZ5Wlc1alpTNWNiaUFxTDF4dVhHNTJZWElnYzJ4cFkyVWdQU0JCY25KaGVTNXdjbTkwYjNSNWNHVXVjMnhwWTJVN1hHNWNiaThxS2x4dUlDb2dSWGh3YjNObElHQmpiMkF1WEc0Z0tpOWNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0JqYjFzblpHVm1ZWFZzZENkZElEMGdZMjh1WTI4Z1BTQmpienRjYmx4dUx5b3FYRzRnS2lCWGNtRndJSFJvWlNCbmFYWmxiaUJuWlc1bGNtRjBiM0lnWUdadVlDQnBiblJ2SUdGY2JpQXFJR1oxYm1OMGFXOXVJSFJvWVhRZ2NtVjBkWEp1Y3lCaElIQnliMjFwYzJVdVhHNGdLaUJVYUdseklHbHpJR0VnYzJWd1lYSmhkR1VnWm5WdVkzUnBiMjRnYzI4Z2RHaGhkRnh1SUNvZ1pYWmxjbmtnWUdOdktDbGdJR05oYkd3Z1pHOWxjMjRuZENCamNtVmhkR1VnWVNCdVpYY3NYRzRnS2lCMWJtNWxZMlZ6YzJGeWVTQmpiRzl6ZFhKbExseHVJQ3BjYmlBcUlFQndZWEpoYlNCN1IyVnVaWEpoZEc5eVJuVnVZM1JwYjI1OUlHWnVYRzRnS2lCQWNtVjBkWEp1SUh0R2RXNWpkR2x2Ym4xY2JpQXFJRUJoY0drZ2NIVmliR2xqWEc0Z0tpOWNibHh1WTI4dWQzSmhjQ0E5SUdaMWJtTjBhVzl1SUNobWJpa2dlMXh1SUNCamNtVmhkR1ZRY205dGFYTmxMbDlmWjJWdVpYSmhkRzl5Um5WdVkzUnBiMjVmWHlBOUlHWnVPMXh1SUNCeVpYUjFjbTRnWTNKbFlYUmxVSEp2YldselpUdGNiaUFnWm5WdVkzUnBiMjRnWTNKbFlYUmxVSEp2YldselpTZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z1kyOHVZMkZzYkNoMGFHbHpMQ0JtYmk1aGNIQnNlU2gwYUdsekxDQmhjbWQxYldWdWRITXBLVHRjYmlBZ2ZWeHVmVHRjYmx4dUx5b3FYRzRnS2lCRmVHVmpkWFJsSUhSb1pTQm5aVzVsY21GMGIzSWdablZ1WTNScGIyNGdiM0lnWVNCblpXNWxjbUYwYjNKY2JpQXFJR0Z1WkNCeVpYUjFjbTRnWVNCd2NtOXRhWE5sTGx4dUlDcGNiaUFxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdadVhHNGdLaUJBY21WMGRYSnVJSHRRY205dGFYTmxmVnh1SUNvZ1FHRndhU0J3ZFdKc2FXTmNiaUFxTDF4dVhHNW1kVzVqZEdsdmJpQmpieWhuWlc0cElIdGNiaUFnZG1GeUlHTjBlQ0E5SUhSb2FYTTdYRzRnSUhaaGNpQmhjbWR6SUQwZ2MyeHBZMlV1WTJGc2JDaGhjbWQxYldWdWRITXNJREVwWEc1Y2JpQWdMeThnZDJVZ2QzSmhjQ0JsZG1WeWVYUm9hVzVuSUdsdUlHRWdjSEp2YldselpTQjBieUJoZG05cFpDQndjbTl0YVhObElHTm9ZV2x1YVc1bkxGeHVJQ0F2THlCM2FHbGphQ0JzWldGa2N5QjBieUJ0WlcxdmNua2diR1ZoYXlCbGNuSnZjbk11WEc0Z0lDOHZJSE5sWlNCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdmRHb3ZZMjh2YVhOemRXVnpMekU0TUZ4dUlDQnlaWFIxY200Z2JtVjNJRkJ5YjIxcGMyVW9ablZ1WTNScGIyNG9jbVZ6YjJ4MlpTd2djbVZxWldOMEtTQjdYRzRnSUNBZ2FXWWdLSFI1Y0dWdlppQm5aVzRnUFQwOUlDZG1kVzVqZEdsdmJpY3BJR2RsYmlBOUlHZGxiaTVoY0hCc2VTaGpkSGdzSUdGeVozTXBPMXh1SUNBZ0lHbG1JQ2doWjJWdUlIeDhJSFI1Y0dWdlppQm5aVzR1Ym1WNGRDQWhQVDBnSjJaMWJtTjBhVzl1SnlrZ2NtVjBkWEp1SUhKbGMyOXNkbVVvWjJWdUtUdGNibHh1SUNBZ0lHOXVSblZzWm1sc2JHVmtLQ2s3WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTAxcGVHVmtmU0J5WlhOY2JpQWdJQ0FnS2lCQWNtVjBkWEp1SUh0UWNtOXRhWE5sZlZ4dUlDQWdJQ0FxSUVCaGNHa2djSEpwZG1GMFpWeHVJQ0FnSUNBcUwxeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z2IyNUdkV3htYVd4c1pXUW9jbVZ6S1NCN1hHNGdJQ0FnSUNCMllYSWdjbVYwTzF4dUlDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdjbVYwSUQwZ1oyVnVMbTVsZUhRb2NtVnpLVHRjYmlBZ0lDQWdJSDBnWTJGMFkyZ2dLR1VwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGFtVmpkQ2hsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc1bGVIUW9jbVYwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCQWNHRnlZVzBnZTBWeWNtOXlmU0JsY25KY2JpQWdJQ0FnS2lCQWNtVjBkWEp1SUh0UWNtOXRhWE5sZlZ4dUlDQWdJQ0FxSUVCaGNHa2djSEpwZG1GMFpWeHVJQ0FnSUNBcUwxeHVYRzRnSUNBZ1puVnVZM1JwYjI0Z2IyNVNaV3BsWTNSbFpDaGxjbklwSUh0Y2JpQWdJQ0FnSUhaaGNpQnlaWFE3WEc0Z0lDQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ0lDQnlaWFFnUFNCblpXNHVkR2h5YjNjb1pYSnlLVHRjYmlBZ0lDQWdJSDBnWTJGMFkyZ2dLR1VwSUh0Y2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGFtVmpkQ2hsS1R0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUc1bGVIUW9jbVYwS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0F2S2lwY2JpQWdJQ0FnS2lCSFpYUWdkR2hsSUc1bGVIUWdkbUZzZFdVZ2FXNGdkR2hsSUdkbGJtVnlZWFJ2Y2l4Y2JpQWdJQ0FnS2lCeVpYUjFjbTRnWVNCd2NtOXRhWE5sTGx4dUlDQWdJQ0FxWEc0Z0lDQWdJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJSEpsZEZ4dUlDQWdJQ0FxSUVCeVpYUjFjbTRnZTFCeWIyMXBjMlY5WEc0Z0lDQWdJQ29nUUdGd2FTQndjbWwyWVhSbFhHNGdJQ0FnSUNvdlhHNWNiaUFnSUNCbWRXNWpkR2x2YmlCdVpYaDBLSEpsZENrZ2UxeHVJQ0FnSUNBZ2FXWWdLSEpsZEM1a2IyNWxLU0J5WlhSMWNtNGdjbVZ6YjJ4MlpTaHlaWFF1ZG1Gc2RXVXBPMXh1SUNBZ0lDQWdkbUZ5SUhaaGJIVmxJRDBnZEc5UWNtOXRhWE5sTG1OaGJHd29ZM1I0TENCeVpYUXVkbUZzZFdVcE8xeHVJQ0FnSUNBZ2FXWWdLSFpoYkhWbElDWW1JR2x6VUhKdmJXbHpaU2gyWVd4MVpTa3BJSEpsZEhWeWJpQjJZV3gxWlM1MGFHVnVLRzl1Um5Wc1ptbHNiR1ZrTENCdmJsSmxhbVZqZEdWa0tUdGNiaUFnSUNBZ0lISmxkSFZ5YmlCdmJsSmxhbVZqZEdWa0tHNWxkeUJVZVhCbFJYSnliM0lvSjFsdmRTQnRZWGtnYjI1c2VTQjVhV1ZzWkNCaElHWjFibU4wYVc5dUxDQndjbTl0YVhObExDQm5aVzVsY21GMGIzSXNJR0Z5Y21GNUxDQnZjaUJ2WW1wbFkzUXNJQ2RjYmlBZ0lDQWdJQ0FnS3lBblluVjBJSFJvWlNCbWIyeHNiM2RwYm1jZ2IySnFaV04wSUhkaGN5QndZWE56WldRNklGd2lKeUFySUZOMGNtbHVaeWh5WlhRdWRtRnNkV1VwSUNzZ0oxd2lKeWtwTzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1EyOXVkbVZ5ZENCaElHQjVhV1ZzWkdCbFpDQjJZV3gxWlNCcGJuUnZJR0VnY0hKdmJXbHpaUzVjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDFwZUdWa2ZTQnZZbXBjYmlBcUlFQnlaWFIxY200Z2UxQnliMjFwYzJWOVhHNGdLaUJBWVhCcElIQnlhWFpoZEdWY2JpQXFMMXh1WEc1bWRXNWpkR2x2YmlCMGIxQnliMjFwYzJVb2IySnFLU0I3WEc0Z0lHbG1JQ2doYjJKcUtTQnlaWFIxY200Z2IySnFPMXh1SUNCcFppQW9hWE5RY205dGFYTmxLRzlpYWlrcElISmxkSFZ5YmlCdlltbzdYRzRnSUdsbUlDaHBjMGRsYm1WeVlYUnZja1oxYm1OMGFXOXVLRzlpYWlrZ2ZId2dhWE5IWlc1bGNtRjBiM0lvYjJKcUtTa2djbVYwZFhKdUlHTnZMbU5oYkd3b2RHaHBjeXdnYjJKcUtUdGNiaUFnYVdZZ0tDZG1kVzVqZEdsdmJpY2dQVDBnZEhsd1pXOW1JRzlpYWlrZ2NtVjBkWEp1SUhSb2RXNXJWRzlRY205dGFYTmxMbU5oYkd3b2RHaHBjeXdnYjJKcUtUdGNiaUFnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvYjJKcUtTa2djbVYwZFhKdUlHRnljbUY1Vkc5UWNtOXRhWE5sTG1OaGJHd29kR2hwY3l3Z2IySnFLVHRjYmlBZ2FXWWdLR2x6VDJKcVpXTjBLRzlpYWlrcElISmxkSFZ5YmlCdlltcGxZM1JVYjFCeWIyMXBjMlV1WTJGc2JDaDBhR2x6TENCdlltb3BPMXh1SUNCeVpYUjFjbTRnYjJKcU8xeHVmVnh1WEc0dktpcGNiaUFxSUVOdmJuWmxjblFnWVNCMGFIVnVheUIwYnlCaElIQnliMjFwYzJVdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0R2RXNWpkR2x2Ym4xY2JpQXFJRUJ5WlhSMWNtNGdlMUJ5YjIxcGMyVjlYRzRnS2lCQVlYQnBJSEJ5YVhaaGRHVmNiaUFxTDF4dVhHNW1kVzVqZEdsdmJpQjBhSFZ1YTFSdlVISnZiV2x6WlNobWJpa2dlMXh1SUNCMllYSWdZM1I0SUQwZ2RHaHBjenRjYmlBZ2NtVjBkWEp1SUc1bGR5QlFjbTl0YVhObEtHWjFibU4wYVc5dUlDaHlaWE52YkhabExDQnlaV3BsWTNRcElIdGNiaUFnSUNCbWJpNWpZV3hzS0dOMGVDd2dablZ1WTNScGIyNGdLR1Z5Y2l3Z2NtVnpLU0I3WEc0Z0lDQWdJQ0JwWmlBb1pYSnlLU0J5WlhSMWNtNGdjbVZxWldOMEtHVnljaWs3WEc0Z0lDQWdJQ0JwWmlBb1lYSm5kVzFsYm5SekxteGxibWQwYUNBK0lESXBJSEpsY3lBOUlITnNhV05sTG1OaGJHd29ZWEpuZFcxbGJuUnpMQ0F4S1R0Y2JpQWdJQ0FnSUhKbGMyOXNkbVVvY21WektUdGNiaUFnSUNCOUtUdGNiaUFnZlNrN1hHNTlYRzVjYmk4cUtseHVJQ29nUTI5dWRtVnlkQ0JoYmlCaGNuSmhlU0J2WmlCY0lubHBaV3hrWVdKc1pYTmNJaUIwYnlCaElIQnliMjFwYzJVdVhHNGdLaUJWYzJWeklHQlFjbTl0YVhObExtRnNiQ2dwWUNCcGJuUmxjbTVoYkd4NUxseHVJQ3BjYmlBcUlFQndZWEpoYlNCN1FYSnlZWGw5SUc5aWFseHVJQ29nUUhKbGRIVnliaUI3VUhKdmJXbHpaWDFjYmlBcUlFQmhjR2tnY0hKcGRtRjBaVnh1SUNvdlhHNWNibVoxYm1OMGFXOXVJR0Z5Y21GNVZHOVFjbTl0YVhObEtHOWlhaWtnZTF4dUlDQnlaWFIxY200Z1VISnZiV2x6WlM1aGJHd29iMkpxTG0xaGNDaDBiMUJ5YjIxcGMyVXNJSFJvYVhNcEtUdGNibjFjYmx4dUx5b3FYRzRnS2lCRGIyNTJaWEowSUdGdUlHOWlhbVZqZENCdlppQmNJbmxwWld4a1lXSnNaWE5jSWlCMGJ5QmhJSEJ5YjIxcGMyVXVYRzRnS2lCVmMyVnpJR0JRY205dGFYTmxMbUZzYkNncFlDQnBiblJsY201aGJHeDVMbHh1SUNwY2JpQXFJRUJ3WVhKaGJTQjdUMkpxWldOMGZTQnZZbXBjYmlBcUlFQnlaWFIxY200Z2UxQnliMjFwYzJWOVhHNGdLaUJBWVhCcElIQnlhWFpoZEdWY2JpQXFMMXh1WEc1bWRXNWpkR2x2YmlCdlltcGxZM1JVYjFCeWIyMXBjMlVvYjJKcUtYdGNiaUFnZG1GeUlISmxjM1ZzZEhNZ1BTQnVaWGNnYjJKcUxtTnZibk4wY25WamRHOXlLQ2s3WEc0Z0lIWmhjaUJyWlhseklEMGdUMkpxWldOMExtdGxlWE1vYjJKcUtUdGNiaUFnZG1GeUlIQnliMjFwYzJWeklEMGdXMTA3WEc0Z0lHWnZjaUFvZG1GeUlHa2dQU0F3T3lCcElEd2dhMlY1Y3k1c1pXNW5kR2c3SUdrckt5a2dlMXh1SUNBZ0lIWmhjaUJyWlhrZ1BTQnJaWGx6VzJsZE8xeHVJQ0FnSUhaaGNpQndjbTl0YVhObElEMGdkRzlRY205dGFYTmxMbU5oYkd3b2RHaHBjeXdnYjJKcVcydGxlVjBwTzF4dUlDQWdJR2xtSUNod2NtOXRhWE5sSUNZbUlHbHpVSEp2YldselpTaHdjbTl0YVhObEtTa2daR1ZtWlhJb2NISnZiV2x6WlN3Z2EyVjVLVHRjYmlBZ0lDQmxiSE5sSUhKbGMzVnNkSE5iYTJWNVhTQTlJRzlpYWx0clpYbGRPMXh1SUNCOVhHNGdJSEpsZEhWeWJpQlFjbTl0YVhObExtRnNiQ2h3Y205dGFYTmxjeWt1ZEdobGJpaG1kVzVqZEdsdmJpQW9LU0I3WEc0Z0lDQWdjbVYwZFhKdUlISmxjM1ZzZEhNN1hHNGdJSDBwTzF4dVhHNGdJR1oxYm1OMGFXOXVJR1JsWm1WeUtIQnliMjFwYzJVc0lHdGxlU2tnZTF4dUlDQWdJQzh2SUhCeVpXUmxabWx1WlNCMGFHVWdhMlY1SUdsdUlIUm9aU0J5WlhOMWJIUmNiaUFnSUNCeVpYTjFiSFJ6VzJ0bGVWMGdQU0IxYm1SbFptbHVaV1E3WEc0Z0lDQWdjSEp2YldselpYTXVjSFZ6YUNod2NtOXRhWE5sTG5Sb1pXNG9ablZ1WTNScGIyNGdLSEpsY3lrZ2UxeHVJQ0FnSUNBZ2NtVnpkV3gwYzF0clpYbGRJRDBnY21Wek8xeHVJQ0FnSUgwcEtUdGNiaUFnZlZ4dWZWeHVYRzR2S2lwY2JpQXFJRU5vWldOcklHbG1JR0J2WW1wZ0lHbHpJR0VnY0hKdmJXbHpaUzVjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdiMkpxWEc0Z0tpQkFjbVYwZFhKdUlIdENiMjlzWldGdWZWeHVJQ29nUUdGd2FTQndjbWwyWVhSbFhHNGdLaTljYmx4dVpuVnVZM1JwYjI0Z2FYTlFjbTl0YVhObEtHOWlhaWtnZTF4dUlDQnlaWFIxY200Z0oyWjFibU4wYVc5dUp5QTlQU0IwZVhCbGIyWWdiMkpxTG5Sb1pXNDdYRzU5WEc1Y2JpOHFLbHh1SUNvZ1EyaGxZMnNnYVdZZ1lHOWlhbUFnYVhNZ1lTQm5aVzVsY21GMGIzSXVYRzRnS2x4dUlDb2dRSEJoY21GdElIdE5hWGhsWkgwZ2IySnFYRzRnS2lCQWNtVjBkWEp1SUh0Q2IyOXNaV0Z1ZlZ4dUlDb2dRR0Z3YVNCd2NtbDJZWFJsWEc0Z0tpOWNibHh1Wm5WdVkzUnBiMjRnYVhOSFpXNWxjbUYwYjNJb2IySnFLU0I3WEc0Z0lISmxkSFZ5YmlBblpuVnVZM1JwYjI0bklEMDlJSFI1Y0dWdlppQnZZbW91Ym1WNGRDQW1KaUFuWm5WdVkzUnBiMjRuSUQwOUlIUjVjR1Z2WmlCdlltb3VkR2h5YjNjN1hHNTlYRzVjYmk4cUtseHVJQ29nUTJobFkyc2dhV1lnWUc5aWFtQWdhWE1nWVNCblpXNWxjbUYwYjNJZ1puVnVZM1JwYjI0dVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0TmFYaGxaSDBnYjJKcVhHNGdLaUJBY21WMGRYSnVJSHRDYjI5c1pXRnVmVnh1SUNvZ1FHRndhU0J3Y21sMllYUmxYRzRnS2k5Y2JtWjFibU4wYVc5dUlHbHpSMlZ1WlhKaGRHOXlSblZ1WTNScGIyNG9iMkpxS1NCN1hHNGdJSFpoY2lCamIyNXpkSEoxWTNSdmNpQTlJRzlpYWk1amIyNXpkSEoxWTNSdmNqdGNiaUFnYVdZZ0tDRmpiMjV6ZEhKMVkzUnZjaWtnY21WMGRYSnVJR1poYkhObE8xeHVJQ0JwWmlBb0owZGxibVZ5WVhSdmNrWjFibU4wYVc5dUp5QTlQVDBnWTI5dWMzUnlkV04wYjNJdWJtRnRaU0I4ZkNBblIyVnVaWEpoZEc5eVJuVnVZM1JwYjI0bklEMDlQU0JqYjI1emRISjFZM1J2Y2k1a2FYTndiR0Y1VG1GdFpTa2djbVYwZFhKdUlIUnlkV1U3WEc0Z0lISmxkSFZ5YmlCcGMwZGxibVZ5WVhSdmNpaGpiMjV6ZEhKMVkzUnZjaTV3Y205MGIzUjVjR1VwTzF4dWZWeHVYRzR2S2lwY2JpQXFJRU5vWldOcklHWnZjaUJ3YkdGcGJpQnZZbXBsWTNRdVhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0TmFYaGxaSDBnZG1Gc1hHNGdLaUJBY21WMGRYSnVJSHRDYjI5c1pXRnVmVnh1SUNvZ1FHRndhU0J3Y21sMllYUmxYRzRnS2k5Y2JseHVablZ1WTNScGIyNGdhWE5QWW1wbFkzUW9kbUZzS1NCN1hHNGdJSEpsZEhWeWJpQlBZbXBsWTNRZ1BUMGdkbUZzTG1OdmJuTjBjblZqZEc5eU8xeHVmVnh1SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN0lpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2NvL2luZGV4LmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvanNvbi1zY2hlbWEtdHJhdmVyc2UvaW5kZXguanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvanNvbi1zY2hlbWEtdHJhdmVyc2UvaW5kZXguanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxudmFyIHRyYXZlcnNlID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc2NoZW1hLCBvcHRzLCBjYikge1xcXFxuICBpZiAodHlwZW9mIG9wdHMgPT0gJ2Z1bmN0aW9uJykge1xcXFxuICAgIGNiID0gb3B0cztcXFxcbiAgICBvcHRzID0ge307XFxcXG4gIH1cXFxcbiAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hlbWEsICcnLCBzY2hlbWEpO1xcXFxufTtcXFxcblxcXFxuXFxcXG50cmF2ZXJzZS5rZXl3b3JkcyA9IHtcXFxcbiAgYWRkaXRpb25hbEl0ZW1zOiB0cnVlLFxcXFxuICBpdGVtczogdHJ1ZSxcXFxcbiAgY29udGFpbnM6IHRydWUsXFxcXG4gIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOiB0cnVlLFxcXFxuICBwcm9wZXJ0eU5hbWVzOiB0cnVlLFxcXFxuICBub3Q6IHRydWVcXFxcbn07XFxcXG5cXFxcbnRyYXZlcnNlLmFycmF5S2V5d29yZHMgPSB7XFxcXG4gIGl0ZW1zOiB0cnVlLFxcXFxuICBhbGxPZjogdHJ1ZSxcXFxcbiAgYW55T2Y6IHRydWUsXFxcXG4gIG9uZU9mOiB0cnVlXFxcXG59O1xcXFxuXFxcXG50cmF2ZXJzZS5wcm9wc0tleXdvcmRzID0ge1xcXFxuICBkZWZpbml0aW9uczogdHJ1ZSxcXFxcbiAgcHJvcGVydGllczogdHJ1ZSxcXFxcbiAgcGF0dGVyblByb3BlcnRpZXM6IHRydWUsXFxcXG4gIGRlcGVuZGVuY2llczogdHJ1ZVxcXFxufTtcXFxcblxcXFxudHJhdmVyc2Uuc2tpcEtleXdvcmRzID0ge1xcXFxuICBlbnVtOiB0cnVlLFxcXFxuICBjb25zdDogdHJ1ZSxcXFxcbiAgcmVxdWlyZWQ6IHRydWUsXFxcXG4gIG1heGltdW06IHRydWUsXFxcXG4gIG1pbmltdW06IHRydWUsXFxcXG4gIGV4Y2x1c2l2ZU1heGltdW06IHRydWUsXFxcXG4gIGV4Y2x1c2l2ZU1pbmltdW06IHRydWUsXFxcXG4gIG11bHRpcGxlT2Y6IHRydWUsXFxcXG4gIG1heExlbmd0aDogdHJ1ZSxcXFxcbiAgbWluTGVuZ3RoOiB0cnVlLFxcXFxuICBwYXR0ZXJuOiB0cnVlLFxcXFxuICBmb3JtYXQ6IHRydWUsXFxcXG4gIG1heEl0ZW1zOiB0cnVlLFxcXFxuICBtaW5JdGVtczogdHJ1ZSxcXFxcbiAgdW5pcXVlSXRlbXM6IHRydWUsXFxcXG4gIG1heFByb3BlcnRpZXM6IHRydWUsXFxcXG4gIG1pblByb3BlcnRpZXM6IHRydWVcXFxcbn07XFxcXG5cXFxcblxcXFxuZnVuY3Rpb24gX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hlbWEsIGpzb25QdHIsIHJvb3RTY2hlbWEsIHBhcmVudEpzb25QdHIsIHBhcmVudEtleXdvcmQsIHBhcmVudFNjaGVtYSwga2V5SW5kZXgpIHtcXFxcbiAgaWYgKHNjaGVtYSAmJiB0eXBlb2Ygc2NoZW1hID09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KHNjaGVtYSkpIHtcXFxcbiAgICBjYihzY2hlbWEsIGpzb25QdHIsIHJvb3RTY2hlbWEsIHBhcmVudEpzb25QdHIsIHBhcmVudEtleXdvcmQsIHBhcmVudFNjaGVtYSwga2V5SW5kZXgpO1xcXFxuICAgIGZvciAodmFyIGtleSBpbiBzY2hlbWEpIHtcXFxcbiAgICAgIHZhciBzY2ggPSBzY2hlbWFba2V5XTtcXFxcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHNjaCkpIHtcXFxcbiAgICAgICAgaWYgKGtleSBpbiB0cmF2ZXJzZS5hcnJheUtleXdvcmRzKSB7XFxcXG4gICAgICAgICAgZm9yICh2YXIgaT0wOyBpPHNjaC5sZW5ndGg7IGkrKylcXFxcbiAgICAgICAgICAgIF90cmF2ZXJzZShvcHRzLCBjYiwgc2NoW2ldLCBqc29uUHRyICsgJy8nICsga2V5ICsgJy8nICsgaSwgcm9vdFNjaGVtYSwganNvblB0ciwga2V5LCBzY2hlbWEsIGkpO1xcXFxuICAgICAgICB9XFxcXG4gICAgICB9IGVsc2UgaWYgKGtleSBpbiB0cmF2ZXJzZS5wcm9wc0tleXdvcmRzKSB7XFxcXG4gICAgICAgIGlmIChzY2ggJiYgdHlwZW9mIHNjaCA9PSAnb2JqZWN0Jykge1xcXFxuICAgICAgICAgIGZvciAodmFyIHByb3AgaW4gc2NoKVxcXFxuICAgICAgICAgICAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2hbcHJvcF0sIGpzb25QdHIgKyAnLycgKyBrZXkgKyAnLycgKyBlc2NhcGVKc29uUHRyKHByb3ApLCByb290U2NoZW1hLCBqc29uUHRyLCBrZXksIHNjaGVtYSwgcHJvcCk7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSBpZiAoa2V5IGluIHRyYXZlcnNlLmtleXdvcmRzIHx8IChvcHRzLmFsbEtleXMgJiYgIShrZXkgaW4gdHJhdmVyc2Uuc2tpcEtleXdvcmRzKSkpIHtcXFxcbiAgICAgICAgX3RyYXZlcnNlKG9wdHMsIGNiLCBzY2gsIGpzb25QdHIgKyAnLycgKyBrZXksIHJvb3RTY2hlbWEsIGpzb25QdHIsIGtleSwgc2NoZW1hKTtcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gIH1cXFxcbn1cXFxcblxcXFxuXFxcXG5mdW5jdGlvbiBlc2NhcGVKc29uUHRyKHN0cikge1xcXFxuICByZXR1cm4gc3RyLnJlcGxhY2UoL34vZywgJ34wJykucmVwbGFjZSgvXFxcXFxcXFwvL2csICd+MScpO1xcXFxufVxcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdmFuTnZiaTF6WTJobGJXRXRkSEpoZG1WeWMyVXZhVzVrWlhndWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OHVMMjV2WkdWZmJXOWtkV3hsY3k5cWMyOXVMWE5qYUdWdFlTMTBjbUYyWlhKelpTOXBibVJsZUM1cWN6ODRPV0U1SWwwc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklpZDFjMlVnYzNSeWFXTjBKenRjYmx4dWRtRnlJSFJ5WVhabGNuTmxJRDBnYlc5a2RXeGxMbVY0Y0c5eWRITWdQU0JtZFc1amRHbHZiaUFvYzJOb1pXMWhMQ0J2Y0hSekxDQmpZaWtnZTF4dUlDQnBaaUFvZEhsd1pXOW1JRzl3ZEhNZ1BUMGdKMloxYm1OMGFXOXVKeWtnZTF4dUlDQWdJR05pSUQwZ2IzQjBjenRjYmlBZ0lDQnZjSFJ6SUQwZ2UzMDdYRzRnSUgxY2JpQWdYM1J5WVhabGNuTmxLRzl3ZEhNc0lHTmlMQ0J6WTJobGJXRXNJQ2NuTENCelkyaGxiV0VwTzF4dWZUdGNibHh1WEc1MGNtRjJaWEp6WlM1clpYbDNiM0prY3lBOUlIdGNiaUFnWVdSa2FYUnBiMjVoYkVsMFpXMXpPaUIwY25WbExGeHVJQ0JwZEdWdGN6b2dkSEoxWlN4Y2JpQWdZMjl1ZEdGcGJuTTZJSFJ5ZFdVc1hHNGdJR0ZrWkdsMGFXOXVZV3hRY205d1pYSjBhV1Z6T2lCMGNuVmxMRnh1SUNCd2NtOXdaWEowZVU1aGJXVnpPaUIwY25WbExGeHVJQ0J1YjNRNklIUnlkV1ZjYm4wN1hHNWNiblJ5WVhabGNuTmxMbUZ5Y21GNVMyVjVkMjl5WkhNZ1BTQjdYRzRnSUdsMFpXMXpPaUIwY25WbExGeHVJQ0JoYkd4UFpqb2dkSEoxWlN4Y2JpQWdZVzU1VDJZNklIUnlkV1VzWEc0Z0lHOXVaVTltT2lCMGNuVmxYRzU5TzF4dVhHNTBjbUYyWlhKelpTNXdjbTl3YzB0bGVYZHZjbVJ6SUQwZ2UxeHVJQ0JrWldacGJtbDBhVzl1Y3pvZ2RISjFaU3hjYmlBZ2NISnZjR1Z5ZEdsbGN6b2dkSEoxWlN4Y2JpQWdjR0YwZEdWeWJsQnliM0JsY25ScFpYTTZJSFJ5ZFdVc1hHNGdJR1JsY0dWdVpHVnVZMmxsY3pvZ2RISjFaVnh1ZlR0Y2JseHVkSEpoZG1WeWMyVXVjMnRwY0V0bGVYZHZjbVJ6SUQwZ2UxeHVJQ0JsYm5WdE9pQjBjblZsTEZ4dUlDQmpiMjV6ZERvZ2RISjFaU3hjYmlBZ2NtVnhkV2x5WldRNklIUnlkV1VzWEc0Z0lHMWhlR2x0ZFcwNklIUnlkV1VzWEc0Z0lHMXBibWx0ZFcwNklIUnlkV1VzWEc0Z0lHVjRZMngxYzJsMlpVMWhlR2x0ZFcwNklIUnlkV1VzWEc0Z0lHVjRZMngxYzJsMlpVMXBibWx0ZFcwNklIUnlkV1VzWEc0Z0lHMTFiSFJwY0d4bFQyWTZJSFJ5ZFdVc1hHNGdJRzFoZUV4bGJtZDBhRG9nZEhKMVpTeGNiaUFnYldsdVRHVnVaM1JvT2lCMGNuVmxMRnh1SUNCd1lYUjBaWEp1T2lCMGNuVmxMRnh1SUNCbWIzSnRZWFE2SUhSeWRXVXNYRzRnSUcxaGVFbDBaVzF6T2lCMGNuVmxMRnh1SUNCdGFXNUpkR1Z0Y3pvZ2RISjFaU3hjYmlBZ2RXNXBjWFZsU1hSbGJYTTZJSFJ5ZFdVc1hHNGdJRzFoZUZCeWIzQmxjblJwWlhNNklIUnlkV1VzWEc0Z0lHMXBibEJ5YjNCbGNuUnBaWE02SUhSeWRXVmNibjA3WEc1Y2JseHVablZ1WTNScGIyNGdYM1J5WVhabGNuTmxLRzl3ZEhNc0lHTmlMQ0J6WTJobGJXRXNJR3B6YjI1UWRISXNJSEp2YjNSVFkyaGxiV0VzSUhCaGNtVnVkRXB6YjI1UWRISXNJSEJoY21WdWRFdGxlWGR2Y21Rc0lIQmhjbVZ1ZEZOamFHVnRZU3dnYTJWNVNXNWtaWGdwSUh0Y2JpQWdhV1lnS0hOamFHVnRZU0FtSmlCMGVYQmxiMllnYzJOb1pXMWhJRDA5SUNkdlltcGxZM1FuSUNZbUlDRkJjbkpoZVM1cGMwRnljbUY1S0hOamFHVnRZU2twSUh0Y2JpQWdJQ0JqWWloelkyaGxiV0VzSUdwemIyNVFkSElzSUhKdmIzUlRZMmhsYldFc0lIQmhjbVZ1ZEVwemIyNVFkSElzSUhCaGNtVnVkRXRsZVhkdmNtUXNJSEJoY21WdWRGTmphR1Z0WVN3Z2EyVjVTVzVrWlhncE8xeHVJQ0FnSUdadmNpQW9kbUZ5SUd0bGVTQnBiaUJ6WTJobGJXRXBJSHRjYmlBZ0lDQWdJSFpoY2lCelkyZ2dQU0J6WTJobGJXRmJhMlY1WFR0Y2JpQWdJQ0FnSUdsbUlDaEJjbkpoZVM1cGMwRnljbUY1S0hOamFDa3BJSHRjYmlBZ0lDQWdJQ0FnYVdZZ0tHdGxlU0JwYmlCMGNtRjJaWEp6WlM1aGNuSmhlVXRsZVhkdmNtUnpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1ptOXlJQ2gyWVhJZ2FUMHdPeUJwUEhOamFDNXNaVzVuZEdnN0lHa3JLeWxjYmlBZ0lDQWdJQ0FnSUNBZ0lGOTBjbUYyWlhKelpTaHZjSFJ6TENCallpd2djMk5vVzJsZExDQnFjMjl1VUhSeUlDc2dKeThuSUNzZ2EyVjVJQ3NnSnk4bklDc2dhU3dnY205dmRGTmphR1Z0WVN3Z2FuTnZibEIwY2l3Z2EyVjVMQ0J6WTJobGJXRXNJR2twTzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHdGxlU0JwYmlCMGNtRjJaWEp6WlM1d2NtOXdjMHRsZVhkdmNtUnpLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHpZMmdnSmlZZ2RIbHdaVzltSUhOamFDQTlQU0FuYjJKcVpXTjBKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lHWnZjaUFvZG1GeUlIQnliM0FnYVc0Z2MyTm9LVnh1SUNBZ0lDQWdJQ0FnSUNBZ1gzUnlZWFpsY25ObEtHOXdkSE1zSUdOaUxDQnpZMmhiY0hKdmNGMHNJR3B6YjI1UWRISWdLeUFuTHljZ0t5QnJaWGtnS3lBbkx5Y2dLeUJsYzJOaGNHVktjMjl1VUhSeUtIQnliM0FwTENCeWIyOTBVMk5vWlcxaExDQnFjMjl1VUhSeUxDQnJaWGtzSUhOamFHVnRZU3dnY0hKdmNDazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBnWld4elpTQnBaaUFvYTJWNUlHbHVJSFJ5WVhabGNuTmxMbXRsZVhkdmNtUnpJSHg4SUNodmNIUnpMbUZzYkV0bGVYTWdKaVlnSVNoclpYa2dhVzRnZEhKaGRtVnljMlV1YzJ0cGNFdGxlWGR2Y21SektTa3BJSHRjYmlBZ0lDQWdJQ0FnWDNSeVlYWmxjbk5sS0c5d2RITXNJR05pTENCelkyZ3NJR3B6YjI1UWRISWdLeUFuTHljZ0t5QnJaWGtzSUhKdmIzUlRZMmhsYldFc0lHcHpiMjVRZEhJc0lHdGxlU3dnYzJOb1pXMWhLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUgxY2JuMWNibHh1WEc1bWRXNWpkR2x2YmlCbGMyTmhjR1ZLYzI5dVVIUnlLSE4wY2lrZ2UxeHVJQ0J5WlhSMWNtNGdjM1J5TG5KbGNHeGhZMlVvTDM0dlp5d2dKMzR3SnlrdWNtVndiR0ZqWlNndlhGd3ZMMmNzSUNkK01TY3BPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3SWl3aWMyOTFjbU5sVW05dmRDSTZJaUo5XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvanNvbi1zY2hlbWEtdHJhdmVyc2UvaW5kZXguanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9qc29uLXN0YWJsZS1zdHJpbmdpZnkvaW5kZXguanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2pzb24tc3RhYmxlLXN0cmluZ2lmeS9pbmRleC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcbmV2YWwoXFxcInZhciBqc29uID0gdHlwZW9mIEpTT04gIT09ICd1bmRlZmluZWQnID8gSlNPTiA6IF9fd2VicGFja19yZXF1aXJlX18oLyohIGpzb25pZnkgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9qc29uaWZ5L2luZGV4LmpzXFxcXFxcXCIpO1xcXFxuXFxcXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmosIG9wdHMpIHtcXFxcbiAgICBpZiAoIW9wdHMpIG9wdHMgPSB7fTtcXFxcbiAgICBpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIG9wdHMgPSB7IGNtcDogb3B0cyB9O1xcXFxuICAgIHZhciBzcGFjZSA9IG9wdHMuc3BhY2UgfHwgJyc7XFxcXG4gICAgaWYgKHR5cGVvZiBzcGFjZSA9PT0gJ251bWJlcicpIHNwYWNlID0gQXJyYXkoc3BhY2UrMSkuam9pbignICcpO1xcXFxuICAgIHZhciBjeWNsZXMgPSAodHlwZW9mIG9wdHMuY3ljbGVzID09PSAnYm9vbGVhbicpID8gb3B0cy5jeWNsZXMgOiBmYWxzZTtcXFxcbiAgICB2YXIgcmVwbGFjZXIgPSBvcHRzLnJlcGxhY2VyIHx8IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9O1xcXFxuXFxcXG4gICAgdmFyIGNtcCA9IG9wdHMuY21wICYmIChmdW5jdGlvbiAoZikge1xcXFxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKG5vZGUpIHtcXFxcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xcXFxuICAgICAgICAgICAgICAgIHZhciBhb2JqID0geyBrZXk6IGEsIHZhbHVlOiBub2RlW2FdIH07XFxcXG4gICAgICAgICAgICAgICAgdmFyIGJvYmogPSB7IGtleTogYiwgdmFsdWU6IG5vZGVbYl0gfTtcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gZihhb2JqLCBib2JqKTtcXFxcbiAgICAgICAgICAgIH07XFxcXG4gICAgICAgIH07XFxcXG4gICAgfSkob3B0cy5jbXApO1xcXFxuXFxcXG4gICAgdmFyIHNlZW4gPSBbXTtcXFxcbiAgICByZXR1cm4gKGZ1bmN0aW9uIHN0cmluZ2lmeSAocGFyZW50LCBrZXksIG5vZGUsIGxldmVsKSB7XFxcXG4gICAgICAgIHZhciBpbmRlbnQgPSBzcGFjZSA/ICgnXFxcXFxcXFxuJyArIG5ldyBBcnJheShsZXZlbCArIDEpLmpvaW4oc3BhY2UpKSA6ICcnO1xcXFxuICAgICAgICB2YXIgY29sb25TZXBhcmF0b3IgPSBzcGFjZSA/ICc6ICcgOiAnOic7XFxcXG5cXFxcbiAgICAgICAgaWYgKG5vZGUgJiYgbm9kZS50b0pTT04gJiYgdHlwZW9mIG5vZGUudG9KU09OID09PSAnZnVuY3Rpb24nKSB7XFxcXG4gICAgICAgICAgICBub2RlID0gbm9kZS50b0pTT04oKTtcXFxcbiAgICAgICAgfVxcXFxuXFxcXG4gICAgICAgIG5vZGUgPSByZXBsYWNlci5jYWxsKHBhcmVudCwga2V5LCBub2RlKTtcXFxcblxcXFxuICAgICAgICBpZiAobm9kZSA9PT0gdW5kZWZpbmVkKSB7XFxcXG4gICAgICAgICAgICByZXR1cm47XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgaWYgKHR5cGVvZiBub2RlICE9PSAnb2JqZWN0JyB8fCBub2RlID09PSBudWxsKSB7XFxcXG4gICAgICAgICAgICByZXR1cm4ganNvbi5zdHJpbmdpZnkobm9kZSk7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgaWYgKGlzQXJyYXkobm9kZSkpIHtcXFxcbiAgICAgICAgICAgIHZhciBvdXQgPSBbXTtcXFxcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9kZS5sZW5ndGg7IGkrKykge1xcXFxuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gc3RyaW5naWZ5KG5vZGUsIGksIG5vZGVbaV0sIGxldmVsKzEpIHx8IGpzb24uc3RyaW5naWZ5KG51bGwpO1xcXFxuICAgICAgICAgICAgICAgIG91dC5wdXNoKGluZGVudCArIHNwYWNlICsgaXRlbSk7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICByZXR1cm4gJ1snICsgb3V0LmpvaW4oJywnKSArIGluZGVudCArICddJztcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBlbHNlIHtcXFxcbiAgICAgICAgICAgIGlmIChzZWVuLmluZGV4T2Yobm9kZSkgIT09IC0xKSB7XFxcXG4gICAgICAgICAgICAgICAgaWYgKGN5Y2xlcykgcmV0dXJuIGpzb24uc3RyaW5naWZ5KCdfX2N5Y2xlX18nKTtcXFxcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDb252ZXJ0aW5nIGNpcmN1bGFyIHN0cnVjdHVyZSB0byBKU09OJyk7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBlbHNlIHNlZW4ucHVzaChub2RlKTtcXFxcblxcXFxuICAgICAgICAgICAgdmFyIGtleXMgPSBvYmplY3RLZXlzKG5vZGUpLnNvcnQoY21wICYmIGNtcChub2RlKSk7XFxcXG4gICAgICAgICAgICB2YXIgb3V0ID0gW107XFxcXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcXFxcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0ga2V5c1tpXTtcXFxcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBzdHJpbmdpZnkobm9kZSwga2V5LCBub2RlW2tleV0sIGxldmVsKzEpO1xcXFxuXFxcXG4gICAgICAgICAgICAgICAgaWYoIXZhbHVlKSBjb250aW51ZTtcXFxcblxcXFxuICAgICAgICAgICAgICAgIHZhciBrZXlWYWx1ZSA9IGpzb24uc3RyaW5naWZ5KGtleSlcXFxcbiAgICAgICAgICAgICAgICAgICAgKyBjb2xvblNlcGFyYXRvclxcXFxuICAgICAgICAgICAgICAgICAgICArIHZhbHVlO1xcXFxuICAgICAgICAgICAgICAgIDtcXFxcbiAgICAgICAgICAgICAgICBvdXQucHVzaChpbmRlbnQgKyBzcGFjZSArIGtleVZhbHVlKTtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIHNlZW4uc3BsaWNlKHNlZW4uaW5kZXhPZihub2RlKSwgMSk7XFxcXG4gICAgICAgICAgICByZXR1cm4gJ3snICsgb3V0LmpvaW4oJywnKSArIGluZGVudCArICd9JztcXFxcbiAgICAgICAgfVxcXFxuICAgIH0pKHsgJyc6IG9iaiB9LCAnJywgb2JqLCAwKTtcXFxcbn07XFxcXG5cXFxcbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAoeCkge1xcXFxuICAgIHJldHVybiB7fS50b1N0cmluZy5jYWxsKHgpID09PSAnW29iamVjdCBBcnJheV0nO1xcXFxufTtcXFxcblxcXFxudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XFxcXG4gICAgdmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkgfHwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdHJ1ZSB9O1xcXFxuICAgIHZhciBrZXlzID0gW107XFxcXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xcXFxuICAgICAgICBpZiAoaGFzLmNhbGwob2JqLCBrZXkpKSBrZXlzLnB1c2goa2V5KTtcXFxcbiAgICB9XFxcXG4gICAgcmV0dXJuIGtleXM7XFxcXG59O1xcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdmFuTnZiaTF6ZEdGaWJHVXRjM1J5YVc1bmFXWjVMMmx1WkdWNExtcHpMbXB6SWl3aWMyOTFjbU5sY3lJNld5SjNaV0p3WVdOck9pOHZhVzFxYjNsU1VFTXZMaTl1YjJSbFgyMXZaSFZzWlhNdmFuTnZiaTF6ZEdGaWJHVXRjM1J5YVc1bmFXWjVMMmx1WkdWNExtcHpQMkZqTkdZaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lkbUZ5SUdwemIyNGdQU0IwZVhCbGIyWWdTbE5QVGlBaFBUMGdKM1Z1WkdWbWFXNWxaQ2NnUHlCS1UwOU9JRG9nY21WeGRXbHlaU2duYW5OdmJtbG1lU2NwTzF4dVhHNXRiMlIxYkdVdVpYaHdiM0owY3lBOUlHWjFibU4wYVc5dUlDaHZZbW9zSUc5d2RITXBJSHRjYmlBZ0lDQnBaaUFvSVc5d2RITXBJRzl3ZEhNZ1BTQjdmVHRjYmlBZ0lDQnBaaUFvZEhsd1pXOW1JRzl3ZEhNZ1BUMDlJQ2RtZFc1amRHbHZiaWNwSUc5d2RITWdQU0I3SUdOdGNEb2diM0IwY3lCOU8xeHVJQ0FnSUhaaGNpQnpjR0ZqWlNBOUlHOXdkSE11YzNCaFkyVWdmSHdnSnljN1hHNGdJQ0FnYVdZZ0tIUjVjR1Z2WmlCemNHRmpaU0E5UFQwZ0oyNTFiV0psY2ljcElITndZV05sSUQwZ1FYSnlZWGtvYzNCaFkyVXJNU2t1YW05cGJpZ25JQ2NwTzF4dUlDQWdJSFpoY2lCamVXTnNaWE1nUFNBb2RIbHdaVzltSUc5d2RITXVZM2xqYkdWeklEMDlQU0FuWW05dmJHVmhiaWNwSUQ4Z2IzQjBjeTVqZVdOc1pYTWdPaUJtWVd4elpUdGNiaUFnSUNCMllYSWdjbVZ3YkdGalpYSWdQU0J2Y0hSekxuSmxjR3hoWTJWeUlIeDhJR1oxYm1OMGFXOXVLR3RsZVN3Z2RtRnNkV1VwSUhzZ2NtVjBkWEp1SUhaaGJIVmxPeUI5TzF4dVhHNGdJQ0FnZG1GeUlHTnRjQ0E5SUc5d2RITXVZMjF3SUNZbUlDaG1kVzVqZEdsdmJpQW9aaWtnZTF4dUlDQWdJQ0FnSUNCeVpYUjFjbTRnWm5WdVkzUnBiMjRnS0c1dlpHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCbWRXNWpkR2x2YmlBb1lTd2dZaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQmhiMkpxSUQwZ2V5QnJaWGs2SUdFc0lIWmhiSFZsT2lCdWIyUmxXMkZkSUgwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0p2WW1vZ1BTQjdJR3RsZVRvZ1lpd2dkbUZzZFdVNklHNXZaR1ZiWWwwZ2ZUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1ppaGhiMkpxTENCaWIySnFLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMDdYRzRnSUNBZ0lDQWdJSDA3WEc0Z0lDQWdmU2tvYjNCMGN5NWpiWEFwTzF4dVhHNGdJQ0FnZG1GeUlITmxaVzRnUFNCYlhUdGNiaUFnSUNCeVpYUjFjbTRnS0daMWJtTjBhVzl1SUhOMGNtbHVaMmxtZVNBb2NHRnlaVzUwTENCclpYa3NJRzV2WkdVc0lHeGxkbVZzS1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUJwYm1SbGJuUWdQU0J6Y0dGalpTQS9JQ2duWEZ4dUp5QXJJRzVsZHlCQmNuSmhlU2hzWlhabGJDQXJJREVwTG1wdmFXNG9jM0JoWTJVcEtTQTZJQ2NuTzF4dUlDQWdJQ0FnSUNCMllYSWdZMjlzYjI1VFpYQmhjbUYwYjNJZ1BTQnpjR0ZqWlNBL0lDYzZJQ2NnT2lBbk9pYzdYRzVjYmlBZ0lDQWdJQ0FnYVdZZ0tHNXZaR1VnSmlZZ2JtOWtaUzUwYjBwVFQwNGdKaVlnZEhsd1pXOW1JRzV2WkdVdWRHOUtVMDlPSUQwOVBTQW5ablZ1WTNScGIyNG5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnViMlJsSUQwZ2JtOWtaUzUwYjBwVFQwNG9LVHRjYmlBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lHNXZaR1VnUFNCeVpYQnNZV05sY2k1allXeHNLSEJoY21WdWRDd2dhMlY1TENCdWIyUmxLVHRjYmx4dUlDQWdJQ0FnSUNCcFppQW9ibTlrWlNBOVBUMGdkVzVrWldacGJtVmtLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200N1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJ1YjJSbElDRTlQU0FuYjJKcVpXTjBKeUI4ZkNCdWIyUmxJRDA5UFNCdWRXeHNLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2FuTnZiaTV6ZEhKcGJtZHBabmtvYm05a1pTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnYVdZZ0tHbHpRWEp5WVhrb2JtOWtaU2twSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCdmRYUWdQU0JiWFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd095QnBJRHdnYm05a1pTNXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBkR1Z0SUQwZ2MzUnlhVzVuYVdaNUtHNXZaR1VzSUdrc0lHNXZaR1ZiYVYwc0lHeGxkbVZzS3pFcElIeDhJR3B6YjI0dWMzUnlhVzVuYVdaNUtHNTFiR3dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc5MWRDNXdkWE5vS0dsdVpHVnVkQ0FySUhOd1lXTmxJQ3NnYVhSbGJTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdKMXNuSUNzZ2IzVjBMbXB2YVc0b0p5d25LU0FySUdsdVpHVnVkQ0FySUNkZEp6dGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHpaV1Z1TG1sdVpHVjRUMllvYm05a1pTa2dJVDA5SUMweEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dONVkyeGxjeWtnY21WMGRYSnVJR3B6YjI0dWMzUnlhVzVuYVdaNUtDZGZYMk41WTJ4bFgxOG5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnVkhsd1pVVnljbTl5S0NkRGIyNTJaWEowYVc1bklHTnBjbU4xYkdGeUlITjBjblZqZEhWeVpTQjBieUJLVTA5T0p5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElITmxaVzR1Y0hWemFDaHViMlJsS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHdGxlWE1nUFNCdlltcGxZM1JMWlhsektHNXZaR1VwTG5OdmNuUW9ZMjF3SUNZbUlHTnRjQ2h1YjJSbEtTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdiM1YwSUQwZ1cxMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLSFpoY2lCcElEMGdNRHNnYVNBOElHdGxlWE11YkdWdVozUm9PeUJwS3lzcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnYTJWNUlEMGdhMlY1YzF0cFhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJZWElnZG1Gc2RXVWdQU0J6ZEhKcGJtZHBabmtvYm05a1pTd2dhMlY1TENCdWIyUmxXMnRsZVYwc0lHeGxkbVZzS3pFcE8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvSVhaaGJIVmxLU0JqYjI1MGFXNTFaVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnJaWGxXWVd4MVpTQTlJR3B6YjI0dWMzUnlhVzVuYVdaNUtHdGxlU2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0t5QmpiMnh2YmxObGNHRnlZWFJ2Y2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXJJSFpoYkhWbE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnZkWFF1Y0hWemFDaHBibVJsYm5RZ0t5QnpjR0ZqWlNBcklHdGxlVlpoYkhWbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSE5sWlc0dWMzQnNhV05sS0hObFpXNHVhVzVrWlhoUFppaHViMlJsS1N3Z01TazdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnSjNzbklDc2diM1YwTG1wdmFXNG9KeXduS1NBcklHbHVaR1Z1ZENBcklDZDlKenRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDBwS0hzZ0p5YzZJRzlpYWlCOUxDQW5KeXdnYjJKcUxDQXdLVHRjYm4wN1hHNWNiblpoY2lCcGMwRnljbUY1SUQwZ1FYSnlZWGt1YVhOQmNuSmhlU0I4ZkNCbWRXNWpkR2x2YmlBb2VDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCN2ZTNTBiMU4wY21sdVp5NWpZV3hzS0hncElEMDlQU0FuVzI5aWFtVmpkQ0JCY25KaGVWMG5PMXh1ZlR0Y2JseHVkbUZ5SUc5aWFtVmpkRXRsZVhNZ1BTQlBZbXBsWTNRdWEyVjVjeUI4ZkNCbWRXNWpkR2x2YmlBb2IySnFLU0I3WEc0Z0lDQWdkbUZ5SUdoaGN5QTlJRTlpYW1WamRDNXdjbTkwYjNSNWNHVXVhR0Z6VDNkdVVISnZjR1Z5ZEhrZ2ZId2dablZ1WTNScGIyNGdLQ2tnZXlCeVpYUjFjbTRnZEhKMVpTQjlPMXh1SUNBZ0lIWmhjaUJyWlhseklEMGdXMTA3WEc0Z0lDQWdabTl5SUNoMllYSWdhMlY1SUdsdUlHOWlhaWtnZTF4dUlDQWdJQ0FnSUNCcFppQW9hR0Z6TG1OaGJHd29iMkpxTENCclpYa3BLU0JyWlhsekxuQjFjMmdvYTJWNUtUdGNiaUFnSUNCOVhHNGdJQ0FnY21WMGRYSnVJR3RsZVhNN1hHNTlPMXh1SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN0lpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL2pzb24tc3RhYmxlLXN0cmluZ2lmeS9pbmRleC5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2pzb25pZnkvaW5kZXguanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9qc29uaWZ5L2luZGV4LmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcbmV2YWwoXFxcImV4cG9ydHMucGFyc2UgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2xpYi9wYXJzZSAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2pzb25pZnkvbGliL3BhcnNlLmpzXFxcXFxcXCIpO1xcXFxuZXhwb3J0cy5zdHJpbmdpZnkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2xpYi9zdHJpbmdpZnkgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9qc29uaWZ5L2xpYi9zdHJpbmdpZnkuanNcXFxcXFxcIik7XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12YW5OdmJtbG1lUzlwYm1SbGVDNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwycHpiMjVwWm5rdmFXNWtaWGd1YW5NL056WmpZaUpkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lKbGVIQnZjblJ6TG5CaGNuTmxJRDBnY21WeGRXbHlaU2duTGk5c2FXSXZjR0Z5YzJVbktUdGNibVY0Y0c5eWRITXVjM1J5YVc1bmFXWjVJRDBnY21WeGRXbHlaU2duTGk5c2FXSXZjM1J5YVc1bmFXWjVKeWs3WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3SWl3aWMyOTFjbU5sVW05dmRDSTZJaUo5XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvanNvbmlmeS9pbmRleC5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL2pzb25pZnkvbGliL3BhcnNlLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2pzb25pZnkvbGliL3BhcnNlLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcXG5cXG5ldmFsKFxcXCJ2YXIgYXQsIC8vIFRoZSBpbmRleCBvZiB0aGUgY3VycmVudCBjaGFyYWN0ZXJcXFxcbiAgICBjaCwgLy8gVGhlIGN1cnJlbnQgY2hhcmFjdGVyXFxcXG4gICAgZXNjYXBlZSA9IHtcXFxcbiAgICAgICAgJ1xcXFxcXFwiJzogICdcXFxcXFxcIicsXFxcXG4gICAgICAgICdcXFxcXFxcXFxcXFxcXFxcJzogJ1xcXFxcXFxcXFxcXFxcXFwnLFxcXFxuICAgICAgICAnLyc6ICAnLycsXFxcXG4gICAgICAgIGI6ICAgICdcXFxcXFxcXGInLFxcXFxuICAgICAgICBmOiAgICAnXFxcXFxcXFxmJyxcXFxcbiAgICAgICAgbjogICAgJ1xcXFxcXFxcbicsXFxcXG4gICAgICAgIHI6ICAgICdcXFxcXFxcXHInLFxcXFxuICAgICAgICB0OiAgICAnXFxcXFxcXFx0J1xcXFxuICAgIH0sXFxcXG4gICAgdGV4dCxcXFxcblxcXFxuICAgIGVycm9yID0gZnVuY3Rpb24gKG0pIHtcXFxcbiAgICAgICAgLy8gQ2FsbCBlcnJvciB3aGVuIHNvbWV0aGluZyBpcyB3cm9uZy5cXFxcbiAgICAgICAgdGhyb3cge1xcXFxuICAgICAgICAgICAgbmFtZTogICAgJ1N5bnRheEVycm9yJyxcXFxcbiAgICAgICAgICAgIG1lc3NhZ2U6IG0sXFxcXG4gICAgICAgICAgICBhdDogICAgICBhdCxcXFxcbiAgICAgICAgICAgIHRleHQ6ICAgIHRleHRcXFxcbiAgICAgICAgfTtcXFxcbiAgICB9LFxcXFxuICAgIFxcXFxuICAgIG5leHQgPSBmdW5jdGlvbiAoYykge1xcXFxuICAgICAgICAvLyBJZiBhIGMgcGFyYW1ldGVyIGlzIHByb3ZpZGVkLCB2ZXJpZnkgdGhhdCBpdCBtYXRjaGVzIHRoZSBjdXJyZW50IGNoYXJhY3Rlci5cXFxcbiAgICAgICAgaWYgKGMgJiYgYyAhPT0gY2gpIHtcXFxcbiAgICAgICAgICAgIGVycm9yKFxcXFxcXFwiRXhwZWN0ZWQgJ1xcXFxcXFwiICsgYyArIFxcXFxcXFwiJyBpbnN0ZWFkIG9mICdcXFxcXFxcIiArIGNoICsgXFxcXFxcXCInXFxcXFxcXCIpO1xcXFxuICAgICAgICB9XFxcXG4gICAgICAgIFxcXFxuICAgICAgICAvLyBHZXQgdGhlIG5leHQgY2hhcmFjdGVyLiBXaGVuIHRoZXJlIGFyZSBubyBtb3JlIGNoYXJhY3RlcnMsXFxcXG4gICAgICAgIC8vIHJldHVybiB0aGUgZW1wdHkgc3RyaW5nLlxcXFxuICAgICAgICBcXFxcbiAgICAgICAgY2ggPSB0ZXh0LmNoYXJBdChhdCk7XFxcXG4gICAgICAgIGF0ICs9IDE7XFxcXG4gICAgICAgIHJldHVybiBjaDtcXFxcbiAgICB9LFxcXFxuICAgIFxcXFxuICAgIG51bWJlciA9IGZ1bmN0aW9uICgpIHtcXFxcbiAgICAgICAgLy8gUGFyc2UgYSBudW1iZXIgdmFsdWUuXFxcXG4gICAgICAgIHZhciBudW1iZXIsXFxcXG4gICAgICAgICAgICBzdHJpbmcgPSAnJztcXFxcbiAgICAgICAgXFxcXG4gICAgICAgIGlmIChjaCA9PT0gJy0nKSB7XFxcXG4gICAgICAgICAgICBzdHJpbmcgPSAnLSc7XFxcXG4gICAgICAgICAgICBuZXh0KCctJyk7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgd2hpbGUgKGNoID49ICcwJyAmJiBjaCA8PSAnOScpIHtcXFxcbiAgICAgICAgICAgIHN0cmluZyArPSBjaDtcXFxcbiAgICAgICAgICAgIG5leHQoKTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBpZiAoY2ggPT09ICcuJykge1xcXFxuICAgICAgICAgICAgc3RyaW5nICs9ICcuJztcXFxcbiAgICAgICAgICAgIHdoaWxlIChuZXh0KCkgJiYgY2ggPj0gJzAnICYmIGNoIDw9ICc5Jykge1xcXFxuICAgICAgICAgICAgICAgIHN0cmluZyArPSBjaDtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBpZiAoY2ggPT09ICdlJyB8fCBjaCA9PT0gJ0UnKSB7XFxcXG4gICAgICAgICAgICBzdHJpbmcgKz0gY2g7XFxcXG4gICAgICAgICAgICBuZXh0KCk7XFxcXG4gICAgICAgICAgICBpZiAoY2ggPT09ICctJyB8fCBjaCA9PT0gJysnKSB7XFxcXG4gICAgICAgICAgICAgICAgc3RyaW5nICs9IGNoO1xcXFxuICAgICAgICAgICAgICAgIG5leHQoKTtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIHdoaWxlIChjaCA+PSAnMCcgJiYgY2ggPD0gJzknKSB7XFxcXG4gICAgICAgICAgICAgICAgc3RyaW5nICs9IGNoO1xcXFxuICAgICAgICAgICAgICAgIG5leHQoKTtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBudW1iZXIgPSArc3RyaW5nO1xcXFxuICAgICAgICBpZiAoIWlzRmluaXRlKG51bWJlcikpIHtcXFxcbiAgICAgICAgICAgIGVycm9yKFxcXFxcXFwiQmFkIG51bWJlclxcXFxcXFwiKTtcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgIHJldHVybiBudW1iZXI7XFxcXG4gICAgICAgIH1cXFxcbiAgICB9LFxcXFxuICAgIFxcXFxuICAgIHN0cmluZyA9IGZ1bmN0aW9uICgpIHtcXFxcbiAgICAgICAgLy8gUGFyc2UgYSBzdHJpbmcgdmFsdWUuXFxcXG4gICAgICAgIHZhciBoZXgsXFxcXG4gICAgICAgICAgICBpLFxcXFxuICAgICAgICAgICAgc3RyaW5nID0gJycsXFxcXG4gICAgICAgICAgICB1ZmZmZjtcXFxcbiAgICAgICAgXFxcXG4gICAgICAgIC8vIFdoZW4gcGFyc2luZyBmb3Igc3RyaW5nIHZhbHVlcywgd2UgbXVzdCBsb29rIGZvciBcXFxcXFxcIiBhbmQgXFxcXFxcXFwgY2hhcmFjdGVycy5cXFxcbiAgICAgICAgaWYgKGNoID09PSAnXFxcXFxcXCInKSB7XFxcXG4gICAgICAgICAgICB3aGlsZSAobmV4dCgpKSB7XFxcXG4gICAgICAgICAgICAgICAgaWYgKGNoID09PSAnXFxcXFxcXCInKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIG5leHQoKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0cmluZztcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNoID09PSAnXFxcXFxcXFxcXFxcXFxcXCcpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgbmV4dCgpO1xcXFxuICAgICAgICAgICAgICAgICAgICBpZiAoY2ggPT09ICd1Jykge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgdWZmZmYgPSAwO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IDQ7IGkgKz0gMSkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhleCA9IHBhcnNlSW50KG5leHQoKSwgMTYpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNGaW5pdGUoaGV4KSkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdWZmZmYgPSB1ZmZmZiAqIDE2ICsgaGV4O1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUodWZmZmYpO1xcXFxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBlc2NhcGVlW2NoXSA9PT0gJ3N0cmluZycpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cmluZyArPSBlc2NhcGVlW2NoXTtcXFxcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xcXFxuICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgc3RyaW5nICs9IGNoO1xcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBlcnJvcihcXFxcXFxcIkJhZCBzdHJpbmdcXFxcXFxcIik7XFxcXG4gICAgfSxcXFxcblxcXFxuICAgIHdoaXRlID0gZnVuY3Rpb24gKCkge1xcXFxuXFxcXG4vLyBTa2lwIHdoaXRlc3BhY2UuXFxcXG5cXFxcbiAgICAgICAgd2hpbGUgKGNoICYmIGNoIDw9ICcgJykge1xcXFxuICAgICAgICAgICAgbmV4dCgpO1xcXFxuICAgICAgICB9XFxcXG4gICAgfSxcXFxcblxcXFxuICAgIHdvcmQgPSBmdW5jdGlvbiAoKSB7XFxcXG5cXFxcbi8vIHRydWUsIGZhbHNlLCBvciBudWxsLlxcXFxuXFxcXG4gICAgICAgIHN3aXRjaCAoY2gpIHtcXFxcbiAgICAgICAgY2FzZSAndCc6XFxcXG4gICAgICAgICAgICBuZXh0KCd0Jyk7XFxcXG4gICAgICAgICAgICBuZXh0KCdyJyk7XFxcXG4gICAgICAgICAgICBuZXh0KCd1Jyk7XFxcXG4gICAgICAgICAgICBuZXh0KCdlJyk7XFxcXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXFxcbiAgICAgICAgY2FzZSAnZic6XFxcXG4gICAgICAgICAgICBuZXh0KCdmJyk7XFxcXG4gICAgICAgICAgICBuZXh0KCdhJyk7XFxcXG4gICAgICAgICAgICBuZXh0KCdsJyk7XFxcXG4gICAgICAgICAgICBuZXh0KCdzJyk7XFxcXG4gICAgICAgICAgICBuZXh0KCdlJyk7XFxcXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxcXG4gICAgICAgIGNhc2UgJ24nOlxcXFxuICAgICAgICAgICAgbmV4dCgnbicpO1xcXFxuICAgICAgICAgICAgbmV4dCgndScpO1xcXFxuICAgICAgICAgICAgbmV4dCgnbCcpO1xcXFxuICAgICAgICAgICAgbmV4dCgnbCcpO1xcXFxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgICAgZXJyb3IoXFxcXFxcXCJVbmV4cGVjdGVkICdcXFxcXFxcIiArIGNoICsgXFxcXFxcXCInXFxcXFxcXCIpO1xcXFxuICAgIH0sXFxcXG5cXFxcbiAgICB2YWx1ZSwgIC8vIFBsYWNlIGhvbGRlciBmb3IgdGhlIHZhbHVlIGZ1bmN0aW9uLlxcXFxuXFxcXG4gICAgYXJyYXkgPSBmdW5jdGlvbiAoKSB7XFxcXG5cXFxcbi8vIFBhcnNlIGFuIGFycmF5IHZhbHVlLlxcXFxuXFxcXG4gICAgICAgIHZhciBhcnJheSA9IFtdO1xcXFxuXFxcXG4gICAgICAgIGlmIChjaCA9PT0gJ1snKSB7XFxcXG4gICAgICAgICAgICBuZXh0KCdbJyk7XFxcXG4gICAgICAgICAgICB3aGl0ZSgpO1xcXFxuICAgICAgICAgICAgaWYgKGNoID09PSAnXScpIHtcXFxcbiAgICAgICAgICAgICAgICBuZXh0KCddJyk7XFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFycmF5OyAgIC8vIGVtcHR5IGFycmF5XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB3aGlsZSAoY2gpIHtcXFxcbiAgICAgICAgICAgICAgICBhcnJheS5wdXNoKHZhbHVlKCkpO1xcXFxuICAgICAgICAgICAgICAgIHdoaXRlKCk7XFxcXG4gICAgICAgICAgICAgICAgaWYgKGNoID09PSAnXScpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgbmV4dCgnXScpO1xcXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXJyYXk7XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgIG5leHQoJywnKTtcXFxcbiAgICAgICAgICAgICAgICB3aGl0ZSgpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIGVycm9yKFxcXFxcXFwiQmFkIGFycmF5XFxcXFxcXCIpO1xcXFxuICAgIH0sXFxcXG5cXFxcbiAgICBvYmplY3QgPSBmdW5jdGlvbiAoKSB7XFxcXG5cXFxcbi8vIFBhcnNlIGFuIG9iamVjdCB2YWx1ZS5cXFxcblxcXFxuICAgICAgICB2YXIga2V5LFxcXFxuICAgICAgICAgICAgb2JqZWN0ID0ge307XFxcXG5cXFxcbiAgICAgICAgaWYgKGNoID09PSAneycpIHtcXFxcbiAgICAgICAgICAgIG5leHQoJ3snKTtcXFxcbiAgICAgICAgICAgIHdoaXRlKCk7XFxcXG4gICAgICAgICAgICBpZiAoY2ggPT09ICd9Jykge1xcXFxuICAgICAgICAgICAgICAgIG5leHQoJ30nKTtcXFxcbiAgICAgICAgICAgICAgICByZXR1cm4gb2JqZWN0OyAgIC8vIGVtcHR5IG9iamVjdFxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgd2hpbGUgKGNoKSB7XFxcXG4gICAgICAgICAgICAgICAga2V5ID0gc3RyaW5nKCk7XFxcXG4gICAgICAgICAgICAgICAgd2hpdGUoKTtcXFxcbiAgICAgICAgICAgICAgICBuZXh0KCc6Jyk7XFxcXG4gICAgICAgICAgICAgICAgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSkge1xcXFxuICAgICAgICAgICAgICAgICAgICBlcnJvcignRHVwbGljYXRlIGtleSBcXFxcXFxcIicgKyBrZXkgKyAnXFxcXFxcXCInKTtcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgb2JqZWN0W2tleV0gPSB2YWx1ZSgpO1xcXFxuICAgICAgICAgICAgICAgIHdoaXRlKCk7XFxcXG4gICAgICAgICAgICAgICAgaWYgKGNoID09PSAnfScpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgbmV4dCgnfScpO1xcXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb2JqZWN0O1xcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICBuZXh0KCcsJyk7XFxcXG4gICAgICAgICAgICAgICAgd2hpdGUoKTtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBlcnJvcihcXFxcXFxcIkJhZCBvYmplY3RcXFxcXFxcIik7XFxcXG4gICAgfTtcXFxcblxcXFxudmFsdWUgPSBmdW5jdGlvbiAoKSB7XFxcXG5cXFxcbi8vIFBhcnNlIGEgSlNPTiB2YWx1ZS4gSXQgY291bGQgYmUgYW4gb2JqZWN0LCBhbiBhcnJheSwgYSBzdHJpbmcsIGEgbnVtYmVyLFxcXFxuLy8gb3IgYSB3b3JkLlxcXFxuXFxcXG4gICAgd2hpdGUoKTtcXFxcbiAgICBzd2l0Y2ggKGNoKSB7XFxcXG4gICAgY2FzZSAneyc6XFxcXG4gICAgICAgIHJldHVybiBvYmplY3QoKTtcXFxcbiAgICBjYXNlICdbJzpcXFxcbiAgICAgICAgcmV0dXJuIGFycmF5KCk7XFxcXG4gICAgY2FzZSAnXFxcXFxcXCInOlxcXFxuICAgICAgICByZXR1cm4gc3RyaW5nKCk7XFxcXG4gICAgY2FzZSAnLSc6XFxcXG4gICAgICAgIHJldHVybiBudW1iZXIoKTtcXFxcbiAgICBkZWZhdWx0OlxcXFxuICAgICAgICByZXR1cm4gY2ggPj0gJzAnICYmIGNoIDw9ICc5JyA/IG51bWJlcigpIDogd29yZCgpO1xcXFxuICAgIH1cXFxcbn07XFxcXG5cXFxcbi8vIFJldHVybiB0aGUganNvbl9wYXJzZSBmdW5jdGlvbi4gSXQgd2lsbCBoYXZlIGFjY2VzcyB0byBhbGwgb2YgdGhlIGFib3ZlXFxcXG4vLyBmdW5jdGlvbnMgYW5kIHZhcmlhYmxlcy5cXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc291cmNlLCByZXZpdmVyKSB7XFxcXG4gICAgdmFyIHJlc3VsdDtcXFxcbiAgICBcXFxcbiAgICB0ZXh0ID0gc291cmNlO1xcXFxuICAgIGF0ID0gMDtcXFxcbiAgICBjaCA9ICcgJztcXFxcbiAgICByZXN1bHQgPSB2YWx1ZSgpO1xcXFxuICAgIHdoaXRlKCk7XFxcXG4gICAgaWYgKGNoKSB7XFxcXG4gICAgICAgIGVycm9yKFxcXFxcXFwiU3ludGF4IGVycm9yXFxcXFxcXCIpO1xcXFxuICAgIH1cXFxcblxcXFxuICAgIC8vIElmIHRoZXJlIGlzIGEgcmV2aXZlciBmdW5jdGlvbiwgd2UgcmVjdXJzaXZlbHkgd2FsayB0aGUgbmV3IHN0cnVjdHVyZSxcXFxcbiAgICAvLyBwYXNzaW5nIGVhY2ggbmFtZS92YWx1ZSBwYWlyIHRvIHRoZSByZXZpdmVyIGZ1bmN0aW9uIGZvciBwb3NzaWJsZVxcXFxuICAgIC8vIHRyYW5zZm9ybWF0aW9uLCBzdGFydGluZyB3aXRoIGEgdGVtcG9yYXJ5IHJvb3Qgb2JqZWN0IHRoYXQgaG9sZHMgdGhlIHJlc3VsdFxcXFxuICAgIC8vIGluIGFuIGVtcHR5IGtleS4gSWYgdGhlcmUgaXMgbm90IGEgcmV2aXZlciBmdW5jdGlvbiwgd2Ugc2ltcGx5IHJldHVybiB0aGVcXFxcbiAgICAvLyByZXN1bHQuXFxcXG5cXFxcbiAgICByZXR1cm4gdHlwZW9mIHJldml2ZXIgPT09ICdmdW5jdGlvbicgPyAoZnVuY3Rpb24gd2Fsayhob2xkZXIsIGtleSkge1xcXFxuICAgICAgICB2YXIgaywgdiwgdmFsdWUgPSBob2xkZXJba2V5XTtcXFxcbiAgICAgICAgaWYgKHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcXFxcbiAgICAgICAgICAgIGZvciAoayBpbiB2YWx1ZSkge1xcXFxuICAgICAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIGspKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIHYgPSB3YWxrKHZhbHVlLCBrKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgaWYgKHYgIT09IHVuZGVmaW5lZCkge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVba10gPSB2O1xcXFxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHZhbHVlW2tdO1xcXFxuICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICAgIHJldHVybiByZXZpdmVyLmNhbGwoaG9sZGVyLCBrZXksIHZhbHVlKTtcXFxcbiAgICB9KHsnJzogcmVzdWx0fSwgJycpKSA6IHJlc3VsdDtcXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12YW5OdmJtbG1lUzlzYVdJdmNHRnljMlV1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTlxYzI5dWFXWjVMMnhwWWk5d1lYSnpaUzVxY3o4ME5EWTFJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW5aaGNpQmhkQ3dnTHk4Z1ZHaGxJR2x1WkdWNElHOW1JSFJvWlNCamRYSnlaVzUwSUdOb1lYSmhZM1JsY2x4dUlDQWdJR05vTENBdkx5QlVhR1VnWTNWeWNtVnVkQ0JqYUdGeVlXTjBaWEpjYmlBZ0lDQmxjMk5oY0dWbElEMGdlMXh1SUNBZ0lDQWdJQ0FuWENJbk9pQWdKMXdpSnl4Y2JpQWdJQ0FnSUNBZ0oxeGNYRnduT2lBblhGeGNYQ2NzWEc0Z0lDQWdJQ0FnSUNjdkp6b2dJQ2N2Snl4Y2JpQWdJQ0FnSUNBZ1lqb2dJQ0FnSjF4Y1lpY3NYRzRnSUNBZ0lDQWdJR1k2SUNBZ0lDZGNYR1luTEZ4dUlDQWdJQ0FnSUNCdU9pQWdJQ0FuWEZ4dUp5eGNiaUFnSUNBZ0lDQWdjam9nSUNBZ0oxeGNjaWNzWEc0Z0lDQWdJQ0FnSUhRNklDQWdJQ2RjWEhRblhHNGdJQ0FnZlN4Y2JpQWdJQ0IwWlhoMExGeHVYRzRnSUNBZ1pYSnliM0lnUFNCbWRXNWpkR2x2YmlBb2JTa2dlMXh1SUNBZ0lDQWdJQ0F2THlCRFlXeHNJR1Z5Y205eUlIZG9aVzRnYzI5dFpYUm9hVzVuSUdseklIZHliMjVuTGx4dUlDQWdJQ0FnSUNCMGFISnZkeUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsT2lBZ0lDQW5VM2x1ZEdGNFJYSnliM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiV1Z6YzJGblpUb2diU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lHRjBPaUFnSUNBZ0lHRjBMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2RHVjRkRG9nSUNBZ2RHVjRkRnh1SUNBZ0lDQWdJQ0I5TzF4dUlDQWdJSDBzWEc0Z0lDQWdYRzRnSUNBZ2JtVjRkQ0E5SUdaMWJtTjBhVzl1SUNoaktTQjdYRzRnSUNBZ0lDQWdJQzh2SUVsbUlHRWdZeUJ3WVhKaGJXVjBaWElnYVhNZ2NISnZkbWxrWldRc0lIWmxjbWxtZVNCMGFHRjBJR2wwSUcxaGRHTm9aWE1nZEdobElHTjFjbkpsYm5RZ1kyaGhjbUZqZEdWeUxseHVJQ0FnSUNBZ0lDQnBaaUFvWXlBbUppQmpJQ0U5UFNCamFDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pYSnliM0lvWENKRmVIQmxZM1JsWkNBblhDSWdLeUJqSUNzZ1hDSW5JR2x1YzNSbFlXUWdiMllnSjF3aUlDc2dZMmdnS3lCY0lpZGNJaWs3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ1hHNGdJQ0FnSUNBZ0lDOHZJRWRsZENCMGFHVWdibVY0ZENCamFHRnlZV04wWlhJdUlGZG9aVzRnZEdobGNtVWdZWEpsSUc1dklHMXZjbVVnWTJoaGNtRmpkR1Z5Y3l4Y2JpQWdJQ0FnSUNBZ0x5OGdjbVYwZFhKdUlIUm9aU0JsYlhCMGVTQnpkSEpwYm1jdVhHNGdJQ0FnSUNBZ0lGeHVJQ0FnSUNBZ0lDQmphQ0E5SUhSbGVIUXVZMmhoY2tGMEtHRjBLVHRjYmlBZ0lDQWdJQ0FnWVhRZ0t6MGdNVHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR05vTzF4dUlDQWdJSDBzWEc0Z0lDQWdYRzRnSUNBZ2JuVnRZbVZ5SUQwZ1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0F2THlCUVlYSnpaU0JoSUc1MWJXSmxjaUIyWVd4MVpTNWNiaUFnSUNBZ0lDQWdkbUZ5SUc1MWJXSmxjaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lITjBjbWx1WnlBOUlDY25PMXh1SUNBZ0lDQWdJQ0JjYmlBZ0lDQWdJQ0FnYVdZZ0tHTm9JRDA5UFNBbkxTY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lITjBjbWx1WnlBOUlDY3RKenRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWxlSFFvSnkwbktUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0IzYUdsc1pTQW9ZMmdnUGowZ0p6QW5JQ1ltSUdOb0lEdzlJQ2M1SnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYzNSeWFXNW5JQ3M5SUdOb08xeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1WNGRDZ3BPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUdsbUlDaGphQ0E5UFQwZ0p5NG5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkSEpwYm1jZ0t6MGdKeTRuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmhwYkdVZ0tHNWxlSFFvS1NBbUppQmphQ0ErUFNBbk1DY2dKaVlnWTJnZ1BEMGdKemtuS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUnlhVzVuSUNzOUlHTm9PMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR2xtSUNoamFDQTlQVDBnSjJVbklIeDhJR05vSUQwOVBTQW5SU2NwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSE4wY21sdVp5QXJQU0JqYUR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGphQ0E5UFQwZ0p5MG5JSHg4SUdOb0lEMDlQU0FuS3ljcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkSEpwYm1jZ0t6MGdZMmc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WNGRDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnZDJocGJHVWdLR05vSUQ0OUlDY3dKeUFtSmlCamFDQThQU0FuT1NjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkSEpwYm1jZ0t6MGdZMmc3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WNGRDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJRzUxYldKbGNpQTlJQ3R6ZEhKcGJtYzdYRzRnSUNBZ0lDQWdJR2xtSUNnaGFYTkdhVzVwZEdVb2JuVnRZbVZ5S1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWlhKeWIzSW9YQ0pDWVdRZ2JuVnRZbVZ5WENJcE8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzUxYldKbGNqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lIMHNYRzRnSUNBZ1hHNGdJQ0FnYzNSeWFXNW5JRDBnWm5WdVkzUnBiMjRnS0NrZ2UxeHVJQ0FnSUNBZ0lDQXZMeUJRWVhKelpTQmhJSE4wY21sdVp5QjJZV3gxWlM1Y2JpQWdJQ0FnSUNBZ2RtRnlJR2hsZUN4Y2JpQWdJQ0FnSUNBZ0lDQWdJR2tzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnpkSEpwYm1jZ1BTQW5KeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lIVm1abVptTzF4dUlDQWdJQ0FnSUNCY2JpQWdJQ0FnSUNBZ0x5OGdWMmhsYmlCd1lYSnphVzVuSUdadmNpQnpkSEpwYm1jZ2RtRnNkV1Z6TENCM1pTQnRkWE4wSUd4dmIyc2dabTl5SUZ3aUlHRnVaQ0JjWENCamFHRnlZV04wWlhKekxseHVJQ0FnSUNBZ0lDQnBaaUFvWTJnZ1BUMDlJQ2RjSWljcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhkb2FXeGxJQ2h1WlhoMEtDa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyZ2dQVDA5SUNkY0lpY3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVjRkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2MzUnlhVzVuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb1kyZ2dQVDA5SUNkY1hGeGNKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGgwS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoamFDQTlQVDBnSjNVbktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFabVptWmlBOUlEQTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iM0lnS0drZ1BTQXdPeUJwSUR3Z05Ec2dhU0FyUFNBeEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYUdWNElEMGdjR0Z5YzJWSmJuUW9ibVY0ZENncExDQXhOaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLQ0ZwYzBacGJtbDBaU2hvWlhncEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnlaV0ZyTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IxWm1abVppQTlJSFZtWm1abUlDb2dNVFlnS3lCb1pYZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpkSEpwYm1jZ0t6MGdVM1J5YVc1bkxtWnliMjFEYUdGeVEyOWtaU2gxWm1abVppazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2RIbHdaVzltSUdWelkyRndaV1ZiWTJoZElEMDlQU0FuYzNSeWFXNW5KeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzNSeWFXNW5JQ3M5SUdWelkyRndaV1ZiWTJoZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemRISnBibWNnS3owZ1kyZzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR1Z5Y205eUtGd2lRbUZrSUhOMGNtbHVaMXdpS1R0Y2JpQWdJQ0I5TEZ4dVhHNGdJQ0FnZDJocGRHVWdQU0JtZFc1amRHbHZiaUFvS1NCN1hHNWNiaTh2SUZOcmFYQWdkMmhwZEdWemNHRmpaUzVjYmx4dUlDQWdJQ0FnSUNCM2FHbHNaU0FvWTJnZ0ppWWdZMmdnUEQwZ0p5QW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVaWGgwS0NrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNCOUxGeHVYRzRnSUNBZ2QyOXlaQ0E5SUdaMWJtTjBhVzl1SUNncElIdGNibHh1THk4Z2RISjFaU3dnWm1Gc2MyVXNJRzl5SUc1MWJHd3VYRzVjYmlBZ0lDQWdJQ0FnYzNkcGRHTm9JQ2hqYUNrZ2UxeHVJQ0FnSUNBZ0lDQmpZWE5sSUNkMEp6cGNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGVIUW9KM1FuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0ozSW5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWxlSFFvSjNVbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGVIUW9KMlVuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQjBjblZsTzF4dUlDQWdJQ0FnSUNCallYTmxJQ2RtSnpwY2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0oyWW5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWxlSFFvSjJFbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUc1bGVIUW9KMnduS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0ozTW5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWxlSFFvSjJVbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJtWVd4elpUdGNiaUFnSUNBZ0lDQWdZMkZ6WlNBbmJpYzZYRzRnSUNBZ0lDQWdJQ0FnSUNCdVpYaDBLQ2R1SnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1WlhoMEtDZDFKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVaWGgwS0Nkc0p5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCdVpYaDBLQ2RzSnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdiblZzYkR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQmxjbkp2Y2loY0lsVnVaWGh3WldOMFpXUWdKMXdpSUNzZ1kyZ2dLeUJjSWlkY0lpazdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lIWmhiSFZsTENBZ0x5OGdVR3hoWTJVZ2FHOXNaR1Z5SUdadmNpQjBhR1VnZG1Gc2RXVWdablZ1WTNScGIyNHVYRzVjYmlBZ0lDQmhjbkpoZVNBOUlHWjFibU4wYVc5dUlDZ3BJSHRjYmx4dUx5OGdVR0Z5YzJVZ1lXNGdZWEp5WVhrZ2RtRnNkV1V1WEc1Y2JpQWdJQ0FnSUNBZ2RtRnlJR0Z5Y21GNUlEMGdXMTA3WEc1Y2JpQWdJQ0FnSUNBZ2FXWWdLR05vSUQwOVBTQW5XeWNwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0oxc25LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIZG9hWFJsS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyZ2dQVDA5SUNkZEp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0oxMG5LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdZWEp5WVhrN0lDQWdMeThnWlcxd2RIa2dZWEp5WVhsY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIZG9hV3hsSUNoamFDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0Z5Y21GNUxuQjFjMmdvZG1Gc2RXVW9LU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJocGRHVW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1kyZ2dQVDA5SUNkZEp5a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVpYaDBLQ2RkSnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmhjbkpoZVR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtVjRkQ2duTENjcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIZG9hWFJsS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ1pYSnliM0lvWENKQ1lXUWdZWEp5WVhsY0lpazdYRzRnSUNBZ2ZTeGNibHh1SUNBZ0lHOWlhbVZqZENBOUlHWjFibU4wYVc5dUlDZ3BJSHRjYmx4dUx5OGdVR0Z5YzJVZ1lXNGdiMkpxWldOMElIWmhiSFZsTGx4dVhHNGdJQ0FnSUNBZ0lIWmhjaUJyWlhrc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUWdQU0I3ZlR0Y2JseHVJQ0FnSUNBZ0lDQnBaaUFvWTJnZ1BUMDlJQ2Q3SnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnYm1WNGRDZ25leWNwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkMmhwZEdVb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGphQ0E5UFQwZ0ozMG5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYm1WNGRDZ25mU2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2WW1wbFkzUTdJQ0FnTHk4Z1pXMXdkSGtnYjJKcVpXTjBYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0IzYUdsc1pTQW9ZMmdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCclpYa2dQU0J6ZEhKcGJtY29LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYUdsMFpTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0p6b25LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1QySnFaV04wTG1oaGMwOTNibEJ5YjNCbGNuUjVMbU5oYkd3b2IySnFaV04wTENCclpYa3BLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHVnljbTl5S0NkRWRYQnNhV05oZEdVZ2EyVjVJRndpSnlBcklHdGxlU0FySUNkY0lpY3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2WW1wbFkzUmJhMlY1WFNBOUlIWmhiSFZsS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2QyaHBkR1VvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZMmdnUFQwOUlDZDlKeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGgwS0NkOUp5azdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ2WW1wbFkzUTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVsZUhRb0p5d25LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IzYUdsMFpTZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJR1Z5Y205eUtGd2lRbUZrSUc5aWFtVmpkRndpS1R0Y2JpQWdJQ0I5TzF4dVhHNTJZV3gxWlNBOUlHWjFibU4wYVc5dUlDZ3BJSHRjYmx4dUx5OGdVR0Z5YzJVZ1lTQktVMDlPSUhaaGJIVmxMaUJKZENCamIzVnNaQ0JpWlNCaGJpQnZZbXBsWTNRc0lHRnVJR0Z5Y21GNUxDQmhJSE4wY21sdVp5d2dZU0J1ZFcxaVpYSXNYRzR2THlCdmNpQmhJSGR2Y21RdVhHNWNiaUFnSUNCM2FHbDBaU2dwTzF4dUlDQWdJSE4zYVhSamFDQW9ZMmdwSUh0Y2JpQWdJQ0JqWVhObElDZDdKenBjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJRzlpYW1WamRDZ3BPMXh1SUNBZ0lHTmhjMlVnSjFzbk9seHVJQ0FnSUNBZ0lDQnlaWFIxY200Z1lYSnlZWGtvS1R0Y2JpQWdJQ0JqWVhObElDZGNJaWM2WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJ6ZEhKcGJtY29LVHRjYmlBZ0lDQmpZWE5sSUNjdEp6cGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHNTFiV0psY2lncE8xeHVJQ0FnSUdSbFptRjFiSFE2WEc0Z0lDQWdJQ0FnSUhKbGRIVnliaUJqYUNBK1BTQW5NQ2NnSmlZZ1kyZ2dQRDBnSnprbklEOGdiblZ0WW1WeUtDa2dPaUIzYjNKa0tDazdYRzRnSUNBZ2ZWeHVmVHRjYmx4dUx5OGdVbVYwZFhKdUlIUm9aU0JxYzI5dVgzQmhjbk5sSUdaMWJtTjBhVzl1TGlCSmRDQjNhV3hzSUdoaGRtVWdZV05qWlhOeklIUnZJR0ZzYkNCdlppQjBhR1VnWVdKdmRtVmNiaTh2SUdaMWJtTjBhVzl1Y3lCaGJtUWdkbUZ5YVdGaWJHVnpMbHh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1SUNoemIzVnlZMlVzSUhKbGRtbDJaWElwSUh0Y2JpQWdJQ0IyWVhJZ2NtVnpkV3gwTzF4dUlDQWdJRnh1SUNBZ0lIUmxlSFFnUFNCemIzVnlZMlU3WEc0Z0lDQWdZWFFnUFNBd08xeHVJQ0FnSUdOb0lEMGdKeUFuTzF4dUlDQWdJSEpsYzNWc2RDQTlJSFpoYkhWbEtDazdYRzRnSUNBZ2QyaHBkR1VvS1R0Y2JpQWdJQ0JwWmlBb1kyZ3BJSHRjYmlBZ0lDQWdJQ0FnWlhKeWIzSW9YQ0pUZVc1MFlYZ2daWEp5YjNKY0lpazdYRzRnSUNBZ2ZWeHVYRzRnSUNBZ0x5OGdTV1lnZEdobGNtVWdhWE1nWVNCeVpYWnBkbVZ5SUdaMWJtTjBhVzl1TENCM1pTQnlaV04xY25OcGRtVnNlU0IzWVd4cklIUm9aU0J1WlhjZ2MzUnlkV04wZFhKbExGeHVJQ0FnSUM4dklIQmhjM05wYm1jZ1pXRmphQ0J1WVcxbEwzWmhiSFZsSUhCaGFYSWdkRzhnZEdobElISmxkbWwyWlhJZ1puVnVZM1JwYjI0Z1ptOXlJSEJ2YzNOcFlteGxYRzRnSUNBZ0x5OGdkSEpoYm5ObWIzSnRZWFJwYjI0c0lITjBZWEowYVc1bklIZHBkR2dnWVNCMFpXMXdiM0poY25rZ2NtOXZkQ0J2WW1wbFkzUWdkR2hoZENCb2IyeGtjeUIwYUdVZ2NtVnpkV3gwWEc0Z0lDQWdMeThnYVc0Z1lXNGdaVzF3ZEhrZ2EyVjVMaUJKWmlCMGFHVnlaU0JwY3lCdWIzUWdZU0J5WlhacGRtVnlJR1oxYm1OMGFXOXVMQ0IzWlNCemFXMXdiSGtnY21WMGRYSnVJSFJvWlZ4dUlDQWdJQzh2SUhKbGMzVnNkQzVjYmx4dUlDQWdJSEpsZEhWeWJpQjBlWEJsYjJZZ2NtVjJhWFpsY2lBOVBUMGdKMloxYm1OMGFXOXVKeUEvSUNobWRXNWpkR2x2YmlCM1lXeHJLR2h2YkdSbGNpd2dhMlY1S1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUJyTENCMkxDQjJZV3gxWlNBOUlHaHZiR1JsY2x0clpYbGRPMXh1SUNBZ0lDQWdJQ0JwWmlBb2RtRnNkV1VnSmlZZ2RIbHdaVzltSUhaaGJIVmxJRDA5UFNBbmIySnFaV04wSnlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnWm05eUlDaHJJR2x1SUhaaGJIVmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tFOWlhbVZqZEM1d2NtOTBiM1I1Y0dVdWFHRnpUM2R1VUhKdmNHVnlkSGt1WTJGc2JDaDJZV3gxWlN3Z2F5a3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RpQTlJSGRoYkdzb2RtRnNkV1VzSUdzcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2RpQWhQVDBnZFc1a1pXWnBibVZrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVnRyWFNBOUlIWTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdkbUZzZFdWYmExMDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2NtVjBkWEp1SUhKbGRtbDJaWEl1WTJGc2JDaG9iMnhrWlhJc0lHdGxlU3dnZG1Gc2RXVXBPMXh1SUNBZ0lIMG9leWNuT2lCeVpYTjFiSFI5TENBbkp5a3BJRG9nY21WemRXeDBPMXh1ZlR0Y2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlmUT09XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvanNvbmlmeS9saWIvcGFyc2UuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9qc29uaWZ5L2xpYi9zdHJpbmdpZnkuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2pzb25pZnkvbGliL3N0cmluZ2lmeS5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xcblxcbmV2YWwoXFxcInZhciBjeCA9IC9bXFxcXFxcXFx1MDAwMFxcXFxcXFxcdTAwYWRcXFxcXFxcXHUwNjAwLVxcXFxcXFxcdTA2MDRcXFxcXFxcXHUwNzBmXFxcXFxcXFx1MTdiNFxcXFxcXFxcdTE3YjVcXFxcXFxcXHUyMDBjLVxcXFxcXFxcdTIwMGZcXFxcXFxcXHUyMDI4LVxcXFxcXFxcdTIwMmZcXFxcXFxcXHUyMDYwLVxcXFxcXFxcdTIwNmZcXFxcXFxcXHVmZWZmXFxcXFxcXFx1ZmZmMC1cXFxcXFxcXHVmZmZmXS9nLFxcXFxuICAgIGVzY2FwYWJsZSA9IC9bXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXCJcXFxcXFxcXHgwMC1cXFxcXFxcXHgxZlxcXFxcXFxceDdmLVxcXFxcXFxceDlmXFxcXFxcXFx1MDBhZFxcXFxcXFxcdTA2MDAtXFxcXFxcXFx1MDYwNFxcXFxcXFxcdTA3MGZcXFxcXFxcXHUxN2I0XFxcXFxcXFx1MTdiNVxcXFxcXFxcdTIwMGMtXFxcXFxcXFx1MjAwZlxcXFxcXFxcdTIwMjgtXFxcXFxcXFx1MjAyZlxcXFxcXFxcdTIwNjAtXFxcXFxcXFx1MjA2ZlxcXFxcXFxcdWZlZmZcXFxcXFxcXHVmZmYwLVxcXFxcXFxcdWZmZmZdL2csXFxcXG4gICAgZ2FwLFxcXFxuICAgIGluZGVudCxcXFxcbiAgICBtZXRhID0geyAgICAvLyB0YWJsZSBvZiBjaGFyYWN0ZXIgc3Vic3RpdHV0aW9uc1xcXFxuICAgICAgICAnXFxcXFxcXFxiJzogJ1xcXFxcXFxcXFxcXFxcXFxiJyxcXFxcbiAgICAgICAgJ1xcXFxcXFxcdCc6ICdcXFxcXFxcXFxcXFxcXFxcdCcsXFxcXG4gICAgICAgICdcXFxcXFxcXG4nOiAnXFxcXFxcXFxcXFxcXFxcXG4nLFxcXFxuICAgICAgICAnXFxcXFxcXFxmJzogJ1xcXFxcXFxcXFxcXFxcXFxmJyxcXFxcbiAgICAgICAgJ1xcXFxcXFxccic6ICdcXFxcXFxcXFxcXFxcXFxccicsXFxcXG4gICAgICAgICdcXFxcXFxcIicgOiAnXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwiJyxcXFxcbiAgICAgICAgJ1xcXFxcXFxcXFxcXFxcXFwnOiAnXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFwnXFxcXG4gICAgfSxcXFxcbiAgICByZXA7XFxcXG5cXFxcbmZ1bmN0aW9uIHF1b3RlKHN0cmluZykge1xcXFxuICAgIC8vIElmIHRoZSBzdHJpbmcgY29udGFpbnMgbm8gY29udHJvbCBjaGFyYWN0ZXJzLCBubyBxdW90ZSBjaGFyYWN0ZXJzLCBhbmQgbm9cXFxcbiAgICAvLyBiYWNrc2xhc2ggY2hhcmFjdGVycywgdGhlbiB3ZSBjYW4gc2FmZWx5IHNsYXAgc29tZSBxdW90ZXMgYXJvdW5kIGl0LlxcXFxuICAgIC8vIE90aGVyd2lzZSB3ZSBtdXN0IGFsc28gcmVwbGFjZSB0aGUgb2ZmZW5kaW5nIGNoYXJhY3RlcnMgd2l0aCBzYWZlIGVzY2FwZVxcXFxuICAgIC8vIHNlcXVlbmNlcy5cXFxcbiAgICBcXFxcbiAgICBlc2NhcGFibGUubGFzdEluZGV4ID0gMDtcXFxcbiAgICByZXR1cm4gZXNjYXBhYmxlLnRlc3Qoc3RyaW5nKSA/ICdcXFxcXFxcIicgKyBzdHJpbmcucmVwbGFjZShlc2NhcGFibGUsIGZ1bmN0aW9uIChhKSB7XFxcXG4gICAgICAgIHZhciBjID0gbWV0YVthXTtcXFxcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBjID09PSAnc3RyaW5nJyA/IGMgOlxcXFxuICAgICAgICAgICAgJ1xcXFxcXFxcXFxcXFxcXFx1JyArICgnMDAwMCcgKyBhLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpKS5zbGljZSgtNCk7XFxcXG4gICAgfSkgKyAnXFxcXFxcXCInIDogJ1xcXFxcXFwiJyArIHN0cmluZyArICdcXFxcXFxcIic7XFxcXG59XFxcXG5cXFxcbmZ1bmN0aW9uIHN0cihrZXksIGhvbGRlcikge1xcXFxuICAgIC8vIFByb2R1Y2UgYSBzdHJpbmcgZnJvbSBob2xkZXJba2V5XS5cXFxcbiAgICB2YXIgaSwgICAgICAgICAgLy8gVGhlIGxvb3AgY291bnRlci5cXFxcbiAgICAgICAgaywgICAgICAgICAgLy8gVGhlIG1lbWJlciBrZXkuXFxcXG4gICAgICAgIHYsICAgICAgICAgIC8vIFRoZSBtZW1iZXIgdmFsdWUuXFxcXG4gICAgICAgIGxlbmd0aCxcXFxcbiAgICAgICAgbWluZCA9IGdhcCxcXFxcbiAgICAgICAgcGFydGlhbCxcXFxcbiAgICAgICAgdmFsdWUgPSBob2xkZXJba2V5XTtcXFxcbiAgICBcXFxcbiAgICAvLyBJZiB0aGUgdmFsdWUgaGFzIGEgdG9KU09OIG1ldGhvZCwgY2FsbCBpdCB0byBvYnRhaW4gYSByZXBsYWNlbWVudCB2YWx1ZS5cXFxcbiAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxcXFxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlLnRvSlNPTiA9PT0gJ2Z1bmN0aW9uJykge1xcXFxuICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvSlNPTihrZXkpO1xcXFxuICAgIH1cXFxcbiAgICBcXFxcbiAgICAvLyBJZiB3ZSB3ZXJlIGNhbGxlZCB3aXRoIGEgcmVwbGFjZXIgZnVuY3Rpb24sIHRoZW4gY2FsbCB0aGUgcmVwbGFjZXIgdG9cXFxcbiAgICAvLyBvYnRhaW4gYSByZXBsYWNlbWVudCB2YWx1ZS5cXFxcbiAgICBpZiAodHlwZW9mIHJlcCA9PT0gJ2Z1bmN0aW9uJykge1xcXFxuICAgICAgICB2YWx1ZSA9IHJlcC5jYWxsKGhvbGRlciwga2V5LCB2YWx1ZSk7XFxcXG4gICAgfVxcXFxuICAgIFxcXFxuICAgIC8vIFdoYXQgaGFwcGVucyBuZXh0IGRlcGVuZHMgb24gdGhlIHZhbHVlJ3MgdHlwZS5cXFxcbiAgICBzd2l0Y2ggKHR5cGVvZiB2YWx1ZSkge1xcXFxuICAgICAgICBjYXNlICdzdHJpbmcnOlxcXFxuICAgICAgICAgICAgcmV0dXJuIHF1b3RlKHZhbHVlKTtcXFxcbiAgICAgICAgXFxcXG4gICAgICAgIGNhc2UgJ251bWJlcic6XFxcXG4gICAgICAgICAgICAvLyBKU09OIG51bWJlcnMgbXVzdCBiZSBmaW5pdGUuIEVuY29kZSBub24tZmluaXRlIG51bWJlcnMgYXMgbnVsbC5cXFxcbiAgICAgICAgICAgIHJldHVybiBpc0Zpbml0ZSh2YWx1ZSkgPyBTdHJpbmcodmFsdWUpIDogJ251bGwnO1xcXFxuICAgICAgICBcXFxcbiAgICAgICAgY2FzZSAnYm9vbGVhbic6XFxcXG4gICAgICAgIGNhc2UgJ251bGwnOlxcXFxuICAgICAgICAgICAgLy8gSWYgdGhlIHZhbHVlIGlzIGEgYm9vbGVhbiBvciBudWxsLCBjb252ZXJ0IGl0IHRvIGEgc3RyaW5nLiBOb3RlOlxcXFxuICAgICAgICAgICAgLy8gdHlwZW9mIG51bGwgZG9lcyBub3QgcHJvZHVjZSAnbnVsbCcuIFRoZSBjYXNlIGlzIGluY2x1ZGVkIGhlcmUgaW5cXFxcbiAgICAgICAgICAgIC8vIHRoZSByZW1vdGUgY2hhbmNlIHRoYXQgdGhpcyBnZXRzIGZpeGVkIHNvbWVkYXkuXFxcXG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcXFxcbiAgICAgICAgICAgIFxcXFxuICAgICAgICBjYXNlICdvYmplY3QnOlxcXFxuICAgICAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuICdudWxsJztcXFxcbiAgICAgICAgICAgIGdhcCArPSBpbmRlbnQ7XFxcXG4gICAgICAgICAgICBwYXJ0aWFsID0gW107XFxcXG4gICAgICAgICAgICBcXFxcbiAgICAgICAgICAgIC8vIEFycmF5LmlzQXJyYXlcXFxcbiAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KHZhbHVlKSA9PT0gJ1tvYmplY3QgQXJyYXldJykge1xcXFxuICAgICAgICAgICAgICAgIGxlbmd0aCA9IHZhbHVlLmxlbmd0aDtcXFxcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgcGFydGlhbFtpXSA9IHN0cihpLCB2YWx1ZSkgfHwgJ251bGwnO1xcXFxuICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICBcXFxcbiAgICAgICAgICAgICAgICAvLyBKb2luIGFsbCBvZiB0aGUgZWxlbWVudHMgdG9nZXRoZXIsIHNlcGFyYXRlZCB3aXRoIGNvbW1hcywgYW5kXFxcXG4gICAgICAgICAgICAgICAgLy8gd3JhcCB0aGVtIGluIGJyYWNrZXRzLlxcXFxuICAgICAgICAgICAgICAgIHYgPSBwYXJ0aWFsLmxlbmd0aCA9PT0gMCA/ICdbXScgOiBnYXAgP1xcXFxuICAgICAgICAgICAgICAgICAgICAnW1xcXFxcXFxcbicgKyBnYXAgKyBwYXJ0aWFsLmpvaW4oJyxcXFxcXFxcXG4nICsgZ2FwKSArICdcXFxcXFxcXG4nICsgbWluZCArICddJyA6XFxcXG4gICAgICAgICAgICAgICAgICAgICdbJyArIHBhcnRpYWwuam9pbignLCcpICsgJ10nO1xcXFxuICAgICAgICAgICAgICAgIGdhcCA9IG1pbmQ7XFxcXG4gICAgICAgICAgICAgICAgcmV0dXJuIHY7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBcXFxcbiAgICAgICAgICAgIC8vIElmIHRoZSByZXBsYWNlciBpcyBhbiBhcnJheSwgdXNlIGl0IHRvIHNlbGVjdCB0aGUgbWVtYmVycyB0byBiZVxcXFxuICAgICAgICAgICAgLy8gc3RyaW5naWZpZWQuXFxcXG4gICAgICAgICAgICBpZiAocmVwICYmIHR5cGVvZiByZXAgPT09ICdvYmplY3QnKSB7XFxcXG4gICAgICAgICAgICAgICAgbGVuZ3RoID0gcmVwLmxlbmd0aDtcXFxcbiAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpICs9IDEpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgayA9IHJlcFtpXTtcXFxcbiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBrID09PSAnc3RyaW5nJykge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgdiA9IHN0cihrLCB2YWx1ZSk7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodikge1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRpYWwucHVzaChxdW90ZShrKSArIChnYXAgPyAnOiAnIDogJzonKSArIHYpO1xcXFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgLy8gT3RoZXJ3aXNlLCBpdGVyYXRlIHRocm91Z2ggYWxsIG9mIHRoZSBrZXlzIGluIHRoZSBvYmplY3QuXFxcXG4gICAgICAgICAgICAgICAgZm9yIChrIGluIHZhbHVlKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIGspKSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB2ID0gc3RyKGssIHZhbHVlKTtcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2KSB7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFydGlhbC5wdXNoKHF1b3RlKGspICsgKGdhcCA/ICc6ICcgOiAnOicpICsgdik7XFxcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICBcXFxcbiAgICAgICAgLy8gSm9pbiBhbGwgb2YgdGhlIG1lbWJlciB0ZXh0cyB0b2dldGhlciwgc2VwYXJhdGVkIHdpdGggY29tbWFzLFxcXFxuICAgICAgICAvLyBhbmQgd3JhcCB0aGVtIGluIGJyYWNlcy5cXFxcblxcXFxuICAgICAgICB2ID0gcGFydGlhbC5sZW5ndGggPT09IDAgPyAne30nIDogZ2FwID9cXFxcbiAgICAgICAgICAgICd7XFxcXFxcXFxuJyArIGdhcCArIHBhcnRpYWwuam9pbignLFxcXFxcXFxcbicgKyBnYXApICsgJ1xcXFxcXFxcbicgKyBtaW5kICsgJ30nIDpcXFxcbiAgICAgICAgICAgICd7JyArIHBhcnRpYWwuam9pbignLCcpICsgJ30nO1xcXFxuICAgICAgICBnYXAgPSBtaW5kO1xcXFxuICAgICAgICByZXR1cm4gdjtcXFxcbiAgICB9XFxcXG59XFxcXG5cXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlLCByZXBsYWNlciwgc3BhY2UpIHtcXFxcbiAgICB2YXIgaTtcXFxcbiAgICBnYXAgPSAnJztcXFxcbiAgICBpbmRlbnQgPSAnJztcXFxcbiAgICBcXFxcbiAgICAvLyBJZiB0aGUgc3BhY2UgcGFyYW1ldGVyIGlzIGEgbnVtYmVyLCBtYWtlIGFuIGluZGVudCBzdHJpbmcgY29udGFpbmluZyB0aGF0XFxcXG4gICAgLy8gbWFueSBzcGFjZXMuXFxcXG4gICAgaWYgKHR5cGVvZiBzcGFjZSA9PT0gJ251bWJlcicpIHtcXFxcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IHNwYWNlOyBpICs9IDEpIHtcXFxcbiAgICAgICAgICAgIGluZGVudCArPSAnICc7XFxcXG4gICAgICAgIH1cXFxcbiAgICB9XFxcXG4gICAgLy8gSWYgdGhlIHNwYWNlIHBhcmFtZXRlciBpcyBhIHN0cmluZywgaXQgd2lsbCBiZSB1c2VkIGFzIHRoZSBpbmRlbnQgc3RyaW5nLlxcXFxuICAgIGVsc2UgaWYgKHR5cGVvZiBzcGFjZSA9PT0gJ3N0cmluZycpIHtcXFxcbiAgICAgICAgaW5kZW50ID0gc3BhY2U7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgLy8gSWYgdGhlcmUgaXMgYSByZXBsYWNlciwgaXQgbXVzdCBiZSBhIGZ1bmN0aW9uIG9yIGFuIGFycmF5LlxcXFxuICAgIC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3IuXFxcXG4gICAgcmVwID0gcmVwbGFjZXI7XFxcXG4gICAgaWYgKHJlcGxhY2VyICYmIHR5cGVvZiByZXBsYWNlciAhPT0gJ2Z1bmN0aW9uJ1xcXFxuICAgICYmICh0eXBlb2YgcmVwbGFjZXIgIT09ICdvYmplY3QnIHx8IHR5cGVvZiByZXBsYWNlci5sZW5ndGggIT09ICdudW1iZXInKSkge1xcXFxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0pTT04uc3RyaW5naWZ5Jyk7XFxcXG4gICAgfVxcXFxuICAgIFxcXFxuICAgIC8vIE1ha2UgYSBmYWtlIHJvb3Qgb2JqZWN0IGNvbnRhaW5pbmcgb3VyIHZhbHVlIHVuZGVyIHRoZSBrZXkgb2YgJycuXFxcXG4gICAgLy8gUmV0dXJuIHRoZSByZXN1bHQgb2Ygc3RyaW5naWZ5aW5nIHRoZSB2YWx1ZS5cXFxcbiAgICByZXR1cm4gc3RyKCcnLCB7Jyc6IHZhbHVlfSk7XFxcXG59O1xcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdmFuTnZibWxtZVM5c2FXSXZjM1J5YVc1bmFXWjVMbXB6TG1weklpd2ljMjkxY21ObGN5STZXeUozWldKd1lXTnJPaTh2YVcxcWIzbFNVRU12TGk5dWIyUmxYMjF2WkhWc1pYTXZhbk52Ym1sbWVTOXNhV0l2YzNSeWFXNW5hV1o1TG1welAySTRaalFpWFN3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaWRtRnlJR040SUQwZ0wxdGNYSFV3TURBd1hGeDFNREJoWkZ4Y2RUQTJNREF0WEZ4MU1EWXdORnhjZFRBM01HWmNYSFV4TjJJMFhGeDFNVGRpTlZ4Y2RUSXdNR010WEZ4MU1qQXdabHhjZFRJd01qZ3RYRngxTWpBeVpseGNkVEl3TmpBdFhGeDFNakEyWmx4Y2RXWmxabVpjWEhWbVptWXdMVnhjZFdabVptWmRMMmNzWEc0Z0lDQWdaWE5qWVhCaFlteGxJRDBnTDF0Y1hGeGNYRnhjSWx4Y2VEQXdMVnhjZURGbVhGeDROMll0WEZ4NE9XWmNYSFV3TUdGa1hGeDFNRFl3TUMxY1hIVXdOakEwWEZ4MU1EY3dabHhjZFRFM1lqUmNYSFV4TjJJMVhGeDFNakF3WXkxY1hIVXlNREJtWEZ4MU1qQXlPQzFjWEhVeU1ESm1YRngxTWpBMk1DMWNYSFV5TURabVhGeDFabVZtWmx4Y2RXWm1aakF0WEZ4MVptWm1abDB2Wnl4Y2JpQWdJQ0JuWVhBc1hHNGdJQ0FnYVc1a1pXNTBMRnh1SUNBZ0lHMWxkR0VnUFNCN0lDQWdJQzh2SUhSaFlteGxJRzltSUdOb1lYSmhZM1JsY2lCemRXSnpkR2wwZFhScGIyNXpYRzRnSUNBZ0lDQWdJQ2RjWEdJbk9pQW5YRnhjWEdJbkxGeHVJQ0FnSUNBZ0lDQW5YRngwSnpvZ0oxeGNYRngwSnl4Y2JpQWdJQ0FnSUNBZ0oxeGNiaWM2SUNkY1hGeGNiaWNzWEc0Z0lDQWdJQ0FnSUNkY1hHWW5PaUFuWEZ4Y1hHWW5MRnh1SUNBZ0lDQWdJQ0FuWEZ4eUp6b2dKMXhjWEZ4eUp5eGNiaUFnSUNBZ0lDQWdKMXdpSnlBNklDZGNYRnhjWENJbkxGeHVJQ0FnSUNBZ0lDQW5YRnhjWENjNklDZGNYRnhjWEZ4Y1hDZGNiaUFnSUNCOUxGeHVJQ0FnSUhKbGNEdGNibHh1Wm5WdVkzUnBiMjRnY1hWdmRHVW9jM1J5YVc1bktTQjdYRzRnSUNBZ0x5OGdTV1lnZEdobElITjBjbWx1WnlCamIyNTBZV2x1Y3lCdWJ5QmpiMjUwY205c0lHTm9ZWEpoWTNSbGNuTXNJRzV2SUhGMWIzUmxJR05vWVhKaFkzUmxjbk1zSUdGdVpDQnViMXh1SUNBZ0lDOHZJR0poWTJ0emJHRnphQ0JqYUdGeVlXTjBaWEp6TENCMGFHVnVJSGRsSUdOaGJpQnpZV1psYkhrZ2MyeGhjQ0J6YjIxbElIRjFiM1JsY3lCaGNtOTFibVFnYVhRdVhHNGdJQ0FnTHk4Z1QzUm9aWEozYVhObElIZGxJRzExYzNRZ1lXeHpieUJ5WlhCc1lXTmxJSFJvWlNCdlptWmxibVJwYm1jZ1kyaGhjbUZqZEdWeWN5QjNhWFJvSUhOaFptVWdaWE5qWVhCbFhHNGdJQ0FnTHk4Z2MyVnhkV1Z1WTJWekxseHVJQ0FnSUZ4dUlDQWdJR1Z6WTJGd1lXSnNaUzVzWVhOMFNXNWtaWGdnUFNBd08xeHVJQ0FnSUhKbGRIVnliaUJsYzJOaGNHRmliR1V1ZEdWemRDaHpkSEpwYm1jcElEOGdKMXdpSnlBcklITjBjbWx1Wnk1eVpYQnNZV05sS0dWelkyRndZV0pzWlN3Z1puVnVZM1JwYjI0Z0tHRXBJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHTWdQU0J0WlhSaFcyRmRPMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSGx3Wlc5bUlHTWdQVDA5SUNkemRISnBibWNuSUQ4Z1l5QTZYRzRnSUNBZ0lDQWdJQ0FnSUNBblhGeGNYSFVuSUNzZ0tDY3dNREF3SnlBcklHRXVZMmhoY2tOdlpHVkJkQ2d3S1M1MGIxTjBjbWx1WnlneE5pa3BMbk5zYVdObEtDMDBLVHRjYmlBZ0lDQjlLU0FySUNkY0lpY2dPaUFuWENJbklDc2djM1J5YVc1bklDc2dKMXdpSnp0Y2JuMWNibHh1Wm5WdVkzUnBiMjRnYzNSeUtHdGxlU3dnYUc5c1pHVnlLU0I3WEc0Z0lDQWdMeThnVUhKdlpIVmpaU0JoSUhOMGNtbHVaeUJtY205dElHaHZiR1JsY2x0clpYbGRMbHh1SUNBZ0lIWmhjaUJwTENBZ0lDQWdJQ0FnSUNBdkx5QlVhR1VnYkc5dmNDQmpiM1Z1ZEdWeUxseHVJQ0FnSUNBZ0lDQnJMQ0FnSUNBZ0lDQWdJQ0F2THlCVWFHVWdiV1Z0WW1WeUlHdGxlUzVjYmlBZ0lDQWdJQ0FnZGl3Z0lDQWdJQ0FnSUNBZ0x5OGdWR2hsSUcxbGJXSmxjaUIyWVd4MVpTNWNiaUFnSUNBZ0lDQWdiR1Z1WjNSb0xGeHVJQ0FnSUNBZ0lDQnRhVzVrSUQwZ1oyRndMRnh1SUNBZ0lDQWdJQ0J3WVhKMGFXRnNMRnh1SUNBZ0lDQWdJQ0IyWVd4MVpTQTlJR2h2YkdSbGNsdHJaWGxkTzF4dUlDQWdJRnh1SUNBZ0lDOHZJRWxtSUhSb1pTQjJZV3gxWlNCb1lYTWdZU0IwYjBwVFQwNGdiV1YwYUc5a0xDQmpZV3hzSUdsMElIUnZJRzlpZEdGcGJpQmhJSEpsY0d4aFkyVnRaVzUwSUhaaGJIVmxMbHh1SUNBZ0lHbG1JQ2gyWVd4MVpTQW1KaUIwZVhCbGIyWWdkbUZzZFdVZ1BUMDlJQ2R2WW1wbFkzUW5JQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsYjJZZ2RtRnNkV1V1ZEc5S1UwOU9JRDA5UFNBblpuVnVZM1JwYjI0bktTQjdYRzRnSUNBZ0lDQWdJSFpoYkhWbElEMGdkbUZzZFdVdWRHOUtVMDlPS0d0bGVTazdYRzRnSUNBZ2ZWeHVJQ0FnSUZ4dUlDQWdJQzh2SUVsbUlIZGxJSGRsY21VZ1kyRnNiR1ZrSUhkcGRHZ2dZU0J5WlhCc1lXTmxjaUJtZFc1amRHbHZiaXdnZEdobGJpQmpZV3hzSUhSb1pTQnlaWEJzWVdObGNpQjBiMXh1SUNBZ0lDOHZJRzlpZEdGcGJpQmhJSEpsY0d4aFkyVnRaVzUwSUhaaGJIVmxMbHh1SUNBZ0lHbG1JQ2gwZVhCbGIyWWdjbVZ3SUQwOVBTQW5ablZ1WTNScGIyNG5LU0I3WEc0Z0lDQWdJQ0FnSUhaaGJIVmxJRDBnY21Wd0xtTmhiR3dvYUc5c1pHVnlMQ0JyWlhrc0lIWmhiSFZsS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdYRzRnSUNBZ0x5OGdWMmhoZENCb1lYQndaVzV6SUc1bGVIUWdaR1Z3Wlc1a2N5QnZiaUIwYUdVZ2RtRnNkV1VuY3lCMGVYQmxMbHh1SUNBZ0lITjNhWFJqYUNBb2RIbHdaVzltSUhaaGJIVmxLU0I3WEc0Z0lDQWdJQ0FnSUdOaGMyVWdKM04wY21sdVp5YzZYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnY1hWdmRHVW9kbUZzZFdVcE8xeHVJQ0FnSUNBZ0lDQmNiaUFnSUNBZ0lDQWdZMkZ6WlNBbmJuVnRZbVZ5SnpwY2JpQWdJQ0FnSUNBZ0lDQWdJQzh2SUVwVFQwNGdiblZ0WW1WeWN5QnRkWE4wSUdKbElHWnBibWwwWlM0Z1JXNWpiMlJsSUc1dmJpMW1hVzVwZEdVZ2JuVnRZbVZ5Y3lCaGN5QnVkV3hzTGx4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHbHpSbWx1YVhSbEtIWmhiSFZsS1NBL0lGTjBjbWx1WnloMllXeDFaU2tnT2lBbmJuVnNiQ2M3WEc0Z0lDQWdJQ0FnSUZ4dUlDQWdJQ0FnSUNCallYTmxJQ2RpYjI5c1pXRnVKenBjYmlBZ0lDQWdJQ0FnWTJGelpTQW5iblZzYkNjNlhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCSlppQjBhR1VnZG1Gc2RXVWdhWE1nWVNCaWIyOXNaV0Z1SUc5eUlHNTFiR3dzSUdOdmJuWmxjblFnYVhRZ2RHOGdZU0J6ZEhKcGJtY3VJRTV2ZEdVNlhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCMGVYQmxiMllnYm5Wc2JDQmtiMlZ6SUc1dmRDQndjbTlrZFdObElDZHVkV3hzSnk0Z1ZHaGxJR05oYzJVZ2FYTWdhVzVqYkhWa1pXUWdhR1Z5WlNCcGJseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2RHaGxJSEpsYlc5MFpTQmphR0Z1WTJVZ2RHaGhkQ0IwYUdseklHZGxkSE1nWm1sNFpXUWdjMjl0WldSaGVTNWNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJUZEhKcGJtY29kbUZzZFdVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWEc0Z0lDQWdJQ0FnSUdOaGMyVWdKMjlpYW1WamRDYzZYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9JWFpoYkhWbEtTQnlaWFIxY200Z0oyNTFiR3duTzF4dUlDQWdJQ0FnSUNBZ0lDQWdaMkZ3SUNzOUlHbHVaR1Z1ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEJoY25ScFlXd2dQU0JiWFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJRnh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdRWEp5WVhrdWFYTkJjbkpoZVZ4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0U5aWFtVmpkQzV3Y205MGIzUjVjR1V1ZEc5VGRISnBibWN1WVhCd2JIa29kbUZzZFdVcElEMDlQU0FuVzI5aWFtVmpkQ0JCY25KaGVWMG5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWdVozUm9JRDBnZG1Gc2RXVXViR1Z1WjNSb08xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWnZjaUFvYVNBOUlEQTdJR2tnUENCc1pXNW5kR2c3SUdrZ0t6MGdNU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZWEowYVdGc1cybGRJRDBnYzNSeUtHa3NJSFpoYkhWbEtTQjhmQ0FuYm5Wc2JDYzdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUVwdmFXNGdZV3hzSUc5bUlIUm9aU0JsYkdWdFpXNTBjeUIwYjJkbGRHaGxjaXdnYzJWd1lYSmhkR1ZrSUhkcGRHZ2dZMjl0YldGekxDQmhibVJjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2THlCM2NtRndJSFJvWlcwZ2FXNGdZbkpoWTJ0bGRITXVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkaUE5SUhCaGNuUnBZV3d1YkdWdVozUm9JRDA5UFNBd0lEOGdKMXRkSnlBNklHZGhjQ0EvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZGJYRnh1SnlBcklHZGhjQ0FySUhCaGNuUnBZV3d1YW05cGJpZ25MRnhjYmljZ0t5Qm5ZWEFwSUNzZ0oxeGNiaWNnS3lCdGFXNWtJQ3NnSjEwbklEcGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjFzbklDc2djR0Z5ZEdsaGJDNXFiMmx1S0Njc0p5a2dLeUFuWFNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1oyRndJRDBnYldsdVpEdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2RqdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJRnh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdTV1lnZEdobElISmxjR3hoWTJWeUlHbHpJR0Z1SUdGeWNtRjVMQ0IxYzJVZ2FYUWdkRzhnYzJWc1pXTjBJSFJvWlNCdFpXMWlaWEp6SUhSdklHSmxYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QnpkSEpwYm1kcFptbGxaQzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h5WlhBZ0ppWWdkSGx3Wlc5bUlISmxjQ0E5UFQwZ0oyOWlhbVZqZENjcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnNaVzVuZEdnZ1BTQnlaWEF1YkdWdVozUm9PMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lBb2FTQTlJREE3SUdrZ1BDQnNaVzVuZEdnN0lHa2dLejBnTVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JySUQwZ2NtVndXMmxkTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvZEhsd1pXOW1JR3NnUFQwOUlDZHpkSEpwYm1jbktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjJJRDBnYzNSeUtHc3NJSFpoYkhWbEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2gyS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjR0Z5ZEdsaGJDNXdkWE5vS0hGMWIzUmxLR3NwSUNzZ0tHZGhjQ0EvSUNjNklDY2dPaUFuT2ljcElDc2dkaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJQZEdobGNuZHBjMlVzSUdsMFpYSmhkR1VnZEdoeWIzVm5hQ0JoYkd3Z2IyWWdkR2hsSUd0bGVYTWdhVzRnZEdobElHOWlhbVZqZEM1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLR3NnYVc0Z2RtRnNkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0U5aWFtVmpkQzV3Y205MGIzUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIa3VZMkZzYkNoMllXeDFaU3dnYXlrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWWdQU0J6ZEhJb2F5d2dkbUZzZFdVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSFlwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndZWEowYVdGc0xuQjFjMmdvY1hWdmRHVW9heWtnS3lBb1oyRndJRDhnSnpvZ0p5QTZJQ2M2SnlrZ0t5QjJLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJRnh1SUNBZ0lDQWdJQ0F2THlCS2IybHVJR0ZzYkNCdlppQjBhR1VnYldWdFltVnlJSFJsZUhSeklIUnZaMlYwYUdWeUxDQnpaWEJoY21GMFpXUWdkMmwwYUNCamIyMXRZWE1zWEc0Z0lDQWdJQ0FnSUM4dklHRnVaQ0IzY21Gd0lIUm9aVzBnYVc0Z1luSmhZMlZ6TGx4dVhHNGdJQ0FnSUNBZ0lIWWdQU0J3WVhKMGFXRnNMbXhsYm1kMGFDQTlQVDBnTUNBL0lDZDdmU2NnT2lCbllYQWdQMXh1SUNBZ0lDQWdJQ0FnSUNBZ0ozdGNYRzRuSUNzZ1oyRndJQ3NnY0dGeWRHbGhiQzVxYjJsdUtDY3NYRnh1SnlBcklHZGhjQ2tnS3lBblhGeHVKeUFySUcxcGJtUWdLeUFuZlNjZ09seHVJQ0FnSUNBZ0lDQWdJQ0FnSjNzbklDc2djR0Z5ZEdsaGJDNXFiMmx1S0Njc0p5a2dLeUFuZlNjN1hHNGdJQ0FnSUNBZ0lHZGhjQ0E5SUcxcGJtUTdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQjJPMXh1SUNBZ0lIMWNibjFjYmx4dWJXOWtkV3hsTG1WNGNHOXlkSE1nUFNCbWRXNWpkR2x2YmlBb2RtRnNkV1VzSUhKbGNHeGhZMlZ5TENCemNHRmpaU2tnZTF4dUlDQWdJSFpoY2lCcE8xeHVJQ0FnSUdkaGNDQTlJQ2NuTzF4dUlDQWdJR2x1WkdWdWRDQTlJQ2NuTzF4dUlDQWdJRnh1SUNBZ0lDOHZJRWxtSUhSb1pTQnpjR0ZqWlNCd1lYSmhiV1YwWlhJZ2FYTWdZU0J1ZFcxaVpYSXNJRzFoYTJVZ1lXNGdhVzVrWlc1MElITjBjbWx1WnlCamIyNTBZV2x1YVc1bklIUm9ZWFJjYmlBZ0lDQXZMeUJ0WVc1NUlITndZV05sY3k1Y2JpQWdJQ0JwWmlBb2RIbHdaVzltSUhOd1lXTmxJRDA5UFNBbmJuVnRZbVZ5SnlrZ2UxeHVJQ0FnSUNBZ0lDQm1iM0lnS0drZ1BTQXdPeUJwSUR3Z2MzQmhZMlU3SUdrZ0t6MGdNU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhVzVrWlc1MElDczlJQ2NnSnp0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JpQWdJQ0F2THlCSlppQjBhR1VnYzNCaFkyVWdjR0Z5WVcxbGRHVnlJR2x6SUdFZ2MzUnlhVzVuTENCcGRDQjNhV3hzSUdKbElIVnpaV1FnWVhNZ2RHaGxJR2x1WkdWdWRDQnpkSEpwYm1jdVhHNGdJQ0FnWld4elpTQnBaaUFvZEhsd1pXOW1JSE53WVdObElEMDlQU0FuYzNSeWFXNW5KeWtnZTF4dUlDQWdJQ0FnSUNCcGJtUmxiblFnUFNCemNHRmpaVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUJKWmlCMGFHVnlaU0JwY3lCaElISmxjR3hoWTJWeUxDQnBkQ0J0ZFhOMElHSmxJR0VnWm5WdVkzUnBiMjRnYjNJZ1lXNGdZWEp5WVhrdVhHNGdJQ0FnTHk4Z1QzUm9aWEozYVhObExDQjBhSEp2ZHlCaGJpQmxjbkp2Y2k1Y2JpQWdJQ0J5WlhBZ1BTQnlaWEJzWVdObGNqdGNiaUFnSUNCcFppQW9jbVZ3YkdGalpYSWdKaVlnZEhsd1pXOW1JSEpsY0d4aFkyVnlJQ0U5UFNBblpuVnVZM1JwYjI0blhHNGdJQ0FnSmlZZ0tIUjVjR1Z2WmlCeVpYQnNZV05sY2lBaFBUMGdKMjlpYW1WamRDY2dmSHdnZEhsd1pXOW1JSEpsY0d4aFkyVnlMbXhsYm1kMGFDQWhQVDBnSjI1MWJXSmxjaWNwS1NCN1hHNGdJQ0FnSUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lnblNsTlBUaTV6ZEhKcGJtZHBabmtuS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdYRzRnSUNBZ0x5OGdUV0ZyWlNCaElHWmhhMlVnY205dmRDQnZZbXBsWTNRZ1kyOXVkR0ZwYm1sdVp5QnZkWElnZG1Gc2RXVWdkVzVrWlhJZ2RHaGxJR3RsZVNCdlppQW5KeTVjYmlBZ0lDQXZMeUJTWlhSMWNtNGdkR2hsSUhKbGMzVnNkQ0J2WmlCemRISnBibWRwWm5scGJtY2dkR2hsSUhaaGJIVmxMbHh1SUNBZ0lISmxkSFZ5YmlCemRISW9KeWNzSUhzbkp6b2dkbUZzZFdWOUtUdGNibjA3WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk95SXNJbk52ZFhKalpWSnZiM1FpT2lJaWZRPT1cXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy9qc29uaWZ5L2xpYi9zdHJpbmdpZnkuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9ub2RlLWxpYnMtYnJvd3Nlci9ub2RlX21vZHVsZXMvcHVueWNvZGUvcHVueWNvZGUuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL25vZGUtbGlicy1icm93c2VyL25vZGVfbW9kdWxlcy9wdW55Y29kZS9wdW55Y29kZS5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcbmV2YWwoXFxcIi8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqLyhmdW5jdGlvbihtb2R1bGUsIGdsb2JhbCkge3ZhciBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXzsvKiEgaHR0cHM6Ly9tdGhzLmJlL3B1bnljb2RlIHYxLjQuMSBieSBAbWF0aGlhcyAqL1xcXFxuOyhmdW5jdGlvbihyb290KSB7XFxcXG5cXFxcblxcXFx0LyoqIERldGVjdCBmcmVlIHZhcmlhYmxlcyAqL1xcXFxuXFxcXHR2YXIgZnJlZUV4cG9ydHMgPSAgdHJ1ZSAmJiBleHBvcnRzICYmXFxcXG5cXFxcdFxcXFx0IWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcXFxcblxcXFx0dmFyIGZyZWVNb2R1bGUgPSAgdHJ1ZSAmJiBtb2R1bGUgJiZcXFxcblxcXFx0XFxcXHQhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcXFxcblxcXFx0dmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbDtcXFxcblxcXFx0aWYgKFxcXFxuXFxcXHRcXFxcdGZyZWVHbG9iYWwuZ2xvYmFsID09PSBmcmVlR2xvYmFsIHx8XFxcXG5cXFxcdFxcXFx0ZnJlZUdsb2JhbC53aW5kb3cgPT09IGZyZWVHbG9iYWwgfHxcXFxcblxcXFx0XFxcXHRmcmVlR2xvYmFsLnNlbGYgPT09IGZyZWVHbG9iYWxcXFxcblxcXFx0KSB7XFxcXG5cXFxcdFxcXFx0cm9vdCA9IGZyZWVHbG9iYWw7XFxcXG5cXFxcdH1cXFxcblxcXFxuXFxcXHQvKipcXFxcblxcXFx0ICogVGhlIGBwdW55Y29kZWAgb2JqZWN0LlxcXFxuXFxcXHQgKiBAbmFtZSBwdW55Y29kZVxcXFxuXFxcXHQgKiBAdHlwZSBPYmplY3RcXFxcblxcXFx0ICovXFxcXG5cXFxcdHZhciBwdW55Y29kZSxcXFxcblxcXFxuXFxcXHQvKiogSGlnaGVzdCBwb3NpdGl2ZSBzaWduZWQgMzItYml0IGZsb2F0IHZhbHVlICovXFxcXG5cXFxcdG1heEludCA9IDIxNDc0ODM2NDcsIC8vIGFrYS4gMHg3RkZGRkZGRiBvciAyXjMxLTFcXFxcblxcXFxuXFxcXHQvKiogQm9vdHN0cmluZyBwYXJhbWV0ZXJzICovXFxcXG5cXFxcdGJhc2UgPSAzNixcXFxcblxcXFx0dE1pbiA9IDEsXFxcXG5cXFxcdHRNYXggPSAyNixcXFxcblxcXFx0c2tldyA9IDM4LFxcXFxuXFxcXHRkYW1wID0gNzAwLFxcXFxuXFxcXHRpbml0aWFsQmlhcyA9IDcyLFxcXFxuXFxcXHRpbml0aWFsTiA9IDEyOCwgLy8gMHg4MFxcXFxuXFxcXHRkZWxpbWl0ZXIgPSAnLScsIC8vICdcXFxcXFxcXHgyRCdcXFxcblxcXFxuXFxcXHQvKiogUmVndWxhciBleHByZXNzaW9ucyAqL1xcXFxuXFxcXHRyZWdleFB1bnljb2RlID0gL154bi0tLyxcXFxcblxcXFx0cmVnZXhOb25BU0NJSSA9IC9bXlxcXFxcXFxceDIwLVxcXFxcXFxceDdFXS8sIC8vIHVucHJpbnRhYmxlIEFTQ0lJIGNoYXJzICsgbm9uLUFTQ0lJIGNoYXJzXFxcXG5cXFxcdHJlZ2V4U2VwYXJhdG9ycyA9IC9bXFxcXFxcXFx4MkVcXFxcXFxcXHUzMDAyXFxcXFxcXFx1RkYwRVxcXFxcXFxcdUZGNjFdL2csIC8vIFJGQyAzNDkwIHNlcGFyYXRvcnNcXFxcblxcXFxuXFxcXHQvKiogRXJyb3IgbWVzc2FnZXMgKi9cXFxcblxcXFx0ZXJyb3JzID0ge1xcXFxuXFxcXHRcXFxcdCdvdmVyZmxvdyc6ICdPdmVyZmxvdzogaW5wdXQgbmVlZHMgd2lkZXIgaW50ZWdlcnMgdG8gcHJvY2VzcycsXFxcXG5cXFxcdFxcXFx0J25vdC1iYXNpYyc6ICdJbGxlZ2FsIGlucHV0ID49IDB4ODAgKG5vdCBhIGJhc2ljIGNvZGUgcG9pbnQpJyxcXFxcblxcXFx0XFxcXHQnaW52YWxpZC1pbnB1dCc6ICdJbnZhbGlkIGlucHV0J1xcXFxuXFxcXHR9LFxcXFxuXFxcXG5cXFxcdC8qKiBDb252ZW5pZW5jZSBzaG9ydGN1dHMgKi9cXFxcblxcXFx0YmFzZU1pbnVzVE1pbiA9IGJhc2UgLSB0TWluLFxcXFxuXFxcXHRmbG9vciA9IE1hdGguZmxvb3IsXFxcXG5cXFxcdHN0cmluZ0Zyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGUsXFxcXG5cXFxcblxcXFx0LyoqIFRlbXBvcmFyeSB2YXJpYWJsZSAqL1xcXFxuXFxcXHRrZXk7XFxcXG5cXFxcblxcXFx0LyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXFxcXG5cXFxcblxcXFx0LyoqXFxcXG5cXFxcdCAqIEEgZ2VuZXJpYyBlcnJvciB1dGlsaXR5IGZ1bmN0aW9uLlxcXFxuXFxcXHQgKiBAcHJpdmF0ZVxcXFxuXFxcXHQgKiBAcGFyYW0ge1N0cmluZ30gdHlwZSBUaGUgZXJyb3IgdHlwZS5cXFxcblxcXFx0ICogQHJldHVybnMge0Vycm9yfSBUaHJvd3MgYSBgUmFuZ2VFcnJvcmAgd2l0aCB0aGUgYXBwbGljYWJsZSBlcnJvciBtZXNzYWdlLlxcXFxuXFxcXHQgKi9cXFxcblxcXFx0ZnVuY3Rpb24gZXJyb3IodHlwZSkge1xcXFxuXFxcXHRcXFxcdHRocm93IG5ldyBSYW5nZUVycm9yKGVycm9yc1t0eXBlXSk7XFxcXG5cXFxcdH1cXFxcblxcXFxuXFxcXHQvKipcXFxcblxcXFx0ICogQSBnZW5lcmljIGBBcnJheSNtYXBgIHV0aWxpdHkgZnVuY3Rpb24uXFxcXG5cXFxcdCAqIEBwcml2YXRlXFxcXG5cXFxcdCAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXFxcXG5cXFxcdCAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0aGF0IGdldHMgY2FsbGVkIGZvciBldmVyeSBhcnJheVxcXFxuXFxcXHQgKiBpdGVtLlxcXFxuXFxcXHQgKiBAcmV0dXJucyB7QXJyYXl9IEEgbmV3IGFycmF5IG9mIHZhbHVlcyByZXR1cm5lZCBieSB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uXFxcXG5cXFxcdCAqL1xcXFxuXFxcXHRmdW5jdGlvbiBtYXAoYXJyYXksIGZuKSB7XFxcXG5cXFxcdFxcXFx0dmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcXFxcblxcXFx0XFxcXHR2YXIgcmVzdWx0ID0gW107XFxcXG5cXFxcdFxcXFx0d2hpbGUgKGxlbmd0aC0tKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRyZXN1bHRbbGVuZ3RoXSA9IGZuKGFycmF5W2xlbmd0aF0pO1xcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFx0XFxcXHRyZXR1cm4gcmVzdWx0O1xcXFxuXFxcXHR9XFxcXG5cXFxcblxcXFx0LyoqXFxcXG5cXFxcdCAqIEEgc2ltcGxlIGBBcnJheSNtYXBgLWxpa2Ugd3JhcHBlciB0byB3b3JrIHdpdGggZG9tYWluIG5hbWUgc3RyaW5ncyBvciBlbWFpbFxcXFxuXFxcXHQgKiBhZGRyZXNzZXMuXFxcXG5cXFxcdCAqIEBwcml2YXRlXFxcXG5cXFxcdCAqIEBwYXJhbSB7U3RyaW5nfSBkb21haW4gVGhlIGRvbWFpbiBuYW1lIG9yIGVtYWlsIGFkZHJlc3MuXFxcXG5cXFxcdCAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0aGF0IGdldHMgY2FsbGVkIGZvciBldmVyeVxcXFxuXFxcXHQgKiBjaGFyYWN0ZXIuXFxcXG5cXFxcdCAqIEByZXR1cm5zIHtBcnJheX0gQSBuZXcgc3RyaW5nIG9mIGNoYXJhY3RlcnMgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrXFxcXG5cXFxcdCAqIGZ1bmN0aW9uLlxcXFxuXFxcXHQgKi9cXFxcblxcXFx0ZnVuY3Rpb24gbWFwRG9tYWluKHN0cmluZywgZm4pIHtcXFxcblxcXFx0XFxcXHR2YXIgcGFydHMgPSBzdHJpbmcuc3BsaXQoJ0AnKTtcXFxcblxcXFx0XFxcXHR2YXIgcmVzdWx0ID0gJyc7XFxcXG5cXFxcdFxcXFx0aWYgKHBhcnRzLmxlbmd0aCA+IDEpIHtcXFxcblxcXFx0XFxcXHRcXFxcdC8vIEluIGVtYWlsIGFkZHJlc3Nlcywgb25seSB0aGUgZG9tYWluIG5hbWUgc2hvdWxkIGJlIHB1bnljb2RlZC4gTGVhdmVcXFxcblxcXFx0XFxcXHRcXFxcdC8vIHRoZSBsb2NhbCBwYXJ0IChpLmUuIGV2ZXJ5dGhpbmcgdXAgdG8gYEBgKSBpbnRhY3QuXFxcXG5cXFxcdFxcXFx0XFxcXHRyZXN1bHQgPSBwYXJ0c1swXSArICdAJztcXFxcblxcXFx0XFxcXHRcXFxcdHN0cmluZyA9IHBhcnRzWzFdO1xcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFx0XFxcXHQvLyBBdm9pZCBgc3BsaXQocmVnZXgpYCBmb3IgSUU4IGNvbXBhdGliaWxpdHkuIFNlZSAjMTcuXFxcXG5cXFxcdFxcXFx0c3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocmVnZXhTZXBhcmF0b3JzLCAnXFxcXFxcXFx4MkUnKTtcXFxcblxcXFx0XFxcXHR2YXIgbGFiZWxzID0gc3RyaW5nLnNwbGl0KCcuJyk7XFxcXG5cXFxcdFxcXFx0dmFyIGVuY29kZWQgPSBtYXAobGFiZWxzLCBmbikuam9pbignLicpO1xcXFxuXFxcXHRcXFxcdHJldHVybiByZXN1bHQgKyBlbmNvZGVkO1xcXFxuXFxcXHR9XFxcXG5cXFxcblxcXFx0LyoqXFxcXG5cXFxcdCAqIENyZWF0ZXMgYW4gYXJyYXkgY29udGFpbmluZyB0aGUgbnVtZXJpYyBjb2RlIHBvaW50cyBvZiBlYWNoIFVuaWNvZGVcXFxcblxcXFx0ICogY2hhcmFjdGVyIGluIHRoZSBzdHJpbmcuIFdoaWxlIEphdmFTY3JpcHQgdXNlcyBVQ1MtMiBpbnRlcm5hbGx5LFxcXFxuXFxcXHQgKiB0aGlzIGZ1bmN0aW9uIHdpbGwgY29udmVydCBhIHBhaXIgb2Ygc3Vycm9nYXRlIGhhbHZlcyAoZWFjaCBvZiB3aGljaFxcXFxuXFxcXHQgKiBVQ1MtMiBleHBvc2VzIGFzIHNlcGFyYXRlIGNoYXJhY3RlcnMpIGludG8gYSBzaW5nbGUgY29kZSBwb2ludCxcXFxcblxcXFx0ICogbWF0Y2hpbmcgVVRGLTE2LlxcXFxuXFxcXHQgKiBAc2VlIGBwdW55Y29kZS51Y3MyLmVuY29kZWBcXFxcblxcXFx0ICogQHNlZSA8aHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL2phdmFzY3JpcHQtZW5jb2Rpbmc+XFxcXG5cXFxcdCAqIEBtZW1iZXJPZiBwdW55Y29kZS51Y3MyXFxcXG5cXFxcdCAqIEBuYW1lIGRlY29kZVxcXFxuXFxcXHQgKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nIFRoZSBVbmljb2RlIGlucHV0IHN0cmluZyAoVUNTLTIpLlxcXFxuXFxcXHQgKiBAcmV0dXJucyB7QXJyYXl9IFRoZSBuZXcgYXJyYXkgb2YgY29kZSBwb2ludHMuXFxcXG5cXFxcdCAqL1xcXFxuXFxcXHRmdW5jdGlvbiB1Y3MyZGVjb2RlKHN0cmluZykge1xcXFxuXFxcXHRcXFxcdHZhciBvdXRwdXQgPSBbXSxcXFxcblxcXFx0XFxcXHQgICAgY291bnRlciA9IDAsXFxcXG5cXFxcdFxcXFx0ICAgIGxlbmd0aCA9IHN0cmluZy5sZW5ndGgsXFxcXG5cXFxcdFxcXFx0ICAgIHZhbHVlLFxcXFxuXFxcXHRcXFxcdCAgICBleHRyYTtcXFxcblxcXFx0XFxcXHR3aGlsZSAoY291bnRlciA8IGxlbmd0aCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0dmFsdWUgPSBzdHJpbmcuY2hhckNvZGVBdChjb3VudGVyKyspO1xcXFxuXFxcXHRcXFxcdFxcXFx0aWYgKHZhbHVlID49IDB4RDgwMCAmJiB2YWx1ZSA8PSAweERCRkYgJiYgY291bnRlciA8IGxlbmd0aCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHQvLyBoaWdoIHN1cnJvZ2F0ZSwgYW5kIHRoZXJlIGlzIGEgbmV4dCBjaGFyYWN0ZXJcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0ZXh0cmEgPSBzdHJpbmcuY2hhckNvZGVBdChjb3VudGVyKyspO1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRpZiAoKGV4dHJhICYgMHhGQzAwKSA9PSAweERDMDApIHsgLy8gbG93IHN1cnJvZ2F0ZVxcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdG91dHB1dC5wdXNoKCgodmFsdWUgJiAweDNGRikgPDwgMTApICsgKGV4dHJhICYgMHgzRkYpICsgMHgxMDAwMCk7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdH0gZWxzZSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0Ly8gdW5tYXRjaGVkIHN1cnJvZ2F0ZTsgb25seSBhcHBlbmQgdGhpcyBjb2RlIHVuaXQsIGluIGNhc2UgdGhlIG5leHRcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHQvLyBjb2RlIHVuaXQgaXMgdGhlIGhpZ2ggc3Vycm9nYXRlIG9mIGEgc3Vycm9nYXRlIHBhaXJcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRvdXRwdXQucHVzaCh2YWx1ZSk7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0Y291bnRlci0tO1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcdFxcXFx0XFxcXHR9IGVsc2Uge1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRvdXRwdXQucHVzaCh2YWx1ZSk7XFxcXG5cXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdHJldHVybiBvdXRwdXQ7XFxcXG5cXFxcdH1cXFxcblxcXFxuXFxcXHQvKipcXFxcblxcXFx0ICogQ3JlYXRlcyBhIHN0cmluZyBiYXNlZCBvbiBhbiBhcnJheSBvZiBudW1lcmljIGNvZGUgcG9pbnRzLlxcXFxuXFxcXHQgKiBAc2VlIGBwdW55Y29kZS51Y3MyLmRlY29kZWBcXFxcblxcXFx0ICogQG1lbWJlck9mIHB1bnljb2RlLnVjczJcXFxcblxcXFx0ICogQG5hbWUgZW5jb2RlXFxcXG5cXFxcdCAqIEBwYXJhbSB7QXJyYXl9IGNvZGVQb2ludHMgVGhlIGFycmF5IG9mIG51bWVyaWMgY29kZSBwb2ludHMuXFxcXG5cXFxcdCAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBuZXcgVW5pY29kZSBzdHJpbmcgKFVDUy0yKS5cXFxcblxcXFx0ICovXFxcXG5cXFxcdGZ1bmN0aW9uIHVjczJlbmNvZGUoYXJyYXkpIHtcXFxcblxcXFx0XFxcXHRyZXR1cm4gbWFwKGFycmF5LCBmdW5jdGlvbih2YWx1ZSkge1xcXFxuXFxcXHRcXFxcdFxcXFx0dmFyIG91dHB1dCA9ICcnO1xcXFxuXFxcXHRcXFxcdFxcXFx0aWYgKHZhbHVlID4gMHhGRkZGKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdHZhbHVlIC09IDB4MTAwMDA7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdG91dHB1dCArPSBzdHJpbmdGcm9tQ2hhckNvZGUodmFsdWUgPj4+IDEwICYgMHgzRkYgfCAweEQ4MDApO1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHR2YWx1ZSA9IDB4REMwMCB8IHZhbHVlICYgMHgzRkY7XFxcXG5cXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcdFxcXFx0XFxcXHRvdXRwdXQgKz0gc3RyaW5nRnJvbUNoYXJDb2RlKHZhbHVlKTtcXFxcblxcXFx0XFxcXHRcXFxcdHJldHVybiBvdXRwdXQ7XFxcXG5cXFxcdFxcXFx0fSkuam9pbignJyk7XFxcXG5cXFxcdH1cXFxcblxcXFxuXFxcXHQvKipcXFxcblxcXFx0ICogQ29udmVydHMgYSBiYXNpYyBjb2RlIHBvaW50IGludG8gYSBkaWdpdC9pbnRlZ2VyLlxcXFxuXFxcXHQgKiBAc2VlIGBkaWdpdFRvQmFzaWMoKWBcXFxcblxcXFx0ICogQHByaXZhdGVcXFxcblxcXFx0ICogQHBhcmFtIHtOdW1iZXJ9IGNvZGVQb2ludCBUaGUgYmFzaWMgbnVtZXJpYyBjb2RlIHBvaW50IHZhbHVlLlxcXFxuXFxcXHQgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgbnVtZXJpYyB2YWx1ZSBvZiBhIGJhc2ljIGNvZGUgcG9pbnQgKGZvciB1c2UgaW5cXFxcblxcXFx0ICogcmVwcmVzZW50aW5nIGludGVnZXJzKSBpbiB0aGUgcmFuZ2UgYDBgIHRvIGBiYXNlIC0gMWAsIG9yIGBiYXNlYCBpZlxcXFxuXFxcXHQgKiB0aGUgY29kZSBwb2ludCBkb2VzIG5vdCByZXByZXNlbnQgYSB2YWx1ZS5cXFxcblxcXFx0ICovXFxcXG5cXFxcdGZ1bmN0aW9uIGJhc2ljVG9EaWdpdChjb2RlUG9pbnQpIHtcXFxcblxcXFx0XFxcXHRpZiAoY29kZVBvaW50IC0gNDggPCAxMCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0cmV0dXJuIGNvZGVQb2ludCAtIDIyO1xcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFx0XFxcXHRpZiAoY29kZVBvaW50IC0gNjUgPCAyNikge1xcXFxuXFxcXHRcXFxcdFxcXFx0cmV0dXJuIGNvZGVQb2ludCAtIDY1O1xcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFx0XFxcXHRpZiAoY29kZVBvaW50IC0gOTcgPCAyNikge1xcXFxuXFxcXHRcXFxcdFxcXFx0cmV0dXJuIGNvZGVQb2ludCAtIDk3O1xcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFx0XFxcXHRyZXR1cm4gYmFzZTtcXFxcblxcXFx0fVxcXFxuXFxcXG5cXFxcdC8qKlxcXFxuXFxcXHQgKiBDb252ZXJ0cyBhIGRpZ2l0L2ludGVnZXIgaW50byBhIGJhc2ljIGNvZGUgcG9pbnQuXFxcXG5cXFxcdCAqIEBzZWUgYGJhc2ljVG9EaWdpdCgpYFxcXFxuXFxcXHQgKiBAcHJpdmF0ZVxcXFxuXFxcXHQgKiBAcGFyYW0ge051bWJlcn0gZGlnaXQgVGhlIG51bWVyaWMgdmFsdWUgb2YgYSBiYXNpYyBjb2RlIHBvaW50LlxcXFxuXFxcXHQgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgYmFzaWMgY29kZSBwb2ludCB3aG9zZSB2YWx1ZSAod2hlbiB1c2VkIGZvclxcXFxuXFxcXHQgKiByZXByZXNlbnRpbmcgaW50ZWdlcnMpIGlzIGBkaWdpdGAsIHdoaWNoIG5lZWRzIHRvIGJlIGluIHRoZSByYW5nZVxcXFxuXFxcXHQgKiBgMGAgdG8gYGJhc2UgLSAxYC4gSWYgYGZsYWdgIGlzIG5vbi16ZXJvLCB0aGUgdXBwZXJjYXNlIGZvcm0gaXNcXFxcblxcXFx0ICogdXNlZDsgZWxzZSwgdGhlIGxvd2VyY2FzZSBmb3JtIGlzIHVzZWQuIFRoZSBiZWhhdmlvciBpcyB1bmRlZmluZWRcXFxcblxcXFx0ICogaWYgYGZsYWdgIGlzIG5vbi16ZXJvIGFuZCBgZGlnaXRgIGhhcyBubyB1cHBlcmNhc2UgZm9ybS5cXFxcblxcXFx0ICovXFxcXG5cXFxcdGZ1bmN0aW9uIGRpZ2l0VG9CYXNpYyhkaWdpdCwgZmxhZykge1xcXFxuXFxcXHRcXFxcdC8vICAwLi4yNSBtYXAgdG8gQVNDSUkgYS4ueiBvciBBLi5aXFxcXG5cXFxcdFxcXFx0Ly8gMjYuLjM1IG1hcCB0byBBU0NJSSAwLi45XFxcXG5cXFxcdFxcXFx0cmV0dXJuIGRpZ2l0ICsgMjIgKyA3NSAqIChkaWdpdCA8IDI2KSAtICgoZmxhZyAhPSAwKSA8PCA1KTtcXFxcblxcXFx0fVxcXFxuXFxcXG5cXFxcdC8qKlxcXFxuXFxcXHQgKiBCaWFzIGFkYXB0YXRpb24gZnVuY3Rpb24gYXMgcGVyIHNlY3Rpb24gMy40IG9mIFJGQyAzNDkyLlxcXFxuXFxcXHQgKiBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjMzQ5MiNzZWN0aW9uLTMuNFxcXFxuXFxcXHQgKiBAcHJpdmF0ZVxcXFxuXFxcXHQgKi9cXFxcblxcXFx0ZnVuY3Rpb24gYWRhcHQoZGVsdGEsIG51bVBvaW50cywgZmlyc3RUaW1lKSB7XFxcXG5cXFxcdFxcXFx0dmFyIGsgPSAwO1xcXFxuXFxcXHRcXFxcdGRlbHRhID0gZmlyc3RUaW1lID8gZmxvb3IoZGVsdGEgLyBkYW1wKSA6IGRlbHRhID4+IDE7XFxcXG5cXFxcdFxcXFx0ZGVsdGEgKz0gZmxvb3IoZGVsdGEgLyBudW1Qb2ludHMpO1xcXFxuXFxcXHRcXFxcdGZvciAoLyogbm8gaW5pdGlhbGl6YXRpb24gKi87IGRlbHRhID4gYmFzZU1pbnVzVE1pbiAqIHRNYXggPj4gMTsgayArPSBiYXNlKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRkZWx0YSA9IGZsb29yKGRlbHRhIC8gYmFzZU1pbnVzVE1pbik7XFxcXG5cXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdHJldHVybiBmbG9vcihrICsgKGJhc2VNaW51c1RNaW4gKyAxKSAqIGRlbHRhIC8gKGRlbHRhICsgc2tldykpO1xcXFxuXFxcXHR9XFxcXG5cXFxcblxcXFx0LyoqXFxcXG5cXFxcdCAqIENvbnZlcnRzIGEgUHVueWNvZGUgc3RyaW5nIG9mIEFTQ0lJLW9ubHkgc3ltYm9scyB0byBhIHN0cmluZyBvZiBVbmljb2RlXFxcXG5cXFxcdCAqIHN5bWJvbHMuXFxcXG5cXFxcdCAqIEBtZW1iZXJPZiBwdW55Y29kZVxcXFxuXFxcXHQgKiBAcGFyYW0ge1N0cmluZ30gaW5wdXQgVGhlIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMuXFxcXG5cXFxcdCAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSByZXN1bHRpbmcgc3RyaW5nIG9mIFVuaWNvZGUgc3ltYm9scy5cXFxcblxcXFx0ICovXFxcXG5cXFxcdGZ1bmN0aW9uIGRlY29kZShpbnB1dCkge1xcXFxuXFxcXHRcXFxcdC8vIERvbid0IHVzZSBVQ1MtMlxcXFxuXFxcXHRcXFxcdHZhciBvdXRwdXQgPSBbXSxcXFxcblxcXFx0XFxcXHQgICAgaW5wdXRMZW5ndGggPSBpbnB1dC5sZW5ndGgsXFxcXG5cXFxcdFxcXFx0ICAgIG91dCxcXFxcblxcXFx0XFxcXHQgICAgaSA9IDAsXFxcXG5cXFxcdFxcXFx0ICAgIG4gPSBpbml0aWFsTixcXFxcblxcXFx0XFxcXHQgICAgYmlhcyA9IGluaXRpYWxCaWFzLFxcXFxuXFxcXHRcXFxcdCAgICBiYXNpYyxcXFxcblxcXFx0XFxcXHQgICAgaixcXFxcblxcXFx0XFxcXHQgICAgaW5kZXgsXFxcXG5cXFxcdFxcXFx0ICAgIG9sZGksXFxcXG5cXFxcdFxcXFx0ICAgIHcsXFxcXG5cXFxcdFxcXFx0ICAgIGssXFxcXG5cXFxcdFxcXFx0ICAgIGRpZ2l0LFxcXFxuXFxcXHRcXFxcdCAgICB0LFxcXFxuXFxcXHRcXFxcdCAgICAvKiogQ2FjaGVkIGNhbGN1bGF0aW9uIHJlc3VsdHMgKi9cXFxcblxcXFx0XFxcXHQgICAgYmFzZU1pbnVzVDtcXFxcblxcXFxuXFxcXHRcXFxcdC8vIEhhbmRsZSB0aGUgYmFzaWMgY29kZSBwb2ludHM6IGxldCBgYmFzaWNgIGJlIHRoZSBudW1iZXIgb2YgaW5wdXQgY29kZVxcXFxuXFxcXHRcXFxcdC8vIHBvaW50cyBiZWZvcmUgdGhlIGxhc3QgZGVsaW1pdGVyLCBvciBgMGAgaWYgdGhlcmUgaXMgbm9uZSwgdGhlbiBjb3B5XFxcXG5cXFxcdFxcXFx0Ly8gdGhlIGZpcnN0IGJhc2ljIGNvZGUgcG9pbnRzIHRvIHRoZSBvdXRwdXQuXFxcXG5cXFxcblxcXFx0XFxcXHRiYXNpYyA9IGlucHV0Lmxhc3RJbmRleE9mKGRlbGltaXRlcik7XFxcXG5cXFxcdFxcXFx0aWYgKGJhc2ljIDwgMCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0YmFzaWMgPSAwO1xcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFxuXFxcXHRcXFxcdGZvciAoaiA9IDA7IGogPCBiYXNpYzsgKytqKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBpZiBpdCdzIG5vdCBhIGJhc2ljIGNvZGUgcG9pbnRcXFxcblxcXFx0XFxcXHRcXFxcdGlmIChpbnB1dC5jaGFyQ29kZUF0KGopID49IDB4ODApIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0ZXJyb3IoJ25vdC1iYXNpYycpO1xcXFxuXFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdFxcXFx0b3V0cHV0LnB1c2goaW5wdXQuY2hhckNvZGVBdChqKSk7XFxcXG5cXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0Ly8gTWFpbiBkZWNvZGluZyBsb29wOiBzdGFydCBqdXN0IGFmdGVyIHRoZSBsYXN0IGRlbGltaXRlciBpZiBhbnkgYmFzaWMgY29kZVxcXFxuXFxcXHRcXFxcdC8vIHBvaW50cyB3ZXJlIGNvcGllZDsgc3RhcnQgYXQgdGhlIGJlZ2lubmluZyBvdGhlcndpc2UuXFxcXG5cXFxcblxcXFx0XFxcXHRmb3IgKGluZGV4ID0gYmFzaWMgPiAwID8gYmFzaWMgKyAxIDogMDsgaW5kZXggPCBpbnB1dExlbmd0aDsgLyogbm8gZmluYWwgZXhwcmVzc2lvbiAqLykge1xcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBgaW5kZXhgIGlzIHRoZSBpbmRleCBvZiB0aGUgbmV4dCBjaGFyYWN0ZXIgdG8gYmUgY29uc3VtZWQuXFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBEZWNvZGUgYSBnZW5lcmFsaXplZCB2YXJpYWJsZS1sZW5ndGggaW50ZWdlciBpbnRvIGBkZWx0YWAsXFxcXG5cXFxcdFxcXFx0XFxcXHQvLyB3aGljaCBnZXRzIGFkZGVkIHRvIGBpYC4gVGhlIG92ZXJmbG93IGNoZWNraW5nIGlzIGVhc2llclxcXFxuXFxcXHRcXFxcdFxcXFx0Ly8gaWYgd2UgaW5jcmVhc2UgYGlgIGFzIHdlIGdvLCB0aGVuIHN1YnRyYWN0IG9mZiBpdHMgc3RhcnRpbmdcXFxcblxcXFx0XFxcXHRcXFxcdC8vIHZhbHVlIGF0IHRoZSBlbmQgdG8gb2J0YWluIGBkZWx0YWAuXFxcXG5cXFxcdFxcXFx0XFxcXHRmb3IgKG9sZGkgPSBpLCB3ID0gMSwgayA9IGJhc2U7IC8qIG5vIGNvbmRpdGlvbiAqLzsgayArPSBiYXNlKSB7XFxcXG5cXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0aWYgKGluZGV4ID49IGlucHV0TGVuZ3RoKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0ZXJyb3IoJ2ludmFsaWQtaW5wdXQnKTtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdGRpZ2l0ID0gYmFzaWNUb0RpZ2l0KGlucHV0LmNoYXJDb2RlQXQoaW5kZXgrKykpO1xcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdGlmIChkaWdpdCA+PSBiYXNlIHx8IGRpZ2l0ID4gZmxvb3IoKG1heEludCAtIGkpIC8gdykpIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRlcnJvcignb3ZlcmZsb3cnKTtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdGkgKz0gZGlnaXQgKiB3O1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHR0ID0gayA8PSBiaWFzID8gdE1pbiA6IChrID49IGJpYXMgKyB0TWF4ID8gdE1heCA6IGsgLSBiaWFzKTtcXFxcblxcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRpZiAoZGlnaXQgPCB0KSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0YnJlYWs7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdH1cXFxcblxcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRiYXNlTWludXNUID0gYmFzZSAtIHQ7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdGlmICh3ID4gZmxvb3IobWF4SW50IC8gYmFzZU1pbnVzVCkpIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRlcnJvcignb3ZlcmZsb3cnKTtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdHcgKj0gYmFzZU1pbnVzVDtcXFxcblxcXFxuXFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHRvdXQgPSBvdXRwdXQubGVuZ3RoICsgMTtcXFxcblxcXFx0XFxcXHRcXFxcdGJpYXMgPSBhZGFwdChpIC0gb2xkaSwgb3V0LCBvbGRpID09IDApO1xcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBgaWAgd2FzIHN1cHBvc2VkIHRvIHdyYXAgYXJvdW5kIGZyb20gYG91dGAgdG8gYDBgLFxcXFxuXFxcXHRcXFxcdFxcXFx0Ly8gaW5jcmVtZW50aW5nIGBuYCBlYWNoIHRpbWUsIHNvIHdlJ2xsIGZpeCB0aGF0IG5vdzpcXFxcblxcXFx0XFxcXHRcXFxcdGlmIChmbG9vcihpIC8gb3V0KSA+IG1heEludCAtIG4pIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0ZXJyb3IoJ292ZXJmbG93Jyk7XFxcXG5cXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcblxcXFx0XFxcXHRcXFxcdG4gKz0gZmxvb3IoaSAvIG91dCk7XFxcXG5cXFxcdFxcXFx0XFxcXHRpICU9IG91dDtcXFxcblxcXFxuXFxcXHRcXFxcdFxcXFx0Ly8gSW5zZXJ0IGBuYCBhdCBwb3NpdGlvbiBgaWAgb2YgdGhlIG91dHB1dFxcXFxuXFxcXHRcXFxcdFxcXFx0b3V0cHV0LnNwbGljZShpKyssIDAsIG4pO1xcXFxuXFxcXG5cXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0cmV0dXJuIHVjczJlbmNvZGUob3V0cHV0KTtcXFxcblxcXFx0fVxcXFxuXFxcXG5cXFxcdC8qKlxcXFxuXFxcXHQgKiBDb252ZXJ0cyBhIHN0cmluZyBvZiBVbmljb2RlIHN5bWJvbHMgKGUuZy4gYSBkb21haW4gbmFtZSBsYWJlbCkgdG8gYVxcXFxuXFxcXHQgKiBQdW55Y29kZSBzdHJpbmcgb2YgQVNDSUktb25seSBzeW1ib2xzLlxcXFxuXFxcXHQgKiBAbWVtYmVyT2YgcHVueWNvZGVcXFxcblxcXFx0ICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBzdHJpbmcgb2YgVW5pY29kZSBzeW1ib2xzLlxcXFxuXFxcXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgcmVzdWx0aW5nIFB1bnljb2RlIHN0cmluZyBvZiBBU0NJSS1vbmx5IHN5bWJvbHMuXFxcXG5cXFxcdCAqL1xcXFxuXFxcXHRmdW5jdGlvbiBlbmNvZGUoaW5wdXQpIHtcXFxcblxcXFx0XFxcXHR2YXIgbixcXFxcblxcXFx0XFxcXHQgICAgZGVsdGEsXFxcXG5cXFxcdFxcXFx0ICAgIGhhbmRsZWRDUENvdW50LFxcXFxuXFxcXHRcXFxcdCAgICBiYXNpY0xlbmd0aCxcXFxcblxcXFx0XFxcXHQgICAgYmlhcyxcXFxcblxcXFx0XFxcXHQgICAgaixcXFxcblxcXFx0XFxcXHQgICAgbSxcXFxcblxcXFx0XFxcXHQgICAgcSxcXFxcblxcXFx0XFxcXHQgICAgayxcXFxcblxcXFx0XFxcXHQgICAgdCxcXFxcblxcXFx0XFxcXHQgICAgY3VycmVudFZhbHVlLFxcXFxuXFxcXHRcXFxcdCAgICBvdXRwdXQgPSBbXSxcXFxcblxcXFx0XFxcXHQgICAgLyoqIGBpbnB1dExlbmd0aGAgd2lsbCBob2xkIHRoZSBudW1iZXIgb2YgY29kZSBwb2ludHMgaW4gYGlucHV0YC4gKi9cXFxcblxcXFx0XFxcXHQgICAgaW5wdXRMZW5ndGgsXFxcXG5cXFxcdFxcXFx0ICAgIC8qKiBDYWNoZWQgY2FsY3VsYXRpb24gcmVzdWx0cyAqL1xcXFxuXFxcXHRcXFxcdCAgICBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsXFxcXG5cXFxcdFxcXFx0ICAgIGJhc2VNaW51c1QsXFxcXG5cXFxcdFxcXFx0ICAgIHFNaW51c1Q7XFxcXG5cXFxcblxcXFx0XFxcXHQvLyBDb252ZXJ0IHRoZSBpbnB1dCBpbiBVQ1MtMiB0byBVbmljb2RlXFxcXG5cXFxcdFxcXFx0aW5wdXQgPSB1Y3MyZGVjb2RlKGlucHV0KTtcXFxcblxcXFxuXFxcXHRcXFxcdC8vIENhY2hlIHRoZSBsZW5ndGhcXFxcblxcXFx0XFxcXHRpbnB1dExlbmd0aCA9IGlucHV0Lmxlbmd0aDtcXFxcblxcXFxuXFxcXHRcXFxcdC8vIEluaXRpYWxpemUgdGhlIHN0YXRlXFxcXG5cXFxcdFxcXFx0biA9IGluaXRpYWxOO1xcXFxuXFxcXHRcXFxcdGRlbHRhID0gMDtcXFxcblxcXFx0XFxcXHRiaWFzID0gaW5pdGlhbEJpYXM7XFxcXG5cXFxcblxcXFx0XFxcXHQvLyBIYW5kbGUgdGhlIGJhc2ljIGNvZGUgcG9pbnRzXFxcXG5cXFxcdFxcXFx0Zm9yIChqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHtcXFxcblxcXFx0XFxcXHRcXFxcdGN1cnJlbnRWYWx1ZSA9IGlucHV0W2pdO1xcXFxuXFxcXHRcXFxcdFxcXFx0aWYgKGN1cnJlbnRWYWx1ZSA8IDB4ODApIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0b3V0cHV0LnB1c2goc3RyaW5nRnJvbUNoYXJDb2RlKGN1cnJlbnRWYWx1ZSkpO1xcXFxuXFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFxuXFxcXHRcXFxcdGhhbmRsZWRDUENvdW50ID0gYmFzaWNMZW5ndGggPSBvdXRwdXQubGVuZ3RoO1xcXFxuXFxcXG5cXFxcdFxcXFx0Ly8gYGhhbmRsZWRDUENvdW50YCBpcyB0aGUgbnVtYmVyIG9mIGNvZGUgcG9pbnRzIHRoYXQgaGF2ZSBiZWVuIGhhbmRsZWQ7XFxcXG5cXFxcdFxcXFx0Ly8gYGJhc2ljTGVuZ3RoYCBpcyB0aGUgbnVtYmVyIG9mIGJhc2ljIGNvZGUgcG9pbnRzLlxcXFxuXFxcXG5cXFxcdFxcXFx0Ly8gRmluaXNoIHRoZSBiYXNpYyBzdHJpbmcgLSBpZiBpdCBpcyBub3QgZW1wdHkgLSB3aXRoIGEgZGVsaW1pdGVyXFxcXG5cXFxcdFxcXFx0aWYgKGJhc2ljTGVuZ3RoKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRvdXRwdXQucHVzaChkZWxpbWl0ZXIpO1xcXFxuXFxcXHRcXFxcdH1cXFxcblxcXFxuXFxcXHRcXFxcdC8vIE1haW4gZW5jb2RpbmcgbG9vcDpcXFxcblxcXFx0XFxcXHR3aGlsZSAoaGFuZGxlZENQQ291bnQgPCBpbnB1dExlbmd0aCkge1xcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBBbGwgbm9uLWJhc2ljIGNvZGUgcG9pbnRzIDwgbiBoYXZlIGJlZW4gaGFuZGxlZCBhbHJlYWR5LiBGaW5kIHRoZSBuZXh0XFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBsYXJnZXIgb25lOlxcXFxuXFxcXHRcXFxcdFxcXFx0Zm9yIChtID0gbWF4SW50LCBqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0Y3VycmVudFZhbHVlID0gaW5wdXRbal07XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdGlmIChjdXJyZW50VmFsdWUgPj0gbiAmJiBjdXJyZW50VmFsdWUgPCBtKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0bSA9IGN1cnJlbnRWYWx1ZTtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBJbmNyZWFzZSBgZGVsdGFgIGVub3VnaCB0byBhZHZhbmNlIHRoZSBkZWNvZGVyJ3MgPG4saT4gc3RhdGUgdG8gPG0sMD4sXFxcXG5cXFxcdFxcXFx0XFxcXHQvLyBidXQgZ3VhcmQgYWdhaW5zdCBvdmVyZmxvd1xcXFxuXFxcXHRcXFxcdFxcXFx0aGFuZGxlZENQQ291bnRQbHVzT25lID0gaGFuZGxlZENQQ291bnQgKyAxO1xcXFxuXFxcXHRcXFxcdFxcXFx0aWYgKG0gLSBuID4gZmxvb3IoKG1heEludCAtIGRlbHRhKSAvIGhhbmRsZWRDUENvdW50UGx1c09uZSkpIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0ZXJyb3IoJ292ZXJmbG93Jyk7XFxcXG5cXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcblxcXFx0XFxcXHRcXFxcdGRlbHRhICs9IChtIC0gbikgKiBoYW5kbGVkQ1BDb3VudFBsdXNPbmU7XFxcXG5cXFxcdFxcXFx0XFxcXHRuID0gbTtcXFxcblxcXFxuXFxcXHRcXFxcdFxcXFx0Zm9yIChqID0gMDsgaiA8IGlucHV0TGVuZ3RoOyArK2opIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0Y3VycmVudFZhbHVlID0gaW5wdXRbal07XFxcXG5cXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0aWYgKGN1cnJlbnRWYWx1ZSA8IG4gJiYgKytkZWx0YSA+IG1heEludCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdGVycm9yKCdvdmVyZmxvdycpO1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0aWYgKGN1cnJlbnRWYWx1ZSA9PSBuKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0Ly8gUmVwcmVzZW50IGRlbHRhIGFzIGEgZ2VuZXJhbGl6ZWQgdmFyaWFibGUtbGVuZ3RoIGludGVnZXJcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRmb3IgKHEgPSBkZWx0YSwgayA9IGJhc2U7IC8qIG5vIGNvbmRpdGlvbiAqLzsgayArPSBiYXNlKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHR0ID0gayA8PSBiaWFzID8gdE1pbiA6IChrID49IGJpYXMgKyB0TWF4ID8gdE1heCA6IGsgLSBiaWFzKTtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdGlmIChxIDwgdCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRicmVhaztcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdH1cXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdHFNaW51c1QgPSBxIC0gdDtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdGJhc2VNaW51c1QgPSBiYXNlIC0gdDtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdG91dHB1dC5wdXNoKFxcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHQgKyBxTWludXNUICUgYmFzZU1pbnVzVCwgMCkpXFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHQpO1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0cSA9IGZsb29yKHFNaW51c1QgLyBiYXNlTWludXNUKTtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRvdXRwdXQucHVzaChzdHJpbmdGcm9tQ2hhckNvZGUoZGlnaXRUb0Jhc2ljKHEsIDApKSk7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0YmlhcyA9IGFkYXB0KGRlbHRhLCBoYW5kbGVkQ1BDb3VudFBsdXNPbmUsIGhhbmRsZWRDUENvdW50ID09IGJhc2ljTGVuZ3RoKTtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0XFxcXHRkZWx0YSA9IDA7XFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdFxcXFx0KytoYW5kbGVkQ1BDb3VudDtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXG5cXFxcdFxcXFx0XFxcXHQrK2RlbHRhO1xcXFxuXFxcXHRcXFxcdFxcXFx0KytuO1xcXFxuXFxcXG5cXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdHJldHVybiBvdXRwdXQuam9pbignJyk7XFxcXG5cXFxcdH1cXFxcblxcXFxuXFxcXHQvKipcXFxcblxcXFx0ICogQ29udmVydHMgYSBQdW55Y29kZSBzdHJpbmcgcmVwcmVzZW50aW5nIGEgZG9tYWluIG5hbWUgb3IgYW4gZW1haWwgYWRkcmVzc1xcXFxuXFxcXHQgKiB0byBVbmljb2RlLiBPbmx5IHRoZSBQdW55Y29kZWQgcGFydHMgb2YgdGhlIGlucHV0IHdpbGwgYmUgY29udmVydGVkLCBpLmUuXFxcXG5cXFxcdCAqIGl0IGRvZXNuJ3QgbWF0dGVyIGlmIHlvdSBjYWxsIGl0IG9uIGEgc3RyaW5nIHRoYXQgaGFzIGFscmVhZHkgYmVlblxcXFxuXFxcXHQgKiBjb252ZXJ0ZWQgdG8gVW5pY29kZS5cXFxcblxcXFx0ICogQG1lbWJlck9mIHB1bnljb2RlXFxcXG5cXFxcdCAqIEBwYXJhbSB7U3RyaW5nfSBpbnB1dCBUaGUgUHVueWNvZGVkIGRvbWFpbiBuYW1lIG9yIGVtYWlsIGFkZHJlc3MgdG9cXFxcblxcXFx0ICogY29udmVydCB0byBVbmljb2RlLlxcXFxuXFxcXHQgKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgVW5pY29kZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZ2l2ZW4gUHVueWNvZGVcXFxcblxcXFx0ICogc3RyaW5nLlxcXFxuXFxcXHQgKi9cXFxcblxcXFx0ZnVuY3Rpb24gdG9Vbmljb2RlKGlucHV0KSB7XFxcXG5cXFxcdFxcXFx0cmV0dXJuIG1hcERvbWFpbihpbnB1dCwgZnVuY3Rpb24oc3RyaW5nKSB7XFxcXG5cXFxcdFxcXFx0XFxcXHRyZXR1cm4gcmVnZXhQdW55Y29kZS50ZXN0KHN0cmluZylcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0PyBkZWNvZGUoc3RyaW5nLnNsaWNlKDQpLnRvTG93ZXJDYXNlKCkpXFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdDogc3RyaW5nO1xcXFxuXFxcXHRcXFxcdH0pO1xcXFxuXFxcXHR9XFxcXG5cXFxcblxcXFx0LyoqXFxcXG5cXFxcdCAqIENvbnZlcnRzIGEgVW5pY29kZSBzdHJpbmcgcmVwcmVzZW50aW5nIGEgZG9tYWluIG5hbWUgb3IgYW4gZW1haWwgYWRkcmVzcyB0b1xcXFxuXFxcXHQgKiBQdW55Y29kZS4gT25seSB0aGUgbm9uLUFTQ0lJIHBhcnRzIG9mIHRoZSBkb21haW4gbmFtZSB3aWxsIGJlIGNvbnZlcnRlZCxcXFxcblxcXFx0ICogaS5lLiBpdCBkb2Vzbid0IG1hdHRlciBpZiB5b3UgY2FsbCBpdCB3aXRoIGEgZG9tYWluIHRoYXQncyBhbHJlYWR5IGluXFxcXG5cXFxcdCAqIEFTQ0lJLlxcXFxuXFxcXHQgKiBAbWVtYmVyT2YgcHVueWNvZGVcXFxcblxcXFx0ICogQHBhcmFtIHtTdHJpbmd9IGlucHV0IFRoZSBkb21haW4gbmFtZSBvciBlbWFpbCBhZGRyZXNzIHRvIGNvbnZlcnQsIGFzIGFcXFxcblxcXFx0ICogVW5pY29kZSBzdHJpbmcuXFxcXG5cXFxcdCAqIEByZXR1cm5zIHtTdHJpbmd9IFRoZSBQdW55Y29kZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZ2l2ZW4gZG9tYWluIG5hbWUgb3JcXFxcblxcXFx0ICogZW1haWwgYWRkcmVzcy5cXFxcblxcXFx0ICovXFxcXG5cXFxcdGZ1bmN0aW9uIHRvQVNDSUkoaW5wdXQpIHtcXFxcblxcXFx0XFxcXHRyZXR1cm4gbWFwRG9tYWluKGlucHV0LCBmdW5jdGlvbihzdHJpbmcpIHtcXFxcblxcXFx0XFxcXHRcXFxcdHJldHVybiByZWdleE5vbkFTQ0lJLnRlc3Qoc3RyaW5nKVxcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHQ/ICd4bi0tJyArIGVuY29kZShzdHJpbmcpXFxcXG5cXFxcdFxcXFx0XFxcXHRcXFxcdDogc3RyaW5nO1xcXFxuXFxcXHRcXFxcdH0pO1xcXFxuXFxcXHR9XFxcXG5cXFxcblxcXFx0LyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXFxcXG5cXFxcblxcXFx0LyoqIERlZmluZSB0aGUgcHVibGljIEFQSSAqL1xcXFxuXFxcXHRwdW55Y29kZSA9IHtcXFxcblxcXFx0XFxcXHQvKipcXFxcblxcXFx0XFxcXHQgKiBBIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIGN1cnJlbnQgUHVueWNvZGUuanMgdmVyc2lvbiBudW1iZXIuXFxcXG5cXFxcdFxcXFx0ICogQG1lbWJlck9mIHB1bnljb2RlXFxcXG5cXFxcdFxcXFx0ICogQHR5cGUgU3RyaW5nXFxcXG5cXFxcdFxcXFx0ICovXFxcXG5cXFxcdFxcXFx0J3ZlcnNpb24nOiAnMS40LjEnLFxcXFxuXFxcXHRcXFxcdC8qKlxcXFxuXFxcXHRcXFxcdCAqIEFuIG9iamVjdCBvZiBtZXRob2RzIHRvIGNvbnZlcnQgZnJvbSBKYXZhU2NyaXB0J3MgaW50ZXJuYWwgY2hhcmFjdGVyXFxcXG5cXFxcdFxcXFx0ICogcmVwcmVzZW50YXRpb24gKFVDUy0yKSB0byBVbmljb2RlIGNvZGUgcG9pbnRzLCBhbmQgYmFjay5cXFxcblxcXFx0XFxcXHQgKiBAc2VlIDxodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvamF2YXNjcmlwdC1lbmNvZGluZz5cXFxcblxcXFx0XFxcXHQgKiBAbWVtYmVyT2YgcHVueWNvZGVcXFxcblxcXFx0XFxcXHQgKiBAdHlwZSBPYmplY3RcXFxcblxcXFx0XFxcXHQgKi9cXFxcblxcXFx0XFxcXHQndWNzMic6IHtcXFxcblxcXFx0XFxcXHRcXFxcdCdkZWNvZGUnOiB1Y3MyZGVjb2RlLFxcXFxuXFxcXHRcXFxcdFxcXFx0J2VuY29kZSc6IHVjczJlbmNvZGVcXFxcblxcXFx0XFxcXHR9LFxcXFxuXFxcXHRcXFxcdCdkZWNvZGUnOiBkZWNvZGUsXFxcXG5cXFxcdFxcXFx0J2VuY29kZSc6IGVuY29kZSxcXFxcblxcXFx0XFxcXHQndG9BU0NJSSc6IHRvQVNDSUksXFxcXG5cXFxcdFxcXFx0J3RvVW5pY29kZSc6IHRvVW5pY29kZVxcXFxuXFxcXHR9O1xcXFxuXFxcXG5cXFxcdC8qKiBFeHBvc2UgYHB1bnljb2RlYCAqL1xcXFxuXFxcXHQvLyBTb21lIEFNRCBidWlsZCBvcHRpbWl6ZXJzLCBsaWtlIHIuanMsIGNoZWNrIGZvciBzcGVjaWZpYyBjb25kaXRpb24gcGF0dGVybnNcXFxcblxcXFx0Ly8gbGlrZSB0aGUgZm9sbG93aW5nOlxcXFxuXFxcXHRpZiAoXFxcXG5cXFxcdFxcXFx0dHJ1ZVxcXFxuXFxcXHQpIHtcXFxcblxcXFx0XFxcXHQhKF9fV0VCUEFDS19BTURfREVGSU5FX1JFU1VMVF9fID0gKGZ1bmN0aW9uKCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0cmV0dXJuIHB1bnljb2RlO1xcXFxuXFxcXHRcXFxcdH0pLmNhbGwoZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXywgZXhwb3J0cywgbW9kdWxlKSxcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0X19XRUJQQUNLX0FNRF9ERUZJTkVfUkVTVUxUX18gIT09IHVuZGVmaW5lZCAmJiAobW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfQU1EX0RFRklORV9SRVNVTFRfXykpO1xcXFxuXFxcXHR9IGVsc2Uge31cXFxcblxcXFxufSh0aGlzKSk7XFxcXG5cXFxcbi8qIFdFQlBBQ0sgVkFSIElOSkVDVElPTiAqL30uY2FsbCh0aGlzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLy4uLy4uLy4uL3dlYnBhY2svYnVpbGRpbi9tb2R1bGUuanMgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vbW9kdWxlLmpzXFxcXFxcXCIpKG1vZHVsZSksIF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vLi4vLi4vLi4vd2VicGFjay9idWlsZGluL2dsb2JhbC5qcyAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9nbG9iYWwuanNcXFxcXFxcIikpKS8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZibTlrWlMxc2FXSnpMV0p5YjNkelpYSXZibTlrWlY5dGIyUjFiR1Z6TDNCMWJubGpiMlJsTDNCMWJubGpiMlJsTG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12Ym05a1pTMXNhV0p6TFdKeWIzZHpaWEl2Ym05a1pWOXRiMlIxYkdWekwzQjFibmxqYjJSbEwzQjFibmxqYjJSbExtcHpQekU1T0RVaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9oSUdoMGRIQnpPaTh2YlhSb2N5NWlaUzl3ZFc1NVkyOWtaU0IyTVM0MExqRWdZbmtnUUcxaGRHaHBZWE1nS2k5Y2Jqc29ablZ1WTNScGIyNG9jbTl2ZENrZ2UxeHVYRzVjZEM4cUtpQkVaWFJsWTNRZ1puSmxaU0IyWVhKcFlXSnNaWE1nS2k5Y2JseDBkbUZ5SUdaeVpXVkZlSEJ2Y25SeklEMGdkSGx3Wlc5bUlHVjRjRzl5ZEhNZ1BUMGdKMjlpYW1WamRDY2dKaVlnWlhod2IzSjBjeUFtSmx4dVhIUmNkQ0ZsZUhCdmNuUnpMbTV2WkdWVWVYQmxJQ1ltSUdWNGNHOXlkSE03WEc1Y2RIWmhjaUJtY21WbFRXOWtkV3hsSUQwZ2RIbHdaVzltSUcxdlpIVnNaU0E5UFNBbmIySnFaV04wSnlBbUppQnRiMlIxYkdVZ0ppWmNibHgwWEhRaGJXOWtkV3hsTG01dlpHVlVlWEJsSUNZbUlHMXZaSFZzWlR0Y2JseDBkbUZ5SUdaeVpXVkhiRzlpWVd3Z1BTQjBlWEJsYjJZZ1oyeHZZbUZzSUQwOUlDZHZZbXBsWTNRbklDWW1JR2RzYjJKaGJEdGNibHgwYVdZZ0tGeHVYSFJjZEdaeVpXVkhiRzlpWVd3dVoyeHZZbUZzSUQwOVBTQm1jbVZsUjJ4dlltRnNJSHg4WEc1Y2RGeDBabkpsWlVkc2IySmhiQzUzYVc1a2IzY2dQVDA5SUdaeVpXVkhiRzlpWVd3Z2ZIeGNibHgwWEhSbWNtVmxSMnh2WW1Gc0xuTmxiR1lnUFQwOUlHWnlaV1ZIYkc5aVlXeGNibHgwS1NCN1hHNWNkRngwY205dmRDQTlJR1p5WldWSGJHOWlZV3c3WEc1Y2RIMWNibHh1WEhRdktpcGNibHgwSUNvZ1ZHaGxJR0J3ZFc1NVkyOWtaV0FnYjJKcVpXTjBMbHh1WEhRZ0tpQkFibUZ0WlNCd2RXNTVZMjlrWlZ4dVhIUWdLaUJBZEhsd1pTQlBZbXBsWTNSY2JseDBJQ292WEc1Y2RIWmhjaUJ3ZFc1NVkyOWtaU3hjYmx4dVhIUXZLaW9nU0dsbmFHVnpkQ0J3YjNOcGRHbDJaU0J6YVdkdVpXUWdNekl0WW1sMElHWnNiMkYwSUhaaGJIVmxJQ292WEc1Y2RHMWhlRWx1ZENBOUlESXhORGMwT0RNMk5EY3NJQzh2SUdGcllTNGdNSGczUmtaR1JrWkdSaUJ2Y2lBeVhqTXhMVEZjYmx4dVhIUXZLaW9nUW05dmRITjBjbWx1WnlCd1lYSmhiV1YwWlhKeklDb3ZYRzVjZEdKaGMyVWdQU0F6Tml4Y2JseDBkRTFwYmlBOUlERXNYRzVjZEhSTllYZ2dQU0F5Tml4Y2JseDBjMnRsZHlBOUlETTRMRnh1WEhSa1lXMXdJRDBnTnpBd0xGeHVYSFJwYm1sMGFXRnNRbWxoY3lBOUlEY3lMRnh1WEhScGJtbDBhV0ZzVGlBOUlERXlPQ3dnTHk4Z01IZzRNRnh1WEhSa1pXeHBiV2wwWlhJZ1BTQW5MU2NzSUM4dklDZGNYSGd5UkNkY2JseHVYSFF2S2lvZ1VtVm5kV3hoY2lCbGVIQnlaWE56YVc5dWN5QXFMMXh1WEhSeVpXZGxlRkIxYm5samIyUmxJRDBnTDE1NGJpMHRMeXhjYmx4MGNtVm5aWGhPYjI1QlUwTkpTU0E5SUM5YlhseGNlREl3TFZ4Y2VEZEZYUzhzSUM4dklIVnVjSEpwYm5SaFlteGxJRUZUUTBsSklHTm9ZWEp6SUNzZ2JtOXVMVUZUUTBsSklHTm9ZWEp6WEc1Y2RISmxaMlY0VTJWd1lYSmhkRzl5Y3lBOUlDOWJYRng0TWtWY1hIVXpNREF5WEZ4MVJrWXdSVnhjZFVaR05qRmRMMmNzSUM4dklGSkdReUF6TkRrd0lITmxjR0Z5WVhSdmNuTmNibHh1WEhRdktpb2dSWEp5YjNJZ2JXVnpjMkZuWlhNZ0tpOWNibHgwWlhKeWIzSnpJRDBnZTF4dVhIUmNkQ2R2ZG1WeVpteHZkeWM2SUNkUGRtVnlabXh2ZHpvZ2FXNXdkWFFnYm1WbFpITWdkMmxrWlhJZ2FXNTBaV2RsY25NZ2RHOGdjSEp2WTJWemN5Y3NYRzVjZEZ4MEoyNXZkQzFpWVhOcFl5YzZJQ2RKYkd4bFoyRnNJR2x1Y0hWMElENDlJREI0T0RBZ0tHNXZkQ0JoSUdKaGMybGpJR052WkdVZ2NHOXBiblFwSnl4Y2JseDBYSFFuYVc1MllXeHBaQzFwYm5CMWRDYzZJQ2RKYm5aaGJHbGtJR2x1Y0hWMEoxeHVYSFI5TEZ4dVhHNWNkQzhxS2lCRGIyNTJaVzVwWlc1alpTQnphRzl5ZEdOMWRITWdLaTljYmx4MFltRnpaVTFwYm5WelZFMXBiaUE5SUdKaGMyVWdMU0IwVFdsdUxGeHVYSFJtYkc5dmNpQTlJRTFoZEdndVpteHZiM0lzWEc1Y2RITjBjbWx1WjBaeWIyMURhR0Z5UTI5a1pTQTlJRk4wY21sdVp5NW1jbTl0UTJoaGNrTnZaR1VzWEc1Y2JseDBMeW9xSUZSbGJYQnZjbUZ5ZVNCMllYSnBZV0pzWlNBcUwxeHVYSFJyWlhrN1hHNWNibHgwTHlvdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTb3ZYRzVjYmx4MEx5b3FYRzVjZENBcUlFRWdaMlZ1WlhKcFl5Qmxjbkp2Y2lCMWRHbHNhWFI1SUdaMWJtTjBhVzl1TGx4dVhIUWdLaUJBY0hKcGRtRjBaVnh1WEhRZ0tpQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ2RIbHdaU0JVYUdVZ1pYSnliM0lnZEhsd1pTNWNibHgwSUNvZ1FISmxkSFZ5Ym5NZ2UwVnljbTl5ZlNCVWFISnZkM01nWVNCZ1VtRnVaMlZGY25KdmNtQWdkMmwwYUNCMGFHVWdZWEJ3YkdsallXSnNaU0JsY25KdmNpQnRaWE56WVdkbExseHVYSFFnS2k5Y2JseDBablZ1WTNScGIyNGdaWEp5YjNJb2RIbHdaU2tnZTF4dVhIUmNkSFJvY205M0lHNWxkeUJTWVc1blpVVnljbTl5S0dWeWNtOXljMXQwZVhCbFhTazdYRzVjZEgxY2JseHVYSFF2S2lwY2JseDBJQ29nUVNCblpXNWxjbWxqSUdCQmNuSmhlU050WVhCZ0lIVjBhV3hwZEhrZ1puVnVZM1JwYjI0dVhHNWNkQ0FxSUVCd2NtbDJZWFJsWEc1Y2RDQXFJRUJ3WVhKaGJTQjdRWEp5WVhsOUlHRnljbUY1SUZSb1pTQmhjbkpoZVNCMGJ5QnBkR1Z5WVhSbElHOTJaWEl1WEc1Y2RDQXFJRUJ3WVhKaGJTQjdSblZ1WTNScGIyNTlJR05oYkd4aVlXTnJJRlJvWlNCbWRXNWpkR2x2YmlCMGFHRjBJR2RsZEhNZ1kyRnNiR1ZrSUdadmNpQmxkbVZ5ZVNCaGNuSmhlVnh1WEhRZ0tpQnBkR1Z0TGx4dVhIUWdLaUJBY21WMGRYSnVjeUI3UVhKeVlYbDlJRUVnYm1WM0lHRnljbUY1SUc5bUlIWmhiSFZsY3lCeVpYUjFjbTVsWkNCaWVTQjBhR1VnWTJGc2JHSmhZMnNnWm5WdVkzUnBiMjR1WEc1Y2RDQXFMMXh1WEhSbWRXNWpkR2x2YmlCdFlYQW9ZWEp5WVhrc0lHWnVLU0I3WEc1Y2RGeDBkbUZ5SUd4bGJtZDBhQ0E5SUdGeWNtRjVMbXhsYm1kMGFEdGNibHgwWEhSMllYSWdjbVZ6ZFd4MElEMGdXMTA3WEc1Y2RGeDBkMmhwYkdVZ0tHeGxibWQwYUMwdEtTQjdYRzVjZEZ4MFhIUnlaWE4xYkhSYmJHVnVaM1JvWFNBOUlHWnVLR0Z5Y21GNVcyeGxibWQwYUYwcE8xeHVYSFJjZEgxY2JseDBYSFJ5WlhSMWNtNGdjbVZ6ZFd4ME8xeHVYSFI5WEc1Y2JseDBMeW9xWEc1Y2RDQXFJRUVnYzJsdGNHeGxJR0JCY25KaGVTTnRZWEJnTFd4cGEyVWdkM0poY0hCbGNpQjBieUIzYjNKcklIZHBkR2dnWkc5dFlXbHVJRzVoYldVZ2MzUnlhVzVuY3lCdmNpQmxiV0ZwYkZ4dVhIUWdLaUJoWkdSeVpYTnpaWE11WEc1Y2RDQXFJRUJ3Y21sMllYUmxYRzVjZENBcUlFQndZWEpoYlNCN1UzUnlhVzVuZlNCa2IyMWhhVzRnVkdobElHUnZiV0ZwYmlCdVlXMWxJRzl5SUdWdFlXbHNJR0ZrWkhKbGMzTXVYRzVjZENBcUlFQndZWEpoYlNCN1JuVnVZM1JwYjI1OUlHTmhiR3hpWVdOcklGUm9aU0JtZFc1amRHbHZiaUIwYUdGMElHZGxkSE1nWTJGc2JHVmtJR1p2Y2lCbGRtVnllVnh1WEhRZ0tpQmphR0Z5WVdOMFpYSXVYRzVjZENBcUlFQnlaWFIxY201eklIdEJjbkpoZVgwZ1FTQnVaWGNnYzNSeWFXNW5JRzltSUdOb1lYSmhZM1JsY25NZ2NtVjBkWEp1WldRZ1lua2dkR2hsSUdOaGJHeGlZV05yWEc1Y2RDQXFJR1oxYm1OMGFXOXVMbHh1WEhRZ0tpOWNibHgwWm5WdVkzUnBiMjRnYldGd1JHOXRZV2x1S0hOMGNtbHVaeXdnWm00cElIdGNibHgwWEhSMllYSWdjR0Z5ZEhNZ1BTQnpkSEpwYm1jdWMzQnNhWFFvSjBBbktUdGNibHgwWEhSMllYSWdjbVZ6ZFd4MElEMGdKeWM3WEc1Y2RGeDBhV1lnS0hCaGNuUnpMbXhsYm1kMGFDQStJREVwSUh0Y2JseDBYSFJjZEM4dklFbHVJR1Z0WVdsc0lHRmtaSEpsYzNObGN5d2diMjVzZVNCMGFHVWdaRzl0WVdsdUlHNWhiV1VnYzJodmRXeGtJR0psSUhCMWJubGpiMlJsWkM0Z1RHVmhkbVZjYmx4MFhIUmNkQzh2SUhSb1pTQnNiMk5oYkNCd1lYSjBJQ2hwTG1VdUlHVjJaWEo1ZEdocGJtY2dkWEFnZEc4Z1lFQmdLU0JwYm5SaFkzUXVYRzVjZEZ4MFhIUnlaWE4xYkhRZ1BTQndZWEowYzFzd1hTQXJJQ2RBSnp0Y2JseDBYSFJjZEhOMGNtbHVaeUE5SUhCaGNuUnpXekZkTzF4dVhIUmNkSDFjYmx4MFhIUXZMeUJCZG05cFpDQmdjM0JzYVhRb2NtVm5aWGdwWUNCbWIzSWdTVVU0SUdOdmJYQmhkR2xpYVd4cGRIa3VJRk5sWlNBak1UY3VYRzVjZEZ4MGMzUnlhVzVuSUQwZ2MzUnlhVzVuTG5KbGNHeGhZMlVvY21WblpYaFRaWEJoY21GMGIzSnpMQ0FuWEZ4NE1rVW5LVHRjYmx4MFhIUjJZWElnYkdGaVpXeHpJRDBnYzNSeWFXNW5Mbk53YkdsMEtDY3VKeWs3WEc1Y2RGeDBkbUZ5SUdWdVkyOWtaV1FnUFNCdFlYQW9iR0ZpWld4ekxDQm1iaWt1YW05cGJpZ25MaWNwTzF4dVhIUmNkSEpsZEhWeWJpQnlaWE4xYkhRZ0t5QmxibU52WkdWa08xeHVYSFI5WEc1Y2JseDBMeW9xWEc1Y2RDQXFJRU55WldGMFpYTWdZVzRnWVhKeVlYa2dZMjl1ZEdGcGJtbHVaeUIwYUdVZ2JuVnRaWEpwWXlCamIyUmxJSEJ2YVc1MGN5QnZaaUJsWVdOb0lGVnVhV052WkdWY2JseDBJQ29nWTJoaGNtRmpkR1Z5SUdsdUlIUm9aU0J6ZEhKcGJtY3VJRmRvYVd4bElFcGhkbUZUWTNKcGNIUWdkWE5sY3lCVlExTXRNaUJwYm5SbGNtNWhiR3g1TEZ4dVhIUWdLaUIwYUdseklHWjFibU4wYVc5dUlIZHBiR3dnWTI5dWRtVnlkQ0JoSUhCaGFYSWdiMllnYzNWeWNtOW5ZWFJsSUdoaGJIWmxjeUFvWldGamFDQnZaaUIzYUdsamFGeHVYSFFnS2lCVlExTXRNaUJsZUhCdmMyVnpJR0Z6SUhObGNHRnlZWFJsSUdOb1lYSmhZM1JsY25NcElHbHVkRzhnWVNCemFXNW5iR1VnWTI5a1pTQndiMmx1ZEN4Y2JseDBJQ29nYldGMFkyaHBibWNnVlZSR0xURTJMbHh1WEhRZ0tpQkFjMlZsSUdCd2RXNTVZMjlrWlM1MVkzTXlMbVZ1WTI5a1pXQmNibHgwSUNvZ1FITmxaU0E4YUhSMGNITTZMeTl0WVhSb2FXRnpZbmx1Wlc1ekxtSmxMMjV2ZEdWekwycGhkbUZ6WTNKcGNIUXRaVzVqYjJScGJtYytYRzVjZENBcUlFQnRaVzFpWlhKUFppQndkVzU1WTI5a1pTNTFZM015WEc1Y2RDQXFJRUJ1WVcxbElHUmxZMjlrWlZ4dVhIUWdLaUJBY0dGeVlXMGdlMU4wY21sdVozMGdjM1J5YVc1bklGUm9aU0JWYm1samIyUmxJR2x1Y0hWMElITjBjbWx1WnlBb1ZVTlRMVElwTGx4dVhIUWdLaUJBY21WMGRYSnVjeUI3UVhKeVlYbDlJRlJvWlNCdVpYY2dZWEp5WVhrZ2IyWWdZMjlrWlNCd2IybHVkSE11WEc1Y2RDQXFMMXh1WEhSbWRXNWpkR2x2YmlCMVkzTXlaR1ZqYjJSbEtITjBjbWx1WnlrZ2UxeHVYSFJjZEhaaGNpQnZkWFJ3ZFhRZ1BTQmJYU3hjYmx4MFhIUWdJQ0FnWTI5MWJuUmxjaUE5SURBc1hHNWNkRngwSUNBZ0lHeGxibWQwYUNBOUlITjBjbWx1Wnk1c1pXNW5kR2dzWEc1Y2RGeDBJQ0FnSUhaaGJIVmxMRnh1WEhSY2RDQWdJQ0JsZUhSeVlUdGNibHgwWEhSM2FHbHNaU0FvWTI5MWJuUmxjaUE4SUd4bGJtZDBhQ2tnZTF4dVhIUmNkRngwZG1Gc2RXVWdQU0J6ZEhKcGJtY3VZMmhoY2tOdlpHVkJkQ2hqYjNWdWRHVnlLeXNwTzF4dVhIUmNkRngwYVdZZ0tIWmhiSFZsSUQ0OUlEQjRSRGd3TUNBbUppQjJZV3gxWlNBOFBTQXdlRVJDUmtZZ0ppWWdZMjkxYm5SbGNpQThJR3hsYm1kMGFDa2dlMXh1WEhSY2RGeDBYSFF2THlCb2FXZG9JSE4xY25KdloyRjBaU3dnWVc1a0lIUm9aWEpsSUdseklHRWdibVY0ZENCamFHRnlZV04wWlhKY2JseDBYSFJjZEZ4MFpYaDBjbUVnUFNCemRISnBibWN1WTJoaGNrTnZaR1ZCZENoamIzVnVkR1Z5S3lzcE8xeHVYSFJjZEZ4MFhIUnBaaUFvS0dWNGRISmhJQ1lnTUhoR1F6QXdLU0E5UFNBd2VFUkRNREFwSUhzZ0x5OGdiRzkzSUhOMWNuSnZaMkYwWlZ4dVhIUmNkRngwWEhSY2RHOTFkSEIxZEM1d2RYTm9LQ2dvZG1Gc2RXVWdKaUF3ZUROR1Jpa2dQRHdnTVRBcElDc2dLR1Y0ZEhKaElDWWdNSGd6UmtZcElDc2dNSGd4TURBd01DazdYRzVjZEZ4MFhIUmNkSDBnWld4elpTQjdYRzVjZEZ4MFhIUmNkRngwTHk4Z2RXNXRZWFJqYUdWa0lITjFjbkp2WjJGMFpUc2diMjVzZVNCaGNIQmxibVFnZEdocGN5QmpiMlJsSUhWdWFYUXNJR2x1SUdOaGMyVWdkR2hsSUc1bGVIUmNibHgwWEhSY2RGeDBYSFF2THlCamIyUmxJSFZ1YVhRZ2FYTWdkR2hsSUdocFoyZ2djM1Z5Y205bllYUmxJRzltSUdFZ2MzVnljbTluWVhSbElIQmhhWEpjYmx4MFhIUmNkRngwWEhSdmRYUndkWFF1Y0hWemFDaDJZV3gxWlNrN1hHNWNkRngwWEhSY2RGeDBZMjkxYm5SbGNpMHRPMXh1WEhSY2RGeDBYSFI5WEc1Y2RGeDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBYSFJ2ZFhSd2RYUXVjSFZ6YUNoMllXeDFaU2s3WEc1Y2RGeDBYSFI5WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCdmRYUndkWFE3WEc1Y2RIMWNibHh1WEhRdktpcGNibHgwSUNvZ1EzSmxZWFJsY3lCaElITjBjbWx1WnlCaVlYTmxaQ0J2YmlCaGJpQmhjbkpoZVNCdlppQnVkVzFsY21saklHTnZaR1VnY0c5cGJuUnpMbHh1WEhRZ0tpQkFjMlZsSUdCd2RXNTVZMjlrWlM1MVkzTXlMbVJsWTI5a1pXQmNibHgwSUNvZ1FHMWxiV0psY2s5bUlIQjFibmxqYjJSbExuVmpjekpjYmx4MElDb2dRRzVoYldVZ1pXNWpiMlJsWEc1Y2RDQXFJRUJ3WVhKaGJTQjdRWEp5WVhsOUlHTnZaR1ZRYjJsdWRITWdWR2hsSUdGeWNtRjVJRzltSUc1MWJXVnlhV01nWTI5a1pTQndiMmx1ZEhNdVhHNWNkQ0FxSUVCeVpYUjFjbTV6SUh0VGRISnBibWQ5SUZSb1pTQnVaWGNnVlc1cFkyOWtaU0J6ZEhKcGJtY2dLRlZEVXkweUtTNWNibHgwSUNvdlhHNWNkR1oxYm1OMGFXOXVJSFZqY3pKbGJtTnZaR1VvWVhKeVlYa3BJSHRjYmx4MFhIUnlaWFIxY200Z2JXRndLR0Z5Y21GNUxDQm1kVzVqZEdsdmJpaDJZV3gxWlNrZ2UxeHVYSFJjZEZ4MGRtRnlJRzkxZEhCMWRDQTlJQ2NuTzF4dVhIUmNkRngwYVdZZ0tIWmhiSFZsSUQ0Z01IaEdSa1pHS1NCN1hHNWNkRngwWEhSY2RIWmhiSFZsSUMwOUlEQjRNVEF3TURBN1hHNWNkRngwWEhSY2RHOTFkSEIxZENBclBTQnpkSEpwYm1kR2NtOXRRMmhoY2tOdlpHVW9kbUZzZFdVZ1BqNCtJREV3SUNZZ01IZ3pSa1lnZkNBd2VFUTRNREFwTzF4dVhIUmNkRngwWEhSMllXeDFaU0E5SURCNFJFTXdNQ0I4SUhaaGJIVmxJQ1lnTUhnelJrWTdYRzVjZEZ4MFhIUjlYRzVjZEZ4MFhIUnZkWFJ3ZFhRZ0t6MGdjM1J5YVc1blJuSnZiVU5vWVhKRGIyUmxLSFpoYkhWbEtUdGNibHgwWEhSY2RISmxkSFZ5YmlCdmRYUndkWFE3WEc1Y2RGeDBmU2t1YW05cGJpZ25KeWs3WEc1Y2RIMWNibHh1WEhRdktpcGNibHgwSUNvZ1EyOXVkbVZ5ZEhNZ1lTQmlZWE5wWXlCamIyUmxJSEJ2YVc1MElHbHVkRzhnWVNCa2FXZHBkQzlwYm5SbFoyVnlMbHh1WEhRZ0tpQkFjMlZsSUdCa2FXZHBkRlJ2UW1GemFXTW9LV0JjYmx4MElDb2dRSEJ5YVhaaGRHVmNibHgwSUNvZ1FIQmhjbUZ0SUh0T2RXMWlaWEo5SUdOdlpHVlFiMmx1ZENCVWFHVWdZbUZ6YVdNZ2JuVnRaWEpwWXlCamIyUmxJSEJ2YVc1MElIWmhiSFZsTGx4dVhIUWdLaUJBY21WMGRYSnVjeUI3VG5WdFltVnlmU0JVYUdVZ2JuVnRaWEpwWXlCMllXeDFaU0J2WmlCaElHSmhjMmxqSUdOdlpHVWdjRzlwYm5RZ0tHWnZjaUIxYzJVZ2FXNWNibHgwSUNvZ2NtVndjbVZ6Wlc1MGFXNW5JR2x1ZEdWblpYSnpLU0JwYmlCMGFHVWdjbUZ1WjJVZ1lEQmdJSFJ2SUdCaVlYTmxJQzBnTVdBc0lHOXlJR0JpWVhObFlDQnBabHh1WEhRZ0tpQjBhR1VnWTI5a1pTQndiMmx1ZENCa2IyVnpJRzV2ZENCeVpYQnlaWE5sYm5RZ1lTQjJZV3gxWlM1Y2JseDBJQ292WEc1Y2RHWjFibU4wYVc5dUlHSmhjMmxqVkc5RWFXZHBkQ2hqYjJSbFVHOXBiblFwSUh0Y2JseDBYSFJwWmlBb1kyOWtaVkJ2YVc1MElDMGdORGdnUENBeE1Da2dlMXh1WEhSY2RGeDBjbVYwZFhKdUlHTnZaR1ZRYjJsdWRDQXRJREl5TzF4dVhIUmNkSDFjYmx4MFhIUnBaaUFvWTI5a1pWQnZhVzUwSUMwZ05qVWdQQ0F5TmlrZ2UxeHVYSFJjZEZ4MGNtVjBkWEp1SUdOdlpHVlFiMmx1ZENBdElEWTFPMXh1WEhSY2RIMWNibHgwWEhScFppQW9ZMjlrWlZCdmFXNTBJQzBnT1RjZ1BDQXlOaWtnZTF4dVhIUmNkRngwY21WMGRYSnVJR052WkdWUWIybHVkQ0F0SURrM08xeHVYSFJjZEgxY2JseDBYSFJ5WlhSMWNtNGdZbUZ6WlR0Y2JseDBmVnh1WEc1Y2RDOHFLbHh1WEhRZ0tpQkRiMjUyWlhKMGN5QmhJR1JwWjJsMEwybHVkR1ZuWlhJZ2FXNTBieUJoSUdKaGMybGpJR052WkdVZ2NHOXBiblF1WEc1Y2RDQXFJRUJ6WldVZ1lHSmhjMmxqVkc5RWFXZHBkQ2dwWUZ4dVhIUWdLaUJBY0hKcGRtRjBaVnh1WEhRZ0tpQkFjR0Z5WVcwZ2UwNTFiV0psY24wZ1pHbG5hWFFnVkdobElHNTFiV1Z5YVdNZ2RtRnNkV1VnYjJZZ1lTQmlZWE5wWXlCamIyUmxJSEJ2YVc1MExseHVYSFFnS2lCQWNtVjBkWEp1Y3lCN1RuVnRZbVZ5ZlNCVWFHVWdZbUZ6YVdNZ1kyOWtaU0J3YjJsdWRDQjNhRzl6WlNCMllXeDFaU0FvZDJobGJpQjFjMlZrSUdadmNseHVYSFFnS2lCeVpYQnlaWE5sYm5ScGJtY2dhVzUwWldkbGNuTXBJR2x6SUdCa2FXZHBkR0FzSUhkb2FXTm9JRzVsWldSeklIUnZJR0psSUdsdUlIUm9aU0J5WVc1blpWeHVYSFFnS2lCZ01HQWdkRzhnWUdKaGMyVWdMU0F4WUM0Z1NXWWdZR1pzWVdkZ0lHbHpJRzV2YmkxNlpYSnZMQ0IwYUdVZ2RYQndaWEpqWVhObElHWnZjbTBnYVhOY2JseDBJQ29nZFhObFpEc2daV3h6WlN3Z2RHaGxJR3h2ZDJWeVkyRnpaU0JtYjNKdElHbHpJSFZ6WldRdUlGUm9aU0JpWldoaGRtbHZjaUJwY3lCMWJtUmxabWx1WldSY2JseDBJQ29nYVdZZ1lHWnNZV2RnSUdseklHNXZiaTE2WlhKdklHRnVaQ0JnWkdsbmFYUmdJR2hoY3lCdWJ5QjFjSEJsY21OaGMyVWdabTl5YlM1Y2JseDBJQ292WEc1Y2RHWjFibU4wYVc5dUlHUnBaMmwwVkc5Q1lYTnBZeWhrYVdkcGRDd2dabXhoWnlrZ2UxeHVYSFJjZEM4dklDQXdMaTR5TlNCdFlYQWdkRzhnUVZORFNVa2dZUzR1ZWlCdmNpQkJMaTVhWEc1Y2RGeDBMeThnTWpZdUxqTTFJRzFoY0NCMGJ5QkJVME5KU1NBd0xpNDVYRzVjZEZ4MGNtVjBkWEp1SUdScFoybDBJQ3NnTWpJZ0t5QTNOU0FxSUNoa2FXZHBkQ0E4SURJMktTQXRJQ2dvWm14aFp5QWhQU0F3S1NBOFBDQTFLVHRjYmx4MGZWeHVYRzVjZEM4cUtseHVYSFFnS2lCQ2FXRnpJR0ZrWVhCMFlYUnBiMjRnWm5WdVkzUnBiMjRnWVhNZ2NHVnlJSE5sWTNScGIyNGdNeTQwSUc5bUlGSkdReUF6TkRreUxseHVYSFFnS2lCb2RIUndjem92TDNSdmIyeHpMbWxsZEdZdWIzSm5MMmgwYld3dmNtWmpNelE1TWlOelpXTjBhVzl1TFRNdU5GeHVYSFFnS2lCQWNISnBkbUYwWlZ4dVhIUWdLaTljYmx4MFpuVnVZM1JwYjI0Z1lXUmhjSFFvWkdWc2RHRXNJRzUxYlZCdmFXNTBjeXdnWm1seWMzUlVhVzFsS1NCN1hHNWNkRngwZG1GeUlHc2dQU0F3TzF4dVhIUmNkR1JsYkhSaElEMGdabWx5YzNSVWFXMWxJRDhnWm14dmIzSW9aR1ZzZEdFZ0x5QmtZVzF3S1NBNklHUmxiSFJoSUQ0K0lERTdYRzVjZEZ4MFpHVnNkR0VnS3owZ1pteHZiM0lvWkdWc2RHRWdMeUJ1ZFcxUWIybHVkSE1wTzF4dVhIUmNkR1p2Y2lBb0x5b2dibThnYVc1cGRHbGhiR2w2WVhScGIyNGdLaTg3SUdSbGJIUmhJRDRnWW1GelpVMXBiblZ6VkUxcGJpQXFJSFJOWVhnZ1BqNGdNVHNnYXlBclBTQmlZWE5sS1NCN1hHNWNkRngwWEhSa1pXeDBZU0E5SUdac2IyOXlLR1JsYkhSaElDOGdZbUZ6WlUxcGJuVnpWRTFwYmlrN1hHNWNkRngwZlZ4dVhIUmNkSEpsZEhWeWJpQm1iRzl2Y2locklDc2dLR0poYzJWTmFXNTFjMVJOYVc0Z0t5QXhLU0FxSUdSbGJIUmhJQzhnS0dSbGJIUmhJQ3NnYzJ0bGR5a3BPMXh1WEhSOVhHNWNibHgwTHlvcVhHNWNkQ0FxSUVOdmJuWmxjblJ6SUdFZ1VIVnVlV052WkdVZ2MzUnlhVzVuSUc5bUlFRlRRMGxKTFc5dWJIa2djM2x0WW05c2N5QjBieUJoSUhOMGNtbHVaeUJ2WmlCVmJtbGpiMlJsWEc1Y2RDQXFJSE41YldKdmJITXVYRzVjZENBcUlFQnRaVzFpWlhKUFppQndkVzU1WTI5a1pWeHVYSFFnS2lCQWNHRnlZVzBnZTFOMGNtbHVaMzBnYVc1d2RYUWdWR2hsSUZCMWJubGpiMlJsSUhOMGNtbHVaeUJ2WmlCQlUwTkpTUzF2Ym14NUlITjViV0p2YkhNdVhHNWNkQ0FxSUVCeVpYUjFjbTV6SUh0VGRISnBibWQ5SUZSb1pTQnlaWE4xYkhScGJtY2djM1J5YVc1bklHOW1JRlZ1YVdOdlpHVWdjM2x0WW05c2N5NWNibHgwSUNvdlhHNWNkR1oxYm1OMGFXOXVJR1JsWTI5a1pTaHBibkIxZENrZ2UxeHVYSFJjZEM4dklFUnZiaWQwSUhWelpTQlZRMU10TWx4dVhIUmNkSFpoY2lCdmRYUndkWFFnUFNCYlhTeGNibHgwWEhRZ0lDQWdhVzV3ZFhSTVpXNW5kR2dnUFNCcGJuQjFkQzVzWlc1bmRHZ3NYRzVjZEZ4MElDQWdJRzkxZEN4Y2JseDBYSFFnSUNBZ2FTQTlJREFzWEc1Y2RGeDBJQ0FnSUc0Z1BTQnBibWwwYVdGc1RpeGNibHgwWEhRZ0lDQWdZbWxoY3lBOUlHbHVhWFJwWVd4Q2FXRnpMRnh1WEhSY2RDQWdJQ0JpWVhOcFl5eGNibHgwWEhRZ0lDQWdhaXhjYmx4MFhIUWdJQ0FnYVc1a1pYZ3NYRzVjZEZ4MElDQWdJRzlzWkdrc1hHNWNkRngwSUNBZ0lIY3NYRzVjZEZ4MElDQWdJR3NzWEc1Y2RGeDBJQ0FnSUdScFoybDBMRnh1WEhSY2RDQWdJQ0IwTEZ4dVhIUmNkQ0FnSUNBdktpb2dRMkZqYUdWa0lHTmhiR04xYkdGMGFXOXVJSEpsYzNWc2RITWdLaTljYmx4MFhIUWdJQ0FnWW1GelpVMXBiblZ6VkR0Y2JseHVYSFJjZEM4dklFaGhibVJzWlNCMGFHVWdZbUZ6YVdNZ1kyOWtaU0J3YjJsdWRITTZJR3hsZENCZ1ltRnphV05nSUdKbElIUm9aU0J1ZFcxaVpYSWdiMllnYVc1d2RYUWdZMjlrWlZ4dVhIUmNkQzh2SUhCdmFXNTBjeUJpWldadmNtVWdkR2hsSUd4aGMzUWdaR1ZzYVcxcGRHVnlMQ0J2Y2lCZ01HQWdhV1lnZEdobGNtVWdhWE1nYm05dVpTd2dkR2hsYmlCamIzQjVYRzVjZEZ4MEx5OGdkR2hsSUdacGNuTjBJR0poYzJsaklHTnZaR1VnY0c5cGJuUnpJSFJ2SUhSb1pTQnZkWFJ3ZFhRdVhHNWNibHgwWEhSaVlYTnBZeUE5SUdsdWNIVjBMbXhoYzNSSmJtUmxlRTltS0dSbGJHbHRhWFJsY2lrN1hHNWNkRngwYVdZZ0tHSmhjMmxqSUR3Z01Da2dlMXh1WEhSY2RGeDBZbUZ6YVdNZ1BTQXdPMXh1WEhSY2RIMWNibHh1WEhSY2RHWnZjaUFvYWlBOUlEQTdJR29nUENCaVlYTnBZenNnS3l0cUtTQjdYRzVjZEZ4MFhIUXZMeUJwWmlCcGRDZHpJRzV2ZENCaElHSmhjMmxqSUdOdlpHVWdjRzlwYm5SY2JseDBYSFJjZEdsbUlDaHBibkIxZEM1amFHRnlRMjlrWlVGMEtHb3BJRDQ5SURCNE9EQXBJSHRjYmx4MFhIUmNkRngwWlhKeWIzSW9KMjV2ZEMxaVlYTnBZeWNwTzF4dVhIUmNkRngwZlZ4dVhIUmNkRngwYjNWMGNIVjBMbkIxYzJnb2FXNXdkWFF1WTJoaGNrTnZaR1ZCZENocUtTazdYRzVjZEZ4MGZWeHVYRzVjZEZ4MEx5OGdUV0ZwYmlCa1pXTnZaR2x1WnlCc2IyOXdPaUJ6ZEdGeWRDQnFkWE4wSUdGbWRHVnlJSFJvWlNCc1lYTjBJR1JsYkdsdGFYUmxjaUJwWmlCaGJua2dZbUZ6YVdNZ1kyOWtaVnh1WEhSY2RDOHZJSEJ2YVc1MGN5QjNaWEpsSUdOdmNHbGxaRHNnYzNSaGNuUWdZWFFnZEdobElHSmxaMmx1Ym1sdVp5QnZkR2hsY25kcGMyVXVYRzVjYmx4MFhIUm1iM0lnS0dsdVpHVjRJRDBnWW1GemFXTWdQaUF3SUQ4Z1ltRnphV01nS3lBeElEb2dNRHNnYVc1a1pYZ2dQQ0JwYm5CMWRFeGxibWQwYURzZ0x5b2dibThnWm1sdVlXd2daWGh3Y21WemMybHZiaUFxTHlrZ2UxeHVYRzVjZEZ4MFhIUXZMeUJnYVc1a1pYaGdJR2x6SUhSb1pTQnBibVJsZUNCdlppQjBhR1VnYm1WNGRDQmphR0Z5WVdOMFpYSWdkRzhnWW1VZ1kyOXVjM1Z0WldRdVhHNWNkRngwWEhRdkx5QkVaV052WkdVZ1lTQm5aVzVsY21Gc2FYcGxaQ0IyWVhKcFlXSnNaUzFzWlc1bmRHZ2dhVzUwWldkbGNpQnBiblJ2SUdCa1pXeDBZV0FzWEc1Y2RGeDBYSFF2THlCM2FHbGphQ0JuWlhSeklHRmtaR1ZrSUhSdklHQnBZQzRnVkdobElHOTJaWEptYkc5M0lHTm9aV05yYVc1bklHbHpJR1ZoYzJsbGNseHVYSFJjZEZ4MEx5OGdhV1lnZDJVZ2FXNWpjbVZoYzJVZ1lHbGdJR0Z6SUhkbElHZHZMQ0IwYUdWdUlITjFZblJ5WVdOMElHOW1aaUJwZEhNZ2MzUmhjblJwYm1kY2JseDBYSFJjZEM4dklIWmhiSFZsSUdGMElIUm9aU0JsYm1RZ2RHOGdiMkowWVdsdUlHQmtaV3gwWVdBdVhHNWNkRngwWEhSbWIzSWdLRzlzWkdrZ1BTQnBMQ0IzSUQwZ01Td2dheUE5SUdKaGMyVTdJQzhxSUc1dklHTnZibVJwZEdsdmJpQXFMenNnYXlBclBTQmlZWE5sS1NCN1hHNWNibHgwWEhSY2RGeDBhV1lnS0dsdVpHVjRJRDQ5SUdsdWNIVjBUR1Z1WjNSb0tTQjdYRzVjZEZ4MFhIUmNkRngwWlhKeWIzSW9KMmx1ZG1Gc2FXUXRhVzV3ZFhRbktUdGNibHgwWEhSY2RGeDBmVnh1WEc1Y2RGeDBYSFJjZEdScFoybDBJRDBnWW1GemFXTlViMFJwWjJsMEtHbHVjSFYwTG1Ob1lYSkRiMlJsUVhRb2FXNWtaWGdyS3lrcE8xeHVYRzVjZEZ4MFhIUmNkR2xtSUNoa2FXZHBkQ0ErUFNCaVlYTmxJSHg4SUdScFoybDBJRDRnWm14dmIzSW9LRzFoZUVsdWRDQXRJR2twSUM4Z2R5a3BJSHRjYmx4MFhIUmNkRngwWEhSbGNuSnZjaWduYjNabGNtWnNiM2NuS1R0Y2JseDBYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUmNkR2tnS3owZ1pHbG5hWFFnS2lCM08xeHVYSFJjZEZ4MFhIUjBJRDBnYXlBOFBTQmlhV0Z6SUQ4Z2RFMXBiaUE2SUNocklENDlJR0pwWVhNZ0t5QjBUV0Y0SUQ4Z2RFMWhlQ0E2SUdzZ0xTQmlhV0Z6S1R0Y2JseHVYSFJjZEZ4MFhIUnBaaUFvWkdsbmFYUWdQQ0IwS1NCN1hHNWNkRngwWEhSY2RGeDBZbkpsWVdzN1hHNWNkRngwWEhSY2RIMWNibHh1WEhSY2RGeDBYSFJpWVhObFRXbHVkWE5VSUQwZ1ltRnpaU0F0SUhRN1hHNWNkRngwWEhSY2RHbG1JQ2gzSUQ0Z1pteHZiM0lvYldGNFNXNTBJQzhnWW1GelpVMXBiblZ6VkNrcElIdGNibHgwWEhSY2RGeDBYSFJsY25KdmNpZ25iM1psY21ac2IzY25LVHRjYmx4MFhIUmNkRngwZlZ4dVhHNWNkRngwWEhSY2RIY2dLajBnWW1GelpVMXBiblZ6VkR0Y2JseHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUnZkWFFnUFNCdmRYUndkWFF1YkdWdVozUm9JQ3NnTVR0Y2JseDBYSFJjZEdKcFlYTWdQU0JoWkdGd2RDaHBJQzBnYjJ4a2FTd2diM1YwTENCdmJHUnBJRDA5SURBcE8xeHVYRzVjZEZ4MFhIUXZMeUJnYVdBZ2QyRnpJSE4xY0hCdmMyVmtJSFJ2SUhkeVlYQWdZWEp2ZFc1a0lHWnliMjBnWUc5MWRHQWdkRzhnWURCZ0xGeHVYSFJjZEZ4MEx5OGdhVzVqY21WdFpXNTBhVzVuSUdCdVlDQmxZV05vSUhScGJXVXNJSE52SUhkbEoyeHNJR1pwZUNCMGFHRjBJRzV2ZHpwY2JseDBYSFJjZEdsbUlDaG1iRzl2Y2locElDOGdiM1YwS1NBK0lHMWhlRWx1ZENBdElHNHBJSHRjYmx4MFhIUmNkRngwWlhKeWIzSW9KMjkyWlhKbWJHOTNKeWs3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEc0Z0t6MGdabXh2YjNJb2FTQXZJRzkxZENrN1hHNWNkRngwWEhScElDVTlJRzkxZER0Y2JseHVYSFJjZEZ4MEx5OGdTVzV6WlhKMElHQnVZQ0JoZENCd2IzTnBkR2x2YmlCZ2FXQWdiMllnZEdobElHOTFkSEIxZEZ4dVhIUmNkRngwYjNWMGNIVjBMbk53YkdsalpTaHBLeXNzSURBc0lHNHBPMXh1WEc1Y2RGeDBmVnh1WEc1Y2RGeDBjbVYwZFhKdUlIVmpjekpsYm1OdlpHVW9iM1YwY0hWMEtUdGNibHgwZlZ4dVhHNWNkQzhxS2x4dVhIUWdLaUJEYjI1MlpYSjBjeUJoSUhOMGNtbHVaeUJ2WmlCVmJtbGpiMlJsSUhONWJXSnZiSE1nS0dVdVp5NGdZU0JrYjIxaGFXNGdibUZ0WlNCc1lXSmxiQ2tnZEc4Z1lWeHVYSFFnS2lCUWRXNTVZMjlrWlNCemRISnBibWNnYjJZZ1FWTkRTVWt0YjI1c2VTQnplVzFpYjJ4ekxseHVYSFFnS2lCQWJXVnRZbVZ5VDJZZ2NIVnVlV052WkdWY2JseDBJQ29nUUhCaGNtRnRJSHRUZEhKcGJtZDlJR2x1Y0hWMElGUm9aU0J6ZEhKcGJtY2diMllnVlc1cFkyOWtaU0J6ZVcxaWIyeHpMbHh1WEhRZ0tpQkFjbVYwZFhKdWN5QjdVM1J5YVc1bmZTQlVhR1VnY21WemRXeDBhVzVuSUZCMWJubGpiMlJsSUhOMGNtbHVaeUJ2WmlCQlUwTkpTUzF2Ym14NUlITjViV0p2YkhNdVhHNWNkQ0FxTDF4dVhIUm1kVzVqZEdsdmJpQmxibU52WkdVb2FXNXdkWFFwSUh0Y2JseDBYSFIyWVhJZ2JpeGNibHgwWEhRZ0lDQWdaR1ZzZEdFc1hHNWNkRngwSUNBZ0lHaGhibVJzWldSRFVFTnZkVzUwTEZ4dVhIUmNkQ0FnSUNCaVlYTnBZMHhsYm1kMGFDeGNibHgwWEhRZ0lDQWdZbWxoY3l4Y2JseDBYSFFnSUNBZ2FpeGNibHgwWEhRZ0lDQWdiU3hjYmx4MFhIUWdJQ0FnY1N4Y2JseDBYSFFnSUNBZ2F5eGNibHgwWEhRZ0lDQWdkQ3hjYmx4MFhIUWdJQ0FnWTNWeWNtVnVkRlpoYkhWbExGeHVYSFJjZENBZ0lDQnZkWFJ3ZFhRZ1BTQmJYU3hjYmx4MFhIUWdJQ0FnTHlvcUlHQnBibkIxZEV4bGJtZDBhR0FnZDJsc2JDQm9iMnhrSUhSb1pTQnVkVzFpWlhJZ2IyWWdZMjlrWlNCd2IybHVkSE1nYVc0Z1lHbHVjSFYwWUM0Z0tpOWNibHgwWEhRZ0lDQWdhVzV3ZFhSTVpXNW5kR2dzWEc1Y2RGeDBJQ0FnSUM4cUtpQkRZV05vWldRZ1kyRnNZM1ZzWVhScGIyNGdjbVZ6ZFd4MGN5QXFMMXh1WEhSY2RDQWdJQ0JvWVc1a2JHVmtRMUJEYjNWdWRGQnNkWE5QYm1Vc1hHNWNkRngwSUNBZ0lHSmhjMlZOYVc1MWMxUXNYRzVjZEZ4MElDQWdJSEZOYVc1MWMxUTdYRzVjYmx4MFhIUXZMeUJEYjI1MlpYSjBJSFJvWlNCcGJuQjFkQ0JwYmlCVlExTXRNaUIwYnlCVmJtbGpiMlJsWEc1Y2RGeDBhVzV3ZFhRZ1BTQjFZM015WkdWamIyUmxLR2x1Y0hWMEtUdGNibHh1WEhSY2RDOHZJRU5oWTJobElIUm9aU0JzWlc1bmRHaGNibHgwWEhScGJuQjFkRXhsYm1kMGFDQTlJR2x1Y0hWMExteGxibWQwYUR0Y2JseHVYSFJjZEM4dklFbHVhWFJwWVd4cGVtVWdkR2hsSUhOMFlYUmxYRzVjZEZ4MGJpQTlJR2x1YVhScFlXeE9PMXh1WEhSY2RHUmxiSFJoSUQwZ01EdGNibHgwWEhSaWFXRnpJRDBnYVc1cGRHbGhiRUpwWVhNN1hHNWNibHgwWEhRdkx5QklZVzVrYkdVZ2RHaGxJR0poYzJsaklHTnZaR1VnY0c5cGJuUnpYRzVjZEZ4MFptOXlJQ2hxSUQwZ01Ec2dhaUE4SUdsdWNIVjBUR1Z1WjNSb095QXJLMm9wSUh0Y2JseDBYSFJjZEdOMWNuSmxiblJXWVd4MVpTQTlJR2x1Y0hWMFcycGRPMXh1WEhSY2RGeDBhV1lnS0dOMWNuSmxiblJXWVd4MVpTQThJREI0T0RBcElIdGNibHgwWEhSY2RGeDBiM1YwY0hWMExuQjFjMmdvYzNSeWFXNW5Sbkp2YlVOb1lYSkRiMlJsS0dOMWNuSmxiblJXWVd4MVpTa3BPMXh1WEhSY2RGeDBmVnh1WEhSY2RIMWNibHh1WEhSY2RHaGhibVJzWldSRFVFTnZkVzUwSUQwZ1ltRnphV05NWlc1bmRHZ2dQU0J2ZFhSd2RYUXViR1Z1WjNSb08xeHVYRzVjZEZ4MEx5OGdZR2hoYm1Sc1pXUkRVRU52ZFc1MFlDQnBjeUIwYUdVZ2JuVnRZbVZ5SUc5bUlHTnZaR1VnY0c5cGJuUnpJSFJvWVhRZ2FHRjJaU0JpWldWdUlHaGhibVJzWldRN1hHNWNkRngwTHk4Z1lHSmhjMmxqVEdWdVozUm9ZQ0JwY3lCMGFHVWdiblZ0WW1WeUlHOW1JR0poYzJsaklHTnZaR1VnY0c5cGJuUnpMbHh1WEc1Y2RGeDBMeThnUm1sdWFYTm9JSFJvWlNCaVlYTnBZeUJ6ZEhKcGJtY2dMU0JwWmlCcGRDQnBjeUJ1YjNRZ1pXMXdkSGtnTFNCM2FYUm9JR0VnWkdWc2FXMXBkR1Z5WEc1Y2RGeDBhV1lnS0dKaGMybGpUR1Z1WjNSb0tTQjdYRzVjZEZ4MFhIUnZkWFJ3ZFhRdWNIVnphQ2hrWld4cGJXbDBaWElwTzF4dVhIUmNkSDFjYmx4dVhIUmNkQzh2SUUxaGFXNGdaVzVqYjJScGJtY2diRzl2Y0RwY2JseDBYSFIzYUdsc1pTQW9hR0Z1Wkd4bFpFTlFRMjkxYm5RZ1BDQnBibkIxZEV4bGJtZDBhQ2tnZTF4dVhHNWNkRngwWEhRdkx5QkJiR3dnYm05dUxXSmhjMmxqSUdOdlpHVWdjRzlwYm5SeklEd2diaUJvWVhabElHSmxaVzRnYUdGdVpHeGxaQ0JoYkhKbFlXUjVMaUJHYVc1a0lIUm9aU0J1WlhoMFhHNWNkRngwWEhRdkx5QnNZWEpuWlhJZ2IyNWxPbHh1WEhSY2RGeDBabTl5SUNodElEMGdiV0Y0U1c1MExDQnFJRDBnTURzZ2FpQThJR2x1Y0hWMFRHVnVaM1JvT3lBcksyb3BJSHRjYmx4MFhIUmNkRngwWTNWeWNtVnVkRlpoYkhWbElEMGdhVzV3ZFhSYmFsMDdYRzVjZEZ4MFhIUmNkR2xtSUNoamRYSnlaVzUwVm1Gc2RXVWdQajBnYmlBbUppQmpkWEp5Wlc1MFZtRnNkV1VnUENCdEtTQjdYRzVjZEZ4MFhIUmNkRngwYlNBOUlHTjFjbkpsYm5SV1lXeDFaVHRjYmx4MFhIUmNkRngwZlZ4dVhIUmNkRngwZlZ4dVhHNWNkRngwWEhRdkx5QkpibU55WldGelpTQmdaR1ZzZEdGZ0lHVnViM1ZuYUNCMGJ5QmhaSFpoYm1ObElIUm9aU0JrWldOdlpHVnlKM01nUEc0c2FUNGdjM1JoZEdVZ2RHOGdQRzBzTUQ0c1hHNWNkRngwWEhRdkx5QmlkWFFnWjNWaGNtUWdZV2RoYVc1emRDQnZkbVZ5Wm14dmQxeHVYSFJjZEZ4MGFHRnVaR3hsWkVOUVEyOTFiblJRYkhWelQyNWxJRDBnYUdGdVpHeGxaRU5RUTI5MWJuUWdLeUF4TzF4dVhIUmNkRngwYVdZZ0tHMGdMU0J1SUQ0Z1pteHZiM0lvS0cxaGVFbHVkQ0F0SUdSbGJIUmhLU0F2SUdoaGJtUnNaV1JEVUVOdmRXNTBVR3gxYzA5dVpTa3BJSHRjYmx4MFhIUmNkRngwWlhKeWIzSW9KMjkyWlhKbWJHOTNKeWs3WEc1Y2RGeDBYSFI5WEc1Y2JseDBYSFJjZEdSbGJIUmhJQ3M5SUNodElDMGdiaWtnS2lCb1lXNWtiR1ZrUTFCRGIzVnVkRkJzZFhOUGJtVTdYRzVjZEZ4MFhIUnVJRDBnYlR0Y2JseHVYSFJjZEZ4MFptOXlJQ2hxSUQwZ01Ec2dhaUE4SUdsdWNIVjBUR1Z1WjNSb095QXJLMm9wSUh0Y2JseDBYSFJjZEZ4MFkzVnljbVZ1ZEZaaGJIVmxJRDBnYVc1d2RYUmJhbDA3WEc1Y2JseDBYSFJjZEZ4MGFXWWdLR04xY25KbGJuUldZV3gxWlNBOElHNGdKaVlnS3l0a1pXeDBZU0ErSUcxaGVFbHVkQ2tnZTF4dVhIUmNkRngwWEhSY2RHVnljbTl5S0NkdmRtVnlabXh2ZHljcE8xeHVYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwYVdZZ0tHTjFjbkpsYm5SV1lXeDFaU0E5UFNCdUtTQjdYRzVjZEZ4MFhIUmNkRngwTHk4Z1VtVndjbVZ6Wlc1MElHUmxiSFJoSUdGeklHRWdaMlZ1WlhKaGJHbDZaV1FnZG1GeWFXRmliR1V0YkdWdVozUm9JR2x1ZEdWblpYSmNibHgwWEhSY2RGeDBYSFJtYjNJZ0tIRWdQU0JrWld4MFlTd2dheUE5SUdKaGMyVTdJQzhxSUc1dklHTnZibVJwZEdsdmJpQXFMenNnYXlBclBTQmlZWE5sS1NCN1hHNWNkRngwWEhSY2RGeDBYSFIwSUQwZ2F5QThQU0JpYVdGeklEOGdkRTFwYmlBNklDaHJJRDQ5SUdKcFlYTWdLeUIwVFdGNElEOGdkRTFoZUNBNklHc2dMU0JpYVdGektUdGNibHgwWEhSY2RGeDBYSFJjZEdsbUlDaHhJRHdnZENrZ2UxeHVYSFJjZEZ4MFhIUmNkRngwWEhSaWNtVmhhenRjYmx4MFhIUmNkRngwWEhSY2RIMWNibHgwWEhSY2RGeDBYSFJjZEhGTmFXNTFjMVFnUFNCeElDMGdkRHRjYmx4MFhIUmNkRngwWEhSY2RHSmhjMlZOYVc1MWMxUWdQU0JpWVhObElDMGdkRHRjYmx4MFhIUmNkRngwWEhSY2RHOTFkSEIxZEM1d2RYTm9LRnh1WEhSY2RGeDBYSFJjZEZ4MFhIUnpkSEpwYm1kR2NtOXRRMmhoY2tOdlpHVW9aR2xuYVhSVWIwSmhjMmxqS0hRZ0t5QnhUV2x1ZFhOVUlDVWdZbUZ6WlUxcGJuVnpWQ3dnTUNrcFhHNWNkRngwWEhSY2RGeDBYSFFwTzF4dVhIUmNkRngwWEhSY2RGeDBjU0E5SUdac2IyOXlLSEZOYVc1MWMxUWdMeUJpWVhObFRXbHVkWE5VS1R0Y2JseDBYSFJjZEZ4MFhIUjlYRzVjYmx4MFhIUmNkRngwWEhSdmRYUndkWFF1Y0hWemFDaHpkSEpwYm1kR2NtOXRRMmhoY2tOdlpHVW9aR2xuYVhSVWIwSmhjMmxqS0hFc0lEQXBLU2s3WEc1Y2RGeDBYSFJjZEZ4MFltbGhjeUE5SUdGa1lYQjBLR1JsYkhSaExDQm9ZVzVrYkdWa1ExQkRiM1Z1ZEZCc2RYTlBibVVzSUdoaGJtUnNaV1JEVUVOdmRXNTBJRDA5SUdKaGMybGpUR1Z1WjNSb0tUdGNibHgwWEhSY2RGeDBYSFJrWld4MFlTQTlJREE3WEc1Y2RGeDBYSFJjZEZ4MEt5dG9ZVzVrYkdWa1ExQkRiM1Z1ZER0Y2JseDBYSFJjZEZ4MGZWeHVYSFJjZEZ4MGZWeHVYRzVjZEZ4MFhIUXJLMlJsYkhSaE8xeHVYSFJjZEZ4MEt5dHVPMXh1WEc1Y2RGeDBmVnh1WEhSY2RISmxkSFZ5YmlCdmRYUndkWFF1YW05cGJpZ25KeWs3WEc1Y2RIMWNibHh1WEhRdktpcGNibHgwSUNvZ1EyOXVkbVZ5ZEhNZ1lTQlFkVzU1WTI5a1pTQnpkSEpwYm1jZ2NtVndjbVZ6Wlc1MGFXNW5JR0VnWkc5dFlXbHVJRzVoYldVZ2IzSWdZVzRnWlcxaGFXd2dZV1JrY21WemMxeHVYSFFnS2lCMGJ5QlZibWxqYjJSbExpQlBibXg1SUhSb1pTQlFkVzU1WTI5a1pXUWdjR0Z5ZEhNZ2IyWWdkR2hsSUdsdWNIVjBJSGRwYkd3Z1ltVWdZMjl1ZG1WeWRHVmtMQ0JwTG1VdVhHNWNkQ0FxSUdsMElHUnZaWE51SjNRZ2JXRjBkR1Z5SUdsbUlIbHZkU0JqWVd4c0lHbDBJRzl1SUdFZ2MzUnlhVzVuSUhSb1lYUWdhR0Z6SUdGc2NtVmhaSGtnWW1WbGJseHVYSFFnS2lCamIyNTJaWEowWldRZ2RHOGdWVzVwWTI5a1pTNWNibHgwSUNvZ1FHMWxiV0psY2s5bUlIQjFibmxqYjJSbFhHNWNkQ0FxSUVCd1lYSmhiU0I3VTNSeWFXNW5mU0JwYm5CMWRDQlVhR1VnVUhWdWVXTnZaR1ZrSUdSdmJXRnBiaUJ1WVcxbElHOXlJR1Z0WVdsc0lHRmtaSEpsYzNNZ2RHOWNibHgwSUNvZ1kyOXVkbVZ5ZENCMGJ5QlZibWxqYjJSbExseHVYSFFnS2lCQWNtVjBkWEp1Y3lCN1UzUnlhVzVuZlNCVWFHVWdWVzVwWTI5a1pTQnlaWEJ5WlhObGJuUmhkR2x2YmlCdlppQjBhR1VnWjJsMlpXNGdVSFZ1ZVdOdlpHVmNibHgwSUNvZ2MzUnlhVzVuTGx4dVhIUWdLaTljYmx4MFpuVnVZM1JwYjI0Z2RHOVZibWxqYjJSbEtHbHVjSFYwS1NCN1hHNWNkRngwY21WMGRYSnVJRzFoY0VSdmJXRnBiaWhwYm5CMWRDd2dablZ1WTNScGIyNG9jM1J5YVc1bktTQjdYRzVjZEZ4MFhIUnlaWFIxY200Z2NtVm5aWGhRZFc1NVkyOWtaUzUwWlhOMEtITjBjbWx1WnlsY2JseDBYSFJjZEZ4MFB5QmtaV052WkdVb2MzUnlhVzVuTG5Oc2FXTmxLRFFwTG5SdlRHOTNaWEpEWVhObEtDa3BYRzVjZEZ4MFhIUmNkRG9nYzNSeWFXNW5PMXh1WEhSY2RIMHBPMXh1WEhSOVhHNWNibHgwTHlvcVhHNWNkQ0FxSUVOdmJuWmxjblJ6SUdFZ1ZXNXBZMjlrWlNCemRISnBibWNnY21Wd2NtVnpaVzUwYVc1bklHRWdaRzl0WVdsdUlHNWhiV1VnYjNJZ1lXNGdaVzFoYVd3Z1lXUmtjbVZ6Y3lCMGIxeHVYSFFnS2lCUWRXNTVZMjlrWlM0Z1QyNXNlU0IwYUdVZ2JtOXVMVUZUUTBsSklIQmhjblJ6SUc5bUlIUm9aU0JrYjIxaGFXNGdibUZ0WlNCM2FXeHNJR0psSUdOdmJuWmxjblJsWkN4Y2JseDBJQ29nYVM1bExpQnBkQ0JrYjJWemJpZDBJRzFoZEhSbGNpQnBaaUI1YjNVZ1kyRnNiQ0JwZENCM2FYUm9JR0VnWkc5dFlXbHVJSFJvWVhRbmN5QmhiSEpsWVdSNUlHbHVYRzVjZENBcUlFRlRRMGxKTGx4dVhIUWdLaUJBYldWdFltVnlUMllnY0hWdWVXTnZaR1ZjYmx4MElDb2dRSEJoY21GdElIdFRkSEpwYm1kOUlHbHVjSFYwSUZSb1pTQmtiMjFoYVc0Z2JtRnRaU0J2Y2lCbGJXRnBiQ0JoWkdSeVpYTnpJSFJ2SUdOdmJuWmxjblFzSUdGeklHRmNibHgwSUNvZ1ZXNXBZMjlrWlNCemRISnBibWN1WEc1Y2RDQXFJRUJ5WlhSMWNtNXpJSHRUZEhKcGJtZDlJRlJvWlNCUWRXNTVZMjlrWlNCeVpYQnlaWE5sYm5SaGRHbHZiaUJ2WmlCMGFHVWdaMmwyWlc0Z1pHOXRZV2x1SUc1aGJXVWdiM0pjYmx4MElDb2daVzFoYVd3Z1lXUmtjbVZ6Y3k1Y2JseDBJQ292WEc1Y2RHWjFibU4wYVc5dUlIUnZRVk5EU1Vrb2FXNXdkWFFwSUh0Y2JseDBYSFJ5WlhSMWNtNGdiV0Z3Ukc5dFlXbHVLR2x1Y0hWMExDQm1kVzVqZEdsdmJpaHpkSEpwYm1jcElIdGNibHgwWEhSY2RISmxkSFZ5YmlCeVpXZGxlRTV2YmtGVFEwbEpMblJsYzNRb2MzUnlhVzVuS1Z4dVhIUmNkRngwWEhRL0lDZDRiaTB0SnlBcklHVnVZMjlrWlNoemRISnBibWNwWEc1Y2RGeDBYSFJjZERvZ2MzUnlhVzVuTzF4dVhIUmNkSDBwTzF4dVhIUjlYRzVjYmx4MEx5b3RMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMU292WEc1Y2JseDBMeW9xSUVSbFptbHVaU0IwYUdVZ2NIVmliR2xqSUVGUVNTQXFMMXh1WEhSd2RXNTVZMjlrWlNBOUlIdGNibHgwWEhRdktpcGNibHgwWEhRZ0tpQkJJSE4wY21sdVp5QnlaWEJ5WlhObGJuUnBibWNnZEdobElHTjFjbkpsYm5RZ1VIVnVlV052WkdVdWFuTWdkbVZ5YzJsdmJpQnVkVzFpWlhJdVhHNWNkRngwSUNvZ1FHMWxiV0psY2s5bUlIQjFibmxqYjJSbFhHNWNkRngwSUNvZ1FIUjVjR1VnVTNSeWFXNW5YRzVjZEZ4MElDb3ZYRzVjZEZ4MEozWmxjbk5wYjI0bk9pQW5NUzQwTGpFbkxGeHVYSFJjZEM4cUtseHVYSFJjZENBcUlFRnVJRzlpYW1WamRDQnZaaUJ0WlhSb2IyUnpJSFJ2SUdOdmJuWmxjblFnWm5KdmJTQktZWFpoVTJOeWFYQjBKM01nYVc1MFpYSnVZV3dnWTJoaGNtRmpkR1Z5WEc1Y2RGeDBJQ29nY21Wd2NtVnpaVzUwWVhScGIyNGdLRlZEVXkweUtTQjBieUJWYm1samIyUmxJR052WkdVZ2NHOXBiblJ6TENCaGJtUWdZbUZqYXk1Y2JseDBYSFFnS2lCQWMyVmxJRHhvZEhSd2N6b3ZMMjFoZEdocFlYTmllVzVsYm5NdVltVXZibTkwWlhNdmFtRjJZWE5qY21sd2RDMWxibU52WkdsdVp6NWNibHgwWEhRZ0tpQkFiV1Z0WW1WeVQyWWdjSFZ1ZVdOdlpHVmNibHgwWEhRZ0tpQkFkSGx3WlNCUFltcGxZM1JjYmx4MFhIUWdLaTljYmx4MFhIUW5kV056TWljNklIdGNibHgwWEhSY2RDZGtaV052WkdVbk9pQjFZM015WkdWamIyUmxMRnh1WEhSY2RGeDBKMlZ1WTI5a1pTYzZJSFZqY3pKbGJtTnZaR1ZjYmx4MFhIUjlMRnh1WEhSY2RDZGtaV052WkdVbk9pQmtaV052WkdVc1hHNWNkRngwSjJWdVkyOWtaU2M2SUdWdVkyOWtaU3hjYmx4MFhIUW5kRzlCVTBOSlNTYzZJSFJ2UVZORFNVa3NYRzVjZEZ4MEozUnZWVzVwWTI5a1pTYzZJSFJ2Vlc1cFkyOWtaVnh1WEhSOU8xeHVYRzVjZEM4cUtpQkZlSEJ2YzJVZ1lIQjFibmxqYjJSbFlDQXFMMXh1WEhRdkx5QlRiMjFsSUVGTlJDQmlkV2xzWkNCdmNIUnBiV2w2WlhKekxDQnNhV3RsSUhJdWFuTXNJR05vWldOcklHWnZjaUJ6Y0dWamFXWnBZeUJqYjI1a2FYUnBiMjRnY0dGMGRHVnlibk5jYmx4MEx5OGdiR2xyWlNCMGFHVWdabTlzYkc5M2FXNW5PbHh1WEhScFppQW9YRzVjZEZ4MGRIbHdaVzltSUdSbFptbHVaU0E5UFNBblpuVnVZM1JwYjI0bklDWW1YRzVjZEZ4MGRIbHdaVzltSUdSbFptbHVaUzVoYldRZ1BUMGdKMjlpYW1WamRDY2dKaVpjYmx4MFhIUmtaV1pwYm1VdVlXMWtYRzVjZENrZ2UxeHVYSFJjZEdSbFptbHVaU2duY0hWdWVXTnZaR1VuTENCbWRXNWpkR2x2YmlncElIdGNibHgwWEhSY2RISmxkSFZ5YmlCd2RXNTVZMjlrWlR0Y2JseDBYSFI5S1R0Y2JseDBmU0JsYkhObElHbG1JQ2htY21WbFJYaHdiM0owY3lBbUppQm1jbVZsVFc5a2RXeGxLU0I3WEc1Y2RGeDBhV1lnS0cxdlpIVnNaUzVsZUhCdmNuUnpJRDA5SUdaeVpXVkZlSEJ2Y25SektTQjdYRzVjZEZ4MFhIUXZMeUJwYmlCT2IyUmxMbXB6TENCcGJ5NXFjeXdnYjNJZ1VtbHVaMjlLVXlCMk1DNDRMakFyWEc1Y2RGeDBYSFJtY21WbFRXOWtkV3hsTG1WNGNHOXlkSE1nUFNCd2RXNTVZMjlrWlR0Y2JseDBYSFI5SUdWc2MyVWdlMXh1WEhSY2RGeDBMeThnYVc0Z1RtRnlkMmhoYkNCdmNpQlNhVzVuYjBwVElIWXdMamN1TUMxY2JseDBYSFJjZEdadmNpQW9hMlY1SUdsdUlIQjFibmxqYjJSbEtTQjdYRzVjZEZ4MFhIUmNkSEIxYm5samIyUmxMbWhoYzA5M2JsQnliM0JsY25SNUtHdGxlU2tnSmlZZ0tHWnlaV1ZGZUhCdmNuUnpXMnRsZVYwZ1BTQndkVzU1WTI5a1pWdHJaWGxkS1R0Y2JseDBYSFJjZEgxY2JseDBYSFI5WEc1Y2RIMGdaV3h6WlNCN1hHNWNkRngwTHk4Z2FXNGdVbWhwYm04Z2IzSWdZU0IzWldJZ1luSnZkM05sY2x4dVhIUmNkSEp2YjNRdWNIVnVlV052WkdVZ1BTQndkVzU1WTI5a1pUdGNibHgwZlZ4dVhHNTlLSFJvYVhNcEtUdGNiaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFc1RVRkZRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVN4VlFXRkJPMEZCUTBFN1FVRkRRVHM3UVNJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL25vZGUtbGlicy1icm93c2VyL25vZGVfbW9kdWxlcy9wdW55Y29kZS9wdW55Y29kZS5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9kZWNvZGUuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cXFxcbi8vXFxcXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxcXFxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxcXFxuLy8gXFxcXFxcXCJTb2Z0d2FyZVxcXFxcXFwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXFxcXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXFxcXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XFxcXG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcXFxcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxcXFxuLy9cXFxcbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXFxcXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cXFxcbi8vXFxcXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXFxcXFxcXCJBUyBJU1xcXFxcXFwiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXFxcXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXFxcXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXFxcXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcXFxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxcXFxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxcXFxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cXFxcblxcXFxuXFxcXG5cXFxcbi8vIElmIG9iai5oYXNPd25Qcm9wZXJ0eSBoYXMgYmVlbiBvdmVycmlkZGVuLCB0aGVuIGNhbGxpbmdcXFxcbi8vIG9iai5oYXNPd25Qcm9wZXJ0eShwcm9wKSB3aWxsIGJyZWFrLlxcXFxuLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vam95ZW50L25vZGUvaXNzdWVzLzE3MDdcXFxcbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xcXFxuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XFxcXG59XFxcXG5cXFxcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ocXMsIHNlcCwgZXEsIG9wdGlvbnMpIHtcXFxcbiAgc2VwID0gc2VwIHx8ICcmJztcXFxcbiAgZXEgPSBlcSB8fCAnPSc7XFxcXG4gIHZhciBvYmogPSB7fTtcXFxcblxcXFxuICBpZiAodHlwZW9mIHFzICE9PSAnc3RyaW5nJyB8fCBxcy5sZW5ndGggPT09IDApIHtcXFxcbiAgICByZXR1cm4gb2JqO1xcXFxuICB9XFxcXG5cXFxcbiAgdmFyIHJlZ2V4cCA9IC9cXFxcXFxcXCsvZztcXFxcbiAgcXMgPSBxcy5zcGxpdChzZXApO1xcXFxuXFxcXG4gIHZhciBtYXhLZXlzID0gMTAwMDtcXFxcbiAgaWYgKG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMubWF4S2V5cyA9PT0gJ251bWJlcicpIHtcXFxcbiAgICBtYXhLZXlzID0gb3B0aW9ucy5tYXhLZXlzO1xcXFxuICB9XFxcXG5cXFxcbiAgdmFyIGxlbiA9IHFzLmxlbmd0aDtcXFxcbiAgLy8gbWF4S2V5cyA8PSAwIG1lYW5zIHRoYXQgd2Ugc2hvdWxkIG5vdCBsaW1pdCBrZXlzIGNvdW50XFxcXG4gIGlmIChtYXhLZXlzID4gMCAmJiBsZW4gPiBtYXhLZXlzKSB7XFxcXG4gICAgbGVuID0gbWF4S2V5cztcXFxcbiAgfVxcXFxuXFxcXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcXFxcbiAgICB2YXIgeCA9IHFzW2ldLnJlcGxhY2UocmVnZXhwLCAnJTIwJyksXFxcXG4gICAgICAgIGlkeCA9IHguaW5kZXhPZihlcSksXFxcXG4gICAgICAgIGtzdHIsIHZzdHIsIGssIHY7XFxcXG5cXFxcbiAgICBpZiAoaWR4ID49IDApIHtcXFxcbiAgICAgIGtzdHIgPSB4LnN1YnN0cigwLCBpZHgpO1xcXFxuICAgICAgdnN0ciA9IHguc3Vic3RyKGlkeCArIDEpO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBrc3RyID0geDtcXFxcbiAgICAgIHZzdHIgPSAnJztcXFxcbiAgICB9XFxcXG5cXFxcbiAgICBrID0gZGVjb2RlVVJJQ29tcG9uZW50KGtzdHIpO1xcXFxuICAgIHYgPSBkZWNvZGVVUklDb21wb25lbnQodnN0cik7XFxcXG5cXFxcbiAgICBpZiAoIWhhc093blByb3BlcnR5KG9iaiwgaykpIHtcXFxcbiAgICAgIG9ialtrXSA9IHY7XFxcXG4gICAgfSBlbHNlIGlmIChpc0FycmF5KG9ialtrXSkpIHtcXFxcbiAgICAgIG9ialtrXS5wdXNoKHYpO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICBvYmpba10gPSBbb2JqW2tdLCB2XTtcXFxcbiAgICB9XFxcXG4gIH1cXFxcblxcXFxuICByZXR1cm4gb2JqO1xcXFxufTtcXFxcblxcXFxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xcXFxuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12Y1hWbGNubHpkSEpwYm1jdFpYTXpMMlJsWTI5a1pTNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2Ym05a1pWOXRiMlIxYkdWekwzRjFaWEo1YzNSeWFXNW5MV1Z6TXk5a1pXTnZaR1V1YW5NL09URmtaQ0pkTENKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2V3lJdkx5QkRiM0I1Y21sbmFIUWdTbTk1Wlc1MExDQkpibU11SUdGdVpDQnZkR2hsY2lCT2IyUmxJR052Ym5SeWFXSjFkRzl5Y3k1Y2JpOHZYRzR2THlCUVpYSnRhWE56YVc5dUlHbHpJR2hsY21WaWVTQm5jbUZ1ZEdWa0xDQm1jbVZsSUc5bUlHTm9ZWEpuWlN3Z2RHOGdZVzU1SUhCbGNuTnZiaUJ2WW5SaGFXNXBibWNnWVZ4dUx5OGdZMjl3ZVNCdlppQjBhR2x6SUhOdlpuUjNZWEpsSUdGdVpDQmhjM052WTJsaGRHVmtJR1J2WTNWdFpXNTBZWFJwYjI0Z1ptbHNaWE1nS0hSb1pWeHVMeThnWENKVGIyWjBkMkZ5WlZ3aUtTd2dkRzhnWkdWaGJDQnBiaUIwYUdVZ1UyOW1kSGRoY21VZ2QybDBhRzkxZENCeVpYTjBjbWxqZEdsdmJpd2dhVzVqYkhWa2FXNW5YRzR2THlCM2FYUm9iM1YwSUd4cGJXbDBZWFJwYjI0Z2RHaGxJSEpwWjJoMGN5QjBieUIxYzJVc0lHTnZjSGtzSUcxdlpHbG1lU3dnYldWeVoyVXNJSEIxWW14cGMyZ3NYRzR2THlCa2FYTjBjbWxpZFhSbExDQnpkV0pzYVdObGJuTmxMQ0JoYm1RdmIzSWdjMlZzYkNCamIzQnBaWE1nYjJZZ2RHaGxJRk52Wm5SM1lYSmxMQ0JoYm1RZ2RHOGdjR1Z5YldsMFhHNHZMeUJ3WlhKemIyNXpJSFJ2SUhkb2IyMGdkR2hsSUZOdlpuUjNZWEpsSUdseklHWjFjbTVwYzJobFpDQjBieUJrYnlCemJ5d2djM1ZpYW1WamRDQjBieUIwYUdWY2JpOHZJR1p2Ykd4dmQybHVaeUJqYjI1a2FYUnBiMjV6T2x4dUx5OWNiaTh2SUZSb1pTQmhZbTkyWlNCamIzQjVjbWxuYUhRZ2JtOTBhV05sSUdGdVpDQjBhR2x6SUhCbGNtMXBjM05wYjI0Z2JtOTBhV05sSUhOb1lXeHNJR0psSUdsdVkyeDFaR1ZrWEc0dkx5QnBiaUJoYkd3Z1kyOXdhV1Z6SUc5eUlITjFZbk4wWVc1MGFXRnNJSEJ2Y25ScGIyNXpJRzltSUhSb1pTQlRiMlowZDJGeVpTNWNiaTh2WEc0dkx5QlVTRVVnVTA5R1ZGZEJVa1VnU1ZNZ1VGSlBWa2xFUlVRZ1hDSkJVeUJKVTF3aUxDQlhTVlJJVDFWVUlGZEJVbEpCVGxSWklFOUdJRUZPV1NCTFNVNUVMQ0JGV0ZCU1JWTlRYRzR2THlCUFVpQkpUVkJNU1VWRUxDQkpUa05NVlVSSlRrY2dRbFZVSUU1UFZDQk1TVTFKVkVWRUlGUlBJRlJJUlNCWFFWSlNRVTVVU1VWVElFOUdYRzR2THlCTlJWSkRTRUZPVkVGQ1NVeEpWRmtzSUVaSlZFNUZVMU1nUms5U0lFRWdVRUZTVkVsRFZVeEJVaUJRVlZKUVQxTkZJRUZPUkNCT1QwNUpUa1pTU1U1SFJVMUZUbFF1SUVsT1hHNHZMeUJPVHlCRlZrVk9WQ0JUU0VGTVRDQlVTRVVnUVZWVVNFOVNVeUJQVWlCRFQxQlpVa2xIU0ZRZ1NFOU1SRVZTVXlCQ1JTQk1TVUZDVEVVZ1JrOVNJRUZPV1NCRFRFRkpUU3hjYmk4dklFUkJUVUZIUlZNZ1QxSWdUMVJJUlZJZ1RFbEJRa2xNU1ZSWkxDQlhTRVZVU0VWU0lFbE9JRUZPSUVGRFZFbFBUaUJQUmlCRFQwNVVVa0ZEVkN3Z1ZFOVNWQ0JQVWx4dUx5OGdUMVJJUlZKWFNWTkZMQ0JCVWtsVFNVNUhJRVpTVDAwc0lFOVZWQ0JQUmlCUFVpQkpUaUJEVDA1T1JVTlVTVTlPSUZkSlZFZ2dWRWhGSUZOUFJsUlhRVkpGSUU5U0lGUklSVnh1THk4Z1ZWTkZJRTlTSUU5VVNFVlNJRVJGUVV4SlRrZFRJRWxPSUZSSVJTQlRUMFpVVjBGU1JTNWNibHh1SjNWelpTQnpkSEpwWTNRbk8xeHVYRzR2THlCSlppQnZZbW91YUdGelQzZHVVSEp2Y0dWeWRIa2dhR0Z6SUdKbFpXNGdiM1psY25KcFpHUmxiaXdnZEdobGJpQmpZV3hzYVc1blhHNHZMeUJ2WW1vdWFHRnpUM2R1VUhKdmNHVnlkSGtvY0hKdmNDa2dkMmxzYkNCaWNtVmhheTVjYmk4dklGTmxaVG9nYUhSMGNITTZMeTluYVhSb2RXSXVZMjl0TDJwdmVXVnVkQzl1YjJSbEwybHpjM1ZsY3k4eE56QTNYRzVtZFc1amRHbHZiaUJvWVhOUGQyNVFjbTl3WlhKMGVTaHZZbW9zSUhCeWIzQXBJSHRjYmlBZ2NtVjBkWEp1SUU5aWFtVmpkQzV3Y205MGIzUjVjR1V1YUdGelQzZHVVSEp2Y0dWeWRIa3VZMkZzYkNodlltb3NJSEJ5YjNBcE8xeHVmVnh1WEc1dGIyUjFiR1V1Wlhod2IzSjBjeUE5SUdaMWJtTjBhVzl1S0hGekxDQnpaWEFzSUdWeExDQnZjSFJwYjI1ektTQjdYRzRnSUhObGNDQTlJSE5sY0NCOGZDQW5KaWM3WEc0Z0lHVnhJRDBnWlhFZ2ZId2dKejBuTzF4dUlDQjJZWElnYjJKcUlEMGdlMzA3WEc1Y2JpQWdhV1lnS0hSNWNHVnZaaUJ4Y3lBaFBUMGdKM04wY21sdVp5Y2dmSHdnY1hNdWJHVnVaM1JvSUQwOVBTQXdLU0I3WEc0Z0lDQWdjbVYwZFhKdUlHOWlhanRjYmlBZ2ZWeHVYRzRnSUhaaGNpQnlaV2RsZUhBZ1BTQXZYRndyTDJjN1hHNGdJSEZ6SUQwZ2NYTXVjM0JzYVhRb2MyVndLVHRjYmx4dUlDQjJZWElnYldGNFMyVjVjeUE5SURFd01EQTdYRzRnSUdsbUlDaHZjSFJwYjI1eklDWW1JSFI1Y0dWdlppQnZjSFJwYjI1ekxtMWhlRXRsZVhNZ1BUMDlJQ2R1ZFcxaVpYSW5LU0I3WEc0Z0lDQWdiV0Y0UzJWNWN5QTlJRzl3ZEdsdmJuTXViV0Y0UzJWNWN6dGNiaUFnZlZ4dVhHNGdJSFpoY2lCc1pXNGdQU0J4Y3k1c1pXNW5kR2c3WEc0Z0lDOHZJRzFoZUV0bGVYTWdQRDBnTUNCdFpXRnVjeUIwYUdGMElIZGxJSE5vYjNWc1pDQnViM1FnYkdsdGFYUWdhMlY1Y3lCamIzVnVkRnh1SUNCcFppQW9iV0Y0UzJWNWN5QStJREFnSmlZZ2JHVnVJRDRnYldGNFMyVjVjeWtnZTF4dUlDQWdJR3hsYmlBOUlHMWhlRXRsZVhNN1hHNGdJSDFjYmx4dUlDQm1iM0lnS0haaGNpQnBJRDBnTURzZ2FTQThJR3hsYmpzZ0t5dHBLU0I3WEc0Z0lDQWdkbUZ5SUhnZ1BTQnhjMXRwWFM1eVpYQnNZV05sS0hKbFoyVjRjQ3dnSnlVeU1DY3BMRnh1SUNBZ0lDQWdJQ0JwWkhnZ1BTQjRMbWx1WkdWNFQyWW9aWEVwTEZ4dUlDQWdJQ0FnSUNCcmMzUnlMQ0IyYzNSeUxDQnJMQ0IyTzF4dVhHNGdJQ0FnYVdZZ0tHbGtlQ0ErUFNBd0tTQjdYRzRnSUNBZ0lDQnJjM1J5SUQwZ2VDNXpkV0p6ZEhJb01Dd2dhV1I0S1R0Y2JpQWdJQ0FnSUhaemRISWdQU0I0TG5OMVluTjBjaWhwWkhnZ0t5QXhLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2EzTjBjaUE5SUhnN1hHNGdJQ0FnSUNCMmMzUnlJRDBnSnljN1hHNGdJQ0FnZlZ4dVhHNGdJQ0FnYXlBOUlHUmxZMjlrWlZWU1NVTnZiWEJ2Ym1WdWRDaHJjM1J5S1R0Y2JpQWdJQ0IySUQwZ1pHVmpiMlJsVlZKSlEyOXRjRzl1Wlc1MEtIWnpkSElwTzF4dVhHNGdJQ0FnYVdZZ0tDRm9ZWE5QZDI1UWNtOXdaWEowZVNodlltb3NJR3NwS1NCN1hHNGdJQ0FnSUNCdlltcGJhMTBnUFNCMk8xeHVJQ0FnSUgwZ1pXeHpaU0JwWmlBb2FYTkJjbkpoZVNodlltcGJhMTBwS1NCN1hHNGdJQ0FnSUNCdlltcGJhMTB1Y0hWemFDaDJLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2IySnFXMnRkSUQwZ1cyOWlhbHRyWFN3Z2RsMDdYRzRnSUNBZ2ZWeHVJQ0I5WEc1Y2JpQWdjbVYwZFhKdUlHOWlhanRjYm4wN1hHNWNiblpoY2lCcGMwRnljbUY1SUQwZ1FYSnlZWGt1YVhOQmNuSmhlU0I4ZkNCbWRXNWpkR2x2YmlBb2VITXBJSHRjYmlBZ2NtVjBkWEp1SUU5aWFtVmpkQzV3Y205MGIzUjVjR1V1ZEc5VGRISnBibWN1WTJGc2JDaDRjeWtnUFQwOUlDZGJiMkpxWldOMElFRnljbUY1WFNjN1hHNTlPMXh1SWwwc0ltMWhjSEJwYm1keklqb2lRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN0lpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9kZWNvZGUuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZW5jb2RlLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXFxcXG4vL1xcXFxuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcXFxcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcXFxcbi8vIFxcXFxcXFwiU29mdHdhcmVcXFxcXFxcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xcXFxuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxcXFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxcXFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXFxcXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcXFxcbi8vXFxcXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxcXFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXFxcXG4vL1xcXFxuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFxcXFxcXFwiQVMgSVNcXFxcXFxcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xcXFxuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxcXFxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxcXFxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXFxcXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1JcXFxcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcXFxcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXFxcXG5cXFxcblxcXFxuXFxcXG52YXIgc3RyaW5naWZ5UHJpbWl0aXZlID0gZnVuY3Rpb24odikge1xcXFxuICBzd2l0Y2ggKHR5cGVvZiB2KSB7XFxcXG4gICAgY2FzZSAnc3RyaW5nJzpcXFxcbiAgICAgIHJldHVybiB2O1xcXFxuXFxcXG4gICAgY2FzZSAnYm9vbGVhbic6XFxcXG4gICAgICByZXR1cm4gdiA/ICd0cnVlJyA6ICdmYWxzZSc7XFxcXG5cXFxcbiAgICBjYXNlICdudW1iZXInOlxcXFxuICAgICAgcmV0dXJuIGlzRmluaXRlKHYpID8gdiA6ICcnO1xcXFxuXFxcXG4gICAgZGVmYXVsdDpcXFxcbiAgICAgIHJldHVybiAnJztcXFxcbiAgfVxcXFxufTtcXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvYmosIHNlcCwgZXEsIG5hbWUpIHtcXFxcbiAgc2VwID0gc2VwIHx8ICcmJztcXFxcbiAgZXEgPSBlcSB8fCAnPSc7XFxcXG4gIGlmIChvYmogPT09IG51bGwpIHtcXFxcbiAgICBvYmogPSB1bmRlZmluZWQ7XFxcXG4gIH1cXFxcblxcXFxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ29iamVjdCcpIHtcXFxcbiAgICByZXR1cm4gbWFwKG9iamVjdEtleXMob2JqKSwgZnVuY3Rpb24oaykge1xcXFxuICAgICAgdmFyIGtzID0gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShrKSkgKyBlcTtcXFxcbiAgICAgIGlmIChpc0FycmF5KG9ialtrXSkpIHtcXFxcbiAgICAgICAgcmV0dXJuIG1hcChvYmpba10sIGZ1bmN0aW9uKHYpIHtcXFxcbiAgICAgICAgICByZXR1cm4ga3MgKyBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKHYpKTtcXFxcbiAgICAgICAgfSkuam9pbihzZXApO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgcmV0dXJuIGtzICsgZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShvYmpba10pKTtcXFxcbiAgICAgIH1cXFxcbiAgICB9KS5qb2luKHNlcCk7XFxcXG5cXFxcbiAgfVxcXFxuXFxcXG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xcXFxuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShuYW1lKSkgKyBlcSArXFxcXG4gICAgICAgICBlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG9iaikpO1xcXFxufTtcXFxcblxcXFxudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uICh4cykge1xcXFxuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHhzKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcXFxcbn07XFxcXG5cXFxcbmZ1bmN0aW9uIG1hcCAoeHMsIGYpIHtcXFxcbiAgaWYgKHhzLm1hcCkgcmV0dXJuIHhzLm1hcChmKTtcXFxcbiAgdmFyIHJlcyA9IFtdO1xcXFxuICBmb3IgKHZhciBpID0gMDsgaSA8IHhzLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgcmVzLnB1c2goZih4c1tpXSwgaSkpO1xcXFxuICB9XFxcXG4gIHJldHVybiByZXM7XFxcXG59XFxcXG5cXFxcbnZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xcXFxuICB2YXIgcmVzID0gW107XFxcXG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcXFxcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgcmVzLnB1c2goa2V5KTtcXFxcbiAgfVxcXFxuICByZXR1cm4gcmVzO1xcXFxufTtcXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZjWFZsY25semRISnBibWN0WlhNekwyVnVZMjlrWlM1cWN5NXFjeUlzSW5OdmRYSmpaWE1pT2xzaWQyVmljR0ZqYXpvdkwybHRhbTk1VWxCREx5NHZibTlrWlY5dGIyUjFiR1Z6TDNGMVpYSjVjM1J5YVc1bkxXVnpNeTlsYm1OdlpHVXVhbk0vWlRBNU9TSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCRGIzQjVjbWxuYUhRZ1NtOTVaVzUwTENCSmJtTXVJR0Z1WkNCdmRHaGxjaUJPYjJSbElHTnZiblJ5YVdKMWRHOXljeTVjYmk4dlhHNHZMeUJRWlhKdGFYTnphVzl1SUdseklHaGxjbVZpZVNCbmNtRnVkR1ZrTENCbWNtVmxJRzltSUdOb1lYSm5aU3dnZEc4Z1lXNTVJSEJsY25OdmJpQnZZblJoYVc1cGJtY2dZVnh1THk4Z1kyOXdlU0J2WmlCMGFHbHpJSE52Wm5SM1lYSmxJR0Z1WkNCaGMzTnZZMmxoZEdWa0lHUnZZM1Z0Wlc1MFlYUnBiMjRnWm1sc1pYTWdLSFJvWlZ4dUx5OGdYQ0pUYjJaMGQyRnlaVndpS1N3Z2RHOGdaR1ZoYkNCcGJpQjBhR1VnVTI5bWRIZGhjbVVnZDJsMGFHOTFkQ0J5WlhOMGNtbGpkR2x2Yml3Z2FXNWpiSFZrYVc1blhHNHZMeUIzYVhSb2IzVjBJR3hwYldsMFlYUnBiMjRnZEdobElISnBaMmgwY3lCMGJ5QjFjMlVzSUdOdmNIa3NJRzF2WkdsbWVTd2diV1Z5WjJVc0lIQjFZbXhwYzJnc1hHNHZMeUJrYVhOMGNtbGlkWFJsTENCemRXSnNhV05sYm5ObExDQmhibVF2YjNJZ2MyVnNiQ0JqYjNCcFpYTWdiMllnZEdobElGTnZablIzWVhKbExDQmhibVFnZEc4Z2NHVnliV2wwWEc0dkx5QndaWEp6YjI1eklIUnZJSGRvYjIwZ2RHaGxJRk52Wm5SM1lYSmxJR2x6SUdaMWNtNXBjMmhsWkNCMGJ5QmtieUJ6Ynl3Z2MzVmlhbVZqZENCMGJ5QjBhR1ZjYmk4dklHWnZiR3h2ZDJsdVp5QmpiMjVrYVhScGIyNXpPbHh1THk5Y2JpOHZJRlJvWlNCaFltOTJaU0JqYjNCNWNtbG5hSFFnYm05MGFXTmxJR0Z1WkNCMGFHbHpJSEJsY20xcGMzTnBiMjRnYm05MGFXTmxJSE5vWVd4c0lHSmxJR2x1WTJ4MVpHVmtYRzR2THlCcGJpQmhiR3dnWTI5d2FXVnpJRzl5SUhOMVluTjBZVzUwYVdGc0lIQnZjblJwYjI1eklHOW1JSFJvWlNCVGIyWjBkMkZ5WlM1Y2JpOHZYRzR2THlCVVNFVWdVMDlHVkZkQlVrVWdTVk1nVUZKUFZrbEVSVVFnWENKQlV5QkpVMXdpTENCWFNWUklUMVZVSUZkQlVsSkJUbFJaSUU5R0lFRk9XU0JMU1U1RUxDQkZXRkJTUlZOVFhHNHZMeUJQVWlCSlRWQk1TVVZFTENCSlRrTk1WVVJKVGtjZ1FsVlVJRTVQVkNCTVNVMUpWRVZFSUZSUElGUklSU0JYUVZKU1FVNVVTVVZUSUU5R1hHNHZMeUJOUlZKRFNFRk9WRUZDU1V4SlZGa3NJRVpKVkU1RlUxTWdSazlTSUVFZ1VFRlNWRWxEVlV4QlVpQlFWVkpRVDFORklFRk9SQ0JPVDA1SlRrWlNTVTVIUlUxRlRsUXVJRWxPWEc0dkx5Qk9UeUJGVmtWT1ZDQlRTRUZNVENCVVNFVWdRVlZVU0U5U1V5QlBVaUJEVDFCWlVrbEhTRlFnU0U5TVJFVlNVeUJDUlNCTVNVRkNURVVnUms5U0lFRk9XU0JEVEVGSlRTeGNiaTh2SUVSQlRVRkhSVk1nVDFJZ1QxUklSVklnVEVsQlFrbE1TVlJaTENCWFNFVlVTRVZTSUVsT0lFRk9JRUZEVkVsUFRpQlBSaUJEVDA1VVVrRkRWQ3dnVkU5U1ZDQlBVbHh1THk4Z1QxUklSVkpYU1ZORkxDQkJVa2xUU1U1SElFWlNUMDBzSUU5VlZDQlBSaUJQVWlCSlRpQkRUMDVPUlVOVVNVOU9JRmRKVkVnZ1ZFaEZJRk5QUmxSWFFWSkZJRTlTSUZSSVJWeHVMeThnVlZORklFOVNJRTlVU0VWU0lFUkZRVXhKVGtkVElFbE9JRlJJUlNCVFQwWlVWMEZTUlM1Y2JseHVKM1Z6WlNCemRISnBZM1FuTzF4dVhHNTJZWElnYzNSeWFXNW5hV1o1VUhKcGJXbDBhWFpsSUQwZ1puVnVZM1JwYjI0b2Rpa2dlMXh1SUNCemQybDBZMmdnS0hSNWNHVnZaaUIyS1NCN1hHNGdJQ0FnWTJGelpTQW5jM1J5YVc1bkp6cGNiaUFnSUNBZ0lISmxkSFZ5YmlCMk8xeHVYRzRnSUNBZ1kyRnpaU0FuWW05dmJHVmhiaWM2WEc0Z0lDQWdJQ0J5WlhSMWNtNGdkaUEvSUNkMGNuVmxKeUE2SUNkbVlXeHpaU2M3WEc1Y2JpQWdJQ0JqWVhObElDZHVkVzFpWlhJbk9seHVJQ0FnSUNBZ2NtVjBkWEp1SUdselJtbHVhWFJsS0hZcElEOGdkaUE2SUNjbk8xeHVYRzRnSUNBZ1pHVm1ZWFZzZERwY2JpQWdJQ0FnSUhKbGRIVnliaUFuSnp0Y2JpQWdmVnh1ZlR0Y2JseHViVzlrZFd4bExtVjRjRzl5ZEhNZ1BTQm1kVzVqZEdsdmJpaHZZbW9zSUhObGNDd2daWEVzSUc1aGJXVXBJSHRjYmlBZ2MyVndJRDBnYzJWd0lIeDhJQ2NtSnp0Y2JpQWdaWEVnUFNCbGNTQjhmQ0FuUFNjN1hHNGdJR2xtSUNodlltb2dQVDA5SUc1MWJHd3BJSHRjYmlBZ0lDQnZZbW9nUFNCMWJtUmxabWx1WldRN1hHNGdJSDFjYmx4dUlDQnBaaUFvZEhsd1pXOW1JRzlpYWlBOVBUMGdKMjlpYW1WamRDY3BJSHRjYmlBZ0lDQnlaWFIxY200Z2JXRndLRzlpYW1WamRFdGxlWE1vYjJKcUtTd2dablZ1WTNScGIyNG9heWtnZTF4dUlDQWdJQ0FnZG1GeUlHdHpJRDBnWlc1amIyUmxWVkpKUTI5dGNHOXVaVzUwS0hOMGNtbHVaMmxtZVZCeWFXMXBkR2wyWlNocktTa2dLeUJsY1R0Y2JpQWdJQ0FnSUdsbUlDaHBjMEZ5Y21GNUtHOWlhbHRyWFNrcElIdGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHMWhjQ2h2WW1wYmExMHNJR1oxYm1OMGFXOXVLSFlwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z2EzTWdLeUJsYm1OdlpHVlZVa2xEYjIxd2IyNWxiblFvYzNSeWFXNW5hV1o1VUhKcGJXbDBhWFpsS0hZcEtUdGNiaUFnSUNBZ0lDQWdmU2t1YW05cGJpaHpaWEFwTzF4dUlDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnY21WMGRYSnVJR3R6SUNzZ1pXNWpiMlJsVlZKSlEyOXRjRzl1Wlc1MEtITjBjbWx1WjJsbWVWQnlhVzFwZEdsMlpTaHZZbXBiYTEwcEtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNCOUtTNXFiMmx1S0hObGNDazdYRzVjYmlBZ2ZWeHVYRzRnSUdsbUlDZ2hibUZ0WlNrZ2NtVjBkWEp1SUNjbk8xeHVJQ0J5WlhSMWNtNGdaVzVqYjJSbFZWSkpRMjl0Y0c5dVpXNTBLSE4wY21sdVoybG1lVkJ5YVcxcGRHbDJaU2h1WVcxbEtTa2dLeUJsY1NBclhHNGdJQ0FnSUNBZ0lDQmxibU52WkdWVlVrbERiMjF3YjI1bGJuUW9jM1J5YVc1bmFXWjVVSEpwYldsMGFYWmxLRzlpYWlrcE8xeHVmVHRjYmx4dWRtRnlJR2x6UVhKeVlYa2dQU0JCY25KaGVTNXBjMEZ5Y21GNUlIeDhJR1oxYm1OMGFXOXVJQ2g0Y3lrZ2UxeHVJQ0J5WlhSMWNtNGdUMkpxWldOMExuQnliM1J2ZEhsd1pTNTBiMU4wY21sdVp5NWpZV3hzS0hoektTQTlQVDBnSjF0dlltcGxZM1FnUVhKeVlYbGRKenRjYm4wN1hHNWNibVoxYm1OMGFXOXVJRzFoY0NBb2VITXNJR1lwSUh0Y2JpQWdhV1lnS0hoekxtMWhjQ2tnY21WMGRYSnVJSGh6TG0xaGNDaG1LVHRjYmlBZ2RtRnlJSEpsY3lBOUlGdGRPMXh1SUNCbWIzSWdLSFpoY2lCcElEMGdNRHNnYVNBOElIaHpMbXhsYm1kMGFEc2dhU3NyS1NCN1hHNGdJQ0FnY21WekxuQjFjMmdvWmloNGMxdHBYU3dnYVNrcE8xeHVJQ0I5WEc0Z0lISmxkSFZ5YmlCeVpYTTdYRzU5WEc1Y2JuWmhjaUJ2WW1wbFkzUkxaWGx6SUQwZ1QySnFaV04wTG10bGVYTWdmSHdnWm5WdVkzUnBiMjRnS0c5aWFpa2dlMXh1SUNCMllYSWdjbVZ6SUQwZ1cxMDdYRzRnSUdadmNpQW9kbUZ5SUd0bGVTQnBiaUJ2WW1vcElIdGNiaUFnSUNCcFppQW9UMkpxWldOMExuQnliM1J2ZEhsd1pTNW9ZWE5QZDI1UWNtOXdaWEowZVM1allXeHNLRzlpYWl3Z2EyVjVLU2tnY21WekxuQjFjMmdvYTJWNUtUdGNiaUFnZlZ4dUlDQnlaWFIxY200Z2NtVnpPMXh1ZlR0Y2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN0lpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9lbmNvZGUuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvaW5kZXguanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJcXFxcblxcXFxuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLnBhcnNlID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9kZWNvZGUgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvZGVjb2RlLmpzXFxcXFxcXCIpO1xcXFxuZXhwb3J0cy5lbmNvZGUgPSBleHBvcnRzLnN0cmluZ2lmeSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZW5jb2RlICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvcXVlcnlzdHJpbmctZXMzL2VuY29kZS5qc1xcXFxcXFwiKTtcXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5dWIyUmxYMjF2WkhWc1pYTXZjWFZsY25semRISnBibWN0WlhNekwybHVaR1Y0TG1wekxtcHpJaXdpYzI5MWNtTmxjeUk2V3lKM1pXSndZV05yT2k4dmFXMXFiM2xTVUVNdkxpOXViMlJsWDIxdlpIVnNaWE12Y1hWbGNubHpkSEpwYm1jdFpYTXpMMmx1WkdWNExtcHpQMkl6T0RNaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lKM1Z6WlNCemRISnBZM1FuTzF4dVhHNWxlSEJ2Y25SekxtUmxZMjlrWlNBOUlHVjRjRzl5ZEhNdWNHRnljMlVnUFNCeVpYRjFhWEpsS0NjdUwyUmxZMjlrWlNjcE8xeHVaWGh3YjNKMGN5NWxibU52WkdVZ1BTQmxlSEJ2Y25SekxuTjBjbWx1WjJsbWVTQTlJSEpsY1hWcGNtVW9KeTR2Wlc1amIyUmxKeWs3WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CT3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpZlE9PVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL3VybC91cmwuanNcXFwiOlxcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcXFxcbiAgISoqKiAuL25vZGVfbW9kdWxlcy91cmwvdXJsLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCIvLyBDb3B5cmlnaHQgSm95ZW50LCBJbmMuIGFuZCBvdGhlciBOb2RlIGNvbnRyaWJ1dG9ycy5cXFxcbi8vXFxcXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYVxcXFxuLy8gY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxcXFxuLy8gXFxcXFxcXCJTb2Z0d2FyZVxcXFxcXFwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXFxcXG4vLyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXFxcXG4vLyBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0XFxcXG4vLyBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGVcXFxcbi8vIGZvbGxvd2luZyBjb25kaXRpb25zOlxcXFxuLy9cXFxcbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkXFxcXG4vLyBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cXFxcbi8vXFxcXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXFxcXFxcXCJBUyBJU1xcXFxcXFwiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTXFxcXG4vLyBPUiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GXFxcXG4vLyBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOXFxcXG4vLyBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSxcXFxcbi8vIERBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUlxcXFxuLy8gT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRVxcXFxuLy8gVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cXFxcblxcXFxuXFxcXG5cXFxcbnZhciBwdW55Y29kZSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIHB1bnljb2RlICovIFxcXFxcXFwiLi9ub2RlX21vZHVsZXMvbm9kZS1saWJzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL3B1bnljb2RlL3B1bnljb2RlLmpzXFxcXFxcXCIpO1xcXFxudmFyIHV0aWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWwgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy91cmwvdXRpbC5qc1xcXFxcXFwiKTtcXFxcblxcXFxuZXhwb3J0cy5wYXJzZSA9IHVybFBhcnNlO1xcXFxuZXhwb3J0cy5yZXNvbHZlID0gdXJsUmVzb2x2ZTtcXFxcbmV4cG9ydHMucmVzb2x2ZU9iamVjdCA9IHVybFJlc29sdmVPYmplY3Q7XFxcXG5leHBvcnRzLmZvcm1hdCA9IHVybEZvcm1hdDtcXFxcblxcXFxuZXhwb3J0cy5VcmwgPSBVcmw7XFxcXG5cXFxcbmZ1bmN0aW9uIFVybCgpIHtcXFxcbiAgdGhpcy5wcm90b2NvbCA9IG51bGw7XFxcXG4gIHRoaXMuc2xhc2hlcyA9IG51bGw7XFxcXG4gIHRoaXMuYXV0aCA9IG51bGw7XFxcXG4gIHRoaXMuaG9zdCA9IG51bGw7XFxcXG4gIHRoaXMucG9ydCA9IG51bGw7XFxcXG4gIHRoaXMuaG9zdG5hbWUgPSBudWxsO1xcXFxuICB0aGlzLmhhc2ggPSBudWxsO1xcXFxuICB0aGlzLnNlYXJjaCA9IG51bGw7XFxcXG4gIHRoaXMucXVlcnkgPSBudWxsO1xcXFxuICB0aGlzLnBhdGhuYW1lID0gbnVsbDtcXFxcbiAgdGhpcy5wYXRoID0gbnVsbDtcXFxcbiAgdGhpcy5ocmVmID0gbnVsbDtcXFxcbn1cXFxcblxcXFxuLy8gUmVmZXJlbmNlOiBSRkMgMzk4NiwgUkZDIDE4MDgsIFJGQyAyMzk2XFxcXG5cXFxcbi8vIGRlZmluZSB0aGVzZSBoZXJlIHNvIGF0IGxlYXN0IHRoZXkgb25seSBoYXZlIHRvIGJlXFxcXG4vLyBjb21waWxlZCBvbmNlIG9uIHRoZSBmaXJzdCBtb2R1bGUgbG9hZC5cXFxcbnZhciBwcm90b2NvbFBhdHRlcm4gPSAvXihbYS16MC05ListXSs6KS9pLFxcXFxuICAgIHBvcnRQYXR0ZXJuID0gLzpbMC05XSokLyxcXFxcblxcXFxuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgYSBzaW1wbGUgcGF0aCBVUkxcXFxcbiAgICBzaW1wbGVQYXRoUGF0dGVybiA9IC9eKFxcXFxcXFxcL1xcXFxcXFxcLz8oPyFcXFxcXFxcXC8pW15cXFxcXFxcXD9cXFxcXFxcXHNdKikoXFxcXFxcXFw/W15cXFxcXFxcXHNdKik/JC8sXFxcXG5cXFxcbiAgICAvLyBSRkMgMjM5NjogY2hhcmFjdGVycyByZXNlcnZlZCBmb3IgZGVsaW1pdGluZyBVUkxzLlxcXFxuICAgIC8vIFdlIGFjdHVhbGx5IGp1c3QgYXV0by1lc2NhcGUgdGhlc2UuXFxcXG4gICAgZGVsaW1zID0gWyc8JywgJz4nLCAnXFxcXFxcXCInLCAnYCcsICcgJywgJ1xcXFxcXFxccicsICdcXFxcXFxcXG4nLCAnXFxcXFxcXFx0J10sXFxcXG5cXFxcbiAgICAvLyBSRkMgMjM5NjogY2hhcmFjdGVycyBub3QgYWxsb3dlZCBmb3IgdmFyaW91cyByZWFzb25zLlxcXFxuICAgIHVud2lzZSA9IFsneycsICd9JywgJ3wnLCAnXFxcXFxcXFxcXFxcXFxcXCcsICdeJywgJ2AnXS5jb25jYXQoZGVsaW1zKSxcXFxcblxcXFxuICAgIC8vIEFsbG93ZWQgYnkgUkZDcywgYnV0IGNhdXNlIG9mIFhTUyBhdHRhY2tzLiAgQWx3YXlzIGVzY2FwZSB0aGVzZS5cXFxcbiAgICBhdXRvRXNjYXBlID0gWydcXFxcXFxcXCcnXS5jb25jYXQodW53aXNlKSxcXFxcbiAgICAvLyBDaGFyYWN0ZXJzIHRoYXQgYXJlIG5ldmVyIGV2ZXIgYWxsb3dlZCBpbiBhIGhvc3RuYW1lLlxcXFxuICAgIC8vIE5vdGUgdGhhdCBhbnkgaW52YWxpZCBjaGFycyBhcmUgYWxzbyBoYW5kbGVkLCBidXQgdGhlc2VcXFxcbiAgICAvLyBhcmUgdGhlIG9uZXMgdGhhdCBhcmUgKmV4cGVjdGVkKiB0byBiZSBzZWVuLCBzbyB3ZSBmYXN0LXBhdGhcXFxcbiAgICAvLyB0aGVtLlxcXFxuICAgIG5vbkhvc3RDaGFycyA9IFsnJScsICcvJywgJz8nLCAnOycsICcjJ10uY29uY2F0KGF1dG9Fc2NhcGUpLFxcXFxuICAgIGhvc3RFbmRpbmdDaGFycyA9IFsnLycsICc/JywgJyMnXSxcXFxcbiAgICBob3N0bmFtZU1heExlbiA9IDI1NSxcXFxcbiAgICBob3N0bmFtZVBhcnRQYXR0ZXJuID0gL15bK2EtejAtOUEtWl8tXXswLDYzfSQvLFxcXFxuICAgIGhvc3RuYW1lUGFydFN0YXJ0ID0gL14oWythLXowLTlBLVpfLV17MCw2M30pKC4qKSQvLFxcXFxuICAgIC8vIHByb3RvY29scyB0aGF0IGNhbiBhbGxvdyBcXFxcXFxcInVuc2FmZVxcXFxcXFwiIGFuZCBcXFxcXFxcInVud2lzZVxcXFxcXFwiIGNoYXJzLlxcXFxuICAgIHVuc2FmZVByb3RvY29sID0ge1xcXFxuICAgICAgJ2phdmFzY3JpcHQnOiB0cnVlLFxcXFxuICAgICAgJ2phdmFzY3JpcHQ6JzogdHJ1ZVxcXFxuICAgIH0sXFxcXG4gICAgLy8gcHJvdG9jb2xzIHRoYXQgbmV2ZXIgaGF2ZSBhIGhvc3RuYW1lLlxcXFxuICAgIGhvc3RsZXNzUHJvdG9jb2wgPSB7XFxcXG4gICAgICAnamF2YXNjcmlwdCc6IHRydWUsXFxcXG4gICAgICAnamF2YXNjcmlwdDonOiB0cnVlXFxcXG4gICAgfSxcXFxcbiAgICAvLyBwcm90b2NvbHMgdGhhdCBhbHdheXMgY29udGFpbiBhIC8vIGJpdC5cXFxcbiAgICBzbGFzaGVkUHJvdG9jb2wgPSB7XFxcXG4gICAgICAnaHR0cCc6IHRydWUsXFxcXG4gICAgICAnaHR0cHMnOiB0cnVlLFxcXFxuICAgICAgJ2Z0cCc6IHRydWUsXFxcXG4gICAgICAnZ29waGVyJzogdHJ1ZSxcXFxcbiAgICAgICdmaWxlJzogdHJ1ZSxcXFxcbiAgICAgICdodHRwOic6IHRydWUsXFxcXG4gICAgICAnaHR0cHM6JzogdHJ1ZSxcXFxcbiAgICAgICdmdHA6JzogdHJ1ZSxcXFxcbiAgICAgICdnb3BoZXI6JzogdHJ1ZSxcXFxcbiAgICAgICdmaWxlOic6IHRydWVcXFxcbiAgICB9LFxcXFxuICAgIHF1ZXJ5c3RyaW5nID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgcXVlcnlzdHJpbmcgKi8gXFxcXFxcXCIuL25vZGVfbW9kdWxlcy9xdWVyeXN0cmluZy1lczMvaW5kZXguanNcXFxcXFxcIik7XFxcXG5cXFxcbmZ1bmN0aW9uIHVybFBhcnNlKHVybCwgcGFyc2VRdWVyeVN0cmluZywgc2xhc2hlc0Rlbm90ZUhvc3QpIHtcXFxcbiAgaWYgKHVybCAmJiB1dGlsLmlzT2JqZWN0KHVybCkgJiYgdXJsIGluc3RhbmNlb2YgVXJsKSByZXR1cm4gdXJsO1xcXFxuXFxcXG4gIHZhciB1ID0gbmV3IFVybDtcXFxcbiAgdS5wYXJzZSh1cmwsIHBhcnNlUXVlcnlTdHJpbmcsIHNsYXNoZXNEZW5vdGVIb3N0KTtcXFxcbiAgcmV0dXJuIHU7XFxcXG59XFxcXG5cXFxcblVybC5wcm90b3R5cGUucGFyc2UgPSBmdW5jdGlvbih1cmwsIHBhcnNlUXVlcnlTdHJpbmcsIHNsYXNoZXNEZW5vdGVIb3N0KSB7XFxcXG4gIGlmICghdXRpbC5pc1N0cmluZyh1cmwpKSB7XFxcXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcXFxcXFxcIlBhcmFtZXRlciAndXJsJyBtdXN0IGJlIGEgc3RyaW5nLCBub3QgXFxcXFxcXCIgKyB0eXBlb2YgdXJsKTtcXFxcbiAgfVxcXFxuXFxcXG4gIC8vIENvcHkgY2hyb21lLCBJRSwgb3BlcmEgYmFja3NsYXNoLWhhbmRsaW5nIGJlaGF2aW9yLlxcXFxuICAvLyBCYWNrIHNsYXNoZXMgYmVmb3JlIHRoZSBxdWVyeSBzdHJpbmcgZ2V0IGNvbnZlcnRlZCB0byBmb3J3YXJkIHNsYXNoZXNcXFxcbiAgLy8gU2VlOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9MjU5MTZcXFxcbiAgdmFyIHF1ZXJ5SW5kZXggPSB1cmwuaW5kZXhPZignPycpLFxcXFxuICAgICAgc3BsaXR0ZXIgPVxcXFxuICAgICAgICAgIChxdWVyeUluZGV4ICE9PSAtMSAmJiBxdWVyeUluZGV4IDwgdXJsLmluZGV4T2YoJyMnKSkgPyAnPycgOiAnIycsXFxcXG4gICAgICB1U3BsaXQgPSB1cmwuc3BsaXQoc3BsaXR0ZXIpLFxcXFxuICAgICAgc2xhc2hSZWdleCA9IC9cXFxcXFxcXFxcXFxcXFxcL2c7XFxcXG4gIHVTcGxpdFswXSA9IHVTcGxpdFswXS5yZXBsYWNlKHNsYXNoUmVnZXgsICcvJyk7XFxcXG4gIHVybCA9IHVTcGxpdC5qb2luKHNwbGl0dGVyKTtcXFxcblxcXFxuICB2YXIgcmVzdCA9IHVybDtcXFxcblxcXFxuICAvLyB0cmltIGJlZm9yZSBwcm9jZWVkaW5nLlxcXFxuICAvLyBUaGlzIGlzIHRvIHN1cHBvcnQgcGFyc2Ugc3R1ZmYgbGlrZSBcXFxcXFxcIiAgaHR0cDovL2Zvby5jb20gIFxcXFxcXFxcblxcXFxcXFwiXFxcXG4gIHJlc3QgPSByZXN0LnRyaW0oKTtcXFxcblxcXFxuICBpZiAoIXNsYXNoZXNEZW5vdGVIb3N0ICYmIHVybC5zcGxpdCgnIycpLmxlbmd0aCA9PT0gMSkge1xcXFxuICAgIC8vIFRyeSBmYXN0IHBhdGggcmVnZXhwXFxcXG4gICAgdmFyIHNpbXBsZVBhdGggPSBzaW1wbGVQYXRoUGF0dGVybi5leGVjKHJlc3QpO1xcXFxuICAgIGlmIChzaW1wbGVQYXRoKSB7XFxcXG4gICAgICB0aGlzLnBhdGggPSByZXN0O1xcXFxuICAgICAgdGhpcy5ocmVmID0gcmVzdDtcXFxcbiAgICAgIHRoaXMucGF0aG5hbWUgPSBzaW1wbGVQYXRoWzFdO1xcXFxuICAgICAgaWYgKHNpbXBsZVBhdGhbMl0pIHtcXFxcbiAgICAgICAgdGhpcy5zZWFyY2ggPSBzaW1wbGVQYXRoWzJdO1xcXFxuICAgICAgICBpZiAocGFyc2VRdWVyeVN0cmluZykge1xcXFxuICAgICAgICAgIHRoaXMucXVlcnkgPSBxdWVyeXN0cmluZy5wYXJzZSh0aGlzLnNlYXJjaC5zdWJzdHIoMSkpO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIHRoaXMucXVlcnkgPSB0aGlzLnNlYXJjaC5zdWJzdHIoMSk7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSBpZiAocGFyc2VRdWVyeVN0cmluZykge1xcXFxuICAgICAgICB0aGlzLnNlYXJjaCA9ICcnO1xcXFxuICAgICAgICB0aGlzLnF1ZXJ5ID0ge307XFxcXG4gICAgICB9XFxcXG4gICAgICByZXR1cm4gdGhpcztcXFxcbiAgICB9XFxcXG4gIH1cXFxcblxcXFxuICB2YXIgcHJvdG8gPSBwcm90b2NvbFBhdHRlcm4uZXhlYyhyZXN0KTtcXFxcbiAgaWYgKHByb3RvKSB7XFxcXG4gICAgcHJvdG8gPSBwcm90b1swXTtcXFxcbiAgICB2YXIgbG93ZXJQcm90byA9IHByb3RvLnRvTG93ZXJDYXNlKCk7XFxcXG4gICAgdGhpcy5wcm90b2NvbCA9IGxvd2VyUHJvdG87XFxcXG4gICAgcmVzdCA9IHJlc3Quc3Vic3RyKHByb3RvLmxlbmd0aCk7XFxcXG4gIH1cXFxcblxcXFxuICAvLyBmaWd1cmUgb3V0IGlmIGl0J3MgZ290IGEgaG9zdFxcXFxuICAvLyB1c2VyQHNlcnZlciBpcyAqYWx3YXlzKiBpbnRlcnByZXRlZCBhcyBhIGhvc3RuYW1lLCBhbmQgdXJsXFxcXG4gIC8vIHJlc29sdXRpb24gd2lsbCB0cmVhdCAvL2Zvby9iYXIgYXMgaG9zdD1mb28scGF0aD1iYXIgYmVjYXVzZSB0aGF0J3NcXFxcbiAgLy8gaG93IHRoZSBicm93c2VyIHJlc29sdmVzIHJlbGF0aXZlIFVSTHMuXFxcXG4gIGlmIChzbGFzaGVzRGVub3RlSG9zdCB8fCBwcm90byB8fCByZXN0Lm1hdGNoKC9eXFxcXFxcXFwvXFxcXFxcXFwvW15AXFxcXFxcXFwvXStAW15AXFxcXFxcXFwvXSsvKSkge1xcXFxuICAgIHZhciBzbGFzaGVzID0gcmVzdC5zdWJzdHIoMCwgMikgPT09ICcvLyc7XFxcXG4gICAgaWYgKHNsYXNoZXMgJiYgIShwcm90byAmJiBob3N0bGVzc1Byb3RvY29sW3Byb3RvXSkpIHtcXFxcbiAgICAgIHJlc3QgPSByZXN0LnN1YnN0cigyKTtcXFxcbiAgICAgIHRoaXMuc2xhc2hlcyA9IHRydWU7XFxcXG4gICAgfVxcXFxuICB9XFxcXG5cXFxcbiAgaWYgKCFob3N0bGVzc1Byb3RvY29sW3Byb3RvXSAmJlxcXFxuICAgICAgKHNsYXNoZXMgfHwgKHByb3RvICYmICFzbGFzaGVkUHJvdG9jb2xbcHJvdG9dKSkpIHtcXFxcblxcXFxuICAgIC8vIHRoZXJlJ3MgYSBob3N0bmFtZS5cXFxcbiAgICAvLyB0aGUgZmlyc3QgaW5zdGFuY2Ugb2YgLywgPywgOywgb3IgIyBlbmRzIHRoZSBob3N0LlxcXFxuICAgIC8vXFxcXG4gICAgLy8gSWYgdGhlcmUgaXMgYW4gQCBpbiB0aGUgaG9zdG5hbWUsIHRoZW4gbm9uLWhvc3QgY2hhcnMgKmFyZSogYWxsb3dlZFxcXFxuICAgIC8vIHRvIHRoZSBsZWZ0IG9mIHRoZSBsYXN0IEAgc2lnbiwgdW5sZXNzIHNvbWUgaG9zdC1lbmRpbmcgY2hhcmFjdGVyXFxcXG4gICAgLy8gY29tZXMgKmJlZm9yZSogdGhlIEAtc2lnbi5cXFxcbiAgICAvLyBVUkxzIGFyZSBvYm5veGlvdXMuXFxcXG4gICAgLy9cXFxcbiAgICAvLyBleDpcXFxcbiAgICAvLyBodHRwOi8vYUBiQGMvID0+IHVzZXI6YUBiIGhvc3Q6Y1xcXFxuICAgIC8vIGh0dHA6Ly9hQGI/QGMgPT4gdXNlcjphIGhvc3Q6YyBwYXRoOi8/QGNcXFxcblxcXFxuICAgIC8vIHYwLjEyIFRPRE8oaXNhYWNzKTogVGhpcyBpcyBub3QgcXVpdGUgaG93IENocm9tZSBkb2VzIHRoaW5ncy5cXFxcbiAgICAvLyBSZXZpZXcgb3VyIHRlc3QgY2FzZSBhZ2FpbnN0IGJyb3dzZXJzIG1vcmUgY29tcHJlaGVuc2l2ZWx5LlxcXFxuXFxcXG4gICAgLy8gZmluZCB0aGUgZmlyc3QgaW5zdGFuY2Ugb2YgYW55IGhvc3RFbmRpbmdDaGFyc1xcXFxuICAgIHZhciBob3N0RW5kID0gLTE7XFxcXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBob3N0RW5kaW5nQ2hhcnMubGVuZ3RoOyBpKyspIHtcXFxcbiAgICAgIHZhciBoZWMgPSByZXN0LmluZGV4T2YoaG9zdEVuZGluZ0NoYXJzW2ldKTtcXFxcbiAgICAgIGlmIChoZWMgIT09IC0xICYmIChob3N0RW5kID09PSAtMSB8fCBoZWMgPCBob3N0RW5kKSlcXFxcbiAgICAgICAgaG9zdEVuZCA9IGhlYztcXFxcbiAgICB9XFxcXG5cXFxcbiAgICAvLyBhdCB0aGlzIHBvaW50LCBlaXRoZXIgd2UgaGF2ZSBhbiBleHBsaWNpdCBwb2ludCB3aGVyZSB0aGVcXFxcbiAgICAvLyBhdXRoIHBvcnRpb24gY2Fubm90IGdvIHBhc3QsIG9yIHRoZSBsYXN0IEAgY2hhciBpcyB0aGUgZGVjaWRlci5cXFxcbiAgICB2YXIgYXV0aCwgYXRTaWduO1xcXFxuICAgIGlmIChob3N0RW5kID09PSAtMSkge1xcXFxuICAgICAgLy8gYXRTaWduIGNhbiBiZSBhbnl3aGVyZS5cXFxcbiAgICAgIGF0U2lnbiA9IHJlc3QubGFzdEluZGV4T2YoJ0AnKTtcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgLy8gYXRTaWduIG11c3QgYmUgaW4gYXV0aCBwb3J0aW9uLlxcXFxuICAgICAgLy8gaHR0cDovL2FAYi9jQGQgPT4gaG9zdDpiIGF1dGg6YSBwYXRoOi9jQGRcXFxcbiAgICAgIGF0U2lnbiA9IHJlc3QubGFzdEluZGV4T2YoJ0AnLCBob3N0RW5kKTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICAvLyBOb3cgd2UgaGF2ZSBhIHBvcnRpb24gd2hpY2ggaXMgZGVmaW5pdGVseSB0aGUgYXV0aC5cXFxcbiAgICAvLyBQdWxsIHRoYXQgb2ZmLlxcXFxuICAgIGlmIChhdFNpZ24gIT09IC0xKSB7XFxcXG4gICAgICBhdXRoID0gcmVzdC5zbGljZSgwLCBhdFNpZ24pO1xcXFxuICAgICAgcmVzdCA9IHJlc3Quc2xpY2UoYXRTaWduICsgMSk7XFxcXG4gICAgICB0aGlzLmF1dGggPSBkZWNvZGVVUklDb21wb25lbnQoYXV0aCk7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgLy8gdGhlIGhvc3QgaXMgdGhlIHJlbWFpbmluZyB0byB0aGUgbGVmdCBvZiB0aGUgZmlyc3Qgbm9uLWhvc3QgY2hhclxcXFxuICAgIGhvc3RFbmQgPSAtMTtcXFxcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5vbkhvc3RDaGFycy5sZW5ndGg7IGkrKykge1xcXFxuICAgICAgdmFyIGhlYyA9IHJlc3QuaW5kZXhPZihub25Ib3N0Q2hhcnNbaV0pO1xcXFxuICAgICAgaWYgKGhlYyAhPT0gLTEgJiYgKGhvc3RFbmQgPT09IC0xIHx8IGhlYyA8IGhvc3RFbmQpKVxcXFxuICAgICAgICBob3N0RW5kID0gaGVjO1xcXFxuICAgIH1cXFxcbiAgICAvLyBpZiB3ZSBzdGlsbCBoYXZlIG5vdCBoaXQgaXQsIHRoZW4gdGhlIGVudGlyZSB0aGluZyBpcyBhIGhvc3QuXFxcXG4gICAgaWYgKGhvc3RFbmQgPT09IC0xKVxcXFxuICAgICAgaG9zdEVuZCA9IHJlc3QubGVuZ3RoO1xcXFxuXFxcXG4gICAgdGhpcy5ob3N0ID0gcmVzdC5zbGljZSgwLCBob3N0RW5kKTtcXFxcbiAgICByZXN0ID0gcmVzdC5zbGljZShob3N0RW5kKTtcXFxcblxcXFxuICAgIC8vIHB1bGwgb3V0IHBvcnQuXFxcXG4gICAgdGhpcy5wYXJzZUhvc3QoKTtcXFxcblxcXFxuICAgIC8vIHdlJ3ZlIGluZGljYXRlZCB0aGF0IHRoZXJlIGlzIGEgaG9zdG5hbWUsXFxcXG4gICAgLy8gc28gZXZlbiBpZiBpdCdzIGVtcHR5LCBpdCBoYXMgdG8gYmUgcHJlc2VudC5cXFxcbiAgICB0aGlzLmhvc3RuYW1lID0gdGhpcy5ob3N0bmFtZSB8fCAnJztcXFxcblxcXFxuICAgIC8vIGlmIGhvc3RuYW1lIGJlZ2lucyB3aXRoIFsgYW5kIGVuZHMgd2l0aCBdXFxcXG4gICAgLy8gYXNzdW1lIHRoYXQgaXQncyBhbiBJUHY2IGFkZHJlc3MuXFxcXG4gICAgdmFyIGlwdjZIb3N0bmFtZSA9IHRoaXMuaG9zdG5hbWVbMF0gPT09ICdbJyAmJlxcXFxuICAgICAgICB0aGlzLmhvc3RuYW1lW3RoaXMuaG9zdG5hbWUubGVuZ3RoIC0gMV0gPT09ICddJztcXFxcblxcXFxuICAgIC8vIHZhbGlkYXRlIGEgbGl0dGxlLlxcXFxuICAgIGlmICghaXB2Nkhvc3RuYW1lKSB7XFxcXG4gICAgICB2YXIgaG9zdHBhcnRzID0gdGhpcy5ob3N0bmFtZS5zcGxpdCgvXFxcXFxcXFwuLyk7XFxcXG4gICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGhvc3RwYXJ0cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcXFxcbiAgICAgICAgdmFyIHBhcnQgPSBob3N0cGFydHNbaV07XFxcXG4gICAgICAgIGlmICghcGFydCkgY29udGludWU7XFxcXG4gICAgICAgIGlmICghcGFydC5tYXRjaChob3N0bmFtZVBhcnRQYXR0ZXJuKSkge1xcXFxuICAgICAgICAgIHZhciBuZXdwYXJ0ID0gJyc7XFxcXG4gICAgICAgICAgZm9yICh2YXIgaiA9IDAsIGsgPSBwYXJ0Lmxlbmd0aDsgaiA8IGs7IGorKykge1xcXFxuICAgICAgICAgICAgaWYgKHBhcnQuY2hhckNvZGVBdChqKSA+IDEyNykge1xcXFxuICAgICAgICAgICAgICAvLyB3ZSByZXBsYWNlIG5vbi1BU0NJSSBjaGFyIHdpdGggYSB0ZW1wb3JhcnkgcGxhY2Vob2xkZXJcXFxcbiAgICAgICAgICAgICAgLy8gd2UgbmVlZCB0aGlzIHRvIG1ha2Ugc3VyZSBzaXplIG9mIGhvc3RuYW1lIGlzIG5vdFxcXFxuICAgICAgICAgICAgICAvLyBicm9rZW4gYnkgcmVwbGFjaW5nIG5vbi1BU0NJSSBieSBub3RoaW5nXFxcXG4gICAgICAgICAgICAgIG5ld3BhcnQgKz0gJ3gnO1xcXFxuICAgICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgICAgbmV3cGFydCArPSBwYXJ0W2pdO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICAvLyB3ZSB0ZXN0IGFnYWluIHdpdGggQVNDSUkgY2hhciBvbmx5XFxcXG4gICAgICAgICAgaWYgKCFuZXdwYXJ0Lm1hdGNoKGhvc3RuYW1lUGFydFBhdHRlcm4pKSB7XFxcXG4gICAgICAgICAgICB2YXIgdmFsaWRQYXJ0cyA9IGhvc3RwYXJ0cy5zbGljZSgwLCBpKTtcXFxcbiAgICAgICAgICAgIHZhciBub3RIb3N0ID0gaG9zdHBhcnRzLnNsaWNlKGkgKyAxKTtcXFxcbiAgICAgICAgICAgIHZhciBiaXQgPSBwYXJ0Lm1hdGNoKGhvc3RuYW1lUGFydFN0YXJ0KTtcXFxcbiAgICAgICAgICAgIGlmIChiaXQpIHtcXFxcbiAgICAgICAgICAgICAgdmFsaWRQYXJ0cy5wdXNoKGJpdFsxXSk7XFxcXG4gICAgICAgICAgICAgIG5vdEhvc3QudW5zaGlmdChiaXRbMl0pO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgaWYgKG5vdEhvc3QubGVuZ3RoKSB7XFxcXG4gICAgICAgICAgICAgIHJlc3QgPSAnLycgKyBub3RIb3N0LmpvaW4oJy4nKSArIHJlc3Q7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB0aGlzLmhvc3RuYW1lID0gdmFsaWRQYXJ0cy5qb2luKCcuJyk7XFxcXG4gICAgICAgICAgICBicmVhaztcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG5cXFxcbiAgICBpZiAodGhpcy5ob3N0bmFtZS5sZW5ndGggPiBob3N0bmFtZU1heExlbikge1xcXFxuICAgICAgdGhpcy5ob3N0bmFtZSA9ICcnO1xcXFxuICAgIH0gZWxzZSB7XFxcXG4gICAgICAvLyBob3N0bmFtZXMgYXJlIGFsd2F5cyBsb3dlciBjYXNlLlxcXFxuICAgICAgdGhpcy5ob3N0bmFtZSA9IHRoaXMuaG9zdG5hbWUudG9Mb3dlckNhc2UoKTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICBpZiAoIWlwdjZIb3N0bmFtZSkge1xcXFxuICAgICAgLy8gSUROQSBTdXBwb3J0OiBSZXR1cm5zIGEgcHVueWNvZGVkIHJlcHJlc2VudGF0aW9uIG9mIFxcXFxcXFwiZG9tYWluXFxcXFxcXCIuXFxcXG4gICAgICAvLyBJdCBvbmx5IGNvbnZlcnRzIHBhcnRzIG9mIHRoZSBkb21haW4gbmFtZSB0aGF0XFxcXG4gICAgICAvLyBoYXZlIG5vbi1BU0NJSSBjaGFyYWN0ZXJzLCBpLmUuIGl0IGRvZXNuJ3QgbWF0dGVyIGlmXFxcXG4gICAgICAvLyB5b3UgY2FsbCBpdCB3aXRoIGEgZG9tYWluIHRoYXQgYWxyZWFkeSBpcyBBU0NJSS1vbmx5LlxcXFxuICAgICAgdGhpcy5ob3N0bmFtZSA9IHB1bnljb2RlLnRvQVNDSUkodGhpcy5ob3N0bmFtZSk7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgdmFyIHAgPSB0aGlzLnBvcnQgPyAnOicgKyB0aGlzLnBvcnQgOiAnJztcXFxcbiAgICB2YXIgaCA9IHRoaXMuaG9zdG5hbWUgfHwgJyc7XFxcXG4gICAgdGhpcy5ob3N0ID0gaCArIHA7XFxcXG4gICAgdGhpcy5ocmVmICs9IHRoaXMuaG9zdDtcXFxcblxcXFxuICAgIC8vIHN0cmlwIFsgYW5kIF0gZnJvbSB0aGUgaG9zdG5hbWVcXFxcbiAgICAvLyB0aGUgaG9zdCBmaWVsZCBzdGlsbCByZXRhaW5zIHRoZW0sIHRob3VnaFxcXFxuICAgIGlmIChpcHY2SG9zdG5hbWUpIHtcXFxcbiAgICAgIHRoaXMuaG9zdG5hbWUgPSB0aGlzLmhvc3RuYW1lLnN1YnN0cigxLCB0aGlzLmhvc3RuYW1lLmxlbmd0aCAtIDIpO1xcXFxuICAgICAgaWYgKHJlc3RbMF0gIT09ICcvJykge1xcXFxuICAgICAgICByZXN0ID0gJy8nICsgcmVzdDtcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gIH1cXFxcblxcXFxuICAvLyBub3cgcmVzdCBpcyBzZXQgdG8gdGhlIHBvc3QtaG9zdCBzdHVmZi5cXFxcbiAgLy8gY2hvcCBvZmYgYW55IGRlbGltIGNoYXJzLlxcXFxuICBpZiAoIXVuc2FmZVByb3RvY29sW2xvd2VyUHJvdG9dKSB7XFxcXG5cXFxcbiAgICAvLyBGaXJzdCwgbWFrZSAxMDAlIHN1cmUgdGhhdCBhbnkgXFxcXFxcXCJhdXRvRXNjYXBlXFxcXFxcXCIgY2hhcnMgZ2V0XFxcXG4gICAgLy8gZXNjYXBlZCwgZXZlbiBpZiBlbmNvZGVVUklDb21wb25lbnQgZG9lc24ndCB0aGluayB0aGV5XFxcXG4gICAgLy8gbmVlZCB0byBiZS5cXFxcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IGF1dG9Fc2NhcGUubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XFxcXG4gICAgICB2YXIgYWUgPSBhdXRvRXNjYXBlW2ldO1xcXFxuICAgICAgaWYgKHJlc3QuaW5kZXhPZihhZSkgPT09IC0xKVxcXFxuICAgICAgICBjb250aW51ZTtcXFxcbiAgICAgIHZhciBlc2MgPSBlbmNvZGVVUklDb21wb25lbnQoYWUpO1xcXFxuICAgICAgaWYgKGVzYyA9PT0gYWUpIHtcXFxcbiAgICAgICAgZXNjID0gZXNjYXBlKGFlKTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIHJlc3QgPSByZXN0LnNwbGl0KGFlKS5qb2luKGVzYyk7XFxcXG4gICAgfVxcXFxuICB9XFxcXG5cXFxcblxcXFxuICAvLyBjaG9wIG9mZiBmcm9tIHRoZSB0YWlsIGZpcnN0LlxcXFxuICB2YXIgaGFzaCA9IHJlc3QuaW5kZXhPZignIycpO1xcXFxuICBpZiAoaGFzaCAhPT0gLTEpIHtcXFxcbiAgICAvLyBnb3QgYSBmcmFnbWVudCBzdHJpbmcuXFxcXG4gICAgdGhpcy5oYXNoID0gcmVzdC5zdWJzdHIoaGFzaCk7XFxcXG4gICAgcmVzdCA9IHJlc3Quc2xpY2UoMCwgaGFzaCk7XFxcXG4gIH1cXFxcbiAgdmFyIHFtID0gcmVzdC5pbmRleE9mKCc/Jyk7XFxcXG4gIGlmIChxbSAhPT0gLTEpIHtcXFxcbiAgICB0aGlzLnNlYXJjaCA9IHJlc3Quc3Vic3RyKHFtKTtcXFxcbiAgICB0aGlzLnF1ZXJ5ID0gcmVzdC5zdWJzdHIocW0gKyAxKTtcXFxcbiAgICBpZiAocGFyc2VRdWVyeVN0cmluZykge1xcXFxuICAgICAgdGhpcy5xdWVyeSA9IHF1ZXJ5c3RyaW5nLnBhcnNlKHRoaXMucXVlcnkpO1xcXFxuICAgIH1cXFxcbiAgICByZXN0ID0gcmVzdC5zbGljZSgwLCBxbSk7XFxcXG4gIH0gZWxzZSBpZiAocGFyc2VRdWVyeVN0cmluZykge1xcXFxuICAgIC8vIG5vIHF1ZXJ5IHN0cmluZywgYnV0IHBhcnNlUXVlcnlTdHJpbmcgc3RpbGwgcmVxdWVzdGVkXFxcXG4gICAgdGhpcy5zZWFyY2ggPSAnJztcXFxcbiAgICB0aGlzLnF1ZXJ5ID0ge307XFxcXG4gIH1cXFxcbiAgaWYgKHJlc3QpIHRoaXMucGF0aG5hbWUgPSByZXN0O1xcXFxuICBpZiAoc2xhc2hlZFByb3RvY29sW2xvd2VyUHJvdG9dICYmXFxcXG4gICAgICB0aGlzLmhvc3RuYW1lICYmICF0aGlzLnBhdGhuYW1lKSB7XFxcXG4gICAgdGhpcy5wYXRobmFtZSA9ICcvJztcXFxcbiAgfVxcXFxuXFxcXG4gIC8vdG8gc3VwcG9ydCBodHRwLnJlcXVlc3RcXFxcbiAgaWYgKHRoaXMucGF0aG5hbWUgfHwgdGhpcy5zZWFyY2gpIHtcXFxcbiAgICB2YXIgcCA9IHRoaXMucGF0aG5hbWUgfHwgJyc7XFxcXG4gICAgdmFyIHMgPSB0aGlzLnNlYXJjaCB8fCAnJztcXFxcbiAgICB0aGlzLnBhdGggPSBwICsgcztcXFxcbiAgfVxcXFxuXFxcXG4gIC8vIGZpbmFsbHksIHJlY29uc3RydWN0IHRoZSBocmVmIGJhc2VkIG9uIHdoYXQgaGFzIGJlZW4gdmFsaWRhdGVkLlxcXFxuICB0aGlzLmhyZWYgPSB0aGlzLmZvcm1hdCgpO1xcXFxuICByZXR1cm4gdGhpcztcXFxcbn07XFxcXG5cXFxcbi8vIGZvcm1hdCBhIHBhcnNlZCBvYmplY3QgaW50byBhIHVybCBzdHJpbmdcXFxcbmZ1bmN0aW9uIHVybEZvcm1hdChvYmopIHtcXFxcbiAgLy8gZW5zdXJlIGl0J3MgYW4gb2JqZWN0LCBhbmQgbm90IGEgc3RyaW5nIHVybC5cXFxcbiAgLy8gSWYgaXQncyBhbiBvYmosIHRoaXMgaXMgYSBuby1vcC5cXFxcbiAgLy8gdGhpcyB3YXksIHlvdSBjYW4gY2FsbCB1cmxfZm9ybWF0KCkgb24gc3RyaW5nc1xcXFxuICAvLyB0byBjbGVhbiB1cCBwb3RlbnRpYWxseSB3b25reSB1cmxzLlxcXFxuICBpZiAodXRpbC5pc1N0cmluZyhvYmopKSBvYmogPSB1cmxQYXJzZShvYmopO1xcXFxuICBpZiAoIShvYmogaW5zdGFuY2VvZiBVcmwpKSByZXR1cm4gVXJsLnByb3RvdHlwZS5mb3JtYXQuY2FsbChvYmopO1xcXFxuICByZXR1cm4gb2JqLmZvcm1hdCgpO1xcXFxufVxcXFxuXFxcXG5VcmwucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uKCkge1xcXFxuICB2YXIgYXV0aCA9IHRoaXMuYXV0aCB8fCAnJztcXFxcbiAgaWYgKGF1dGgpIHtcXFxcbiAgICBhdXRoID0gZW5jb2RlVVJJQ29tcG9uZW50KGF1dGgpO1xcXFxuICAgIGF1dGggPSBhdXRoLnJlcGxhY2UoLyUzQS9pLCAnOicpO1xcXFxuICAgIGF1dGggKz0gJ0AnO1xcXFxuICB9XFxcXG5cXFxcbiAgdmFyIHByb3RvY29sID0gdGhpcy5wcm90b2NvbCB8fCAnJyxcXFxcbiAgICAgIHBhdGhuYW1lID0gdGhpcy5wYXRobmFtZSB8fCAnJyxcXFxcbiAgICAgIGhhc2ggPSB0aGlzLmhhc2ggfHwgJycsXFxcXG4gICAgICBob3N0ID0gZmFsc2UsXFxcXG4gICAgICBxdWVyeSA9ICcnO1xcXFxuXFxcXG4gIGlmICh0aGlzLmhvc3QpIHtcXFxcbiAgICBob3N0ID0gYXV0aCArIHRoaXMuaG9zdDtcXFxcbiAgfSBlbHNlIGlmICh0aGlzLmhvc3RuYW1lKSB7XFxcXG4gICAgaG9zdCA9IGF1dGggKyAodGhpcy5ob3N0bmFtZS5pbmRleE9mKCc6JykgPT09IC0xID9cXFxcbiAgICAgICAgdGhpcy5ob3N0bmFtZSA6XFxcXG4gICAgICAgICdbJyArIHRoaXMuaG9zdG5hbWUgKyAnXScpO1xcXFxuICAgIGlmICh0aGlzLnBvcnQpIHtcXFxcbiAgICAgIGhvc3QgKz0gJzonICsgdGhpcy5wb3J0O1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuXFxcXG4gIGlmICh0aGlzLnF1ZXJ5ICYmXFxcXG4gICAgICB1dGlsLmlzT2JqZWN0KHRoaXMucXVlcnkpICYmXFxcXG4gICAgICBPYmplY3Qua2V5cyh0aGlzLnF1ZXJ5KS5sZW5ndGgpIHtcXFxcbiAgICBxdWVyeSA9IHF1ZXJ5c3RyaW5nLnN0cmluZ2lmeSh0aGlzLnF1ZXJ5KTtcXFxcbiAgfVxcXFxuXFxcXG4gIHZhciBzZWFyY2ggPSB0aGlzLnNlYXJjaCB8fCAocXVlcnkgJiYgKCc/JyArIHF1ZXJ5KSkgfHwgJyc7XFxcXG5cXFxcbiAgaWYgKHByb3RvY29sICYmIHByb3RvY29sLnN1YnN0cigtMSkgIT09ICc6JykgcHJvdG9jb2wgKz0gJzonO1xcXFxuXFxcXG4gIC8vIG9ubHkgdGhlIHNsYXNoZWRQcm90b2NvbHMgZ2V0IHRoZSAvLy4gIE5vdCBtYWlsdG86LCB4bXBwOiwgZXRjLlxcXFxuICAvLyB1bmxlc3MgdGhleSBoYWQgdGhlbSB0byBiZWdpbiB3aXRoLlxcXFxuICBpZiAodGhpcy5zbGFzaGVzIHx8XFxcXG4gICAgICAoIXByb3RvY29sIHx8IHNsYXNoZWRQcm90b2NvbFtwcm90b2NvbF0pICYmIGhvc3QgIT09IGZhbHNlKSB7XFxcXG4gICAgaG9zdCA9ICcvLycgKyAoaG9zdCB8fCAnJyk7XFxcXG4gICAgaWYgKHBhdGhuYW1lICYmIHBhdGhuYW1lLmNoYXJBdCgwKSAhPT0gJy8nKSBwYXRobmFtZSA9ICcvJyArIHBhdGhuYW1lO1xcXFxuICB9IGVsc2UgaWYgKCFob3N0KSB7XFxcXG4gICAgaG9zdCA9ICcnO1xcXFxuICB9XFxcXG5cXFxcbiAgaWYgKGhhc2ggJiYgaGFzaC5jaGFyQXQoMCkgIT09ICcjJykgaGFzaCA9ICcjJyArIGhhc2g7XFxcXG4gIGlmIChzZWFyY2ggJiYgc2VhcmNoLmNoYXJBdCgwKSAhPT0gJz8nKSBzZWFyY2ggPSAnPycgKyBzZWFyY2g7XFxcXG5cXFxcbiAgcGF0aG5hbWUgPSBwYXRobmFtZS5yZXBsYWNlKC9bPyNdL2csIGZ1bmN0aW9uKG1hdGNoKSB7XFxcXG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChtYXRjaCk7XFxcXG4gIH0pO1xcXFxuICBzZWFyY2ggPSBzZWFyY2gucmVwbGFjZSgnIycsICclMjMnKTtcXFxcblxcXFxuICByZXR1cm4gcHJvdG9jb2wgKyBob3N0ICsgcGF0aG5hbWUgKyBzZWFyY2ggKyBoYXNoO1xcXFxufTtcXFxcblxcXFxuZnVuY3Rpb24gdXJsUmVzb2x2ZShzb3VyY2UsIHJlbGF0aXZlKSB7XFxcXG4gIHJldHVybiB1cmxQYXJzZShzb3VyY2UsIGZhbHNlLCB0cnVlKS5yZXNvbHZlKHJlbGF0aXZlKTtcXFxcbn1cXFxcblxcXFxuVXJsLnByb3RvdHlwZS5yZXNvbHZlID0gZnVuY3Rpb24ocmVsYXRpdmUpIHtcXFxcbiAgcmV0dXJuIHRoaXMucmVzb2x2ZU9iamVjdCh1cmxQYXJzZShyZWxhdGl2ZSwgZmFsc2UsIHRydWUpKS5mb3JtYXQoKTtcXFxcbn07XFxcXG5cXFxcbmZ1bmN0aW9uIHVybFJlc29sdmVPYmplY3Qoc291cmNlLCByZWxhdGl2ZSkge1xcXFxuICBpZiAoIXNvdXJjZSkgcmV0dXJuIHJlbGF0aXZlO1xcXFxuICByZXR1cm4gdXJsUGFyc2Uoc291cmNlLCBmYWxzZSwgdHJ1ZSkucmVzb2x2ZU9iamVjdChyZWxhdGl2ZSk7XFxcXG59XFxcXG5cXFxcblVybC5wcm90b3R5cGUucmVzb2x2ZU9iamVjdCA9IGZ1bmN0aW9uKHJlbGF0aXZlKSB7XFxcXG4gIGlmICh1dGlsLmlzU3RyaW5nKHJlbGF0aXZlKSkge1xcXFxuICAgIHZhciByZWwgPSBuZXcgVXJsKCk7XFxcXG4gICAgcmVsLnBhcnNlKHJlbGF0aXZlLCBmYWxzZSwgdHJ1ZSk7XFxcXG4gICAgcmVsYXRpdmUgPSByZWw7XFxcXG4gIH1cXFxcblxcXFxuICB2YXIgcmVzdWx0ID0gbmV3IFVybCgpO1xcXFxuICB2YXIgdGtleXMgPSBPYmplY3Qua2V5cyh0aGlzKTtcXFxcbiAgZm9yICh2YXIgdGsgPSAwOyB0ayA8IHRrZXlzLmxlbmd0aDsgdGsrKykge1xcXFxuICAgIHZhciB0a2V5ID0gdGtleXNbdGtdO1xcXFxuICAgIHJlc3VsdFt0a2V5XSA9IHRoaXNbdGtleV07XFxcXG4gIH1cXFxcblxcXFxuICAvLyBoYXNoIGlzIGFsd2F5cyBvdmVycmlkZGVuLCBubyBtYXR0ZXIgd2hhdC5cXFxcbiAgLy8gZXZlbiBocmVmPVxcXFxcXFwiXFxcXFxcXCIgd2lsbCByZW1vdmUgaXQuXFxcXG4gIHJlc3VsdC5oYXNoID0gcmVsYXRpdmUuaGFzaDtcXFxcblxcXFxuICAvLyBpZiB0aGUgcmVsYXRpdmUgdXJsIGlzIGVtcHR5LCB0aGVuIHRoZXJlJ3Mgbm90aGluZyBsZWZ0IHRvIGRvIGhlcmUuXFxcXG4gIGlmIChyZWxhdGl2ZS5ocmVmID09PSAnJykge1xcXFxuICAgIHJlc3VsdC5ocmVmID0gcmVzdWx0LmZvcm1hdCgpO1xcXFxuICAgIHJldHVybiByZXN1bHQ7XFxcXG4gIH1cXFxcblxcXFxuICAvLyBocmVmcyBsaWtlIC8vZm9vL2JhciBhbHdheXMgY3V0IHRvIHRoZSBwcm90b2NvbC5cXFxcbiAgaWYgKHJlbGF0aXZlLnNsYXNoZXMgJiYgIXJlbGF0aXZlLnByb3RvY29sKSB7XFxcXG4gICAgLy8gdGFrZSBldmVyeXRoaW5nIGV4Y2VwdCB0aGUgcHJvdG9jb2wgZnJvbSByZWxhdGl2ZVxcXFxuICAgIHZhciBya2V5cyA9IE9iamVjdC5rZXlzKHJlbGF0aXZlKTtcXFxcbiAgICBmb3IgKHZhciByayA9IDA7IHJrIDwgcmtleXMubGVuZ3RoOyByaysrKSB7XFxcXG4gICAgICB2YXIgcmtleSA9IHJrZXlzW3JrXTtcXFxcbiAgICAgIGlmIChya2V5ICE9PSAncHJvdG9jb2wnKVxcXFxuICAgICAgICByZXN1bHRbcmtleV0gPSByZWxhdGl2ZVtya2V5XTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICAvL3VybFBhcnNlIGFwcGVuZHMgdHJhaWxpbmcgLyB0byB1cmxzIGxpa2UgaHR0cDovL3d3dy5leGFtcGxlLmNvbVxcXFxuICAgIGlmIChzbGFzaGVkUHJvdG9jb2xbcmVzdWx0LnByb3RvY29sXSAmJlxcXFxuICAgICAgICByZXN1bHQuaG9zdG5hbWUgJiYgIXJlc3VsdC5wYXRobmFtZSkge1xcXFxuICAgICAgcmVzdWx0LnBhdGggPSByZXN1bHQucGF0aG5hbWUgPSAnLyc7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgcmVzdWx0LmhyZWYgPSByZXN1bHQuZm9ybWF0KCk7XFxcXG4gICAgcmV0dXJuIHJlc3VsdDtcXFxcbiAgfVxcXFxuXFxcXG4gIGlmIChyZWxhdGl2ZS5wcm90b2NvbCAmJiByZWxhdGl2ZS5wcm90b2NvbCAhPT0gcmVzdWx0LnByb3RvY29sKSB7XFxcXG4gICAgLy8gaWYgaXQncyBhIGtub3duIHVybCBwcm90b2NvbCwgdGhlbiBjaGFuZ2luZ1xcXFxuICAgIC8vIHRoZSBwcm90b2NvbCBkb2VzIHdlaXJkIHRoaW5nc1xcXFxuICAgIC8vIGZpcnN0LCBpZiBpdCdzIG5vdCBmaWxlOiwgdGhlbiB3ZSBNVVNUIGhhdmUgYSBob3N0LFxcXFxuICAgIC8vIGFuZCBpZiB0aGVyZSB3YXMgYSBwYXRoXFxcXG4gICAgLy8gdG8gYmVnaW4gd2l0aCwgdGhlbiB3ZSBNVVNUIGhhdmUgYSBwYXRoLlxcXFxuICAgIC8vIGlmIGl0IGlzIGZpbGU6LCB0aGVuIHRoZSBob3N0IGlzIGRyb3BwZWQsXFxcXG4gICAgLy8gYmVjYXVzZSB0aGF0J3Mga25vd24gdG8gYmUgaG9zdGxlc3MuXFxcXG4gICAgLy8gYW55dGhpbmcgZWxzZSBpcyBhc3N1bWVkIHRvIGJlIGFic29sdXRlLlxcXFxuICAgIGlmICghc2xhc2hlZFByb3RvY29sW3JlbGF0aXZlLnByb3RvY29sXSkge1xcXFxuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhyZWxhdGl2ZSk7XFxcXG4gICAgICBmb3IgKHZhciB2ID0gMDsgdiA8IGtleXMubGVuZ3RoOyB2KyspIHtcXFxcbiAgICAgICAgdmFyIGsgPSBrZXlzW3ZdO1xcXFxuICAgICAgICByZXN1bHRba10gPSByZWxhdGl2ZVtrXTtcXFxcbiAgICAgIH1cXFxcbiAgICAgIHJlc3VsdC5ocmVmID0gcmVzdWx0LmZvcm1hdCgpO1xcXFxuICAgICAgcmV0dXJuIHJlc3VsdDtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICByZXN1bHQucHJvdG9jb2wgPSByZWxhdGl2ZS5wcm90b2NvbDtcXFxcbiAgICBpZiAoIXJlbGF0aXZlLmhvc3QgJiYgIWhvc3RsZXNzUHJvdG9jb2xbcmVsYXRpdmUucHJvdG9jb2xdKSB7XFxcXG4gICAgICB2YXIgcmVsUGF0aCA9IChyZWxhdGl2ZS5wYXRobmFtZSB8fCAnJykuc3BsaXQoJy8nKTtcXFxcbiAgICAgIHdoaWxlIChyZWxQYXRoLmxlbmd0aCAmJiAhKHJlbGF0aXZlLmhvc3QgPSByZWxQYXRoLnNoaWZ0KCkpKTtcXFxcbiAgICAgIGlmICghcmVsYXRpdmUuaG9zdCkgcmVsYXRpdmUuaG9zdCA9ICcnO1xcXFxuICAgICAgaWYgKCFyZWxhdGl2ZS5ob3N0bmFtZSkgcmVsYXRpdmUuaG9zdG5hbWUgPSAnJztcXFxcbiAgICAgIGlmIChyZWxQYXRoWzBdICE9PSAnJykgcmVsUGF0aC51bnNoaWZ0KCcnKTtcXFxcbiAgICAgIGlmIChyZWxQYXRoLmxlbmd0aCA8IDIpIHJlbFBhdGgudW5zaGlmdCgnJyk7XFxcXG4gICAgICByZXN1bHQucGF0aG5hbWUgPSByZWxQYXRoLmpvaW4oJy8nKTtcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgcmVzdWx0LnBhdGhuYW1lID0gcmVsYXRpdmUucGF0aG5hbWU7XFxcXG4gICAgfVxcXFxuICAgIHJlc3VsdC5zZWFyY2ggPSByZWxhdGl2ZS5zZWFyY2g7XFxcXG4gICAgcmVzdWx0LnF1ZXJ5ID0gcmVsYXRpdmUucXVlcnk7XFxcXG4gICAgcmVzdWx0Lmhvc3QgPSByZWxhdGl2ZS5ob3N0IHx8ICcnO1xcXFxuICAgIHJlc3VsdC5hdXRoID0gcmVsYXRpdmUuYXV0aDtcXFxcbiAgICByZXN1bHQuaG9zdG5hbWUgPSByZWxhdGl2ZS5ob3N0bmFtZSB8fCByZWxhdGl2ZS5ob3N0O1xcXFxuICAgIHJlc3VsdC5wb3J0ID0gcmVsYXRpdmUucG9ydDtcXFxcbiAgICAvLyB0byBzdXBwb3J0IGh0dHAucmVxdWVzdFxcXFxuICAgIGlmIChyZXN1bHQucGF0aG5hbWUgfHwgcmVzdWx0LnNlYXJjaCkge1xcXFxuICAgICAgdmFyIHAgPSByZXN1bHQucGF0aG5hbWUgfHwgJyc7XFxcXG4gICAgICB2YXIgcyA9IHJlc3VsdC5zZWFyY2ggfHwgJyc7XFxcXG4gICAgICByZXN1bHQucGF0aCA9IHAgKyBzO1xcXFxuICAgIH1cXFxcbiAgICByZXN1bHQuc2xhc2hlcyA9IHJlc3VsdC5zbGFzaGVzIHx8IHJlbGF0aXZlLnNsYXNoZXM7XFxcXG4gICAgcmVzdWx0LmhyZWYgPSByZXN1bHQuZm9ybWF0KCk7XFxcXG4gICAgcmV0dXJuIHJlc3VsdDtcXFxcbiAgfVxcXFxuXFxcXG4gIHZhciBpc1NvdXJjZUFicyA9IChyZXN1bHQucGF0aG5hbWUgJiYgcmVzdWx0LnBhdGhuYW1lLmNoYXJBdCgwKSA9PT0gJy8nKSxcXFxcbiAgICAgIGlzUmVsQWJzID0gKFxcXFxuICAgICAgICAgIHJlbGF0aXZlLmhvc3QgfHxcXFxcbiAgICAgICAgICByZWxhdGl2ZS5wYXRobmFtZSAmJiByZWxhdGl2ZS5wYXRobmFtZS5jaGFyQXQoMCkgPT09ICcvJ1xcXFxuICAgICAgKSxcXFxcbiAgICAgIG11c3RFbmRBYnMgPSAoaXNSZWxBYnMgfHwgaXNTb3VyY2VBYnMgfHxcXFxcbiAgICAgICAgICAgICAgICAgICAgKHJlc3VsdC5ob3N0ICYmIHJlbGF0aXZlLnBhdGhuYW1lKSksXFxcXG4gICAgICByZW1vdmVBbGxEb3RzID0gbXVzdEVuZEFicyxcXFxcbiAgICAgIHNyY1BhdGggPSByZXN1bHQucGF0aG5hbWUgJiYgcmVzdWx0LnBhdGhuYW1lLnNwbGl0KCcvJykgfHwgW10sXFxcXG4gICAgICByZWxQYXRoID0gcmVsYXRpdmUucGF0aG5hbWUgJiYgcmVsYXRpdmUucGF0aG5hbWUuc3BsaXQoJy8nKSB8fCBbXSxcXFxcbiAgICAgIHBzeWNob3RpYyA9IHJlc3VsdC5wcm90b2NvbCAmJiAhc2xhc2hlZFByb3RvY29sW3Jlc3VsdC5wcm90b2NvbF07XFxcXG5cXFxcbiAgLy8gaWYgdGhlIHVybCBpcyBhIG5vbi1zbGFzaGVkIHVybCwgdGhlbiByZWxhdGl2ZVxcXFxuICAvLyBsaW5rcyBsaWtlIC4uLy4uIHNob3VsZCBiZSBhYmxlXFxcXG4gIC8vIHRvIGNyYXdsIHVwIHRvIHRoZSBob3N0bmFtZSwgYXMgd2VsbC4gIFRoaXMgaXMgc3RyYW5nZS5cXFxcbiAgLy8gcmVzdWx0LnByb3RvY29sIGhhcyBhbHJlYWR5IGJlZW4gc2V0IGJ5IG5vdy5cXFxcbiAgLy8gTGF0ZXIgb24sIHB1dCB0aGUgZmlyc3QgcGF0aCBwYXJ0IGludG8gdGhlIGhvc3QgZmllbGQuXFxcXG4gIGlmIChwc3ljaG90aWMpIHtcXFxcbiAgICByZXN1bHQuaG9zdG5hbWUgPSAnJztcXFxcbiAgICByZXN1bHQucG9ydCA9IG51bGw7XFxcXG4gICAgaWYgKHJlc3VsdC5ob3N0KSB7XFxcXG4gICAgICBpZiAoc3JjUGF0aFswXSA9PT0gJycpIHNyY1BhdGhbMF0gPSByZXN1bHQuaG9zdDtcXFxcbiAgICAgIGVsc2Ugc3JjUGF0aC51bnNoaWZ0KHJlc3VsdC5ob3N0KTtcXFxcbiAgICB9XFxcXG4gICAgcmVzdWx0Lmhvc3QgPSAnJztcXFxcbiAgICBpZiAocmVsYXRpdmUucHJvdG9jb2wpIHtcXFxcbiAgICAgIHJlbGF0aXZlLmhvc3RuYW1lID0gbnVsbDtcXFxcbiAgICAgIHJlbGF0aXZlLnBvcnQgPSBudWxsO1xcXFxuICAgICAgaWYgKHJlbGF0aXZlLmhvc3QpIHtcXFxcbiAgICAgICAgaWYgKHJlbFBhdGhbMF0gPT09ICcnKSByZWxQYXRoWzBdID0gcmVsYXRpdmUuaG9zdDtcXFxcbiAgICAgICAgZWxzZSByZWxQYXRoLnVuc2hpZnQocmVsYXRpdmUuaG9zdCk7XFxcXG4gICAgICB9XFxcXG4gICAgICByZWxhdGl2ZS5ob3N0ID0gbnVsbDtcXFxcbiAgICB9XFxcXG4gICAgbXVzdEVuZEFicyA9IG11c3RFbmRBYnMgJiYgKHJlbFBhdGhbMF0gPT09ICcnIHx8IHNyY1BhdGhbMF0gPT09ICcnKTtcXFxcbiAgfVxcXFxuXFxcXG4gIGlmIChpc1JlbEFicykge1xcXFxuICAgIC8vIGl0J3MgYWJzb2x1dGUuXFxcXG4gICAgcmVzdWx0Lmhvc3QgPSAocmVsYXRpdmUuaG9zdCB8fCByZWxhdGl2ZS5ob3N0ID09PSAnJykgP1xcXFxuICAgICAgICAgICAgICAgICAgcmVsYXRpdmUuaG9zdCA6IHJlc3VsdC5ob3N0O1xcXFxuICAgIHJlc3VsdC5ob3N0bmFtZSA9IChyZWxhdGl2ZS5ob3N0bmFtZSB8fCByZWxhdGl2ZS5ob3N0bmFtZSA9PT0gJycpID9cXFxcbiAgICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZS5ob3N0bmFtZSA6IHJlc3VsdC5ob3N0bmFtZTtcXFxcbiAgICByZXN1bHQuc2VhcmNoID0gcmVsYXRpdmUuc2VhcmNoO1xcXFxuICAgIHJlc3VsdC5xdWVyeSA9IHJlbGF0aXZlLnF1ZXJ5O1xcXFxuICAgIHNyY1BhdGggPSByZWxQYXRoO1xcXFxuICAgIC8vIGZhbGwgdGhyb3VnaCB0byB0aGUgZG90LWhhbmRsaW5nIGJlbG93LlxcXFxuICB9IGVsc2UgaWYgKHJlbFBhdGgubGVuZ3RoKSB7XFxcXG4gICAgLy8gaXQncyByZWxhdGl2ZVxcXFxuICAgIC8vIHRocm93IGF3YXkgdGhlIGV4aXN0aW5nIGZpbGUsIGFuZCB0YWtlIHRoZSBuZXcgcGF0aCBpbnN0ZWFkLlxcXFxuICAgIGlmICghc3JjUGF0aCkgc3JjUGF0aCA9IFtdO1xcXFxuICAgIHNyY1BhdGgucG9wKCk7XFxcXG4gICAgc3JjUGF0aCA9IHNyY1BhdGguY29uY2F0KHJlbFBhdGgpO1xcXFxuICAgIHJlc3VsdC5zZWFyY2ggPSByZWxhdGl2ZS5zZWFyY2g7XFxcXG4gICAgcmVzdWx0LnF1ZXJ5ID0gcmVsYXRpdmUucXVlcnk7XFxcXG4gIH0gZWxzZSBpZiAoIXV0aWwuaXNOdWxsT3JVbmRlZmluZWQocmVsYXRpdmUuc2VhcmNoKSkge1xcXFxuICAgIC8vIGp1c3QgcHVsbCBvdXQgdGhlIHNlYXJjaC5cXFxcbiAgICAvLyBsaWtlIGhyZWY9Jz9mb28nLlxcXFxuICAgIC8vIFB1dCB0aGlzIGFmdGVyIHRoZSBvdGhlciB0d28gY2FzZXMgYmVjYXVzZSBpdCBzaW1wbGlmaWVzIHRoZSBib29sZWFuc1xcXFxuICAgIGlmIChwc3ljaG90aWMpIHtcXFxcbiAgICAgIHJlc3VsdC5ob3N0bmFtZSA9IHJlc3VsdC5ob3N0ID0gc3JjUGF0aC5zaGlmdCgpO1xcXFxuICAgICAgLy9vY2NhdGlvbmFseSB0aGUgYXV0aCBjYW4gZ2V0IHN0dWNrIG9ubHkgaW4gaG9zdFxcXFxuICAgICAgLy90aGlzIGVzcGVjaWFsbHkgaGFwcGVucyBpbiBjYXNlcyBsaWtlXFxcXG4gICAgICAvL3VybC5yZXNvbHZlT2JqZWN0KCdtYWlsdG86bG9jYWwxQGRvbWFpbjEnLCAnbG9jYWwyQGRvbWFpbjInKVxcXFxuICAgICAgdmFyIGF1dGhJbkhvc3QgPSByZXN1bHQuaG9zdCAmJiByZXN1bHQuaG9zdC5pbmRleE9mKCdAJykgPiAwID9cXFxcbiAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0Lmhvc3Quc3BsaXQoJ0AnKSA6IGZhbHNlO1xcXFxuICAgICAgaWYgKGF1dGhJbkhvc3QpIHtcXFxcbiAgICAgICAgcmVzdWx0LmF1dGggPSBhdXRoSW5Ib3N0LnNoaWZ0KCk7XFxcXG4gICAgICAgIHJlc3VsdC5ob3N0ID0gcmVzdWx0Lmhvc3RuYW1lID0gYXV0aEluSG9zdC5zaGlmdCgpO1xcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcbiAgICByZXN1bHQuc2VhcmNoID0gcmVsYXRpdmUuc2VhcmNoO1xcXFxuICAgIHJlc3VsdC5xdWVyeSA9IHJlbGF0aXZlLnF1ZXJ5O1xcXFxuICAgIC8vdG8gc3VwcG9ydCBodHRwLnJlcXVlc3RcXFxcbiAgICBpZiAoIXV0aWwuaXNOdWxsKHJlc3VsdC5wYXRobmFtZSkgfHwgIXV0aWwuaXNOdWxsKHJlc3VsdC5zZWFyY2gpKSB7XFxcXG4gICAgICByZXN1bHQucGF0aCA9IChyZXN1bHQucGF0aG5hbWUgPyByZXN1bHQucGF0aG5hbWUgOiAnJykgK1xcXFxuICAgICAgICAgICAgICAgICAgICAocmVzdWx0LnNlYXJjaCA/IHJlc3VsdC5zZWFyY2ggOiAnJyk7XFxcXG4gICAgfVxcXFxuICAgIHJlc3VsdC5ocmVmID0gcmVzdWx0LmZvcm1hdCgpO1xcXFxuICAgIHJldHVybiByZXN1bHQ7XFxcXG4gIH1cXFxcblxcXFxuICBpZiAoIXNyY1BhdGgubGVuZ3RoKSB7XFxcXG4gICAgLy8gbm8gcGF0aCBhdCBhbGwuICBlYXN5LlxcXFxuICAgIC8vIHdlJ3ZlIGFscmVhZHkgaGFuZGxlZCB0aGUgb3RoZXIgc3R1ZmYgYWJvdmUuXFxcXG4gICAgcmVzdWx0LnBhdGhuYW1lID0gbnVsbDtcXFxcbiAgICAvL3RvIHN1cHBvcnQgaHR0cC5yZXF1ZXN0XFxcXG4gICAgaWYgKHJlc3VsdC5zZWFyY2gpIHtcXFxcbiAgICAgIHJlc3VsdC5wYXRoID0gJy8nICsgcmVzdWx0LnNlYXJjaDtcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgcmVzdWx0LnBhdGggPSBudWxsO1xcXFxuICAgIH1cXFxcbiAgICByZXN1bHQuaHJlZiA9IHJlc3VsdC5mb3JtYXQoKTtcXFxcbiAgICByZXR1cm4gcmVzdWx0O1xcXFxuICB9XFxcXG5cXFxcbiAgLy8gaWYgYSB1cmwgRU5EcyBpbiAuIG9yIC4uLCB0aGVuIGl0IG11c3QgZ2V0IGEgdHJhaWxpbmcgc2xhc2guXFxcXG4gIC8vIGhvd2V2ZXIsIGlmIGl0IGVuZHMgaW4gYW55dGhpbmcgZWxzZSBub24tc2xhc2h5LFxcXFxuICAvLyB0aGVuIGl0IG11c3QgTk9UIGdldCBhIHRyYWlsaW5nIHNsYXNoLlxcXFxuICB2YXIgbGFzdCA9IHNyY1BhdGguc2xpY2UoLTEpWzBdO1xcXFxuICB2YXIgaGFzVHJhaWxpbmdTbGFzaCA9IChcXFxcbiAgICAgIChyZXN1bHQuaG9zdCB8fCByZWxhdGl2ZS5ob3N0IHx8IHNyY1BhdGgubGVuZ3RoID4gMSkgJiZcXFxcbiAgICAgIChsYXN0ID09PSAnLicgfHwgbGFzdCA9PT0gJy4uJykgfHwgbGFzdCA9PT0gJycpO1xcXFxuXFxcXG4gIC8vIHN0cmlwIHNpbmdsZSBkb3RzLCByZXNvbHZlIGRvdWJsZSBkb3RzIHRvIHBhcmVudCBkaXJcXFxcbiAgLy8gaWYgdGhlIHBhdGggdHJpZXMgdG8gZ28gYWJvdmUgdGhlIHJvb3QsIGB1cGAgZW5kcyB1cCA+IDBcXFxcbiAgdmFyIHVwID0gMDtcXFxcbiAgZm9yICh2YXIgaSA9IHNyY1BhdGgubGVuZ3RoOyBpID49IDA7IGktLSkge1xcXFxuICAgIGxhc3QgPSBzcmNQYXRoW2ldO1xcXFxuICAgIGlmIChsYXN0ID09PSAnLicpIHtcXFxcbiAgICAgIHNyY1BhdGguc3BsaWNlKGksIDEpO1xcXFxuICAgIH0gZWxzZSBpZiAobGFzdCA9PT0gJy4uJykge1xcXFxuICAgICAgc3JjUGF0aC5zcGxpY2UoaSwgMSk7XFxcXG4gICAgICB1cCsrO1xcXFxuICAgIH0gZWxzZSBpZiAodXApIHtcXFxcbiAgICAgIHNyY1BhdGguc3BsaWNlKGksIDEpO1xcXFxuICAgICAgdXAtLTtcXFxcbiAgICB9XFxcXG4gIH1cXFxcblxcXFxuICAvLyBpZiB0aGUgcGF0aCBpcyBhbGxvd2VkIHRvIGdvIGFib3ZlIHRoZSByb290LCByZXN0b3JlIGxlYWRpbmcgLi5zXFxcXG4gIGlmICghbXVzdEVuZEFicyAmJiAhcmVtb3ZlQWxsRG90cykge1xcXFxuICAgIGZvciAoOyB1cC0tOyB1cCkge1xcXFxuICAgICAgc3JjUGF0aC51bnNoaWZ0KCcuLicpO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuXFxcXG4gIGlmIChtdXN0RW5kQWJzICYmIHNyY1BhdGhbMF0gIT09ICcnICYmXFxcXG4gICAgICAoIXNyY1BhdGhbMF0gfHwgc3JjUGF0aFswXS5jaGFyQXQoMCkgIT09ICcvJykpIHtcXFxcbiAgICBzcmNQYXRoLnVuc2hpZnQoJycpO1xcXFxuICB9XFxcXG5cXFxcbiAgaWYgKGhhc1RyYWlsaW5nU2xhc2ggJiYgKHNyY1BhdGguam9pbignLycpLnN1YnN0cigtMSkgIT09ICcvJykpIHtcXFxcbiAgICBzcmNQYXRoLnB1c2goJycpO1xcXFxuICB9XFxcXG5cXFxcbiAgdmFyIGlzQWJzb2x1dGUgPSBzcmNQYXRoWzBdID09PSAnJyB8fFxcXFxuICAgICAgKHNyY1BhdGhbMF0gJiYgc3JjUGF0aFswXS5jaGFyQXQoMCkgPT09ICcvJyk7XFxcXG5cXFxcbiAgLy8gcHV0IHRoZSBob3N0IGJhY2tcXFxcbiAgaWYgKHBzeWNob3RpYykge1xcXFxuICAgIHJlc3VsdC5ob3N0bmFtZSA9IHJlc3VsdC5ob3N0ID0gaXNBYnNvbHV0ZSA/ICcnIDpcXFxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyY1BhdGgubGVuZ3RoID8gc3JjUGF0aC5zaGlmdCgpIDogJyc7XFxcXG4gICAgLy9vY2NhdGlvbmFseSB0aGUgYXV0aCBjYW4gZ2V0IHN0dWNrIG9ubHkgaW4gaG9zdFxcXFxuICAgIC8vdGhpcyBlc3BlY2lhbGx5IGhhcHBlbnMgaW4gY2FzZXMgbGlrZVxcXFxuICAgIC8vdXJsLnJlc29sdmVPYmplY3QoJ21haWx0bzpsb2NhbDFAZG9tYWluMScsICdsb2NhbDJAZG9tYWluMicpXFxcXG4gICAgdmFyIGF1dGhJbkhvc3QgPSByZXN1bHQuaG9zdCAmJiByZXN1bHQuaG9zdC5pbmRleE9mKCdAJykgPiAwID9cXFxcbiAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC5ob3N0LnNwbGl0KCdAJykgOiBmYWxzZTtcXFxcbiAgICBpZiAoYXV0aEluSG9zdCkge1xcXFxuICAgICAgcmVzdWx0LmF1dGggPSBhdXRoSW5Ib3N0LnNoaWZ0KCk7XFxcXG4gICAgICByZXN1bHQuaG9zdCA9IHJlc3VsdC5ob3N0bmFtZSA9IGF1dGhJbkhvc3Quc2hpZnQoKTtcXFxcbiAgICB9XFxcXG4gIH1cXFxcblxcXFxuICBtdXN0RW5kQWJzID0gbXVzdEVuZEFicyB8fCAocmVzdWx0Lmhvc3QgJiYgc3JjUGF0aC5sZW5ndGgpO1xcXFxuXFxcXG4gIGlmIChtdXN0RW5kQWJzICYmICFpc0Fic29sdXRlKSB7XFxcXG4gICAgc3JjUGF0aC51bnNoaWZ0KCcnKTtcXFxcbiAgfVxcXFxuXFxcXG4gIGlmICghc3JjUGF0aC5sZW5ndGgpIHtcXFxcbiAgICByZXN1bHQucGF0aG5hbWUgPSBudWxsO1xcXFxuICAgIHJlc3VsdC5wYXRoID0gbnVsbDtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICByZXN1bHQucGF0aG5hbWUgPSBzcmNQYXRoLmpvaW4oJy8nKTtcXFxcbiAgfVxcXFxuXFxcXG4gIC8vdG8gc3VwcG9ydCByZXF1ZXN0Lmh0dHBcXFxcbiAgaWYgKCF1dGlsLmlzTnVsbChyZXN1bHQucGF0aG5hbWUpIHx8ICF1dGlsLmlzTnVsbChyZXN1bHQuc2VhcmNoKSkge1xcXFxuICAgIHJlc3VsdC5wYXRoID0gKHJlc3VsdC5wYXRobmFtZSA/IHJlc3VsdC5wYXRobmFtZSA6ICcnKSArXFxcXG4gICAgICAgICAgICAgICAgICAocmVzdWx0LnNlYXJjaCA/IHJlc3VsdC5zZWFyY2ggOiAnJyk7XFxcXG4gIH1cXFxcbiAgcmVzdWx0LmF1dGggPSByZWxhdGl2ZS5hdXRoIHx8IHJlc3VsdC5hdXRoO1xcXFxuICByZXN1bHQuc2xhc2hlcyA9IHJlc3VsdC5zbGFzaGVzIHx8IHJlbGF0aXZlLnNsYXNoZXM7XFxcXG4gIHJlc3VsdC5ocmVmID0gcmVzdWx0LmZvcm1hdCgpO1xcXFxuICByZXR1cm4gcmVzdWx0O1xcXFxufTtcXFxcblxcXFxuVXJsLnByb3RvdHlwZS5wYXJzZUhvc3QgPSBmdW5jdGlvbigpIHtcXFxcbiAgdmFyIGhvc3QgPSB0aGlzLmhvc3Q7XFxcXG4gIHZhciBwb3J0ID0gcG9ydFBhdHRlcm4uZXhlYyhob3N0KTtcXFxcbiAgaWYgKHBvcnQpIHtcXFxcbiAgICBwb3J0ID0gcG9ydFswXTtcXFxcbiAgICBpZiAocG9ydCAhPT0gJzonKSB7XFxcXG4gICAgICB0aGlzLnBvcnQgPSBwb3J0LnN1YnN0cigxKTtcXFxcbiAgICB9XFxcXG4gICAgaG9zdCA9IGhvc3Quc3Vic3RyKDAsIGhvc3QubGVuZ3RoIC0gcG9ydC5sZW5ndGgpO1xcXFxuICB9XFxcXG4gIGlmIChob3N0KSB0aGlzLmhvc3RuYW1lID0gaG9zdDtcXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12ZFhKc0wzVnliQzVxY3k1cWN5SXNJbk52ZFhKalpYTWlPbHNpZDJWaWNHRmphem92TDJsdGFtOTVVbEJETHk0dmJtOWtaVjl0YjJSMWJHVnpMM1Z5YkM5MWNtd3Vhbk0vTUdJeE5pSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUl2THlCRGIzQjVjbWxuYUhRZ1NtOTVaVzUwTENCSmJtTXVJR0Z1WkNCdmRHaGxjaUJPYjJSbElHTnZiblJ5YVdKMWRHOXljeTVjYmk4dlhHNHZMeUJRWlhKdGFYTnphVzl1SUdseklHaGxjbVZpZVNCbmNtRnVkR1ZrTENCbWNtVmxJRzltSUdOb1lYSm5aU3dnZEc4Z1lXNTVJSEJsY25OdmJpQnZZblJoYVc1cGJtY2dZVnh1THk4Z1kyOXdlU0J2WmlCMGFHbHpJSE52Wm5SM1lYSmxJR0Z1WkNCaGMzTnZZMmxoZEdWa0lHUnZZM1Z0Wlc1MFlYUnBiMjRnWm1sc1pYTWdLSFJvWlZ4dUx5OGdYQ0pUYjJaMGQyRnlaVndpS1N3Z2RHOGdaR1ZoYkNCcGJpQjBhR1VnVTI5bWRIZGhjbVVnZDJsMGFHOTFkQ0J5WlhOMGNtbGpkR2x2Yml3Z2FXNWpiSFZrYVc1blhHNHZMeUIzYVhSb2IzVjBJR3hwYldsMFlYUnBiMjRnZEdobElISnBaMmgwY3lCMGJ5QjFjMlVzSUdOdmNIa3NJRzF2WkdsbWVTd2diV1Z5WjJVc0lIQjFZbXhwYzJnc1hHNHZMeUJrYVhOMGNtbGlkWFJsTENCemRXSnNhV05sYm5ObExDQmhibVF2YjNJZ2MyVnNiQ0JqYjNCcFpYTWdiMllnZEdobElGTnZablIzWVhKbExDQmhibVFnZEc4Z2NHVnliV2wwWEc0dkx5QndaWEp6YjI1eklIUnZJSGRvYjIwZ2RHaGxJRk52Wm5SM1lYSmxJR2x6SUdaMWNtNXBjMmhsWkNCMGJ5QmtieUJ6Ynl3Z2MzVmlhbVZqZENCMGJ5QjBhR1ZjYmk4dklHWnZiR3h2ZDJsdVp5QmpiMjVrYVhScGIyNXpPbHh1THk5Y2JpOHZJRlJvWlNCaFltOTJaU0JqYjNCNWNtbG5hSFFnYm05MGFXTmxJR0Z1WkNCMGFHbHpJSEJsY20xcGMzTnBiMjRnYm05MGFXTmxJSE5vWVd4c0lHSmxJR2x1WTJ4MVpHVmtYRzR2THlCcGJpQmhiR3dnWTI5d2FXVnpJRzl5SUhOMVluTjBZVzUwYVdGc0lIQnZjblJwYjI1eklHOW1JSFJvWlNCVGIyWjBkMkZ5WlM1Y2JpOHZYRzR2THlCVVNFVWdVMDlHVkZkQlVrVWdTVk1nVUZKUFZrbEVSVVFnWENKQlV5QkpVMXdpTENCWFNWUklUMVZVSUZkQlVsSkJUbFJaSUU5R0lFRk9XU0JMU1U1RUxDQkZXRkJTUlZOVFhHNHZMeUJQVWlCSlRWQk1TVVZFTENCSlRrTk1WVVJKVGtjZ1FsVlVJRTVQVkNCTVNVMUpWRVZFSUZSUElGUklSU0JYUVZKU1FVNVVTVVZUSUU5R1hHNHZMeUJOUlZKRFNFRk9WRUZDU1V4SlZGa3NJRVpKVkU1RlUxTWdSazlTSUVFZ1VFRlNWRWxEVlV4QlVpQlFWVkpRVDFORklFRk9SQ0JPVDA1SlRrWlNTVTVIUlUxRlRsUXVJRWxPWEc0dkx5Qk9UeUJGVmtWT1ZDQlRTRUZNVENCVVNFVWdRVlZVU0U5U1V5QlBVaUJEVDFCWlVrbEhTRlFnU0U5TVJFVlNVeUJDUlNCTVNVRkNURVVnUms5U0lFRk9XU0JEVEVGSlRTeGNiaTh2SUVSQlRVRkhSVk1nVDFJZ1QxUklSVklnVEVsQlFrbE1TVlJaTENCWFNFVlVTRVZTSUVsT0lFRk9JRUZEVkVsUFRpQlBSaUJEVDA1VVVrRkRWQ3dnVkU5U1ZDQlBVbHh1THk4Z1QxUklSVkpYU1ZORkxDQkJVa2xUU1U1SElFWlNUMDBzSUU5VlZDQlBSaUJQVWlCSlRpQkRUMDVPUlVOVVNVOU9JRmRKVkVnZ1ZFaEZJRk5QUmxSWFFWSkZJRTlTSUZSSVJWeHVMeThnVlZORklFOVNJRTlVU0VWU0lFUkZRVXhKVGtkVElFbE9JRlJJUlNCVFQwWlVWMEZTUlM1Y2JseHVKM1Z6WlNCemRISnBZM1FuTzF4dVhHNTJZWElnY0hWdWVXTnZaR1VnUFNCeVpYRjFhWEpsS0Nkd2RXNTVZMjlrWlNjcE8xeHVkbUZ5SUhWMGFXd2dQU0J5WlhGMWFYSmxLQ2N1TDNWMGFXd25LVHRjYmx4dVpYaHdiM0owY3k1d1lYSnpaU0E5SUhWeWJGQmhjbk5sTzF4dVpYaHdiM0owY3k1eVpYTnZiSFpsSUQwZ2RYSnNVbVZ6YjJ4MlpUdGNibVY0Y0c5eWRITXVjbVZ6YjJ4MlpVOWlhbVZqZENBOUlIVnliRkpsYzI5c2RtVlBZbXBsWTNRN1hHNWxlSEJ2Y25SekxtWnZjbTFoZENBOUlIVnliRVp2Y20xaGREdGNibHh1Wlhod2IzSjBjeTVWY213Z1BTQlZjbXc3WEc1Y2JtWjFibU4wYVc5dUlGVnliQ2dwSUh0Y2JpQWdkR2hwY3k1d2NtOTBiMk52YkNBOUlHNTFiR3c3WEc0Z0lIUm9hWE11YzJ4aGMyaGxjeUE5SUc1MWJHdzdYRzRnSUhSb2FYTXVZWFYwYUNBOUlHNTFiR3c3WEc0Z0lIUm9hWE11YUc5emRDQTlJRzUxYkd3N1hHNGdJSFJvYVhNdWNHOXlkQ0E5SUc1MWJHdzdYRzRnSUhSb2FYTXVhRzl6ZEc1aGJXVWdQU0J1ZFd4c08xeHVJQ0IwYUdsekxtaGhjMmdnUFNCdWRXeHNPMXh1SUNCMGFHbHpMbk5sWVhKamFDQTlJRzUxYkd3N1hHNGdJSFJvYVhNdWNYVmxjbmtnUFNCdWRXeHNPMXh1SUNCMGFHbHpMbkJoZEdodVlXMWxJRDBnYm5Wc2JEdGNiaUFnZEdocGN5NXdZWFJvSUQwZ2JuVnNiRHRjYmlBZ2RHaHBjeTVvY21WbUlEMGdiblZzYkR0Y2JuMWNibHh1THk4Z1VtVm1aWEpsYm1ObE9pQlNSa01nTXprNE5pd2dVa1pESURFNE1EZ3NJRkpHUXlBeU16azJYRzVjYmk4dklHUmxabWx1WlNCMGFHVnpaU0JvWlhKbElITnZJR0YwSUd4bFlYTjBJSFJvWlhrZ2IyNXNlU0JvWVhabElIUnZJR0psWEc0dkx5QmpiMjF3YVd4bFpDQnZibU5sSUc5dUlIUm9aU0JtYVhKemRDQnRiMlIxYkdVZ2JHOWhaQzVjYm5aaGNpQndjbTkwYjJOdmJGQmhkSFJsY200Z1BTQXZYaWhiWVMxNk1DMDVMaXN0WFNzNktTOXBMRnh1SUNBZ0lIQnZjblJRWVhSMFpYSnVJRDBnTHpwYk1DMDVYU29rTHl4Y2JseHVJQ0FnSUM4dklGTndaV05wWVd3Z1kyRnpaU0JtYjNJZ1lTQnphVzF3YkdVZ2NHRjBhQ0JWVWt4Y2JpQWdJQ0J6YVcxd2JHVlFZWFJvVUdGMGRHVnliaUE5SUM5ZUtGeGNMMXhjTHo4b1B5RmNYQzhwVzE1Y1hEOWNYSE5kS2lrb1hGdy9XMTVjWEhOZEtpay9KQzhzWEc1Y2JpQWdJQ0F2THlCU1JrTWdNak01TmpvZ1kyaGhjbUZqZEdWeWN5QnlaWE5sY25abFpDQm1iM0lnWkdWc2FXMXBkR2x1WnlCVlVreHpMbHh1SUNBZ0lDOHZJRmRsSUdGamRIVmhiR3g1SUdwMWMzUWdZWFYwYnkxbGMyTmhjR1VnZEdobGMyVXVYRzRnSUNBZ1pHVnNhVzF6SUQwZ1d5YzhKeXdnSno0bkxDQW5YQ0luTENBbllDY3NJQ2NnSnl3Z0oxeGNjaWNzSUNkY1hHNG5MQ0FuWEZ4MEoxMHNYRzVjYmlBZ0lDQXZMeUJTUmtNZ01qTTVOam9nWTJoaGNtRmpkR1Z5Y3lCdWIzUWdZV3hzYjNkbFpDQm1iM0lnZG1GeWFXOTFjeUJ5WldGemIyNXpMbHh1SUNBZ0lIVnVkMmx6WlNBOUlGc25leWNzSUNkOUp5d2dKM3duTENBblhGeGNYQ2NzSUNkZUp5d2dKMkFuWFM1amIyNWpZWFFvWkdWc2FXMXpLU3hjYmx4dUlDQWdJQzh2SUVGc2JHOTNaV1FnWW5rZ1VrWkRjeXdnWW5WMElHTmhkWE5sSUc5bUlGaFRVeUJoZEhSaFkydHpMaUFnUVd4M1lYbHpJR1Z6WTJGd1pTQjBhR1Z6WlM1Y2JpQWdJQ0JoZFhSdlJYTmpZWEJsSUQwZ1d5ZGNYQ2NuWFM1amIyNWpZWFFvZFc1M2FYTmxLU3hjYmlBZ0lDQXZMeUJEYUdGeVlXTjBaWEp6SUhSb1lYUWdZWEpsSUc1bGRtVnlJR1YyWlhJZ1lXeHNiM2RsWkNCcGJpQmhJR2h2YzNSdVlXMWxMbHh1SUNBZ0lDOHZJRTV2ZEdVZ2RHaGhkQ0JoYm5rZ2FXNTJZV3hwWkNCamFHRnljeUJoY21VZ1lXeHpieUJvWVc1a2JHVmtMQ0JpZFhRZ2RHaGxjMlZjYmlBZ0lDQXZMeUJoY21VZ2RHaGxJRzl1WlhNZ2RHaGhkQ0JoY21VZ0ttVjRjR1ZqZEdWa0tpQjBieUJpWlNCelpXVnVMQ0J6YnlCM1pTQm1ZWE4wTFhCaGRHaGNiaUFnSUNBdkx5QjBhR1Z0TGx4dUlDQWdJRzV2YmtodmMzUkRhR0Z5Y3lBOUlGc25KU2NzSUNjdkp5d2dKejhuTENBbk95Y3NJQ2NqSjEwdVkyOXVZMkYwS0dGMWRHOUZjMk5oY0dVcExGeHVJQ0FnSUdodmMzUkZibVJwYm1kRGFHRnljeUE5SUZzbkx5Y3NJQ2MvSnl3Z0p5TW5YU3hjYmlBZ0lDQm9iM04wYm1GdFpVMWhlRXhsYmlBOUlESTFOU3hjYmlBZ0lDQm9iM04wYm1GdFpWQmhjblJRWVhSMFpYSnVJRDBnTDE1YksyRXRlakF0T1VFdFdsOHRYWHN3TERZemZTUXZMRnh1SUNBZ0lHaHZjM1J1WVcxbFVHRnlkRk4wWVhKMElEMGdMMTRvV3l0aExYb3dMVGxCTFZwZkxWMTdNQ3cyTTMwcEtDNHFLU1F2TEZ4dUlDQWdJQzh2SUhCeWIzUnZZMjlzY3lCMGFHRjBJR05oYmlCaGJHeHZkeUJjSW5WdWMyRm1aVndpSUdGdVpDQmNJblZ1ZDJselpWd2lJR05vWVhKekxseHVJQ0FnSUhWdWMyRm1aVkJ5YjNSdlkyOXNJRDBnZTF4dUlDQWdJQ0FnSjJwaGRtRnpZM0pwY0hRbk9pQjBjblZsTEZ4dUlDQWdJQ0FnSjJwaGRtRnpZM0pwY0hRNkp6b2dkSEoxWlZ4dUlDQWdJSDBzWEc0Z0lDQWdMeThnY0hKdmRHOWpiMnh6SUhSb1lYUWdibVYyWlhJZ2FHRjJaU0JoSUdodmMzUnVZVzFsTGx4dUlDQWdJR2h2YzNSc1pYTnpVSEp2ZEc5amIyd2dQU0I3WEc0Z0lDQWdJQ0FuYW1GMllYTmpjbWx3ZENjNklIUnlkV1VzWEc0Z0lDQWdJQ0FuYW1GMllYTmpjbWx3ZERvbk9pQjBjblZsWEc0Z0lDQWdmU3hjYmlBZ0lDQXZMeUJ3Y205MGIyTnZiSE1nZEdoaGRDQmhiSGRoZVhNZ1kyOXVkR0ZwYmlCaElDOHZJR0pwZEM1Y2JpQWdJQ0J6YkdGemFHVmtVSEp2ZEc5amIyd2dQU0I3WEc0Z0lDQWdJQ0FuYUhSMGNDYzZJSFJ5ZFdVc1hHNGdJQ0FnSUNBbmFIUjBjSE1uT2lCMGNuVmxMRnh1SUNBZ0lDQWdKMlowY0NjNklIUnlkV1VzWEc0Z0lDQWdJQ0FuWjI5d2FHVnlKem9nZEhKMVpTeGNiaUFnSUNBZ0lDZG1hV3hsSnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ2RvZEhSd09pYzZJSFJ5ZFdVc1hHNGdJQ0FnSUNBbmFIUjBjSE02SnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ2RtZEhBNkp6b2dkSEoxWlN4Y2JpQWdJQ0FnSUNkbmIzQm9aWEk2SnpvZ2RISjFaU3hjYmlBZ0lDQWdJQ2RtYVd4bE9pYzZJSFJ5ZFdWY2JpQWdJQ0I5TEZ4dUlDQWdJSEYxWlhKNWMzUnlhVzVuSUQwZ2NtVnhkV2x5WlNnbmNYVmxjbmx6ZEhKcGJtY25LVHRjYmx4dVpuVnVZM1JwYjI0Z2RYSnNVR0Z5YzJVb2RYSnNMQ0J3WVhKelpWRjFaWEo1VTNSeWFXNW5MQ0J6YkdGemFHVnpSR1Z1YjNSbFNHOXpkQ2tnZTF4dUlDQnBaaUFvZFhKc0lDWW1JSFYwYVd3dWFYTlBZbXBsWTNRb2RYSnNLU0FtSmlCMWNtd2dhVzV6ZEdGdVkyVnZaaUJWY213cElISmxkSFZ5YmlCMWNtdzdYRzVjYmlBZ2RtRnlJSFVnUFNCdVpYY2dWWEpzTzF4dUlDQjFMbkJoY25ObEtIVnliQ3dnY0dGeWMyVlJkV1Z5ZVZOMGNtbHVaeXdnYzJ4aGMyaGxjMFJsYm05MFpVaHZjM1FwTzF4dUlDQnlaWFIxY200Z2RUdGNibjFjYmx4dVZYSnNMbkJ5YjNSdmRIbHdaUzV3WVhKelpTQTlJR1oxYm1OMGFXOXVLSFZ5YkN3Z2NHRnljMlZSZFdWeWVWTjBjbWx1Wnl3Z2MyeGhjMmhsYzBSbGJtOTBaVWh2YzNRcElIdGNiaUFnYVdZZ0tDRjFkR2xzTG1selUzUnlhVzVuS0hWeWJDa3BJSHRjYmlBZ0lDQjBhSEp2ZHlCdVpYY2dWSGx3WlVWeWNtOXlLRndpVUdGeVlXMWxkR1Z5SUNkMWNtd25JRzExYzNRZ1ltVWdZU0J6ZEhKcGJtY3NJRzV2ZENCY0lpQXJJSFI1Y0dWdlppQjFjbXdwTzF4dUlDQjlYRzVjYmlBZ0x5OGdRMjl3ZVNCamFISnZiV1VzSUVsRkxDQnZjR1Z5WVNCaVlXTnJjMnhoYzJndGFHRnVaR3hwYm1jZ1ltVm9ZWFpwYjNJdVhHNGdJQzh2SUVKaFkyc2djMnhoYzJobGN5QmlaV1p2Y21VZ2RHaGxJSEYxWlhKNUlITjBjbWx1WnlCblpYUWdZMjl1ZG1WeWRHVmtJSFJ2SUdadmNuZGhjbVFnYzJ4aGMyaGxjMXh1SUNBdkx5QlRaV1U2SUdoMGRIQnpPaTh2WTI5a1pTNW5iMjluYkdVdVkyOXRMM0F2WTJoeWIyMXBkVzB2YVhOemRXVnpMMlJsZEdGcGJEOXBaRDB5TlRreE5seHVJQ0IyWVhJZ2NYVmxjbmxKYm1SbGVDQTlJSFZ5YkM1cGJtUmxlRTltS0NjL0p5a3NYRzRnSUNBZ0lDQnpjR3hwZEhSbGNpQTlYRzRnSUNBZ0lDQWdJQ0FnS0hGMVpYSjVTVzVrWlhnZ0lUMDlJQzB4SUNZbUlIRjFaWEo1U1c1a1pYZ2dQQ0IxY213dWFXNWtaWGhQWmlnbkl5Y3BLU0EvSUNjL0p5QTZJQ2NqSnl4Y2JpQWdJQ0FnSUhWVGNHeHBkQ0E5SUhWeWJDNXpjR3hwZENoemNHeHBkSFJsY2lrc1hHNGdJQ0FnSUNCemJHRnphRkpsWjJWNElEMGdMMXhjWEZ3dlp6dGNiaUFnZFZOd2JHbDBXekJkSUQwZ2RWTndiR2wwV3pCZExuSmxjR3hoWTJVb2MyeGhjMmhTWldkbGVDd2dKeThuS1R0Y2JpQWdkWEpzSUQwZ2RWTndiR2wwTG1wdmFXNG9jM0JzYVhSMFpYSXBPMXh1WEc0Z0lIWmhjaUJ5WlhOMElEMGdkWEpzTzF4dVhHNGdJQzh2SUhSeWFXMGdZbVZtYjNKbElIQnliMk5sWldScGJtY3VYRzRnSUM4dklGUm9hWE1nYVhNZ2RHOGdjM1Z3Y0c5eWRDQndZWEp6WlNCemRIVm1aaUJzYVd0bElGd2lJQ0JvZEhSd09pOHZabTl2TG1OdmJTQWdYRnh1WENKY2JpQWdjbVZ6ZENBOUlISmxjM1F1ZEhKcGJTZ3BPMXh1WEc0Z0lHbG1JQ2doYzJ4aGMyaGxjMFJsYm05MFpVaHZjM1FnSmlZZ2RYSnNMbk53YkdsMEtDY2pKeWt1YkdWdVozUm9JRDA5UFNBeEtTQjdYRzRnSUNBZ0x5OGdWSEo1SUdaaGMzUWdjR0YwYUNCeVpXZGxlSEJjYmlBZ0lDQjJZWElnYzJsdGNHeGxVR0YwYUNBOUlITnBiWEJzWlZCaGRHaFFZWFIwWlhKdUxtVjRaV01vY21WemRDazdYRzRnSUNBZ2FXWWdLSE5wYlhCc1pWQmhkR2dwSUh0Y2JpQWdJQ0FnSUhSb2FYTXVjR0YwYUNBOUlISmxjM1E3WEc0Z0lDQWdJQ0IwYUdsekxtaHlaV1lnUFNCeVpYTjBPMXh1SUNBZ0lDQWdkR2hwY3k1d1lYUm9ibUZ0WlNBOUlITnBiWEJzWlZCaGRHaGJNVjA3WEc0Z0lDQWdJQ0JwWmlBb2MybHRjR3hsVUdGMGFGc3lYU2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbk5sWVhKamFDQTlJSE5wYlhCc1pWQmhkR2hiTWwwN1hHNGdJQ0FnSUNBZ0lHbG1JQ2h3WVhKelpWRjFaWEo1VTNSeWFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RHaHBjeTV4ZFdWeWVTQTlJSEYxWlhKNWMzUnlhVzVuTG5CaGNuTmxLSFJvYVhNdWMyVmhjbU5vTG5OMVluTjBjaWd4S1NrN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdkR2hwY3k1eGRXVnllU0E5SUhSb2FYTXVjMlZoY21Ob0xuTjFZbk4wY2lneEtUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU0JsYkhObElHbG1JQ2h3WVhKelpWRjFaWEo1VTNSeWFXNW5LU0I3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjMlZoY21Ob0lEMGdKeWM3WEc0Z0lDQWdJQ0FnSUhSb2FYTXVjWFZsY25rZ1BTQjdmVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSEpsZEhWeWJpQjBhR2x6TzF4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUhaaGNpQndjbTkwYnlBOUlIQnliM1J2WTI5c1VHRjBkR1Z5Ymk1bGVHVmpLSEpsYzNRcE8xeHVJQ0JwWmlBb2NISnZkRzhwSUh0Y2JpQWdJQ0J3Y205MGJ5QTlJSEJ5YjNSdld6QmRPMXh1SUNBZ0lIWmhjaUJzYjNkbGNsQnliM1J2SUQwZ2NISnZkRzh1ZEc5TWIzZGxja05oYzJVb0tUdGNiaUFnSUNCMGFHbHpMbkJ5YjNSdlkyOXNJRDBnYkc5M1pYSlFjbTkwYnp0Y2JpQWdJQ0J5WlhOMElEMGdjbVZ6ZEM1emRXSnpkSElvY0hKdmRHOHViR1Z1WjNSb0tUdGNiaUFnZlZ4dVhHNGdJQzh2SUdacFozVnlaU0J2ZFhRZ2FXWWdhWFFuY3lCbmIzUWdZU0JvYjNOMFhHNGdJQzh2SUhWelpYSkFjMlZ5ZG1WeUlHbHpJQ3BoYkhkaGVYTXFJR2x1ZEdWeWNISmxkR1ZrSUdGeklHRWdhRzl6ZEc1aGJXVXNJR0Z1WkNCMWNteGNiaUFnTHk4Z2NtVnpiMngxZEdsdmJpQjNhV3hzSUhSeVpXRjBJQzh2Wm05dkwySmhjaUJoY3lCb2IzTjBQV1p2Ynl4d1lYUm9QV0poY2lCaVpXTmhkWE5sSUhSb1lYUW5jMXh1SUNBdkx5Qm9iM2NnZEdobElHSnliM2R6WlhJZ2NtVnpiMngyWlhNZ2NtVnNZWFJwZG1VZ1ZWSk1jeTVjYmlBZ2FXWWdLSE5zWVhOb1pYTkVaVzV2ZEdWSWIzTjBJSHg4SUhCeWIzUnZJSHg4SUhKbGMzUXViV0YwWTJnb0wxNWNYQzljWEM5YlhrQmNYQzlkSzBCYlhrQmNYQzlkS3k4cEtTQjdYRzRnSUNBZ2RtRnlJSE5zWVhOb1pYTWdQU0J5WlhOMExuTjFZbk4wY2lnd0xDQXlLU0E5UFQwZ0p5OHZKenRjYmlBZ0lDQnBaaUFvYzJ4aGMyaGxjeUFtSmlBaEtIQnliM1J2SUNZbUlHaHZjM1JzWlhOelVISnZkRzlqYjJ4YmNISnZkRzlkS1NrZ2UxeHVJQ0FnSUNBZ2NtVnpkQ0E5SUhKbGMzUXVjM1ZpYzNSeUtESXBPMXh1SUNBZ0lDQWdkR2hwY3k1emJHRnphR1Z6SUQwZ2RISjFaVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVJQ0JwWmlBb0lXaHZjM1JzWlhOelVISnZkRzlqYjJ4YmNISnZkRzlkSUNZbVhHNGdJQ0FnSUNBb2MyeGhjMmhsY3lCOGZDQW9jSEp2ZEc4Z0ppWWdJWE5zWVhOb1pXUlFjbTkwYjJOdmJGdHdjbTkwYjEwcEtTa2dlMXh1WEc0Z0lDQWdMeThnZEdobGNtVW5jeUJoSUdodmMzUnVZVzFsTGx4dUlDQWdJQzh2SUhSb1pTQm1hWEp6ZENCcGJuTjBZVzVqWlNCdlppQXZMQ0EvTENBN0xDQnZjaUFqSUdWdVpITWdkR2hsSUdodmMzUXVYRzRnSUNBZ0x5OWNiaUFnSUNBdkx5QkpaaUIwYUdWeVpTQnBjeUJoYmlCQUlHbHVJSFJvWlNCb2IzTjBibUZ0WlN3Z2RHaGxiaUJ1YjI0dGFHOXpkQ0JqYUdGeWN5QXFZWEpsS2lCaGJHeHZkMlZrWEc0Z0lDQWdMeThnZEc4Z2RHaGxJR3hsWm5RZ2IyWWdkR2hsSUd4aGMzUWdRQ0J6YVdkdUxDQjFibXhsYzNNZ2MyOXRaU0JvYjNOMExXVnVaR2x1WnlCamFHRnlZV04wWlhKY2JpQWdJQ0F2THlCamIyMWxjeUFxWW1WbWIzSmxLaUIwYUdVZ1FDMXphV2R1TGx4dUlDQWdJQzh2SUZWU1RITWdZWEpsSUc5aWJtOTRhVzkxY3k1Y2JpQWdJQ0F2TDF4dUlDQWdJQzh2SUdWNE9seHVJQ0FnSUM4dklHaDBkSEE2THk5aFFHSkFZeThnUFQ0Z2RYTmxjanBoUUdJZ2FHOXpkRHBqWEc0Z0lDQWdMeThnYUhSMGNEb3ZMMkZBWWo5QVl5QTlQaUIxYzJWeU9tRWdhRzl6ZERwaklIQmhkR2c2THo5QVkxeHVYRzRnSUNBZ0x5OGdkakF1TVRJZ1ZFOUVUeWhwYzJGaFkzTXBPaUJVYUdseklHbHpJRzV2ZENCeGRXbDBaU0JvYjNjZ1EyaHliMjFsSUdSdlpYTWdkR2hwYm1kekxseHVJQ0FnSUM4dklGSmxkbWxsZHlCdmRYSWdkR1Z6ZENCallYTmxJR0ZuWVdsdWMzUWdZbkp2ZDNObGNuTWdiVzl5WlNCamIyMXdjbVZvWlc1emFYWmxiSGt1WEc1Y2JpQWdJQ0F2THlCbWFXNWtJSFJvWlNCbWFYSnpkQ0JwYm5OMFlXNWpaU0J2WmlCaGJua2dhRzl6ZEVWdVpHbHVaME5vWVhKelhHNGdJQ0FnZG1GeUlHaHZjM1JGYm1RZ1BTQXRNVHRjYmlBZ0lDQm1iM0lnS0haaGNpQnBJRDBnTURzZ2FTQThJR2h2YzNSRmJtUnBibWREYUdGeWN5NXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJQ0FnZG1GeUlHaGxZeUE5SUhKbGMzUXVhVzVrWlhoUFppaG9iM04wUlc1a2FXNW5RMmhoY25OYmFWMHBPMXh1SUNBZ0lDQWdhV1lnS0dobFl5QWhQVDBnTFRFZ0ppWWdLR2h2YzNSRmJtUWdQVDA5SUMweElIeDhJR2hsWXlBOElHaHZjM1JGYm1RcEtWeHVJQ0FnSUNBZ0lDQm9iM04wUlc1a0lEMGdhR1ZqTzF4dUlDQWdJSDFjYmx4dUlDQWdJQzh2SUdGMElIUm9hWE1nY0c5cGJuUXNJR1ZwZEdobGNpQjNaU0JvWVhabElHRnVJR1Y0Y0d4cFkybDBJSEJ2YVc1MElIZG9aWEpsSUhSb1pWeHVJQ0FnSUM4dklHRjFkR2dnY0c5eWRHbHZiaUJqWVc1dWIzUWdaMjhnY0dGemRDd2diM0lnZEdobElHeGhjM1FnUUNCamFHRnlJR2x6SUhSb1pTQmtaV05wWkdWeUxseHVJQ0FnSUhaaGNpQmhkWFJvTENCaGRGTnBaMjQ3WEc0Z0lDQWdhV1lnS0dodmMzUkZibVFnUFQwOUlDMHhLU0I3WEc0Z0lDQWdJQ0F2THlCaGRGTnBaMjRnWTJGdUlHSmxJR0Z1ZVhkb1pYSmxMbHh1SUNBZ0lDQWdZWFJUYVdkdUlEMGdjbVZ6ZEM1c1lYTjBTVzVrWlhoUFppZ25RQ2NwTzF4dUlDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQXZMeUJoZEZOcFoyNGdiWFZ6ZENCaVpTQnBiaUJoZFhSb0lIQnZjblJwYjI0dVhHNGdJQ0FnSUNBdkx5Qm9kSFJ3T2k4dllVQmlMMk5BWkNBOVBpQm9iM04wT21JZ1lYVjBhRHBoSUhCaGRHZzZMMk5BWkZ4dUlDQWdJQ0FnWVhSVGFXZHVJRDBnY21WemRDNXNZWE4wU1c1a1pYaFBaaWduUUNjc0lHaHZjM1JGYm1RcE8xeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklFNXZkeUIzWlNCb1lYWmxJR0VnY0c5eWRHbHZiaUIzYUdsamFDQnBjeUJrWldacGJtbDBaV3g1SUhSb1pTQmhkWFJvTGx4dUlDQWdJQzh2SUZCMWJHd2dkR2hoZENCdlptWXVYRzRnSUNBZ2FXWWdLR0YwVTJsbmJpQWhQVDBnTFRFcElIdGNiaUFnSUNBZ0lHRjFkR2dnUFNCeVpYTjBMbk5zYVdObEtEQXNJR0YwVTJsbmJpazdYRzRnSUNBZ0lDQnlaWE4wSUQwZ2NtVnpkQzV6YkdsalpTaGhkRk5wWjI0Z0t5QXhLVHRjYmlBZ0lDQWdJSFJvYVhNdVlYVjBhQ0E5SUdSbFkyOWtaVlZTU1VOdmJYQnZibVZ1ZENoaGRYUm9LVHRjYmlBZ0lDQjlYRzVjYmlBZ0lDQXZMeUIwYUdVZ2FHOXpkQ0JwY3lCMGFHVWdjbVZ0WVdsdWFXNW5JSFJ2SUhSb1pTQnNaV1owSUc5bUlIUm9aU0JtYVhKemRDQnViMjR0YUc5emRDQmphR0Z5WEc0Z0lDQWdhRzl6ZEVWdVpDQTlJQzB4TzF4dUlDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd095QnBJRHdnYm05dVNHOXpkRU5vWVhKekxteGxibWQwYURzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0IyWVhJZ2FHVmpJRDBnY21WemRDNXBibVJsZUU5bUtHNXZia2h2YzNSRGFHRnljMXRwWFNrN1hHNGdJQ0FnSUNCcFppQW9hR1ZqSUNFOVBTQXRNU0FtSmlBb2FHOXpkRVZ1WkNBOVBUMGdMVEVnZkh3Z2FHVmpJRHdnYUc5emRFVnVaQ2twWEc0Z0lDQWdJQ0FnSUdodmMzUkZibVFnUFNCb1pXTTdYRzRnSUNBZ2ZWeHVJQ0FnSUM4dklHbG1JSGRsSUhOMGFXeHNJR2hoZG1VZ2JtOTBJR2hwZENCcGRDd2dkR2hsYmlCMGFHVWdaVzUwYVhKbElIUm9hVzVuSUdseklHRWdhRzl6ZEM1Y2JpQWdJQ0JwWmlBb2FHOXpkRVZ1WkNBOVBUMGdMVEVwWEc0Z0lDQWdJQ0JvYjNOMFJXNWtJRDBnY21WemRDNXNaVzVuZEdnN1hHNWNiaUFnSUNCMGFHbHpMbWh2YzNRZ1BTQnlaWE4wTG5Oc2FXTmxLREFzSUdodmMzUkZibVFwTzF4dUlDQWdJSEpsYzNRZ1BTQnlaWE4wTG5Oc2FXTmxLR2h2YzNSRmJtUXBPMXh1WEc0Z0lDQWdMeThnY0hWc2JDQnZkWFFnY0c5eWRDNWNiaUFnSUNCMGFHbHpMbkJoY25ObFNHOXpkQ2dwTzF4dVhHNGdJQ0FnTHk4Z2QyVW5kbVVnYVc1a2FXTmhkR1ZrSUhSb1lYUWdkR2hsY21VZ2FYTWdZU0JvYjNOMGJtRnRaU3hjYmlBZ0lDQXZMeUJ6YnlCbGRtVnVJR2xtSUdsMEozTWdaVzF3ZEhrc0lHbDBJR2hoY3lCMGJ5QmlaU0J3Y21WelpXNTBMbHh1SUNBZ0lIUm9hWE11YUc5emRHNWhiV1VnUFNCMGFHbHpMbWh2YzNSdVlXMWxJSHg4SUNjbk8xeHVYRzRnSUNBZ0x5OGdhV1lnYUc5emRHNWhiV1VnWW1WbmFXNXpJSGRwZEdnZ1d5QmhibVFnWlc1a2N5QjNhWFJvSUYxY2JpQWdJQ0F2THlCaGMzTjFiV1VnZEdoaGRDQnBkQ2R6SUdGdUlFbFFkallnWVdSa2NtVnpjeTVjYmlBZ0lDQjJZWElnYVhCMk5raHZjM1J1WVcxbElEMGdkR2hwY3k1b2IzTjBibUZ0WlZzd1hTQTlQVDBnSjFzbklDWW1YRzRnSUNBZ0lDQWdJSFJvYVhNdWFHOXpkRzVoYldWYmRHaHBjeTVvYjNOMGJtRnRaUzVzWlc1bmRHZ2dMU0F4WFNBOVBUMGdKMTBuTzF4dVhHNGdJQ0FnTHk4Z2RtRnNhV1JoZEdVZ1lTQnNhWFIwYkdVdVhHNGdJQ0FnYVdZZ0tDRnBjSFkyU0c5emRHNWhiV1VwSUh0Y2JpQWdJQ0FnSUhaaGNpQm9iM04wY0dGeWRITWdQU0IwYUdsekxtaHZjM1J1WVcxbExuTndiR2wwS0M5Y1hDNHZLVHRjYmlBZ0lDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd0xDQnNJRDBnYUc5emRIQmhjblJ6TG14bGJtZDBhRHNnYVNBOElHdzdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnY0dGeWRDQTlJR2h2YzNSd1lYSjBjMXRwWFR0Y2JpQWdJQ0FnSUNBZ2FXWWdLQ0Z3WVhKMEtTQmpiMjUwYVc1MVpUdGNiaUFnSUNBZ0lDQWdhV1lnS0NGd1lYSjBMbTFoZEdOb0tHaHZjM1J1WVcxbFVHRnlkRkJoZEhSbGNtNHBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2RtRnlJRzVsZDNCaGNuUWdQU0FuSnp0Y2JpQWdJQ0FnSUNBZ0lDQm1iM0lnS0haaGNpQnFJRDBnTUN3Z2F5QTlJSEJoY25RdWJHVnVaM1JvT3lCcUlEd2dhenNnYWlzcktTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9jR0Z5ZEM1amFHRnlRMjlrWlVGMEtHb3BJRDRnTVRJM0tTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJSGRsSUhKbGNHeGhZMlVnYm05dUxVRlRRMGxKSUdOb1lYSWdkMmwwYUNCaElIUmxiWEJ2Y21GeWVTQndiR0ZqWldodmJHUmxjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUIzWlNCdVpXVmtJSFJvYVhNZ2RHOGdiV0ZyWlNCemRYSmxJSE5wZW1VZ2IyWWdhRzl6ZEc1aGJXVWdhWE1nYm05MFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHSnliMnRsYmlCaWVTQnlaWEJzWVdOcGJtY2dibTl1TFVGVFEwbEpJR0o1SUc1dmRHaHBibWRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdibVYzY0dGeWRDQXJQU0FuZUNjN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnVaWGR3WVhKMElDczlJSEJoY25SYmFsMDdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUM4dklIZGxJSFJsYzNRZ1lXZGhhVzRnZDJsMGFDQkJVME5KU1NCamFHRnlJRzl1YkhsY2JpQWdJQ0FnSUNBZ0lDQnBaaUFvSVc1bGQzQmhjblF1YldGMFkyZ29hRzl6ZEc1aGJXVlFZWEowVUdGMGRHVnliaWtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCMllXeHBaRkJoY25SeklEMGdhRzl6ZEhCaGNuUnpMbk5zYVdObEtEQXNJR2twTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUc1dmRFaHZjM1FnUFNCb2IzTjBjR0Z5ZEhNdWMyeHBZMlVvYVNBcklERXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0pwZENBOUlIQmhjblF1YldGMFkyZ29hRzl6ZEc1aGJXVlFZWEowVTNSaGNuUXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR0pwZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeHBaRkJoY25SekxuQjFjMmdvWW1sMFd6RmRLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdibTkwU0c5emRDNTFibk5vYVdaMEtHSnBkRnN5WFNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYm05MFNHOXpkQzVzWlc1bmRHZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZENBOUlDY3ZKeUFySUc1dmRFaHZjM1F1YW05cGJpZ25MaWNwSUNzZ2NtVnpkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUhSb2FYTXVhRzl6ZEc1aGJXVWdQU0IyWVd4cFpGQmhjblJ6TG1wdmFXNG9KeTRuS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0p5WldGck8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmx4dUlDQWdJR2xtSUNoMGFHbHpMbWh2YzNSdVlXMWxMbXhsYm1kMGFDQStJR2h2YzNSdVlXMWxUV0Y0VEdWdUtTQjdYRzRnSUNBZ0lDQjBhR2x6TG1odmMzUnVZVzFsSUQwZ0p5YzdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUM4dklHaHZjM1J1WVcxbGN5QmhjbVVnWVd4M1lYbHpJR3h2ZDJWeUlHTmhjMlV1WEc0Z0lDQWdJQ0IwYUdsekxtaHZjM1J1WVcxbElEMGdkR2hwY3k1b2IzTjBibUZ0WlM1MGIweHZkMlZ5UTJGelpTZ3BPMXh1SUNBZ0lIMWNibHh1SUNBZ0lHbG1JQ2doYVhCMk5raHZjM1J1WVcxbEtTQjdYRzRnSUNBZ0lDQXZMeUJKUkU1QklGTjFjSEJ2Y25RNklGSmxkSFZ5Ym5NZ1lTQndkVzU1WTI5a1pXUWdjbVZ3Y21WelpXNTBZWFJwYjI0Z2IyWWdYQ0prYjIxaGFXNWNJaTVjYmlBZ0lDQWdJQzh2SUVsMElHOXViSGtnWTI5dWRtVnlkSE1nY0dGeWRITWdiMllnZEdobElHUnZiV0ZwYmlCdVlXMWxJSFJvWVhSY2JpQWdJQ0FnSUM4dklHaGhkbVVnYm05dUxVRlRRMGxKSUdOb1lYSmhZM1JsY25Nc0lHa3VaUzRnYVhRZ1pHOWxjMjRuZENCdFlYUjBaWElnYVdaY2JpQWdJQ0FnSUM4dklIbHZkU0JqWVd4c0lHbDBJSGRwZEdnZ1lTQmtiMjFoYVc0Z2RHaGhkQ0JoYkhKbFlXUjVJR2x6SUVGVFEwbEpMVzl1YkhrdVhHNGdJQ0FnSUNCMGFHbHpMbWh2YzNSdVlXMWxJRDBnY0hWdWVXTnZaR1V1ZEc5QlUwTkpTU2gwYUdsekxtaHZjM1J1WVcxbEtUdGNiaUFnSUNCOVhHNWNiaUFnSUNCMllYSWdjQ0E5SUhSb2FYTXVjRzl5ZENBL0lDYzZKeUFySUhSb2FYTXVjRzl5ZENBNklDY25PMXh1SUNBZ0lIWmhjaUJvSUQwZ2RHaHBjeTVvYjNOMGJtRnRaU0I4ZkNBbkp6dGNiaUFnSUNCMGFHbHpMbWh2YzNRZ1BTQm9JQ3NnY0R0Y2JpQWdJQ0IwYUdsekxtaHlaV1lnS3owZ2RHaHBjeTVvYjNOME8xeHVYRzRnSUNBZ0x5OGdjM1J5YVhBZ1d5QmhibVFnWFNCbWNtOXRJSFJvWlNCb2IzTjBibUZ0WlZ4dUlDQWdJQzh2SUhSb1pTQm9iM04wSUdacFpXeGtJSE4wYVd4c0lISmxkR0ZwYm5NZ2RHaGxiU3dnZEdodmRXZG9YRzRnSUNBZ2FXWWdLR2x3ZGpaSWIzTjBibUZ0WlNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVvYjNOMGJtRnRaU0E5SUhSb2FYTXVhRzl6ZEc1aGJXVXVjM1ZpYzNSeUtERXNJSFJvYVhNdWFHOXpkRzVoYldVdWJHVnVaM1JvSUMwZ01pazdYRzRnSUNBZ0lDQnBaaUFvY21WemRGc3dYU0FoUFQwZ0p5OG5LU0I3WEc0Z0lDQWdJQ0FnSUhKbGMzUWdQU0FuTHljZ0t5QnlaWE4wTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJSDFjYmlBZ2ZWeHVYRzRnSUM4dklHNXZkeUJ5WlhOMElHbHpJSE5sZENCMGJ5QjBhR1VnY0c5emRDMW9iM04wSUhOMGRXWm1MbHh1SUNBdkx5QmphRzl3SUc5bVppQmhibmtnWkdWc2FXMGdZMmhoY25NdVhHNGdJR2xtSUNnaGRXNXpZV1psVUhKdmRHOWpiMnhiYkc5M1pYSlFjbTkwYjEwcElIdGNibHh1SUNBZ0lDOHZJRVpwY25OMExDQnRZV3RsSURFd01DVWdjM1Z5WlNCMGFHRjBJR0Z1ZVNCY0ltRjFkRzlGYzJOaGNHVmNJaUJqYUdGeWN5Qm5aWFJjYmlBZ0lDQXZMeUJsYzJOaGNHVmtMQ0JsZG1WdUlHbG1JR1Z1WTI5a1pWVlNTVU52YlhCdmJtVnVkQ0JrYjJWemJpZDBJSFJvYVc1cklIUm9aWGxjYmlBZ0lDQXZMeUJ1WldWa0lIUnZJR0psTGx4dUlDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd0xDQnNJRDBnWVhWMGIwVnpZMkZ3WlM1c1pXNW5kR2c3SUdrZ1BDQnNPeUJwS3lzcElIdGNiaUFnSUNBZ0lIWmhjaUJoWlNBOUlHRjFkRzlGYzJOaGNHVmJhVjA3WEc0Z0lDQWdJQ0JwWmlBb2NtVnpkQzVwYm1SbGVFOW1LR0ZsS1NBOVBUMGdMVEVwWEc0Z0lDQWdJQ0FnSUdOdmJuUnBiblZsTzF4dUlDQWdJQ0FnZG1GeUlHVnpZeUE5SUdWdVkyOWtaVlZTU1VOdmJYQnZibVZ1ZENoaFpTazdYRzRnSUNBZ0lDQnBaaUFvWlhOaklEMDlQU0JoWlNrZ2UxeHVJQ0FnSUNBZ0lDQmxjMk1nUFNCbGMyTmhjR1VvWVdVcE8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2NtVnpkQ0E5SUhKbGMzUXVjM0JzYVhRb1lXVXBMbXB2YVc0b1pYTmpLVHRjYmlBZ0lDQjlYRzRnSUgxY2JseHVYRzRnSUM4dklHTm9iM0FnYjJabUlHWnliMjBnZEdobElIUmhhV3dnWm1seWMzUXVYRzRnSUhaaGNpQm9ZWE5vSUQwZ2NtVnpkQzVwYm1SbGVFOW1LQ2NqSnlrN1hHNGdJR2xtSUNob1lYTm9JQ0U5UFNBdE1Ta2dlMXh1SUNBZ0lDOHZJR2R2ZENCaElHWnlZV2R0Wlc1MElITjBjbWx1Wnk1Y2JpQWdJQ0IwYUdsekxtaGhjMmdnUFNCeVpYTjBMbk4xWW5OMGNpaG9ZWE5vS1R0Y2JpQWdJQ0J5WlhOMElEMGdjbVZ6ZEM1emJHbGpaU2d3TENCb1lYTm9LVHRjYmlBZ2ZWeHVJQ0IyWVhJZ2NXMGdQU0J5WlhOMExtbHVaR1Y0VDJZb0p6OG5LVHRjYmlBZ2FXWWdLSEZ0SUNFOVBTQXRNU2tnZTF4dUlDQWdJSFJvYVhNdWMyVmhjbU5vSUQwZ2NtVnpkQzV6ZFdKemRISW9jVzBwTzF4dUlDQWdJSFJvYVhNdWNYVmxjbmtnUFNCeVpYTjBMbk4xWW5OMGNpaHhiU0FySURFcE8xeHVJQ0FnSUdsbUlDaHdZWEp6WlZGMVpYSjVVM1J5YVc1bktTQjdYRzRnSUNBZ0lDQjBhR2x6TG5GMVpYSjVJRDBnY1hWbGNubHpkSEpwYm1jdWNHRnljMlVvZEdocGN5NXhkV1Z5ZVNrN1hHNGdJQ0FnZlZ4dUlDQWdJSEpsYzNRZ1BTQnlaWE4wTG5Oc2FXTmxLREFzSUhGdEtUdGNiaUFnZlNCbGJITmxJR2xtSUNod1lYSnpaVkYxWlhKNVUzUnlhVzVuS1NCN1hHNGdJQ0FnTHk4Z2JtOGdjWFZsY25rZ2MzUnlhVzVuTENCaWRYUWdjR0Z5YzJWUmRXVnllVk4wY21sdVp5QnpkR2xzYkNCeVpYRjFaWE4wWldSY2JpQWdJQ0IwYUdsekxuTmxZWEpqYUNBOUlDY25PMXh1SUNBZ0lIUm9hWE11Y1hWbGNua2dQU0I3ZlR0Y2JpQWdmVnh1SUNCcFppQW9jbVZ6ZENrZ2RHaHBjeTV3WVhSb2JtRnRaU0E5SUhKbGMzUTdYRzRnSUdsbUlDaHpiR0Z6YUdWa1VISnZkRzlqYjJ4YmJHOTNaWEpRY205MGIxMGdKaVpjYmlBZ0lDQWdJSFJvYVhNdWFHOXpkRzVoYldVZ0ppWWdJWFJvYVhNdWNHRjBhRzVoYldVcElIdGNiaUFnSUNCMGFHbHpMbkJoZEdodVlXMWxJRDBnSnk4bk8xeHVJQ0I5WEc1Y2JpQWdMeTkwYnlCemRYQndiM0owSUdoMGRIQXVjbVZ4ZFdWemRGeHVJQ0JwWmlBb2RHaHBjeTV3WVhSb2JtRnRaU0I4ZkNCMGFHbHpMbk5sWVhKamFDa2dlMXh1SUNBZ0lIWmhjaUJ3SUQwZ2RHaHBjeTV3WVhSb2JtRnRaU0I4ZkNBbkp6dGNiaUFnSUNCMllYSWdjeUE5SUhSb2FYTXVjMlZoY21Ob0lIeDhJQ2NuTzF4dUlDQWdJSFJvYVhNdWNHRjBhQ0E5SUhBZ0t5QnpPMXh1SUNCOVhHNWNiaUFnTHk4Z1ptbHVZV3hzZVN3Z2NtVmpiMjV6ZEhKMVkzUWdkR2hsSUdoeVpXWWdZbUZ6WldRZ2IyNGdkMmhoZENCb1lYTWdZbVZsYmlCMllXeHBaR0YwWldRdVhHNGdJSFJvYVhNdWFISmxaaUE5SUhSb2FYTXVabTl5YldGMEtDazdYRzRnSUhKbGRIVnliaUIwYUdsek8xeHVmVHRjYmx4dUx5OGdabTl5YldGMElHRWdjR0Z5YzJWa0lHOWlhbVZqZENCcGJuUnZJR0VnZFhKc0lITjBjbWx1WjF4dVpuVnVZM1JwYjI0Z2RYSnNSbTl5YldGMEtHOWlhaWtnZTF4dUlDQXZMeUJsYm5OMWNtVWdhWFFuY3lCaGJpQnZZbXBsWTNRc0lHRnVaQ0J1YjNRZ1lTQnpkSEpwYm1jZ2RYSnNMbHh1SUNBdkx5QkpaaUJwZENkeklHRnVJRzlpYWl3Z2RHaHBjeUJwY3lCaElHNXZMVzl3TGx4dUlDQXZMeUIwYUdseklIZGhlU3dnZVc5MUlHTmhiaUJqWVd4c0lIVnliRjltYjNKdFlYUW9LU0J2YmlCemRISnBibWR6WEc0Z0lDOHZJSFJ2SUdOc1pXRnVJSFZ3SUhCdmRHVnVkR2xoYkd4NUlIZHZibXQ1SUhWeWJITXVYRzRnSUdsbUlDaDFkR2xzTG1selUzUnlhVzVuS0c5aWFpa3BJRzlpYWlBOUlIVnliRkJoY25ObEtHOWlhaWs3WEc0Z0lHbG1JQ2doS0c5aWFpQnBibk4wWVc1alpXOW1JRlZ5YkNrcElISmxkSFZ5YmlCVmNtd3VjSEp2ZEc5MGVYQmxMbVp2Y20xaGRDNWpZV3hzS0c5aWFpazdYRzRnSUhKbGRIVnliaUJ2WW1vdVptOXliV0YwS0NrN1hHNTlYRzVjYmxWeWJDNXdjbTkwYjNSNWNHVXVabTl5YldGMElEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lIWmhjaUJoZFhSb0lEMGdkR2hwY3k1aGRYUm9JSHg4SUNjbk8xeHVJQ0JwWmlBb1lYVjBhQ2tnZTF4dUlDQWdJR0YxZEdnZ1BTQmxibU52WkdWVlVrbERiMjF3YjI1bGJuUW9ZWFYwYUNrN1hHNGdJQ0FnWVhWMGFDQTlJR0YxZEdndWNtVndiR0ZqWlNndkpUTkJMMmtzSUNjNkp5azdYRzRnSUNBZ1lYVjBhQ0FyUFNBblFDYzdYRzRnSUgxY2JseHVJQ0IyWVhJZ2NISnZkRzlqYjJ3Z1BTQjBhR2x6TG5CeWIzUnZZMjlzSUh4OElDY25MRnh1SUNBZ0lDQWdjR0YwYUc1aGJXVWdQU0IwYUdsekxuQmhkR2h1WVcxbElIeDhJQ2NuTEZ4dUlDQWdJQ0FnYUdGemFDQTlJSFJvYVhNdWFHRnphQ0I4ZkNBbkp5eGNiaUFnSUNBZ0lHaHZjM1FnUFNCbVlXeHpaU3hjYmlBZ0lDQWdJSEYxWlhKNUlEMGdKeWM3WEc1Y2JpQWdhV1lnS0hSb2FYTXVhRzl6ZENrZ2UxeHVJQ0FnSUdodmMzUWdQU0JoZFhSb0lDc2dkR2hwY3k1b2IzTjBPMXh1SUNCOUlHVnNjMlVnYVdZZ0tIUm9hWE11YUc5emRHNWhiV1VwSUh0Y2JpQWdJQ0JvYjNOMElEMGdZWFYwYUNBcklDaDBhR2x6TG1odmMzUnVZVzFsTG1sdVpHVjRUMllvSnpvbktTQTlQVDBnTFRFZ1AxeHVJQ0FnSUNBZ0lDQjBhR2x6TG1odmMzUnVZVzFsSURwY2JpQWdJQ0FnSUNBZ0oxc25JQ3NnZEdocGN5NW9iM04wYm1GdFpTQXJJQ2RkSnlrN1hHNGdJQ0FnYVdZZ0tIUm9hWE11Y0c5eWRDa2dlMXh1SUNBZ0lDQWdhRzl6ZENBclBTQW5PaWNnS3lCMGFHbHpMbkJ2Y25RN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2FXWWdLSFJvYVhNdWNYVmxjbmtnSmlaY2JpQWdJQ0FnSUhWMGFXd3VhWE5QWW1wbFkzUW9kR2hwY3k1eGRXVnllU2tnSmlaY2JpQWdJQ0FnSUU5aWFtVmpkQzVyWlhsektIUm9hWE11Y1hWbGNua3BMbXhsYm1kMGFDa2dlMXh1SUNBZ0lIRjFaWEo1SUQwZ2NYVmxjbmx6ZEhKcGJtY3VjM1J5YVc1bmFXWjVLSFJvYVhNdWNYVmxjbmtwTzF4dUlDQjlYRzVjYmlBZ2RtRnlJSE5sWVhKamFDQTlJSFJvYVhNdWMyVmhjbU5vSUh4OElDaHhkV1Z5ZVNBbUppQW9KejhuSUNzZ2NYVmxjbmtwS1NCOGZDQW5KenRjYmx4dUlDQnBaaUFvY0hKdmRHOWpiMndnSmlZZ2NISnZkRzlqYjJ3dWMzVmljM1J5S0MweEtTQWhQVDBnSnpvbktTQndjbTkwYjJOdmJDQXJQU0FuT2ljN1hHNWNiaUFnTHk4Z2IyNXNlU0IwYUdVZ2MyeGhjMmhsWkZCeWIzUnZZMjlzY3lCblpYUWdkR2hsSUM4dkxpQWdUbTkwSUcxaGFXeDBiem9zSUhodGNIQTZMQ0JsZEdNdVhHNGdJQzh2SUhWdWJHVnpjeUIwYUdWNUlHaGhaQ0IwYUdWdElIUnZJR0psWjJsdUlIZHBkR2d1WEc0Z0lHbG1JQ2gwYUdsekxuTnNZWE5vWlhNZ2ZIeGNiaUFnSUNBZ0lDZ2hjSEp2ZEc5amIyd2dmSHdnYzJ4aGMyaGxaRkJ5YjNSdlkyOXNXM0J5YjNSdlkyOXNYU2tnSmlZZ2FHOXpkQ0FoUFQwZ1ptRnNjMlVwSUh0Y2JpQWdJQ0JvYjNOMElEMGdKeTh2SnlBcklDaG9iM04wSUh4OElDY25LVHRjYmlBZ0lDQnBaaUFvY0dGMGFHNWhiV1VnSmlZZ2NHRjBhRzVoYldVdVkyaGhja0YwS0RBcElDRTlQU0FuTHljcElIQmhkR2h1WVcxbElEMGdKeThuSUNzZ2NHRjBhRzVoYldVN1hHNGdJSDBnWld4elpTQnBaaUFvSVdodmMzUXBJSHRjYmlBZ0lDQm9iM04wSUQwZ0p5YzdYRzRnSUgxY2JseHVJQ0JwWmlBb2FHRnphQ0FtSmlCb1lYTm9MbU5vWVhKQmRDZ3dLU0FoUFQwZ0p5TW5LU0JvWVhOb0lEMGdKeU1uSUNzZ2FHRnphRHRjYmlBZ2FXWWdLSE5sWVhKamFDQW1KaUJ6WldGeVkyZ3VZMmhoY2tGMEtEQXBJQ0U5UFNBblB5Y3BJSE5sWVhKamFDQTlJQ2MvSnlBcklITmxZWEpqYUR0Y2JseHVJQ0J3WVhSb2JtRnRaU0E5SUhCaGRHaHVZVzFsTG5KbGNHeGhZMlVvTDFzL0kxMHZaeXdnWm5WdVkzUnBiMjRvYldGMFkyZ3BJSHRjYmlBZ0lDQnlaWFIxY200Z1pXNWpiMlJsVlZKSlEyOXRjRzl1Wlc1MEtHMWhkR05vS1R0Y2JpQWdmU2s3WEc0Z0lITmxZWEpqYUNBOUlITmxZWEpqYUM1eVpYQnNZV05sS0Njakp5d2dKeVV5TXljcE8xeHVYRzRnSUhKbGRIVnliaUJ3Y205MGIyTnZiQ0FySUdodmMzUWdLeUJ3WVhSb2JtRnRaU0FySUhObFlYSmphQ0FySUdoaGMyZzdYRzU5TzF4dVhHNW1kVzVqZEdsdmJpQjFjbXhTWlhOdmJIWmxLSE52ZFhKalpTd2djbVZzWVhScGRtVXBJSHRjYmlBZ2NtVjBkWEp1SUhWeWJGQmhjbk5sS0hOdmRYSmpaU3dnWm1Gc2MyVXNJSFJ5ZFdVcExuSmxjMjlzZG1Vb2NtVnNZWFJwZG1VcE8xeHVmVnh1WEc1VmNtd3VjSEp2ZEc5MGVYQmxMbkpsYzI5c2RtVWdQU0JtZFc1amRHbHZiaWh5Wld4aGRHbDJaU2tnZTF4dUlDQnlaWFIxY200Z2RHaHBjeTV5WlhOdmJIWmxUMkpxWldOMEtIVnliRkJoY25ObEtISmxiR0YwYVhabExDQm1ZV3h6WlN3Z2RISjFaU2twTG1admNtMWhkQ2dwTzF4dWZUdGNibHh1Wm5WdVkzUnBiMjRnZFhKc1VtVnpiMngyWlU5aWFtVmpkQ2h6YjNWeVkyVXNJSEpsYkdGMGFYWmxLU0I3WEc0Z0lHbG1JQ2doYzI5MWNtTmxLU0J5WlhSMWNtNGdjbVZzWVhScGRtVTdYRzRnSUhKbGRIVnliaUIxY214UVlYSnpaU2h6YjNWeVkyVXNJR1poYkhObExDQjBjblZsS1M1eVpYTnZiSFpsVDJKcVpXTjBLSEpsYkdGMGFYWmxLVHRjYm4xY2JseHVWWEpzTG5CeWIzUnZkSGx3WlM1eVpYTnZiSFpsVDJKcVpXTjBJRDBnWm5WdVkzUnBiMjRvY21Wc1lYUnBkbVVwSUh0Y2JpQWdhV1lnS0hWMGFXd3VhWE5UZEhKcGJtY29jbVZzWVhScGRtVXBLU0I3WEc0Z0lDQWdkbUZ5SUhKbGJDQTlJRzVsZHlCVmNtd29LVHRjYmlBZ0lDQnlaV3d1Y0dGeWMyVW9jbVZzWVhScGRtVXNJR1poYkhObExDQjBjblZsS1R0Y2JpQWdJQ0J5Wld4aGRHbDJaU0E5SUhKbGJEdGNiaUFnZlZ4dVhHNGdJSFpoY2lCeVpYTjFiSFFnUFNCdVpYY2dWWEpzS0NrN1hHNGdJSFpoY2lCMGEyVjVjeUE5SUU5aWFtVmpkQzVyWlhsektIUm9hWE1wTzF4dUlDQm1iM0lnS0haaGNpQjBheUE5SURBN0lIUnJJRHdnZEd0bGVYTXViR1Z1WjNSb095QjBheXNyS1NCN1hHNGdJQ0FnZG1GeUlIUnJaWGtnUFNCMGEyVjVjMXQwYTEwN1hHNGdJQ0FnY21WemRXeDBXM1JyWlhsZElEMGdkR2hwYzF0MGEyVjVYVHRjYmlBZ2ZWeHVYRzRnSUM4dklHaGhjMmdnYVhNZ1lXeDNZWGx6SUc5MlpYSnlhV1JrWlc0c0lHNXZJRzFoZEhSbGNpQjNhR0YwTGx4dUlDQXZMeUJsZG1WdUlHaHlaV1k5WENKY0lpQjNhV3hzSUhKbGJXOTJaU0JwZEM1Y2JpQWdjbVZ6ZFd4MExtaGhjMmdnUFNCeVpXeGhkR2wyWlM1b1lYTm9PMXh1WEc0Z0lDOHZJR2xtSUhSb1pTQnlaV3hoZEdsMlpTQjFjbXdnYVhNZ1pXMXdkSGtzSUhSb1pXNGdkR2hsY21VbmN5QnViM1JvYVc1bklHeGxablFnZEc4Z1pHOGdhR1Z5WlM1Y2JpQWdhV1lnS0hKbGJHRjBhWFpsTG1oeVpXWWdQVDA5SUNjbktTQjdYRzRnSUNBZ2NtVnpkV3gwTG1oeVpXWWdQU0J5WlhOMWJIUXVabTl5YldGMEtDazdYRzRnSUNBZ2NtVjBkWEp1SUhKbGMzVnNkRHRjYmlBZ2ZWeHVYRzRnSUM4dklHaHlaV1p6SUd4cGEyVWdMeTltYjI4dlltRnlJR0ZzZDJGNWN5QmpkWFFnZEc4Z2RHaGxJSEJ5YjNSdlkyOXNMbHh1SUNCcFppQW9jbVZzWVhScGRtVXVjMnhoYzJobGN5QW1KaUFoY21Wc1lYUnBkbVV1Y0hKdmRHOWpiMndwSUh0Y2JpQWdJQ0F2THlCMFlXdGxJR1YyWlhKNWRHaHBibWNnWlhoalpYQjBJSFJvWlNCd2NtOTBiMk52YkNCbWNtOXRJSEpsYkdGMGFYWmxYRzRnSUNBZ2RtRnlJSEpyWlhseklEMGdUMkpxWldOMExtdGxlWE1vY21Wc1lYUnBkbVVwTzF4dUlDQWdJR1p2Y2lBb2RtRnlJSEpySUQwZ01Ec2djbXNnUENCeWEyVjVjeTVzWlc1bmRHZzdJSEpyS3lzcElIdGNiaUFnSUNBZ0lIWmhjaUJ5YTJWNUlEMGdjbXRsZVhOYmNtdGRPMXh1SUNBZ0lDQWdhV1lnS0hKclpYa2dJVDA5SUNkd2NtOTBiMk52YkNjcFhHNGdJQ0FnSUNBZ0lISmxjM1ZzZEZ0eWEyVjVYU0E5SUhKbGJHRjBhWFpsVzNKclpYbGRPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZkWEpzVUdGeWMyVWdZWEJ3Wlc1a2N5QjBjbUZwYkdsdVp5QXZJSFJ2SUhWeWJITWdiR2xyWlNCb2RIUndPaTh2ZDNkM0xtVjRZVzF3YkdVdVkyOXRYRzRnSUNBZ2FXWWdLSE5zWVhOb1pXUlFjbTkwYjJOdmJGdHlaWE4xYkhRdWNISnZkRzlqYjJ4ZElDWW1YRzRnSUNBZ0lDQWdJSEpsYzNWc2RDNW9iM04wYm1GdFpTQW1KaUFoY21WemRXeDBMbkJoZEdodVlXMWxLU0I3WEc0Z0lDQWdJQ0J5WlhOMWJIUXVjR0YwYUNBOUlISmxjM1ZzZEM1d1lYUm9ibUZ0WlNBOUlDY3ZKenRjYmlBZ0lDQjlYRzVjYmlBZ0lDQnlaWE4xYkhRdWFISmxaaUE5SUhKbGMzVnNkQzVtYjNKdFlYUW9LVHRjYmlBZ0lDQnlaWFIxY200Z2NtVnpkV3gwTzF4dUlDQjlYRzVjYmlBZ2FXWWdLSEpsYkdGMGFYWmxMbkJ5YjNSdlkyOXNJQ1ltSUhKbGJHRjBhWFpsTG5CeWIzUnZZMjlzSUNFOVBTQnlaWE4xYkhRdWNISnZkRzlqYjJ3cElIdGNiaUFnSUNBdkx5QnBaaUJwZENkeklHRWdhMjV2ZDI0Z2RYSnNJSEJ5YjNSdlkyOXNMQ0IwYUdWdUlHTm9ZVzVuYVc1blhHNGdJQ0FnTHk4Z2RHaGxJSEJ5YjNSdlkyOXNJR1J2WlhNZ2QyVnBjbVFnZEdocGJtZHpYRzRnSUNBZ0x5OGdabWx5YzNRc0lHbG1JR2wwSjNNZ2JtOTBJR1pwYkdVNkxDQjBhR1Z1SUhkbElFMVZVMVFnYUdGMlpTQmhJR2h2YzNRc1hHNGdJQ0FnTHk4Z1lXNWtJR2xtSUhSb1pYSmxJSGRoY3lCaElIQmhkR2hjYmlBZ0lDQXZMeUIwYnlCaVpXZHBiaUIzYVhSb0xDQjBhR1Z1SUhkbElFMVZVMVFnYUdGMlpTQmhJSEJoZEdndVhHNGdJQ0FnTHk4Z2FXWWdhWFFnYVhNZ1ptbHNaVG9zSUhSb1pXNGdkR2hsSUdodmMzUWdhWE1nWkhKdmNIQmxaQ3hjYmlBZ0lDQXZMeUJpWldOaGRYTmxJSFJvWVhRbmN5QnJibTkzYmlCMGJ5QmlaU0JvYjNOMGJHVnpjeTVjYmlBZ0lDQXZMeUJoYm5sMGFHbHVaeUJsYkhObElHbHpJR0Z6YzNWdFpXUWdkRzhnWW1VZ1lXSnpiMngxZEdVdVhHNGdJQ0FnYVdZZ0tDRnpiR0Z6YUdWa1VISnZkRzlqYjJ4YmNtVnNZWFJwZG1VdWNISnZkRzlqYjJ4ZEtTQjdYRzRnSUNBZ0lDQjJZWElnYTJWNWN5QTlJRTlpYW1WamRDNXJaWGx6S0hKbGJHRjBhWFpsS1R0Y2JpQWdJQ0FnSUdadmNpQW9kbUZ5SUhZZ1BTQXdPeUIySUR3Z2EyVjVjeTVzWlc1bmRHZzdJSFlyS3lrZ2UxeHVJQ0FnSUNBZ0lDQjJZWElnYXlBOUlHdGxlWE5iZGwwN1hHNGdJQ0FnSUNBZ0lISmxjM1ZzZEZ0clhTQTlJSEpsYkdGMGFYWmxXMnRkTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnY21WemRXeDBMbWh5WldZZ1BTQnlaWE4xYkhRdVptOXliV0YwS0NrN1hHNGdJQ0FnSUNCeVpYUjFjbTRnY21WemRXeDBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lISmxjM1ZzZEM1d2NtOTBiMk52YkNBOUlISmxiR0YwYVhabExuQnliM1J2WTI5c08xeHVJQ0FnSUdsbUlDZ2hjbVZzWVhScGRtVXVhRzl6ZENBbUppQWhhRzl6ZEd4bGMzTlFjbTkwYjJOdmJGdHlaV3hoZEdsMlpTNXdjbTkwYjJOdmJGMHBJSHRjYmlBZ0lDQWdJSFpoY2lCeVpXeFFZWFJvSUQwZ0tISmxiR0YwYVhabExuQmhkR2h1WVcxbElIeDhJQ2NuS1M1emNHeHBkQ2duTHljcE8xeHVJQ0FnSUNBZ2QyaHBiR1VnS0hKbGJGQmhkR2d1YkdWdVozUm9JQ1ltSUNFb2NtVnNZWFJwZG1VdWFHOXpkQ0E5SUhKbGJGQmhkR2d1YzJocFpuUW9LU2twTzF4dUlDQWdJQ0FnYVdZZ0tDRnlaV3hoZEdsMlpTNW9iM04wS1NCeVpXeGhkR2wyWlM1b2IzTjBJRDBnSnljN1hHNGdJQ0FnSUNCcFppQW9JWEpsYkdGMGFYWmxMbWh2YzNSdVlXMWxLU0J5Wld4aGRHbDJaUzVvYjNOMGJtRnRaU0E5SUNjbk8xeHVJQ0FnSUNBZ2FXWWdLSEpsYkZCaGRHaGJNRjBnSVQwOUlDY25LU0J5Wld4UVlYUm9MblZ1YzJocFpuUW9KeWNwTzF4dUlDQWdJQ0FnYVdZZ0tISmxiRkJoZEdndWJHVnVaM1JvSUR3Z01pa2djbVZzVUdGMGFDNTFibk5vYVdaMEtDY25LVHRjYmlBZ0lDQWdJSEpsYzNWc2RDNXdZWFJvYm1GdFpTQTlJSEpsYkZCaGRHZ3VhbTlwYmlnbkx5Y3BPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCeVpYTjFiSFF1Y0dGMGFHNWhiV1VnUFNCeVpXeGhkR2wyWlM1d1lYUm9ibUZ0WlR0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVZ6ZFd4MExuTmxZWEpqYUNBOUlISmxiR0YwYVhabExuTmxZWEpqYUR0Y2JpQWdJQ0J5WlhOMWJIUXVjWFZsY25rZ1BTQnlaV3hoZEdsMlpTNXhkV1Z5ZVR0Y2JpQWdJQ0J5WlhOMWJIUXVhRzl6ZENBOUlISmxiR0YwYVhabExtaHZjM1FnZkh3Z0p5YzdYRzRnSUNBZ2NtVnpkV3gwTG1GMWRHZ2dQU0J5Wld4aGRHbDJaUzVoZFhSb08xeHVJQ0FnSUhKbGMzVnNkQzVvYjNOMGJtRnRaU0E5SUhKbGJHRjBhWFpsTG1odmMzUnVZVzFsSUh4OElISmxiR0YwYVhabExtaHZjM1E3WEc0Z0lDQWdjbVZ6ZFd4MExuQnZjblFnUFNCeVpXeGhkR2wyWlM1d2IzSjBPMXh1SUNBZ0lDOHZJSFJ2SUhOMWNIQnZjblFnYUhSMGNDNXlaWEYxWlhOMFhHNGdJQ0FnYVdZZ0tISmxjM1ZzZEM1d1lYUm9ibUZ0WlNCOGZDQnlaWE4xYkhRdWMyVmhjbU5vS1NCN1hHNGdJQ0FnSUNCMllYSWdjQ0E5SUhKbGMzVnNkQzV3WVhSb2JtRnRaU0I4ZkNBbkp6dGNiaUFnSUNBZ0lIWmhjaUJ6SUQwZ2NtVnpkV3gwTG5ObFlYSmphQ0I4ZkNBbkp6dGNiaUFnSUNBZ0lISmxjM1ZzZEM1d1lYUm9JRDBnY0NBcklITTdYRzRnSUNBZ2ZWeHVJQ0FnSUhKbGMzVnNkQzV6YkdGemFHVnpJRDBnY21WemRXeDBMbk5zWVhOb1pYTWdmSHdnY21Wc1lYUnBkbVV1YzJ4aGMyaGxjenRjYmlBZ0lDQnlaWE4xYkhRdWFISmxaaUE5SUhKbGMzVnNkQzVtYjNKdFlYUW9LVHRjYmlBZ0lDQnlaWFIxY200Z2NtVnpkV3gwTzF4dUlDQjlYRzVjYmlBZ2RtRnlJR2x6VTI5MWNtTmxRV0p6SUQwZ0tISmxjM1ZzZEM1d1lYUm9ibUZ0WlNBbUppQnlaWE4xYkhRdWNHRjBhRzVoYldVdVkyaGhja0YwS0RBcElEMDlQU0FuTHljcExGeHVJQ0FnSUNBZ2FYTlNaV3hCWW5NZ1BTQW9YRzRnSUNBZ0lDQWdJQ0FnY21Wc1lYUnBkbVV1YUc5emRDQjhmRnh1SUNBZ0lDQWdJQ0FnSUhKbGJHRjBhWFpsTG5CaGRHaHVZVzFsSUNZbUlISmxiR0YwYVhabExuQmhkR2h1WVcxbExtTm9ZWEpCZENnd0tTQTlQVDBnSnk4blhHNGdJQ0FnSUNBcExGeHVJQ0FnSUNBZ2JYVnpkRVZ1WkVGaWN5QTlJQ2hwYzFKbGJFRmljeUI4ZkNCcGMxTnZkWEpqWlVGaWN5QjhmRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBb2NtVnpkV3gwTG1odmMzUWdKaVlnY21Wc1lYUnBkbVV1Y0dGMGFHNWhiV1VwS1N4Y2JpQWdJQ0FnSUhKbGJXOTJaVUZzYkVSdmRITWdQU0J0ZFhOMFJXNWtRV0p6TEZ4dUlDQWdJQ0FnYzNKalVHRjBhQ0E5SUhKbGMzVnNkQzV3WVhSb2JtRnRaU0FtSmlCeVpYTjFiSFF1Y0dGMGFHNWhiV1V1YzNCc2FYUW9KeThuS1NCOGZDQmJYU3hjYmlBZ0lDQWdJSEpsYkZCaGRHZ2dQU0J5Wld4aGRHbDJaUzV3WVhSb2JtRnRaU0FtSmlCeVpXeGhkR2wyWlM1d1lYUm9ibUZ0WlM1emNHeHBkQ2duTHljcElIeDhJRnRkTEZ4dUlDQWdJQ0FnY0hONVkyaHZkR2xqSUQwZ2NtVnpkV3gwTG5CeWIzUnZZMjlzSUNZbUlDRnpiR0Z6YUdWa1VISnZkRzlqYjJ4YmNtVnpkV3gwTG5CeWIzUnZZMjlzWFR0Y2JseHVJQ0F2THlCcFppQjBhR1VnZFhKc0lHbHpJR0VnYm05dUxYTnNZWE5vWldRZ2RYSnNMQ0IwYUdWdUlISmxiR0YwYVhabFhHNGdJQzh2SUd4cGJtdHpJR3hwYTJVZ0xpNHZMaTRnYzJodmRXeGtJR0psSUdGaWJHVmNiaUFnTHk4Z2RHOGdZM0poZDJ3Z2RYQWdkRzhnZEdobElHaHZjM1J1WVcxbExDQmhjeUIzWld4c0xpQWdWR2hwY3lCcGN5QnpkSEpoYm1kbExseHVJQ0F2THlCeVpYTjFiSFF1Y0hKdmRHOWpiMndnYUdGeklHRnNjbVZoWkhrZ1ltVmxiaUJ6WlhRZ1lua2dibTkzTGx4dUlDQXZMeUJNWVhSbGNpQnZiaXdnY0hWMElIUm9aU0JtYVhKemRDQndZWFJvSUhCaGNuUWdhVzUwYnlCMGFHVWdhRzl6ZENCbWFXVnNaQzVjYmlBZ2FXWWdLSEJ6ZVdOb2IzUnBZeWtnZTF4dUlDQWdJSEpsYzNWc2RDNW9iM04wYm1GdFpTQTlJQ2NuTzF4dUlDQWdJSEpsYzNWc2RDNXdiM0owSUQwZ2JuVnNiRHRjYmlBZ0lDQnBaaUFvY21WemRXeDBMbWh2YzNRcElIdGNiaUFnSUNBZ0lHbG1JQ2h6Y21OUVlYUm9XekJkSUQwOVBTQW5KeWtnYzNKalVHRjBhRnN3WFNBOUlISmxjM1ZzZEM1b2IzTjBPMXh1SUNBZ0lDQWdaV3h6WlNCemNtTlFZWFJvTG5WdWMyaHBablFvY21WemRXeDBMbWh2YzNRcE8xeHVJQ0FnSUgxY2JpQWdJQ0J5WlhOMWJIUXVhRzl6ZENBOUlDY25PMXh1SUNBZ0lHbG1JQ2h5Wld4aGRHbDJaUzV3Y205MGIyTnZiQ2tnZTF4dUlDQWdJQ0FnY21Wc1lYUnBkbVV1YUc5emRHNWhiV1VnUFNCdWRXeHNPMXh1SUNBZ0lDQWdjbVZzWVhScGRtVXVjRzl5ZENBOUlHNTFiR3c3WEc0Z0lDQWdJQ0JwWmlBb2NtVnNZWFJwZG1VdWFHOXpkQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9jbVZzVUdGMGFGc3dYU0E5UFQwZ0p5Y3BJSEpsYkZCaGRHaGJNRjBnUFNCeVpXeGhkR2wyWlM1b2IzTjBPMXh1SUNBZ0lDQWdJQ0JsYkhObElISmxiRkJoZEdndWRXNXphR2xtZENoeVpXeGhkR2wyWlM1b2IzTjBLVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQWdJSEpsYkdGMGFYWmxMbWh2YzNRZ1BTQnVkV3hzTzF4dUlDQWdJSDFjYmlBZ0lDQnRkWE4wUlc1a1FXSnpJRDBnYlhWemRFVnVaRUZpY3lBbUppQW9jbVZzVUdGMGFGc3dYU0E5UFQwZ0p5Y2dmSHdnYzNKalVHRjBhRnN3WFNBOVBUMGdKeWNwTzF4dUlDQjlYRzVjYmlBZ2FXWWdLR2x6VW1Wc1FXSnpLU0I3WEc0Z0lDQWdMeThnYVhRbmN5QmhZbk52YkhWMFpTNWNiaUFnSUNCeVpYTjFiSFF1YUc5emRDQTlJQ2h5Wld4aGRHbDJaUzVvYjNOMElIeDhJSEpsYkdGMGFYWmxMbWh2YzNRZ1BUMDlJQ2NuS1NBL1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaV3hoZEdsMlpTNW9iM04wSURvZ2NtVnpkV3gwTG1odmMzUTdYRzRnSUNBZ2NtVnpkV3gwTG1odmMzUnVZVzFsSUQwZ0tISmxiR0YwYVhabExtaHZjM1J1WVcxbElIeDhJSEpsYkdGMGFYWmxMbWh2YzNSdVlXMWxJRDA5UFNBbkp5a2dQMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxiR0YwYVhabExtaHZjM1J1WVcxbElEb2djbVZ6ZFd4MExtaHZjM1J1WVcxbE8xeHVJQ0FnSUhKbGMzVnNkQzV6WldGeVkyZ2dQU0J5Wld4aGRHbDJaUzV6WldGeVkyZzdYRzRnSUNBZ2NtVnpkV3gwTG5GMVpYSjVJRDBnY21Wc1lYUnBkbVV1Y1hWbGNuazdYRzRnSUNBZ2MzSmpVR0YwYUNBOUlISmxiRkJoZEdnN1hHNGdJQ0FnTHk4Z1ptRnNiQ0IwYUhKdmRXZG9JSFJ2SUhSb1pTQmtiM1F0YUdGdVpHeHBibWNnWW1Wc2IzY3VYRzRnSUgwZ1pXeHpaU0JwWmlBb2NtVnNVR0YwYUM1c1pXNW5kR2dwSUh0Y2JpQWdJQ0F2THlCcGRDZHpJSEpsYkdGMGFYWmxYRzRnSUNBZ0x5OGdkR2h5YjNjZ1lYZGhlU0IwYUdVZ1pYaHBjM1JwYm1jZ1ptbHNaU3dnWVc1a0lIUmhhMlVnZEdobElHNWxkeUJ3WVhSb0lHbHVjM1JsWVdRdVhHNGdJQ0FnYVdZZ0tDRnpjbU5RWVhSb0tTQnpjbU5RWVhSb0lEMGdXMTA3WEc0Z0lDQWdjM0pqVUdGMGFDNXdiM0FvS1R0Y2JpQWdJQ0J6Y21OUVlYUm9JRDBnYzNKalVHRjBhQzVqYjI1allYUW9jbVZzVUdGMGFDazdYRzRnSUNBZ2NtVnpkV3gwTG5ObFlYSmphQ0E5SUhKbGJHRjBhWFpsTG5ObFlYSmphRHRjYmlBZ0lDQnlaWE4xYkhRdWNYVmxjbmtnUFNCeVpXeGhkR2wyWlM1eGRXVnllVHRjYmlBZ2ZTQmxiSE5sSUdsbUlDZ2hkWFJwYkM1cGMwNTFiR3hQY2xWdVpHVm1hVzVsWkNoeVpXeGhkR2wyWlM1elpXRnlZMmdwS1NCN1hHNGdJQ0FnTHk4Z2FuVnpkQ0J3ZFd4c0lHOTFkQ0IwYUdVZ2MyVmhjbU5vTGx4dUlDQWdJQzh2SUd4cGEyVWdhSEpsWmowblAyWnZieWN1WEc0Z0lDQWdMeThnVUhWMElIUm9hWE1nWVdaMFpYSWdkR2hsSUc5MGFHVnlJSFIzYnlCallYTmxjeUJpWldOaGRYTmxJR2wwSUhOcGJYQnNhV1pwWlhNZ2RHaGxJR0p2YjJ4bFlXNXpYRzRnSUNBZ2FXWWdLSEJ6ZVdOb2IzUnBZeWtnZTF4dUlDQWdJQ0FnY21WemRXeDBMbWh2YzNSdVlXMWxJRDBnY21WemRXeDBMbWh2YzNRZ1BTQnpjbU5RWVhSb0xuTm9hV1owS0NrN1hHNGdJQ0FnSUNBdkwyOWpZMkYwYVc5dVlXeDVJSFJvWlNCaGRYUm9JR05oYmlCblpYUWdjM1IxWTJzZ2IyNXNlU0JwYmlCb2IzTjBYRzRnSUNBZ0lDQXZMM1JvYVhNZ1pYTndaV05wWVd4c2VTQm9ZWEJ3Wlc1eklHbHVJR05oYzJWeklHeHBhMlZjYmlBZ0lDQWdJQzh2ZFhKc0xuSmxjMjlzZG1WUFltcGxZM1FvSjIxaGFXeDBienBzYjJOaGJERkFaRzl0WVdsdU1TY3NJQ2RzYjJOaGJESkFaRzl0WVdsdU1pY3BYRzRnSUNBZ0lDQjJZWElnWVhWMGFFbHVTRzl6ZENBOUlISmxjM1ZzZEM1b2IzTjBJQ1ltSUhKbGMzVnNkQzVvYjNOMExtbHVaR1Y0VDJZb0owQW5LU0ErSURBZ1AxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYTjFiSFF1YUc5emRDNXpjR3hwZENnblFDY3BJRG9nWm1Gc2MyVTdYRzRnSUNBZ0lDQnBaaUFvWVhWMGFFbHVTRzl6ZENrZ2UxeHVJQ0FnSUNBZ0lDQnlaWE4xYkhRdVlYVjBhQ0E5SUdGMWRHaEpia2h2YzNRdWMyaHBablFvS1R0Y2JpQWdJQ0FnSUNBZ2NtVnpkV3gwTG1odmMzUWdQU0J5WlhOMWJIUXVhRzl6ZEc1aGJXVWdQU0JoZFhSb1NXNUliM04wTG5Ob2FXWjBLQ2s3WEc0Z0lDQWdJQ0I5WEc0Z0lDQWdmVnh1SUNBZ0lISmxjM1ZzZEM1elpXRnlZMmdnUFNCeVpXeGhkR2wyWlM1elpXRnlZMmc3WEc0Z0lDQWdjbVZ6ZFd4MExuRjFaWEo1SUQwZ2NtVnNZWFJwZG1VdWNYVmxjbms3WEc0Z0lDQWdMeTkwYnlCemRYQndiM0owSUdoMGRIQXVjbVZ4ZFdWemRGeHVJQ0FnSUdsbUlDZ2hkWFJwYkM1cGMwNTFiR3dvY21WemRXeDBMbkJoZEdodVlXMWxLU0I4ZkNBaGRYUnBiQzVwYzA1MWJHd29jbVZ6ZFd4MExuTmxZWEpqYUNrcElIdGNiaUFnSUNBZ0lISmxjM1ZzZEM1d1lYUm9JRDBnS0hKbGMzVnNkQzV3WVhSb2JtRnRaU0EvSUhKbGMzVnNkQzV3WVhSb2JtRnRaU0E2SUNjbktTQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoeVpYTjFiSFF1YzJWaGNtTm9JRDhnY21WemRXeDBMbk5sWVhKamFDQTZJQ2NuS1R0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVZ6ZFd4MExtaHlaV1lnUFNCeVpYTjFiSFF1Wm05eWJXRjBLQ2s3WEc0Z0lDQWdjbVYwZFhKdUlISmxjM1ZzZER0Y2JpQWdmVnh1WEc0Z0lHbG1JQ2doYzNKalVHRjBhQzVzWlc1bmRHZ3BJSHRjYmlBZ0lDQXZMeUJ1YnlCd1lYUm9JR0YwSUdGc2JDNGdJR1ZoYzNrdVhHNGdJQ0FnTHk4Z2QyVW5kbVVnWVd4eVpXRmtlU0JvWVc1a2JHVmtJSFJvWlNCdmRHaGxjaUJ6ZEhWbVppQmhZbTkyWlM1Y2JpQWdJQ0J5WlhOMWJIUXVjR0YwYUc1aGJXVWdQU0J1ZFd4c08xeHVJQ0FnSUM4dmRHOGdjM1Z3Y0c5eWRDQm9kSFJ3TG5KbGNYVmxjM1JjYmlBZ0lDQnBaaUFvY21WemRXeDBMbk5sWVhKamFDa2dlMXh1SUNBZ0lDQWdjbVZ6ZFd4MExuQmhkR2dnUFNBbkx5Y2dLeUJ5WlhOMWJIUXVjMlZoY21Ob08xeHVJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0J5WlhOMWJIUXVjR0YwYUNBOUlHNTFiR3c3WEc0Z0lDQWdmVnh1SUNBZ0lISmxjM1ZzZEM1b2NtVm1JRDBnY21WemRXeDBMbVp2Y20xaGRDZ3BPMXh1SUNBZ0lISmxkSFZ5YmlCeVpYTjFiSFE3WEc0Z0lIMWNibHh1SUNBdkx5QnBaaUJoSUhWeWJDQkZUa1J6SUdsdUlDNGdiM0lnTGk0c0lIUm9aVzRnYVhRZ2JYVnpkQ0JuWlhRZ1lTQjBjbUZwYkdsdVp5QnpiR0Z6YUM1Y2JpQWdMeThnYUc5M1pYWmxjaXdnYVdZZ2FYUWdaVzVrY3lCcGJpQmhibmwwYUdsdVp5QmxiSE5sSUc1dmJpMXpiR0Z6YUhrc1hHNGdJQzh2SUhSb1pXNGdhWFFnYlhWemRDQk9UMVFnWjJWMElHRWdkSEpoYVd4cGJtY2djMnhoYzJndVhHNGdJSFpoY2lCc1lYTjBJRDBnYzNKalVHRjBhQzV6YkdsalpTZ3RNU2xiTUYwN1hHNGdJSFpoY2lCb1lYTlVjbUZwYkdsdVoxTnNZWE5vSUQwZ0tGeHVJQ0FnSUNBZ0tISmxjM1ZzZEM1b2IzTjBJSHg4SUhKbGJHRjBhWFpsTG1odmMzUWdmSHdnYzNKalVHRjBhQzVzWlc1bmRHZ2dQaUF4S1NBbUpseHVJQ0FnSUNBZ0tHeGhjM1FnUFQwOUlDY3VKeUI4ZkNCc1lYTjBJRDA5UFNBbkxpNG5LU0I4ZkNCc1lYTjBJRDA5UFNBbkp5azdYRzVjYmlBZ0x5OGdjM1J5YVhBZ2MybHVaMnhsSUdSdmRITXNJSEpsYzI5c2RtVWdaRzkxWW14bElHUnZkSE1nZEc4Z2NHRnlaVzUwSUdScGNseHVJQ0F2THlCcFppQjBhR1VnY0dGMGFDQjBjbWxsY3lCMGJ5Qm5ieUJoWW05MlpTQjBhR1VnY205dmRDd2dZSFZ3WUNCbGJtUnpJSFZ3SUQ0Z01GeHVJQ0IyWVhJZ2RYQWdQU0F3TzF4dUlDQm1iM0lnS0haaGNpQnBJRDBnYzNKalVHRjBhQzVzWlc1bmRHZzdJR2tnUGowZ01Ec2dhUzB0S1NCN1hHNGdJQ0FnYkdGemRDQTlJSE55WTFCaGRHaGJhVjA3WEc0Z0lDQWdhV1lnS0d4aGMzUWdQVDA5SUNjdUp5a2dlMXh1SUNBZ0lDQWdjM0pqVUdGMGFDNXpjR3hwWTJVb2FTd2dNU2s3WEc0Z0lDQWdmU0JsYkhObElHbG1JQ2hzWVhOMElEMDlQU0FuTGk0bktTQjdYRzRnSUNBZ0lDQnpjbU5RWVhSb0xuTndiR2xqWlNocExDQXhLVHRjYmlBZ0lDQWdJSFZ3S3lzN1hHNGdJQ0FnZlNCbGJITmxJR2xtSUNoMWNDa2dlMXh1SUNBZ0lDQWdjM0pqVUdGMGFDNXpjR3hwWTJVb2FTd2dNU2s3WEc0Z0lDQWdJQ0IxY0MwdE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lDOHZJR2xtSUhSb1pTQndZWFJvSUdseklHRnNiRzkzWldRZ2RHOGdaMjhnWVdKdmRtVWdkR2hsSUhKdmIzUXNJSEpsYzNSdmNtVWdiR1ZoWkdsdVp5QXVMbk5jYmlBZ2FXWWdLQ0Z0ZFhOMFJXNWtRV0p6SUNZbUlDRnlaVzF2ZG1WQmJHeEViM1J6S1NCN1hHNGdJQ0FnWm05eUlDZzdJSFZ3TFMwN0lIVndLU0I3WEc0Z0lDQWdJQ0J6Y21OUVlYUm9MblZ1YzJocFpuUW9KeTR1SnlrN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ2FXWWdLRzExYzNSRmJtUkJZbk1nSmlZZ2MzSmpVR0YwYUZzd1hTQWhQVDBnSnljZ0ppWmNiaUFnSUNBZ0lDZ2hjM0pqVUdGMGFGc3dYU0I4ZkNCemNtTlFZWFJvV3pCZExtTm9ZWEpCZENnd0tTQWhQVDBnSnk4bktTa2dlMXh1SUNBZ0lITnlZMUJoZEdndWRXNXphR2xtZENnbkp5azdYRzRnSUgxY2JseHVJQ0JwWmlBb2FHRnpWSEpoYVd4cGJtZFRiR0Z6YUNBbUppQW9jM0pqVUdGMGFDNXFiMmx1S0Njdkp5a3VjM1ZpYzNSeUtDMHhLU0FoUFQwZ0p5OG5LU2tnZTF4dUlDQWdJSE55WTFCaGRHZ3VjSFZ6YUNnbkp5azdYRzRnSUgxY2JseHVJQ0IyWVhJZ2FYTkJZbk52YkhWMFpTQTlJSE55WTFCaGRHaGJNRjBnUFQwOUlDY25JSHg4WEc0Z0lDQWdJQ0FvYzNKalVHRjBhRnN3WFNBbUppQnpjbU5RWVhSb1d6QmRMbU5vWVhKQmRDZ3dLU0E5UFQwZ0p5OG5LVHRjYmx4dUlDQXZMeUJ3ZFhRZ2RHaGxJR2h2YzNRZ1ltRmphMXh1SUNCcFppQW9jSE41WTJodmRHbGpLU0I3WEc0Z0lDQWdjbVZ6ZFd4MExtaHZjM1J1WVcxbElEMGdjbVZ6ZFd4MExtaHZjM1FnUFNCcGMwRmljMjlzZFhSbElEOGdKeWNnT2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzSmpVR0YwYUM1c1pXNW5kR2dnUHlCemNtTlFZWFJvTG5Ob2FXWjBLQ2tnT2lBbkp6dGNiaUFnSUNBdkwyOWpZMkYwYVc5dVlXeDVJSFJvWlNCaGRYUm9JR05oYmlCblpYUWdjM1IxWTJzZ2IyNXNlU0JwYmlCb2IzTjBYRzRnSUNBZ0x5OTBhR2x6SUdWemNHVmphV0ZzYkhrZ2FHRndjR1Z1Y3lCcGJpQmpZWE5sY3lCc2FXdGxYRzRnSUNBZ0x5OTFjbXd1Y21WemIyeDJaVTlpYW1WamRDZ25iV0ZwYkhSdk9teHZZMkZzTVVCa2IyMWhhVzR4Snl3Z0oyeHZZMkZzTWtCa2IyMWhhVzR5SnlsY2JpQWdJQ0IyWVhJZ1lYVjBhRWx1U0c5emRDQTlJSEpsYzNWc2RDNW9iM04wSUNZbUlISmxjM1ZzZEM1b2IzTjBMbWx1WkdWNFQyWW9KMEFuS1NBK0lEQWdQMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwTG1odmMzUXVjM0JzYVhRb0owQW5LU0E2SUdaaGJITmxPMXh1SUNBZ0lHbG1JQ2hoZFhSb1NXNUliM04wS1NCN1hHNGdJQ0FnSUNCeVpYTjFiSFF1WVhWMGFDQTlJR0YxZEdoSmJraHZjM1F1YzJocFpuUW9LVHRjYmlBZ0lDQWdJSEpsYzNWc2RDNW9iM04wSUQwZ2NtVnpkV3gwTG1odmMzUnVZVzFsSUQwZ1lYVjBhRWx1U0c5emRDNXphR2xtZENncE8xeHVJQ0FnSUgxY2JpQWdmVnh1WEc0Z0lHMTFjM1JGYm1SQlluTWdQU0J0ZFhOMFJXNWtRV0p6SUh4OElDaHlaWE4xYkhRdWFHOXpkQ0FtSmlCemNtTlFZWFJvTG14bGJtZDBhQ2s3WEc1Y2JpQWdhV1lnS0cxMWMzUkZibVJCWW5NZ0ppWWdJV2x6UVdKemIyeDFkR1VwSUh0Y2JpQWdJQ0J6Y21OUVlYUm9MblZ1YzJocFpuUW9KeWNwTzF4dUlDQjlYRzVjYmlBZ2FXWWdLQ0Z6Y21OUVlYUm9MbXhsYm1kMGFDa2dlMXh1SUNBZ0lISmxjM1ZzZEM1d1lYUm9ibUZ0WlNBOUlHNTFiR3c3WEc0Z0lDQWdjbVZ6ZFd4MExuQmhkR2dnUFNCdWRXeHNPMXh1SUNCOUlHVnNjMlVnZTF4dUlDQWdJSEpsYzNWc2RDNXdZWFJvYm1GdFpTQTlJSE55WTFCaGRHZ3VhbTlwYmlnbkx5Y3BPMXh1SUNCOVhHNWNiaUFnTHk5MGJ5QnpkWEJ3YjNKMElISmxjWFZsYzNRdWFIUjBjRnh1SUNCcFppQW9JWFYwYVd3dWFYTk9kV3hzS0hKbGMzVnNkQzV3WVhSb2JtRnRaU2tnZkh3Z0lYVjBhV3d1YVhOT2RXeHNLSEpsYzNWc2RDNXpaV0Z5WTJncEtTQjdYRzRnSUNBZ2NtVnpkV3gwTG5CaGRHZ2dQU0FvY21WemRXeDBMbkJoZEdodVlXMWxJRDhnY21WemRXeDBMbkJoZEdodVlXMWxJRG9nSnljcElDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2h5WlhOMWJIUXVjMlZoY21Ob0lEOGdjbVZ6ZFd4MExuTmxZWEpqYUNBNklDY25LVHRjYmlBZ2ZWeHVJQ0J5WlhOMWJIUXVZWFYwYUNBOUlISmxiR0YwYVhabExtRjFkR2dnZkh3Z2NtVnpkV3gwTG1GMWRHZzdYRzRnSUhKbGMzVnNkQzV6YkdGemFHVnpJRDBnY21WemRXeDBMbk5zWVhOb1pYTWdmSHdnY21Wc1lYUnBkbVV1YzJ4aGMyaGxjenRjYmlBZ2NtVnpkV3gwTG1oeVpXWWdQU0J5WlhOMWJIUXVabTl5YldGMEtDazdYRzRnSUhKbGRIVnliaUJ5WlhOMWJIUTdYRzU5TzF4dVhHNVZjbXd1Y0hKdmRHOTBlWEJsTG5CaGNuTmxTRzl6ZENBOUlHWjFibU4wYVc5dUtDa2dlMXh1SUNCMllYSWdhRzl6ZENBOUlIUm9hWE11YUc5emREdGNiaUFnZG1GeUlIQnZjblFnUFNCd2IzSjBVR0YwZEdWeWJpNWxlR1ZqS0dodmMzUXBPMXh1SUNCcFppQW9jRzl5ZENrZ2UxeHVJQ0FnSUhCdmNuUWdQU0J3YjNKMFd6QmRPMXh1SUNBZ0lHbG1JQ2h3YjNKMElDRTlQU0FuT2ljcElIdGNiaUFnSUNBZ0lIUm9hWE11Y0c5eWRDQTlJSEJ2Y25RdWMzVmljM1J5S0RFcE8xeHVJQ0FnSUgxY2JpQWdJQ0JvYjNOMElEMGdhRzl6ZEM1emRXSnpkSElvTUN3Z2FHOXpkQzVzWlc1bmRHZ2dMU0J3YjNKMExteGxibWQwYUNrN1hHNGdJSDFjYmlBZ2FXWWdLR2h2YzNRcElIUm9hWE11YUc5emRHNWhiV1VnUFNCb2IzTjBPMXh1ZlR0Y2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPeUlzSW5OdmRYSmpaVkp2YjNRaU9pSWlmUT09XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9ub2RlX21vZHVsZXMvdXJsL3VybC5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vbm9kZV9tb2R1bGVzL3VybC91dGlsLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL3VybC91dGlsLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiXFxcXG5cXFxcbm1vZHVsZS5leHBvcnRzID0ge1xcXFxuICBpc1N0cmluZzogZnVuY3Rpb24oYXJnKSB7XFxcXG4gICAgcmV0dXJuIHR5cGVvZihhcmcpID09PSAnc3RyaW5nJztcXFxcbiAgfSxcXFxcbiAgaXNPYmplY3Q6IGZ1bmN0aW9uKGFyZykge1xcXFxuICAgIHJldHVybiB0eXBlb2YoYXJnKSA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xcXFxuICB9LFxcXFxuICBpc051bGw6IGZ1bmN0aW9uKGFyZykge1xcXFxuICAgIHJldHVybiBhcmcgPT09IG51bGw7XFxcXG4gIH0sXFxcXG4gIGlzTnVsbE9yVW5kZWZpbmVkOiBmdW5jdGlvbihhcmcpIHtcXFxcbiAgICByZXR1cm4gYXJnID09IG51bGw7XFxcXG4gIH1cXFxcbn07XFxcXG4vLyMgc291cmNlVVJMPVttb2R1bGVdXFxcXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSm1hV3hsSWpvaUxpOXViMlJsWDIxdlpIVnNaWE12ZFhKc0wzVjBhV3d1YW5NdWFuTWlMQ0p6YjNWeVkyVnpJanBiSW5kbFluQmhZMnM2THk5cGJXcHZlVkpRUXk4dUwyNXZaR1ZmYlc5a2RXeGxjeTkxY213dmRYUnBiQzVxY3o4ek5XVTRJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWlkMWMyVWdjM1J5YVdOMEp6dGNibHh1Ylc5a2RXeGxMbVY0Y0c5eWRITWdQU0I3WEc0Z0lHbHpVM1J5YVc1bk9pQm1kVzVqZEdsdmJpaGhjbWNwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkSGx3Wlc5bUtHRnlaeWtnUFQwOUlDZHpkSEpwYm1jbk8xeHVJQ0I5TEZ4dUlDQnBjMDlpYW1WamREb2dablZ1WTNScGIyNG9ZWEpuS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFI1Y0dWdlppaGhjbWNwSUQwOVBTQW5iMkpxWldOMEp5QW1KaUJoY21jZ0lUMDlJRzUxYkd3N1hHNGdJSDBzWEc0Z0lHbHpUblZzYkRvZ1puVnVZM1JwYjI0b1lYSm5LU0I3WEc0Z0lDQWdjbVYwZFhKdUlHRnlaeUE5UFQwZ2JuVnNiRHRjYmlBZ2ZTeGNiaUFnYVhOT2RXeHNUM0pWYm1SbFptbHVaV1E2SUdaMWJtTjBhVzl1S0dGeVp5a2dlMXh1SUNBZ0lISmxkSFZ5YmlCaGNtY2dQVDBnYm5Wc2JEdGNiaUFnZlZ4dWZUdGNiaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN0lpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL3VybC91dGlsLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL2dsb2JhbC5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XFxuXFxuZXZhbChcXFwidmFyIGc7XFxcXG5cXFxcbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXFxcXG5nID0gKGZ1bmN0aW9uKCkge1xcXFxuXFxcXHRyZXR1cm4gdGhpcztcXFxcbn0pKCk7XFxcXG5cXFxcbnRyeSB7XFxcXG5cXFxcdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxcXFxuXFxcXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXFxcXFxcXCJyZXR1cm4gdGhpc1xcXFxcXFwiKSgpO1xcXFxufSBjYXRjaCAoZSkge1xcXFxuXFxcXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxcXFxuXFxcXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXFxcXFxcXCJvYmplY3RcXFxcXFxcIikgZyA9IHdpbmRvdztcXFxcbn1cXFxcblxcXFxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxcXFxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcXFxcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cXFxcblxcXFxubW9kdWxlLmV4cG9ydHMgPSBnO1xcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdmQyVmljR0ZqYXk5aWRXbHNaR2x1TDJkc2IySmhiQzVxY3k1cWN5SXNJbk52ZFhKalpYTWlPbHNpZDJWaWNHRmphem92TDJsdGFtOTVVbEJETHloM1pXSndZV05yS1M5aWRXbHNaR2x1TDJkc2IySmhiQzVxY3o5alpEQXdJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW5aaGNpQm5PMXh1WEc0dkx5QlVhR2x6SUhkdmNtdHpJR2x1SUc1dmJpMXpkSEpwWTNRZ2JXOWtaVnh1WnlBOUlDaG1kVzVqZEdsdmJpZ3BJSHRjYmx4MGNtVjBkWEp1SUhSb2FYTTdYRzU5S1NncE8xeHVYRzUwY25rZ2UxeHVYSFF2THlCVWFHbHpJSGR2Y210eklHbG1JR1YyWVd3Z2FYTWdZV3hzYjNkbFpDQW9jMlZsSUVOVFVDbGNibHgwWnlBOUlHY2dmSHdnYm1WM0lFWjFibU4wYVc5dUtGd2ljbVYwZFhKdUlIUm9hWE5jSWlrb0tUdGNibjBnWTJGMFkyZ2dLR1VwSUh0Y2JseDBMeThnVkdocGN5QjNiM0pyY3lCcFppQjBhR1VnZDJsdVpHOTNJSEpsWm1WeVpXNWpaU0JwY3lCaGRtRnBiR0ZpYkdWY2JseDBhV1lnS0hSNWNHVnZaaUIzYVc1a2IzY2dQVDA5SUZ3aWIySnFaV04wWENJcElHY2dQU0IzYVc1a2IzYzdYRzU5WEc1Y2JpOHZJR2NnWTJGdUlITjBhV3hzSUdKbElIVnVaR1ZtYVc1bFpDd2dZblYwSUc1dmRHaHBibWNnZEc4Z1pHOGdZV0p2ZFhRZ2FYUXVMaTVjYmk4dklGZGxJSEpsZEhWeWJpQjFibVJsWm1sdVpXUXNJR2x1YzNSbFlXUWdiMllnYm05MGFHbHVaeUJvWlhKbExDQnpieUJwZENkelhHNHZMeUJsWVhOcFpYSWdkRzhnYUdGdVpHeGxJSFJvYVhNZ1kyRnpaUzRnYVdZb0lXZHNiMkpoYkNrZ2V5QXVMaTU5WEc1Y2JtMXZaSFZzWlM1bGVIQnZjblJ6SUQwZ1p6dGNiaUpkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUc2lMQ0p6YjNWeVkyVlNiMjkwSWpvaUluMD1cXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vZ2xvYmFsLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9ub2RlX21vZHVsZXMvd2VicGFjay9idWlsZGluL21vZHVsZS5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XFxuXFxuZXZhbChcXFwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcXFxcblxcXFx0aWYgKCFtb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XFxcXG5cXFxcdFxcXFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XFxcXG5cXFxcdFxcXFx0bW9kdWxlLnBhdGhzID0gW107XFxcXG5cXFxcdFxcXFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XFxcXG5cXFxcdFxcXFx0aWYgKCFtb2R1bGUuY2hpbGRyZW4pIG1vZHVsZS5jaGlsZHJlbiA9IFtdO1xcXFxuXFxcXHRcXFxcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFxcXFxcXFwibG9hZGVkXFxcXFxcXCIsIHtcXFxcblxcXFx0XFxcXHRcXFxcdGVudW1lcmFibGU6IHRydWUsXFxcXG5cXFxcdFxcXFx0XFxcXHRnZXQ6IGZ1bmN0aW9uKCkge1xcXFxuXFxcXHRcXFxcdFxcXFx0XFxcXHRyZXR1cm4gbW9kdWxlLmw7XFxcXG5cXFxcdFxcXFx0XFxcXHR9XFxcXG5cXFxcdFxcXFx0fSk7XFxcXG5cXFxcdFxcXFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXFxcXFxcXCJpZFxcXFxcXFwiLCB7XFxcXG5cXFxcdFxcXFx0XFxcXHRlbnVtZXJhYmxlOiB0cnVlLFxcXFxuXFxcXHRcXFxcdFxcXFx0Z2V0OiBmdW5jdGlvbigpIHtcXFxcblxcXFx0XFxcXHRcXFxcdFxcXFx0cmV0dXJuIG1vZHVsZS5pO1xcXFxuXFxcXHRcXFxcdFxcXFx0fVxcXFxuXFxcXHRcXFxcdH0pO1xcXFxuXFxcXHRcXFxcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xcXFxuXFxcXHR9XFxcXG5cXFxcdHJldHVybiBtb2R1bGU7XFxcXG59O1xcXFxuLy8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl1YjJSbFgyMXZaSFZzWlhNdmQyVmljR0ZqYXk5aWRXbHNaR2x1TDIxdlpIVnNaUzVxY3k1cWN5SXNJbk52ZFhKalpYTWlPbHNpZDJWaWNHRmphem92TDJsdGFtOTVVbEJETHloM1pXSndZV05yS1M5aWRXbHNaR2x1TDIxdlpIVnNaUzVxY3o5alpXUXlJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW0xdlpIVnNaUzVsZUhCdmNuUnpJRDBnWm5WdVkzUnBiMjRvYlc5a2RXeGxLU0I3WEc1Y2RHbG1JQ2doYlc5a2RXeGxMbmRsWW5CaFkydFFiMng1Wm1sc2JDa2dlMXh1WEhSY2RHMXZaSFZzWlM1a1pYQnlaV05oZEdVZ1BTQm1kVzVqZEdsdmJpZ3BJSHQ5TzF4dVhIUmNkRzF2WkhWc1pTNXdZWFJvY3lBOUlGdGRPMXh1WEhSY2RDOHZJRzF2WkhWc1pTNXdZWEpsYm5RZ1BTQjFibVJsWm1sdVpXUWdZbmtnWkdWbVlYVnNkRnh1WEhSY2RHbG1JQ2doYlc5a2RXeGxMbU5vYVd4a2NtVnVLU0J0YjJSMWJHVXVZMmhwYkdSeVpXNGdQU0JiWFR0Y2JseDBYSFJQWW1wbFkzUXVaR1ZtYVc1bFVISnZjR1Z5ZEhrb2JXOWtkV3hsTENCY0lteHZZV1JsWkZ3aUxDQjdYRzVjZEZ4MFhIUmxiblZ0WlhKaFlteGxPaUIwY25WbExGeHVYSFJjZEZ4MFoyVjBPaUJtZFc1amRHbHZiaWdwSUh0Y2JseDBYSFJjZEZ4MGNtVjBkWEp1SUcxdlpIVnNaUzVzTzF4dVhIUmNkRngwZlZ4dVhIUmNkSDBwTzF4dVhIUmNkRTlpYW1WamRDNWtaV1pwYm1WUWNtOXdaWEowZVNodGIyUjFiR1VzSUZ3aWFXUmNJaXdnZTF4dVhIUmNkRngwWlc1MWJXVnlZV0pzWlRvZ2RISjFaU3hjYmx4MFhIUmNkR2RsZERvZ1puVnVZM1JwYjI0b0tTQjdYRzVjZEZ4MFhIUmNkSEpsZEhWeWJpQnRiMlIxYkdVdWFUdGNibHgwWEhSY2RIMWNibHgwWEhSOUtUdGNibHgwWEhSdGIyUjFiR1V1ZDJWaWNHRmphMUJ2YkhsbWFXeHNJRDBnTVR0Y2JseDBmVnh1WEhSeVpYUjFjbTRnYlc5a2RXeGxPMXh1ZlR0Y2JpSmRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN0lpd2ljMjkxY21ObFVtOXZkQ0k2SWlKOVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9tb2R1bGUuanNcXFxcblxcXCIpO1xcblxcbi8qKiovIH0pLFxcblxcbi8qKiovIFxcXCIuL3NyYy9wbHVnaW4ud2Vid29ya2VyLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9zcmMvcGx1Z2luLndlYndvcmtlci5qcyAqKiohXFxuICBcXFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBubyBleHBvcnRzIHByb3ZpZGVkICovXFxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xcblxcblxcXCJ1c2Ugc3RyaWN0XFxcIjtcXG5ldmFsKFxcXCJfX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XFxcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3BsdWdpbkNvcmVfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vcGx1Z2luQ29yZS5qcyAqLyBcXFxcXFxcIi4vc3JjL3BsdWdpbkNvcmUuanNcXFxcXFxcIik7XFxcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3JwY19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9ycGMuanMgKi8gXFxcXFxcXCIuL3NyYy9ycGMuanNcXFxcXFxcIik7XFxcXG4vKipcXFxcbiAqIENvbnRhaW5zIHRoZSByb3V0aW5lcyBsb2FkZWQgYnkgdGhlIHBsdWdpbiBXb3JrZXIgdW5kZXIgd2ViLWJyb3dzZXIuXFxcXG4gKlxcXFxuICogSW5pdGlhbGl6ZXMgdGhlIHdlYiBlbnZpcm9ubWVudCB2ZXJzaW9uIG9mIHRoZSBwbGF0Zm9ybS1kZXBlbmRlbnRcXFxcbiAqIGNvbm5lY3Rpb24gb2JqZWN0IGZvciB0aGUgcGx1Z2luIHNpdGVcXFxcbiAqL1xcXFxuXFxcXG5cXFxcblxcXFxuKGZ1bmN0aW9uKCkge1xcXFxuICAvLyBtYWtlIHN1cmUgdGhpcyBydW5zIGluc2lkZSBhIHdlYndvcmtlclxcXFxuICBpZiAoXFxcXG4gICAgdHlwZW9mIFdvcmtlckdsb2JhbFNjb3BlID09PSBcXFxcXFxcInVuZGVmaW5lZFxcXFxcXFwiIHx8XFxcXG4gICAgIXNlbGYgfHxcXFxcbiAgICAhKHNlbGYgaW5zdGFuY2VvZiBXb3JrZXJHbG9iYWxTY29wZSlcXFxcbiAgKSB7XFxcXG4gICAgdGhyb3cgbmV3IEVycm9yKFxcXFxcXFwiVGhpcyBzY3JpcHQgY2FuIG9ubHkgbG9hZGVkIGluIGEgd2Vid29ya2VyXFxcXFxcXCIpO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBFeGVjdXRlcyB0aGUgZ2l2ZW4gY29kZSBpbiBhIGphaWxlZCBlbnZpcm9ubWVudC4gRm9yIHdlYlxcXFxuICAgKiBpbXBsZW1lbnRhdGlvbiwgd2UncmUgYWxyZWFkeSBqYWlsZWQgaW4gdGhlIGlmcmFtZSBhbmQgdGhlXFxcXG4gICAqIHdvcmtlciwgc28gc2ltcGx5IGV2YWwoKVxcXFxuICAgKlxcXFxuICAgKiBAcGFyYW0ge1N0cmluZ30gY29kZSBjb2RlIHRvIGV4ZWN1dGVcXFxcbiAgICovXFxcXG4gIHZhciBleGVjdXRlID0gZnVuY3Rpb24oY29kZSkge1xcXFxuICAgIHRyeSB7XFxcXG4gICAgICBpZiAoY29kZS50eXBlID09PSBcXFxcXFxcInJlcXVpcmVtZW50c1xcXFxcXFwiKSB7XFxcXG4gICAgICAgIHRyeSB7XFxcXG4gICAgICAgICAgaWYgKFxcXFxuICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHMgJiZcXFxcbiAgICAgICAgICAgIChBcnJheS5pc0FycmF5KGNvZGUucmVxdWlyZW1lbnRzKSB8fFxcXFxuICAgICAgICAgICAgICB0eXBlb2YgY29kZS5yZXF1aXJlbWVudHMgPT09IFxcXFxcXFwic3RyaW5nXFxcXFxcXCIpXFxcXG4gICAgICAgICAgKSB7XFxcXG4gICAgICAgICAgICB0cnkge1xcXFxuICAgICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoY29kZS5yZXF1aXJlbWVudHMpKSB7XFxcXG4gICAgICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHMgPSBbY29kZS5yZXF1aXJlbWVudHNdO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29kZS5yZXF1aXJlbWVudHMubGVuZ3RoOyBpKyspIHtcXFxcbiAgICAgICAgICAgICAgICBpZiAoXFxcXG4gICAgICAgICAgICAgICAgICBjb2RlLnJlcXVpcmVtZW50c1tpXS50b0xvd2VyQ2FzZSgpLmVuZHNXaXRoKFxcXFxcXFwiLmNzc1xcXFxcXFwiKSB8fFxcXFxuICAgICAgICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHNbaV0uc3RhcnRzV2l0aChcXFxcXFxcImNzczpcXFxcXFxcIilcXFxcbiAgICAgICAgICAgICAgICApIHtcXFxcbiAgICAgICAgICAgICAgICAgIHRocm93IFxcXFxcXFwidW5hYmxlIHRvIGltcG9ydCBjc3MgaW4gYSB3ZWJ3b3JrZXJcXFxcXFxcIjtcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKFxcXFxuICAgICAgICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHNbaV0udG9Mb3dlckNhc2UoKS5lbmRzV2l0aChcXFxcXFxcIi5qc1xcXFxcXFwiKSB8fFxcXFxuICAgICAgICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHNbaV0uc3RhcnRzV2l0aChcXFxcXFxcImpzOlxcXFxcXFwiKVxcXFxuICAgICAgICAgICAgICAgICkge1xcXFxuICAgICAgICAgICAgICAgICAgaWYgKGNvZGUucmVxdWlyZW1lbnRzW2ldLnN0YXJ0c1dpdGgoXFxcXFxcXCJqczpcXFxcXFxcIikpIHtcXFxcbiAgICAgICAgICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHNbaV0gPSBjb2RlLnJlcXVpcmVtZW50c1tpXS5zbGljZSgzKTtcXFxcbiAgICAgICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgICAgICAgIGltcG9ydFNjcmlwdHMoY29kZS5yZXF1aXJlbWVudHNbaV0pO1xcXFxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29kZS5yZXF1aXJlbWVudHNbaV0uc3RhcnRzV2l0aChcXFxcXFxcImh0dHBcXFxcXFxcIikpIHtcXFxcbiAgICAgICAgICAgICAgICAgIGltcG9ydFNjcmlwdHMoY29kZS5yZXF1aXJlbWVudHNbaV0pO1xcXFxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY29kZS5yZXF1aXJlbWVudHNbaV0uc3RhcnRzV2l0aChcXFxcXFxcImNhY2hlOlxcXFxcXFwiKSkge1xcXFxuICAgICAgICAgICAgICAgICAgLy9pZ25vcmUgY2FjaGVcXFxcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXFxcXG4gICAgICAgICAgICAgICAgICAgIFxcXFxcXFwiVW5wcm9jZXNzZWQgcmVxdWlyZW1lbnRzIHVybDogXFxcXFxcXCIgKyBjb2RlLnJlcXVpcmVtZW50c1tpXVxcXFxuICAgICAgICAgICAgICAgICAgKTtcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgICAgICAgdGhyb3cgXFxcXFxcXCJmYWlsZWQgdG8gaW1wb3J0IHJlcXVpcmVkIHNjcmlwdHM6IFxcXFxcXFwiICtcXFxcbiAgICAgICAgICAgICAgICBjb2RlLnJlcXVpcmVtZW50cy50b1N0cmluZygpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfSBjYXRjaCAoZSkge1xcXFxuICAgICAgICAgIHRocm93IGU7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSBpZiAoY29kZS50eXBlID09PSBcXFxcXFxcInNjcmlwdFxcXFxcXFwiKSB7XFxcXG4gICAgICAgIHRyeSB7XFxcXG4gICAgICAgICAgaWYgKFxcXFxuICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHMgJiZcXFxcbiAgICAgICAgICAgIChBcnJheS5pc0FycmF5KGNvZGUucmVxdWlyZW1lbnRzKSB8fFxcXFxuICAgICAgICAgICAgICB0eXBlb2YgY29kZS5yZXF1aXJlbWVudHMgPT09IFxcXFxcXFwic3RyaW5nXFxcXFxcXCIpXFxcXG4gICAgICAgICAgKSB7XFxcXG4gICAgICAgICAgICB0cnkge1xcXFxuICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjb2RlLnJlcXVpcmVtZW50cykpIHtcXFxcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvZGUucmVxdWlyZW1lbnRzLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgICAgICAgICAgICAgICBpbXBvcnRTY3JpcHRzKGNvZGUucmVxdWlyZW1lbnRzW2ldKTtcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgaW1wb3J0U2NyaXB0cyhjb2RlLnJlcXVpcmVtZW50cyk7XFxcXG4gICAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgICAgICAgdGhyb3cgXFxcXFxcXCJmYWlsZWQgdG8gaW1wb3J0IHJlcXVpcmVkIHNjcmlwdHM6IFxcXFxcXFwiICtcXFxcbiAgICAgICAgICAgICAgICBjb2RlLnJlcXVpcmVtZW50cy50b1N0cmluZygpO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgICBldmFsKGNvZGUuY29udGVudCk7XFxcXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGUubWVzc2FnZSwgZS5zdGFjayk7XFxcXG4gICAgICAgICAgdGhyb3cgZTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgdGhyb3cgXFxcXFxcXCJ1bnN1cHBvcnRlZCBjb2RlIHR5cGUuXFxcXFxcXCI7XFxcXG4gICAgICB9XFxcXG4gICAgICBzZWxmLnBvc3RNZXNzYWdlKHsgdHlwZTogXFxcXFxcXCJleGVjdXRlU3VjY2Vzc1xcXFxcXFwiIH0pO1xcXFxuICAgIH0gY2F0Y2ggKGUpIHtcXFxcbiAgICAgIGNvbnNvbGUuZXJyb3IoXFxcXFxcXCJmYWlsZWQgdG8gZXhlY3V0ZSBzY3JpcHRzOiBcXFxcXFxcIiwgY29kZSwgZSk7XFxcXG4gICAgICBzZWxmLnBvc3RNZXNzYWdlKHsgdHlwZTogXFxcXFxcXCJleGVjdXRlRmFpbHVyZVxcXFxcXFwiLCBlcnJvcjogZS5zdGFjayB8fCBTdHJpbmcoZSkgfSk7XFxcXG4gICAgfVxcXFxuICB9O1xcXFxuXFxcXG4gIC8qKlxcXFxuICAgKiBDb25uZWN0aW9uIG9iamVjdCBwcm92aWRlZCB0byB0aGUgUlBDIGNvbnN0cnVjdG9yLFxcXFxuICAgKiBwbHVnaW4gc2l0ZSBpbXBsZW1lbnRhdGlvbiBmb3IgdGhlIHdlYi1iYXNlZCBlbnZpcm9ubWVudC5cXFxcbiAgICogR2xvYmFsIHdpbGwgYmUgdGhlbiBjbGVhcmVkIHRvIHByZXZlbnQgZXhwb3N1cmUgaW50byB0aGVcXFxcbiAgICogV29ya2VyLCBzbyB3ZSBwdXQgdGhpcyBsb2NhbCBjb25uZWN0aW9uIG9iamVjdCBpbnRvIGEgY2xvc3VyZVxcXFxuICAgKi9cXFxcbiAgY29uc3QgY29ubiA9IHtcXFxcbiAgICBkaXNjb25uZWN0OiBmdW5jdGlvbigpIHtcXFxcbiAgICAgIHNlbGYuY2xvc2UoKTtcXFxcbiAgICB9LFxcXFxuICAgIHNlbmQ6IGZ1bmN0aW9uKGRhdGEsIHRyYW5zZmVyYWJsZXMpIHtcXFxcbiAgICAgIGRhdGEuX190cmFuc2ZlcmFibGVzX18gPSB0cmFuc2ZlcmFibGVzO1xcXFxuICAgICAgc2VsZi5wb3N0TWVzc2FnZShkYXRhLCB0cmFuc2ZlcmFibGVzKTtcXFxcbiAgICB9LFxcXFxuICAgIG9uTWVzc2FnZTogZnVuY3Rpb24oaCkge1xcXFxuICAgICAgY29ubi5fbWVzc2FnZUhhbmRsZXIgPSBoO1xcXFxuICAgIH0sXFxcXG4gICAgX21lc3NhZ2VIYW5kbGVyOiBmdW5jdGlvbigpIHt9LFxcXFxuICAgIG9uRGlzY29ubmVjdDogZnVuY3Rpb24oKSB7fVxcXFxuICB9O1xcXFxuXFxcXG4gIGNvbnN0IGNvbmZpZyA9IHtcXFxcbiAgICB0eXBlOiBcXFxcXFxcIndlYi13b3JrZXJcXFxcXFxcIixcXFxcbiAgICBkZWRpY2F0ZWRfdGhyZWFkOiB0cnVlLFxcXFxuICAgIGFsbG93X2V4ZWN1dGlvbjogdHJ1ZSxcXFxcbiAgICBsYW5nOiBcXFxcXFxcImphdmFzY3JpcHRcXFxcXFxcIixcXFxcbiAgICBhcGlfdmVyc2lvbjogX3JwY19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fW1xcXFxcXFwiQVBJX1ZFUlNJT05cXFxcXFxcIl1cXFxcbiAgfTtcXFxcblxcXFxuICAvKipcXFxcbiAgICogRXZlbnQgbGlzZW5lciBmb3IgdGhlIHBsdWdpbiBtZXNzYWdlXFxcXG4gICAqL1xcXFxuICBzZWxmLmFkZEV2ZW50TGlzdGVuZXIoXFxcXFxcXCJtZXNzYWdlXFxcXFxcXCIsIGZ1bmN0aW9uKGUpIHtcXFxcbiAgICBjb25zdCBtID0gZS5kYXRhO1xcXFxuICAgIHN3aXRjaCAobSAmJiBtLnR5cGUpIHtcXFxcbiAgICAgIGNhc2UgXFxcXFxcXCJnZXRDb25maWdcXFxcXFxcIjpcXFxcbiAgICAgICAgc2VsZi5wb3N0TWVzc2FnZSh7XFxcXG4gICAgICAgICAgdHlwZTogXFxcXFxcXCJjb25maWdcXFxcXFxcIixcXFxcbiAgICAgICAgICBjb25maWc6IGNvbmZpZ1xcXFxuICAgICAgICB9KTtcXFxcbiAgICAgICAgYnJlYWs7XFxcXG4gICAgICBjYXNlIFxcXFxcXFwiZXhlY3V0ZVxcXFxcXFwiOlxcXFxuICAgICAgICBleGVjdXRlKG0uY29kZSk7XFxcXG4gICAgICAgIGlmIChtLmNvZGUudHlwZSA9PT0gXFxcXFxcXCJyZXF1aXJlbWVudHNcXFxcXFxcIikge1xcXFxuICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShtLmNvZGUucmVxdWlyZW1lbnRzKSkge1xcXFxuICAgICAgICAgICAgbS5jb2RlLnJlcXVpcmVtZW50cyA9IFttLmNvZGUucmVxdWlyZW1lbnRzXTtcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgICAgc2VsZi5wb3N0TWVzc2FnZSh7XFxcXG4gICAgICAgICAgICB0eXBlOiBcXFxcXFxcImNhY2hlUmVxdWlyZW1lbnRzXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICByZXF1aXJlbWVudHM6IG0uY29kZS5yZXF1aXJlbWVudHNcXFxcbiAgICAgICAgICB9KTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgICBicmVhaztcXFxcbiAgICAgIC8vIGZvciB3ZWJ3b3JrZXIgb25seVxcXFxuICAgICAgY2FzZSBcXFxcXFxcImNvbm5lY3RSUENcXFxcXFxcIjpcXFxcbiAgICAgICAgT2JqZWN0KF9wbHVnaW5Db3JlX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcXFxcXCJjb25uZWN0UlBDXFxcXFxcXCJdKShjb25uLCBtLmNvbmZpZyk7XFxcXG4gICAgICAgIGJyZWFrO1xcXFxuICAgICAgZGVmYXVsdDpcXFxcbiAgICAgICAgY29ubi5fbWVzc2FnZUhhbmRsZXIobSk7XFxcXG4gICAgfVxcXFxuICB9KTtcXFxcbiAgc2VsZi5wb3N0TWVzc2FnZSh7XFxcXG4gICAgdHlwZTogXFxcXFxcXCJpbml0aWFsaXplZFxcXFxcXFwiLFxcXFxuICAgIGNvbmZpZzogY29uZmlnXFxcXG4gIH0pO1xcXFxufSkoKTtcXFxcbi8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5emNtTXZjR3gxWjJsdUxuZGxZbmR2Y210bGNpNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMeTR2YzNKakwzQnNkV2RwYmk1M1pXSjNiM0pyWlhJdWFuTS9PR00xTkNKZExDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLaXBjYmlBcUlFTnZiblJoYVc1eklIUm9aU0J5YjNWMGFXNWxjeUJzYjJGa1pXUWdZbmtnZEdobElIQnNkV2RwYmlCWGIzSnJaWElnZFc1a1pYSWdkMlZpTFdKeWIzZHpaWEl1WEc0Z0tseHVJQ29nU1c1cGRHbGhiR2w2WlhNZ2RHaGxJSGRsWWlCbGJuWnBjbTl1YldWdWRDQjJaWEp6YVc5dUlHOW1JSFJvWlNCd2JHRjBabTl5YlMxa1pYQmxibVJsYm5SY2JpQXFJR052Ym01bFkzUnBiMjRnYjJKcVpXTjBJR1p2Y2lCMGFHVWdjR3gxWjJsdUlITnBkR1ZjYmlBcUwxeHVhVzF3YjNKMElIc2dZMjl1Ym1WamRGSlFReUI5SUdaeWIyMGdYQ0l1TDNCc2RXZHBia052Y21VdWFuTmNJanRjYm1sdGNHOXlkQ0I3SUVGUVNWOVdSVkpUU1U5T0lIMGdabkp2YlNCY0lpNHZjbkJqTG1welhDSTdYRzVjYmlobWRXNWpkR2x2YmlncElIdGNiaUFnTHk4Z2JXRnJaU0J6ZFhKbElIUm9hWE1nY25WdWN5QnBibk5wWkdVZ1lTQjNaV0ozYjNKclpYSmNiaUFnYVdZZ0tGeHVJQ0FnSUhSNWNHVnZaaUJYYjNKclpYSkhiRzlpWVd4VFkyOXdaU0E5UFQwZ1hDSjFibVJsWm1sdVpXUmNJaUI4ZkZ4dUlDQWdJQ0Z6Wld4bUlIeDhYRzRnSUNBZ0lTaHpaV3htSUdsdWMzUmhibU5sYjJZZ1YyOXlhMlZ5UjJ4dlltRnNVMk52Y0dVcFhHNGdJQ2tnZTF4dUlDQWdJSFJvY205M0lHNWxkeUJGY25KdmNpaGNJbFJvYVhNZ2MyTnlhWEIwSUdOaGJpQnZibXg1SUd4dllXUmxaQ0JwYmlCaElIZGxZbmR2Y210bGNsd2lLVHRjYmlBZ2ZWeHVJQ0F2S2lwY2JpQWdJQ29nUlhobFkzVjBaWE1nZEdobElHZHBkbVZ1SUdOdlpHVWdhVzRnWVNCcVlXbHNaV1FnWlc1MmFYSnZibTFsYm5RdUlFWnZjaUIzWldKY2JpQWdJQ29nYVcxd2JHVnRaVzUwWVhScGIyNHNJSGRsSjNKbElHRnNjbVZoWkhrZ2FtRnBiR1ZrSUdsdUlIUm9aU0JwWm5KaGJXVWdZVzVrSUhSb1pWeHVJQ0FnS2lCM2IzSnJaWElzSUhOdklITnBiWEJzZVNCbGRtRnNLQ2xjYmlBZ0lDcGNiaUFnSUNvZ1FIQmhjbUZ0SUh0VGRISnBibWQ5SUdOdlpHVWdZMjlrWlNCMGJ5QmxlR1ZqZFhSbFhHNGdJQ0FxTDF4dUlDQjJZWElnWlhobFkzVjBaU0E5SUdaMWJtTjBhVzl1S0dOdlpHVXBJSHRjYmlBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnYVdZZ0tHTnZaR1V1ZEhsd1pTQTlQVDBnWENKeVpYRjFhWEpsYldWdWRITmNJaWtnZTF4dUlDQWdJQ0FnSUNCMGNua2dlMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdlpHVXVjbVZ4ZFdseVpXMWxiblJ6SUNZbVhHNGdJQ0FnSUNBZ0lDQWdJQ0FvUVhKeVlYa3VhWE5CY25KaGVTaGpiMlJsTG5KbGNYVnBjbVZ0Wlc1MGN5a2dmSHhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3Wlc5bUlHTnZaR1V1Y21WeGRXbHlaVzFsYm5SeklEMDlQU0JjSW5OMGNtbHVaMXdpS1Z4dUlDQWdJQ0FnSUNBZ0lDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RISjVJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0NGQmNuSmhlUzVwYzBGeWNtRjVLR052WkdVdWNtVnhkV2x5WlcxbGJuUnpLU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdlpHVXVjbVZ4ZFdseVpXMWxiblJ6SUQwZ1cyTnZaR1V1Y21WeGRXbHlaVzFsYm5SelhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSWdLSFpoY2lCcElEMGdNRHNnYVNBOElHTnZaR1V1Y21WeGRXbHlaVzFsYm5SekxteGxibWQwYURzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMjlrWlM1eVpYRjFhWEpsYldWdWRITmJhVjB1ZEc5TWIzZGxja05oYzJVb0tTNWxibVJ6VjJsMGFDaGNJaTVqYzNOY0lpa2dmSHhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdlpHVXVjbVZ4ZFdseVpXMWxiblJ6VzJsZExuTjBZWEowYzFkcGRHZ29YQ0pqYzNNNlhDSXBYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJjSW5WdVlXSnNaU0IwYnlCcGJYQnZjblFnWTNOeklHbHVJR0VnZDJWaWQyOXlhMlZ5WENJN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052WkdVdWNtVnhkV2x5WlcxbGJuUnpXMmxkTG5SdlRHOTNaWEpEWVhObEtDa3VaVzVrYzFkcGRHZ29YQ0l1YW5OY0lpa2dmSHhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdlpHVXVjbVZ4ZFdseVpXMWxiblJ6VzJsZExuTjBZWEowYzFkcGRHZ29YQ0pxY3pwY0lpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGpiMlJsTG5KbGNYVnBjbVZ0Wlc1MGMxdHBYUzV6ZEdGeWRITlhhWFJvS0Z3aWFuTTZYQ0lwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052WkdVdWNtVnhkV2x5WlcxbGJuUnpXMmxkSUQwZ1kyOWtaUzV5WlhGMWFYSmxiV1Z1ZEhOYmFWMHVjMnhwWTJVb015azdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJYQnZjblJUWTNKcGNIUnpLR052WkdVdWNtVnhkV2x5WlcxbGJuUnpXMmxkS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tHTnZaR1V1Y21WeGRXbHlaVzFsYm5SelcybGRMbk4wWVhKMGMxZHBkR2dvWENKb2RIUndYQ0lwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBiWEJ2Y25SVFkzSnBjSFJ6S0dOdlpHVXVjbVZ4ZFdseVpXMWxiblJ6VzJsZEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR052WkdVdWNtVnhkV2x5WlcxbGJuUnpXMmxkTG5OMFlYSjBjMWRwZEdnb1hDSmpZV05vWlRwY0lpa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dmFXZHViM0psSUdOaFkyaGxYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXViRzluS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbFZ1Y0hKdlkyVnpjMlZrSUhKbGNYVnBjbVZ0Wlc1MGN5QjFjbXc2SUZ3aUlDc2dZMjlrWlM1eVpYRjFhWEpsYldWdWRITmJhVjFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhSb2NtOTNJRndpWm1GcGJHVmtJSFJ2SUdsdGNHOXlkQ0J5WlhGMWFYSmxaQ0J6WTNKcGNIUnpPaUJjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kyOWtaUzV5WlhGMWFYSmxiV1Z1ZEhNdWRHOVRkSEpwYm1jb0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJSDBnWTJGMFkyZ2dLR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCbE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLR052WkdVdWRIbHdaU0E5UFQwZ1hDSnpZM0pwY0hSY0lpa2dlMXh1SUNBZ0lDQWdJQ0IwY25rZ2UxeHVJQ0FnSUNBZ0lDQWdJR2xtSUNoY2JpQWdJQ0FnSUNBZ0lDQWdJR052WkdVdWNtVnhkV2x5WlcxbGJuUnpJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ0lDQW9RWEp5WVhrdWFYTkJjbkpoZVNoamIyUmxMbkpsY1hWcGNtVnRaVzUwY3lrZ2ZIeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVzltSUdOdlpHVXVjbVZ4ZFdseVpXMWxiblJ6SUQwOVBTQmNJbk4wY21sdVoxd2lLVnh1SUNBZ0lDQWdJQ0FnSUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRUZ5Y21GNUxtbHpRWEp5WVhrb1kyOWtaUzV5WlhGMWFYSmxiV1Z1ZEhNcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl5SUNoc1pYUWdhU0E5SURBN0lHa2dQQ0JqYjJSbExuSmxjWFZwY21WdFpXNTBjeTVzWlc1bmRHZzdJR2tyS3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhVzF3YjNKMFUyTnlhWEIwY3loamIyUmxMbkpsY1hWcGNtVnRaVzUwYzF0cFhTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHRjRzl5ZEZOamNtbHdkSE1vWTI5a1pTNXlaWEYxYVhKbGJXVnVkSE1wTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lGd2labUZwYkdWa0lIUnZJR2x0Y0c5eWRDQnlaWEYxYVhKbFpDQnpZM0pwY0hSek9pQmNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTI5a1pTNXlaWEYxYVhKbGJXVnVkSE11ZEc5VGRISnBibWNvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdaWFpoYkNoamIyUmxMbU52Ym5SbGJuUXBPMXh1SUNBZ0lDQWdJQ0I5SUdOaGRHTm9JQ2hsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2lobExtMWxjM05oWjJVc0lHVXVjM1JoWTJzcE8xeHVJQ0FnSUNBZ0lDQWdJSFJvY205M0lHVTdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJSFJvY205M0lGd2lkVzV6ZFhCd2IzSjBaV1FnWTI5a1pTQjBlWEJsTGx3aU8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2MyVnNaaTV3YjNOMFRXVnpjMkZuWlNoN0lIUjVjR1U2SUZ3aVpYaGxZM1YwWlZOMVkyTmxjM05jSWlCOUtUdGNiaUFnSUNCOUlHTmhkR05vSUNobEtTQjdYRzRnSUNBZ0lDQmpiMjV6YjJ4bExtVnljbTl5S0Z3aVptRnBiR1ZrSUhSdklHVjRaV04xZEdVZ2MyTnlhWEIwY3pvZ1hDSXNJR052WkdVc0lHVXBPMXh1SUNBZ0lDQWdjMlZzWmk1d2IzTjBUV1Z6YzJGblpTaDdJSFI1Y0dVNklGd2laWGhsWTNWMFpVWmhhV3gxY21WY0lpd2daWEp5YjNJNklHVXVjM1JoWTJzZ2ZId2dVM1J5YVc1bktHVXBJSDBwTzF4dUlDQWdJSDFjYmlBZ2ZUdGNibHh1SUNBdktpcGNiaUFnSUNvZ1EyOXVibVZqZEdsdmJpQnZZbXBsWTNRZ2NISnZkbWxrWldRZ2RHOGdkR2hsSUZKUVF5QmpiMjV6ZEhKMVkzUnZjaXhjYmlBZ0lDb2djR3gxWjJsdUlITnBkR1VnYVcxd2JHVnRaVzUwWVhScGIyNGdabTl5SUhSb1pTQjNaV0l0WW1GelpXUWdaVzUyYVhKdmJtMWxiblF1WEc0Z0lDQXFJRWRzYjJKaGJDQjNhV3hzSUdKbElIUm9aVzRnWTJ4bFlYSmxaQ0IwYnlCd2NtVjJaVzUwSUdWNGNHOXpkWEpsSUdsdWRHOGdkR2hsWEc0Z0lDQXFJRmR2Y210bGNpd2djMjhnZDJVZ2NIVjBJSFJvYVhNZ2JHOWpZV3dnWTI5dWJtVmpkR2x2YmlCdlltcGxZM1FnYVc1MGJ5QmhJR05zYjNOMWNtVmNiaUFnSUNvdlhHNGdJR052Ym5OMElHTnZibTRnUFNCN1hHNGdJQ0FnWkdselkyOXVibVZqZERvZ1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0lDQnpaV3htTG1Oc2IzTmxLQ2s3WEc0Z0lDQWdmU3hjYmlBZ0lDQnpaVzVrT2lCbWRXNWpkR2x2Ymloa1lYUmhMQ0IwY21GdWMyWmxjbUZpYkdWektTQjdYRzRnSUNBZ0lDQmtZWFJoTGw5ZmRISmhibk5tWlhKaFlteGxjMTlmSUQwZ2RISmhibk5tWlhKaFlteGxjenRjYmlBZ0lDQWdJSE5sYkdZdWNHOXpkRTFsYzNOaFoyVW9aR0YwWVN3Z2RISmhibk5tWlhKaFlteGxjeWs3WEc0Z0lDQWdmU3hjYmlBZ0lDQnZiazFsYzNOaFoyVTZJR1oxYm1OMGFXOXVLR2dwSUh0Y2JpQWdJQ0FnSUdOdmJtNHVYMjFsYzNOaFoyVklZVzVrYkdWeUlEMGdhRHRjYmlBZ0lDQjlMRnh1SUNBZ0lGOXRaWE56WVdkbFNHRnVaR3hsY2pvZ1puVnVZM1JwYjI0b0tTQjdmU3hjYmlBZ0lDQnZia1JwYzJOdmJtNWxZM1E2SUdaMWJtTjBhVzl1S0NrZ2UzMWNiaUFnZlR0Y2JseHVJQ0JqYjI1emRDQmpiMjVtYVdjZ1BTQjdYRzRnSUNBZ2RIbHdaVG9nWENKM1pXSXRkMjl5YTJWeVhDSXNYRzRnSUNBZ1pHVmthV05oZEdWa1gzUm9jbVZoWkRvZ2RISjFaU3hjYmlBZ0lDQmhiR3h2ZDE5bGVHVmpkWFJwYjI0NklIUnlkV1VzWEc0Z0lDQWdiR0Z1WnpvZ1hDSnFZWFpoYzJOeWFYQjBYQ0lzWEc0Z0lDQWdZWEJwWDNabGNuTnBiMjQ2SUVGUVNWOVdSVkpUU1U5T1hHNGdJSDA3WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJRVYyWlc1MElHeHBjMlZ1WlhJZ1ptOXlJSFJvWlNCd2JIVm5hVzRnYldWemMyRm5aVnh1SUNBZ0tpOWNiaUFnYzJWc1ppNWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtGd2liV1Z6YzJGblpWd2lMQ0JtZFc1amRHbHZiaWhsS1NCN1hHNGdJQ0FnWTI5dWMzUWdiU0E5SUdVdVpHRjBZVHRjYmlBZ0lDQnpkMmwwWTJnZ0tHMGdKaVlnYlM1MGVYQmxLU0I3WEc0Z0lDQWdJQ0JqWVhObElGd2laMlYwUTI5dVptbG5YQ0k2WEc0Z0lDQWdJQ0FnSUhObGJHWXVjRzl6ZEUxbGMzTmhaMlVvZTF4dUlDQWdJQ0FnSUNBZ0lIUjVjR1U2SUZ3aVkyOXVabWxuWENJc1hHNGdJQ0FnSUNBZ0lDQWdZMjl1Wm1sbk9pQmpiMjVtYVdkY2JpQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJR0p5WldGck8xeHVJQ0FnSUNBZ1kyRnpaU0JjSW1WNFpXTjFkR1ZjSWpwY2JpQWdJQ0FnSUNBZ1pYaGxZM1YwWlNodExtTnZaR1VwTzF4dUlDQWdJQ0FnSUNCcFppQW9iUzVqYjJSbExuUjVjR1VnUFQwOUlGd2ljbVZ4ZFdseVpXMWxiblJ6WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb0lVRnljbUY1TG1selFYSnlZWGtvYlM1amIyUmxMbkpsY1hWcGNtVnRaVzUwY3lrcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUcwdVkyOWtaUzV5WlhGMWFYSmxiV1Z1ZEhNZ1BTQmJiUzVqYjJSbExuSmxjWFZwY21WdFpXNTBjMTA3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJSE5sYkdZdWNHOXpkRTFsYzNOaFoyVW9lMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RIbHdaVG9nWENKallXTm9aVkpsY1hWcGNtVnRaVzUwYzF3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WeGRXbHlaVzFsYm5Sek9pQnRMbU52WkdVdWNtVnhkV2x5WlcxbGJuUnpYRzRnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNBdkx5Qm1iM0lnZDJWaWQyOXlhMlZ5SUc5dWJIbGNiaUFnSUNBZ0lHTmhjMlVnWENKamIyNXVaV04wVWxCRFhDSTZYRzRnSUNBZ0lDQWdJR052Ym01bFkzUlNVRU1vWTI5dWJpd2diUzVqYjI1bWFXY3BPMXh1SUNBZ0lDQWdJQ0JpY21WaGF6dGNiaUFnSUNBZ0lHUmxabUYxYkhRNlhHNGdJQ0FnSUNBZ0lHTnZibTR1WDIxbGMzTmhaMlZJWVc1a2JHVnlLRzBwTzF4dUlDQWdJSDFjYmlBZ2ZTazdYRzRnSUhObGJHWXVjRzl6ZEUxbGMzTmhaMlVvZTF4dUlDQWdJSFI1Y0dVNklGd2lhVzVwZEdsaGJHbDZaV1JjSWl4Y2JpQWdJQ0JqYjI1bWFXYzZJR052Ym1acFoxeHVJQ0I5S1R0Y2JuMHBLQ2s3WEc0aVhTd2liV0Z3Y0dsdVozTWlPaUpCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUc2lMQ0p6YjNWeVkyVlNiMjkwSWpvaUluMD1cXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL3NyYy9wbHVnaW4ud2Vid29ya2VyLmpzXFxcXG5cXFwiKTtcXG5cXG4vKioqLyB9KSxcXG5cXG4vKioqLyBcXFwiLi9zcmMvcGx1Z2luQ29yZS5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vc3JjL3BsdWdpbkNvcmUuanMgKioqIVxcbiAgXFxcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogY29ubmVjdFJQQyAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xcXFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFxcXFxcImNvbm5lY3RSUENcXFxcXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBjb25uZWN0UlBDOyB9KTtcXFxcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfcnBjX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3JwYy5qcyAqLyBcXFxcXFxcIi4vc3JjL3JwYy5qc1xcXFxcXFwiKTtcXFxcbi8qKlxcXFxuICogQ29yZSBwbHVnaW4gc2NyaXB0IGxvYWRlZCBpbnRvIHRoZSBwbHVnaW4gcHJvY2Vzcy90aHJlYWQuXFxcXG4gKlxcXFxuICogSW5pdGlhbGl6ZXMgdGhlIHBsdWdpbi1zaXRlIEFQSSBnbG9iYWwgbWV0aG9kcy5cXFxcbiAqL1xcXFxuXFxcXG5mdW5jdGlvbiBjb25uZWN0UlBDKGNvbm5lY3Rpb24sIGNvbmZpZykge1xcXFxuICBjb25zdCBhcHBsaWNhdGlvbiA9IHt9O1xcXFxuICBjb25maWcgPSBjb25maWcgfHwge307XFxcXG4gIGNvbnN0IHJwYyA9IG5ldyBfcnBjX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcXFxcXCJSUENcXFxcXFxcIl0oY29ubmVjdGlvbiwgY29uZmlnKTtcXFxcbiAgcnBjLm9uR2V0SW50ZXJmYWNlKGZ1bmN0aW9uICgpIHtcXFxcbiAgICBsYXVuY2hDb25uZWN0ZWQoKTtcXFxcbiAgfSk7XFxcXG4gIHJwYy5vblJlbW90ZVVwZGF0ZShmdW5jdGlvbiAoKSB7XFxcXG4gICAgYXBwbGljYXRpb24ucmVtb3RlID0gcnBjLmdldFJlbW90ZSgpO1xcXFxuICAgIGlmICghYXBwbGljYXRpb24ucmVtb3RlKSByZXR1cm47XFxcXG4gICAgY29uc3QgYXBpID0gYXBwbGljYXRpb24ucmVtb3RlIHx8IHt9O1xcXFxuXFxcXG4gICAgaWYgKGFwaS5leHBvcnQpIHtcXFxcbiAgICAgIGNvbnNvbGUuZXJyb3IoXFxcXFxcXCJXQVJOSU5HOiBvdmVyd3JpdGluZyBmdW5jdGlvbiAnZXhwb3J0Jy5cXFxcXFxcIik7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgaWYgKGFwaS5vbmxvYWQpIHtcXFxcbiAgICAgIGNvbnNvbGUuZXJyb3IoXFxcXFxcXCJXQVJOSU5HOiBvdmVyd3JpdGluZyBmdW5jdGlvbiAnb25sb2FkJy5cXFxcXFxcIik7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgaWYgKGFwaS5kaXNwb3NlKSB7XFxcXG4gICAgICBjb25zb2xlLmVycm9yKFxcXFxcXFwiV0FSTklORzogb3ZlcndyaXRpbmcgZnVuY3Rpb24gJ2Rpc3Bvc2UnLlxcXFxcXFwiKTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICBhcGkuZXhwb3J0ID0gYXBwbGljYXRpb24uc2V0SW50ZXJmYWNlO1xcXFxuICAgIGFwaS5vbkxvYWQgPSBhcHBsaWNhdGlvbi53aGVuQ29ubmVjdGVkO1xcXFxuICAgIGFwaS5kaXNwb3NlID0gYXBwbGljYXRpb24uZGlzY29ubmVjdDtcXFxcblxcXFxuICAgIGlmICh0eXBlb2YgV29ya2VyR2xvYmFsU2NvcGUgIT09IFxcXFxcXFwidW5kZWZpbmVkXFxcXFxcXCIgJiYgc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlKSB7XFxcXG4gICAgICBzZWxmLmFwaSA9IGFwaTtcXFxcbiAgICAgIHNlbGYucG9zdE1lc3NhZ2Uoe1xcXFxuICAgICAgICB0eXBlOiBcXFxcXFxcImltam95X3JlbW90ZV9hcGlfcmVhZHlcXFxcXFxcIlxcXFxuICAgICAgfSk7XFxcXG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93KSB7XFxcXG4gICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgQ3VzdG9tRXZlbnQoXFxcXFxcXCJpbWpveV9yZW1vdGVfYXBpX3JlYWR5XFxcXFxcXCIsIHtcXFxcbiAgICAgICAgZGV0YWlsOiBhcGlcXFxcbiAgICAgIH0pKTtcXFxcbiAgICB9XFxcXG4gIH0pO1xcXFxuICAvKipcXFxcbiAgICogU2ltcGxpZmllZCBjbG9uZSBvZiBXaGVuYWJsZSBpbnN0YW5jZSAodGhlIG9iamVjdCBjYW4gbm90IGJlXFxcXG4gICAqIHBsYWNlZCBpbnRvIGEgc2hhcmVkIHNjcmlwdCwgYmVjYXVzZSB0aGUgbWFpbiBsaWJyYXJ5IG5lZWRzIGl0XFxcXG4gICAqIGJlZm9yZSB0aGUgYWRkaXRpb25hbCBzY3JpcHRzIG1heSBsb2FkKVxcXFxuICAgKi9cXFxcblxcXFxuICB2YXIgY29ubmVjdGVkID0gZmFsc2U7XFxcXG4gIHZhciBjb25uZWN0ZWRIYW5kbGVycyA9IFtdO1xcXFxuXFxcXG4gIHZhciBsYXVuY2hDb25uZWN0ZWQgPSBmdW5jdGlvbiAoKSB7XFxcXG4gICAgaWYgKCFjb25uZWN0ZWQpIHtcXFxcbiAgICAgIGNvbm5lY3RlZCA9IHRydWU7XFxcXG4gICAgICB2YXIgaGFuZGxlcjtcXFxcblxcXFxuICAgICAgd2hpbGUgKGhhbmRsZXIgPSBjb25uZWN0ZWRIYW5kbGVycy5wb3AoKSkge1xcXFxuICAgICAgICBoYW5kbGVyKCk7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuICB9O1xcXFxuXFxcXG4gIHZhciBjaGVja0hhbmRsZXIgPSBmdW5jdGlvbiAoaGFuZGxlcikge1xcXFxuICAgIHZhciB0eXBlID0gdHlwZW9mIGhhbmRsZXI7XFxcXG5cXFxcbiAgICBpZiAodHlwZSAhPT0gXFxcXFxcXCJmdW5jdGlvblxcXFxcXFwiKSB7XFxcXG4gICAgICB2YXIgbXNnID0gXFxcXFxcXCJBIGZ1bmN0aW9uIG1heSBvbmx5IGJlIHN1YnNyaWJlZCB0byB0aGUgZXZlbnQsIFxcXFxcXFwiICsgdHlwZSArIFxcXFxcXFwiIHdhcyBwcm92aWRlZCBpbnN0ZWFkXFxcXFxcXCI7XFxcXG4gICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICByZXR1cm4gaGFuZGxlcjtcXFxcbiAgfTtcXFxcbiAgLyoqXFxcXG4gICAqIFNldHMgYSBmdW5jdGlvbiBleGVjdXRlZCBhZnRlciB0aGUgY29ubmVjdGlvbiB0byB0aGVcXFxcbiAgICogYXBwbGljYXRpb24gaXMgZXN0YXBsaXNoZWQsIGFuZCB0aGUgaW5pdGlhbCBpbnRlcmZhY2UtZXhjaGFuZ2VcXFxcbiAgICogbWVzc2FnaW5nIGlzIGNvbXBsZXRlZFxcXFxuICAgKlxcXFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIHRvIGJlIGNhbGxlZCB1cG9uIGluaXRpYWxpemF0aW9uXFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgYXBwbGljYXRpb24ud2hlbkNvbm5lY3RlZCA9IGZ1bmN0aW9uIChoYW5kbGVyKSB7XFxcXG4gICAgaGFuZGxlciA9IGNoZWNrSGFuZGxlcihoYW5kbGVyKTtcXFxcblxcXFxuICAgIGlmIChjb25uZWN0ZWQpIHtcXFxcbiAgICAgIGhhbmRsZXIoKTtcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgY29ubmVjdGVkSGFuZGxlcnMucHVzaChoYW5kbGVyKTtcXFxcbiAgICB9XFxcXG4gIH07XFxcXG4gIC8qKlxcXFxuICAgKiBTZXRzIHRoZSBwbHVnaW4gaW50ZXJmYWNlIGF2YWlsYWJsZSB0byB0aGUgYXBwbGljYXRpb25cXFxcbiAgICpcXFxcbiAgICogQHBhcmFtIHtPYmplY3R9IF9pbnRlcmZhY2UgdG8gc2V0XFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgYXBwbGljYXRpb24uc2V0SW50ZXJmYWNlID0gZnVuY3Rpb24gKF9pbnRlcmZhY2UpIHtcXFxcbiAgICBycGMuc2V0SW50ZXJmYWNlKF9pbnRlcmZhY2UpO1xcXFxuICB9O1xcXFxuICAvKipcXFxcbiAgICogRGlzY29ubmVjdHMgdGhlIHBsdWdpbiBmcm9tIHRoZSBhcHBsaWNhdGlvbiAoc2VuZGluZ1xcXFxuICAgKiBub3RpZmljYXRpb24gbWVzc2FnZSkgYW5kIGRlc3Ryb3lzIGl0c2VsZlxcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIGFwcGxpY2F0aW9uLmRpc2Nvbm5lY3QgPSBmdW5jdGlvbiAoX2ludGVyZmFjZSkge1xcXFxuICAgIHJwYy5kaXNjb25uZWN0KCk7XFxcXG4gIH07XFxcXG59Ly8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl6Y21NdmNHeDFaMmx1UTI5eVpTNXFjeTVxY3lJc0luTnZkWEpqWlhNaU9sc2lkMlZpY0dGamF6b3ZMMmx0YW05NVVsQkRMM055WXk5d2JIVm5hVzVEYjNKbExtcHpQMkUwTnpZaVhTd2ljMjkxY21ObGMwTnZiblJsYm5RaU9sc2lMeW9xWEc0Z0tpQkRiM0psSUhCc2RXZHBiaUJ6WTNKcGNIUWdiRzloWkdWa0lHbHVkRzhnZEdobElIQnNkV2RwYmlCd2NtOWpaWE56TDNSb2NtVmhaQzVjYmlBcVhHNGdLaUJKYm1sMGFXRnNhWHBsY3lCMGFHVWdjR3gxWjJsdUxYTnBkR1VnUVZCSklHZHNiMkpoYkNCdFpYUm9iMlJ6TGx4dUlDb3ZYRzVwYlhCdmNuUWdleUJTVUVNZ2ZTQm1jbTl0SUZ3aUxpOXljR011YW5OY0lqdGNibHh1Wlhod2IzSjBJR1oxYm1OMGFXOXVJR052Ym01bFkzUlNVRU1vWTI5dWJtVmpkR2x2Yml3Z1kyOXVabWxuS1NCN1hHNGdJR052Ym5OMElHRndjR3hwWTJGMGFXOXVJRDBnZTMwN1hHNGdJR052Ym1acFp5QTlJR052Ym1acFp5QjhmQ0I3ZlR0Y2JseHVJQ0JqYjI1emRDQnljR01nUFNCdVpYY2dVbEJES0dOdmJtNWxZM1JwYjI0c0lHTnZibVpwWnlrN1hHNGdJSEp3WXk1dmJrZGxkRWx1ZEdWeVptRmpaU2htZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0JzWVhWdVkyaERiMjV1WldOMFpXUW9LVHRjYmlBZ2ZTazdYRzVjYmlBZ2NuQmpMbTl1VW1WdGIzUmxWWEJrWVhSbEtHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lHRndjR3hwWTJGMGFXOXVMbkpsYlc5MFpTQTlJSEp3WXk1blpYUlNaVzF2ZEdVb0tUdGNiaUFnSUNCcFppQW9JV0Z3Y0d4cFkyRjBhVzl1TG5KbGJXOTBaU2tnY21WMGRYSnVPMXh1SUNBZ0lHTnZibk4wSUdGd2FTQTlJR0Z3Y0d4cFkyRjBhVzl1TG5KbGJXOTBaU0I4ZkNCN2ZUdGNiaUFnSUNCcFppQW9ZWEJwTG1WNGNHOXlkQ2tnZTF4dUlDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaGNJbGRCVWs1SlRrYzZJRzkyWlhKM2NtbDBhVzVuSUdaMWJtTjBhVzl1SUNkbGVIQnZjblFuTGx3aUtUdGNiaUFnSUNCOVhHNGdJQ0FnYVdZZ0tHRndhUzV2Ym14dllXUXBJSHRjYmlBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1hDSlhRVkpPU1U1SE9pQnZkbVZ5ZDNKcGRHbHVaeUJtZFc1amRHbHZiaUFuYjI1c2IyRmtKeTVjSWlrN1hHNGdJQ0FnZlZ4dUlDQWdJR2xtSUNoaGNHa3VaR2x6Y0c5elpTa2dlMXh1SUNBZ0lDQWdZMjl1YzI5c1pTNWxjbkp2Y2loY0lsZEJVazVKVGtjNklHOTJaWEozY21sMGFXNW5JR1oxYm1OMGFXOXVJQ2RrYVhOd2IzTmxKeTVjSWlrN1hHNGdJQ0FnZlZ4dUlDQWdJR0Z3YVM1bGVIQnZjblFnUFNCaGNIQnNhV05oZEdsdmJpNXpaWFJKYm5SbGNtWmhZMlU3WEc0Z0lDQWdZWEJwTG05dVRHOWhaQ0E5SUdGd2NHeHBZMkYwYVc5dUxuZG9aVzVEYjI1dVpXTjBaV1E3WEc0Z0lDQWdZWEJwTG1ScGMzQnZjMlVnUFNCaGNIQnNhV05oZEdsdmJpNWthWE5qYjI1dVpXTjBPMXh1SUNBZ0lHbG1JQ2hjYmlBZ0lDQWdJSFI1Y0dWdlppQlhiM0pyWlhKSGJHOWlZV3hUWTI5d1pTQWhQVDBnWENKMWJtUmxabWx1WldSY0lpQW1KbHh1SUNBZ0lDQWdjMlZzWmlCcGJuTjBZVzVqWlc5bUlGZHZjbXRsY2tkc2IySmhiRk5qYjNCbFhHNGdJQ0FnS1NCN1hHNGdJQ0FnSUNCelpXeG1MbUZ3YVNBOUlHRndhVHRjYmlBZ0lDQWdJSE5sYkdZdWNHOXpkRTFsYzNOaFoyVW9lMXh1SUNBZ0lDQWdJQ0IwZVhCbE9pQmNJbWx0YW05NVgzSmxiVzkwWlY5aGNHbGZjbVZoWkhsY0lseHVJQ0FnSUNBZ2ZTazdYRzRnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ2QybHVaRzkzS1NCN1hHNGdJQ0FnSUNCM2FXNWtiM2N1WkdsemNHRjBZMmhGZG1WdWRDaGNiaUFnSUNBZ0lDQWdibVYzSUVOMWMzUnZiVVYyWlc1MEtGd2lhVzFxYjNsZmNtVnRiM1JsWDJGd2FWOXlaV0ZrZVZ3aUxDQjdJR1JsZEdGcGJEb2dZWEJwSUgwcFhHNGdJQ0FnSUNBcE8xeHVJQ0FnSUgxY2JpQWdmU2s3WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJRk5wYlhCc2FXWnBaV1FnWTJ4dmJtVWdiMllnVjJobGJtRmliR1VnYVc1emRHRnVZMlVnS0hSb1pTQnZZbXBsWTNRZ1kyRnVJRzV2ZENCaVpWeHVJQ0FnS2lCd2JHRmpaV1FnYVc1MGJ5QmhJSE5vWVhKbFpDQnpZM0pwY0hRc0lHSmxZMkYxYzJVZ2RHaGxJRzFoYVc0Z2JHbGljbUZ5ZVNCdVpXVmtjeUJwZEZ4dUlDQWdLaUJpWldadmNtVWdkR2hsSUdGa1pHbDBhVzl1WVd3Z2MyTnlhWEIwY3lCdFlYa2diRzloWkNsY2JpQWdJQ292WEc0Z0lIWmhjaUJqYjI1dVpXTjBaV1FnUFNCbVlXeHpaVHRjYmlBZ2RtRnlJR052Ym01bFkzUmxaRWhoYm1Sc1pYSnpJRDBnVzEwN1hHNWNiaUFnZG1GeUlHeGhkVzVqYUVOdmJtNWxZM1JsWkNBOUlHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lHbG1JQ2doWTI5dWJtVmpkR1ZrS1NCN1hHNGdJQ0FnSUNCamIyNXVaV04wWldRZ1BTQjBjblZsTzF4dVhHNGdJQ0FnSUNCMllYSWdhR0Z1Wkd4bGNqdGNiaUFnSUNBZ0lIZG9hV3hsSUNnb2FHRnVaR3hsY2lBOUlHTnZibTVsWTNSbFpFaGhibVJzWlhKekxuQnZjQ2dwS1NrZ2UxeHVJQ0FnSUNBZ0lDQm9ZVzVrYkdWeUtDazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ2ZWeHVJQ0I5TzF4dVhHNGdJSFpoY2lCamFHVmphMGhoYm1Sc1pYSWdQU0JtZFc1amRHbHZiaWhvWVc1a2JHVnlLU0I3WEc0Z0lDQWdkbUZ5SUhSNWNHVWdQU0IwZVhCbGIyWWdhR0Z1Wkd4bGNqdGNiaUFnSUNCcFppQW9kSGx3WlNBaFBUMGdYQ0ptZFc1amRHbHZibHdpS1NCN1hHNGdJQ0FnSUNCMllYSWdiWE5uSUQxY2JpQWdJQ0FnSUNBZ1hDSkJJR1oxYm1OMGFXOXVJRzFoZVNCdmJteDVJR0psSUhOMVluTnlhV0psWkNCMGJ5QjBhR1VnWlhabGJuUXNJRndpSUN0Y2JpQWdJQ0FnSUNBZ2RIbHdaU0FyWEc0Z0lDQWdJQ0FnSUZ3aUlIZGhjeUJ3Y205MmFXUmxaQ0JwYm5OMFpXRmtYQ0k3WEc0Z0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9iWE5uS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdhR0Z1Wkd4bGNqdGNiaUFnZlR0Y2JseHVJQ0F2S2lwY2JpQWdJQ29nVTJWMGN5QmhJR1oxYm1OMGFXOXVJR1Y0WldOMWRHVmtJR0ZtZEdWeUlIUm9aU0JqYjI1dVpXTjBhVzl1SUhSdklIUm9aVnh1SUNBZ0tpQmhjSEJzYVdOaGRHbHZiaUJwY3lCbGMzUmhjR3hwYzJobFpDd2dZVzVrSUhSb1pTQnBibWwwYVdGc0lHbHVkR1Z5Wm1GalpTMWxlR05vWVc1blpWeHVJQ0FnS2lCdFpYTnpZV2RwYm1jZ2FYTWdZMjl0Y0d4bGRHVmtYRzRnSUNBcVhHNGdJQ0FxSUVCd1lYSmhiU0I3Um5WdVkzUnBiMjU5SUdoaGJtUnNaWElnZEc4Z1ltVWdZMkZzYkdWa0lIVndiMjRnYVc1cGRHbGhiR2w2WVhScGIyNWNiaUFnSUNvdlhHNGdJR0Z3Y0d4cFkyRjBhVzl1TG5kb1pXNURiMjV1WldOMFpXUWdQU0JtZFc1amRHbHZiaWhvWVc1a2JHVnlLU0I3WEc0Z0lDQWdhR0Z1Wkd4bGNpQTlJR05vWldOclNHRnVaR3hsY2lob1lXNWtiR1Z5S1R0Y2JpQWdJQ0JwWmlBb1kyOXVibVZqZEdWa0tTQjdYRzRnSUNBZ0lDQm9ZVzVrYkdWeUtDazdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUdOdmJtNWxZM1JsWkVoaGJtUnNaWEp6TG5CMWMyZ29hR0Z1Wkd4bGNpazdYRzRnSUNBZ2ZWeHVJQ0I5TzF4dVhHNGdJQzhxS2x4dUlDQWdLaUJUWlhSeklIUm9aU0J3YkhWbmFXNGdhVzUwWlhKbVlXTmxJR0YyWVdsc1lXSnNaU0IwYnlCMGFHVWdZWEJ3YkdsallYUnBiMjVjYmlBZ0lDcGNiaUFnSUNvZ1FIQmhjbUZ0SUh0UFltcGxZM1I5SUY5cGJuUmxjbVpoWTJVZ2RHOGdjMlYwWEc0Z0lDQXFMMXh1SUNCaGNIQnNhV05oZEdsdmJpNXpaWFJKYm5SbGNtWmhZMlVnUFNCbWRXNWpkR2x2YmloZmFXNTBaWEptWVdObEtTQjdYRzRnSUNBZ2NuQmpMbk5sZEVsdWRHVnlabUZqWlNoZmFXNTBaWEptWVdObEtUdGNiaUFnZlR0Y2JseHVJQ0F2S2lwY2JpQWdJQ29nUkdselkyOXVibVZqZEhNZ2RHaGxJSEJzZFdkcGJpQm1jbTl0SUhSb1pTQmhjSEJzYVdOaGRHbHZiaUFvYzJWdVpHbHVaMXh1SUNBZ0tpQnViM1JwWm1sallYUnBiMjRnYldWemMyRm5aU2tnWVc1a0lHUmxjM1J5YjNseklHbDBjMlZzWmx4dUlDQWdLaTljYmlBZ1lYQndiR2xqWVhScGIyNHVaR2x6WTI5dWJtVmpkQ0E5SUdaMWJtTjBhVzl1S0Y5cGJuUmxjbVpoWTJVcElIdGNiaUFnSUNCeWNHTXVaR2x6WTI5dWJtVmpkQ2dwTzF4dUlDQjlPMXh1ZlZ4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVRzN096czdRVUZMUVR0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkpRVHRCUVVOQk8wRkJRMEU3UVVGRVFUdEJRVWRCTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUlVFN1FVRkRRVHRCUVVWQk96czdPenM3UVVGTFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkZRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVWxCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkZRVHM3T3pzN096czdPMEZCVDBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUlVFN096czdPenM3UVVGTFFUdEJRVU5CTzBGQlEwRTdRVUZGUVRzN096czdPMEZCU1VFN1FVRkRRVHRCUVVOQk8wRkJRMEVpTENKemIzVnlZMlZTYjI5MElqb2lJbjA9XFxcXG4vLyMgc291cmNlVVJMPXdlYnBhY2staW50ZXJuYWw6Ly8vLi9zcmMvcGx1Z2luQ29yZS5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vc3JjL3JwYy5qc1xcXCI6XFxuLyohKioqKioqKioqKioqKioqKioqKiohKlxcXFxcXG4gICEqKiogLi9zcmMvcnBjLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKi9cXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogQVBJX1ZFUlNJT04sIFJQQyAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xcXFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFxcXFxcIkFQSV9WRVJTSU9OXFxcXFxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gQVBJX1ZFUlNJT047IH0pO1xcXFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFxcXFxcIlJQQ1xcXFxcXFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIFJQQzsgfSk7XFxcXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX3V0aWxzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL3V0aWxzLmpzICovIFxcXFxcXFwiLi9zcmMvdXRpbHMuanNcXFxcXFxcIik7XFxcXG4vKipcXFxcbiAqIENvbnRhaW5zIHRoZSBSUEMgb2JqZWN0IHVzZWQgYm90aCBieSB0aGUgYXBwbGljYXRpb25cXFxcbiAqIHNpdGUsIGFuZCBieSBlYWNoIHBsdWdpblxcXFxuICovXFxcXG5cXFxcbmNvbnN0IEFQSV9WRVJTSU9OID0gXFxcXFxcXCIwLjIuMFxcXFxcXFwiO1xcXFxuY29uc3QgQXJyYXlCdWZmZXJWaWV3ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKE9iamVjdC5nZXRQcm90b3R5cGVPZihuZXcgVWludDhBcnJheSgpKSkuY29uc3RydWN0b3I7XFxcXG5cXFxcbmZ1bmN0aW9uIF9hcHBlbmRCdWZmZXIoYnVmZmVyMSwgYnVmZmVyMikge1xcXFxuICBjb25zdCB0bXAgPSBuZXcgVWludDhBcnJheShidWZmZXIxLmJ5dGVMZW5ndGggKyBidWZmZXIyLmJ5dGVMZW5ndGgpO1xcXFxuICB0bXAuc2V0KG5ldyBVaW50OEFycmF5KGJ1ZmZlcjEpLCAwKTtcXFxcbiAgdG1wLnNldChuZXcgVWludDhBcnJheShidWZmZXIyKSwgYnVmZmVyMS5ieXRlTGVuZ3RoKTtcXFxcbiAgcmV0dXJuIHRtcC5idWZmZXI7XFxcXG59XFxcXG5cXFxcbmZ1bmN0aW9uIGdldEtleUJ5VmFsdWUob2JqZWN0LCB2YWx1ZSkge1xcXFxuICByZXR1cm4gT2JqZWN0LmtleXMob2JqZWN0KS5maW5kKGtleSA9PiBvYmplY3Rba2V5XSA9PT0gdmFsdWUpO1xcXFxufVxcXFxuLyoqXFxcXG4gKiBSUEMgb2JqZWN0IHJlcHJlc2VudHMgYSBzaW5nbGUgc2l0ZSBpbiB0aGVcXFxcbiAqIGNvbW11bmljYXRpb24gcHJvdG9jb2wgYmV0d2VlbiB0aGUgYXBwbGljYXRpb24gYW5kIHRoZSBwbHVnaW5cXFxcbiAqXFxcXG4gKiBAcGFyYW0ge09iamVjdH0gY29ubmVjdGlvbiBhIHNwZWNpYWwgb2JqZWN0IGFsbG93aW5nIHRvIHNlbmRcXFxcbiAqIGFuZCByZWNlaXZlIG1lc3NhZ2VzIGZyb20gdGhlIG9wcG9zaXRlIHNpdGUgKGJhc2ljYWxseSBpdFxcXFxuICogc2hvdWxkIG9ubHkgcHJvdmlkZSBzZW5kKCkgYW5kIG9uTWVzc2FnZSgpIG1ldGhvZHMpXFxcXG4gKi9cXFxcblxcXFxuXFxcXG5jbGFzcyBSUEMge1xcXFxuICBjb25zdHJ1Y3Rvcihjb25uZWN0aW9uLCBjb25maWcpIHtcXFxcbiAgICB0aGlzLl9jb25uZWN0aW9uID0gY29ubmVjdGlvbjtcXFxcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcXFxcbiAgICB0aGlzLl9pbnRlcmZhY2UgPSB7fTtcXFxcbiAgICB0aGlzLl9wbHVnaW5faW50ZXJmYWNlcyA9IHt9O1xcXFxuICAgIHRoaXMuX3JlbW90ZSA9IG51bGw7XFxcXG5cXFxcbiAgICB0aGlzLl9yZW1vdGVVcGRhdGVIYW5kbGVyID0gZnVuY3Rpb24gKCkge307XFxcXG5cXFxcbiAgICB0aGlzLl9nZXRJbnRlcmZhY2VIYW5kbGVyID0gZnVuY3Rpb24gKCkge307XFxcXG5cXFxcbiAgICB0aGlzLl9pbnRlcmZhY2VTZXRBc1JlbW90ZUhhbmRsZXIgPSBudWxsO1xcXFxuXFxcXG4gICAgdGhpcy5fZGlzY29ubmVjdEhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7fTtcXFxcblxcXFxuICAgIHRoaXMuX3N0b3JlID0gbmV3IFJlZmVyZW5jZVN0b3JlKCk7XFxcXG4gICAgdGhpcy5fbWV0aG9kX3JlZnMgPSBuZXcgUmVmZXJlbmNlU3RvcmUoKTtcXFxcbiAgICB0aGlzLl9jb25uZWN0aW9uID0gY29ubmVjdGlvbjtcXFxcbiAgICBsZXQgbWUgPSB0aGlzO1xcXFxuXFxcXG4gICAgdGhpcy5fY29ubmVjdGlvbi5vbk1lc3NhZ2UoZnVuY3Rpb24gKGRhdGEpIHtcXFxcbiAgICAgIG1lLl9wcm9jZXNzTWVzc2FnZShkYXRhKTtcXFxcbiAgICB9KTtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogU2V0IGEgaGFuZGxlciB0byBiZSBjYWxsZWQgd2hlbiB0aGUgcmVtb3RlIHNpdGUgdXBkYXRlcyBpdHNcXFxcbiAgICogaW50ZXJmYWNlXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcXFxcbiAgICovXFxcXG5cXFxcblxcXFxuICBvblJlbW90ZVVwZGF0ZShoYW5kbGVyKSB7XFxcXG4gICAgdGhpcy5fcmVtb3RlVXBkYXRlSGFuZGxlciA9IGhhbmRsZXI7XFxcXG4gIH1cXFxcbiAgLyoqXFxcXG4gICAqIFNldCBhIGhhbmRsZXIgdG8gYmUgY2FsbGVkIHdoZW4gcmVjZWl2ZWQgYSByZXNwb25jZSBmcm9tIHRoZVxcXFxuICAgKiByZW1vdGUgc2l0ZSByZXBvcnRpbmcgdGhhdCB0aGUgcHJldmlvdXNseSBwcm92aWRlZCBpbnRlcmZhY2VcXFxcbiAgICogaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IHNldCBhcyByZW1vdGUgZm9yIHRoYXQgc2l0ZVxcXFxuICAgKlxcXFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgb25SZW1vdGVSZWFkeShoYW5kbGVyKSB7XFxcXG4gICAgdGhpcy5fbWV0aG9kX3JlZnMub25SZWFkeShoYW5kbGVyKTtcXFxcbiAgfVxcXFxuXFxcXG4gIG9uUmVtb3RlQnVzeShoYW5kbGVyKSB7XFxcXG4gICAgdGhpcy5fbWV0aG9kX3JlZnMub25CdXN5KGhhbmRsZXIpO1xcXFxuICB9XFxcXG5cXFxcbiAgZ2V0UmVtb3RlQ2FsbFN0YWNrKCkge1xcXFxuICAgIHJldHVybiB0aGlzLl9tZXRob2RfcmVmcy5nZXRTdGFjaygpO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBTZXQgYSBoYW5kbGVyIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSByZW1vdGUgc2l0ZSByZXF1ZXN0cyB0b1xcXFxuICAgKiAocmUpc2VuZCB0aGUgaW50ZXJmYWNlLiBVc2VkIHRvIGRldGVjdCBhbiBpbml0aWFsemF0aW9uXFxcXG4gICAqIGNvbXBsZXRpb24gd2l0aG91dCBzZW5kaW5nIGFkZGl0aW9uYWwgcmVxdWVzdCwgc2luY2UgaW4gZmFjdFxcXFxuICAgKiAnZ2V0SW50ZXJmYWNlJyByZXF1ZXN0IGlzIG9ubHkgc2VudCBieSBhcHBsaWNhdGlvbiBhdCB0aGUgbGFzdFxcXFxuICAgKiBzdGVwIG9mIHRoZSBwbHVnaW4gaW5pdGlhbGl6YXRpb25cXFxcbiAgICpcXFxcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIG9uR2V0SW50ZXJmYWNlKGhhbmRsZXIpIHtcXFxcbiAgICB0aGlzLl9nZXRJbnRlcmZhY2VIYW5kbGVyID0gaGFuZGxlcjtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogQHJldHVybnMge09iamVjdH0gc2V0IG9mIHJlbW90ZSBpbnRlcmZhY2UgbWV0aG9kc1xcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIGdldFJlbW90ZSgpIHtcXFxcbiAgICByZXR1cm4gdGhpcy5fcmVtb3RlO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBTZXRzIHRoZSBpbnRlcmZhY2Ugb2YgdGhpcyBzaXRlIG1ha2luZyBpdCBhdmFpbGFibGUgdG8gdGhlXFxcXG4gICAqIHJlbW90ZSBzaXRlIGJ5IHNlbmRpbmcgYSBtZXNzYWdlIHdpdGggYSBzZXQgb2YgbWV0aG9kcyBuYW1lc1xcXFxuICAgKlxcXFxuICAgKiBAcGFyYW0ge09iamVjdH0gX2ludGVyZmFjZSB0byBzZXRcXFxcbiAgICovXFxcXG5cXFxcblxcXFxuICBzZXRJbnRlcmZhY2UoX2ludGVyZmFjZSkge1xcXFxuICAgIGlmICh0aGlzLmNvbmZpZy5yZW1vdGVfZnVuY3Rpb25fbWFwcGluZykge1xcXFxuICAgICAgZm9yIChsZXQgZnVuY19uYW1lIG9mIHRoaXMuY29uZmlnLnJlbW90ZV9mdW5jdGlvbl9tYXBwaW5nKSB7XFxcXG4gICAgICAgIGlmIChfaW50ZXJmYWNlLmNvbnN0cnVjdG9yID09PSBPYmplY3QpIHtcXFxcbiAgICAgICAgICBfaW50ZXJmYWNlW2Z1bmNfbmFtZV0gPSAoLi4uYXJncykgPT4ge1xcXFxuICAgICAgICAgICAgdGhpcy5fcmVtb3RlW2Z1bmNfbmFtZV0oLi4uYXJncyk7XFxcXG4gICAgICAgICAgfTtcXFxcbiAgICAgICAgfSBlbHNlIGlmIChfaW50ZXJmYWNlLmNvbnN0cnVjdG9yLmNvbnN0cnVjdG9yID09PSBGdW5jdGlvbikge1xcXFxuICAgICAgICAgIF9pbnRlcmZhY2UuY29uc3RydWN0b3IucHJvdG90eXBlW2Z1bmNfbmFtZV0gPSAoLi4uYXJncykgPT4ge1xcXFxuICAgICAgICAgICAgdGhpcy5fcmVtb3RlW2Z1bmNfbmFtZV0oLi4uYXJncyk7XFxcXG4gICAgICAgICAgfTtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfVxcXFxuICAgIH1cXFxcblxcXFxuICAgIHRoaXMuX2ludGVyZmFjZSA9IF9pbnRlcmZhY2U7XFxcXG4gIH1cXFxcbiAgLyoqXFxcXG4gICAqIFNlbmRzIHRoZSBhY3R1YWwgaW50ZXJmYWNlIHRvIHRoZSByZW1vdGUgc2l0ZSB1cG9uIGl0IHdhc1xcXFxuICAgKiB1cGRhdGVkIG9yIGJ5IGEgc3BlY2lhbCByZXF1ZXN0IG9mIHRoZSByZW1vdGUgc2l0ZVxcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIHNlbmRJbnRlcmZhY2UoKSB7XFxcXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xcXFxuICAgICAgdmFyIG5hbWVzID0gW107XFxcXG5cXFxcbiAgICAgIGlmICghdGhpcy5faW50ZXJmYWNlKSB7XFxcXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcXFxcXFxcImludGVyZmFjZSBpcyBub3Qgc2V0LlxcXFxcXFwiKTtcXFxcbiAgICAgIH1cXFxcblxcXFxuICAgICAgaWYgKHRoaXMuX2ludGVyZmFjZS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0KSB7XFxcXG4gICAgICAgIGZvciAodmFyIG5hbWUgb2YgT2JqZWN0LmtleXModGhpcy5faW50ZXJmYWNlKSkge1xcXFxuICAgICAgICAgIGlmIChuYW1lLnN0YXJ0c1dpdGgoXFxcXFxcXCJfXFxcXFxcXCIpKSBjb250aW51ZTtcXFxcblxcXFxuICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5faW50ZXJmYWNlW25hbWVdID09PSBcXFxcXFxcImZ1bmN0aW9uXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgIG5hbWVzLnB1c2goe1xcXFxuICAgICAgICAgICAgICBuYW1lOiBuYW1lLFxcXFxuICAgICAgICAgICAgICBkYXRhOiBudWxsLFxcXFxuICAgICAgICAgICAgICB0eXBlOiBcXFxcXFxcImZ1bmN0aW9uXFxcXFxcXCJcXFxcbiAgICAgICAgICAgIH0pO1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2ludGVyZmFjZVtuYW1lXTtcXFxcblxcXFxuICAgICAgICAgICAgaWYgKGRhdGEgIT09IG51bGwgJiYgdHlwZW9mIGRhdGEgPT09IFxcXFxcXFwib2JqZWN0XFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgICAgdmFyIGRhdGEyID0ge307XFxcXG5cXFxcbiAgICAgICAgICAgICAgZm9yICh2YXIgayBvZiBPYmplY3Qua2V5cyhkYXRhKSkge1xcXFxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgZGF0YVtrXSA9PT0gXFxcXFxcXCJmdW5jdGlvblxcXFxcXFwiKSB7XFxcXG4gICAgICAgICAgICAgICAgICBkYXRhMltrXSA9IFxcXFxcXFwicnBjX21ldGhvZDo6XFxcXFxcXCIgKyBrO1xcXFxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgICBkYXRhMltrXSA9IGRhdGFba107XFxcXG4gICAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICAgICAgbmFtZXMucHVzaCh7XFxcXG4gICAgICAgICAgICAgICAgbmFtZTogbmFtZSxcXFxcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhMixcXFxcbiAgICAgICAgICAgICAgICB0eXBlOiBcXFxcXFxcIm9iamVjdFxcXFxcXFwiXFxcXG4gICAgICAgICAgICAgIH0pO1xcXFxuICAgICAgICAgICAgfSBlbHNlIGlmIChPYmplY3QoZGF0YSkgIT09IGRhdGEpIHtcXFxcbiAgICAgICAgICAgICAgbmFtZXMucHVzaCh7XFxcXG4gICAgICAgICAgICAgICAgbmFtZTogbmFtZSxcXFxcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhLFxcXFxuICAgICAgICAgICAgICAgIHR5cGU6IFxcXFxcXFwiZGF0YVxcXFxcXFwiXFxcXG4gICAgICAgICAgICAgIH0pO1xcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuICAgICAgfSAvLyBhIGNsYXNzXFxcXG4gICAgICBlbHNlIGlmICh0aGlzLl9pbnRlcmZhY2UuY29uc3RydWN0b3IgPT09IEZ1bmN0aW9uKSB7XFxcXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxcXFxcXFwiUGxlYXNlIGluc3RhbnRpYXRlIHRoZSBjbGFzcyBiZWZvcmUgZXhwb3J0dGluZyBpdC5cXFxcXFxcIik7XFxcXG4gICAgICAgIH0gLy8gaW5zdGFuY2Ugb2YgYSBjbGFzc1xcXFxuICAgICAgICBlbHNlIGlmICh0aGlzLl9pbnRlcmZhY2UuY29uc3RydWN0b3IuY29uc3RydWN0b3IgPT09IEZ1bmN0aW9uKSB7XFxcXG4gICAgICAgICAgICB2YXIgZnVuY3Rpb25zID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMuX2ludGVyZmFjZSkpLmNvbmNhdChPYmplY3Qua2V5cyh0aGlzLl9pbnRlcmZhY2UpKTtcXFxcblxcXFxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmdW5jdGlvbnMubGVuZ3RoOyBpKyspIHtcXFxcbiAgICAgICAgICAgICAgdmFyIG5hbWVfID0gZnVuY3Rpb25zW2ldO1xcXFxuICAgICAgICAgICAgICBpZiAobmFtZV8uc3RhcnRzV2l0aChcXFxcXFxcIl9cXFxcXFxcIikgfHwgbmFtZV8gPT09IFxcXFxcXFwiY29uc3RydWN0b3JcXFxcXFxcIikgY29udGludWU7XFxcXG5cXFxcbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0aGlzLl9pbnRlcmZhY2VbbmFtZV9dID09PSBcXFxcXFxcImZ1bmN0aW9uXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgICAgICBuYW1lcy5wdXNoKHtcXFxcbiAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWVfLFxcXFxuICAgICAgICAgICAgICAgICAgZGF0YTogbnVsbFxcXFxuICAgICAgICAgICAgICAgIH0pO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICAgIHRocm93IEVycm9yKFxcXFxcXFwiVW5zdXBwb3J0ZWQgaW50ZXJmYWNlIHR5cGVcXFxcXFxcIik7XFxcXG4gICAgICAgICAgfVxcXFxuXFxcXG4gICAgICB0aGlzLl9pbnRlcmZhY2VTZXRBc1JlbW90ZUhhbmRsZXIgPSByZXNvbHZlO1xcXFxuXFxcXG4gICAgICB0aGlzLl9jb25uZWN0aW9uLnNlbmQoe1xcXFxuICAgICAgICB0eXBlOiBcXFxcXFxcInNldEludGVyZmFjZVxcXFxcXFwiLFxcXFxuICAgICAgICBhcGk6IG5hbWVzXFxcXG4gICAgICB9KTtcXFxcbiAgICB9KTtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogSGFuZGxlcyBhIG1lc3NhZ2UgZnJvbSB0aGUgcmVtb3RlIHNpdGVcXFxcbiAgICovXFxcXG4gIC8vIHZhciBjYWxsYmFja19yZWcgPSBuZXcgUmVnRXhwKFxcXFxcXFwib251cGRhdGV8cnVuJFxcXFxcXFwiKVxcXFxuXFxcXG5cXFxcbiAgX3Byb2Nlc3NNZXNzYWdlKGRhdGEpIHtcXFxcbiAgICB2YXIgcmVzb2x2ZSwgcmVqZWN0LCBtZXRob2QsIGFyZ3MsIHJlc3VsdDtcXFxcblxcXFxuICAgIHN3aXRjaCAoZGF0YS50eXBlKSB7XFxcXG4gICAgICBjYXNlIFxcXFxcXFwibWV0aG9kXFxcXFxcXCI6XFxcXG4gICAgICAgIHZhciBfaW50ZXJmYWNlID0gdGhpcy5faW50ZXJmYWNlO1xcXFxuXFxcXG4gICAgICAgIHZhciBfbWV0aG9kX2NvbnRleHQgPSBfaW50ZXJmYWNlLl9fdGhpc19fIHx8IF9pbnRlcmZhY2U7XFxcXG5cXFxcbiAgICAgICAgaWYgKGRhdGEucGlkKSB7XFxcXG4gICAgICAgICAgX2ludGVyZmFjZSA9IHRoaXMuX3BsdWdpbl9pbnRlcmZhY2VzW2RhdGEucGlkXTtcXFxcblxcXFxuICAgICAgICAgIGlmICghX2ludGVyZmFjZSkge1xcXFxuICAgICAgICAgICAgaWYgKGRhdGEucHJvbWlzZSkge1xcXFxuICAgICAgICAgICAgICBbcmVzb2x2ZSwgcmVqZWN0XSA9IHRoaXMuX3Vud3JhcChkYXRhLnByb21pc2UsIGZhbHNlKTtcXFxcbiAgICAgICAgICAgICAgcmVqZWN0KGBwbHVnaW4gYXBpIGZ1bmN0aW9uIGlzIG5vdCBhdmFpYWxiZSBpbiBcXFxcXFxcIiR7ZGF0YS5waWR9XFxcXFxcXCIsIHRoZSBwbHVnaW4gbWF5YmUgdGVybWluYXRlZC5gKTtcXFxcbiAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYHBsdWdpbiBhcGkgZnVuY3Rpb24gaXMgbm90IGF2YWlhbGJlIGluICR7ZGF0YS5waWR9LCB0aGUgcGx1Z2luIG1heWJlIHRlcm1pbmF0ZWQuYCk7XFxcXG4gICAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICAgIHJldHVybjtcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH1cXFxcblxcXFxuICAgICAgICBpZiAoZGF0YS5uYW1lLmluZGV4T2YoXFxcXFxcXCIuXFxcXFxcXCIpICE9PSAtMSkge1xcXFxuICAgICAgICAgIHZhciBuYW1lcyA9IGRhdGEubmFtZS5zcGxpdChcXFxcXFxcIi5cXFxcXFxcIik7XFxcXG4gICAgICAgICAgbWV0aG9kID0gX2ludGVyZmFjZVtuYW1lc1swXV1bbmFtZXNbMV1dO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIG1ldGhvZCA9IF9pbnRlcmZhY2VbZGF0YS5uYW1lXTtcXFxcbiAgICAgICAgfVxcXFxuXFxcXG4gICAgICAgIGFyZ3MgPSB0aGlzLl91bndyYXAoZGF0YS5hcmdzLCB0cnVlKTtcXFxcblxcXFxuICAgICAgICBpZiAoZGF0YS5wcm9taXNlKSB7XFxcXG4gICAgICAgICAgW3Jlc29sdmUsIHJlamVjdF0gPSB0aGlzLl91bndyYXAoZGF0YS5wcm9taXNlLCBmYWxzZSk7XFxcXG5cXFxcbiAgICAgICAgICB0cnkge1xcXFxuICAgICAgICAgICAgcmVzdWx0ID0gbWV0aG9kLmFwcGx5KF9tZXRob2RfY29udGV4dCwgYXJncyk7XFxcXG5cXFxcbiAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlIHx8IG1ldGhvZC5jb25zdHJ1Y3RvciAmJiBtZXRob2QuY29uc3RydWN0b3IubmFtZSA9PT0gXFxcXFxcXCJBc3luY0Z1bmN0aW9uXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICAgICAgcmVzdWx0LnRoZW4ocmVzb2x2ZSkuY2F0Y2gocmVqZWN0KTtcXFxcbiAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XFxcXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGUsIG1ldGhvZCk7XFxcXG4gICAgICAgICAgICByZWplY3QoZSk7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIHRyeSB7XFxcXG4gICAgICAgICAgICBtZXRob2QuYXBwbHkoX21ldGhvZF9jb250ZXh0LCBhcmdzKTtcXFxcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XFxcXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGUsIG1ldGhvZCwgYXJncyk7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgYnJlYWs7XFxcXG5cXFxcbiAgICAgIGNhc2UgXFxcXFxcXCJjYWxsYmFja1xcXFxcXFwiOlxcXFxuICAgICAgICBpZiAoZGF0YS5wcm9taXNlKSB7XFxcXG4gICAgICAgICAgW3Jlc29sdmUsIHJlamVjdF0gPSB0aGlzLl91bndyYXAoZGF0YS5wcm9taXNlLCBmYWxzZSk7XFxcXG5cXFxcbiAgICAgICAgICB0cnkge1xcXFxuICAgICAgICAgICAgbWV0aG9kID0gdGhpcy5fc3RvcmUuZmV0Y2goZGF0YS5udW0pO1xcXFxuICAgICAgICAgICAgYXJncyA9IHRoaXMuX3Vud3JhcChkYXRhLmFyZ3MsIHRydWUpO1xcXFxuXFxcXG4gICAgICAgICAgICBpZiAoIW1ldGhvZCkge1xcXFxuICAgICAgICAgICAgICB0aHJvdyBcXFxcXFxcIkNhbGxiYWNrIGZ1bmN0aW9uIGNhbiBvbmx5IGNhbGxlZCBvbmNlLCBpZiB5b3Ugd2FudCB0byBjYWxsIGEgZnVuY3Rpb24gZm9yIG11bHRpcGxlIHRpbWVzLCBwbGVhc2UgbWFrZSBpdCBhcyBhIHBsdWdpbiBhcGkgZnVuY3Rpb24uIFNlZSBodHRwczovL2ltam95LmlvL2RvY3MgZm9yIG1vcmUgZGV0YWlscy5cXFxcXFxcIjtcXFxcbiAgICAgICAgICAgIH1cXFxcblxcXFxuICAgICAgICAgICAgcmVzdWx0ID0gbWV0aG9kLmFwcGx5KG51bGwsIGFyZ3MpO1xcXFxuXFxcXG4gICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSB8fCBtZXRob2QuY29uc3RydWN0b3IgJiYgbWV0aG9kLmNvbnN0cnVjdG9yLm5hbWUgPT09IFxcXFxcXFwiQXN5bmNGdW5jdGlvblxcXFxcXFwiKSB7XFxcXG4gICAgICAgICAgICAgIHJlc3VsdC50aGVuKHJlc29sdmUpLmNhdGNoKHJlamVjdCk7XFxcXG4gICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xcXFxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlLCBtZXRob2QpO1xcXFxuICAgICAgICAgICAgcmVqZWN0KGUpO1xcXFxuICAgICAgICAgIH1cXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICB0cnkge1xcXFxuICAgICAgICAgICAgbWV0aG9kID0gdGhpcy5fc3RvcmUuZmV0Y2goZGF0YS5udW0pO1xcXFxuICAgICAgICAgICAgYXJncyA9IHRoaXMuX3Vud3JhcChkYXRhLmFyZ3MsIHRydWUpO1xcXFxuXFxcXG4gICAgICAgICAgICBpZiAoIW1ldGhvZCkge1xcXFxuICAgICAgICAgICAgICB0aHJvdyBcXFxcXFxcIlBsZWFzZSBub3RpY2UgdGhhdCBjYWxsYmFjayBmdW5jdGlvbiBjYW4gb25seSBjYWxsZWQgb25jZSwgaWYgeW91IHdhbnQgdG8gY2FsbCBhIGZ1bmN0aW9uIGZvciBtdWx0aXBsZSB0aW1lcywgcGxlYXNlIG1ha2UgaXQgYXMgYSBwbHVnaW4gYXBpIGZ1bmN0aW9uLiBTZWUgaHR0cHM6Ly9pbWpveS5pby9kb2NzIGZvciBtb3JlIGRldGFpbHMuXFxcXFxcXCI7XFxcXG4gICAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICAgIG1ldGhvZC5hcHBseShudWxsLCBhcmdzKTtcXFxcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XFxcXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGUsIG1ldGhvZCwgYXJncyk7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgYnJlYWs7XFxcXG5cXFxcbiAgICAgIGNhc2UgXFxcXFxcXCJzZXRJbnRlcmZhY2VcXFxcXFxcIjpcXFxcbiAgICAgICAgdGhpcy5fc2V0UmVtb3RlKGRhdGEuYXBpKTtcXFxcblxcXFxuICAgICAgICBicmVhaztcXFxcblxcXFxuICAgICAgY2FzZSBcXFxcXFxcImdldEludGVyZmFjZVxcXFxcXFwiOlxcXFxuICAgICAgICB0aGlzLnNlbmRJbnRlcmZhY2UoKTtcXFxcblxcXFxuICAgICAgICB0aGlzLl9nZXRJbnRlcmZhY2VIYW5kbGVyKCk7XFxcXG5cXFxcbiAgICAgICAgYnJlYWs7XFxcXG5cXFxcbiAgICAgIGNhc2UgXFxcXFxcXCJpbnRlcmZhY2VTZXRBc1JlbW90ZVxcXFxcXFwiOlxcXFxuICAgICAgICBpZiAodHlwZW9mIHRoaXMuX2ludGVyZmFjZVNldEFzUmVtb3RlSGFuZGxlciA9PT0gXFxcXFxcXCJmdW5jdGlvblxcXFxcXFwiKSB7XFxcXG4gICAgICAgICAgdGhpcy5faW50ZXJmYWNlU2V0QXNSZW1vdGVIYW5kbGVyKCk7XFxcXG5cXFxcbiAgICAgICAgICB0aGlzLl9pbnRlcmZhY2VTZXRBc1JlbW90ZUhhbmRsZXIgPT09IG51bGw7XFxcXG4gICAgICAgIH1cXFxcblxcXFxuICAgICAgICBicmVhaztcXFxcblxcXFxuICAgICAgY2FzZSBcXFxcXFxcImRpc2Nvbm5lY3RcXFxcXFxcIjpcXFxcbiAgICAgICAgdGhpcy5fZGlzY29ubmVjdEhhbmRsZXIoKTtcXFxcblxcXFxuICAgICAgICB0aGlzLl9jb25uZWN0aW9uLmRpc2Nvbm5lY3QoKTtcXFxcblxcXFxuICAgICAgICBicmVhaztcXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgLyoqXFxcXG4gICAqIFNlbmRzIGEgcmVxdWVzdHMgdG8gdGhlIHJlbW90ZSBzaXRlIGFza2luZyBpdCB0byBwcm92aWRlIGl0c1xcXFxuICAgKiBjdXJyZW50IGludGVyZmFjZVxcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIHJlcXVlc3RSZW1vdGUoKSB7XFxcXG4gICAgdGhpcy5fY29ubmVjdGlvbi5zZW5kKHtcXFxcbiAgICAgIHR5cGU6IFxcXFxcXFwiZ2V0SW50ZXJmYWNlXFxcXFxcXCJcXFxcbiAgICB9KTtcXFxcbiAgfVxcXFxuXFxcXG4gIF9uZGFycmF5KHR5cGVkQXJyYXksIHNoYXBlLCBkdHlwZSkge1xcXFxuICAgIHZhciBfZHR5cGUgPSBfdXRpbHNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcXFxcXFxcInR5cGVkQXJyYXlUb0R0eXBlXFxcXFxcXCJdW3R5cGVkQXJyYXkuY29uc3RydWN0b3IubmFtZV07XFxcXG5cXFxcbiAgICBpZiAoZHR5cGUgJiYgZHR5cGUgIT09IF9kdHlwZSkge1xcXFxuICAgICAgdGhyb3cgXFxcXFxcXCJkdHlwZSBkb2Vzbid0IG1hdGNoIHRoZSB0eXBlIG9mIHRoZSBhcnJheTogXFxcXFxcXCIgKyBfZHR5cGUgKyBcXFxcXFxcIiAhPSBcXFxcXFxcIiArIGR0eXBlO1xcXFxuICAgIH1cXFxcblxcXFxuICAgIHNoYXBlID0gc2hhcGUgfHwgW3R5cGVkQXJyYXkubGVuZ3RoXTtcXFxcbiAgICByZXR1cm4ge1xcXFxuICAgICAgX19qYWlsZWRfdHlwZV9fOiBcXFxcXFxcIm5kYXJyYXlcXFxcXFxcIixcXFxcbiAgICAgIF9fdmFsdWVfXzogdHlwZWRBcnJheSxcXFxcbiAgICAgIF9fc2hhcGVfXzogc2hhcGUsXFxcXG4gICAgICBfX2R0eXBlX186IF9kdHlwZVxcXFxuICAgIH07XFxcXG4gIH1cXFxcbiAgLyoqXFxcXG4gICAqIFNldHMgdGhlIG5ldyByZW1vdGUgaW50ZXJmYWNlIHByb3ZpZGVkIGJ5IHRoZSBvdGhlciBzaXRlXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7QXJyYXl9IG5hbWVzIGxpc3Qgb2YgZnVuY3Rpb24gbmFtZXNcXFxcbiAgICovXFxcXG5cXFxcblxcXFxuICBfc2V0UmVtb3RlKGFwaSkge1xcXFxuICAgIHRoaXMuX3JlbW90ZSA9IHt9O1xcXFxuICAgIHZhciBpLCBuYW1lLCBkYXRhLCB0eXBlO1xcXFxuXFxcXG4gICAgZm9yIChpID0gMDsgaSA8IGFwaS5sZW5ndGg7IGkrKykge1xcXFxuICAgICAgbmFtZSA9IGFwaVtpXS5uYW1lO1xcXFxuICAgICAgZGF0YSA9IGFwaVtpXS5kYXRhO1xcXFxuICAgICAgdHlwZSA9IGFwaVtpXS50eXBlO1xcXFxuXFxcXG4gICAgICBpZiAodHlwZSA9PT0gXFxcXFxcXCJkYXRhXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgdGhpcy5fcmVtb3RlW25hbWVdID0gZGF0YTtcXFxcbiAgICAgIH0gZWxzZSBpZiAoZGF0YSkge1xcXFxuICAgICAgICBpZiAodHlwZW9mIGRhdGEgPT09IFxcXFxcXFwib2JqZWN0XFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICB2YXIgZGF0YTIgPSB7fTtcXFxcblxcXFxuICAgICAgICAgIGZvciAodmFyIGtleSBpbiBkYXRhKSB7XFxcXG4gICAgICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XFxcXG4gICAgICAgICAgICAgIGlmIChkYXRhW2tleV0gPT09IFxcXFxcXFwicnBjX21ldGhvZDo6XFxcXFxcXCIgKyBrZXkpIHtcXFxcbiAgICAgICAgICAgICAgICBkYXRhMltrZXldID0gdGhpcy5fZ2VuUmVtb3RlTWV0aG9kKG5hbWUgKyBcXFxcXFxcIi5cXFxcXFxcIiArIGtleSk7XFxcXG4gICAgICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICAgICAgZGF0YTJba2V5XSA9IGRhdGFba2V5XTtcXFxcbiAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfVxcXFxuICAgICAgICAgIH1cXFxcblxcXFxuICAgICAgICAgIHRoaXMuX3JlbW90ZVtuYW1lXSA9IGRhdGEyO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIHRoaXMuX3JlbW90ZVtuYW1lXSA9IGRhdGE7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgIHRoaXMuX3JlbW90ZVtuYW1lXSA9IHRoaXMuX2dlblJlbW90ZU1ldGhvZChuYW1lKTtcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG5cXFxcbiAgICB0aGlzLl9yZW1vdGVVcGRhdGVIYW5kbGVyKCk7XFxcXG5cXFxcbiAgICB0aGlzLl9yZXBvcnRSZW1vdGVTZXQoKTtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogR2VuZXJhdGVzIHRoZSB3cmFwcGVkIGZ1bmN0aW9uIGNvcnJlc3BvbmRpbmcgdG8gYSBzaW5nbGUgcmVtb3RlXFxcXG4gICAqIG1ldGhvZC4gV2hlbiB0aGUgZ2VuZXJhdGVkIGZ1bmN0aW9uIGlzIGNhbGxlZCwgaXQgd2lsbCBzZW5kIHRoZVxcXFxuICAgKiBjb3JyZXNwb25kaW5nIG1lc3NhZ2UgdG8gdGhlIHJlbW90ZSBzaXRlIGFza2luZyBpdCB0byBleGVjdXRlXFxcXG4gICAqIHRoZSBwYXJ0aWN1bGFyIG1ldGhvZCBvZiBpdHMgaW50ZXJmYWNlXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIG9mIHRoZSByZW1vdGUgbWV0aG9kXFxcXG4gICAqXFxcXG4gICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gd3JhcHBlZCByZW1vdGUgbWV0aG9kXFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgX2dlblJlbW90ZU1ldGhvZChuYW1lLCBwbHVnaW5faWQpIHtcXFxcbiAgICB2YXIgbWUgPSB0aGlzO1xcXFxuXFxcXG4gICAgdmFyIHJlbW90ZU1ldGhvZCA9IGZ1bmN0aW9uICgpIHtcXFxcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XFxcXG4gICAgICAgIGxldCBpZCA9IG51bGw7XFxcXG5cXFxcbiAgICAgICAgdHJ5IHtcXFxcbiAgICAgICAgICBpZCA9IG1lLl9tZXRob2RfcmVmcy5wdXQocGx1Z2luX2lkID8gcGx1Z2luX2lkICsgXFxcXFxcXCIvXFxcXFxcXCIgKyBuYW1lIDogbmFtZSk7XFxcXG5cXFxcbiAgICAgICAgICB2YXIgd3JhcHBlZF9yZXNvbHZlID0gZnVuY3Rpb24gKCkge1xcXFxuICAgICAgICAgICAgaWYgKGlkICE9PSBudWxsKSBtZS5fbWV0aG9kX3JlZnMuZmV0Y2goaWQpO1xcXFxuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcXFxcbiAgICAgICAgICB9O1xcXFxuXFxcXG4gICAgICAgICAgdmFyIHdyYXBwZWRfcmVqZWN0ID0gZnVuY3Rpb24gKCkge1xcXFxuICAgICAgICAgICAgaWYgKGlkICE9PSBudWxsKSBtZS5fbWV0aG9kX3JlZnMuZmV0Y2goaWQpO1xcXFxuICAgICAgICAgICAgcmV0dXJuIHJlamVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xcXFxuICAgICAgICAgIH07XFxcXG5cXFxcbiAgICAgICAgICB3cmFwcGVkX3Jlc29sdmUuX19qYWlsZWRfcGFpcnNfXyA9IHdyYXBwZWRfcmVqZWN0O1xcXFxuICAgICAgICAgIHdyYXBwZWRfcmVqZWN0Ll9famFpbGVkX3BhaXJzX18gPSB3cmFwcGVkX3Jlc29sdmU7XFxcXG4gICAgICAgICAgdmFyIGFyZ3MgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO1xcXFxuXFxcXG4gICAgICAgICAgaWYgKG5hbWUgPT09IFxcXFxcXFwicmVnaXN0ZXJcXFxcXFxcIiB8fCBuYW1lID09PSBcXFxcXFxcImV4cG9ydFxcXFxcXFwiIHx8IG5hbWUgPT09IFxcXFxcXFwib25cXFxcXFxcIikge1xcXFxuICAgICAgICAgICAgYXJncyA9IG1lLl93cmFwKGFyZ3MsIHRydWUpO1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBhcmdzID0gbWUuX3dyYXAoYXJncyk7XFxcXG4gICAgICAgICAgfVxcXFxuXFxcXG4gICAgICAgICAgdmFyIHRyYW5zZmVyYWJsZXMgPSBhcmdzLmFyZ3MuX190cmFuc2ZlcmFibGVzX187XFxcXG4gICAgICAgICAgaWYgKHRyYW5zZmVyYWJsZXMpIGRlbGV0ZSBhcmdzLmFyZ3MuX190cmFuc2ZlcmFibGVzX187XFxcXG5cXFxcbiAgICAgICAgICBtZS5fY29ubmVjdGlvbi5zZW5kKHtcXFxcbiAgICAgICAgICAgIHR5cGU6IFxcXFxcXFwibWV0aG9kXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICBuYW1lOiBuYW1lLFxcXFxuICAgICAgICAgICAgcGlkOiBwbHVnaW5faWQsXFxcXG4gICAgICAgICAgICBhcmdzOiBhcmdzLFxcXFxuICAgICAgICAgICAgcHJvbWlzZTogbWUuX3dyYXAoW3dyYXBwZWRfcmVzb2x2ZSwgd3JhcHBlZF9yZWplY3RdKVxcXFxuICAgICAgICAgIH0sIHRyYW5zZmVyYWJsZXMpO1xcXFxuICAgICAgICB9IGNhdGNoIChlKSB7XFxcXG4gICAgICAgICAgaWYgKGlkKSBtZS5fbWV0aG9kX3JlZnMuZmV0Y2goaWQpO1xcXFxuICAgICAgICAgIHJlamVjdChgRmFpbGVkIHRvIGV4ZWN0dWUgcmVtb3RlIG1ldGhvZCAocGx1Z2luOiAke3BsdWdpbl9pZCB8fCBtZS5pZH0sIG1ldGhvZDogJHtuYW1lfSksIGVycm9yOiAke2V9YCk7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0pO1xcXFxuICAgIH07XFxcXG5cXFxcbiAgICByZW1vdGVNZXRob2QuX19yZW1vdGVfbWV0aG9kID0gdHJ1ZTtcXFxcbiAgICByZXR1cm4gcmVtb3RlTWV0aG9kO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBTZW5kcyBhIHJlc3BvbmNlIHJlcG9ydGluZyB0aGF0IGludGVyZmFjZSBqdXN0IHByb3ZpZGVkIGJ5IHRoZVxcXFxuICAgKiByZW1vdGUgc2l0ZSB3YXMgc3VjY2Vzc2Z1bGx5IHNldCBieSB0aGlzIHNpdGUgYXMgcmVtb3RlXFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgX3JlcG9ydFJlbW90ZVNldCgpIHtcXFxcbiAgICB0aGlzLl9jb25uZWN0aW9uLnNlbmQoe1xcXFxuICAgICAgdHlwZTogXFxcXFxcXCJpbnRlcmZhY2VTZXRBc1JlbW90ZVxcXFxcXFwiXFxcXG4gICAgfSk7XFxcXG4gIH1cXFxcbiAgLyoqXFxcXG4gICAqIFByZXBhcmVzIHRoZSBwcm92aWRlZCBzZXQgb2YgcmVtb3RlIG1ldGhvZCBhcmd1bWVudHMgZm9yXFxcXG4gICAqIHNlbmRpbmcgdG8gdGhlIHJlbW90ZSBzaXRlLCByZXBsYWNlcyBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoXFxcXG4gICAqIGlkZW50aWZpZXJzXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7QXJyYXl9IGFyZ3MgdG8gd3JhcFxcXFxuICAgKlxcXFxuICAgKiBAcmV0dXJucyB7QXJyYXl9IHdyYXBwZWQgYXJndW1lbnRzXFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgX2VuY29kZV9pbnRlcmZhY2UoYU9iamVjdCwgYk9iamVjdCkge1xcXFxuICAgIHZhciB2LCBrO1xcXFxuICAgIGNvbnN0IGVuY29kZWRfaW50ZXJmYWNlID0ge307XFxcXG4gICAgYU9iamVjdFtcXFxcXFxcIl9faWRfX1xcXFxcXFwiXSA9IGFPYmplY3RbXFxcXFxcXCJfX2lkX19cXFxcXFxcIl0gfHwgT2JqZWN0KF91dGlsc19qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fW1xcXFxcXFwicmFuZElkXFxcXFxcXCJdKSgpO1xcXFxuXFxcXG4gICAgZm9yIChrIGluIGFPYmplY3QpIHtcXFxcbiAgICAgIGlmIChrID09PSBcXFxcXFxcImhhc093blByb3BlcnR5XFxcXFxcXCIpIGNvbnRpbnVlO1xcXFxuXFxcXG4gICAgICBpZiAoYU9iamVjdC5oYXNPd25Qcm9wZXJ0eShrKSkge1xcXFxuICAgICAgICBpZiAoay5zdGFydHNXaXRoKFxcXFxcXFwiX1xcXFxcXFwiKSkge1xcXFxuICAgICAgICAgIGNvbnRpbnVlO1xcXFxuICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgdiA9IGFPYmplY3Rba107XFxcXG5cXFxcbiAgICAgICAgaWYgKHR5cGVvZiB2ID09PSBcXFxcXFxcImZ1bmN0aW9uXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgICBiT2JqZWN0W2tdID0ge1xcXFxuICAgICAgICAgICAgX19qYWlsZWRfdHlwZV9fOiBcXFxcXFxcInBsdWdpbl9pbnRlcmZhY2VcXFxcXFxcIixcXFxcbiAgICAgICAgICAgIF9fcGx1Z2luX2lkX186IGFPYmplY3RbXFxcXFxcXCJfX2lkX19cXFxcXFxcIl0sXFxcXG4gICAgICAgICAgICBfX3ZhbHVlX186IGssXFxcXG4gICAgICAgICAgICBudW06IG51bGxcXFxcbiAgICAgICAgICB9O1xcXFxuICAgICAgICAgIGVuY29kZWRfaW50ZXJmYWNlW2tdID0gdjtcXFxcbiAgICAgICAgfSBlbHNlIGlmIChPYmplY3QodikgIT09IHYpIHtcXFxcbiAgICAgICAgICBiT2JqZWN0W2tdID0ge1xcXFxuICAgICAgICAgICAgX19qYWlsZWRfdHlwZV9fOiBcXFxcXFxcImFyZ3VtZW50XFxcXFxcXCIsXFxcXG4gICAgICAgICAgICBfX3ZhbHVlX186IHZcXFxcbiAgICAgICAgICB9O1xcXFxuICAgICAgICAgIGVuY29kZWRfaW50ZXJmYWNlW2tdID0gdjtcXFxcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdiA9PT0gXFxcXFxcXCJvYmplY3RcXFxcXFxcIikge1xcXFxuICAgICAgICAgIGJPYmplY3Rba10gPSBBcnJheS5pc0FycmF5KHYpID8gW10gOiB7fTtcXFxcblxcXFxuICAgICAgICAgIHRoaXMuX2VuY29kZV9pbnRlcmZhY2UodiwgYk9iamVjdFtrXSk7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG5cXFxcbiAgICB0aGlzLl9wbHVnaW5faW50ZXJmYWNlc1thT2JqZWN0W1xcXFxcXFwiX19pZF9fXFxcXFxcXCJdXSA9IGVuY29kZWRfaW50ZXJmYWNlO1xcXFxuXFxcXG4gICAgaWYgKGFPYmplY3Qub24pIHtcXFxcbiAgICAgIGFPYmplY3Qub24oXFxcXFxcXCJjbG9zZVxcXFxcXFwiLCAoKSA9PiB7XFxcXG4gICAgICAgIGRlbGV0ZSB0aGlzLl9wbHVnaW5faW50ZXJmYWNlc1thT2JqZWN0W1xcXFxcXFwiX19pZF9fXFxcXFxcXCJdXTtcXFxcbiAgICAgIH0pO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuXFxcXG4gIF9lbmNvZGUoYU9iamVjdCwgYXNfaW50ZXJmYWNlKSB7XFxcXG4gICAgdmFyIHRyYW5zZmVyYWJsZXMgPSBbXTtcXFxcblxcXFxuICAgIGlmICghYU9iamVjdCkge1xcXFxuICAgICAgcmV0dXJuIGFPYmplY3Q7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgdmFyIF90cmFuc2ZlciA9IGFPYmplY3QuX3RyYW5zZmVyO1xcXFxuICAgIHZhciBiT2JqZWN0LCB2LCBrO1xcXFxuICAgIHZhciBpc2FycmF5ID0gQXJyYXkuaXNBcnJheShhT2JqZWN0KTtcXFxcbiAgICBiT2JqZWN0ID0gaXNhcnJheSA/IFtdIDoge307IC8vc2tpcCBpZiBhbHJlYWR5IGVuY29kZWRcXFxcblxcXFxuICAgIGlmICh0eXBlb2YgYU9iamVjdCA9PT0gXFxcXFxcXCJvYmplY3RcXFxcXFxcIiAmJiBhT2JqZWN0Ll9famFpbGVkX3R5cGVfXyAmJiBhT2JqZWN0Ll9fdmFsdWVfXykge1xcXFxuICAgICAgcmV0dXJuIGFPYmplY3Q7XFxcXG4gICAgfSAvL2VuY29kZSBpbnRlcmZhY2VzXFxcXG5cXFxcblxcXFxuICAgIGlmICh0eXBlb2YgYU9iamVjdCA9PT0gXFxcXFxcXCJvYmplY3RcXFxcXFxcIiAmJiAhQXJyYXkuaXNBcnJheShhT2JqZWN0KSAmJiAoYU9iamVjdC5fX2FzX2ludGVyZmFjZV9fIHx8IGFzX2ludGVyZmFjZSkpIHtcXFxcbiAgICAgIHRoaXMuX2VuY29kZV9pbnRlcmZhY2UoYU9iamVjdCwgYk9iamVjdCk7XFxcXG5cXFxcbiAgICAgIHJldHVybiBiT2JqZWN0O1xcXFxuICAgIH1cXFxcblxcXFxuICAgIGlmIChhc19pbnRlcmZhY2UpIHtcXFxcbiAgICAgIGFPYmplY3RbXFxcXFxcXCJfX2lkX19cXFxcXFxcIl0gPSBhT2JqZWN0W1xcXFxcXFwiX19pZF9fXFxcXFxcXCJdIHx8IE9iamVjdChfdXRpbHNfanNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcXFxcXFxcInJhbmRJZFxcXFxcXFwiXSkoKTtcXFxcbiAgICAgIHRoaXMuX3BsdWdpbl9pbnRlcmZhY2VzW2FPYmplY3RbXFxcXFxcXCJfX2lkX19cXFxcXFxcIl1dID0gdGhpcy5fcGx1Z2luX2ludGVyZmFjZXNbYU9iamVjdFtcXFxcXFxcIl9faWRfX1xcXFxcXFwiXV0gfHwge307XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgZm9yIChrIGluIGFPYmplY3QpIHtcXFxcbiAgICAgIGlmIChrID09PSBcXFxcXFxcImhhc093blByb3BlcnR5XFxcXFxcXCIpIGNvbnRpbnVlO1xcXFxuXFxcXG4gICAgICBpZiAoaXNhcnJheSB8fCBhT2JqZWN0Lmhhc093blByb3BlcnR5KGspKSB7XFxcXG4gICAgICAgIHYgPSBhT2JqZWN0W2tdO1xcXFxuXFxcXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5faW50ZXJmYWNlLl9ycGNFbmNvZGUgPT09IFxcXFxcXFwiZnVuY3Rpb25cXFxcXFxcIikge1xcXFxuICAgICAgICAgIGNvbnN0IGVuY29kZWRfb2JqID0gdGhpcy5faW50ZXJmYWNlLl9ycGNFbmNvZGUodik7XFxcXG5cXFxcbiAgICAgICAgICBpZiAoZW5jb2RlZF9vYmogJiYgZW5jb2RlZF9vYmouX19ycGNfZHR5cGVfXykge1xcXFxuICAgICAgICAgICAgYk9iamVjdFtrXSA9IHtcXFxcbiAgICAgICAgICAgICAgX19qYWlsZWRfdHlwZV9fOiBcXFxcXFxcImN1c3RvbV9lbmNvZGluZ1xcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICBfX3ZhbHVlX186IGVuY29kZWRfb2JqXFxcXG4gICAgICAgICAgICB9O1xcXFxuICAgICAgICAgICAgY29udGludWU7XFxcXG4gICAgICAgICAgfSAvLyBpZiB0aGUgcmV0dXJuZWQgb2JqZWN0IGRvZXMgbm90IGNvbnRhaW4gX19qYWlsZWRfdHlwZV9fLCBhc3N1bWluZyB0aGUgb2JqZWN0IGhhcyBiZWVuIHRyYW5zZm9ybWVkXFxcXG4gICAgICAgICAgZWxzZSB7XFxcXG4gICAgICAgICAgICAgIHYgPSBlbmNvZGVkX29iajtcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgfVxcXFxuXFxcXG4gICAgICAgIGlmICh0eXBlb2YgdiA9PT0gXFxcXFxcXCJmdW5jdGlvblxcXFxcXFwiKSB7XFxcXG4gICAgICAgICAgaWYgKGFzX2ludGVyZmFjZSkge1xcXFxuICAgICAgICAgICAgY29uc3QgZW5jb2RlZF9pbnRlcmZhY2UgPSB0aGlzLl9wbHVnaW5faW50ZXJmYWNlc1thT2JqZWN0W1xcXFxcXFwiX19pZF9fXFxcXFxcXCJdXTtcXFxcbiAgICAgICAgICAgIGJPYmplY3Rba10gPSB7XFxcXG4gICAgICAgICAgICAgIF9famFpbGVkX3R5cGVfXzogXFxcXFxcXCJwbHVnaW5faW50ZXJmYWNlXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgIF9fcGx1Z2luX2lkX186IGFPYmplY3RbXFxcXFxcXCJfX2lkX19cXFxcXFxcIl0sXFxcXG4gICAgICAgICAgICAgIF9fdmFsdWVfXzogayxcXFxcbiAgICAgICAgICAgICAgbnVtOiBudWxsXFxcXG4gICAgICAgICAgICB9O1xcXFxuICAgICAgICAgICAgZW5jb2RlZF9pbnRlcmZhY2Vba10gPSB2O1xcXFxuICAgICAgICAgICAgY29udGludWU7XFxcXG4gICAgICAgICAgfVxcXFxuXFxcXG4gICAgICAgICAgbGV0IGludGVyZmFjZUZ1bmNOYW1lID0gbnVsbDtcXFxcblxcXFxuICAgICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcy5faW50ZXJmYWNlKSB7XFxcXG4gICAgICAgICAgICBpZiAodGhpcy5faW50ZXJmYWNlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XFxcXG4gICAgICAgICAgICAgIGlmIChuYW1lLnN0YXJ0c1dpdGgoXFxcXFxcXCJfXFxcXFxcXCIpKSBjb250aW51ZTtcXFxcblxcXFxuICAgICAgICAgICAgICBpZiAodGhpcy5faW50ZXJmYWNlW25hbWVdID09PSB2KSB7XFxcXG4gICAgICAgICAgICAgICAgaW50ZXJmYWNlRnVuY05hbWUgPSBuYW1lO1xcXFxuICAgICAgICAgICAgICAgIGJyZWFrO1xcXFxuICAgICAgICAgICAgICB9XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICAgICAgfSAvLyBzZWFyY2ggZm9yIHByb3RvdHlwZXNcXFxcblxcXFxuXFxcXG4gICAgICAgICAgdmFyIGZ1bmN0aW9ucyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzLl9pbnRlcmZhY2UpKTtcXFxcblxcXFxuICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZnVuY3Rpb25zLmxlbmd0aDsgaSsrKSB7XFxcXG4gICAgICAgICAgICB2YXIgbmFtZV8gPSBmdW5jdGlvbnNbaV07XFxcXG4gICAgICAgICAgICBpZiAobmFtZV8uc3RhcnRzV2l0aChcXFxcXFxcIl9cXFxcXFxcIikpIGNvbnRpbnVlO1xcXFxuXFxcXG4gICAgICAgICAgICBpZiAodGhpcy5faW50ZXJmYWNlW25hbWVfXSA9PT0gdikge1xcXFxuICAgICAgICAgICAgICBpbnRlcmZhY2VGdW5jTmFtZSA9IG5hbWVfO1xcXFxuICAgICAgICAgICAgICBicmVhaztcXFxcbiAgICAgICAgICAgIH1cXFxcbiAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICBpZiAoIWludGVyZmFjZUZ1bmNOYW1lKSB7XFxcXG4gICAgICAgICAgICB2YXIgaWQgPSB0aGlzLl9zdG9yZS5wdXQodik7XFxcXG5cXFxcbiAgICAgICAgICAgIGJPYmplY3Rba10gPSB7XFxcXG4gICAgICAgICAgICAgIF9famFpbGVkX3R5cGVfXzogXFxcXFxcXCJjYWxsYmFja1xcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICBfX3ZhbHVlX186IHYuY29uc3RydWN0b3IgJiYgdi5jb25zdHJ1Y3Rvci5uYW1lIHx8IGlkLFxcXFxuICAgICAgICAgICAgICBudW06IGlkXFxcXG4gICAgICAgICAgICB9O1xcXFxuICAgICAgICAgIH0gZWxzZSB7XFxcXG4gICAgICAgICAgICBiT2JqZWN0W2tdID0ge1xcXFxuICAgICAgICAgICAgICBfX2phaWxlZF90eXBlX186IFxcXFxcXFwiaW50ZXJmYWNlXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgIF9fdmFsdWVfXzogaW50ZXJmYWNlRnVuY05hbWUsXFxcXG4gICAgICAgICAgICAgIG51bTogbnVsbFxcXFxuICAgICAgICAgICAgfTtcXFxcbiAgICAgICAgICB9XFxcXG4gICAgICAgIH0gZWxzZSBpZiAoXFxcXG4gICAgICAgIC8qZ2xvYmFsIHRmKi9cXFxcbiAgICAgICAgdHlwZW9mIHRmICE9PSBcXFxcXFxcInVuZGVmaW5lZFxcXFxcXFwiICYmIHRmLlRlbnNvciAmJiB2IGluc3RhbmNlb2YgdGYuVGVuc29yKSB7XFxcXG4gICAgICAgICAgY29uc3Qgdl9idWZmZXIgPSB2LmRhdGFTeW5jKCk7XFxcXG5cXFxcbiAgICAgICAgICBpZiAodi5fdHJhbnNmZXIgfHwgX3RyYW5zZmVyKSB7XFxcXG4gICAgICAgICAgICB0cmFuc2ZlcmFibGVzLnB1c2godl9idWZmZXIuYnVmZmVyKTtcXFxcbiAgICAgICAgICAgIGRlbGV0ZSB2Ll90cmFuc2ZlcjtcXFxcbiAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICBiT2JqZWN0W2tdID0ge1xcXFxuICAgICAgICAgICAgX19qYWlsZWRfdHlwZV9fOiBcXFxcXFxcIm5kYXJyYXlcXFxcXFxcIixcXFxcbiAgICAgICAgICAgIF9fdmFsdWVfXzogdl9idWZmZXIsXFxcXG4gICAgICAgICAgICBfX3NoYXBlX186IHYuc2hhcGUsXFxcXG4gICAgICAgICAgICBfX2R0eXBlX186IHYuZHR5cGVcXFxcbiAgICAgICAgICB9O1xcXFxuICAgICAgICB9IGVsc2UgaWYgKFxcXFxuICAgICAgICAvKmdsb2JhbCBuaiovXFxcXG4gICAgICAgIHR5cGVvZiBuaiAhPT0gXFxcXFxcXCJ1bmRlZmluZWRcXFxcXFxcIiAmJiBuai5OZEFycmF5ICYmIHYgaW5zdGFuY2VvZiBuai5OZEFycmF5KSB7XFxcXG4gICAgICAgICAgdmFyIGR0eXBlID0gX3V0aWxzX2pzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXFxcXFxcXCJ0eXBlZEFycmF5VG9EdHlwZVxcXFxcXFwiXVt2LnNlbGVjdGlvbi5kYXRhLmNvbnN0cnVjdG9yLm5hbWVdO1xcXFxuXFxcXG4gICAgICAgICAgaWYgKHYuX3RyYW5zZmVyIHx8IF90cmFuc2Zlcikge1xcXFxuICAgICAgICAgICAgdHJhbnNmZXJhYmxlcy5wdXNoKHYuc2VsZWN0aW9uLmRhdGEuYnVmZmVyKTtcXFxcbiAgICAgICAgICAgIGRlbGV0ZSB2Ll90cmFuc2ZlcjtcXFxcbiAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICBiT2JqZWN0W2tdID0ge1xcXFxuICAgICAgICAgICAgX19qYWlsZWRfdHlwZV9fOiBcXFxcXFxcIm5kYXJyYXlcXFxcXFxcIixcXFxcbiAgICAgICAgICAgIF9fdmFsdWVfXzogdi5zZWxlY3Rpb24uZGF0YSxcXFxcbiAgICAgICAgICAgIF9fc2hhcGVfXzogdi5zaGFwZSxcXFxcbiAgICAgICAgICAgIF9fZHR5cGVfXzogZHR5cGVcXFxcbiAgICAgICAgICB9O1xcXFxuICAgICAgICB9IGVsc2UgaWYgKHYgaW5zdGFuY2VvZiBFcnJvcikge1xcXFxuICAgICAgICAgIGNvbnNvbGUuZXJyb3Iodik7XFxcXG4gICAgICAgICAgYk9iamVjdFtrXSA9IHtcXFxcbiAgICAgICAgICAgIF9famFpbGVkX3R5cGVfXzogXFxcXFxcXCJlcnJvclxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgX192YWx1ZV9fOiB2LnRvU3RyaW5nKClcXFxcbiAgICAgICAgICB9O1xcXFxuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBGaWxlICE9PSBcXFxcXFxcInVuZGVmaW5lZFxcXFxcXFwiICYmIHYgaW5zdGFuY2VvZiBGaWxlKSB7XFxcXG4gICAgICAgICAgYk9iamVjdFtrXSA9IHtcXFxcbiAgICAgICAgICAgIF9famFpbGVkX3R5cGVfXzogXFxcXFxcXCJmaWxlXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICBfX3ZhbHVlX186IHYsXFxcXG4gICAgICAgICAgICBfX3JlbGF0aXZlX3BhdGhfXzogdi5yZWxhdGl2ZVBhdGggfHwgdi53ZWJraXRSZWxhdGl2ZVBhdGhcXFxcbiAgICAgICAgICB9O1xcXFxuICAgICAgICB9IC8vIHNlbmQgb2JqZWN0cyBzdXBwb3J0ZWQgYnkgc3RydWN0dXJlIGNsb25lIGFsZ29yaXRobVxcXFxuICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2ViX1dvcmtlcnNfQVBJL1N0cnVjdHVyZWRfY2xvbmVfYWxnb3JpdGhtXFxcXG4gICAgICAgIGVsc2UgaWYgKHYgIT09IE9iamVjdCh2KSB8fCB2IGluc3RhbmNlb2YgQm9vbGVhbiB8fCB2IGluc3RhbmNlb2YgU3RyaW5nIHx8IHYgaW5zdGFuY2VvZiBEYXRlIHx8IHYgaW5zdGFuY2VvZiBSZWdFeHAgfHwgdiBpbnN0YW5jZW9mIEJsb2IgfHwgdiBpbnN0YW5jZW9mIEltYWdlRGF0YSB8fCB0eXBlb2YgRmlsZUxpc3QgIT09IFxcXFxcXFwidW5kZWZpbmVkXFxcXFxcXCIgJiYgdiBpbnN0YW5jZW9mIEZpbGVMaXN0KSB7XFxcXG4gICAgICAgICAgICBiT2JqZWN0W2tdID0ge1xcXFxuICAgICAgICAgICAgICBfX2phaWxlZF90eXBlX186IFxcXFxcXFwiYXJndW1lbnRcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgX192YWx1ZV9fOiB2XFxcXG4gICAgICAgICAgICB9O1xcXFxuICAgICAgICAgIH0gZWxzZSBpZiAodiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSB7XFxcXG4gICAgICAgICAgICBpZiAodi5fdHJhbnNmZXIgfHwgX3RyYW5zZmVyKSB7XFxcXG4gICAgICAgICAgICAgIHRyYW5zZmVyYWJsZXMucHVzaCh2KTtcXFxcbiAgICAgICAgICAgICAgZGVsZXRlIHYuX3RyYW5zZmVyO1xcXFxuICAgICAgICAgICAgfVxcXFxuXFxcXG4gICAgICAgICAgICBiT2JqZWN0W2tdID0ge1xcXFxuICAgICAgICAgICAgICBfX2phaWxlZF90eXBlX186IFxcXFxcXFwiYXJndW1lbnRcXFxcXFxcIixcXFxcbiAgICAgICAgICAgICAgX192YWx1ZV9fOiB2XFxcXG4gICAgICAgICAgICB9O1xcXFxuICAgICAgICAgIH0gZWxzZSBpZiAodiBpbnN0YW5jZW9mIEFycmF5QnVmZmVyVmlldykge1xcXFxuICAgICAgICAgICAgaWYgKHYuX3RyYW5zZmVyIHx8IF90cmFuc2Zlcikge1xcXFxuICAgICAgICAgICAgICB0cmFuc2ZlcmFibGVzLnB1c2godi5idWZmZXIpO1xcXFxuICAgICAgICAgICAgICBkZWxldGUgdi5fdHJhbnNmZXI7XFxcXG4gICAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICAgIGJPYmplY3Rba10gPSB7XFxcXG4gICAgICAgICAgICAgIF9famFpbGVkX3R5cGVfXzogXFxcXFxcXCJhcmd1bWVudFxcXFxcXFwiLFxcXFxuICAgICAgICAgICAgICBfX3ZhbHVlX186IHZcXFxcbiAgICAgICAgICAgIH07XFxcXG4gICAgICAgICAgfSAvLyBUT0RPOiBzdXBwb3J0IGFsc28gTWFwIGFuZCBTZXRcXFxcbiAgICAgICAgICAvLyBUT0RPOiBhdm9pZCBvYmplY3Qgc3VjaCBhcyBEeW5hbWljUGx1Z2luIGluc3RhbmNlLlxcXFxuICAgICAgICAgIGVsc2UgaWYgKHYuX19hc19pbnRlcmZhY2VfXykge1xcXFxuICAgICAgICAgICAgICBiT2JqZWN0W2tdID0gdGhpcy5fZW5jb2RlKHYsIHRydWUpO1xcXFxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdiA9PT0gXFxcXFxcXCJvYmplY3RcXFxcXFxcIiB8fCBBcnJheS5pc0FycmF5KHYpKSB7XFxcXG4gICAgICAgICAgICAgIGJPYmplY3Rba10gPSB0aGlzLl9lbmNvZGUodiwgYXNfaW50ZXJmYWNlKTsgLy8gbW92ZSB0cmFuc2ZlcmFibGVzIHRvIHRoZSB0b3AgbGV2ZWwgb2JqZWN0XFxcXG5cXFxcbiAgICAgICAgICAgICAgaWYgKGJPYmplY3Rba10uX190cmFuc2ZlcmFibGVzX18pIHtcXFxcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB0ID0gMDsgdCA8IGJPYmplY3Rba10uX190cmFuc2ZlcmFibGVzX18ubGVuZ3RoOyB0KyspIHtcXFxcbiAgICAgICAgICAgICAgICAgIHRyYW5zZmVyYWJsZXMucHVzaChiT2JqZWN0W2tdLl9fdHJhbnNmZXJhYmxlc19fW3RdKTtcXFxcbiAgICAgICAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICAgICAgICBkZWxldGUgYk9iamVjdFtrXS5fX3RyYW5zZmVyYWJsZXNfXztcXFxcbiAgICAgICAgICAgICAgfVxcXFxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdiA9PT0gXFxcXFxcXCJvYmplY3RcXFxcXFxcIiAmJiB2LmNvbnN0cnVjdG9yKSB7XFxcXG4gICAgICAgICAgICAgIHRocm93IFxcXFxcXFwiVW5zdXBwb3J0ZWQgZGF0YSB0eXBlIGZvciB0cmFuc2ZlcnJpbmcgYmV0d2VlbiB0aGUgcGx1Z2luIGFuZCB0aGUgbWFpbiBhcHA6IFxcXFxcXFwiICsgayArIFxcXFxcXFwiIDogXFxcXFxcXCIgKyB2LmNvbnN0cnVjdG9yLm5hbWU7XFxcXG4gICAgICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgICAgICB0aHJvdyBcXFxcXFxcIlVuc3VwcG9ydGVkIGRhdGEgdHlwZSBmb3IgdHJhbnNmZXJyaW5nIGJldHdlZW4gdGhlIHBsdWdpbiBhbmQgdGhlIG1haW4gYXBwOiBcXFxcXFxcIiArIGsgKyBcXFxcXFxcIixcXFxcXFxcIiArIHY7XFxcXG4gICAgICAgICAgICB9XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgaWYgKHRyYW5zZmVyYWJsZXMubGVuZ3RoID4gMCkge1xcXFxuICAgICAgYk9iamVjdC5fX3RyYW5zZmVyYWJsZXNfXyA9IHRyYW5zZmVyYWJsZXM7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgcmV0dXJuIGJPYmplY3Q7XFxcXG4gIH1cXFxcblxcXFxuICBfZGVjb2RlKGFPYmplY3QsIGNhbGxiYWNrSWQsIHdpdGhQcm9taXNlKSB7XFxcXG4gICAgaWYgKCFhT2JqZWN0KSB7XFxcXG4gICAgICByZXR1cm4gYU9iamVjdDtcXFxcbiAgICB9XFxcXG5cXFxcbiAgICB2YXIgYk9iamVjdCwgdiwgaztcXFxcblxcXFxuICAgIGlmIChhT2JqZWN0Lmhhc093blByb3BlcnR5KFxcXFxcXFwiX19qYWlsZWRfdHlwZV9fXFxcXFxcXCIpICYmIGFPYmplY3QuaGFzT3duUHJvcGVydHkoXFxcXFxcXCJfX3ZhbHVlX19cXFxcXFxcIikpIHtcXFxcbiAgICAgIGlmIChhT2JqZWN0Ll9famFpbGVkX3R5cGVfXy5zdGFydHNXaXRoKFxcXFxcXFwiY3VzdG9tX2VuY29kaW5nXFxcXFxcXCIpKSB7XFxcXG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5faW50ZXJmYWNlLl9ycGNEZWNvZGUgPT09IFxcXFxcXFwiZnVuY3Rpb25cXFxcXFxcIikge1xcXFxuICAgICAgICAgIGNvbnN0IGRlY29kZWRPYmogPSB0aGlzLl9pbnRlcmZhY2UuX3JwY0RlY29kZShhT2JqZWN0Ll9fdmFsdWVfXyk7XFxcXG5cXFxcbiAgICAgICAgICBiT2JqZWN0ID0gZGVjb2RlZE9iajtcXFxcbiAgICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgICBiT2JqZWN0ID0gYU9iamVjdDtcXFxcbiAgICAgICAgfVxcXFxuICAgICAgfSBlbHNlIGlmIChhT2JqZWN0Ll9famFpbGVkX3R5cGVfXyA9PT0gXFxcXFxcXCJjYWxsYmFja1xcXFxcXFwiKSB7XFxcXG4gICAgICAgIGJPYmplY3QgPSB0aGlzLl9nZW5SZW1vdGVDYWxsYmFjayhjYWxsYmFja0lkLCBhT2JqZWN0Lm51bSwgd2l0aFByb21pc2UpO1xcXFxuICAgICAgfSBlbHNlIGlmIChhT2JqZWN0Ll9famFpbGVkX3R5cGVfXyA9PT0gXFxcXFxcXCJpbnRlcmZhY2VcXFxcXFxcIikge1xcXFxuICAgICAgICBiT2JqZWN0ID0gdGhpcy5fcmVtb3RlW2FPYmplY3QuX192YWx1ZV9fXSB8fCB0aGlzLl9nZW5SZW1vdGVNZXRob2QoYU9iamVjdC5fX3ZhbHVlX18pO1xcXFxuICAgICAgfSBlbHNlIGlmIChhT2JqZWN0Ll9famFpbGVkX3R5cGVfXyA9PT0gXFxcXFxcXCJwbHVnaW5faW50ZXJmYWNlXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgYk9iamVjdCA9IHRoaXMuX2dlblJlbW90ZU1ldGhvZChhT2JqZWN0Ll9fdmFsdWVfXywgYU9iamVjdC5fX3BsdWdpbl9pZF9fKTtcXFxcbiAgICAgIH0gZWxzZSBpZiAoYU9iamVjdC5fX2phaWxlZF90eXBlX18gPT09IFxcXFxcXFwibmRhcnJheVxcXFxcXFwiKSB7XFxcXG4gICAgICAgIC8qZ2xvYmFsIG5qIHRmKi9cXFxcbiAgICAgICAgLy9jcmVhdGUgYnVpbGQgYXJyYXkvdGVuc29yIGlmIHVzZWQgaW4gdGhlIHBsdWdpblxcXFxuICAgICAgICBpZiAodGhpcy5pZCA9PT0gXFxcXFxcXCJfX3BsdWdpbl9fXFxcXFxcXCIgJiYgdHlwZW9mIG5qICE9PSBcXFxcXFxcInVuZGVmaW5lZFxcXFxcXFwiICYmIG5qLmFycmF5KSB7XFxcXG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYU9iamVjdC5fX3ZhbHVlX18pKSB7XFxcXG4gICAgICAgICAgICBhT2JqZWN0Ll9fdmFsdWVfXyA9IGFPYmplY3QuX192YWx1ZV9fLnJlZHVjZShfYXBwZW5kQnVmZmVyKTtcXFxcbiAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICBiT2JqZWN0ID0gbmouYXJyYXkoYU9iamVjdC5fX3ZhbHVlX18sIGFPYmplY3QuX19kdHlwZV9fKS5yZXNoYXBlKGFPYmplY3QuX19zaGFwZV9fKTtcXFxcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlkID09PSBcXFxcXFxcIl9fcGx1Z2luX19cXFxcXFxcIiAmJiB0eXBlb2YgdGYgIT09IFxcXFxcXFwidW5kZWZpbmVkXFxcXFxcXCIgJiYgdGYuVGVuc29yKSB7XFxcXG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYU9iamVjdC5fX3ZhbHVlX18pKSB7XFxcXG4gICAgICAgICAgICBhT2JqZWN0Ll9fdmFsdWVfXyA9IGFPYmplY3QuX192YWx1ZV9fLnJlZHVjZShfYXBwZW5kQnVmZmVyKTtcXFxcbiAgICAgICAgICB9XFxcXG5cXFxcbiAgICAgICAgICBiT2JqZWN0ID0gdGYudGVuc29yKGFPYmplY3QuX192YWx1ZV9fLCBhT2JqZWN0Ll9fc2hhcGVfXywgYU9iamVjdC5fX2R0eXBlX18pO1xcXFxuICAgICAgICB9IGVsc2Uge1xcXFxuICAgICAgICAgIC8va2VlcCBpdCBhcyByZWd1bGFyIGlmIHRyYW5zZmVyZWQgdG8gdGhlIG1haW4gYXBwXFxcXG4gICAgICAgICAgYk9iamVjdCA9IGFPYmplY3Q7XFxcXG4gICAgICAgIH1cXFxcbiAgICAgIH0gZWxzZSBpZiAoYU9iamVjdC5fX2phaWxlZF90eXBlX18gPT09IFxcXFxcXFwiZXJyb3JcXFxcXFxcIikge1xcXFxuICAgICAgICBiT2JqZWN0ID0gbmV3IEVycm9yKGFPYmplY3QuX192YWx1ZV9fKTtcXFxcbiAgICAgIH0gZWxzZSBpZiAoYU9iamVjdC5fX2phaWxlZF90eXBlX18gPT09IFxcXFxcXFwiZmlsZVxcXFxcXFwiKSB7XFxcXG4gICAgICAgIGJPYmplY3QgPSBhT2JqZWN0Ll9fdmFsdWVfXzsgLy9wYXRjaCByZWxhdGl2ZVBhdGhcXFxcblxcXFxuICAgICAgICBiT2JqZWN0LnJlbGF0aXZlUGF0aCA9IGFPYmplY3QuX19yZWxhdGl2ZV9wYXRoX187XFxcXG4gICAgICB9IGVsc2UgaWYgKGFPYmplY3QuX19qYWlsZWRfdHlwZV9fID09PSBcXFxcXFxcImFyZ3VtZW50XFxcXFxcXCIpIHtcXFxcbiAgICAgICAgYk9iamVjdCA9IGFPYmplY3QuX192YWx1ZV9fO1xcXFxuICAgICAgfVxcXFxuXFxcXG4gICAgICByZXR1cm4gYk9iamVjdDtcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgdmFyIGlzYXJyYXkgPSBBcnJheS5pc0FycmF5KGFPYmplY3QpO1xcXFxuICAgICAgYk9iamVjdCA9IGlzYXJyYXkgPyBbXSA6IHt9O1xcXFxuXFxcXG4gICAgICBmb3IgKGsgaW4gYU9iamVjdCkge1xcXFxuICAgICAgICBpZiAoaXNhcnJheSB8fCBhT2JqZWN0Lmhhc093blByb3BlcnR5KGspKSB7XFxcXG4gICAgICAgICAgdiA9IGFPYmplY3Rba107XFxcXG5cXFxcbiAgICAgICAgICBpZiAodHlwZW9mIHYgPT09IFxcXFxcXFwib2JqZWN0XFxcXFxcXCIgfHwgQXJyYXkuaXNBcnJheSh2KSkge1xcXFxuICAgICAgICAgICAgYk9iamVjdFtrXSA9IHRoaXMuX2RlY29kZSh2LCBjYWxsYmFja0lkLCB3aXRoUHJvbWlzZSk7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9XFxcXG5cXFxcbiAgICAgIHJldHVybiBiT2JqZWN0O1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuXFxcXG4gIF93cmFwKGFyZ3MsIGFzX2ludGVyZmFjZSkge1xcXFxuICAgIHZhciB3cmFwcGVkID0gdGhpcy5fZW5jb2RlKGFyZ3MsIGFzX2ludGVyZmFjZSk7XFxcXG5cXFxcbiAgICB2YXIgcmVzdWx0ID0ge1xcXFxuICAgICAgYXJnczogd3JhcHBlZFxcXFxuICAgIH07XFxcXG4gICAgcmV0dXJuIHJlc3VsdDtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogVW53cmFwcyB0aGUgc2V0IG9mIGFyZ3VtZW50cyBkZWxpdmVyZWQgZnJvbSB0aGUgcmVtb3RlIHNpdGUsXFxcXG4gICAqIHJlcGxhY2VzIGFsbCBjYWxsYmFjayBpZGVudGlmaWVycyB3aXRoIGEgZnVuY3Rpb24gd2hpY2ggd2lsbFxcXFxuICAgKiBpbml0aWF0ZSBzZW5kaW5nIHRoYXQgY2FsbGJhY2sgaWRlbnRpZmllciBiYWNrIHRvIG90aGVyIHNpdGVcXFxcbiAgICpcXFxcbiAgICogQHBhcmFtIHtPYmplY3R9IGFyZ3MgdG8gdW53cmFwXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gd2l0aFByb21pc2UgaXMgdHJ1ZSBtZWFucyB0aGlzIHRoZSBjYWxsYmFjayBzaG91bGQgY29udGFpbiBhIHByb21pc2VcXFxcbiAgICpcXFxcbiAgICogQHJldHVybnMge0FycmF5fSB1bndyYXBwZWQgYXJnc1xcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIF91bndyYXAoYXJncywgd2l0aFByb21pc2UpIHtcXFxcbiAgICAvLyB2YXIgY2FsbGVkID0gZmFsc2U7XFxcXG4gICAgLy8gd3JhcHMgZWFjaCBjYWxsYmFjayBzbyB0aGF0IHRoZSBvbmx5IG9uZSBjb3VsZCBiZSBjYWxsZWRcXFxcbiAgICAvLyB2YXIgb25jZShjYikge1xcXFxuICAgIC8vICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XFxcXG4gICAgLy8gICAgICAgICBpZiAoIWNhbGxlZCkge1xcXFxuICAgIC8vICAgICAgICAgICAgIGNhbGxlZCA9IHRydWU7XFxcXG4gICAgLy8gICAgICAgICAgICAgcmV0dXJuIGNiLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XFxcXG4gICAgLy8gICAgICAgICB9IGVsc2Uge1xcXFxuICAgIC8vICAgICAgICAgICAgIHZhciBtc2cgPVxcXFxuICAgIC8vICAgICAgICAgICAgICAgJ0EgY2FsbGJhY2sgZnJvbSB0aGlzIHNldCBoYXMgYWxyZWFkeSBiZWVuIGV4ZWN1dGVkJztcXFxcbiAgICAvLyAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcXFxcbiAgICAvLyAgICAgICAgIH1cXFxcbiAgICAvLyAgICAgfTtcXFxcbiAgICAvLyB9XFxcXG4gICAgdmFyIHJlc3VsdCA9IHRoaXMuX2RlY29kZShhcmdzLmFyZ3MsIGFyZ3MuY2FsbGJhY2tJZCwgd2l0aFByb21pc2UpO1xcXFxuXFxcXG4gICAgcmV0dXJuIHJlc3VsdDtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogR2VuZXJhdGVzIHRoZSB3cmFwcGVkIGZ1bmN0aW9uIGNvcnJlc3BvbmRpbmcgdG8gYSBzaW5nbGUgcmVtb3RlXFxcXG4gICAqIGNhbGxiYWNrLiBXaGVuIHRoZSBnZW5lcmF0ZWQgZnVuY3Rpb24gaXMgY2FsbGVkLCBpdCB3aWxsIHNlbmRcXFxcbiAgICogdGhlIGNvcnJlc3BvbmRpbmcgbWVzc2FnZSB0byB0aGUgcmVtb3RlIHNpdGUgYXNraW5nIGl0IHRvXFxcXG4gICAqIGV4ZWN1dGUgdGhlIHBhcnRpY3VsYXIgY2FsbGJhY2sgcHJldmlvdXNseSBzYXZlZCBkdXJpbmcgYSBjYWxsXFxcXG4gICAqIGJ5IHRoZSByZW1vdGUgc2l0ZSBhIG1ldGhvZCBmcm9tIHRoZSBpbnRlcmZhY2Ugb2YgdGhpcyBzaXRlXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpZCBvZiB0aGUgcmVtb3RlIGNhbGxiYWNrIHRvIGV4ZWN1dGVcXFxcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGFyZ051bSBhcmd1bWVudCBpbmRleCBvZiB0aGUgY2FsbGJhY2tcXFxcbiAgICogQHBhcmFtIHtCb29sZWFufSB3aXRoUHJvbWlzZSBpcyB0cnVlIG1lYW5zIHRoaXMgdGhlIGNhbGxiYWNrIHNob3VsZCBjb250YWluIGEgcHJvbWlzZVxcXFxuICAgKlxcXFxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IHdyYXBwZWQgcmVtb3RlIGNhbGxiYWNrXFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgX2dlblJlbW90ZUNhbGxiYWNrKGlkLCBhcmdOdW0sIHdpdGhQcm9taXNlKSB7XFxcXG4gICAgdmFyIG1lID0gdGhpcztcXFxcbiAgICB2YXIgcmVtb3RlQ2FsbGJhY2s7XFxcXG5cXFxcbiAgICBpZiAod2l0aFByb21pc2UpIHtcXFxcbiAgICAgIHJlbW90ZUNhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xcXFxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xcXFxuICAgICAgICAgIHZhciBhcmdzID0gbWUuX3dyYXAoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XFxcXG5cXFxcbiAgICAgICAgICB2YXIgdHJhbnNmZXJhYmxlcyA9IGFyZ3MuYXJncy5fX3RyYW5zZmVyYWJsZXNfXztcXFxcbiAgICAgICAgICBpZiAodHJhbnNmZXJhYmxlcykgZGVsZXRlIGFyZ3MuYXJncy5fX3RyYW5zZmVyYWJsZXNfXztcXFxcbiAgICAgICAgICByZXNvbHZlLl9famFpbGVkX3BhaXJzX18gPSByZWplY3Q7XFxcXG4gICAgICAgICAgcmVqZWN0Ll9famFpbGVkX3BhaXJzX18gPSByZXNvbHZlO1xcXFxuXFxcXG4gICAgICAgICAgdHJ5IHtcXFxcbiAgICAgICAgICAgIG1lLl9jb25uZWN0aW9uLnNlbmQoe1xcXFxuICAgICAgICAgICAgICB0eXBlOiBcXFxcXFxcImNhbGxiYWNrXFxcXFxcXCIsXFxcXG4gICAgICAgICAgICAgIGlkOiBpZCxcXFxcbiAgICAgICAgICAgICAgbnVtOiBhcmdOdW0sXFxcXG4gICAgICAgICAgICAgIGFyZ3M6IGFyZ3MsXFxcXG4gICAgICAgICAgICAgIC8vIHBpZCA6ICBtZS5pZCxcXFxcbiAgICAgICAgICAgICAgcHJvbWlzZTogbWUuX3dyYXAoW3Jlc29sdmUsIHJlamVjdF0pXFxcXG4gICAgICAgICAgICB9LCB0cmFuc2ZlcmFibGVzKTtcXFxcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XFxcXG4gICAgICAgICAgICByZWplY3QoYEZhaWxlZCB0byBleGVjdHVlIHJlbW90ZSBjYWxsYmFjayAoaWQ6ICR7aWR9LCBhcmdOdW06ICR7YXJnTnVtfSkuYCk7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9KTtcXFxcbiAgICAgIH07XFxcXG5cXFxcbiAgICAgIHJldHVybiByZW1vdGVDYWxsYmFjaztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgcmVtb3RlQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XFxcXG4gICAgICAgIHZhciBhcmdzID0gbWUuX3dyYXAoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7XFxcXG5cXFxcbiAgICAgICAgdmFyIHRyYW5zZmVyYWJsZXMgPSBhcmdzLmFyZ3MuX190cmFuc2ZlcmFibGVzX187XFxcXG4gICAgICAgIGlmICh0cmFuc2ZlcmFibGVzKSBkZWxldGUgYXJncy5hcmdzLl9fdHJhbnNmZXJhYmxlc19fO1xcXFxuICAgICAgICByZXR1cm4gbWUuX2Nvbm5lY3Rpb24uc2VuZCh7XFxcXG4gICAgICAgICAgdHlwZTogXFxcXFxcXCJjYWxsYmFja1xcXFxcXFwiLFxcXFxuICAgICAgICAgIGlkOiBpZCxcXFxcbiAgICAgICAgICBudW06IGFyZ051bSxcXFxcbiAgICAgICAgICBhcmdzOiBhcmdzIC8vIHBpZCA6ICBtZS5pZFxcXFxuXFxcXG4gICAgICAgIH0sIHRyYW5zZmVyYWJsZXMpO1xcXFxuICAgICAgfTtcXFxcblxcXFxuICAgICAgcmV0dXJuIHJlbW90ZUNhbGxiYWNrO1xcXFxuICAgIH1cXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogU2VuZHMgdGhlIG5vdGlmaWNhdGlvbiBtZXNzYWdlIGFuZCBicmVha3MgdGhlIGNvbm5lY3Rpb25cXFxcbiAgICovXFxcXG5cXFxcblxcXFxuICBkaXNjb25uZWN0KCkge1xcXFxuICAgIHRoaXMuX2Nvbm5lY3Rpb24uc2VuZCh7XFxcXG4gICAgICB0eXBlOiBcXFxcXFxcImRpc2Nvbm5lY3RcXFxcXFxcIlxcXFxuICAgIH0pO1xcXFxuXFxcXG4gICAgc2V0VGltZW91dCh0aGlzLl9jb25uZWN0aW9uLmRpc2Nvbm5lY3QsIDIwMDApO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBTZXQgYSBoYW5kbGVyIHRvIGJlIGNhbGxlZCB3aGVuIHJlY2VpdmVkIGEgZGlzY29ubmVjdCBtZXNzYWdlXFxcXG4gICAqIGZyb20gdGhlIHJlbW90ZSBzaXRlXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcXFxcbiAgICovXFxcXG5cXFxcblxcXFxuICBvbkRpc2Nvbm5lY3QoaGFuZGxlcikge1xcXFxuICAgIHRoaXMuX2Rpc2Nvbm5lY3RIYW5kbGVyID0gaGFuZGxlcjtcXFxcbiAgfVxcXFxuXFxcXG59XFxcXG4vKipcXFxcbiAqIFJlZmVyZW5jZVN0b3JlIGlzIGEgc3BlY2lhbCBvYmplY3Qgd2hpY2ggc3RvcmVzIG90aGVyIG9iamVjdHNcXFxcbiAqIGFuZCBwcm92aWRlcyB0aGUgcmVmZXJlbmNlcyAobnVtYmVyKSBpbnN0ZWFkLiBUaGlzIHJlZmVyZW5jZVxcXFxuICogbWF5IHRoZW4gYmUgc2VudCBvdmVyIGEganNvbi1iYXNlZCBjb21tdW5pY2F0aW9uIGNoYW5uZWwgKElQQ1xcXFxuICogdG8gYW5vdGhlciBOb2RlLmpzIHByb2Nlc3Mgb3IgYSBtZXNzYWdlIHRvIHRoZSBXb3JrZXIpLiBPdGhlclxcXFxuICogc2l0ZSBtYXkgdGhlbiBwcm92aWRlIHRoZSByZWZlcmVuY2UgaW4gdGhlIHJlc3BvbmNlIG1lc3NhZ2VcXFxcbiAqIGltcGx5aW5nIHRoZSBnaXZlbiBvYmplY3Qgc2hvdWxkIGJlIGFjdGl2YXRlZC5cXFxcbiAqXFxcXG4gKiBQcmltYXJ5IHVzYWdlIGZvciB0aGUgUmVmZXJlbmNlU3RvcmUgaXMgYSBzdG9yYWdlIGZvciB0aGVcXFxcbiAqIGNhbGxiYWNrcywgd2hpY2ggdGhlcmVmb3JlIG1ha2VzIGl0IHBvc3NpYmxlIHRvIGluaXRpYXRlIGFcXFxcbiAqIGNhbGxiYWNrIGV4ZWN1dGlvbiBieSB0aGUgb3Bwb3NpdGUgc2l0ZSAod2hpY2ggbm9ybWFsbHkgY2Fubm90XFxcXG4gKiBkaXJlY3RseSBleGVjdXRlIGZ1bmN0aW9ucyBvdmVyIHRoZSBjb21tdW5pY2F0aW9uIGNoYW5uZWwpLlxcXFxuICpcXFxcbiAqIEVhY2ggc3RvcmVkIG9iamVjdCBjYW4gb25seSBiZSBmZXRjaGVkIG9uY2UgYW5kIGlzIG5vdFxcXFxuICogYXZhaWxhYmxlIGZvciB0aGUgc2Vjb25kIHRpbWUuIEVhY2ggc3RvcmVkIG9iamVjdCBtdXN0IGJlXFxcXG4gKiBmZXRjaGVkLCBzaW5jZSBvdGhlcndpc2UgaXQgd2lsbCByZW1haW4gc3RvcmVkIGZvcmV2ZXIgYW5kXFxcXG4gKiBjb25zdW1lIG1lbW9yeS5cXFxcbiAqXFxcXG4gKiBTdG9yZWQgb2JqZWN0IGluZGVjZXMgYXJlIHNpbXBseSB0aGUgbnVtYmVycywgd2hpY2ggYXJlIGhvd2V2ZXJcXFxcbiAqIHJlbGVhc2VkIGFsb25nIHdpdGggdGhlIG9iamVjdHMsIGFuZCBhcmUgbGF0ZXIgcmV1c2VkIGFnYWluIChpblxcXFxuICogb3JkZXIgdG8gcG9zdHBvbmUgdGhlIG92ZXJmbG93LCB3aGljaCBzaG91bGQgbm90IGxpa2VseSBoYXBwZW4sXFxcXG4gKiBidXQgYW55d2F5KS5cXFxcbiAqL1xcXFxuXFxcXG5jbGFzcyBSZWZlcmVuY2VTdG9yZSB7XFxcXG4gIGNvbnN0cnVjdG9yKCkge1xcXFxuICAgIHRoaXMuX3N0b3JlID0ge307IC8vIHN0b3JlZCBvYmplY3RcXFxcblxcXFxuICAgIHRoaXMuX2luZGljZXMgPSBbMF07IC8vIHNtYWxsZXN0IGF2YWlsYWJsZSBpbmRpY2VzXFxcXG5cXFxcbiAgICB0aGlzLl9yZWFkeUhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7fTtcXFxcblxcXFxuICAgIHRoaXMuX2J1c3lIYW5kbGVyID0gZnVuY3Rpb24gKCkge307XFxcXG5cXFxcbiAgICB0aGlzLl9yZWFkeUhhbmRsZXIoKTtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogY2FsbCBoYW5kbGVyIHdoZW4gdGhlIHN0b3JlIGlzIGVtcHR5XFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7RlVOQ1RJT059IGlkIG9mIGEgaGFuZGxlclxcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIG9uUmVhZHkocmVhZHlIYW5kbGVyKSB7XFxcXG4gICAgdGhpcy5fcmVhZHlIYW5kbGVyID0gcmVhZHlIYW5kbGVyIHx8IGZ1bmN0aW9uICgpIHt9O1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBjYWxsIGhhbmRsZXIgd2hlbiB0aGUgc3RvcmUgaXMgbm90IGVtcHR5XFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7RlVOQ1RJT059IGlkIG9mIGEgaGFuZGxlclxcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIG9uQnVzeShidXN5SGFuZGxlcikge1xcXFxuICAgIHRoaXMuX2J1c3lIYW5kbGVyID0gYnVzeUhhbmRsZXIgfHwgZnVuY3Rpb24gKCkge307XFxcXG4gIH1cXFxcbiAgLyoqXFxcXG4gICAqIGdldCB0aGUgbGVuZ3RoIG9mIHRoZSBzdG9yZVxcXFxuICAgKlxcXFxuICAgKi9cXFxcblxcXFxuXFxcXG4gIGdldFN0YWNrKCkge1xcXFxuICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLl9zdG9yZSkubGVuZ3RoO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBAZnVuY3Rpb24gX2dlbklkKCkgZ2VuZXJhdGVzIHRoZSBuZXcgcmVmZXJlbmNlIGlkXFxcXG4gICAqXFxcXG4gICAqIEByZXR1cm5zIHtOdW1iZXJ9IHNtYWxsZXN0IGF2YWlsYWJsZSBpZCBhbmQgcmVzZXJ2ZXMgaXRcXFxcbiAgICovXFxcXG5cXFxcblxcXFxuICBfZ2VuSWQoKSB7XFxcXG4gICAgdmFyIGlkO1xcXFxuXFxcXG4gICAgaWYgKHRoaXMuX2luZGljZXMubGVuZ3RoID09PSAxKSB7XFxcXG4gICAgICBpZCA9IHRoaXMuX2luZGljZXNbMF0rKztcXFxcbiAgICB9IGVsc2Uge1xcXFxuICAgICAgaWQgPSB0aGlzLl9pbmRpY2VzLnNoaWZ0KCk7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgcmV0dXJuIGlkO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBSZWxlYXNlcyB0aGUgZ2l2ZW4gcmVmZXJlbmNlIGlkIHNvIHRoYXQgaXQgd2lsbCBiZSBhdmFpbGFibGUgYnlcXFxcbiAgICogYW5vdGhlciBvYmplY3Qgc3RvcmVkXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpZCB0byByZWxlYXNlXFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgX3JlbGVhc2VJZChpZCkge1xcXFxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5faW5kaWNlcy5sZW5ndGg7IGkrKykge1xcXFxuICAgICAgaWYgKGlkIDwgdGhpcy5faW5kaWNlc1tpXSkge1xcXFxuICAgICAgICB0aGlzLl9pbmRpY2VzLnNwbGljZShpLCAwLCBpZCk7XFxcXG5cXFxcbiAgICAgICAgYnJlYWs7XFxcXG4gICAgICB9XFxcXG4gICAgfSAvLyBjbGVhbmluZy11cCB0aGUgc2VxdWVuY2UgdGFpbFxcXFxuXFxcXG5cXFxcbiAgICBmb3IgKGkgPSB0aGlzLl9pbmRpY2VzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XFxcXG4gICAgICBpZiAodGhpcy5faW5kaWNlc1tpXSAtIDEgPT09IHRoaXMuX2luZGljZXNbaSAtIDFdKSB7XFxcXG4gICAgICAgIHRoaXMuX2luZGljZXMucG9wKCk7XFxcXG4gICAgICB9IGVsc2Uge1xcXFxuICAgICAgICBicmVhaztcXFxcbiAgICAgIH1cXFxcbiAgICB9XFxcXG4gIH1cXFxcbiAgLyoqXFxcXG4gICAqIFN0b3JlcyB0aGUgZ2l2ZW4gb2JqZWN0IGFuZCByZXR1cm5zIHRoZSByZWZlcm5jZSBpZCBpbnN0ZWFkXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvYmogdG8gc3RvcmVcXFxcbiAgICpcXFxcbiAgICogQHJldHVybnMge051bWJlcn0gcmVmZXJlbmNlIGlkIG9mIHRoZSBzdG9yZWQgb2JqZWN0XFxcXG4gICAqL1xcXFxuXFxcXG5cXFxcbiAgcHV0KG9iaikge1xcXFxuICAgIGlmICh0aGlzLl9idXN5SGFuZGxlciAmJiBPYmplY3Qua2V5cyh0aGlzLl9zdG9yZSkubGVuZ3RoID09PSAwKSB7XFxcXG4gICAgICB0aGlzLl9idXN5SGFuZGxlcigpO1xcXFxuICAgIH1cXFxcblxcXFxuICAgIHZhciBpZCA9IHRoaXMuX2dlbklkKCk7XFxcXG5cXFxcbiAgICB0aGlzLl9zdG9yZVtpZF0gPSBvYmo7XFxcXG4gICAgcmV0dXJuIGlkO1xcXFxuICB9XFxcXG4gIC8qKlxcXFxuICAgKiBSZXRyaWV2ZXMgcHJldmlvdXNseSBzdG9yZWQgb2JqZWN0IGFuZCByZWxlYXNlcyBpdHMgcmVmZXJlbmNlXFxcXG4gICAqXFxcXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpZCBvZiBhbiBvYmplY3QgdG8gcmV0cmlldmVcXFxcbiAgICovXFxcXG5cXFxcblxcXFxuICBmZXRjaChpZCkge1xcXFxuICAgIHZhciBvYmogPSB0aGlzLl9zdG9yZVtpZF07XFxcXG5cXFxcbiAgICBpZiAob2JqICYmICFvYmouX19yZW1vdGVfbWV0aG9kKSB7XFxcXG4gICAgICBkZWxldGUgdGhpcy5fc3RvcmVbaWRdO1xcXFxuXFxcXG4gICAgICB0aGlzLl9yZWxlYXNlSWQoaWQpO1xcXFxuXFxcXG4gICAgICBpZiAodGhpcy5fcmVhZHlIYW5kbGVyICYmIE9iamVjdC5rZXlzKHRoaXMuX3N0b3JlKS5sZW5ndGggPT09IDApIHtcXFxcbiAgICAgICAgdGhpcy5fcmVhZHlIYW5kbGVyKCk7XFxcXG4gICAgICB9XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgaWYgKG9iaiAmJiBvYmouX19qYWlsZWRfcGFpcnNfXykge1xcXFxuICAgICAgY29uc3QgX2lkID0gZ2V0S2V5QnlWYWx1ZSh0aGlzLl9zdG9yZSwgb2JqLl9famFpbGVkX3BhaXJzX18pO1xcXFxuXFxcXG4gICAgICB0aGlzLmZldGNoKF9pZCk7XFxcXG4gICAgfVxcXFxuXFxcXG4gICAgcmV0dXJuIG9iajtcXFxcbiAgfVxcXFxuICAvKipcXFxcbiAgICogUmV0cmlldmVzIHByZXZpb3VzbHkgc3RvcmVkIG9iamVjdFxcXFxuICAgKlxcXFxuICAgKiBAcGFyYW0ge051bWJlcn0gaWQgb2YgYW4gb2JqZWN0IHRvIHJldHJpZXZlXFxcXG4gICAqL1xcXFxuICAvLyByZXRyaWV2ZShpZCkge1xcXFxuICAvLyAgICAgdmFyIG9iaiA9IHRoaXMuX3N0b3JlW2lkXTtcXFxcbiAgLy8gICAgIHJldHVybiBvYmo7XFxcXG4gIC8vIH1cXFxcblxcXFxuXFxcXG59Ly8jIHNvdXJjZVVSTD1bbW9kdWxlXVxcXFxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lMaTl6Y21NdmNuQmpMbXB6TG1weklpd2ljMjkxY21ObGN5STZXeUozWldKd1lXTnJPaTh2YVcxcWIzbFNVRU12YzNKakwzSndZeTVxY3o4eU0yTXlJbDBzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSWk4cUtseHVJQ29nUTI5dWRHRnBibk1nZEdobElGSlFReUJ2WW1wbFkzUWdkWE5sWkNCaWIzUm9JR0o1SUhSb1pTQmhjSEJzYVdOaGRHbHZibHh1SUNvZ2MybDBaU3dnWVc1a0lHSjVJR1ZoWTJnZ2NHeDFaMmx1WEc0Z0tpOWNibWx0Y0c5eWRDQjdJSEpoYm1SSlpDd2dkSGx3WldSQmNuSmhlVlJ2UkhSNWNHVWdmU0JtY205dElGd2lMaTkxZEdsc2N5NXFjMXdpTzF4dVhHNWxlSEJ2Y25RZ1kyOXVjM1FnUVZCSlgxWkZVbE5KVDA0Z1BTQmNJakF1TWk0d1hDSTdYRzVjYm1OdmJuTjBJRUZ5Y21GNVFuVm1abVZ5Vm1sbGR5QTlJRTlpYW1WamRDNW5aWFJRY205MGIzUjVjR1ZQWmloY2JpQWdUMkpxWldOMExtZGxkRkJ5YjNSdmRIbHdaVTltS0c1bGR5QlZhVzUwT0VGeWNtRjVLQ2twWEc0cExtTnZibk4wY25WamRHOXlPMXh1WEc1bWRXNWpkR2x2YmlCZllYQndaVzVrUW5WbVptVnlLR0oxWm1abGNqRXNJR0oxWm1abGNqSXBJSHRjYmlBZ1kyOXVjM1FnZEcxd0lEMGdibVYzSUZWcGJuUTRRWEp5WVhrb1luVm1abVZ5TVM1aWVYUmxUR1Z1WjNSb0lDc2dZblZtWm1WeU1pNWllWFJsVEdWdVozUm9LVHRjYmlBZ2RHMXdMbk5sZENodVpYY2dWV2x1ZERoQmNuSmhlU2hpZFdabVpYSXhLU3dnTUNrN1hHNGdJSFJ0Y0M1elpYUW9ibVYzSUZWcGJuUTRRWEp5WVhrb1luVm1abVZ5TWlrc0lHSjFabVpsY2pFdVlubDBaVXhsYm1kMGFDazdYRzRnSUhKbGRIVnliaUIwYlhBdVluVm1abVZ5TzF4dWZWeHVYRzVtZFc1amRHbHZiaUJuWlhSTFpYbENlVlpoYkhWbEtHOWlhbVZqZEN3Z2RtRnNkV1VwSUh0Y2JpQWdjbVYwZFhKdUlFOWlhbVZqZEM1clpYbHpLRzlpYW1WamRDa3VabWx1WkNoclpYa2dQVDRnYjJKcVpXTjBXMnRsZVYwZ1BUMDlJSFpoYkhWbEtUdGNibjFjYmk4cUtseHVJQ29nVWxCRElHOWlhbVZqZENCeVpYQnlaWE5sYm5SeklHRWdjMmx1WjJ4bElITnBkR1VnYVc0Z2RHaGxYRzRnS2lCamIyMXRkVzVwWTJGMGFXOXVJSEJ5YjNSdlkyOXNJR0psZEhkbFpXNGdkR2hsSUdGd2NHeHBZMkYwYVc5dUlHRnVaQ0IwYUdVZ2NHeDFaMmx1WEc0Z0tseHVJQ29nUUhCaGNtRnRJSHRQWW1wbFkzUjlJR052Ym01bFkzUnBiMjRnWVNCemNHVmphV0ZzSUc5aWFtVmpkQ0JoYkd4dmQybHVaeUIwYnlCelpXNWtYRzRnS2lCaGJtUWdjbVZqWldsMlpTQnRaWE56WVdkbGN5Qm1jbTl0SUhSb1pTQnZjSEJ2YzJsMFpTQnphWFJsSUNoaVlYTnBZMkZzYkhrZ2FYUmNiaUFxSUhOb2IzVnNaQ0J2Ym14NUlIQnliM1pwWkdVZ2MyVnVaQ2dwSUdGdVpDQnZiazFsYzNOaFoyVW9LU0J0WlhSb2IyUnpLVnh1SUNvdlhHNWxlSEJ2Y25RZ1kyeGhjM01nVWxCRElIdGNiaUFnWTI5dWMzUnlkV04wYjNJb1kyOXVibVZqZEdsdmJpd2dZMjl1Wm1sbktTQjdYRzRnSUNBZ2RHaHBjeTVmWTI5dWJtVmpkR2x2YmlBOUlHTnZibTVsWTNScGIyNDdYRzRnSUNBZ2RHaHBjeTVqYjI1bWFXY2dQU0JqYjI1bWFXY2dmSHdnZTMwN1hHNGdJQ0FnZEdocGN5NWZhVzUwWlhKbVlXTmxJRDBnZTMwN1hHNGdJQ0FnZEdocGN5NWZjR3gxWjJsdVgybHVkR1Z5Wm1GalpYTWdQU0I3ZlR0Y2JpQWdJQ0IwYUdsekxsOXlaVzF2ZEdVZ1BTQnVkV3hzTzF4dUlDQWdJSFJvYVhNdVgzSmxiVzkwWlZWd1pHRjBaVWhoYm1Sc1pYSWdQU0JtZFc1amRHbHZiaWdwSUh0OU8xeHVJQ0FnSUhSb2FYTXVYMmRsZEVsdWRHVnlabUZqWlVoaGJtUnNaWElnUFNCbWRXNWpkR2x2YmlncElIdDlPMXh1SUNBZ0lIUm9hWE11WDJsdWRHVnlabUZqWlZObGRFRnpVbVZ0YjNSbFNHRnVaR3hsY2lBOUlHNTFiR3c3WEc0Z0lDQWdkR2hwY3k1ZlpHbHpZMjl1Ym1WamRFaGhibVJzWlhJZ1BTQm1kVzVqZEdsdmJpZ3BJSHQ5TzF4dUlDQWdJSFJvYVhNdVgzTjBiM0psSUQwZ2JtVjNJRkpsWm1WeVpXNWpaVk4wYjNKbEtDazdYRzRnSUNBZ2RHaHBjeTVmYldWMGFHOWtYM0psWm5NZ1BTQnVaWGNnVW1WbVpYSmxibU5sVTNSdmNtVW9LVHRjYmlBZ0lDQjBhR2x6TGw5amIyNXVaV04wYVc5dUlEMGdZMjl1Ym1WamRHbHZianRjYmlBZ0lDQnNaWFFnYldVZ1BTQjBhR2x6TzF4dUlDQWdJSFJvYVhNdVgyTnZibTVsWTNScGIyNHViMjVOWlhOellXZGxLR1oxYm1OMGFXOXVLR1JoZEdFcElIdGNiaUFnSUNBZ0lHMWxMbDl3Y205alpYTnpUV1Z6YzJGblpTaGtZWFJoS1R0Y2JpQWdJQ0I5S1R0Y2JpQWdmVnh1WEc0Z0lDOHFLbHh1SUNBZ0tpQlRaWFFnWVNCb1lXNWtiR1Z5SUhSdklHSmxJR05oYkd4bFpDQjNhR1Z1SUhSb1pTQnlaVzF2ZEdVZ2MybDBaU0IxY0dSaGRHVnpJR2wwYzF4dUlDQWdLaUJwYm5SbGNtWmhZMlZjYmlBZ0lDcGNiaUFnSUNvZ1FIQmhjbUZ0SUh0R2RXNWpkR2x2Ym4wZ2FHRnVaR3hsY2x4dUlDQWdLaTljYmlBZ2IyNVNaVzF2ZEdWVmNHUmhkR1VvYUdGdVpHeGxjaWtnZTF4dUlDQWdJSFJvYVhNdVgzSmxiVzkwWlZWd1pHRjBaVWhoYm1Sc1pYSWdQU0JvWVc1a2JHVnlPMXh1SUNCOVhHNWNiaUFnTHlvcVhHNGdJQ0FxSUZObGRDQmhJR2hoYm1Sc1pYSWdkRzhnWW1VZ1kyRnNiR1ZrSUhkb1pXNGdjbVZqWldsMlpXUWdZU0J5WlhOd2IyNWpaU0JtY205dElIUm9aVnh1SUNBZ0tpQnlaVzF2ZEdVZ2MybDBaU0J5WlhCdmNuUnBibWNnZEdoaGRDQjBhR1VnY0hKbGRtbHZkWE5zZVNCd2NtOTJhV1JsWkNCcGJuUmxjbVpoWTJWY2JpQWdJQ29nYUdGeklHSmxaVzRnYzNWalkyVnpjMloxYkd4NUlITmxkQ0JoY3lCeVpXMXZkR1VnWm05eUlIUm9ZWFFnYzJsMFpWeHVJQ0FnS2x4dUlDQWdLaUJBY0dGeVlXMGdlMFoxYm1OMGFXOXVmU0JvWVc1a2JHVnlYRzRnSUNBcUwxeHVYRzRnSUc5dVVtVnRiM1JsVW1WaFpIa29hR0Z1Wkd4bGNpa2dlMXh1SUNBZ0lIUm9hWE11WDIxbGRHaHZaRjl5WldaekxtOXVVbVZoWkhrb2FHRnVaR3hsY2lrN1hHNGdJSDFjYmx4dUlDQnZibEpsYlc5MFpVSjFjM2tvYUdGdVpHeGxjaWtnZTF4dUlDQWdJSFJvYVhNdVgyMWxkR2h2WkY5eVpXWnpMbTl1UW5WemVTaG9ZVzVrYkdWeUtUdGNiaUFnZlZ4dVhHNGdJR2RsZEZKbGJXOTBaVU5oYkd4VGRHRmpheWdwSUh0Y2JpQWdJQ0J5WlhSMWNtNGdkR2hwY3k1ZmJXVjBhRzlrWDNKbFpuTXVaMlYwVTNSaFkyc29LVHRjYmlBZ2ZWeHVJQ0F2S2lwY2JpQWdJQ29nVTJWMElHRWdhR0Z1Wkd4bGNpQjBieUJpWlNCallXeHNaV1FnZDJobGJpQjBhR1VnY21WdGIzUmxJSE5wZEdVZ2NtVnhkV1Z6ZEhNZ2RHOWNiaUFnSUNvZ0tISmxLWE5sYm1RZ2RHaGxJR2x1ZEdWeVptRmpaUzRnVlhObFpDQjBieUJrWlhSbFkzUWdZVzRnYVc1cGRHbGhiSHBoZEdsdmJseHVJQ0FnS2lCamIyMXdiR1YwYVc5dUlIZHBkR2h2ZFhRZ2MyVnVaR2x1WnlCaFpHUnBkR2x2Ym1Gc0lISmxjWFZsYzNRc0lITnBibU5sSUdsdUlHWmhZM1JjYmlBZ0lDb2dKMmRsZEVsdWRHVnlabUZqWlNjZ2NtVnhkV1Z6ZENCcGN5QnZibXg1SUhObGJuUWdZbmtnWVhCd2JHbGpZWFJwYjI0Z1lYUWdkR2hsSUd4aGMzUmNiaUFnSUNvZ2MzUmxjQ0J2WmlCMGFHVWdjR3gxWjJsdUlHbHVhWFJwWVd4cGVtRjBhVzl1WEc0Z0lDQXFYRzRnSUNBcUlFQndZWEpoYlNCN1JuVnVZM1JwYjI1OUlHaGhibVJzWlhKY2JpQWdJQ292WEc0Z0lHOXVSMlYwU1c1MFpYSm1ZV05sS0doaGJtUnNaWElwSUh0Y2JpQWdJQ0IwYUdsekxsOW5aWFJKYm5SbGNtWmhZMlZJWVc1a2JHVnlJRDBnYUdGdVpHeGxjanRjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCQWNtVjBkWEp1Y3lCN1QySnFaV04wZlNCelpYUWdiMllnY21WdGIzUmxJR2x1ZEdWeVptRmpaU0J0WlhSb2IyUnpYRzRnSUNBcUwxeHVJQ0JuWlhSU1pXMXZkR1VvS1NCN1hHNGdJQ0FnY21WMGRYSnVJSFJvYVhNdVgzSmxiVzkwWlR0Y2JpQWdmVnh1WEc0Z0lDOHFLbHh1SUNBZ0tpQlRaWFJ6SUhSb1pTQnBiblJsY21aaFkyVWdiMllnZEdocGN5QnphWFJsSUcxaGEybHVaeUJwZENCaGRtRnBiR0ZpYkdVZ2RHOGdkR2hsWEc0Z0lDQXFJSEpsYlc5MFpTQnphWFJsSUdKNUlITmxibVJwYm1jZ1lTQnRaWE56WVdkbElIZHBkR2dnWVNCelpYUWdiMllnYldWMGFHOWtjeUJ1WVcxbGMxeHVJQ0FnS2x4dUlDQWdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdYMmx1ZEdWeVptRmpaU0IwYnlCelpYUmNiaUFnSUNvdlhHNGdJSE5sZEVsdWRHVnlabUZqWlNoZmFXNTBaWEptWVdObEtTQjdYRzRnSUNBZ2FXWWdLSFJvYVhNdVkyOXVabWxuTG5KbGJXOTBaVjltZFc1amRHbHZibDl0WVhCd2FXNW5LU0I3WEc0Z0lDQWdJQ0JtYjNJZ0tHeGxkQ0JtZFc1algyNWhiV1VnYjJZZ2RHaHBjeTVqYjI1bWFXY3VjbVZ0YjNSbFgyWjFibU4wYVc5dVgyMWhjSEJwYm1jcElIdGNiaUFnSUNBZ0lDQWdhV1lnS0Y5cGJuUmxjbVpoWTJVdVkyOXVjM1J5ZFdOMGIzSWdQVDA5SUU5aWFtVmpkQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lGOXBiblJsY21aaFkyVmJablZ1WTE5dVlXMWxYU0E5SUNndUxpNWhjbWR6S1NBOVBpQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbDl5WlcxdmRHVmJablZ1WTE5dVlXMWxYU2d1TGk1aGNtZHpLVHRjYmlBZ0lDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2FXWWdLRjlwYm5SbGNtWmhZMlV1WTI5dWMzUnlkV04wYjNJdVkyOXVjM1J5ZFdOMGIzSWdQVDA5SUVaMWJtTjBhVzl1S1NCN1hHNGdJQ0FnSUNBZ0lDQWdYMmx1ZEdWeVptRmpaUzVqYjI1emRISjFZM1J2Y2k1d2NtOTBiM1I1Y0dWYlpuVnVZMTl1WVcxbFhTQTlJQ2d1TGk1aGNtZHpLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxsOXlaVzF2ZEdWYlpuVnVZMTl1WVcxbFhTZ3VMaTVoY21kektUdGNiaUFnSUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQWdJSFJvYVhNdVgybHVkR1Z5Wm1GalpTQTlJRjlwYm5SbGNtWmhZMlU3WEc0Z0lIMWNibHh1SUNBdktpcGNiaUFnSUNvZ1UyVnVaSE1nZEdobElHRmpkSFZoYkNCcGJuUmxjbVpoWTJVZ2RHOGdkR2hsSUhKbGJXOTBaU0J6YVhSbElIVndiMjRnYVhRZ2QyRnpYRzRnSUNBcUlIVndaR0YwWldRZ2IzSWdZbmtnWVNCemNHVmphV0ZzSUhKbGNYVmxjM1FnYjJZZ2RHaGxJSEpsYlc5MFpTQnphWFJsWEc0Z0lDQXFMMXh1SUNCelpXNWtTVzUwWlhKbVlXTmxLQ2tnZTF4dUlDQWdJSEpsZEhWeWJpQnVaWGNnVUhKdmJXbHpaU2h5WlhOdmJIWmxJRDArSUh0Y2JpQWdJQ0FnSUhaaGNpQnVZVzFsY3lBOUlGdGRPMXh1SUNBZ0lDQWdhV1lnS0NGMGFHbHpMbDlwYm5SbGNtWmhZMlVwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0Z3aWFXNTBaWEptWVdObElHbHpJRzV2ZENCelpYUXVYQ0lwTzF4dUlDQWdJQ0FnZlZ4dUlDQWdJQ0FnYVdZZ0tIUm9hWE11WDJsdWRHVnlabUZqWlM1amIyNXpkSEoxWTNSdmNpQTlQVDBnVDJKcVpXTjBLU0I3WEc0Z0lDQWdJQ0FnSUdadmNpQW9kbUZ5SUc1aGJXVWdiMllnVDJKcVpXTjBMbXRsZVhNb2RHaHBjeTVmYVc1MFpYSm1ZV05sS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJR2xtSUNodVlXMWxMbk4wWVhKMGMxZHBkR2dvWENKZlhDSXBLU0JqYjI1MGFXNTFaVHRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9kSGx3Wlc5bUlIUm9hWE11WDJsdWRHVnlabUZqWlZ0dVlXMWxYU0E5UFQwZ1hDSm1kVzVqZEdsdmJsd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnVZVzFsY3k1d2RYTm9LSHNnYm1GdFpUb2dibUZ0WlN3Z1pHRjBZVG9nYm5Wc2JDd2dkSGx3WlRvZ1hDSm1kVzVqZEdsdmJsd2lJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pHRjBZU0E5SUhSb2FYTXVYMmx1ZEdWeVptRmpaVnR1WVcxbFhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoSUNFOVBTQnVkV3hzSUNZbUlIUjVjR1Z2WmlCa1lYUmhJRDA5UFNCY0ltOWlhbVZqZEZ3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJrWVhSaE1pQTlJSHQ5TzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUJySUc5bUlFOWlhbVZqZEM1clpYbHpLR1JoZEdFcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUJrWVhSaFcydGRJRDA5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSaGRHRXlXMnRkSUQwZ1hDSnljR05mYldWMGFHOWtPanBjSWlBcklHczdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1JoZEdFeVcydGRJRDBnWkdGMFlWdHJYVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlhNdWNIVnphQ2g3SUc1aGJXVTZJRzVoYldVc0lHUmhkR0U2SUdSaGRHRXlMQ0IwZVhCbE9pQmNJbTlpYW1WamRGd2lJSDBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hQWW1wbFkzUW9aR0YwWVNrZ0lUMDlJR1JoZEdFcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2JtRnRaWE11Y0hWemFDaDdJRzVoYldVNklHNWhiV1VzSUdSaGRHRTZJR1JoZEdFc0lIUjVjR1U2SUZ3aVpHRjBZVndpSUgwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lDQWdMeThnWVNCamJHRnpjMXh1SUNBZ0lDQWdaV3h6WlNCcFppQW9kR2hwY3k1ZmFXNTBaWEptWVdObExtTnZibk4wY25WamRHOXlJRDA5UFNCR2RXNWpkR2x2YmlrZ2UxeHVJQ0FnSUNBZ0lDQjBhSEp2ZHlCdVpYY2dSWEp5YjNJb1hDSlFiR1ZoYzJVZ2FXNXpkR0Z1ZEdsaGRHVWdkR2hsSUdOc1lYTnpJR0psWm05eVpTQmxlSEJ2Y25SMGFXNW5JR2wwTGx3aUtUdGNiaUFnSUNBZ0lIMWNiaUFnSUNBZ0lDOHZJR2x1YzNSaGJtTmxJRzltSUdFZ1kyeGhjM05jYmlBZ0lDQWdJR1ZzYzJVZ2FXWWdLSFJvYVhNdVgybHVkR1Z5Wm1GalpTNWpiMjV6ZEhKMVkzUnZjaTVqYjI1emRISjFZM1J2Y2lBOVBUMGdSblZ1WTNScGIyNHBJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHWjFibU4wYVc5dWN5QTlJRTlpYW1WamRDNW5aWFJQZDI1UWNtOXdaWEowZVU1aGJXVnpLRnh1SUNBZ0lDQWdJQ0FnSUU5aWFtVmpkQzVuWlhSUWNtOTBiM1I1Y0dWUFppaDBhR2x6TGw5cGJuUmxjbVpoWTJVcFhHNGdJQ0FnSUNBZ0lDa3VZMjl1WTJGMEtFOWlhbVZqZEM1clpYbHpLSFJvYVhNdVgybHVkR1Z5Wm1GalpTa3BPMXh1SUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUJwSUQwZ01Ec2dhU0E4SUdaMWJtTjBhVzl1Y3k1c1pXNW5kR2c3SUdrckt5a2dlMXh1SUNBZ0lDQWdJQ0FnSUhaaGNpQnVZVzFsWHlBOUlHWjFibU4wYVc5dWMxdHBYVHRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9ibUZ0WlY4dWMzUmhjblJ6VjJsMGFDaGNJbDljSWlrZ2ZId2dibUZ0WlY4Z1BUMDlJRndpWTI5dWMzUnlkV04wYjNKY0lpa2dZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tIUjVjR1Z2WmlCMGFHbHpMbDlwYm5SbGNtWmhZMlZiYm1GdFpWOWRJRDA5UFNCY0ltWjFibU4wYVc5dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1Z6TG5CMWMyZ29leUJ1WVcxbE9pQnVZVzFsWHl3Z1pHRjBZVG9nYm5Wc2JDQjlLVHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lIUm9jbTkzSUVWeWNtOXlLRndpVlc1emRYQndiM0owWldRZ2FXNTBaWEptWVdObElIUjVjR1ZjSWlrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnSUNCMGFHbHpMbDlwYm5SbGNtWmhZMlZUWlhSQmMxSmxiVzkwWlVoaGJtUnNaWElnUFNCeVpYTnZiSFpsTzF4dUlDQWdJQ0FnZEdocGN5NWZZMjl1Ym1WamRHbHZiaTV6Wlc1a0tIc2dkSGx3WlRvZ1hDSnpaWFJKYm5SbGNtWmhZMlZjSWl3Z1lYQnBPaUJ1WVcxbGN5QjlLVHRjYmlBZ0lDQjlLVHRjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCSVlXNWtiR1Z6SUdFZ2JXVnpjMkZuWlNCbWNtOXRJSFJvWlNCeVpXMXZkR1VnYzJsMFpWeHVJQ0FnS2k5Y2JpQWdMeThnZG1GeUlHTmhiR3hpWVdOclgzSmxaeUE5SUc1bGR5QlNaV2RGZUhBb1hDSnZiblZ3WkdGMFpYeHlkVzRrWENJcFhHNGdJRjl3Y205alpYTnpUV1Z6YzJGblpTaGtZWFJoS1NCN1hHNGdJQ0FnZG1GeUlISmxjMjlzZG1Vc0lISmxhbVZqZEN3Z2JXVjBhRzlrTENCaGNtZHpMQ0J5WlhOMWJIUTdYRzRnSUNBZ2MzZHBkR05vSUNoa1lYUmhMblI1Y0dVcElIdGNiaUFnSUNBZ0lHTmhjMlVnWENKdFpYUm9iMlJjSWpwY2JpQWdJQ0FnSUNBZ2RtRnlJRjlwYm5SbGNtWmhZMlVnUFNCMGFHbHpMbDlwYm5SbGNtWmhZMlU3WEc0Z0lDQWdJQ0FnSUhaaGNpQmZiV1YwYUc5a1gyTnZiblJsZUhRZ1BTQmZhVzUwWlhKbVlXTmxMbDlmZEdocGMxOWZJSHg4SUY5cGJuUmxjbVpoWTJVN1hHNGdJQ0FnSUNBZ0lHbG1JQ2hrWVhSaExuQnBaQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lGOXBiblJsY21aaFkyVWdQU0IwYUdsekxsOXdiSFZuYVc1ZmFXNTBaWEptWVdObGMxdGtZWFJoTG5CcFpGMDdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tDRmZhVzUwWlhKbVlXTmxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWkdGMFlTNXdjbTl0YVhObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lGdHlaWE52YkhabExDQnlaV3BsWTNSZElEMGdkR2hwY3k1ZmRXNTNjbUZ3S0dSaGRHRXVjSEp2YldselpTd2dabUZzYzJVcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpXcGxZM1FvWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWUhCc2RXZHBiaUJoY0drZ1puVnVZM1JwYjI0Z2FYTWdibTkwSUdGMllXbGhiR0psSUdsdUlGd2lKSHRrWVhSaExuQnBaSDFjSWl3Z2RHaGxJSEJzZFdkcGJpQnRZWGxpWlNCMFpYSnRhVzVoZEdWa0xtQmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5OdmJHVXVaWEp5YjNJb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lIQnNkV2RwYmlCaGNHa2dablZ1WTNScGIyNGdhWE1nYm05MElHRjJZV2xoYkdKbElHbHVJQ1I3WkdGMFlTNXdhV1I5TENCMGFHVWdjR3gxWjJsdUlHMWhlV0psSUhSbGNtMXBibUYwWldRdVlGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdU8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCcFppQW9aR0YwWVM1dVlXMWxMbWx1WkdWNFQyWW9YQ0l1WENJcElDRTlQU0F0TVNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFpoY2lCdVlXMWxjeUE5SUdSaGRHRXVibUZ0WlM1emNHeHBkQ2hjSWk1Y0lpazdYRzRnSUNBZ0lDQWdJQ0FnYldWMGFHOWtJRDBnWDJsdWRHVnlabUZqWlZ0dVlXMWxjMXN3WFYxYmJtRnRaWE5iTVYxZE8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJRzFsZEdodlpDQTlJRjlwYm5SbGNtWmhZMlZiWkdGMFlTNXVZVzFsWFR0Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQmhjbWR6SUQwZ2RHaHBjeTVmZFc1M2NtRndLR1JoZEdFdVlYSm5jeXdnZEhKMVpTazdYRzRnSUNBZ0lDQWdJR2xtSUNoa1lYUmhMbkJ5YjIxcGMyVXBJSHRjYmlBZ0lDQWdJQ0FnSUNCYmNtVnpiMngyWlN3Z2NtVnFaV04wWFNBOUlIUm9hWE11WDNWdWQzSmhjQ2hrWVhSaExuQnliMjFwYzJVc0lHWmhiSE5sS1R0Y2JpQWdJQ0FnSUNBZ0lDQjBjbmtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZFd4MElEMGdiV1YwYUc5a0xtRndjR3g1S0Y5dFpYUm9iMlJmWTI5dWRHVjRkQ3dnWVhKbmN5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9YRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxjM1ZzZENCcGJuTjBZVzVqWlc5bUlGQnliMjFwYzJVZ2ZIeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0tHMWxkR2h2WkM1amIyNXpkSEoxWTNSdmNpQW1KbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzFsZEdodlpDNWpiMjV6ZEhKMVkzUnZjaTV1WVcxbElEMDlQU0JjSWtGemVXNWpSblZ1WTNScGIyNWNJaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnlaWE4xYkhRdWRHaGxiaWh5WlhOdmJIWmxLUzVqWVhSamFDaHlaV3BsWTNRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVZ6YjJ4MlpTaHlaWE4xYkhRcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lIMGdZMkYwWTJnZ0tHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHTnZibk52YkdVdVpYSnliM0lvWlN3Z2JXVjBhRzlrS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsYW1WamRDaGxLVHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNBZ0lDQWdkSEo1SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRzFsZEdodlpDNWhjSEJzZVNoZmJXVjBhRzlrWDJOdmJuUmxlSFFzSUdGeVozTXBPMXh1SUNBZ0lDQWdJQ0FnSUgwZ1kyRjBZMmdnS0dVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR1V1WlhKeWIzSW9aU3dnYldWMGFHOWtMQ0JoY21kektUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQmljbVZoYXp0Y2JpQWdJQ0FnSUdOaGMyVWdYQ0pqWVd4c1ltRmphMXdpT2x4dUlDQWdJQ0FnSUNCcFppQW9aR0YwWVM1d2NtOXRhWE5sS1NCN1hHNGdJQ0FnSUNBZ0lDQWdXM0psYzI5c2RtVXNJSEpsYW1WamRGMGdQU0IwYUdsekxsOTFibmR5WVhBb1pHRjBZUzV3Y205dGFYTmxMQ0JtWVd4elpTazdYRzRnSUNBZ0lDQWdJQ0FnZEhKNUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUcxbGRHaHZaQ0E5SUhSb2FYTXVYM04wYjNKbExtWmxkR05vS0dSaGRHRXViblZ0S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0Z5WjNNZ1BTQjBhR2x6TGw5MWJuZHlZWEFvWkdGMFlTNWhjbWR6TENCMGNuVmxLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doYldWMGFHOWtLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSFJvY205M0lGd2lRMkZzYkdKaFkyc2dablZ1WTNScGIyNGdZMkZ1SUc5dWJIa2dZMkZzYkdWa0lHOXVZMlVzSUdsbUlIbHZkU0IzWVc1MElIUnZJR05oYkd3Z1lTQm1kVzVqZEdsdmJpQm1iM0lnYlhWc2RHbHdiR1VnZEdsdFpYTXNJSEJzWldGelpTQnRZV3RsSUdsMElHRnpJR0VnY0d4MVoybHVJR0Z3YVNCbWRXNWpkR2x2Ymk0Z1UyVmxJR2gwZEhCek9pOHZhVzFxYjNrdWFXOHZaRzlqY3lCbWIzSWdiVzl5WlNCa1pYUmhhV3h6TGx3aU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdjbVZ6ZFd4MElEMGdiV1YwYUc5a0xtRndjR3g1S0c1MWJHd3NJR0Z5WjNNcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpYTjFiSFFnYVc1emRHRnVZMlZ2WmlCUWNtOXRhWE5sSUh4OFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNodFpYUm9iMlF1WTI5dWMzUnlkV04wYjNJZ0ppWmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRaWFJvYjJRdVkyOXVjM1J5ZFdOMGIzSXVibUZ0WlNBOVBUMGdYQ0pCYzNsdVkwWjFibU4wYVc5dVhDSXBYRzRnSUNBZ0lDQWdJQ0FnSUNBcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2NtVnpkV3gwTG5Sb1pXNG9jbVZ6YjJ4MlpTa3VZMkYwWTJnb2NtVnFaV04wS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lISmxjMjlzZG1Vb2NtVnpkV3gwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCOUlHTmhkR05vSUNobEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLR1VzSUcxbGRHaHZaQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaV3BsWTNRb1pTazdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lIUnllU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRaWFJvYjJRZ1BTQjBhR2x6TGw5emRHOXlaUzVtWlhSamFDaGtZWFJoTG01MWJTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCaGNtZHpJRDBnZEdocGN5NWZkVzUzY21Gd0tHUmhkR0V1WVhKbmN5d2dkSEoxWlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXMWxkR2h2WkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFISnZkeUJjSWxCc1pXRnpaU0J1YjNScFkyVWdkR2hoZENCallXeHNZbUZqYXlCbWRXNWpkR2x2YmlCallXNGdiMjVzZVNCallXeHNaV1FnYjI1alpTd2dhV1lnZVc5MUlIZGhiblFnZEc4Z1kyRnNiQ0JoSUdaMWJtTjBhVzl1SUdadmNpQnRkV3gwYVhCc1pTQjBhVzFsY3l3Z2NHeGxZWE5sSUcxaGEyVWdhWFFnWVhNZ1lTQndiSFZuYVc0Z1lYQnBJR1oxYm1OMGFXOXVMaUJUWldVZ2FIUjBjSE02THk5cGJXcHZlUzVwYnk5a2IyTnpJR1p2Y2lCdGIzSmxJR1JsZEdGcGJITXVYQ0k3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCdFpYUm9iMlF1WVhCd2JIa29iblZzYkN3Z1lYSm5jeWs3WEc0Z0lDQWdJQ0FnSUNBZ2ZTQmpZWFJqYUNBb1pTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXVjMjlzWlM1bGNuSnZjaWhsTENCdFpYUm9iMlFzSUdGeVozTXBPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQmljbVZoYXp0Y2JpQWdJQ0FnSUdOaGMyVWdYQ0p6WlhSSmJuUmxjbVpoWTJWY0lqcGNiaUFnSUNBZ0lDQWdkR2hwY3k1ZmMyVjBVbVZ0YjNSbEtHUmhkR0V1WVhCcEtUdGNiaUFnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNCallYTmxJRndpWjJWMFNXNTBaWEptWVdObFhDSTZYRzRnSUNBZ0lDQWdJSFJvYVhNdWMyVnVaRWx1ZEdWeVptRmpaU2dwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbDluWlhSSmJuUmxjbVpoWTJWSVlXNWtiR1Z5S0NrN1hHNGdJQ0FnSUNBZ0lHSnlaV0ZyTzF4dUlDQWdJQ0FnWTJGelpTQmNJbWx1ZEdWeVptRmpaVk5sZEVGelVtVnRiM1JsWENJNlhHNGdJQ0FnSUNBZ0lHbG1JQ2gwZVhCbGIyWWdkR2hwY3k1ZmFXNTBaWEptWVdObFUyVjBRWE5TWlcxdmRHVklZVzVrYkdWeUlEMDlQU0JjSW1aMWJtTjBhVzl1WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxsOXBiblJsY21aaFkyVlRaWFJCYzFKbGJXOTBaVWhoYm1Sc1pYSW9LVHRjYmlBZ0lDQWdJQ0FnSUNCMGFHbHpMbDlwYm5SbGNtWmhZMlZUWlhSQmMxSmxiVzkwWlVoaGJtUnNaWElnUFQwOUlHNTFiR3c3WEc0Z0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ1luSmxZV3M3WEc0Z0lDQWdJQ0JqWVhObElGd2laR2x6WTI5dWJtVmpkRndpT2x4dUlDQWdJQ0FnSUNCMGFHbHpMbDlrYVhOamIyNXVaV04wU0dGdVpHeGxjaWdwTzF4dUlDQWdJQ0FnSUNCMGFHbHpMbDlqYjI1dVpXTjBhVzl1TG1ScGMyTnZibTVsWTNRb0tUdGNiaUFnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0x5b3FYRzRnSUNBcUlGTmxibVJ6SUdFZ2NtVnhkV1Z6ZEhNZ2RHOGdkR2hsSUhKbGJXOTBaU0J6YVhSbElHRnphMmx1WnlCcGRDQjBieUJ3Y205MmFXUmxJR2wwYzF4dUlDQWdLaUJqZFhKeVpXNTBJR2x1ZEdWeVptRmpaVnh1SUNBZ0tpOWNiaUFnY21WeGRXVnpkRkpsYlc5MFpTZ3BJSHRjYmlBZ0lDQjBhR2x6TGw5amIyNXVaV04wYVc5dUxuTmxibVFvZXlCMGVYQmxPaUJjSW1kbGRFbHVkR1Z5Wm1GalpWd2lJSDBwTzF4dUlDQjlYRzVjYmlBZ1gyNWtZWEp5WVhrb2RIbHdaV1JCY25KaGVTd2djMmhoY0dVc0lHUjBlWEJsS1NCN1hHNGdJQ0FnZG1GeUlGOWtkSGx3WlNBOUlIUjVjR1ZrUVhKeVlYbFViMFIwZVhCbFczUjVjR1ZrUVhKeVlYa3VZMjl1YzNSeWRXTjBiM0l1Ym1GdFpWMDdYRzRnSUNBZ2FXWWdLR1IwZVhCbElDWW1JR1IwZVhCbElDRTlQU0JmWkhSNWNHVXBJSHRjYmlBZ0lDQWdJSFJvY205M0lGd2laSFI1Y0dVZ1pHOWxjMjRuZENCdFlYUmphQ0IwYUdVZ2RIbHdaU0J2WmlCMGFHVWdZWEp5WVhrNklGd2lJQ3RjYmlBZ0lDQWdJQ0FnWDJSMGVYQmxJQ3RjYmlBZ0lDQWdJQ0FnWENJZ0lUMGdYQ0lnSzF4dUlDQWdJQ0FnSUNCa2RIbHdaVHRjYmlBZ0lDQjlYRzRnSUNBZ2MyaGhjR1VnUFNCemFHRndaU0I4ZkNCYmRIbHdaV1JCY25KaGVTNXNaVzVuZEdoZE8xeHVJQ0FnSUhKbGRIVnliaUI3WEc0Z0lDQWdJQ0JmWDJwaGFXeGxaRjkwZVhCbFgxODZJRndpYm1SaGNuSmhlVndpTEZ4dUlDQWdJQ0FnWDE5MllXeDFaVjlmT2lCMGVYQmxaRUZ5Y21GNUxGeHVJQ0FnSUNBZ1gxOXphR0Z3WlY5Zk9pQnphR0Z3WlN4Y2JpQWdJQ0FnSUY5ZlpIUjVjR1ZmWHpvZ1gyUjBlWEJsWEc0Z0lDQWdmVHRjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCVFpYUnpJSFJvWlNCdVpYY2djbVZ0YjNSbElHbHVkR1Z5Wm1GalpTQndjbTkyYVdSbFpDQmllU0IwYUdVZ2IzUm9aWElnYzJsMFpWeHVJQ0FnS2x4dUlDQWdLaUJBY0dGeVlXMGdlMEZ5Y21GNWZTQnVZVzFsY3lCc2FYTjBJRzltSUdaMWJtTjBhVzl1SUc1aGJXVnpYRzRnSUNBcUwxeHVJQ0JmYzJWMFVtVnRiM1JsS0dGd2FTa2dlMXh1SUNBZ0lIUm9hWE11WDNKbGJXOTBaU0E5SUh0OU8xeHVJQ0FnSUhaaGNpQnBMQ0J1WVcxbExDQmtZWFJoTENCMGVYQmxPMXh1SUNBZ0lHWnZjaUFvYVNBOUlEQTdJR2tnUENCaGNHa3ViR1Z1WjNSb095QnBLeXNwSUh0Y2JpQWdJQ0FnSUc1aGJXVWdQU0JoY0dsYmFWMHVibUZ0WlR0Y2JpQWdJQ0FnSUdSaGRHRWdQU0JoY0dsYmFWMHVaR0YwWVR0Y2JpQWdJQ0FnSUhSNWNHVWdQU0JoY0dsYmFWMHVkSGx3WlR0Y2JpQWdJQ0FnSUdsbUlDaDBlWEJsSUQwOVBTQmNJbVJoZEdGY0lpa2dlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXlaVzF2ZEdWYmJtRnRaVjBnUFNCa1lYUmhPMXh1SUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hrWVhSaEtTQjdYRzRnSUNBZ0lDQWdJR2xtSUNoMGVYQmxiMllnWkdGMFlTQTlQVDBnWENKdlltcGxZM1JjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFpoY2lCa1lYUmhNaUE5SUh0OU8xeHVJQ0FnSUNBZ0lDQWdJR1p2Y2lBb2RtRnlJR3RsZVNCcGJpQmtZWFJoS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb1pHRjBZUzVvWVhOUGQyNVFjbTl3WlhKMGVTaHJaWGtwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaGtZWFJoVzJ0bGVWMGdQVDA5SUZ3aWNuQmpYMjFsZEdodlpEbzZYQ0lnS3lCclpYa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaE1sdHJaWGxkSUQwZ2RHaHBjeTVmWjJWdVVtVnRiM1JsVFdWMGFHOWtLRzVoYldVZ0t5QmNJaTVjSWlBcklHdGxlU2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDBnWld4elpTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR0YwWVRKYmEyVjVYU0E5SUdSaGRHRmJhMlY1WFR0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5eVpXMXZkR1ZiYm1GdFpWMGdQU0JrWVhSaE1qdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0IwYUdsekxsOXlaVzF2ZEdWYmJtRnRaVjBnUFNCa1lYUmhPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0IwYUdsekxsOXlaVzF2ZEdWYmJtRnRaVjBnUFNCMGFHbHpMbDluWlc1U1pXMXZkR1ZOWlhSb2IyUW9ibUZ0WlNrN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dVhHNGdJQ0FnZEdocGN5NWZjbVZ0YjNSbFZYQmtZWFJsU0dGdVpHeGxjaWdwTzF4dUlDQWdJSFJvYVhNdVgzSmxjRzl5ZEZKbGJXOTBaVk5sZENncE8xeHVJQ0I5WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJRWRsYm1WeVlYUmxjeUIwYUdVZ2QzSmhjSEJsWkNCbWRXNWpkR2x2YmlCamIzSnlaWE53YjI1a2FXNW5JSFJ2SUdFZ2MybHVaMnhsSUhKbGJXOTBaVnh1SUNBZ0tpQnRaWFJvYjJRdUlGZG9aVzRnZEdobElHZGxibVZ5WVhSbFpDQm1kVzVqZEdsdmJpQnBjeUJqWVd4c1pXUXNJR2wwSUhkcGJHd2djMlZ1WkNCMGFHVmNiaUFnSUNvZ1kyOXljbVZ6Y0c5dVpHbHVaeUJ0WlhOellXZGxJSFJ2SUhSb1pTQnlaVzF2ZEdVZ2MybDBaU0JoYzJ0cGJtY2dhWFFnZEc4Z1pYaGxZM1YwWlZ4dUlDQWdLaUIwYUdVZ2NHRnlkR2xqZFd4aGNpQnRaWFJvYjJRZ2IyWWdhWFJ6SUdsdWRHVnlabUZqWlZ4dUlDQWdLbHh1SUNBZ0tpQkFjR0Z5WVcwZ2UxTjBjbWx1WjMwZ2JtRnRaU0J2WmlCMGFHVWdjbVZ0YjNSbElHMWxkR2h2WkZ4dUlDQWdLbHh1SUNBZ0tpQkFjbVYwZFhKdWN5QjdSblZ1WTNScGIyNTlJSGR5WVhCd1pXUWdjbVZ0YjNSbElHMWxkR2h2WkZ4dUlDQWdLaTljYmlBZ1gyZGxibEpsYlc5MFpVMWxkR2h2WkNodVlXMWxMQ0J3YkhWbmFXNWZhV1FwSUh0Y2JpQWdJQ0IyWVhJZ2JXVWdQU0IwYUdsek8xeHVJQ0FnSUhaaGNpQnlaVzF2ZEdWTlpYUm9iMlFnUFNCbWRXNWpkR2x2YmlncElIdGNiaUFnSUNBZ0lISmxkSFZ5YmlCdVpYY2dVSEp2YldselpTZ29jbVZ6YjJ4MlpTd2djbVZxWldOMEtTQTlQaUI3WEc0Z0lDQWdJQ0FnSUd4bGRDQnBaQ0E5SUc1MWJHdzdYRzRnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdhV1FnUFNCdFpTNWZiV1YwYUc5a1gzSmxabk11Y0hWMEtIQnNkV2RwYmw5cFpDQS9JSEJzZFdkcGJsOXBaQ0FySUZ3aUwxd2lJQ3NnYm1GdFpTQTZJRzVoYldVcE8xeHVJQ0FnSUNBZ0lDQWdJSFpoY2lCM2NtRndjR1ZrWDNKbGMyOXNkbVVnUFNCbWRXNWpkR2x2YmlncElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdsbUlDaHBaQ0FoUFQwZ2JuVnNiQ2tnYldVdVgyMWxkR2h2WkY5eVpXWnpMbVpsZEdOb0tHbGtLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCeVpYTnZiSFpsTG1Gd2NHeDVLSFJvYVhNc0lHRnlaM1Z0Wlc1MGN5azdYRzRnSUNBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUNBZ0lDQjJZWElnZDNKaGNIQmxaRjl5WldwbFkzUWdQU0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtSUNocFpDQWhQVDBnYm5Wc2JDa2diV1V1WDIxbGRHaHZaRjl5WldaekxtWmxkR05vS0dsa0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ5WldwbFkzUXVZWEJ3Ykhrb2RHaHBjeXdnWVhKbmRXMWxiblJ6S1R0Y2JpQWdJQ0FnSUNBZ0lDQjlPMXh1WEc0Z0lDQWdJQ0FnSUNBZ2QzSmhjSEJsWkY5eVpYTnZiSFpsTGw5ZmFtRnBiR1ZrWDNCaGFYSnpYMThnUFNCM2NtRndjR1ZrWDNKbGFtVmpkRHRjYmlBZ0lDQWdJQ0FnSUNCM2NtRndjR1ZrWDNKbGFtVmpkQzVmWDJwaGFXeGxaRjl3WVdseWMxOWZJRDBnZDNKaGNIQmxaRjl5WlhOdmJIWmxPMXh1WEc0Z0lDQWdJQ0FnSUNBZ2RtRnlJR0Z5WjNNZ1BTQkJjbkpoZVM1d2NtOTBiM1I1Y0dVdWMyeHBZMlV1WTJGc2JDaGhjbWQxYldWdWRITXBPMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaHVZVzFsSUQwOVBTQmNJbkpsWjJsemRHVnlYQ0lnZkh3Z2JtRnRaU0E5UFQwZ1hDSmxlSEJ2Y25SY0lpQjhmQ0J1WVcxbElEMDlQU0JjSW05dVhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lHRnlaM01nUFNCdFpTNWZkM0poY0NoaGNtZHpMQ0IwY25WbEtUdGNiaUFnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lYSm5jeUE5SUcxbExsOTNjbUZ3S0dGeVozTXBPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQjJZWElnZEhKaGJuTm1aWEpoWW14bGN5QTlJR0Z5WjNNdVlYSm5jeTVmWDNSeVlXNXpabVZ5WVdKc1pYTmZYenRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9kSEpoYm5ObVpYSmhZbXhsY3lrZ1pHVnNaWFJsSUdGeVozTXVZWEpuY3k1ZlgzUnlZVzV6Wm1WeVlXSnNaWE5mWHp0Y2JpQWdJQ0FnSUNBZ0lDQnRaUzVmWTI5dWJtVmpkR2x2Ymk1elpXNWtLRnh1SUNBZ0lDQWdJQ0FnSUNBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUJjSW0xbGRHaHZaRndpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J1WVcxbE9pQnVZVzFsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0J3YVdRNklIQnNkV2RwYmw5cFpDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1lYSm5jem9nWVhKbmN5eGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2NISnZiV2x6WlRvZ2JXVXVYM2R5WVhBb1czZHlZWEJ3WldSZmNtVnpiMngyWlN3Z2QzSmhjSEJsWkY5eVpXcGxZM1JkS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm1WeVlXSnNaWE5jYmlBZ0lDQWdJQ0FnSUNBcE8xeHVJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLR2xrS1NCdFpTNWZiV1YwYUc5a1gzSmxabk11Wm1WMFkyZ29hV1FwTzF4dUlDQWdJQ0FnSUNBZ0lISmxhbVZqZENoY2JpQWdJQ0FnSUNBZ0lDQWdJR0JHWVdsc1pXUWdkRzhnWlhobFkzUjFaU0J5WlcxdmRHVWdiV1YwYUc5a0lDaHdiSFZuYVc0NklDUjdjR3gxWjJsdVgybGtJSHg4WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRzFsTG1sa2ZTd2diV1YwYUc5a09pQWtlMjVoYldWOUtTd2daWEp5YjNJNklDUjdaWDFnWEc0Z0lDQWdJQ0FnSUNBZ0tUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmU2s3WEc0Z0lDQWdmVHRjYmlBZ0lDQnlaVzF2ZEdWTlpYUm9iMlF1WDE5eVpXMXZkR1ZmYldWMGFHOWtJRDBnZEhKMVpUdGNiaUFnSUNCeVpYUjFjbTRnY21WdGIzUmxUV1YwYUc5a08xeHVJQ0I5WEc1Y2JpQWdMeW9xWEc0Z0lDQXFJRk5sYm1SeklHRWdjbVZ6Y0c5dVkyVWdjbVZ3YjNKMGFXNW5JSFJvWVhRZ2FXNTBaWEptWVdObElHcDFjM1FnY0hKdmRtbGtaV1FnWW5rZ2RHaGxYRzRnSUNBcUlISmxiVzkwWlNCemFYUmxJSGRoY3lCemRXTmpaWE56Wm5Wc2JIa2djMlYwSUdKNUlIUm9hWE1nYzJsMFpTQmhjeUJ5WlcxdmRHVmNiaUFnSUNvdlhHNGdJRjl5WlhCdmNuUlNaVzF2ZEdWVFpYUW9LU0I3WEc0Z0lDQWdkR2hwY3k1ZlkyOXVibVZqZEdsdmJpNXpaVzVrS0hzZ2RIbHdaVG9nWENKcGJuUmxjbVpoWTJWVFpYUkJjMUpsYlc5MFpWd2lJSDBwTzF4dUlDQjlYRzVjYmlBZ0x5b3FYRzRnSUNBcUlGQnlaWEJoY21WeklIUm9aU0J3Y205MmFXUmxaQ0J6WlhRZ2IyWWdjbVZ0YjNSbElHMWxkR2h2WkNCaGNtZDFiV1Z1ZEhNZ1ptOXlYRzRnSUNBcUlITmxibVJwYm1jZ2RHOGdkR2hsSUhKbGJXOTBaU0J6YVhSbExDQnlaWEJzWVdObGN5QmhiR3dnZEdobElHTmhiR3hpWVdOcmN5QjNhWFJvWEc0Z0lDQXFJR2xrWlc1MGFXWnBaWEp6WEc0Z0lDQXFYRzRnSUNBcUlFQndZWEpoYlNCN1FYSnlZWGw5SUdGeVozTWdkRzhnZDNKaGNGeHVJQ0FnS2x4dUlDQWdLaUJBY21WMGRYSnVjeUI3UVhKeVlYbDlJSGR5WVhCd1pXUWdZWEpuZFcxbGJuUnpYRzRnSUNBcUwxeHVYRzRnSUY5bGJtTnZaR1ZmYVc1MFpYSm1ZV05sS0dGUFltcGxZM1FzSUdKUFltcGxZM1FwSUh0Y2JpQWdJQ0IyWVhJZ2Rpd2dhenRjYmlBZ0lDQmpiMjV6ZENCbGJtTnZaR1ZrWDJsdWRHVnlabUZqWlNBOUlIdDlPMXh1SUNBZ0lHRlBZbXBsWTNSYlhDSmZYMmxrWDE5Y0lsMGdQU0JoVDJKcVpXTjBXMXdpWDE5cFpGOWZYQ0pkSUh4OElISmhibVJKWkNncE8xeHVJQ0FnSUdadmNpQW9heUJwYmlCaFQySnFaV04wS1NCN1hHNGdJQ0FnSUNCcFppQW9heUE5UFQwZ1hDSm9ZWE5QZDI1UWNtOXdaWEowZVZ3aUtTQmpiMjUwYVc1MVpUdGNiaUFnSUNBZ0lHbG1JQ2hoVDJKcVpXTjBMbWhoYzA5M2JsQnliM0JsY25SNUtHc3BLU0I3WEc0Z0lDQWdJQ0FnSUdsbUlDaHJMbk4wWVhKMGMxZHBkR2dvWENKZlhDSXBLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1kyOXVkR2x1ZFdVN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdkaUE5SUdGUFltcGxZM1JiYTEwN1hHNWNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUIySUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmlUMkpxWldOMFcydGRJRDBnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdYMTlxWVdsc1pXUmZkSGx3WlY5Zk9pQmNJbkJzZFdkcGJsOXBiblJsY21aaFkyVmNJaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lGOWZjR3gxWjJsdVgybGtYMTg2SUdGUFltcGxZM1JiWENKZlgybGtYMTljSWwwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JmWDNaaGJIVmxYMTg2SUdzc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J1ZFcwNklHNTFiR3hjYmlBZ0lDQWdJQ0FnSUNCOU8xeHVJQ0FnSUNBZ0lDQWdJR1Z1WTI5a1pXUmZhVzUwWlhKbVlXTmxXMnRkSUQwZ2RqdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hQWW1wbFkzUW9kaWtnSVQwOUlIWXBJSHRjYmlBZ0lDQWdJQ0FnSUNCaVQySnFaV04wVzJ0ZElEMGdleUJmWDJwaGFXeGxaRjkwZVhCbFgxODZJRndpWVhKbmRXMWxiblJjSWl3Z1gxOTJZV3gxWlY5Zk9pQjJJSDA3WEc0Z0lDQWdJQ0FnSUNBZ1pXNWpiMlJsWkY5cGJuUmxjbVpoWTJWYmExMGdQU0IyTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIUjVjR1Z2WmlCMklEMDlQU0JjSW05aWFtVmpkRndpS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZazlpYW1WamRGdHJYU0E5SUVGeWNtRjVMbWx6UVhKeVlYa29kaWtnUHlCYlhTQTZJSHQ5TzF4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11WDJWdVkyOWtaVjlwYm5SbGNtWmhZMlVvZGl3Z1lrOWlhbVZqZEZ0clhTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ2RHaHBjeTVmY0d4MVoybHVYMmx1ZEdWeVptRmpaWE5iWVU5aWFtVmpkRnRjSWw5ZmFXUmZYMXdpWFYwZ1BTQmxibU52WkdWa1gybHVkR1Z5Wm1GalpUdGNibHh1SUNBZ0lHbG1JQ2hoVDJKcVpXTjBMbTl1S1NCN1hHNGdJQ0FnSUNCaFQySnFaV04wTG05dUtGd2lZMnh2YzJWY0lpd2dLQ2tnUFQ0Z2UxeHVJQ0FnSUNBZ0lDQmtaV3hsZEdVZ2RHaHBjeTVmY0d4MVoybHVYMmx1ZEdWeVptRmpaWE5iWVU5aWFtVmpkRnRjSWw5ZmFXUmZYMXdpWFYwN1hHNGdJQ0FnSUNCOUtUdGNiaUFnSUNCOVhHNGdJSDFjYmx4dUlDQmZaVzVqYjJSbEtHRlBZbXBsWTNRc0lHRnpYMmx1ZEdWeVptRmpaU2tnZTF4dUlDQWdJSFpoY2lCMGNtRnVjMlpsY21GaWJHVnpJRDBnVzEwN1hHNGdJQ0FnYVdZZ0tDRmhUMkpxWldOMEtTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1lVOWlhbVZqZER0Y2JpQWdJQ0I5WEc0Z0lDQWdkbUZ5SUY5MGNtRnVjMlpsY2lBOUlHRlBZbXBsWTNRdVgzUnlZVzV6Wm1WeU8xeHVJQ0FnSUhaaGNpQmlUMkpxWldOMExDQjJMQ0JyTzF4dUlDQWdJSFpoY2lCcGMyRnljbUY1SUQwZ1FYSnlZWGt1YVhOQmNuSmhlU2hoVDJKcVpXTjBLVHRjYmlBZ0lDQmlUMkpxWldOMElEMGdhWE5oY25KaGVTQS9JRnRkSURvZ2UzMDdYRzRnSUNBZ0x5OXphMmx3SUdsbUlHRnNjbVZoWkhrZ1pXNWpiMlJsWkZ4dUlDQWdJR2xtSUNoY2JpQWdJQ0FnSUhSNWNHVnZaaUJoVDJKcVpXTjBJRDA5UFNCY0ltOWlhbVZqZEZ3aUlDWW1YRzRnSUNBZ0lDQmhUMkpxWldOMExsOWZhbUZwYkdWa1gzUjVjR1ZmWHlBbUpseHVJQ0FnSUNBZ1lVOWlhbVZqZEM1ZlgzWmhiSFZsWDE5Y2JpQWdJQ0FwSUh0Y2JpQWdJQ0FnSUhKbGRIVnliaUJoVDJKcVpXTjBPMXh1SUNBZ0lIMWNibHh1SUNBZ0lDOHZaVzVqYjJSbElHbHVkR1Z5Wm1GalpYTmNiaUFnSUNCcFppQW9YRzRnSUNBZ0lDQjBlWEJsYjJZZ1lVOWlhbVZqZENBOVBUMGdYQ0p2WW1wbFkzUmNJaUFtSmx4dUlDQWdJQ0FnSVVGeWNtRjVMbWx6UVhKeVlYa29ZVTlpYW1WamRDa2dKaVpjYmlBZ0lDQWdJQ2hoVDJKcVpXTjBMbDlmWVhOZmFXNTBaWEptWVdObFgxOGdmSHdnWVhOZmFXNTBaWEptWVdObEtWeHVJQ0FnSUNrZ2UxeHVJQ0FnSUNBZ2RHaHBjeTVmWlc1amIyUmxYMmx1ZEdWeVptRmpaU2hoVDJKcVpXTjBMQ0JpVDJKcVpXTjBLVHRjYmlBZ0lDQWdJSEpsZEhWeWJpQmlUMkpxWldOME8xeHVJQ0FnSUgxY2JseHVJQ0FnSUdsbUlDaGhjMTlwYm5SbGNtWmhZMlVwSUh0Y2JpQWdJQ0FnSUdGUFltcGxZM1JiWENKZlgybGtYMTljSWwwZ1BTQmhUMkpxWldOMFcxd2lYMTlwWkY5ZlhDSmRJSHg4SUhKaGJtUkpaQ2dwTzF4dUlDQWdJQ0FnZEdocGN5NWZjR3gxWjJsdVgybHVkR1Z5Wm1GalpYTmJZVTlpYW1WamRGdGNJbDlmYVdSZlgxd2lYVjBnUFZ4dUlDQWdJQ0FnSUNCMGFHbHpMbDl3YkhWbmFXNWZhVzUwWlhKbVlXTmxjMXRoVDJKcVpXTjBXMXdpWDE5cFpGOWZYQ0pkWFNCOGZDQjdmVHRjYmlBZ0lDQjlYRzRnSUNBZ1ptOXlJQ2hySUdsdUlHRlBZbXBsWTNRcElIdGNiaUFnSUNBZ0lHbG1JQ2hySUQwOVBTQmNJbWhoYzA5M2JsQnliM0JsY25SNVhDSXBJR052Ym5ScGJuVmxPMXh1SUNBZ0lDQWdhV1lnS0dsellYSnlZWGtnZkh3Z1lVOWlhbVZqZEM1b1lYTlBkMjVRY205d1pYSjBlU2hyS1NrZ2UxeHVJQ0FnSUNBZ0lDQjJJRDBnWVU5aWFtVmpkRnRyWFR0Y2JpQWdJQ0FnSUNBZ2FXWWdLSFI1Y0dWdlppQjBhR2x6TGw5cGJuUmxjbVpoWTJVdVgzSndZMFZ1WTI5a1pTQTlQVDBnWENKbWRXNWpkR2x2Ymx3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdaVzVqYjJSbFpGOXZZbW9nUFNCMGFHbHpMbDlwYm5SbGNtWmhZMlV1WDNKd1kwVnVZMjlrWlNoMktUdGNiaUFnSUNBZ0lDQWdJQ0JwWmlBb1pXNWpiMlJsWkY5dlltb2dKaVlnWlc1amIyUmxaRjl2WW1vdVgxOXljR05mWkhSNWNHVmZYeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZazlpYW1WamRGdHJYU0E5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWDE5cVlXbHNaV1JmZEhsd1pWOWZPaUJjSW1OMWMzUnZiVjlsYm1OdlpHbHVaMXdpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JmWDNaaGJIVmxYMTg2SUdWdVkyOWtaV1JmYjJKcVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNBZ0lDQWdZMjl1ZEdsdWRXVTdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDOHZJR2xtSUhSb1pTQnlaWFIxY201bFpDQnZZbXBsWTNRZ1pHOWxjeUJ1YjNRZ1kyOXVkR0ZwYmlCZlgycGhhV3hsWkY5MGVYQmxYMThzSUdGemMzVnRhVzVuSUhSb1pTQnZZbXBsWTNRZ2FHRnpJR0psWlc0Z2RISmhibk5tYjNKdFpXUmNiaUFnSUNBZ0lDQWdJQ0JsYkhObElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhZZ1BTQmxibU52WkdWa1gyOWlhanRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUIySUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvWVhOZmFXNTBaWEptWVdObEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyNXpkQ0JsYm1OdlpHVmtYMmx1ZEdWeVptRmpaU0E5SUhSb2FYTXVYM0JzZFdkcGJsOXBiblJsY21aaFkyVnpXMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQmhUMkpxWldOMFcxd2lYMTlwWkY5ZlhDSmRYRzRnSUNBZ0lDQWdJQ0FnSUNCZE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnWWs5aWFtVmpkRnRyWFNBOUlIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1gxOXFZV2xzWldSZmRIbHdaVjlmT2lCY0luQnNkV2RwYmw5cGJuUmxjbVpoWTJWY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1gxOXdiSFZuYVc1ZmFXUmZYem9nWVU5aWFtVmpkRnRjSWw5ZmFXUmZYMXdpWFN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWDE5MllXeDFaVjlmT2lCckxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCdWRXMDZJRzUxYkd4Y2JpQWdJQ0FnSUNBZ0lDQWdJSDA3WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxibU52WkdWa1gybHVkR1Z5Wm1GalpWdHJYU0E5SUhZN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MGFXNTFaVHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdiR1YwSUdsdWRHVnlabUZqWlVaMWJtTk9ZVzFsSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJQ0FnSUNCbWIzSWdLSFpoY2lCdVlXMWxJR2x1SUhSb2FYTXVYMmx1ZEdWeVptRmpaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVYMmx1ZEdWeVptRmpaUzVvWVhOUGQyNVFjbTl3WlhKMGVTaHVZVzFsS1NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ibUZ0WlM1emRHRnlkSE5YYVhSb0tGd2lYMXdpS1NrZ1kyOXVkR2x1ZFdVN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaDBhR2x6TGw5cGJuUmxjbVpoWTJWYmJtRnRaVjBnUFQwOUlIWXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwYm5SbGNtWmhZMlZHZFc1alRtRnRaU0E5SUc1aGJXVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdMeThnYzJWaGNtTm9JR1p2Y2lCd2NtOTBiM1I1Y0dWelhHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUdaMWJtTjBhVzl1Y3lBOUlFOWlhbVZqZEM1blpYUlBkMjVRY205d1pYSjBlVTVoYldWektGeHVJQ0FnSUNBZ0lDQWdJQ0FnVDJKcVpXTjBMbWRsZEZCeWIzUnZkSGx3WlU5bUtIUm9hWE11WDJsdWRHVnlabUZqWlNsY2JpQWdJQ0FnSUNBZ0lDQXBPMXh1SUNBZ0lDQWdJQ0FnSUdadmNpQW9kbUZ5SUdrZ1BTQXdPeUJwSUR3Z1puVnVZM1JwYjI1ekxteGxibWQwYURzZ2FTc3JLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYm1GdFpWOGdQU0JtZFc1amRHbHZibk5iYVYwN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2JtRnRaVjh1YzNSaGNuUnpWMmwwYUNoY0lsOWNJaWtwSUdOdmJuUnBiblZsTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhV1lnS0hSb2FYTXVYMmx1ZEdWeVptRmpaVnR1WVcxbFgxMGdQVDA5SUhZcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2FXNTBaWEptWVdObFJuVnVZMDVoYldVZ1BTQnVZVzFsWHp0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWW5KbFlXczdYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUdsbUlDZ2hhVzUwWlhKbVlXTmxSblZ1WTA1aGJXVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJwWkNBOUlIUm9hWE11WDNOMGIzSmxMbkIxZENoMktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdKUFltcGxZM1JiYTEwZ1BTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lGOWZhbUZwYkdWa1gzUjVjR1ZmWHpvZ1hDSmpZV3hzWW1GamExd2lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQmZYM1poYkhWbFgxODZJQ2gyTG1OdmJuTjBjblZqZEc5eUlDWW1JSFl1WTI5dWMzUnlkV04wYjNJdWJtRnRaU2tnZkh3Z2FXUXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHNTFiVG9nYVdSY2JpQWdJQ0FnSUNBZ0lDQWdJSDA3WEc0Z0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0pQWW1wbFkzUmJhMTBnUFNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUY5ZmFtRnBiR1ZrWDNSNWNHVmZYem9nWENKcGJuUmxjbVpoWTJWY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1gxOTJZV3gxWlY5Zk9pQnBiblJsY21aaFkyVkdkVzVqVG1GdFpTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2JuVnRPaUJ1ZFd4c1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hjYmlBZ0lDQWdJQ0FnSUNBdkttZHNiMkpoYkNCMFppb3ZYRzRnSUNBZ0lDQWdJQ0FnZEhsd1pXOW1JSFJtSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNZbVhHNGdJQ0FnSUNBZ0lDQWdkR1l1VkdWdWMyOXlJQ1ltWEc0Z0lDQWdJQ0FnSUNBZ2RpQnBibk4wWVc1alpXOW1JSFJtTGxSbGJuTnZjbHh1SUNBZ0lDQWdJQ0FwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCMlgySjFabVpsY2lBOUlIWXVaR0YwWVZONWJtTW9LVHRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9kaTVmZEhKaGJuTm1aWElnZkh3Z1gzUnlZVzV6Wm1WeUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGNtRnVjMlpsY21GaWJHVnpMbkIxYzJnb2RsOWlkV1ptWlhJdVluVm1abVZ5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQjJMbDkwY21GdWMyWmxjanRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdZazlpYW1WamRGdHJYU0E5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRjlmYW1GcGJHVmtYM1I1Y0dWZlh6b2dYQ0p1WkdGeWNtRjVYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmZYM1poYkhWbFgxODZJSFpmWW5WbVptVnlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1gxOXphR0Z3WlY5Zk9pQjJMbk5vWVhCbExGeHVJQ0FnSUNBZ0lDQWdJQ0FnWDE5a2RIbHdaVjlmT2lCMkxtUjBlWEJsWEc0Z0lDQWdJQ0FnSUNBZ2ZUdGNiaUFnSUNBZ0lDQWdmU0JsYkhObElHbG1JQ2hjYmlBZ0lDQWdJQ0FnSUNBdkttZHNiMkpoYkNCdWFpb3ZYRzRnSUNBZ0lDQWdJQ0FnZEhsd1pXOW1JRzVxSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNZbVhHNGdJQ0FnSUNBZ0lDQWdibW91VG1SQmNuSmhlU0FtSmx4dUlDQWdJQ0FnSUNBZ0lIWWdhVzV6ZEdGdVkyVnZaaUJ1YWk1T1pFRnljbUY1WEc0Z0lDQWdJQ0FnSUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFpoY2lCa2RIbHdaU0E5SUhSNWNHVmtRWEp5WVhsVWIwUjBlWEJsVzNZdWMyVnNaV04wYVc5dUxtUmhkR0V1WTI5dWMzUnlkV04wYjNJdWJtRnRaVjA3WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLSFl1WDNSeVlXNXpabVZ5SUh4OElGOTBjbUZ1YzJabGNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5tWlhKaFlteGxjeTV3ZFhOb0tIWXVjMlZzWldOMGFXOXVMbVJoZEdFdVluVm1abVZ5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJR1JsYkdWMFpTQjJMbDkwY21GdWMyWmxjanRjYmlBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdZazlpYW1WamRGdHJYU0E5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRjlmYW1GcGJHVmtYM1I1Y0dWZlh6b2dYQ0p1WkdGeWNtRjVYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmZYM1poYkhWbFgxODZJSFl1YzJWc1pXTjBhVzl1TG1SaGRHRXNYRzRnSUNBZ0lDQWdJQ0FnSUNCZlgzTm9ZWEJsWDE4NklIWXVjMmhoY0dVc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JmWDJSMGVYQmxYMTg2SUdSMGVYQmxYRzRnSUNBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDJJR2x1YzNSaGJtTmxiMllnUlhKeWIzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG1WeWNtOXlLSFlwTzF4dUlDQWdJQ0FnSUNBZ0lHSlBZbXBsWTNSYmExMGdQU0I3SUY5ZmFtRnBiR1ZrWDNSNWNHVmZYem9nWENKbGNuSnZjbHdpTENCZlgzWmhiSFZsWDE4NklIWXVkRzlUZEhKcGJtY29LU0I5TzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIUjVjR1Z2WmlCR2FXeGxJQ0U5UFNCY0luVnVaR1ZtYVc1bFpGd2lJQ1ltSUhZZ2FXNXpkR0Z1WTJWdlppQkdhV3hsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdZazlpYW1WamRGdHJYU0E5SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJRjlmYW1GcGJHVmtYM1I1Y0dWZlh6b2dYQ0ptYVd4bFhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNCZlgzWmhiSFZsWDE4NklIWXNYRzRnSUNBZ0lDQWdJQ0FnSUNCZlgzSmxiR0YwYVhabFgzQmhkR2hmWHpvZ2RpNXlaV3hoZEdsMlpWQmhkR2dnZkh3Z2RpNTNaV0pyYVhSU1pXeGhkR2wyWlZCaGRHaGNiaUFnSUNBZ0lDQWdJQ0I5TzF4dUlDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDOHZJSE5sYm1RZ2IySnFaV04wY3lCemRYQndiM0owWldRZ1lua2djM1J5ZFdOMGRYSmxJR05zYjI1bElHRnNaMjl5YVhSb2JWeHVJQ0FnSUNBZ0lDQXZMeUJvZEhSd2N6b3ZMMlJsZG1Wc2IzQmxjaTV0YjNwcGJHeGhMbTl5Wnk5bGJpMVZVeTlrYjJOekwxZGxZaTlCVUVrdlYyVmlYMWR2Y210bGNuTmZRVkJKTDFOMGNuVmpkSFZ5WldSZlkyeHZibVZmWVd4bmIzSnBkR2h0WEc0Z0lDQWdJQ0FnSUdWc2MyVWdhV1lnS0Z4dUlDQWdJQ0FnSUNBZ0lIWWdJVDA5SUU5aWFtVmpkQ2gyS1NCOGZGeHVJQ0FnSUNBZ0lDQWdJSFlnYVc1emRHRnVZMlZ2WmlCQ2IyOXNaV0Z1SUh4OFhHNGdJQ0FnSUNBZ0lDQWdkaUJwYm5OMFlXNWpaVzltSUZOMGNtbHVaeUI4ZkZ4dUlDQWdJQ0FnSUNBZ0lIWWdhVzV6ZEdGdVkyVnZaaUJFWVhSbElIeDhYRzRnSUNBZ0lDQWdJQ0FnZGlCcGJuTjBZVzVqWlc5bUlGSmxaMFY0Y0NCOGZGeHVJQ0FnSUNBZ0lDQWdJSFlnYVc1emRHRnVZMlZ2WmlCQ2JHOWlJSHg4WEc0Z0lDQWdJQ0FnSUNBZ2RpQnBibk4wWVc1alpXOW1JRWx0WVdkbFJHRjBZU0I4ZkZ4dUlDQWdJQ0FnSUNBZ0lDaDBlWEJsYjJZZ1JtbHNaVXhwYzNRZ0lUMDlJRndpZFc1a1pXWnBibVZrWENJZ0ppWWdkaUJwYm5OMFlXNWpaVzltSUVacGJHVk1hWE4wS1Z4dUlDQWdJQ0FnSUNBcElIdGNiaUFnSUNBZ0lDQWdJQ0JpVDJKcVpXTjBXMnRkSUQwZ2V5QmZYMnBoYVd4bFpGOTBlWEJsWDE4NklGd2lZWEpuZFcxbGJuUmNJaXdnWDE5MllXeDFaVjlmT2lCMklIMDdYRzRnSUNBZ0lDQWdJSDBnWld4elpTQnBaaUFvZGlCcGJuTjBZVzVqWlc5bUlFRnljbUY1UW5WbVptVnlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ2FXWWdLSFl1WDNSeVlXNXpabVZ5SUh4OElGOTBjbUZ1YzJabGNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk5tWlhKaFlteGxjeTV3ZFhOb0tIWXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ1pHVnNaWFJsSUhZdVgzUnlZVzV6Wm1WeU8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNCaVQySnFaV04wVzJ0ZElEMGdleUJmWDJwaGFXeGxaRjkwZVhCbFgxODZJRndpWVhKbmRXMWxiblJjSWl3Z1gxOTJZV3gxWlY5Zk9pQjJJSDA3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0JwWmlBb2RpQnBibk4wWVc1alpXOW1JRUZ5Y21GNVFuVm1abVZ5Vm1sbGR5a2dlMXh1SUNBZ0lDQWdJQ0FnSUdsbUlDaDJMbDkwY21GdWMyWmxjaUI4ZkNCZmRISmhibk5tWlhJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpabVZ5WVdKc1pYTXVjSFZ6YUNoMkxtSjFabVpsY2lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JrWld4bGRHVWdkaTVmZEhKaGJuTm1aWEk3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJR0pQWW1wbFkzUmJhMTBnUFNCN0lGOWZhbUZwYkdWa1gzUjVjR1ZmWHpvZ1hDSmhjbWQxYldWdWRGd2lMQ0JmWDNaaGJIVmxYMTg2SUhZZ2ZUdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0F2THlCVVQwUlBPaUJ6ZFhCd2IzSjBJR0ZzYzI4Z1RXRndJR0Z1WkNCVFpYUmNiaUFnSUNBZ0lDQWdMeThnVkU5RVR6b2dZWFp2YVdRZ2IySnFaV04wSUhOMVkyZ2dZWE1nUkhsdVlXMXBZMUJzZFdkcGJpQnBibk4wWVc1alpTNWNiaUFnSUNBZ0lDQWdaV3h6WlNCcFppQW9kaTVmWDJGelgybHVkR1Z5Wm1GalpWOWZLU0I3WEc0Z0lDQWdJQ0FnSUNBZ1lrOWlhbVZqZEZ0clhTQTlJSFJvYVhNdVgyVnVZMjlrWlNoMkxDQjBjblZsS1R0Y2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUdsbUlDaDBlWEJsYjJZZ2RpQTlQVDBnWENKdlltcGxZM1JjSWlCOGZDQkJjbkpoZVM1cGMwRnljbUY1S0hZcEtTQjdYRzRnSUNBZ0lDQWdJQ0FnWWs5aWFtVmpkRnRyWFNBOUlIUm9hWE11WDJWdVkyOWtaU2gyTENCaGMxOXBiblJsY21aaFkyVXBPMXh1SUNBZ0lDQWdJQ0FnSUM4dklHMXZkbVVnZEhKaGJuTm1aWEpoWW14bGN5QjBieUIwYUdVZ2RHOXdJR3hsZG1Wc0lHOWlhbVZqZEZ4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2hpVDJKcVpXTjBXMnRkTGw5ZmRISmhibk5tWlhKaFlteGxjMTlmS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjNJZ0tIWmhjaUIwSUQwZ01Ec2dkQ0E4SUdKUFltcGxZM1JiYTEwdVgxOTBjbUZ1YzJabGNtRmliR1Z6WDE4dWJHVnVaM1JvT3lCMEt5c3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5ObVpYSmhZbXhsY3k1d2RYTm9LR0pQWW1wbFkzUmJhMTB1WDE5MGNtRnVjMlpsY21GaWJHVnpYMTliZEYwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdaR1ZzWlhSbElHSlBZbXBsWTNSYmExMHVYMTkwY21GdWMyWmxjbUZpYkdWelgxODdYRzRnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnYVdZZ0tIUjVjR1Z2WmlCMklEMDlQU0JjSW05aWFtVmpkRndpSUNZbUlIWXVZMjl1YzNSeWRXTjBiM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQjBhSEp2ZHlCY0lsVnVjM1Z3Y0c5eWRHVmtJR1JoZEdFZ2RIbHdaU0JtYjNJZ2RISmhibk5tWlhKeWFXNW5JR0psZEhkbFpXNGdkR2hsSUhCc2RXZHBiaUJoYm1RZ2RHaGxJRzFoYVc0Z1lYQndPaUJjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0JySUN0Y2JpQWdJQ0FnSUNBZ0lDQWdJRndpSURvZ1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RpNWpiMjV6ZEhKMVkzUnZjaTV1WVcxbE8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJvY205M0lGd2lWVzV6ZFhCd2IzSjBaV1FnWkdGMFlTQjBlWEJsSUdadmNpQjBjbUZ1YzJabGNuSnBibWNnWW1WMGQyVmxiaUIwYUdVZ2NHeDFaMmx1SUdGdVpDQjBhR1VnYldGcGJpQmhjSEE2SUZ3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUdzZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnWENJc1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RqdGNiaUFnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdmVnh1SUNBZ0lIMWNiaUFnSUNCcFppQW9kSEpoYm5ObVpYSmhZbXhsY3k1c1pXNW5kR2dnUGlBd0tTQjdYRzRnSUNBZ0lDQmlUMkpxWldOMExsOWZkSEpoYm5ObVpYSmhZbXhsYzE5ZklEMGdkSEpoYm5ObVpYSmhZbXhsY3p0Y2JpQWdJQ0I5WEc0Z0lDQWdjbVYwZFhKdUlHSlBZbXBsWTNRN1hHNGdJSDFjYmx4dUlDQmZaR1ZqYjJSbEtHRlBZbXBsWTNRc0lHTmhiR3hpWVdOclNXUXNJSGRwZEdoUWNtOXRhWE5sS1NCN1hHNGdJQ0FnYVdZZ0tDRmhUMkpxWldOMEtTQjdYRzRnSUNBZ0lDQnlaWFIxY200Z1lVOWlhbVZqZER0Y2JpQWdJQ0I5WEc0Z0lDQWdkbUZ5SUdKUFltcGxZM1FzSUhZc0lHczdYRzVjYmlBZ0lDQnBaaUFvWEc0Z0lDQWdJQ0JoVDJKcVpXTjBMbWhoYzA5M2JsQnliM0JsY25SNUtGd2lYMTlxWVdsc1pXUmZkSGx3WlY5ZlhDSXBJQ1ltWEc0Z0lDQWdJQ0JoVDJKcVpXTjBMbWhoYzA5M2JsQnliM0JsY25SNUtGd2lYMTkyWVd4MVpWOWZYQ0lwWEc0Z0lDQWdLU0I3WEc0Z0lDQWdJQ0JwWmlBb1lVOWlhbVZqZEM1ZlgycGhhV3hsWkY5MGVYQmxYMTh1YzNSaGNuUnpWMmwwYUNoY0ltTjFjM1J2YlY5bGJtTnZaR2x1WjF3aUtTa2dlMXh1SUNBZ0lDQWdJQ0JwWmlBb2RIbHdaVzltSUhSb2FYTXVYMmx1ZEdWeVptRmpaUzVmY25CalJHVmpiMlJsSUQwOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQmpiMjV6ZENCa1pXTnZaR1ZrVDJKcUlEMGdkR2hwY3k1ZmFXNTBaWEptWVdObExsOXljR05FWldOdlpHVW9ZVTlpYW1WamRDNWZYM1poYkhWbFgxOHBPMXh1SUNBZ0lDQWdJQ0FnSUdKUFltcGxZM1FnUFNCa1pXTnZaR1ZrVDJKcU8xeHVJQ0FnSUNBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJR0pQWW1wbFkzUWdQU0JoVDJKcVpXTjBPMXh1SUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dGUFltcGxZM1F1WDE5cVlXbHNaV1JmZEhsd1pWOWZJRDA5UFNCY0ltTmhiR3hpWVdOclhDSXBJSHRjYmlBZ0lDQWdJQ0FnWWs5aWFtVmpkQ0E5SUhSb2FYTXVYMmRsYmxKbGJXOTBaVU5oYkd4aVlXTnJLR05oYkd4aVlXTnJTV1FzSUdGUFltcGxZM1F1Ym5WdExDQjNhWFJvVUhKdmJXbHpaU2s3WEc0Z0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0dGUFltcGxZM1F1WDE5cVlXbHNaV1JmZEhsd1pWOWZJRDA5UFNCY0ltbHVkR1Z5Wm1GalpWd2lLU0I3WEc0Z0lDQWdJQ0FnSUdKUFltcGxZM1FnUFZ4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11WDNKbGJXOTBaVnRoVDJKcVpXTjBMbDlmZG1Gc2RXVmZYMTBnZkh4Y2JpQWdJQ0FnSUNBZ0lDQjBhR2x6TGw5blpXNVNaVzF2ZEdWTlpYUm9iMlFvWVU5aWFtVmpkQzVmWDNaaGJIVmxYMThwTzF4dUlDQWdJQ0FnZlNCbGJITmxJR2xtSUNoaFQySnFaV04wTGw5ZmFtRnBiR1ZrWDNSNWNHVmZYeUE5UFQwZ1hDSndiSFZuYVc1ZmFXNTBaWEptWVdObFhDSXBJSHRjYmlBZ0lDQWdJQ0FnWWs5aWFtVmpkQ0E5SUhSb2FYTXVYMmRsYmxKbGJXOTBaVTFsZEdodlpDaGNiaUFnSUNBZ0lDQWdJQ0JoVDJKcVpXTjBMbDlmZG1Gc2RXVmZYeXhjYmlBZ0lDQWdJQ0FnSUNCaFQySnFaV04wTGw5ZmNHeDFaMmx1WDJsa1gxOWNiaUFnSUNBZ0lDQWdLVHRjYmlBZ0lDQWdJSDBnWld4elpTQnBaaUFvWVU5aWFtVmpkQzVmWDJwaGFXeGxaRjkwZVhCbFgxOGdQVDA5SUZ3aWJtUmhjbkpoZVZ3aUtTQjdYRzRnSUNBZ0lDQWdJQzhxWjJ4dlltRnNJRzVxSUhSbUtpOWNiaUFnSUNBZ0lDQWdMeTlqY21WaGRHVWdZblZwYkdRZ1lYSnlZWGt2ZEdWdWMyOXlJR2xtSUhWelpXUWdhVzRnZEdobElIQnNkV2RwYmx4dUlDQWdJQ0FnSUNCcFppQW9kR2hwY3k1cFpDQTlQVDBnWENKZlgzQnNkV2RwYmw5ZlhDSWdKaVlnZEhsd1pXOW1JRzVxSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNZbUlHNXFMbUZ5Y21GNUtTQjdYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tFRnljbUY1TG1selFYSnlZWGtvWVU5aWFtVmpkQzVmWDNaaGJIVmxYMThwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JoVDJKcVpXTjBMbDlmZG1Gc2RXVmZYeUE5SUdGUFltcGxZM1F1WDE5MllXeDFaVjlmTG5KbFpIVmpaU2hmWVhCd1pXNWtRblZtWm1WeUtUdGNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ1lrOWlhbVZqZENBOUlHNXFYRzRnSUNBZ0lDQWdJQ0FnSUNBdVlYSnlZWGtvWVU5aWFtVmpkQzVmWDNaaGJIVmxYMThzSUdGUFltcGxZM1F1WDE5a2RIbHdaVjlmS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdMbkpsYzJoaGNHVW9ZVTlpYW1WamRDNWZYM05vWVhCbFgxOHBPMXh1SUNBZ0lDQWdJQ0I5SUdWc2MyVWdhV1lnS0Z4dUlDQWdJQ0FnSUNBZ0lIUm9hWE11YVdRZ1BUMDlJRndpWDE5d2JIVm5hVzVmWDF3aUlDWW1YRzRnSUNBZ0lDQWdJQ0FnZEhsd1pXOW1JSFJtSUNFOVBTQmNJblZ1WkdWbWFXNWxaRndpSUNZbVhHNGdJQ0FnSUNBZ0lDQWdkR1l1VkdWdWMyOXlYRzRnSUNBZ0lDQWdJQ2tnZTF4dUlDQWdJQ0FnSUNBZ0lHbG1JQ2hCY25KaGVTNXBjMEZ5Y21GNUtHRlBZbXBsWTNRdVgxOTJZV3gxWlY5ZktTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1lVOWlhbVZqZEM1ZlgzWmhiSFZsWDE4Z1BTQmhUMkpxWldOMExsOWZkbUZzZFdWZlh5NXlaV1IxWTJVb1gyRndjR1Z1WkVKMVptWmxjaWs3WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ0lDQWdJR0pQWW1wbFkzUWdQU0IwWmk1MFpXNXpiM0lvWEc0Z0lDQWdJQ0FnSUNBZ0lDQmhUMkpxWldOMExsOWZkbUZzZFdWZlh5eGNiaUFnSUNBZ0lDQWdJQ0FnSUdGUFltcGxZM1F1WDE5emFHRndaVjlmTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdZVTlpYW1WamRDNWZYMlIwZVhCbFgxOWNiaUFnSUNBZ0lDQWdJQ0FwTzF4dUlDQWdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNBZ0lDOHZhMlZsY0NCcGRDQmhjeUJ5WldkMWJHRnlJR2xtSUhSeVlXNXpabVZ5WldRZ2RHOGdkR2hsSUcxaGFXNGdZWEJ3WEc0Z0lDQWdJQ0FnSUNBZ1lrOWlhbVZqZENBOUlHRlBZbXBsWTNRN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZVTlpYW1WamRDNWZYMnBoYVd4bFpGOTBlWEJsWDE4Z1BUMDlJRndpWlhKeWIzSmNJaWtnZTF4dUlDQWdJQ0FnSUNCaVQySnFaV04wSUQwZ2JtVjNJRVZ5Y205eUtHRlBZbXBsWTNRdVgxOTJZV3gxWlY5ZktUdGNiaUFnSUNBZ0lIMGdaV3h6WlNCcFppQW9ZVTlpYW1WamRDNWZYMnBoYVd4bFpGOTBlWEJsWDE4Z1BUMDlJRndpWm1sc1pWd2lLU0I3WEc0Z0lDQWdJQ0FnSUdKUFltcGxZM1FnUFNCaFQySnFaV04wTGw5ZmRtRnNkV1ZmWHp0Y2JpQWdJQ0FnSUNBZ0x5OXdZWFJqYUNCeVpXeGhkR2wyWlZCaGRHaGNiaUFnSUNBZ0lDQWdZazlpYW1WamRDNXlaV3hoZEdsMlpWQmhkR2dnUFNCaFQySnFaV04wTGw5ZmNtVnNZWFJwZG1WZmNHRjBhRjlmTzF4dUlDQWdJQ0FnZlNCbGJITmxJR2xtSUNoaFQySnFaV04wTGw5ZmFtRnBiR1ZrWDNSNWNHVmZYeUE5UFQwZ1hDSmhjbWQxYldWdWRGd2lLU0I3WEc0Z0lDQWdJQ0FnSUdKUFltcGxZM1FnUFNCaFQySnFaV04wTGw5ZmRtRnNkV1ZmWHp0Y2JpQWdJQ0FnSUgxY2JpQWdJQ0FnSUhKbGRIVnliaUJpVDJKcVpXTjBPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCMllYSWdhWE5oY25KaGVTQTlJRUZ5Y21GNUxtbHpRWEp5WVhrb1lVOWlhbVZqZENrN1hHNGdJQ0FnSUNCaVQySnFaV04wSUQwZ2FYTmhjbkpoZVNBL0lGdGRJRG9nZTMwN1hHNGdJQ0FnSUNCbWIzSWdLR3NnYVc0Z1lVOWlhbVZqZENrZ2UxeHVJQ0FnSUNBZ0lDQnBaaUFvYVhOaGNuSmhlU0I4ZkNCaFQySnFaV04wTG1oaGMwOTNibEJ5YjNCbGNuUjVLR3NwS1NCN1hHNGdJQ0FnSUNBZ0lDQWdkaUE5SUdGUFltcGxZM1JiYTEwN1hHNGdJQ0FnSUNBZ0lDQWdhV1lnS0hSNWNHVnZaaUIySUQwOVBTQmNJbTlpYW1WamRGd2lJSHg4SUVGeWNtRjVMbWx6UVhKeVlYa29kaWtwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJR0pQWW1wbFkzUmJhMTBnUFNCMGFHbHpMbDlrWldOdlpHVW9kaXdnWTJGc2JHSmhZMnRKWkN3Z2QybDBhRkJ5YjIxcGMyVXBPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUNBZ2NtVjBkWEp1SUdKUFltcGxZM1E3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnWDNkeVlYQW9ZWEpuY3l3Z1lYTmZhVzUwWlhKbVlXTmxLU0I3WEc0Z0lDQWdkbUZ5SUhkeVlYQndaV1FnUFNCMGFHbHpMbDlsYm1OdlpHVW9ZWEpuY3l3Z1lYTmZhVzUwWlhKbVlXTmxLVHRjYmlBZ0lDQjJZWElnY21WemRXeDBJRDBnZXlCaGNtZHpPaUIzY21Gd2NHVmtJSDA3WEc0Z0lDQWdjbVYwZFhKdUlISmxjM1ZzZER0Y2JpQWdmVnh1WEc0Z0lDOHFLbHh1SUNBZ0tpQlZibmR5WVhCeklIUm9aU0J6WlhRZ2IyWWdZWEpuZFcxbGJuUnpJR1JsYkdsMlpYSmxaQ0JtY205dElIUm9aU0J5WlcxdmRHVWdjMmwwWlN4Y2JpQWdJQ29nY21Wd2JHRmpaWE1nWVd4c0lHTmhiR3hpWVdOcklHbGtaVzUwYVdacFpYSnpJSGRwZEdnZ1lTQm1kVzVqZEdsdmJpQjNhR2xqYUNCM2FXeHNYRzRnSUNBcUlHbHVhWFJwWVhSbElITmxibVJwYm1jZ2RHaGhkQ0JqWVd4c1ltRmpheUJwWkdWdWRHbG1hV1Z5SUdKaFkyc2dkRzhnYjNSb1pYSWdjMmwwWlZ4dUlDQWdLbHh1SUNBZ0tpQkFjR0Z5WVcwZ2UwOWlhbVZqZEgwZ1lYSm5jeUIwYnlCMWJuZHlZWEJjYmlBZ0lDcGNiaUFnSUNvZ1FIQmhjbUZ0SUh0Q2IyOXNaV0Z1ZlNCM2FYUm9VSEp2YldselpTQnBjeUIwY25WbElHMWxZVzV6SUhSb2FYTWdkR2hsSUdOaGJHeGlZV05ySUhOb2IzVnNaQ0JqYjI1MFlXbHVJR0VnY0hKdmJXbHpaVnh1SUNBZ0tseHVJQ0FnS2lCQWNtVjBkWEp1Y3lCN1FYSnlZWGw5SUhWdWQzSmhjSEJsWkNCaGNtZHpYRzRnSUNBcUwxeHVJQ0JmZFc1M2NtRndLR0Z5WjNNc0lIZHBkR2hRY205dGFYTmxLU0I3WEc0Z0lDQWdMeThnZG1GeUlHTmhiR3hsWkNBOUlHWmhiSE5sTzF4dVhHNGdJQ0FnTHk4Z2QzSmhjSE1nWldGamFDQmpZV3hzWW1GamF5QnpieUIwYUdGMElIUm9aU0J2Ym14NUlHOXVaU0JqYjNWc1pDQmlaU0JqWVd4c1pXUmNiaUFnSUNBdkx5QjJZWElnYjI1alpTaGpZaWtnZTF4dUlDQWdJQzh2SUNBZ0lDQnlaWFIxY200Z1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0x5OGdJQ0FnSUNBZ0lDQnBaaUFvSVdOaGJHeGxaQ2tnZTF4dUlDQWdJQzh2SUNBZ0lDQWdJQ0FnSUNBZ0lHTmhiR3hsWkNBOUlIUnlkV1U3WEc0Z0lDQWdMeThnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUdOaUxtRndjR3g1S0hSb2FYTXNJR0Z5WjNWdFpXNTBjeWs3WEc0Z0lDQWdMeThnSUNBZ0lDQWdJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lDOHZJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGNpQnRjMmNnUFZ4dUlDQWdJQzh2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKMEVnWTJGc2JHSmhZMnNnWm5KdmJTQjBhR2x6SUhObGRDQm9ZWE1nWVd4eVpXRmtlU0JpWldWdUlHVjRaV04xZEdWa0p6dGNiaUFnSUNBdkx5QWdJQ0FnSUNBZ0lDQWdJQ0IwYUhKdmR5QnVaWGNnUlhKeWIzSW9iWE5uS1R0Y2JpQWdJQ0F2THlBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0F2THlBZ0lDQWdmVHRjYmlBZ0lDQXZMeUI5WEc0Z0lDQWdkbUZ5SUhKbGMzVnNkQ0E5SUhSb2FYTXVYMlJsWTI5a1pTaGhjbWR6TG1GeVozTXNJR0Z5WjNNdVkyRnNiR0poWTJ0SlpDd2dkMmwwYUZCeWIyMXBjMlVwTzF4dUlDQWdJSEpsZEhWeWJpQnlaWE4xYkhRN1hHNGdJSDFjYmx4dUlDQXZLaXBjYmlBZ0lDb2dSMlZ1WlhKaGRHVnpJSFJvWlNCM2NtRndjR1ZrSUdaMWJtTjBhVzl1SUdOdmNuSmxjM0J2Ym1ScGJtY2dkRzhnWVNCemFXNW5iR1VnY21WdGIzUmxYRzRnSUNBcUlHTmhiR3hpWVdOckxpQlhhR1Z1SUhSb1pTQm5aVzVsY21GMFpXUWdablZ1WTNScGIyNGdhWE1nWTJGc2JHVmtMQ0JwZENCM2FXeHNJSE5sYm1SY2JpQWdJQ29nZEdobElHTnZjbkpsYzNCdmJtUnBibWNnYldWemMyRm5aU0IwYnlCMGFHVWdjbVZ0YjNSbElITnBkR1VnWVhOcmFXNW5JR2wwSUhSdlhHNGdJQ0FxSUdWNFpXTjFkR1VnZEdobElIQmhjblJwWTNWc1lYSWdZMkZzYkdKaFkyc2djSEpsZG1sdmRYTnNlU0J6WVhabFpDQmtkWEpwYm1jZ1lTQmpZV3hzWEc0Z0lDQXFJR0o1SUhSb1pTQnlaVzF2ZEdVZ2MybDBaU0JoSUcxbGRHaHZaQ0JtY205dElIUm9aU0JwYm5SbGNtWmhZMlVnYjJZZ2RHaHBjeUJ6YVhSbFhHNGdJQ0FxWEc0Z0lDQXFJRUJ3WVhKaGJTQjdUblZ0WW1WeWZTQnBaQ0J2WmlCMGFHVWdjbVZ0YjNSbElHTmhiR3hpWVdOcklIUnZJR1Y0WldOMWRHVmNiaUFnSUNvZ1FIQmhjbUZ0SUh0T2RXMWlaWEo5SUdGeVowNTFiU0JoY21kMWJXVnVkQ0JwYm1SbGVDQnZaaUIwYUdVZ1kyRnNiR0poWTJ0Y2JpQWdJQ29nUUhCaGNtRnRJSHRDYjI5c1pXRnVmU0IzYVhSb1VISnZiV2x6WlNCcGN5QjBjblZsSUcxbFlXNXpJSFJvYVhNZ2RHaGxJR05oYkd4aVlXTnJJSE5vYjNWc1pDQmpiMjUwWVdsdUlHRWdjSEp2YldselpWeHVJQ0FnS2x4dUlDQWdLaUJBY21WMGRYSnVjeUI3Um5WdVkzUnBiMjU5SUhkeVlYQndaV1FnY21WdGIzUmxJR05oYkd4aVlXTnJYRzRnSUNBcUwxeHVJQ0JmWjJWdVVtVnRiM1JsUTJGc2JHSmhZMnNvYVdRc0lHRnlaMDUxYlN3Z2QybDBhRkJ5YjIxcGMyVXBJSHRjYmlBZ0lDQjJZWElnYldVZ1BTQjBhR2x6TzF4dUlDQWdJSFpoY2lCeVpXMXZkR1ZEWVd4c1ltRmphenRjYmlBZ0lDQnBaaUFvZDJsMGFGQnliMjFwYzJVcElIdGNiaUFnSUNBZ0lISmxiVzkwWlVOaGJHeGlZV05ySUQwZ1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0lDQWdJSEpsZEhWeWJpQnVaWGNnVUhKdmJXbHpaU2dvY21WemIyeDJaU3dnY21WcVpXTjBLU0E5UGlCN1hHNGdJQ0FnSUNBZ0lDQWdkbUZ5SUdGeVozTWdQU0J0WlM1ZmQzSmhjQ2hCY25KaGVTNXdjbTkwYjNSNWNHVXVjMnhwWTJVdVkyRnNiQ2hoY21kMWJXVnVkSE1wS1R0Y2JpQWdJQ0FnSUNBZ0lDQjJZWElnZEhKaGJuTm1aWEpoWW14bGN5QTlJR0Z5WjNNdVlYSm5jeTVmWDNSeVlXNXpabVZ5WVdKc1pYTmZYenRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9kSEpoYm5ObVpYSmhZbXhsY3lrZ1pHVnNaWFJsSUdGeVozTXVZWEpuY3k1ZlgzUnlZVzV6Wm1WeVlXSnNaWE5mWHp0Y2JpQWdJQ0FnSUNBZ0lDQnlaWE52YkhabExsOWZhbUZwYkdWa1gzQmhhWEp6WDE4Z1BTQnlaV3BsWTNRN1hHNGdJQ0FnSUNBZ0lDQWdjbVZxWldOMExsOWZhbUZwYkdWa1gzQmhhWEp6WDE4Z1BTQnlaWE52YkhabE8xeHVJQ0FnSUNBZ0lDQWdJSFJ5ZVNCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J0WlM1ZlkyOXVibVZqZEdsdmJpNXpaVzVrS0Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dYQ0pqWVd4c1ltRmphMXdpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsa09pQnBaQ3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J1ZFcwNklHRnlaMDUxYlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGNtZHpPaUJoY21kekxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJSEJwWkNBNklDQnRaUzVwWkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCd2NtOXRhWE5sT2lCdFpTNWZkM0poY0NoYmNtVnpiMngyWlN3Z2NtVnFaV04wWFNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1aWEpoWW14bGMxeHVJQ0FnSUNBZ0lDQWdJQ0FnS1R0Y2JpQWdJQ0FnSUNBZ0lDQjlJR05oZEdOb0lDaGxLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaV3BsWTNRb1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdCR1lXbHNaV1FnZEc4Z1pYaGxZM1IxWlNCeVpXMXZkR1VnWTJGc2JHSmhZMnNnS0dsa09pQWtlMmxrZlN3Z1lYSm5UblZ0T2lBa2UyRnlaMDUxYlgwcExtQmNiaUFnSUNBZ0lDQWdJQ0FnSUNrN1hHNGdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUgwN1hHNGdJQ0FnSUNCeVpYUjFjbTRnY21WdGIzUmxRMkZzYkdKaFkyczdYRzRnSUNBZ2ZTQmxiSE5sSUh0Y2JpQWdJQ0FnSUhKbGJXOTBaVU5oYkd4aVlXTnJJRDBnWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lIWmhjaUJoY21keklEMGdiV1V1WDNkeVlYQW9RWEp5WVhrdWNISnZkRzkwZVhCbExuTnNhV05sTG1OaGJHd29ZWEpuZFcxbGJuUnpLU2s3WEc0Z0lDQWdJQ0FnSUhaaGNpQjBjbUZ1YzJabGNtRmliR1Z6SUQwZ1lYSm5jeTVoY21kekxsOWZkSEpoYm5ObVpYSmhZbXhsYzE5Zk8xeHVJQ0FnSUNBZ0lDQnBaaUFvZEhKaGJuTm1aWEpoWW14bGN5a2daR1ZzWlhSbElHRnlaM011WVhKbmN5NWZYM1J5WVc1elptVnlZV0pzWlhOZlh6dGNiaUFnSUNBZ0lDQWdjbVYwZFhKdUlHMWxMbDlqYjI1dVpXTjBhVzl1TG5ObGJtUW9YRzRnSUNBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ1hDSmpZV3hzWW1GamExd2lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2FXUTZJR2xrTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdiblZ0T2lCaGNtZE9kVzBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmhjbWR6T2lCaGNtZHpYRzRnSUNBZ0lDQWdJQ0FnSUNBdkx5QndhV1FnT2lBZ2JXVXVhV1JjYmlBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJSFJ5WVc1elptVnlZV0pzWlhOY2JpQWdJQ0FnSUNBZ0tUdGNiaUFnSUNBZ0lIMDdYRzRnSUNBZ0lDQnlaWFIxY200Z2NtVnRiM1JsUTJGc2JHSmhZMnM3WEc0Z0lDQWdmVnh1SUNCOVhHNWNiaUFnTHlvcVhHNGdJQ0FxSUZObGJtUnpJSFJvWlNCdWIzUnBabWxqWVhScGIyNGdiV1Z6YzJGblpTQmhibVFnWW5KbFlXdHpJSFJvWlNCamIyNXVaV04wYVc5dVhHNGdJQ0FxTDF4dUlDQmthWE5qYjI1dVpXTjBLQ2tnZTF4dUlDQWdJSFJvYVhNdVgyTnZibTVsWTNScGIyNHVjMlZ1WkNoN0lIUjVjR1U2SUZ3aVpHbHpZMjl1Ym1WamRGd2lJSDBwTzF4dUlDQWdJSE5sZEZScGJXVnZkWFFvZEdocGN5NWZZMjl1Ym1WamRHbHZiaTVrYVhOamIyNXVaV04wTENBeU1EQXdLVHRjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCVFpYUWdZU0JvWVc1a2JHVnlJSFJ2SUdKbElHTmhiR3hsWkNCM2FHVnVJSEpsWTJWcGRtVmtJR0VnWkdselkyOXVibVZqZENCdFpYTnpZV2RsWEc0Z0lDQXFJR1p5YjIwZ2RHaGxJSEpsYlc5MFpTQnphWFJsWEc0Z0lDQXFYRzRnSUNBcUlFQndZWEpoYlNCN1JuVnVZM1JwYjI1OUlHaGhibVJzWlhKY2JpQWdJQ292WEc0Z0lHOXVSR2x6WTI5dWJtVmpkQ2hvWVc1a2JHVnlLU0I3WEc0Z0lDQWdkR2hwY3k1ZlpHbHpZMjl1Ym1WamRFaGhibVJzWlhJZ1BTQm9ZVzVrYkdWeU8xeHVJQ0I5WEc1OVhHNWNiaThxS2x4dUlDb2dVbVZtWlhKbGJtTmxVM1J2Y21VZ2FYTWdZU0J6Y0dWamFXRnNJRzlpYW1WamRDQjNhR2xqYUNCemRHOXlaWE1nYjNSb1pYSWdiMkpxWldOMGMxeHVJQ29nWVc1a0lIQnliM1pwWkdWeklIUm9aU0J5WldabGNtVnVZMlZ6SUNodWRXMWlaWElwSUdsdWMzUmxZV1F1SUZSb2FYTWdjbVZtWlhKbGJtTmxYRzRnS2lCdFlYa2dkR2hsYmlCaVpTQnpaVzUwSUc5MlpYSWdZU0JxYzI5dUxXSmhjMlZrSUdOdmJXMTFibWxqWVhScGIyNGdZMmhoYm01bGJDQW9TVkJEWEc0Z0tpQjBieUJoYm05MGFHVnlJRTV2WkdVdWFuTWdjSEp2WTJWemN5QnZjaUJoSUcxbGMzTmhaMlVnZEc4Z2RHaGxJRmR2Y210bGNpa3VJRTkwYUdWeVhHNGdLaUJ6YVhSbElHMWhlU0IwYUdWdUlIQnliM1pwWkdVZ2RHaGxJSEpsWm1WeVpXNWpaU0JwYmlCMGFHVWdjbVZ6Y0c5dVkyVWdiV1Z6YzJGblpWeHVJQ29nYVcxd2JIbHBibWNnZEdobElHZHBkbVZ1SUc5aWFtVmpkQ0J6YUc5MWJHUWdZbVVnWVdOMGFYWmhkR1ZrTGx4dUlDcGNiaUFxSUZCeWFXMWhjbmtnZFhOaFoyVWdabTl5SUhSb1pTQlNaV1psY21WdVkyVlRkRzl5WlNCcGN5QmhJSE4wYjNKaFoyVWdabTl5SUhSb1pWeHVJQ29nWTJGc2JHSmhZMnR6TENCM2FHbGphQ0IwYUdWeVpXWnZjbVVnYldGclpYTWdhWFFnY0c5emMybGliR1VnZEc4Z2FXNXBkR2xoZEdVZ1lWeHVJQ29nWTJGc2JHSmhZMnNnWlhobFkzVjBhVzl1SUdKNUlIUm9aU0J2Y0hCdmMybDBaU0J6YVhSbElDaDNhR2xqYUNCdWIzSnRZV3hzZVNCallXNXViM1JjYmlBcUlHUnBjbVZqZEd4NUlHVjRaV04xZEdVZ1puVnVZM1JwYjI1eklHOTJaWElnZEdobElHTnZiVzExYm1sallYUnBiMjRnWTJoaGJtNWxiQ2t1WEc0Z0tseHVJQ29nUldGamFDQnpkRzl5WldRZ2IySnFaV04wSUdOaGJpQnZibXg1SUdKbElHWmxkR05vWldRZ2IyNWpaU0JoYm1RZ2FYTWdibTkwWEc0Z0tpQmhkbUZwYkdGaWJHVWdabTl5SUhSb1pTQnpaV052Ym1RZ2RHbHRaUzRnUldGamFDQnpkRzl5WldRZ2IySnFaV04wSUcxMWMzUWdZbVZjYmlBcUlHWmxkR05vWldRc0lITnBibU5sSUc5MGFHVnlkMmx6WlNCcGRDQjNhV3hzSUhKbGJXRnBiaUJ6ZEc5eVpXUWdabTl5WlhabGNpQmhibVJjYmlBcUlHTnZibk4xYldVZ2JXVnRiM0o1TGx4dUlDcGNiaUFxSUZOMGIzSmxaQ0J2WW1wbFkzUWdhVzVrWldObGN5QmhjbVVnYzJsdGNHeDVJSFJvWlNCdWRXMWlaWEp6TENCM2FHbGphQ0JoY21VZ2FHOTNaWFpsY2x4dUlDb2djbVZzWldGelpXUWdZV3h2Ym1jZ2QybDBhQ0IwYUdVZ2IySnFaV04wY3l3Z1lXNWtJR0Z5WlNCc1lYUmxjaUJ5WlhWelpXUWdZV2RoYVc0Z0tHbHVYRzRnS2lCdmNtUmxjaUIwYnlCd2IzTjBjRzl1WlNCMGFHVWdiM1psY21ac2IzY3NJSGRvYVdOb0lITm9iM1ZzWkNCdWIzUWdiR2xyWld4NUlHaGhjSEJsYml4Y2JpQXFJR0oxZENCaGJubDNZWGtwTGx4dUlDb3ZYRzVqYkdGemN5QlNaV1psY21WdVkyVlRkRzl5WlNCN1hHNGdJR052Ym5OMGNuVmpkRzl5S0NrZ2UxeHVJQ0FnSUhSb2FYTXVYM04wYjNKbElEMGdlMzA3SUM4dklITjBiM0psWkNCdlltcGxZM1JjYmlBZ0lDQjBhR2x6TGw5cGJtUnBZMlZ6SUQwZ1d6QmRPeUF2THlCemJXRnNiR1Z6ZENCaGRtRnBiR0ZpYkdVZ2FXNWthV05sYzF4dUlDQWdJSFJvYVhNdVgzSmxZV1I1U0dGdVpHeGxjaUE5SUdaMWJtTjBhVzl1S0NrZ2UzMDdYRzRnSUNBZ2RHaHBjeTVmWW5WemVVaGhibVJzWlhJZ1BTQm1kVzVqZEdsdmJpZ3BJSHQ5TzF4dUlDQWdJSFJvYVhNdVgzSmxZV1I1U0dGdVpHeGxjaWdwTzF4dUlDQjlYRzVjYmlBZ0x5b3FYRzRnSUNBcUlHTmhiR3dnYUdGdVpHeGxjaUIzYUdWdUlIUm9aU0J6ZEc5eVpTQnBjeUJsYlhCMGVWeHVJQ0FnS2x4dUlDQWdLaUJBY0dGeVlXMGdlMFpWVGtOVVNVOU9mU0JwWkNCdlppQmhJR2hoYm1Sc1pYSmNiaUFnSUNvdlhHNGdJRzl1VW1WaFpIa29jbVZoWkhsSVlXNWtiR1Z5S1NCN1hHNGdJQ0FnZEdocGN5NWZjbVZoWkhsSVlXNWtiR1Z5SUQwZ2NtVmhaSGxJWVc1a2JHVnlJSHg4SUdaMWJtTjBhVzl1S0NrZ2UzMDdYRzRnSUgxY2JseHVJQ0F2S2lwY2JpQWdJQ29nWTJGc2JDQm9ZVzVrYkdWeUlIZG9aVzRnZEdobElITjBiM0psSUdseklHNXZkQ0JsYlhCMGVWeHVJQ0FnS2x4dUlDQWdLaUJBY0dGeVlXMGdlMFpWVGtOVVNVOU9mU0JwWkNCdlppQmhJR2hoYm1Sc1pYSmNiaUFnSUNvdlhHNGdJRzl1UW5WemVTaGlkWE41U0dGdVpHeGxjaWtnZTF4dUlDQWdJSFJvYVhNdVgySjFjM2xJWVc1a2JHVnlJRDBnWW5WemVVaGhibVJzWlhJZ2ZId2dablZ1WTNScGIyNG9LU0I3ZlR0Y2JpQWdmVnh1WEc0Z0lDOHFLbHh1SUNBZ0tpQm5aWFFnZEdobElHeGxibWQwYUNCdlppQjBhR1VnYzNSdmNtVmNiaUFnSUNwY2JpQWdJQ292WEc0Z0lHZGxkRk4wWVdOcktDa2dlMXh1SUNBZ0lISmxkSFZ5YmlCUFltcGxZM1F1YTJWNWN5aDBhR2x6TGw5emRHOXlaU2t1YkdWdVozUm9PMXh1SUNCOVhHNWNiaUFnTHlvcVhHNGdJQ0FxSUVCbWRXNWpkR2x2YmlCZloyVnVTV1FvS1NCblpXNWxjbUYwWlhNZ2RHaGxJRzVsZHlCeVpXWmxjbVZ1WTJVZ2FXUmNiaUFnSUNwY2JpQWdJQ29nUUhKbGRIVnlibk1nZTA1MWJXSmxjbjBnYzIxaGJHeGxjM1FnWVhaaGFXeGhZbXhsSUdsa0lHRnVaQ0J5WlhObGNuWmxjeUJwZEZ4dUlDQWdLaTljYmlBZ1gyZGxia2xrS0NrZ2UxeHVJQ0FnSUhaaGNpQnBaRHRjYmlBZ0lDQnBaaUFvZEdocGN5NWZhVzVrYVdObGN5NXNaVzVuZEdnZ1BUMDlJREVwSUh0Y2JpQWdJQ0FnSUdsa0lEMGdkR2hwY3k1ZmFXNWthV05sYzFzd1hTc3JPMXh1SUNBZ0lIMGdaV3h6WlNCN1hHNGdJQ0FnSUNCcFpDQTlJSFJvYVhNdVgybHVaR2xqWlhNdWMyaHBablFvS1R0Y2JpQWdJQ0I5WEc1Y2JpQWdJQ0J5WlhSMWNtNGdhV1E3WEc0Z0lIMWNibHh1SUNBdktpcGNiaUFnSUNvZ1VtVnNaV0Z6WlhNZ2RHaGxJR2RwZG1WdUlISmxabVZ5Wlc1alpTQnBaQ0J6YnlCMGFHRjBJR2wwSUhkcGJHd2dZbVVnWVhaaGFXeGhZbXhsSUdKNVhHNGdJQ0FxSUdGdWIzUm9aWElnYjJKcVpXTjBJSE4wYjNKbFpGeHVJQ0FnS2x4dUlDQWdLaUJBY0dGeVlXMGdlMDUxYldKbGNuMGdhV1FnZEc4Z2NtVnNaV0Z6WlZ4dUlDQWdLaTljYmlBZ1gzSmxiR1ZoYzJWSlpDaHBaQ2tnZTF4dUlDQWdJR1p2Y2lBb2RtRnlJR2tnUFNBd095QnBJRHdnZEdocGN5NWZhVzVrYVdObGN5NXNaVzVuZEdnN0lHa3JLeWtnZTF4dUlDQWdJQ0FnYVdZZ0tHbGtJRHdnZEdocGN5NWZhVzVrYVdObGMxdHBYU2tnZTF4dUlDQWdJQ0FnSUNCMGFHbHpMbDlwYm1ScFkyVnpMbk53YkdsalpTaHBMQ0F3TENCcFpDazdYRzRnSUNBZ0lDQWdJR0p5WldGck8xeHVJQ0FnSUNBZ2ZWeHVJQ0FnSUgxY2JseHVJQ0FnSUM4dklHTnNaV0Z1YVc1bkxYVndJSFJvWlNCelpYRjFaVzVqWlNCMFlXbHNYRzRnSUNBZ1ptOXlJQ2hwSUQwZ2RHaHBjeTVmYVc1a2FXTmxjeTVzWlc1bmRHZ2dMU0F4T3lCcElENDlJREE3SUdrdExTa2dlMXh1SUNBZ0lDQWdhV1lnS0hSb2FYTXVYMmx1WkdsalpYTmJhVjBnTFNBeElEMDlQU0IwYUdsekxsOXBibVJwWTJWelcya2dMU0F4WFNrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5cGJtUnBZMlZ6TG5CdmNDZ3BPMXh1SUNBZ0lDQWdmU0JsYkhObElIdGNiaUFnSUNBZ0lDQWdZbkpsWVdzN1hHNGdJQ0FnSUNCOVhHNGdJQ0FnZlZ4dUlDQjlYRzVjYmlBZ0x5b3FYRzRnSUNBcUlGTjBiM0psY3lCMGFHVWdaMmwyWlc0Z2IySnFaV04wSUdGdVpDQnlaWFIxY201eklIUm9aU0J5WldabGNtNWpaU0JwWkNCcGJuTjBaV0ZrWEc0Z0lDQXFYRzRnSUNBcUlFQndZWEpoYlNCN1QySnFaV04wZlNCdlltb2dkRzhnYzNSdmNtVmNiaUFnSUNwY2JpQWdJQ29nUUhKbGRIVnlibk1nZTA1MWJXSmxjbjBnY21WbVpYSmxibU5sSUdsa0lHOW1JSFJvWlNCemRHOXlaV1FnYjJKcVpXTjBYRzRnSUNBcUwxeHVJQ0J3ZFhRb2IySnFLU0I3WEc0Z0lDQWdhV1lnS0hSb2FYTXVYMkoxYzNsSVlXNWtiR1Z5SUNZbUlFOWlhbVZqZEM1clpYbHpLSFJvYVhNdVgzTjBiM0psS1M1c1pXNW5kR2dnUFQwOUlEQXBJSHRjYmlBZ0lDQWdJSFJvYVhNdVgySjFjM2xJWVc1a2JHVnlLQ2s3WEc0Z0lDQWdmVnh1SUNBZ0lIWmhjaUJwWkNBOUlIUm9hWE11WDJkbGJrbGtLQ2s3WEc0Z0lDQWdkR2hwY3k1ZmMzUnZjbVZiYVdSZElEMGdiMkpxTzF4dUlDQWdJSEpsZEhWeWJpQnBaRHRjYmlBZ2ZWeHVYRzRnSUM4cUtseHVJQ0FnS2lCU1pYUnlhV1YyWlhNZ2NISmxkbWx2ZFhOc2VTQnpkRzl5WldRZ2IySnFaV04wSUdGdVpDQnlaV3hsWVhObGN5QnBkSE1nY21WbVpYSmxibU5sWEc0Z0lDQXFYRzRnSUNBcUlFQndZWEpoYlNCN1RuVnRZbVZ5ZlNCcFpDQnZaaUJoYmlCdlltcGxZM1FnZEc4Z2NtVjBjbWxsZG1WY2JpQWdJQ292WEc0Z0lHWmxkR05vS0dsa0tTQjdYRzRnSUNBZ2RtRnlJRzlpYWlBOUlIUm9hWE11WDNOMGIzSmxXMmxrWFR0Y2JpQWdJQ0JwWmlBb2IySnFJQ1ltSUNGdlltb3VYMTl5WlcxdmRHVmZiV1YwYUc5a0tTQjdYRzRnSUNBZ0lDQmtaV3hsZEdVZ2RHaHBjeTVmYzNSdmNtVmJhV1JkTzF4dUlDQWdJQ0FnZEdocGN5NWZjbVZzWldGelpVbGtLR2xrS1R0Y2JpQWdJQ0FnSUdsbUlDaDBhR2x6TGw5eVpXRmtlVWhoYm1Sc1pYSWdKaVlnVDJKcVpXTjBMbXRsZVhNb2RHaHBjeTVmYzNSdmNtVXBMbXhsYm1kMGFDQTlQVDBnTUNrZ2UxeHVJQ0FnSUNBZ0lDQjBhR2x6TGw5eVpXRmtlVWhoYm1Sc1pYSW9LVHRjYmlBZ0lDQWdJSDFjYmlBZ0lDQjlYRzRnSUNBZ2FXWWdLRzlpYWlBbUppQnZZbW91WDE5cVlXbHNaV1JmY0dGcGNuTmZYeWtnZTF4dUlDQWdJQ0FnWTI5dWMzUWdYMmxrSUQwZ1oyVjBTMlY1UW5sV1lXeDFaU2gwYUdsekxsOXpkRzl5WlN3Z2IySnFMbDlmYW1GcGJHVmtYM0JoYVhKelgxOHBPMXh1SUNBZ0lDQWdkR2hwY3k1bVpYUmphQ2hmYVdRcE8xeHVJQ0FnSUgxY2JpQWdJQ0J5WlhSMWNtNGdiMkpxTzF4dUlDQjlYRzVjYmlBZ0x5b3FYRzRnSUNBcUlGSmxkSEpwWlhabGN5QndjbVYyYVc5MWMyeDVJSE4wYjNKbFpDQnZZbXBsWTNSY2JpQWdJQ3BjYmlBZ0lDb2dRSEJoY21GdElIdE9kVzFpWlhKOUlHbGtJRzltSUdGdUlHOWlhbVZqZENCMGJ5QnlaWFJ5YVdWMlpWeHVJQ0FnS2k5Y2JpQWdMeThnY21WMGNtbGxkbVVvYVdRcElIdGNiaUFnTHk4Z0lDQWdJSFpoY2lCdlltb2dQU0IwYUdsekxsOXpkRzl5WlZ0cFpGMDdYRzRnSUM4dklDQWdJQ0J5WlhSMWNtNGdiMkpxTzF4dUlDQXZMeUI5WEc1OVhHNGlYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3T3pzN1FVRkpRVHRCUVVWQk8wRkJSVUU3UVVGRFFUdEJRVWRCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenM3T3pzN096czdRVUZSUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVVZCT3pzN096czdPenRCUVUxQk8wRkJRMEU3UVVGRFFUdEJRVVZCT3pzN096czdPenM3UVVGUlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdPenM3T3pzN096czdPMEZCVTBFN1FVRkRRVHRCUVVOQk8wRkJSVUU3T3pzN08wRkJSMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdPenM3T3pzN08wRkJUVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVWQk96czdPenM3UVVGSlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQmRFSkJPMEZCZVVKQk8wRkJRMEU3UVVGR1FUdEJRVXRCTzBGQlEwRTdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkRRVHRCUVVOQk8wRkJSVUU3T3p0QlFVZEJPMEZCUTBFN1FVRkRRVHRCUVVSQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUjBFN1FVRkRRVHRCUVVkQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlMwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVGQk8wRkJTMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUVVFN1FVRjZSMEU3UVVFeVIwRTdRVUZGUVRzN096czdPMEZCU1VFN1FVRkRRVHRCUVVGQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVsQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRktRVHRCUVUxQk8wRkJSVUU3T3pzN096czdRVUZMUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUlVFN096czdPenM3T3pzN096dEJRVlZCTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUlVFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVeEJPMEZCVTBFN1FVRkRRVHRCUVVOQk8wRkJTVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkZRVHM3T3pzN08wRkJTVUU3UVVGRFFUdEJRVUZCTzBGQlFVRTdRVUZEUVR0QlFVVkJPenM3T3pzN096czdPenRCUVZWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVXBCTzBGQlRVRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZMUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJTMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVWQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVWkJPMEZCU1VFN1FVRkRRVHRCUVU1Qk8wRkJVMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkhRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlNrRTdRVUZOUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVaEJPMEZCUzBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVWhCTzBGQlMwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkpRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGS1FUdEJRVTFCTzBGQlEwRTdRVUZEUVR0QlFVbEJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVwQk8wRkJUVUU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVWhCTzBGQlMwRTdRVUZGUVR0QlFWSkJPMEZCYlVKQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVTkJPMEZCUlVFN1FVRlNRVHRCUVZWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlNVRTdRVUZEUVR0QlFVbEJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCU1VFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJSMEU3UVVGRFFUdEJRVWxCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVWRCTzBGQlMwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVV0Qk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVU5CTzBGQlEwRTdRVUZGUVRzN096czdPenM3T3pzN096dEJRVmRCTzBGQlEwRTdRVUZGUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlJVRTdPenM3T3pzN096czdPenM3T3p0QlFXRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJUa0U3UVVGVlFUdEJRVU5CTzBGQlIwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUlVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVXhCTzBGQlUwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVWQk96czdPenRCUVVkQk8wRkJRMEU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUlVFN096czdPenM3TzBGQlRVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRTNNRUpCTzBGQkt6QkNRVHM3T3pzN096czdPenM3T3pzN096czdPenM3T3pzN08wRkJkVUpCTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVVkJPenM3T3pzN08wRkJTMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdPenM3T3pzN1FVRkxRVHRCUVVOQk8wRkJRMEU3UVVGRlFUczdPenM3TzBGQlNVRTdRVUZEUVR0QlFVTkJPMEZCUlVFN096czdPenM3UVVGTFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdPenM3T3pzN08wRkJUVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJSVUU3T3pzN096czdPenRCUVU5Qk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVOQk8wRkJSVUU3T3pzN096czdRVUZMUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGQlFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGRFFUdEJRVUZCTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkZRVHM3T3pzN1FVRkxRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUV4U0VFaUxDSnpiM1Z5WTJWU2IyOTBJam9pSW4wPVxcXFxuLy8jIHNvdXJjZVVSTD13ZWJwYWNrLWludGVybmFsOi8vLy4vc3JjL3JwYy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSksXFxuXFxuLyoqKi8gXFxcIi4vc3JjL3V0aWxzLmpzXFxcIjpcXG4vKiEqKioqKioqKioqKioqKioqKioqKioqISpcXFxcXFxuICAhKioqIC4vc3JjL3V0aWxzLmpzICoqKiFcXG4gIFxcXFwqKioqKioqKioqKioqKioqKioqKioqL1xcbi8qISBleHBvcnRzIHByb3ZpZGVkOiByYW5kSWQsIGR0eXBlVG9UeXBlZEFycmF5LCB0eXBlZEFycmF5VG9EdHlwZSwgQ09ORklHX1NDSEVNQSwgY29tcGFyZVZlcnNpb25zLCBjYWNoZVJlcXVpcmVtZW50cywgc2V0dXBTZXJ2aWNlV29ya2VyLCBXaGVuYWJsZSAqL1xcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcXG5cXG5cXFwidXNlIHN0cmljdFxcXCI7XFxuZXZhbChcXFwiX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xcXFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFxcXFxcInJhbmRJZFxcXFxcXFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIHJhbmRJZDsgfSk7XFxcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXFxcXFwiZHR5cGVUb1R5cGVkQXJyYXlcXFxcXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBkdHlwZVRvVHlwZWRBcnJheTsgfSk7XFxcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXFxcXFwidHlwZWRBcnJheVRvRHR5cGVcXFxcXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiB0eXBlZEFycmF5VG9EdHlwZTsgfSk7XFxcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXFxcXFwiQ09ORklHX1NDSEVNQVxcXFxcXFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIENPTkZJR19TQ0hFTUE7IH0pO1xcXFxuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcXFxcXFxcImNvbXBhcmVWZXJzaW9uc1xcXFxcXFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbXBhcmVWZXJzaW9uczsgfSk7XFxcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXFxcXFwiY2FjaGVSZXF1aXJlbWVudHNcXFxcXFxcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBjYWNoZVJlcXVpcmVtZW50czsgfSk7XFxcXG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFxcXFxcXFwic2V0dXBTZXJ2aWNlV29ya2VyXFxcXFxcXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gc2V0dXBTZXJ2aWNlV29ya2VyOyB9KTtcXFxcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXFxcXFxcXCJXaGVuYWJsZVxcXFxcXFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIFdoZW5hYmxlOyB9KTtcXFxcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBhanZfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIGFqdiAqLyBcXFxcXFxcIi4vbm9kZV9tb2R1bGVzL2Fqdi9saWIvYWp2LmpzXFxcXFxcXCIpO1xcXFxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIGFqdl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGFqdl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fKTtcXFxcblxcXFxuY29uc3QgYWp2ID0gbmV3IGFqdl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fX2RlZmF1bHQuYSgpO1xcXFxuZnVuY3Rpb24gcmFuZElkKCkge1xcXFxuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDEwKTtcXFxcbn1cXFxcbmNvbnN0IGR0eXBlVG9UeXBlZEFycmF5ID0ge1xcXFxuICBpbnQ4OiBcXFxcXFxcIkludDhBcnJheVxcXFxcXFwiLFxcXFxuICBpbnQxNjogXFxcXFxcXCJJbnQxNkFycmF5XFxcXFxcXCIsXFxcXG4gIGludDMyOiBcXFxcXFxcIkludDMyQXJyYXlcXFxcXFxcIixcXFxcbiAgdWludDg6IFxcXFxcXFwiVWludDhBcnJheVxcXFxcXFwiLFxcXFxuICB1aW50MTY6IFxcXFxcXFwiVWludDE2QXJyYXlcXFxcXFxcIixcXFxcbiAgdWludDMyOiBcXFxcXFxcIlVpbnQzMkFycmF5XFxcXFxcXCIsXFxcXG4gIGZsb2F0MzI6IFxcXFxcXFwiRmxvYXQzMkFycmF5XFxcXFxcXCIsXFxcXG4gIGZsb2F0NjQ6IFxcXFxcXFwiRmxvYXQ2NEFycmF5XFxcXFxcXCIsXFxcXG4gIGFycmF5OiBcXFxcXFxcIkFycmF5XFxcXFxcXCJcXFxcbn07XFxcXG5jb25zdCB0eXBlZEFycmF5VG9EdHlwZSA9IHtcXFxcbiAgSW50OEFycmF5OiBcXFxcXFxcImludDhcXFxcXFxcIixcXFxcbiAgSW50MTZBcnJheTogXFxcXFxcXCJpbnQxNlxcXFxcXFwiLFxcXFxuICBJbnQzMkFycmF5OiBcXFxcXFxcImludDMyXFxcXFxcXCIsXFxcXG4gIFVpbnQ4QXJyYXk6IFxcXFxcXFwidWludDhcXFxcXFxcIixcXFxcbiAgVWludDE2QXJyYXk6IFxcXFxcXFwidWludDE2XFxcXFxcXCIsXFxcXG4gIFVpbnQzMkFycmF5OiBcXFxcXFxcInVpbnQzMlxcXFxcXFwiLFxcXFxuICBGbG9hdDMyQXJyYXk6IFxcXFxcXFwiZmxvYXQzMlxcXFxcXFwiLFxcXFxuICBGbG9hdDY0QXJyYXk6IFxcXFxcXFwiZmxvYXQ2NFxcXFxcXFwiLFxcXFxuICBBcnJheTogXFxcXFxcXCJhcnJheVxcXFxcXFwiXFxcXG59O1xcXFxuY29uc3QgQ09ORklHX1NDSEVNQSA9IGFqdi5jb21waWxlKHtcXFxcbiAgcHJvcGVydGllczoge1xcXFxuICAgIGFsbG93X2V4ZWN1dGlvbjoge1xcXFxuICAgICAgdHlwZTogXFxcXFxcXCJib29sZWFuXFxcXFxcXCJcXFxcbiAgICB9LFxcXFxuICAgIGFwaV92ZXJzaW9uOiB7XFxcXG4gICAgICB0eXBlOiBcXFxcXFxcInN0cmluZ1xcXFxcXFwiXFxcXG4gICAgfSxcXFxcbiAgICBjb3Zlcjoge1xcXFxuICAgICAgdHlwZTogW1xcXFxcXFwic3RyaW5nXFxcXFxcXCIsIFxcXFxcXFwiYXJyYXlcXFxcXFxcIl1cXFxcbiAgICB9LFxcXFxuICAgIGRlZGljYXRlZF90aHJlYWQ6IHtcXFxcbiAgICAgIHR5cGU6IFxcXFxcXFwiYm9vbGVhblxcXFxcXFwiXFxcXG4gICAgfSxcXFxcbiAgICBkZXNjcmlwdGlvbjoge1xcXFxuICAgICAgdHlwZTogXFxcXFxcXCJzdHJpbmdcXFxcXFxcIixcXFxcbiAgICAgIG1heExlbmd0aDogMjU2XFxcXG4gICAgfSxcXFxcbiAgICBmbGFnczoge1xcXFxuICAgICAgdHlwZTogXFxcXFxcXCJhcnJheVxcXFxcXFwiXFxcXG4gICAgfSxcXFxcbiAgICBpY29uOiB7XFxcXG4gICAgICB0eXBlOiBcXFxcXFxcInN0cmluZ1xcXFxcXFwiXFxcXG4gICAgfSxcXFxcbiAgICBpZDoge1xcXFxuICAgICAgdHlwZTogXFxcXFxcXCJzdHJpbmdcXFxcXFxcIlxcXFxuICAgIH0sXFxcXG4gICAgaW5wdXRzOiB7XFxcXG4gICAgICB0eXBlOiBbXFxcXFxcXCJvYmplY3RcXFxcXFxcIiwgXFxcXFxcXCJhcnJheVxcXFxcXFwiXVxcXFxuICAgIH0sXFxcXG4gICAgbGFiZWxzOiB7XFxcXG4gICAgICB0eXBlOiBcXFxcXFxcImFycmF5XFxcXFxcXCJcXFxcbiAgICB9LFxcXFxuICAgIGxhbmc6IHtcXFxcbiAgICAgIHR5cGU6IFxcXFxcXFwic3RyaW5nXFxcXFxcXCJcXFxcbiAgICB9LFxcXFxuICAgIG5hbWU6IHtcXFxcbiAgICAgIHR5cGU6IFxcXFxcXFwic3RyaW5nXFxcXFxcXCJcXFxcbiAgICB9LFxcXFxuICAgIG91dHB1dHM6IHtcXFxcbiAgICAgIHR5cGU6IFtcXFxcXFxcIm9iamVjdFxcXFxcXFwiLCBcXFxcXFxcImFycmF5XFxcXFxcXCJdXFxcXG4gICAgfSxcXFxcbiAgICB0YWdzOiB7XFxcXG4gICAgICB0eXBlOiBcXFxcXFxcImFycmF5XFxcXFxcXCJcXFxcbiAgICB9LFxcXFxuICAgIHRva2VuOiB7XFxcXG4gICAgICB0eXBlOiBcXFxcXFxcInN0cmluZ1xcXFxcXFwiXFxcXG4gICAgfSxcXFxcbiAgICB1aToge1xcXFxuICAgICAgdHlwZTogXFxcXFxcXCJzdHJpbmdcXFxcXFxcIlxcXFxuICAgIH0sXFxcXG4gICAgdmVyc2lvbjoge1xcXFxuICAgICAgdHlwZTogXFxcXFxcXCJzdHJpbmdcXFxcXFxcIlxcXFxuICAgIH1cXFxcbiAgfSxcXFxcbiAgcmVxdWlyZWQ6IFtcXFxcXFxcImFwaV92ZXJzaW9uXFxcXFxcXCIsIFxcXFxcXFwiYWxsb3dfZXhlY3V0aW9uXFxcXFxcXCIsIFxcXFxcXFwidG9rZW5cXFxcXFxcIiwgXFxcXFxcXCJpZFxcXFxcXFwiXVxcXFxufSk7XFxcXG5mdW5jdGlvbiBjb21wYXJlVmVyc2lvbnModjEsIGNvbXBhcmF0b3IsIHYyKSB7XFxcXG4gIGNvbXBhcmF0b3IgPSBjb21wYXJhdG9yID09IFxcXFxcXFwiPVxcXFxcXFwiID8gXFxcXFxcXCI9PVxcXFxcXFwiIDogY29tcGFyYXRvcjtcXFxcblxcXFxuICBpZiAoW1xcXFxcXFwiPT1cXFxcXFxcIiwgXFxcXFxcXCI9PT1cXFxcXFxcIiwgXFxcXFxcXCI8XFxcXFxcXCIsIFxcXFxcXFwiPD1cXFxcXFxcIiwgXFxcXFxcXCI+XFxcXFxcXCIsIFxcXFxcXFwiPj1cXFxcXFxcIiwgXFxcXFxcXCIhPVxcXFxcXFwiLCBcXFxcXFxcIiE9PVxcXFxcXFwiXS5pbmRleE9mKGNvbXBhcmF0b3IpID09IC0xKSB7XFxcXG4gICAgdGhyb3cgbmV3IEVycm9yKFxcXFxcXFwiSW52YWxpZCBjb21wYXJhdG9yLiBcXFxcXFxcIiArIGNvbXBhcmF0b3IpO1xcXFxuICB9XFxcXG5cXFxcbiAgdmFyIHYxcGFydHMgPSB2MS5zcGxpdChcXFxcXFxcIi5cXFxcXFxcIiksXFxcXG4gICAgICB2MnBhcnRzID0gdjIuc3BsaXQoXFxcXFxcXCIuXFxcXFxcXCIpO1xcXFxuICB2YXIgbWF4TGVuID0gTWF0aC5tYXgodjFwYXJ0cy5sZW5ndGgsIHYycGFydHMubGVuZ3RoKTtcXFxcbiAgdmFyIHBhcnQxLCBwYXJ0MjtcXFxcbiAgdmFyIGNtcCA9IDA7XFxcXG5cXFxcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtYXhMZW4gJiYgIWNtcDsgaSsrKSB7XFxcXG4gICAgcGFydDEgPSBwYXJzZUludCh2MXBhcnRzW2ldLCAxMCkgfHwgMDtcXFxcbiAgICBwYXJ0MiA9IHBhcnNlSW50KHYycGFydHNbaV0sIDEwKSB8fCAwO1xcXFxuICAgIGlmIChwYXJ0MSA8IHBhcnQyKSBjbXAgPSAxO1xcXFxuICAgIGlmIChwYXJ0MSA+IHBhcnQyKSBjbXAgPSAtMTtcXFxcbiAgfVxcXFxuXFxcXG4gIHJldHVybiBldmFsKFxcXFxcXFwiMFxcXFxcXFwiICsgY29tcGFyYXRvciArIGNtcCk7XFxcXG59XFxcXG5cXFxcbmZ1bmN0aW9uIGNhY2hlVXJsSW5TZXJ2aWNlV29ya2VyKHVybCkge1xcXFxuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xcXFxuICAgIGNvbnN0IG1lc3NhZ2UgPSB7XFxcXG4gICAgICBjb21tYW5kOiBcXFxcXFxcImFkZFxcXFxcXFwiLFxcXFxuICAgICAgdXJsOiB1cmxcXFxcbiAgICB9O1xcXFxuXFxcXG4gICAgaWYgKCFuYXZpZ2F0b3Iuc2VydmljZVdvcmtlciB8fCAhbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIpIHtcXFxcbiAgICAgIHJlamVjdChcXFxcXFxcIlNlcnZpY2Ugd29ya2VyIGlzIG5vdCBzdXBwb3J0ZWQuXFxcXFxcXCIpO1xcXFxuICAgICAgcmV0dXJuO1xcXFxuICAgIH1cXFxcblxcXFxuICAgIGNvbnN0IG1lc3NhZ2VDaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XFxcXG5cXFxcbiAgICBtZXNzYWdlQ2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZlbnQpIHtcXFxcbiAgICAgIGlmIChldmVudC5kYXRhICYmIGV2ZW50LmRhdGEuZXJyb3IpIHtcXFxcbiAgICAgICAgcmVqZWN0KGV2ZW50LmRhdGEuZXJyb3IpO1xcXFxuICAgICAgfSBlbHNlIHtcXFxcbiAgICAgICAgcmVzb2x2ZShldmVudC5kYXRhICYmIGV2ZW50LmRhdGEucmVzdWx0KTtcXFxcbiAgICAgIH1cXFxcbiAgICB9O1xcXFxuXFxcXG4gICAgaWYgKG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyICYmIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmNvbnRyb2xsZXIpIHtcXFxcbiAgICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmNvbnRyb2xsZXIucG9zdE1lc3NhZ2UobWVzc2FnZSwgW21lc3NhZ2VDaGFubmVsLnBvcnQyXSk7XFxcXG4gICAgfSBlbHNlIHtcXFxcbiAgICAgIHJlamVjdChcXFxcXFxcIlNlcnZpY2Ugd29ya2VyIGNvbnRyb2xsZXIgaXMgbm90IGF2YWlsYWJsZVxcXFxcXFwiKTtcXFxcbiAgICB9XFxcXG4gIH0pO1xcXFxufVxcXFxuXFxcXG5hc3luYyBmdW5jdGlvbiBjYWNoZVJlcXVpcmVtZW50cyhyZXF1aXJlbWVudHMpIHtcXFxcbiAgaWYgKHJlcXVpcmVtZW50cyAmJiByZXF1aXJlbWVudHMubGVuZ3RoID4gMCkge1xcXFxuICAgIGZvciAobGV0IHJlcSBvZiByZXF1aXJlbWVudHMpIHtcXFxcbiAgICAgIC8vcmVtb3ZlIHByZWZpeFxcXFxuICAgICAgaWYgKHJlcS5zdGFydHNXaXRoKFxcXFxcXFwianM6XFxcXFxcXCIpKSByZXEgPSByZXEuc2xpY2UoMyk7XFxcXG4gICAgICBpZiAocmVxLnN0YXJ0c1dpdGgoXFxcXFxcXCJjc3M6XFxcXFxcXCIpKSByZXEgPSByZXEuc2xpY2UoNCk7XFxcXG4gICAgICBpZiAocmVxLnN0YXJ0c1dpdGgoXFxcXFxcXCJjYWNoZTpcXFxcXFxcIikpIHJlcSA9IHJlcS5zbGljZSg2KTtcXFxcbiAgICAgIGlmICghcmVxLnN0YXJ0c1dpdGgoXFxcXFxcXCJodHRwXFxcXFxcXCIpKSBjb250aW51ZTtcXFxcbiAgICAgIGF3YWl0IGNhY2hlVXJsSW5TZXJ2aWNlV29ya2VyKHJlcSkuY2F0Y2goZSA9PiB7XFxcXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XFxcXG4gICAgICB9KTtcXFxcbiAgICB9XFxcXG4gIH1cXFxcbn1cXFxcbmZ1bmN0aW9uIHNldHVwU2VydmljZVdvcmtlcih0YXJnZXRPcmlnaW4sIGNhY2hlQ2FsbGJhY2spIHtcXFxcbiAgLy8gcmVnaXN0ZXIgc2VydmljZSB3b3JrZXIgZm9yIG9mZmxpbmUgYWNjZXNzXFxcXG4gIGlmIChcXFxcXFxcInNlcnZpY2VXb3JrZXJcXFxcXFxcIiBpbiBuYXZpZ2F0b3IpIHtcXFxcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcXFxcXFxcImxvYWRcXFxcXFxcIiwgZnVuY3Rpb24gKCkge1xcXFxuICAgICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoXFxcXFxcXCIvcGx1Z2luLXNlcnZpY2Utd29ya2VyLmpzXFxcXFxcXCIpLnRoZW4oZnVuY3Rpb24gKHJlZ2lzdHJhdGlvbikge1xcXFxuICAgICAgICAvLyBSZWdpc3RyYXRpb24gd2FzIHN1Y2Nlc3NmdWxcXFxcbiAgICAgICAgY29uc29sZS5sb2coXFxcXFxcXCJTZXJ2aWNlV29ya2VyIHJlZ2lzdHJhdGlvbiBzdWNjZXNzZnVsIHdpdGggc2NvcGU6IFxcXFxcXFwiLCByZWdpc3RyYXRpb24uc2NvcGUpO1xcXFxuICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xcXFxuICAgICAgICAvLyByZWdpc3RyYXRpb24gZmFpbGVkIDooXFxcXG4gICAgICAgIGNvbnNvbGUubG9nKFxcXFxcXFwiU2VydmljZVdvcmtlciByZWdpc3RyYXRpb24gZmFpbGVkOiBcXFxcXFxcIiwgZXJyKTtcXFxcbiAgICAgIH0pO1xcXFxuICAgICAgdGFyZ2V0T3JpZ2luID0gdGFyZ2V0T3JpZ2luIHx8IFxcXFxcXFwiKlxcXFxcXFwiO1xcXFxuICAgICAgY2FjaGVDYWxsYmFjayA9IGNhY2hlQ2FsbGJhY2sgfHwgY2FjaGVSZXF1aXJlbWVudHM7XFxcXG5cXFxcbiAgICAgIGlmIChjYWNoZUNhbGxiYWNrICYmIHR5cGVvZiBjYWNoZUNhbGxiYWNrICE9PSBcXFxcXFxcImZ1bmN0aW9uXFxcXFxcXCIpIHtcXFxcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxcXFxcXFwiY29uZmlnLmNhY2hlX3JlcXVpcmVtZW50cyBtdXN0IGJlIGEgZnVuY3Rpb25cXFxcXFxcIik7XFxcXG4gICAgICB9XFxcXG5cXFxcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFxcXFxcXFwibWVzc2FnZVxcXFxcXFwiLCBmdW5jdGlvbiAoZSkge1xcXFxuICAgICAgICBpZiAodGFyZ2V0T3JpZ2luID09PSBcXFxcXFxcIipcXFxcXFxcIiB8fCBlLm9yaWdpbiA9PT0gdGFyZ2V0T3JpZ2luKSB7XFxcXG4gICAgICAgICAgY29uc3QgbSA9IGUuZGF0YTtcXFxcblxcXFxuICAgICAgICAgIGlmIChtLnR5cGUgPT09IFxcXFxcXFwiY2FjaGVSZXF1aXJlbWVudHNcXFxcXFxcIikge1xcXFxuICAgICAgICAgICAgY2FjaGVDYWxsYmFjayhtLnJlcXVpcmVtZW50cyk7XFxcXG4gICAgICAgICAgfVxcXFxuICAgICAgICB9XFxcXG4gICAgICB9KTtcXFxcbiAgICB9KTtcXFxcbiAgfVxcXFxufVxcXFxuLyoqXFxcXG4gKiBBIHNwZWNpYWwga2luZCBvZiBldmVudDpcXFxcbiAqICAtIHdoaWNoIGNhbiBvbmx5IGJlIGVtaXR0ZWQgb25jZTtcXFxcbiAqICAtIGV4ZWN1dGVzIGEgc2V0IG9mIHN1YnNjcmliZWQgaGFuZGxlcnMgdXBvbiBlbWlzc2lvbjtcXFxcbiAqICAtIGlmIGEgaGFuZGxlciBpcyBzdWJzY3JpYmVkIGFmdGVyIHRoZSBldmVudCB3YXMgZW1pdHRlZCwgaXRcXFxcbiAqICAgIHdpbGwgYmUgaW52b2tlZCBpbW1pZGVhdGVseS5cXFxcbiAqXFxcXG4gKiBVc2VkIGZvciB0aGUgZXZlbnRzIHdoaWNoIG9ubHkgaGFwcGVuIG9uY2UgKG9yIGRvIG5vdCBoYXBwZW4gYXRcXFxcbiAqIGFsbCkgZHVyaW5nIGEgc2luZ2xlIHBsdWdpbiBsaWZlY3ljbGUgLSBjb25uZWN0LCBkaXNjb25uZWN0IGFuZFxcXFxuICogY29ubmVjdGlvbiBmYWlsdXJlXFxcXG4gKi9cXFxcblxcXFxuY29uc3QgV2hlbmFibGUgPSBmdW5jdGlvbiAobXVsdGlfZW1pdCkge1xcXFxuICB0aGlzLl9tdWx0aV9lbWl0ID0gbXVsdGlfZW1pdDtcXFxcbiAgdGhpcy5fZW1pdHRlZCA9IGZhbHNlO1xcXFxuICB0aGlzLl9oYW5kbGVycyA9IFtdO1xcXFxufTtcXFxcbi8qKlxcXFxuICogRW1pdHMgdGhlIFdoZW5hYmxlIGV2ZW50LCBjYWxscyBhbGwgdGhlIGhhbmRsZXJzIGFscmVhZHlcXFxcbiAqIHN1YnNjcmliZWQsIHN3aXRjaGVzIHRoZSBvYmplY3QgdG8gdGhlICdlbWl0dGVkJyBzdGF0ZSAod2hlblxcXFxuICogYWxsIGZ1dHVyZSBzdWJzY2liZWQgbGlzdGVuZXJzIHdpbGwgYmUgaW1taWRlYXRlbHkgaXNzdWVkXFxcXG4gKiBpbnN0ZWFkIG9mIGJlaW5nIHN0b3JlZClcXFxcbiAqL1xcXFxuXFxcXG5XaGVuYWJsZS5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIChlKSB7XFxcXG4gIGlmICh0aGlzLl9tdWx0aV9lbWl0KSB7XFxcXG4gICAgdGhpcy5fZW1pdHRlZCA9IHRydWU7XFxcXG4gICAgdGhpcy5fZSA9IGU7XFxcXG5cXFxcbiAgICBmb3IgKGxldCBoYW5kbGVyIG9mIHRoaXMuX2hhbmRsZXJzKSB7XFxcXG4gICAgICBzZXRUaW1lb3V0KGhhbmRsZXIuYmluZChudWxsLCBlKSwgMCk7XFxcXG4gICAgfVxcXFxuICB9IGVsc2UgaWYgKCF0aGlzLl9lbWl0dGVkKSB7XFxcXG4gICAgdGhpcy5fZW1pdHRlZCA9IHRydWU7XFxcXG4gICAgdGhpcy5fZSA9IGU7XFxcXG4gICAgdmFyIGhhbmRsZXI7XFxcXG5cXFxcbiAgICB3aGlsZSAoaGFuZGxlciA9IHRoaXMuX2hhbmRsZXJzLnBvcCgpKSB7XFxcXG4gICAgICBzZXRUaW1lb3V0KGhhbmRsZXIuYmluZChudWxsLCBlKSwgMCk7XFxcXG4gICAgfVxcXFxuICB9XFxcXG59O1xcXFxuLyoqXFxcXG4gKiBTYXZlcyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gYXMgYSBoYW5kbGVyIGZvciB0aGUgV2hlbmFibGVcXFxcbiAqIGV2ZW50LiBUaGlzIGhhbmRsZXIgd2lsbCB0aGVuIGJlIGNhbGxlZCB1cG9uIHRoZSBldmVudCBlbWlzc2lvblxcXFxuICogKGlmIGl0IGhhcyBub3QgYmVlbiBlbWl0dGVkIHlldCksIG9yIHdpbGwgYmUgc2NoZWR1bGVkIGZvclxcXFxuICogaW1tZWRpYXRlIGlzc3VlIChpZiB0aGUgZXZlbnQgaGFzIGFscmVhZHkgYmVlbiBlbW1pdHRlZCBiZWZvcmUpXFxcXG4gKlxcXFxuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciB0byBzdWJzY3JpYmUgZm9yIHRoZSBldmVudFxcXFxuICovXFxcXG5cXFxcblxcXFxuV2hlbmFibGUucHJvdG90eXBlLndoZW5FbWl0dGVkID0gZnVuY3Rpb24gKGhhbmRsZXIpIHtcXFxcbiAgaGFuZGxlciA9IHRoaXMuX2NoZWNrSGFuZGxlcihoYW5kbGVyKTtcXFxcblxcXFxuICBpZiAodGhpcy5fZW1pdHRlZCkge1xcXFxuICAgIHNldFRpbWVvdXQoaGFuZGxlci5iaW5kKG51bGwsIHRoaXMuX2UpLCAwKTtcXFxcbiAgfSBlbHNlIHtcXFxcbiAgICB0aGlzLl9oYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xcXFxuICB9XFxcXG59O1xcXFxuLyoqXFxcXG4gKiBDaGVja3MgaWYgdGhlIHByb3ZpZGVkIG9iamVjdCBpcyBzdWl0YWJsZSBmb3IgYmVpbmcgc3Vic2NyaWJlZFxcXFxuICogdG8gdGhlIGV2ZW50ICg9IGlzIGEgZnVuY3Rpb24pLCB0aHJvd3MgYW4gZXhjZXB0aW9uIGlmIG5vdFxcXFxuICpcXFxcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmogdG8gY2hlY2sgZm9yIGJlaW5nIHN1YnNjcmliYWJsZVxcXFxuICpcXFxcbiAqIEB0aHJvd3Mge0V4Y2VwdGlvbn0gaWYgb2JqZWN0IGlzIG5vdCBzdWl0YWJsZSBmb3Igc3Vic2NyaXB0aW9uXFxcXG4gKlxcXFxuICogQHJldHVybnMge09iamVjdH0gdGhlIHByb3ZpZGVkIG9iamVjdCBpZiB5ZXNcXFxcbiAqL1xcXFxuXFxcXG5cXFxcbldoZW5hYmxlLnByb3RvdHlwZS5fY2hlY2tIYW5kbGVyID0gZnVuY3Rpb24gKGhhbmRsZXIpIHtcXFxcbiAgdmFyIHR5cGUgPSB0eXBlb2YgaGFuZGxlcjtcXFxcblxcXFxuICBpZiAodHlwZSAhPT0gXFxcXFxcXCJmdW5jdGlvblxcXFxcXFwiKSB7XFxcXG4gICAgdmFyIG1zZyA9IFxcXFxcXFwiQSBmdW5jdGlvbiBtYXkgb25seSBiZSBzdWJzcmliZWQgdG8gdGhlIGV2ZW50LCBcXFxcXFxcIiArIHR5cGUgKyBcXFxcXFxcIiB3YXMgcHJvdmlkZWQgaW5zdGVhZFxcXFxcXFwiO1xcXFxuICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xcXFxuICB9XFxcXG5cXFxcbiAgcmV0dXJuIGhhbmRsZXI7XFxcXG59Oy8vIyBzb3VyY2VVUkw9W21vZHVsZV1cXFxcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pTGk5emNtTXZkWFJwYkhNdWFuTXVhbk1pTENKemIzVnlZMlZ6SWpwYkluZGxZbkJoWTJzNkx5OXBiV3B2ZVZKUVF5OXpjbU12ZFhScGJITXVhbk0vWVRNd05DSmRMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUpwYlhCdmNuUWdRV3AySUdaeWIyMGdYQ0poYW5aY0lqdGNibU52Ym5OMElHRnFkaUE5SUc1bGR5QkJhbllvS1R0Y2JseHVaWGh3YjNKMElHWjFibU4wYVc5dUlISmhibVJKWkNncElIdGNiaUFnY21WMGRYSnVJRTFoZEdndWNtRnVaRzl0S0NsY2JpQWdJQ0F1ZEc5VGRISnBibWNvTXpZcFhHNGdJQ0FnTG5OMVluTjBjaWd5TENBeE1DazdYRzU5WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JrZEhsd1pWUnZWSGx3WldSQmNuSmhlU0E5SUh0Y2JpQWdhVzUwT0RvZ1hDSkpiblE0UVhKeVlYbGNJaXhjYmlBZ2FXNTBNVFk2SUZ3aVNXNTBNVFpCY25KaGVWd2lMRnh1SUNCcGJuUXpNam9nWENKSmJuUXpNa0Z5Y21GNVhDSXNYRzRnSUhWcGJuUTRPaUJjSWxWcGJuUTRRWEp5WVhsY0lpeGNiaUFnZFdsdWRERTJPaUJjSWxWcGJuUXhOa0Z5Y21GNVhDSXNYRzRnSUhWcGJuUXpNam9nWENKVmFXNTBNekpCY25KaGVWd2lMRnh1SUNCbWJHOWhkRE15T2lCY0lrWnNiMkYwTXpKQmNuSmhlVndpTEZ4dUlDQm1iRzloZERZME9pQmNJa1pzYjJGME5qUkJjbkpoZVZ3aUxGeHVJQ0JoY25KaGVUb2dYQ0pCY25KaGVWd2lYRzU5TzF4dVpYaHdiM0owSUdOdmJuTjBJSFI1Y0dWa1FYSnlZWGxVYjBSMGVYQmxJRDBnZTF4dUlDQkpiblE0UVhKeVlYazZJRndpYVc1ME9Gd2lMRnh1SUNCSmJuUXhOa0Z5Y21GNU9pQmNJbWx1ZERFMlhDSXNYRzRnSUVsdWRETXlRWEp5WVhrNklGd2lhVzUwTXpKY0lpeGNiaUFnVldsdWREaEJjbkpoZVRvZ1hDSjFhVzUwT0Z3aUxGeHVJQ0JWYVc1ME1UWkJjbkpoZVRvZ1hDSjFhVzUwTVRaY0lpeGNiaUFnVldsdWRETXlRWEp5WVhrNklGd2lkV2x1ZERNeVhDSXNYRzRnSUVac2IyRjBNekpCY25KaGVUb2dYQ0ptYkc5aGRETXlYQ0lzWEc0Z0lFWnNiMkYwTmpSQmNuSmhlVG9nWENKbWJHOWhkRFkwWENJc1hHNGdJRUZ5Y21GNU9pQmNJbUZ5Y21GNVhDSmNibjA3WEc1Y2JtVjRjRzl5ZENCamIyNXpkQ0JEVDA1R1NVZGZVME5JUlUxQklEMGdZV3AyTG1OdmJYQnBiR1VvZTF4dUlDQndjbTl3WlhKMGFXVnpPaUI3WEc0Z0lDQWdZV3hzYjNkZlpYaGxZM1YwYVc5dU9pQjdJSFI1Y0dVNklGd2lZbTl2YkdWaGJsd2lJSDBzWEc0Z0lDQWdZWEJwWDNabGNuTnBiMjQ2SUhzZ2RIbHdaVG9nWENKemRISnBibWRjSWlCOUxGeHVJQ0FnSUdOdmRtVnlPaUI3SUhSNWNHVTZJRnRjSW5OMGNtbHVaMXdpTENCY0ltRnljbUY1WENKZElIMHNYRzRnSUNBZ1pHVmthV05oZEdWa1gzUm9jbVZoWkRvZ2V5QjBlWEJsT2lCY0ltSnZiMnhsWVc1Y0lpQjlMRnh1SUNBZ0lHUmxjMk55YVhCMGFXOXVPaUI3SUhSNWNHVTZJRndpYzNSeWFXNW5YQ0lzSUcxaGVFeGxibWQwYURvZ01qVTJJSDBzWEc0Z0lDQWdabXhoWjNNNklIc2dkSGx3WlRvZ1hDSmhjbkpoZVZ3aUlIMHNYRzRnSUNBZ2FXTnZiam9nZXlCMGVYQmxPaUJjSW5OMGNtbHVaMXdpSUgwc1hHNGdJQ0FnYVdRNklIc2dkSGx3WlRvZ1hDSnpkSEpwYm1kY0lpQjlMRnh1SUNBZ0lHbHVjSFYwY3pvZ2V5QjBlWEJsT2lCYlhDSnZZbXBsWTNSY0lpd2dYQ0poY25KaGVWd2lYU0I5TEZ4dUlDQWdJR3hoWW1Wc2N6b2dleUIwZVhCbE9pQmNJbUZ5Y21GNVhDSWdmU3hjYmlBZ0lDQnNZVzVuT2lCN0lIUjVjR1U2SUZ3aWMzUnlhVzVuWENJZ2ZTeGNiaUFnSUNCdVlXMWxPaUI3SUhSNWNHVTZJRndpYzNSeWFXNW5YQ0lnZlN4Y2JpQWdJQ0J2ZFhSd2RYUnpPaUI3SUhSNWNHVTZJRnRjSW05aWFtVmpkRndpTENCY0ltRnljbUY1WENKZElIMHNYRzRnSUNBZ2RHRm5jem9nZXlCMGVYQmxPaUJjSW1GeWNtRjVYQ0lnZlN4Y2JpQWdJQ0IwYjJ0bGJqb2dleUIwZVhCbE9pQmNJbk4wY21sdVoxd2lJSDBzWEc0Z0lDQWdkV2s2SUhzZ2RIbHdaVG9nWENKemRISnBibWRjSWlCOUxGeHVJQ0FnSUhabGNuTnBiMjQ2SUhzZ2RIbHdaVG9nWENKemRISnBibWRjSWlCOVhHNGdJSDBzWEc0Z0lISmxjWFZwY21Wa09pQmJYQ0poY0dsZmRtVnljMmx2Ymx3aUxDQmNJbUZzYkc5M1gyVjRaV04xZEdsdmJsd2lMQ0JjSW5SdmEyVnVYQ0lzSUZ3aWFXUmNJbDFjYm4wcE8xeHVYRzVsZUhCdmNuUWdablZ1WTNScGIyNGdZMjl0Y0dGeVpWWmxjbk5wYjI1ektIWXhMQ0JqYjIxd1lYSmhkRzl5TENCMk1pa2dlMXh1SUNCamIyMXdZWEpoZEc5eUlEMGdZMjl0Y0dGeVlYUnZjaUE5UFNCY0lqMWNJaUEvSUZ3aVBUMWNJaUE2SUdOdmJYQmhjbUYwYjNJN1hHNGdJR2xtSUNoY2JpQWdJQ0JiWENJOVBWd2lMQ0JjSWowOVBWd2lMQ0JjSWp4Y0lpd2dYQ0k4UFZ3aUxDQmNJajVjSWl3Z1hDSStQVndpTENCY0lpRTlYQ0lzSUZ3aUlUMDlYQ0pkTG1sdVpHVjRUMllvWTI5dGNHRnlZWFJ2Y2lrZ1BUMGdMVEZjYmlBZ0tTQjdYRzRnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0Z3aVNXNTJZV3hwWkNCamIyMXdZWEpoZEc5eUxpQmNJaUFySUdOdmJYQmhjbUYwYjNJcE8xeHVJQ0I5WEc0Z0lIWmhjaUIyTVhCaGNuUnpJRDBnZGpFdWMzQnNhWFFvWENJdVhDSXBMRnh1SUNBZ0lIWXljR0Z5ZEhNZ1BTQjJNaTV6Y0d4cGRDaGNJaTVjSWlrN1hHNGdJSFpoY2lCdFlYaE1aVzRnUFNCTllYUm9MbTFoZUNoMk1YQmhjblJ6TG14bGJtZDBhQ3dnZGpKd1lYSjBjeTVzWlc1bmRHZ3BPMXh1SUNCMllYSWdjR0Z5ZERFc0lIQmhjblF5TzF4dUlDQjJZWElnWTIxd0lEMGdNRHRjYmlBZ1ptOXlJQ2gyWVhJZ2FTQTlJREE3SUdrZ1BDQnRZWGhNWlc0Z0ppWWdJV050Y0RzZ2FTc3JLU0I3WEc0Z0lDQWdjR0Z5ZERFZ1BTQndZWEp6WlVsdWRDaDJNWEJoY25SelcybGRMQ0F4TUNrZ2ZId2dNRHRjYmlBZ0lDQndZWEowTWlBOUlIQmhjbk5sU1c1MEtIWXljR0Z5ZEhOYmFWMHNJREV3S1NCOGZDQXdPMXh1SUNBZ0lHbG1JQ2h3WVhKME1TQThJSEJoY25ReUtTQmpiWEFnUFNBeE8xeHVJQ0FnSUdsbUlDaHdZWEowTVNBK0lIQmhjblF5S1NCamJYQWdQU0F0TVR0Y2JpQWdmVnh1SUNCeVpYUjFjbTRnWlhaaGJDaGNJakJjSWlBcklHTnZiWEJoY21GMGIzSWdLeUJqYlhBcE8xeHVmVnh1WEc1bWRXNWpkR2x2YmlCallXTm9aVlZ5YkVsdVUyVnlkbWxqWlZkdmNtdGxjaWgxY213cElIdGNiaUFnY21WMGRYSnVJRzVsZHlCUWNtOXRhWE5sS0daMWJtTjBhVzl1S0hKbGMyOXNkbVVzSUhKbGFtVmpkQ2tnZTF4dUlDQWdJR052Ym5OMElHMWxjM05oWjJVZ1BTQjdYRzRnSUNBZ0lDQmpiMjF0WVc1a09pQmNJbUZrWkZ3aUxGeHVJQ0FnSUNBZ2RYSnNPaUIxY214Y2JpQWdJQ0I5TzF4dUlDQWdJR2xtSUNnaGJtRjJhV2RoZEc5eUxuTmxjblpwWTJWWGIzSnJaWElnZkh3Z0lXNWhkbWxuWVhSdmNpNXpaWEoyYVdObFYyOXlhMlZ5TG5KbFoybHpkR1Z5S1NCN1hHNGdJQ0FnSUNCeVpXcGxZM1FvWENKVFpYSjJhV05sSUhkdmNtdGxjaUJwY3lCdWIzUWdjM1Z3Y0c5eWRHVmtMbHdpS1R0Y2JpQWdJQ0FnSUhKbGRIVnlianRjYmlBZ0lDQjlYRzRnSUNBZ1kyOXVjM1FnYldWemMyRm5aVU5vWVc1dVpXd2dQU0J1WlhjZ1RXVnpjMkZuWlVOb1lXNXVaV3dvS1R0Y2JpQWdJQ0J0WlhOellXZGxRMmhoYm01bGJDNXdiM0owTVM1dmJtMWxjM05oWjJVZ1BTQm1kVzVqZEdsdmJpaGxkbVZ1ZENrZ2UxeHVJQ0FnSUNBZ2FXWWdLR1YyWlc1MExtUmhkR0VnSmlZZ1pYWmxiblF1WkdGMFlTNWxjbkp2Y2lrZ2UxeHVJQ0FnSUNBZ0lDQnlaV3BsWTNRb1pYWmxiblF1WkdGMFlTNWxjbkp2Y2lrN1hHNGdJQ0FnSUNCOUlHVnNjMlVnZTF4dUlDQWdJQ0FnSUNCeVpYTnZiSFpsS0dWMlpXNTBMbVJoZEdFZ0ppWWdaWFpsYm5RdVpHRjBZUzV5WlhOMWJIUXBPMXh1SUNBZ0lDQWdmVnh1SUNBZ0lIMDdYRzVjYmlBZ0lDQnBaaUFvYm1GMmFXZGhkRzl5TG5ObGNuWnBZMlZYYjNKclpYSWdKaVlnYm1GMmFXZGhkRzl5TG5ObGNuWnBZMlZYYjNKclpYSXVZMjl1ZEhKdmJHeGxjaWtnZTF4dUlDQWdJQ0FnYm1GMmFXZGhkRzl5TG5ObGNuWnBZMlZYYjNKclpYSXVZMjl1ZEhKdmJHeGxjaTV3YjNOMFRXVnpjMkZuWlNodFpYTnpZV2RsTENCYlhHNGdJQ0FnSUNBZ0lHMWxjM05oWjJWRGFHRnVibVZzTG5CdmNuUXlYRzRnSUNBZ0lDQmRLVHRjYmlBZ0lDQjlJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ2NtVnFaV04wS0Z3aVUyVnlkbWxqWlNCM2IzSnJaWElnWTI5dWRISnZiR3hsY2lCcGN5QnViM1FnWVhaaGFXeGhZbXhsWENJcE8xeHVJQ0FnSUgxY2JpQWdmU2s3WEc1OVhHNWNibVY0Y0c5eWRDQmhjM2x1WXlCbWRXNWpkR2x2YmlCallXTm9aVkpsY1hWcGNtVnRaVzUwY3loeVpYRjFhWEpsYldWdWRITXBJSHRjYmlBZ2FXWWdLSEpsY1hWcGNtVnRaVzUwY3lBbUppQnlaWEYxYVhKbGJXVnVkSE11YkdWdVozUm9JRDRnTUNrZ2UxeHVJQ0FnSUdadmNpQW9iR1YwSUhKbGNTQnZaaUJ5WlhGMWFYSmxiV1Z1ZEhNcElIdGNiaUFnSUNBZ0lDOHZjbVZ0YjNabElIQnlaV1pwZUZ4dUlDQWdJQ0FnYVdZZ0tISmxjUzV6ZEdGeWRITlhhWFJvS0Z3aWFuTTZYQ0lwS1NCeVpYRWdQU0J5WlhFdWMyeHBZMlVvTXlrN1hHNGdJQ0FnSUNCcFppQW9jbVZ4TG5OMFlYSjBjMWRwZEdnb1hDSmpjM002WENJcEtTQnlaWEVnUFNCeVpYRXVjMnhwWTJVb05DazdYRzRnSUNBZ0lDQnBaaUFvY21WeExuTjBZWEowYzFkcGRHZ29YQ0pqWVdOb1pUcGNJaWtwSUhKbGNTQTlJSEpsY1M1emJHbGpaU2cyS1R0Y2JpQWdJQ0FnSUdsbUlDZ2hjbVZ4TG5OMFlYSjBjMWRwZEdnb1hDSm9kSFJ3WENJcEtTQmpiMjUwYVc1MVpUdGNibHh1SUNBZ0lDQWdZWGRoYVhRZ1kyRmphR1ZWY214SmJsTmxjblpwWTJWWGIzSnJaWElvY21WeEtTNWpZWFJqYUNobElEMCtJSHRjYmlBZ0lDQWdJQ0FnWTI5dWMyOXNaUzVsY25KdmNpaGxLVHRjYmlBZ0lDQWdJSDBwTzF4dUlDQWdJSDFjYmlBZ2ZWeHVmVnh1WEc1bGVIQnZjblFnWm5WdVkzUnBiMjRnYzJWMGRYQlRaWEoyYVdObFYyOXlhMlZ5S0hSaGNtZGxkRTl5YVdkcGJpd2dZMkZqYUdWRFlXeHNZbUZqYXlrZ2UxeHVJQ0F2THlCeVpXZHBjM1JsY2lCelpYSjJhV05sSUhkdmNtdGxjaUJtYjNJZ2IyWm1iR2x1WlNCaFkyTmxjM05jYmlBZ2FXWWdLRndpYzJWeWRtbGpaVmR2Y210bGNsd2lJR2x1SUc1aGRtbG5ZWFJ2Y2lrZ2UxeHVJQ0FnSUhkcGJtUnZkeTVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLRndpYkc5aFpGd2lMQ0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUc1aGRtbG5ZWFJ2Y2k1elpYSjJhV05sVjI5eWEyVnlMbkpsWjJsemRHVnlLRndpTDNCc2RXZHBiaTF6WlhKMmFXTmxMWGR2Y210bGNpNXFjMXdpS1M1MGFHVnVLRnh1SUNBZ0lDQWdJQ0JtZFc1amRHbHZiaWh5WldkcGMzUnlZWFJwYjI0cElIdGNiaUFnSUNBZ0lDQWdJQ0F2THlCU1pXZHBjM1J5WVhScGIyNGdkMkZ6SUhOMVkyTmxjM05tZFd4Y2JpQWdJQ0FnSUNBZ0lDQmpiMjV6YjJ4bExteHZaeWhjYmlBZ0lDQWdJQ0FnSUNBZ0lGd2lVMlZ5ZG1salpWZHZjbXRsY2lCeVpXZHBjM1J5WVhScGIyNGdjM1ZqWTJWemMyWjFiQ0IzYVhSb0lITmpiM0JsT2lCY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbFoybHpkSEpoZEdsdmJpNXpZMjl3WlZ4dUlDQWdJQ0FnSUNBZ0lDazdYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUdaMWJtTjBhVzl1S0dWeWNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUM4dklISmxaMmx6ZEhKaGRHbHZiaUJtWVdsc1pXUWdPaWhjYmlBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5aGNJbE5sY25acFkyVlhiM0pyWlhJZ2NtVm5hWE4wY21GMGFXOXVJR1poYVd4bFpEb2dYQ0lzSUdWeWNpazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ2s3WEc0Z0lDQWdJQ0IwWVhKblpYUlBjbWxuYVc0Z1BTQjBZWEpuWlhSUGNtbG5hVzRnZkh3Z1hDSXFYQ0k3WEc0Z0lDQWdJQ0JqWVdOb1pVTmhiR3hpWVdOcklEMGdZMkZqYUdWRFlXeHNZbUZqYXlCOGZDQmpZV05vWlZKbGNYVnBjbVZ0Wlc1MGN6dGNiaUFnSUNBZ0lHbG1JQ2hqWVdOb1pVTmhiR3hpWVdOcklDWW1JSFI1Y0dWdlppQmpZV05vWlVOaGJHeGlZV05ySUNFOVBTQmNJbVoxYm1OMGFXOXVYQ0lwSUh0Y2JpQWdJQ0FnSUNBZ2RHaHliM2NnYm1WM0lFVnljbTl5S0Z3aVkyOXVabWxuTG1OaFkyaGxYM0psY1hWcGNtVnRaVzUwY3lCdGRYTjBJR0psSUdFZ1puVnVZM1JwYjI1Y0lpazdYRzRnSUNBZ0lDQjlYRzRnSUNBZ0lDQjNhVzVrYjNjdVlXUmtSWFpsYm5STWFYTjBaVzVsY2loY0ltMWxjM05oWjJWY0lpd2dablZ1WTNScGIyNG9aU2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9kR0Z5WjJWMFQzSnBaMmx1SUQwOVBTQmNJaXBjSWlCOGZDQmxMbTl5YVdkcGJpQTlQVDBnZEdGeVoyVjBUM0pwWjJsdUtTQjdYRzRnSUNBZ0lDQWdJQ0FnWTI5dWMzUWdiU0E5SUdVdVpHRjBZVHRjYmlBZ0lDQWdJQ0FnSUNCcFppQW9iUzUwZVhCbElEMDlQU0JjSW1OaFkyaGxVbVZ4ZFdseVpXMWxiblJ6WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOaFkyaGxRMkZzYkdKaFkyc29iUzV5WlhGMWFYSmxiV1Z1ZEhNcE8xeHVJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnZlNrN1hHNGdJQ0FnZlNrN1hHNGdJSDFjYm4xY2JseHVMeW9xWEc0Z0tpQkJJSE53WldOcFlXd2dhMmx1WkNCdlppQmxkbVZ1ZERwY2JpQXFJQ0F0SUhkb2FXTm9JR05oYmlCdmJteDVJR0psSUdWdGFYUjBaV1FnYjI1alpUdGNiaUFxSUNBdElHVjRaV04xZEdWeklHRWdjMlYwSUc5bUlITjFZbk5qY21saVpXUWdhR0Z1Wkd4bGNuTWdkWEJ2YmlCbGJXbHpjMmx2Ymp0Y2JpQXFJQ0F0SUdsbUlHRWdhR0Z1Wkd4bGNpQnBjeUJ6ZFdKelkzSnBZbVZrSUdGbWRHVnlJSFJvWlNCbGRtVnVkQ0IzWVhNZ1pXMXBkSFJsWkN3Z2FYUmNiaUFxSUNBZ0lIZHBiR3dnWW1VZ2FXNTJiMnRsWkNCcGJXMXBaR1ZoZEdWc2VTNWNiaUFxWEc0Z0tpQlZjMlZrSUdadmNpQjBhR1VnWlhabGJuUnpJSGRvYVdOb0lHOXViSGtnYUdGd2NHVnVJRzl1WTJVZ0tHOXlJR1J2SUc1dmRDQm9ZWEJ3Wlc0Z1lYUmNiaUFxSUdGc2JDa2daSFZ5YVc1bklHRWdjMmx1WjJ4bElIQnNkV2RwYmlCc2FXWmxZM2xqYkdVZ0xTQmpiMjV1WldOMExDQmthWE5qYjI1dVpXTjBJR0Z1WkZ4dUlDb2dZMjl1Ym1WamRHbHZiaUJtWVdsc2RYSmxYRzRnS2k5Y2JtVjRjRzl5ZENCamIyNXpkQ0JYYUdWdVlXSnNaU0E5SUdaMWJtTjBhVzl1S0cxMWJIUnBYMlZ0YVhRcElIdGNiaUFnZEdocGN5NWZiWFZzZEdsZlpXMXBkQ0E5SUcxMWJIUnBYMlZ0YVhRN1hHNGdJSFJvYVhNdVgyVnRhWFIwWldRZ1BTQm1ZV3h6WlR0Y2JpQWdkR2hwY3k1ZmFHRnVaR3hsY25NZ1BTQmJYVHRjYm4wN1hHNWNiaThxS2x4dUlDb2dSVzFwZEhNZ2RHaGxJRmRvWlc1aFlteGxJR1YyWlc1MExDQmpZV3hzY3lCaGJHd2dkR2hsSUdoaGJtUnNaWEp6SUdGc2NtVmhaSGxjYmlBcUlITjFZbk5qY21saVpXUXNJSE4zYVhSamFHVnpJSFJvWlNCdlltcGxZM1FnZEc4Z2RHaGxJQ2RsYldsMGRHVmtKeUJ6ZEdGMFpTQW9kMmhsYmx4dUlDb2dZV3hzSUdaMWRIVnlaU0J6ZFdKelkybGlaV1FnYkdsemRHVnVaWEp6SUhkcGJHd2dZbVVnYVcxdGFXUmxZWFJsYkhrZ2FYTnpkV1ZrWEc0Z0tpQnBibk4wWldGa0lHOW1JR0psYVc1bklITjBiM0psWkNsY2JpQXFMMXh1VjJobGJtRmliR1V1Y0hKdmRHOTBlWEJsTG1WdGFYUWdQU0JtZFc1amRHbHZiaWhsS1NCN1hHNGdJR2xtSUNoMGFHbHpMbDl0ZFd4MGFWOWxiV2wwS1NCN1hHNGdJQ0FnZEdocGN5NWZaVzFwZEhSbFpDQTlJSFJ5ZFdVN1hHNGdJQ0FnZEdocGN5NWZaU0E5SUdVN1hHNGdJQ0FnWm05eUlDaHNaWFFnYUdGdVpHeGxjaUJ2WmlCMGFHbHpMbDlvWVc1a2JHVnljeWtnZTF4dUlDQWdJQ0FnYzJWMFZHbHRaVzkxZENob1lXNWtiR1Z5TG1KcGJtUW9iblZzYkN3Z1pTa3NJREFwTzF4dUlDQWdJSDFjYmlBZ2ZTQmxiSE5sSUdsbUlDZ2hkR2hwY3k1ZlpXMXBkSFJsWkNrZ2UxeHVJQ0FnSUhSb2FYTXVYMlZ0YVhSMFpXUWdQU0IwY25WbE8xeHVJQ0FnSUhSb2FYTXVYMlVnUFNCbE8xeHVJQ0FnSUhaaGNpQm9ZVzVrYkdWeU8xeHVJQ0FnSUhkb2FXeGxJQ2dvYUdGdVpHeGxjaUE5SUhSb2FYTXVYMmhoYm1Sc1pYSnpMbkJ2Y0NncEtTa2dlMXh1SUNBZ0lDQWdjMlYwVkdsdFpXOTFkQ2hvWVc1a2JHVnlMbUpwYm1Rb2JuVnNiQ3dnWlNrc0lEQXBPMXh1SUNBZ0lIMWNiaUFnZlZ4dWZUdGNibHh1THlvcVhHNGdLaUJUWVhabGN5QjBhR1VnY0hKdmRtbGtaV1FnWm5WdVkzUnBiMjRnWVhNZ1lTQm9ZVzVrYkdWeUlHWnZjaUIwYUdVZ1YyaGxibUZpYkdWY2JpQXFJR1YyWlc1MExpQlVhR2x6SUdoaGJtUnNaWElnZDJsc2JDQjBhR1Z1SUdKbElHTmhiR3hsWkNCMWNHOXVJSFJvWlNCbGRtVnVkQ0JsYldsemMybHZibHh1SUNvZ0tHbG1JR2wwSUdoaGN5QnViM1FnWW1WbGJpQmxiV2wwZEdWa0lIbGxkQ2tzSUc5eUlIZHBiR3dnWW1VZ2MyTm9aV1IxYkdWa0lHWnZjbHh1SUNvZ2FXMXRaV1JwWVhSbElHbHpjM1ZsSUNocFppQjBhR1VnWlhabGJuUWdhR0Z6SUdGc2NtVmhaSGtnWW1WbGJpQmxiVzFwZEhSbFpDQmlaV1p2Y21VcFhHNGdLbHh1SUNvZ1FIQmhjbUZ0SUh0R2RXNWpkR2x2Ym4wZ2FHRnVaR3hsY2lCMGJ5QnpkV0p6WTNKcFltVWdabTl5SUhSb1pTQmxkbVZ1ZEZ4dUlDb3ZYRzVYYUdWdVlXSnNaUzV3Y205MGIzUjVjR1V1ZDJobGJrVnRhWFIwWldRZ1BTQm1kVzVqZEdsdmJpaG9ZVzVrYkdWeUtTQjdYRzRnSUdoaGJtUnNaWElnUFNCMGFHbHpMbDlqYUdWamEwaGhibVJzWlhJb2FHRnVaR3hsY2lrN1hHNGdJR2xtSUNoMGFHbHpMbDlsYldsMGRHVmtLU0I3WEc0Z0lDQWdjMlYwVkdsdFpXOTFkQ2hvWVc1a2JHVnlMbUpwYm1Rb2JuVnNiQ3dnZEdocGN5NWZaU2tzSURBcE8xeHVJQ0I5SUdWc2MyVWdlMXh1SUNBZ0lIUm9hWE11WDJoaGJtUnNaWEp6TG5CMWMyZ29hR0Z1Wkd4bGNpazdYRzRnSUgxY2JuMDdYRzVjYmk4cUtseHVJQ29nUTJobFkydHpJR2xtSUhSb1pTQndjbTkyYVdSbFpDQnZZbXBsWTNRZ2FYTWdjM1ZwZEdGaWJHVWdabTl5SUdKbGFXNW5JSE4xWW5OamNtbGlaV1JjYmlBcUlIUnZJSFJvWlNCbGRtVnVkQ0FvUFNCcGN5QmhJR1oxYm1OMGFXOXVLU3dnZEdoeWIzZHpJR0Z1SUdWNFkyVndkR2x2YmlCcFppQnViM1JjYmlBcVhHNGdLaUJBY0dGeVlXMGdlMDlpYW1WamRIMGdiMkpxSUhSdklHTm9aV05ySUdadmNpQmlaV2x1WnlCemRXSnpZM0pwWW1GaWJHVmNiaUFxWEc0Z0tpQkFkR2h5YjNkeklIdEZlR05sY0hScGIyNTlJR2xtSUc5aWFtVmpkQ0JwY3lCdWIzUWdjM1ZwZEdGaWJHVWdabTl5SUhOMVluTmpjbWx3ZEdsdmJseHVJQ3BjYmlBcUlFQnlaWFIxY201eklIdFBZbXBsWTNSOUlIUm9aU0J3Y205MmFXUmxaQ0J2WW1wbFkzUWdhV1lnZVdWelhHNGdLaTljYmxkb1pXNWhZbXhsTG5CeWIzUnZkSGx3WlM1ZlkyaGxZMnRJWVc1a2JHVnlJRDBnWm5WdVkzUnBiMjRvYUdGdVpHeGxjaWtnZTF4dUlDQjJZWElnZEhsd1pTQTlJSFI1Y0dWdlppQm9ZVzVrYkdWeU8xeHVJQ0JwWmlBb2RIbHdaU0FoUFQwZ1hDSm1kVzVqZEdsdmJsd2lLU0I3WEc0Z0lDQWdkbUZ5SUcxelp5QTlYRzRnSUNBZ0lDQmNJa0VnWm5WdVkzUnBiMjRnYldGNUlHOXViSGtnWW1VZ2MzVmljM0pwWW1Wa0lIUnZJSFJvWlNCbGRtVnVkQ3dnWENJZ0sxeHVJQ0FnSUNBZ2RIbHdaU0FyWEc0Z0lDQWdJQ0JjSWlCM1lYTWdjSEp2ZG1sa1pXUWdhVzV6ZEdWaFpGd2lPMXh1SUNBZ0lIUm9jbTkzSUc1bGR5QkZjbkp2Y2lodGMyY3BPMXh1SUNCOVhHNWNiaUFnY21WMGRYSnVJR2hoYm1Sc1pYSTdYRzU5TzF4dUlsMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZCUVR0QlFVRkJPMEZCUVVFN1FVRkJRVHRCUVVGQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlFVRTdRVUZEUVR0QlFVVkJPMEZCUTBFN1FVRkhRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJWRUU3UVVGWFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVlJCTzBGQldVRTdRVUZEUVR0QlFVTkJPMEZCUVVFN1FVRkJRVHRCUVVOQk8wRkJRVUU3UVVGQlFUdEJRVU5CTzBGQlFVRTdRVUZCUVR0QlFVTkJPMEZCUVVFN1FVRkJRVHRCUVVOQk8wRkJRVUU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkJRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkJRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkJRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVUZCTzBGQlEwRTdRVUZCUVR0QlFVRkJPMEZCUTBFN1FVRkJRVHRCUVVGQk8wRkJRMEU3UVVGQlFUdEJRVUZCTzBGQmFrSkJPMEZCYlVKQk8wRkJjRUpCTzBGQmRVSkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJSMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZCUVR0QlFVVkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkJRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUmtFN1FVRkRRVHRCUVVkQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUVVFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkhRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJSVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVVkJPMEZCUTBFN1FVRkpRVHRCUVVWQk8wRkJRMEU3UVVGRFFUdEJRVVZCTzBGQlEwRTdRVUZEUVR0QlFVRkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRVUU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlJVRTdPenM3T3pzN096czdPenRCUVZkQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZGUVRzN096czdPenRCUVUxQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlEwRTdRVUZCUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJRMEU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVWQk96czdPenM3T3pzN08wRkJVVUU3UVVGRFFUdEJRVU5CTzBGQlFVRTdRVUZEUVR0QlFVTkJPMEZCUTBFN1FVRkRRVHRCUVVOQk8wRkJSVUU3T3pzN096czdPenM3T3p0QlFWVkJPMEZCUTBFN1FVRkRRVHRCUVVGQk8wRkJRMEU3UVVGSlFUdEJRVU5CTzBGQlEwRTdRVUZEUVR0QlFVTkJJaXdpYzI5MWNtTmxVbTl2ZENJNklpSjlcXFxcbi8vIyBzb3VyY2VVUkw9d2VicGFjay1pbnRlcm5hbDovLy8uL3NyYy91dGlscy5qc1xcXFxuXFxcIik7XFxuXFxuLyoqKi8gfSlcXG5cXG4vKioqKioqLyB9KTtcIiwgbnVsbCk7XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/plugin.webworker.js\n")},"./src/pluginCore.js":
/*!***************************!*\
  !*** ./src/pluginCore.js ***!
  \***************************/
/*! exports provided: connectRPC */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "connectRPC", function() { return connectRPC; });\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rpc.js */ "./src/rpc.js");\n/**\n * Core plugin script loaded into the plugin process/thread.\n *\n * Initializes the plugin-site API global methods.\n */\n\nfunction connectRPC(connection, config) {\n  const application = {};\n  config = config || {};\n  const rpc = new _rpc_js__WEBPACK_IMPORTED_MODULE_0__["RPC"](connection, config);\n  rpc.onGetInterface(function () {\n    launchConnected();\n  });\n  rpc.onRemoteUpdate(function () {\n    application.remote = rpc.getRemote();\n    if (!application.remote) return;\n    const api = application.remote || {};\n\n    if (api.export) {\n      console.error("WARNING: overwriting function \'export\'.");\n    }\n\n    if (api.onload) {\n      console.error("WARNING: overwriting function \'onload\'.");\n    }\n\n    if (api.dispose) {\n      console.error("WARNING: overwriting function \'dispose\'.");\n    }\n\n    api.export = application.setInterface;\n    api.onLoad = application.whenConnected;\n    api.dispose = application.disconnect;\n\n    if (typeof WorkerGlobalScope !== "undefined" && self instanceof WorkerGlobalScope) {\n      self.api = api;\n      self.postMessage({\n        type: "imjoy_remote_api_ready"\n      });\n    } else if (typeof window) {\n      window.dispatchEvent(new CustomEvent("imjoy_remote_api_ready", {\n        detail: api\n      }));\n    }\n  });\n  /**\n   * Simplified clone of Whenable instance (the object can not be\n   * placed into a shared script, because the main library needs it\n   * before the additional scripts may load)\n   */\n\n  var connected = false;\n  var connectedHandlers = [];\n\n  var launchConnected = function () {\n    if (!connected) {\n      connected = true;\n      var handler;\n\n      while (handler = connectedHandlers.pop()) {\n        handler();\n      }\n    }\n  };\n\n  var checkHandler = function (handler) {\n    var type = typeof handler;\n\n    if (type !== "function") {\n      var msg = "A function may only be subsribed to the event, " + type + " was provided instead";\n      throw new Error(msg);\n    }\n\n    return handler;\n  };\n  /**\n   * Sets a function executed after the connection to the\n   * application is estaplished, and the initial interface-exchange\n   * messaging is completed\n   *\n   * @param {Function} handler to be called upon initialization\n   */\n\n\n  application.whenConnected = function (handler) {\n    handler = checkHandler(handler);\n\n    if (connected) {\n      handler();\n    } else {\n      connectedHandlers.push(handler);\n    }\n  };\n  /**\n   * Sets the plugin interface available to the application\n   *\n   * @param {Object} _interface to set\n   */\n\n\n  application.setInterface = function (_interface) {\n    rpc.setInterface(_interface);\n  };\n  /**\n   * Disconnects the plugin from the application (sending\n   * notification message) and destroys itself\n   */\n\n\n  application.disconnect = function (_interface) {\n    rpc.disconnect();\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGx1Z2luQ29yZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2ltam95UlBDL3NyYy9wbHVnaW5Db3JlLmpzP2E0NzYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3JlIHBsdWdpbiBzY3JpcHQgbG9hZGVkIGludG8gdGhlIHBsdWdpbiBwcm9jZXNzL3RocmVhZC5cbiAqXG4gKiBJbml0aWFsaXplcyB0aGUgcGx1Z2luLXNpdGUgQVBJIGdsb2JhbCBtZXRob2RzLlxuICovXG5pbXBvcnQgeyBSUEMgfSBmcm9tIFwiLi9ycGMuanNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbm5lY3RSUEMoY29ubmVjdGlvbiwgY29uZmlnKSB7XG4gIGNvbnN0IGFwcGxpY2F0aW9uID0ge307XG4gIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcblxuICBjb25zdCBycGMgPSBuZXcgUlBDKGNvbm5lY3Rpb24sIGNvbmZpZyk7XG4gIHJwYy5vbkdldEludGVyZmFjZShmdW5jdGlvbigpIHtcbiAgICBsYXVuY2hDb25uZWN0ZWQoKTtcbiAgfSk7XG5cbiAgcnBjLm9uUmVtb3RlVXBkYXRlKGZ1bmN0aW9uKCkge1xuICAgIGFwcGxpY2F0aW9uLnJlbW90ZSA9IHJwYy5nZXRSZW1vdGUoKTtcbiAgICBpZiAoIWFwcGxpY2F0aW9uLnJlbW90ZSkgcmV0dXJuO1xuICAgIGNvbnN0IGFwaSA9IGFwcGxpY2F0aW9uLnJlbW90ZSB8fCB7fTtcbiAgICBpZiAoYXBpLmV4cG9ydCkge1xuICAgICAgY29uc29sZS5lcnJvcihcIldBUk5JTkc6IG92ZXJ3cml0aW5nIGZ1bmN0aW9uICdleHBvcnQnLlwiKTtcbiAgICB9XG4gICAgaWYgKGFwaS5vbmxvYWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJXQVJOSU5HOiBvdmVyd3JpdGluZyBmdW5jdGlvbiAnb25sb2FkJy5cIik7XG4gICAgfVxuICAgIGlmIChhcGkuZGlzcG9zZSkge1xuICAgICAgY29uc29sZS5lcnJvcihcIldBUk5JTkc6IG92ZXJ3cml0aW5nIGZ1bmN0aW9uICdkaXNwb3NlJy5cIik7XG4gICAgfVxuICAgIGFwaS5leHBvcnQgPSBhcHBsaWNhdGlvbi5zZXRJbnRlcmZhY2U7XG4gICAgYXBpLm9uTG9hZCA9IGFwcGxpY2F0aW9uLndoZW5Db25uZWN0ZWQ7XG4gICAgYXBpLmRpc3Bvc2UgPSBhcHBsaWNhdGlvbi5kaXNjb25uZWN0O1xuICAgIGlmIChcbiAgICAgIHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlXG4gICAgKSB7XG4gICAgICBzZWxmLmFwaSA9IGFwaTtcbiAgICAgIHNlbGYucG9zdE1lc3NhZ2Uoe1xuICAgICAgICB0eXBlOiBcImltam95X3JlbW90ZV9hcGlfcmVhZHlcIlxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93KSB7XG4gICAgICB3aW5kb3cuZGlzcGF0Y2hFdmVudChcbiAgICAgICAgbmV3IEN1c3RvbUV2ZW50KFwiaW1qb3lfcmVtb3RlX2FwaV9yZWFkeVwiLCB7IGRldGFpbDogYXBpIH0pXG4gICAgICApO1xuICAgIH1cbiAgfSk7XG5cbiAgLyoqXG4gICAqIFNpbXBsaWZpZWQgY2xvbmUgb2YgV2hlbmFibGUgaW5zdGFuY2UgKHRoZSBvYmplY3QgY2FuIG5vdCBiZVxuICAgKiBwbGFjZWQgaW50byBhIHNoYXJlZCBzY3JpcHQsIGJlY2F1c2UgdGhlIG1haW4gbGlicmFyeSBuZWVkcyBpdFxuICAgKiBiZWZvcmUgdGhlIGFkZGl0aW9uYWwgc2NyaXB0cyBtYXkgbG9hZClcbiAgICovXG4gIHZhciBjb25uZWN0ZWQgPSBmYWxzZTtcbiAgdmFyIGNvbm5lY3RlZEhhbmRsZXJzID0gW107XG5cbiAgdmFyIGxhdW5jaENvbm5lY3RlZCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghY29ubmVjdGVkKSB7XG4gICAgICBjb25uZWN0ZWQgPSB0cnVlO1xuXG4gICAgICB2YXIgaGFuZGxlcjtcbiAgICAgIHdoaWxlICgoaGFuZGxlciA9IGNvbm5lY3RlZEhhbmRsZXJzLnBvcCgpKSkge1xuICAgICAgICBoYW5kbGVyKCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHZhciBjaGVja0hhbmRsZXIgPSBmdW5jdGlvbihoYW5kbGVyKSB7XG4gICAgdmFyIHR5cGUgPSB0eXBlb2YgaGFuZGxlcjtcbiAgICBpZiAodHlwZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB2YXIgbXNnID1cbiAgICAgICAgXCJBIGZ1bmN0aW9uIG1heSBvbmx5IGJlIHN1YnNyaWJlZCB0byB0aGUgZXZlbnQsIFwiICtcbiAgICAgICAgdHlwZSArXG4gICAgICAgIFwiIHdhcyBwcm92aWRlZCBpbnN0ZWFkXCI7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaGFuZGxlcjtcbiAgfTtcblxuICAvKipcbiAgICogU2V0cyBhIGZ1bmN0aW9uIGV4ZWN1dGVkIGFmdGVyIHRoZSBjb25uZWN0aW9uIHRvIHRoZVxuICAgKiBhcHBsaWNhdGlvbiBpcyBlc3RhcGxpc2hlZCwgYW5kIHRoZSBpbml0aWFsIGludGVyZmFjZS1leGNoYW5nZVxuICAgKiBtZXNzYWdpbmcgaXMgY29tcGxldGVkXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgdG8gYmUgY2FsbGVkIHVwb24gaW5pdGlhbGl6YXRpb25cbiAgICovXG4gIGFwcGxpY2F0aW9uLndoZW5Db25uZWN0ZWQgPSBmdW5jdGlvbihoYW5kbGVyKSB7XG4gICAgaGFuZGxlciA9IGNoZWNrSGFuZGxlcihoYW5kbGVyKTtcbiAgICBpZiAoY29ubmVjdGVkKSB7XG4gICAgICBoYW5kbGVyKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbm5lY3RlZEhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBwbHVnaW4gaW50ZXJmYWNlIGF2YWlsYWJsZSB0byB0aGUgYXBwbGljYXRpb25cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IF9pbnRlcmZhY2UgdG8gc2V0XG4gICAqL1xuICBhcHBsaWNhdGlvbi5zZXRJbnRlcmZhY2UgPSBmdW5jdGlvbihfaW50ZXJmYWNlKSB7XG4gICAgcnBjLnNldEludGVyZmFjZShfaW50ZXJmYWNlKTtcbiAgfTtcblxuICAvKipcbiAgICogRGlzY29ubmVjdHMgdGhlIHBsdWdpbiBmcm9tIHRoZSBhcHBsaWNhdGlvbiAoc2VuZGluZ1xuICAgKiBub3RpZmljYXRpb24gbWVzc2FnZSkgYW5kIGRlc3Ryb3lzIGl0c2VsZlxuICAgKi9cbiAgYXBwbGljYXRpb24uZGlzY29ubmVjdCA9IGZ1bmN0aW9uKF9pbnRlcmZhY2UpIHtcbiAgICBycGMuZGlzY29ubmVjdCgpO1xuICB9O1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFLQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUVBOzs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7O0FBSUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pluginCore.js\n')},"./src/pluginIframe.js":
/*!*****************************!*\
  !*** ./src/pluginIframe.js ***!
  \*****************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setupIframe; });\n/* harmony import */ var _pluginCore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pluginCore.js */ "./src/pluginCore.js");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc.js */ "./src/rpc.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./src/utils.js");\n/**\n * Contains the routines loaded by the plugin iframe under web-browser\n * in case when worker failed to initialize\n *\n * Initializes the web environment version of the platform-dependent\n * connection object for the plugin site\n */\n\n\n\nfunction setupIframe(config) {\n  config = config || {};\n  const targetOrigin = config.target_origin || "*"; // Create a new, plain <span> element\n\n  function _htmlToElement(html) {\n    var template = document.createElement("template");\n    html = html.trim(); // Never return a text node of whitespace as the result\n\n    template.innerHTML = html;\n    return template.content.firstChild;\n  }\n\n  var _importScript = function (url) {\n    //url is URL of external file, implementationCode is the code\n    //to be called from the file, location is the location to\n    //insert the <script> element\n    return new Promise((resolve, reject) => {\n      var scriptTag = document.createElement("script");\n      scriptTag.src = url;\n      scriptTag.type = "text/javascript";\n      scriptTag.onload = resolve;\n\n      scriptTag.onreadystatechange = function () {\n        if (this.readyState === "loaded" || this.readyState === "complete") {\n          resolve();\n        }\n      };\n\n      scriptTag.onerror = reject;\n      document.head.appendChild(scriptTag);\n    });\n  }; // support importScripts outside web worker\n\n\n  async function importScripts() {\n    var args = Array.prototype.slice.call(arguments),\n        len = args.length,\n        i = 0;\n\n    for (; i < len; i++) {\n      await _importScript(args[i]);\n    }\n  } // evaluates the provided string\n\n\n  var execute = async function (code) {\n    try {\n      if (code.type === "requirements") {\n        if (code.requirements && (Array.isArray(code.requirements) || typeof code.requirements === "string")) {\n          try {\n            var link_node;\n            code.requirements = typeof code.requirements === "string" ? [code.requirements] : code.requirements;\n\n            if (Array.isArray(code.requirements)) {\n              for (var i = 0; i < code.requirements.length; i++) {\n                if (code.requirements[i].toLowerCase().endsWith(".css") || code.requirements[i].startsWith("css:")) {\n                  if (code.requirements[i].startsWith("css:")) {\n                    code.requirements[i] = code.requirements[i].slice(4);\n                  }\n\n                  link_node = document.createElement("link");\n                  link_node.rel = "stylesheet";\n                  link_node.href = code.requirements[i];\n                  document.head.appendChild(link_node);\n                } else if (code.requirements[i].toLowerCase().endsWith(".js") || code.requirements[i].startsWith("js:")) {\n                  if (code.requirements[i].startsWith("js:")) {\n                    code.requirements[i] = code.requirements[i].slice(3);\n                  }\n\n                  await importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith("http")) {\n                  await importScripts(code.requirements[i]);\n                } else if (code.requirements[i].startsWith("cache:")) {//ignore cache\n                } else {\n                  console.log("Unprocessed requirements url: " + code.requirements[i]);\n                }\n              }\n            } else {\n              throw "unsupported requirements definition";\n            }\n          } catch (e) {\n            throw "failed to import required scripts: " + code.requirements.toString();\n          }\n        }\n      } else if (code.type === "script") {\n        if (code.src) {\n          var script_node = document.createElement("script");\n          script_node.setAttribute("type", code.attrs.type);\n          script_node.setAttribute("src", code.src);\n          document.head.appendChild(script_node);\n        } else {\n          if (code.content && (!code.attrs.type || code.attrs.type === "text/javascript")) {\n            // document.addEventListener("DOMContentLoaded", function(){\n            eval(code.content); // });\n          } else {\n            var node = document.createElement("script");\n            node.setAttribute("type", code.attrs.type);\n            node.appendChild(document.createTextNode(code.content));\n            document.body.appendChild(node);\n          }\n        }\n      } else if (code.type === "style") {\n        var style_node = document.createElement("style");\n\n        if (code.src) {\n          style_node.src = code.src;\n        }\n\n        style_node.innerHTML = code.content;\n        document.head.appendChild(style_node);\n      } else if (code.type === "link") {\n        var link_node_ = document.createElement("link");\n\n        if (code.rel) {\n          link_node_.rel = code.rel;\n        }\n\n        if (code.href) {\n          link_node_.href = code.href;\n        }\n\n        if (code.attrs && code.attrs.type) {\n          link_node_.type = code.attrs.type;\n        }\n\n        document.head.appendChild(link_node_);\n      } else if (code.type === "html") {\n        document.body.appendChild(_htmlToElement(code.content));\n      } else {\n        throw "unsupported code type.";\n      }\n\n      parent.postMessage({\n        type: "executeSuccess"\n      }, targetOrigin);\n    } catch (e) {\n      console.error("failed to execute scripts: ", code, e);\n      parent.postMessage({\n        type: "executeFailure",\n        error: e.stack || String(e)\n      }, targetOrigin);\n    }\n  }; // connection object for the RPC constructor\n\n\n  const conn = {\n    disconnect: function () {},\n    send: function (data, transferables) {\n      parent.postMessage(data, targetOrigin, transferables);\n    },\n    onMessage: function (h) {\n      conn._messageHandler = h;\n    },\n    _messageHandler: function () {},\n    onDisconnect: function () {}\n  };\n  config.dedicated_thread = false;\n  config.lang = "javascript";\n  config.api_version = _rpc_js__WEBPACK_IMPORTED_MODULE_1__["API_VERSION"]; // event listener for the plugin message\n\n  window.addEventListener("message", function (e) {\n    if (targetOrigin === "*" || e.origin === targetOrigin) {\n      const m = e.data;\n\n      switch (m && m.type) {\n        case "getConfig":\n          parent.postMessage({\n            type: "config",\n            config: config\n          }, targetOrigin);\n          break;\n\n        case "execute":\n          if (config.allow_execution) {\n            execute(m.code);\n\n            if (m.code.type === "requirements") {\n              if (!Array.isArray(m.code.requirements)) {\n                m.code.requirements = [m.code.requirements];\n              }\n            }\n          } else {\n            console.warn("import script is not allowed (allow_execution=false)");\n          }\n\n          break;\n\n        default:\n          conn._messageHandler(m);\n\n      }\n    }\n  });\n  Object(_pluginCore_js__WEBPACK_IMPORTED_MODULE_0__["connectRPC"])(conn, {\n    remote_function_mapping: ["close", "resize", "on", "off", "emit", "refresh"]\n  });\n  parent.postMessage({\n    type: "initialized",\n    config: config\n  }, targetOrigin);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGx1Z2luSWZyYW1lLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW1qb3lSUEMvc3JjL3BsdWdpbklmcmFtZS5qcz9lNmFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udGFpbnMgdGhlIHJvdXRpbmVzIGxvYWRlZCBieSB0aGUgcGx1Z2luIGlmcmFtZSB1bmRlciB3ZWItYnJvd3NlclxuICogaW4gY2FzZSB3aGVuIHdvcmtlciBmYWlsZWQgdG8gaW5pdGlhbGl6ZVxuICpcbiAqIEluaXRpYWxpemVzIHRoZSB3ZWIgZW52aXJvbm1lbnQgdmVyc2lvbiBvZiB0aGUgcGxhdGZvcm0tZGVwZW5kZW50XG4gKiBjb25uZWN0aW9uIG9iamVjdCBmb3IgdGhlIHBsdWdpbiBzaXRlXG4gKi9cbmltcG9ydCB7IGNvbm5lY3RSUEMgfSBmcm9tIFwiLi9wbHVnaW5Db3JlLmpzXCI7XG5pbXBvcnQgeyBBUElfVkVSU0lPTiB9IGZyb20gXCIuL3JwYy5qc1wiO1xuaW1wb3J0IHsgcmFuZElkIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0dXBJZnJhbWUoY29uZmlnKSB7XG4gIGNvbmZpZyA9IGNvbmZpZyB8fCB7fTtcbiAgY29uc3QgdGFyZ2V0T3JpZ2luID0gY29uZmlnLnRhcmdldF9vcmlnaW4gfHwgXCIqXCI7XG4gIC8vIENyZWF0ZSBhIG5ldywgcGxhaW4gPHNwYW4+IGVsZW1lbnRcbiAgZnVuY3Rpb24gX2h0bWxUb0VsZW1lbnQoaHRtbCkge1xuICAgIHZhciB0ZW1wbGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZW1wbGF0ZVwiKTtcbiAgICBodG1sID0gaHRtbC50cmltKCk7IC8vIE5ldmVyIHJldHVybiBhIHRleHQgbm9kZSBvZiB3aGl0ZXNwYWNlIGFzIHRoZSByZXN1bHRcbiAgICB0ZW1wbGF0ZS5pbm5lckhUTUwgPSBodG1sO1xuICAgIHJldHVybiB0ZW1wbGF0ZS5jb250ZW50LmZpcnN0Q2hpbGQ7XG4gIH1cblxuICB2YXIgX2ltcG9ydFNjcmlwdCA9IGZ1bmN0aW9uKHVybCkge1xuICAgIC8vdXJsIGlzIFVSTCBvZiBleHRlcm5hbCBmaWxlLCBpbXBsZW1lbnRhdGlvbkNvZGUgaXMgdGhlIGNvZGVcbiAgICAvL3RvIGJlIGNhbGxlZCBmcm9tIHRoZSBmaWxlLCBsb2NhdGlvbiBpcyB0aGUgbG9jYXRpb24gdG9cbiAgICAvL2luc2VydCB0aGUgPHNjcmlwdD4gZWxlbWVudFxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB2YXIgc2NyaXB0VGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgICAgIHNjcmlwdFRhZy5zcmMgPSB1cmw7XG4gICAgICBzY3JpcHRUYWcudHlwZSA9IFwidGV4dC9qYXZhc2NyaXB0XCI7XG4gICAgICBzY3JpcHRUYWcub25sb2FkID0gcmVzb2x2ZTtcbiAgICAgIHNjcmlwdFRhZy5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gXCJsb2FkZWRcIiB8fCB0aGlzLnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIikge1xuICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHNjcmlwdFRhZy5vbmVycm9yID0gcmVqZWN0O1xuICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHRUYWcpO1xuICAgIH0pO1xuICB9O1xuXG4gIC8vIHN1cHBvcnQgaW1wb3J0U2NyaXB0cyBvdXRzaWRlIHdlYiB3b3JrZXJcblxuICBhc3luYyBmdW5jdGlvbiBpbXBvcnRTY3JpcHRzKCkge1xuICAgIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxcbiAgICAgIGxlbiA9IGFyZ3MubGVuZ3RoLFxuICAgICAgaSA9IDA7XG4gICAgZm9yICg7IGkgPCBsZW47IGkrKykge1xuICAgICAgYXdhaXQgX2ltcG9ydFNjcmlwdChhcmdzW2ldKTtcbiAgICB9XG4gIH1cblxuICAvLyBldmFsdWF0ZXMgdGhlIHByb3ZpZGVkIHN0cmluZ1xuICB2YXIgZXhlY3V0ZSA9IGFzeW5jIGZ1bmN0aW9uKGNvZGUpIHtcbiAgICB0cnkge1xuICAgICAgaWYgKGNvZGUudHlwZSA9PT0gXCJyZXF1aXJlbWVudHNcIikge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgY29kZS5yZXF1aXJlbWVudHMgJiZcbiAgICAgICAgICAoQXJyYXkuaXNBcnJheShjb2RlLnJlcXVpcmVtZW50cykgfHxcbiAgICAgICAgICAgIHR5cGVvZiBjb2RlLnJlcXVpcmVtZW50cyA9PT0gXCJzdHJpbmdcIilcbiAgICAgICAgKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciBsaW5rX25vZGU7XG4gICAgICAgICAgICBjb2RlLnJlcXVpcmVtZW50cyA9XG4gICAgICAgICAgICAgIHR5cGVvZiBjb2RlLnJlcXVpcmVtZW50cyA9PT0gXCJzdHJpbmdcIlxuICAgICAgICAgICAgICAgID8gW2NvZGUucmVxdWlyZW1lbnRzXVxuICAgICAgICAgICAgICAgIDogY29kZS5yZXF1aXJlbWVudHM7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjb2RlLnJlcXVpcmVtZW50cykpIHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2RlLnJlcXVpcmVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgIGNvZGUucmVxdWlyZW1lbnRzW2ldLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoXCIuY3NzXCIpIHx8XG4gICAgICAgICAgICAgICAgICBjb2RlLnJlcXVpcmVtZW50c1tpXS5zdGFydHNXaXRoKFwiY3NzOlwiKVxuICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgaWYgKGNvZGUucmVxdWlyZW1lbnRzW2ldLnN0YXJ0c1dpdGgoXCJjc3M6XCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvZGUucmVxdWlyZW1lbnRzW2ldID0gY29kZS5yZXF1aXJlbWVudHNbaV0uc2xpY2UoNCk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBsaW5rX25vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcbiAgICAgICAgICAgICAgICAgIGxpbmtfbm9kZS5yZWwgPSBcInN0eWxlc2hlZXRcIjtcbiAgICAgICAgICAgICAgICAgIGxpbmtfbm9kZS5ocmVmID0gY29kZS5yZXF1aXJlbWVudHNbaV07XG4gICAgICAgICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGxpbmtfbm9kZSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChcbiAgICAgICAgICAgICAgICAgIGNvZGUucmVxdWlyZW1lbnRzW2ldLnRvTG93ZXJDYXNlKCkuZW5kc1dpdGgoXCIuanNcIikgfHxcbiAgICAgICAgICAgICAgICAgIGNvZGUucmVxdWlyZW1lbnRzW2ldLnN0YXJ0c1dpdGgoXCJqczpcIilcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgIGlmIChjb2RlLnJlcXVpcmVtZW50c1tpXS5zdGFydHNXaXRoKFwianM6XCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvZGUucmVxdWlyZW1lbnRzW2ldID0gY29kZS5yZXF1aXJlbWVudHNbaV0uc2xpY2UoMyk7XG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICBhd2FpdCBpbXBvcnRTY3JpcHRzKGNvZGUucmVxdWlyZW1lbnRzW2ldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNvZGUucmVxdWlyZW1lbnRzW2ldLnN0YXJ0c1dpdGgoXCJodHRwXCIpKSB7XG4gICAgICAgICAgICAgICAgICBhd2FpdCBpbXBvcnRTY3JpcHRzKGNvZGUucmVxdWlyZW1lbnRzW2ldKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGNvZGUucmVxdWlyZW1lbnRzW2ldLnN0YXJ0c1dpdGgoXCJjYWNoZTpcIikpIHtcbiAgICAgICAgICAgICAgICAgIC8vaWdub3JlIGNhY2hlXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgICAgICAgICAgICBcIlVucHJvY2Vzc2VkIHJlcXVpcmVtZW50cyB1cmw6IFwiICsgY29kZS5yZXF1aXJlbWVudHNbaV1cbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aHJvdyBcInVuc3VwcG9ydGVkIHJlcXVpcmVtZW50cyBkZWZpbml0aW9uXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgXCJmYWlsZWQgdG8gaW1wb3J0IHJlcXVpcmVkIHNjcmlwdHM6IFwiICtcbiAgICAgICAgICAgICAgY29kZS5yZXF1aXJlbWVudHMudG9TdHJpbmcoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoY29kZS50eXBlID09PSBcInNjcmlwdFwiKSB7XG4gICAgICAgIGlmIChjb2RlLnNyYykge1xuICAgICAgICAgIHZhciBzY3JpcHRfbm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XG4gICAgICAgICAgc2NyaXB0X25vZGUuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBjb2RlLmF0dHJzLnR5cGUpO1xuICAgICAgICAgIHNjcmlwdF9ub2RlLnNldEF0dHJpYnV0ZShcInNyY1wiLCBjb2RlLnNyYyk7XG4gICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHRfbm9kZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgY29kZS5jb250ZW50ICYmXG4gICAgICAgICAgICAoIWNvZGUuYXR0cnMudHlwZSB8fCBjb2RlLmF0dHJzLnR5cGUgPT09IFwidGV4dC9qYXZhc2NyaXB0XCIpXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICAvLyBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbigpe1xuICAgICAgICAgICAgZXZhbChjb2RlLmNvbnRlbnQpO1xuICAgICAgICAgICAgLy8gfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgICAgICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBjb2RlLmF0dHJzLnR5cGUpO1xuICAgICAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjb2RlLmNvbnRlbnQpKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGNvZGUudHlwZSA9PT0gXCJzdHlsZVwiKSB7XG4gICAgICAgIHZhciBzdHlsZV9ub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICAgICAgICBpZiAoY29kZS5zcmMpIHtcbiAgICAgICAgICBzdHlsZV9ub2RlLnNyYyA9IGNvZGUuc3JjO1xuICAgICAgICB9XG4gICAgICAgIHN0eWxlX25vZGUuaW5uZXJIVE1MID0gY29kZS5jb250ZW50O1xuICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlX25vZGUpO1xuICAgICAgfSBlbHNlIGlmIChjb2RlLnR5cGUgPT09IFwibGlua1wiKSB7XG4gICAgICAgIHZhciBsaW5rX25vZGVfID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG4gICAgICAgIGlmIChjb2RlLnJlbCkge1xuICAgICAgICAgIGxpbmtfbm9kZV8ucmVsID0gY29kZS5yZWw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvZGUuaHJlZikge1xuICAgICAgICAgIGxpbmtfbm9kZV8uaHJlZiA9IGNvZGUuaHJlZjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY29kZS5hdHRycyAmJiBjb2RlLmF0dHJzLnR5cGUpIHtcbiAgICAgICAgICBsaW5rX25vZGVfLnR5cGUgPSBjb2RlLmF0dHJzLnR5cGU7XG4gICAgICAgIH1cbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChsaW5rX25vZGVfKTtcbiAgICAgIH0gZWxzZSBpZiAoY29kZS50eXBlID09PSBcImh0bWxcIikge1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKF9odG1sVG9FbGVtZW50KGNvZGUuY29udGVudCkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgXCJ1bnN1cHBvcnRlZCBjb2RlIHR5cGUuXCI7XG4gICAgICB9XG4gICAgICBwYXJlbnQucG9zdE1lc3NhZ2UoeyB0eXBlOiBcImV4ZWN1dGVTdWNjZXNzXCIgfSwgdGFyZ2V0T3JpZ2luKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiZmFpbGVkIHRvIGV4ZWN1dGUgc2NyaXB0czogXCIsIGNvZGUsIGUpO1xuICAgICAgcGFyZW50LnBvc3RNZXNzYWdlKFxuICAgICAgICB7IHR5cGU6IFwiZXhlY3V0ZUZhaWx1cmVcIiwgZXJyb3I6IGUuc3RhY2sgfHwgU3RyaW5nKGUpIH0sXG4gICAgICAgIHRhcmdldE9yaWdpblxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gY29ubmVjdGlvbiBvYmplY3QgZm9yIHRoZSBSUEMgY29uc3RydWN0b3JcbiAgY29uc3QgY29ubiA9IHtcbiAgICBkaXNjb25uZWN0OiBmdW5jdGlvbigpIHt9LFxuICAgIHNlbmQ6IGZ1bmN0aW9uKGRhdGEsIHRyYW5zZmVyYWJsZXMpIHtcbiAgICAgIHBhcmVudC5wb3N0TWVzc2FnZShkYXRhLCB0YXJnZXRPcmlnaW4sIHRyYW5zZmVyYWJsZXMpO1xuICAgIH0sXG4gICAgb25NZXNzYWdlOiBmdW5jdGlvbihoKSB7XG4gICAgICBjb25uLl9tZXNzYWdlSGFuZGxlciA9IGg7XG4gICAgfSxcbiAgICBfbWVzc2FnZUhhbmRsZXI6IGZ1bmN0aW9uKCkge30sXG4gICAgb25EaXNjb25uZWN0OiBmdW5jdGlvbigpIHt9XG4gIH07XG5cbiAgY29uZmlnLmRlZGljYXRlZF90aHJlYWQgPSBmYWxzZTtcbiAgY29uZmlnLmxhbmcgPSBcImphdmFzY3JpcHRcIjtcbiAgY29uZmlnLmFwaV92ZXJzaW9uID0gQVBJX1ZFUlNJT047XG5cbiAgLy8gZXZlbnQgbGlzdGVuZXIgZm9yIHRoZSBwbHVnaW4gbWVzc2FnZVxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgZnVuY3Rpb24oZSkge1xuICAgIGlmICh0YXJnZXRPcmlnaW4gPT09IFwiKlwiIHx8IGUub3JpZ2luID09PSB0YXJnZXRPcmlnaW4pIHtcbiAgICAgIGNvbnN0IG0gPSBlLmRhdGE7XG4gICAgICBzd2l0Y2ggKG0gJiYgbS50eXBlKSB7XG4gICAgICAgIGNhc2UgXCJnZXRDb25maWdcIjpcbiAgICAgICAgICBwYXJlbnQucG9zdE1lc3NhZ2UoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHR5cGU6IFwiY29uZmlnXCIsXG4gICAgICAgICAgICAgIGNvbmZpZzogY29uZmlnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdGFyZ2V0T3JpZ2luXG4gICAgICAgICAgKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImV4ZWN1dGVcIjpcbiAgICAgICAgICBpZiAoY29uZmlnLmFsbG93X2V4ZWN1dGlvbikge1xuICAgICAgICAgICAgZXhlY3V0ZShtLmNvZGUpO1xuICAgICAgICAgICAgaWYgKG0uY29kZS50eXBlID09PSBcInJlcXVpcmVtZW50c1wiKSB7XG4gICAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShtLmNvZGUucmVxdWlyZW1lbnRzKSkge1xuICAgICAgICAgICAgICAgIG0uY29kZS5yZXF1aXJlbWVudHMgPSBbbS5jb2RlLnJlcXVpcmVtZW50c107XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgICAgICBcImltcG9ydCBzY3JpcHQgaXMgbm90IGFsbG93ZWQgKGFsbG93X2V4ZWN1dGlvbj1mYWxzZSlcIlxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgY29ubi5fbWVzc2FnZUhhbmRsZXIobSk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBjb25uZWN0UlBDKGNvbm4sIHtcbiAgICByZW1vdGVfZnVuY3Rpb25fbWFwcGluZzogW1wiY2xvc2VcIiwgXCJyZXNpemVcIiwgXCJvblwiLCBcIm9mZlwiLCBcImVtaXRcIiwgXCJyZWZyZXNoXCJdXG4gIH0pO1xuXG4gIHBhcmVudC5wb3N0TWVzc2FnZShcbiAgICB7XG4gICAgICB0eXBlOiBcImluaXRpYWxpemVkXCIsXG4gICAgICBjb25maWc6IGNvbmZpZ1xuICAgIH0sXG4gICAgdGFyZ2V0T3JpZ2luXG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFUQTtBQVlBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRkE7QUFNQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBMUJBO0FBMkJBO0FBQ0E7QUFFQTtBQUNBO0FBREE7QUFJQTtBQUVBO0FBQ0E7QUFGQTtBQU1BIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pluginIframe.js\n')},"./src/pluginWebPython.js":
/*!********************************!*\
  !*** ./src/pluginWebPython.js ***!
  \********************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return setupWebPython; });\n/* harmony import */ var _pluginCore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pluginCore.js */ "./src/pluginCore.js");\n/* harmony import */ var _rpc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rpc.js */ "./src/rpc.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./src/utils.js");\n/**\n * Contains the routines loaded by the plugin iframe under web-browser\n * in case when worker failed to initialize\n *\n * Initializes the web environment version of the platform-dependent\n * connection object for the plugin site\n */\n\n\n\nfunction setupWebPython(config) {\n  config = config || {}; // Create a new, plain <span> element\n\n  function _htmlToElement(html) {\n    var template = document.createElement("template");\n    html = html.trim(); // Never return a text node of whitespace as the result\n\n    template.innerHTML = html;\n    return template.content.firstChild;\n  }\n\n  var _importScript = function (url) {\n    //url is URL of external file, implementationCode is the code\n    //to be called from the file, location is the location to\n    //insert the <script> element\n    return new Promise((resolve, reject) => {\n      var scriptTag = document.createElement("script");\n      scriptTag.src = url;\n      scriptTag.onload = resolve;\n\n      scriptTag.onreadystatechange = function () {\n        if (this.readyState === "loaded" || this.readyState === "complete") {\n          resolve();\n        }\n      };\n\n      scriptTag.onerror = reject;\n      document.head.appendChild(scriptTag);\n    });\n  }; // support importScripts outside web worker\n\n\n  async function importScripts() {\n    var args = Array.prototype.slice.call(arguments),\n        len = args.length,\n        i = 0;\n\n    for (; i < len; i++) {\n      await _importScript(args[i]);\n    }\n  }\n\n  var startup_script = `\n  from js import api\n  import sys\n  from types import ModuleType\n  m = ModuleType("imjoy")\n  sys.modules[m.__name__] = m\n  m.__file__ = m.__name__ + ".py"\n  m.api = api\n  `;\n  var _export_plugin_api = null;\n\n  var execute_python_code = function (code) {\n    try {\n      if (!_export_plugin_api) {\n        _export_plugin_api = window.api.export;\n\n        window.api.export = function (p) {\n          if (typeof p === "object") {\n            const _api = {};\n\n            for (let k in p) {\n              if (!k.startsWith("_")) {\n                _api[k] = p[k];\n              }\n            }\n\n            _export_plugin_api(_api);\n          } else if (typeof p === "function") {\n            const _api = {};\n            const getattr = window.pyodide.pyimport("getattr");\n            const hasattr = window.pyodide.pyimport("hasattr");\n\n            for (let k of Object.getOwnPropertyNames(p)) {\n              if (!k.startsWith("_") && hasattr(p, k)) {\n                const func = getattr(p, k);\n\n                _api[k] = function () {\n                  return func(...Array.prototype.slice.call(arguments));\n                };\n              }\n            }\n\n            _export_plugin_api(_api);\n          } else {\n            throw "unsupported api export";\n          }\n        };\n      }\n\n      window.pyodide.runPython(startup_script);\n      window.pyodide.runPython(code.content);\n    } catch (e) {\n      throw e;\n    }\n  }; // evaluates the provided string\n\n\n  var execute = async function (code) {\n    try {\n      if (code.type === "requirements") {\n        if (code.requirements) {\n          code.requirements = typeof code.requirements === "string" ? [code.requirements] : code.requirements;\n\n          if (Array.isArray(code.requirements)) {\n            const python_packages = [];\n\n            for (var i = 0; i < code.requirements.length; i++) {\n              if (code.requirements[i].toLowerCase().endsWith(".css") || code.requirements[i].startsWith("css:")) {\n                if (code.requirements[i].startsWith("css:")) {\n                  code.requirements[i] = code.requirements[i].slice(4);\n                }\n\n                link_node = document.createElement("link");\n                link_node.rel = "stylesheet";\n                link_node.href = code.requirements[i];\n                document.head.appendChild(link_node);\n              } else if ( // code.requirements[i].toLowerCase().endsWith(".js") ||\n              code.requirements[i].startsWith("js:")) {\n                if (code.requirements[i].startsWith("js:")) {\n                  code.requirements[i] = code.requirements[i].slice(3);\n                }\n\n                await importScripts(code.requirements[i]);\n              } else if (code.requirements[i].startsWith("cache:")) {//ignore cache\n              } else if (code.requirements[i].toLowerCase().endsWith(".js") || code.requirements[i].startsWith("package:")) {\n                if (code.requirements[i].startsWith("package:")) {\n                  code.requirements[i] = code.requirements[i].slice(8);\n                }\n\n                python_packages.push(code.requirements[i]);\n              } else if (code.requirements[i].startsWith("http:") || code.requirements[i].startsWith("https:")) {\n                console.log("Unprocessed requirements url: " + code.requirements[i]);\n              } else {\n                python_packages.push(code.requirements[i]);\n              }\n            }\n\n            await window.pyodide.loadPackage(python_packages);\n          } else {\n            throw "unsupported requirements definition";\n          }\n        }\n      } else if (code.type === "script") {\n        if (code.src) {\n          var script_node = document.createElement("script");\n          script_node.setAttribute("type", code.attrs.type);\n          script_node.setAttribute("src", code.src);\n          document.head.appendChild(script_node);\n        } else {\n          if (code.content && code.lang === "python") {\n            execute_python_code(code);\n          } else if (code.content && code.lang === "javascript") {\n            try {\n              eval(code.content);\n            } catch (e) {\n              console.error(e.message, e.stack);\n              throw e;\n            }\n          } else {\n            var node = document.createElement("script");\n            node.setAttribute("type", code.attrs.type);\n            node.appendChild(document.createTextNode(code.content));\n            document.body.appendChild(node);\n          }\n        }\n      } else if (code.type === "style") {\n        var style_node = document.createElement("style");\n\n        if (code.src) {\n          style_node.src = code.src;\n        }\n\n        style_node.innerHTML = code.content;\n        document.head.appendChild(style_node);\n      } else if (code.type === "link") {\n        var link_node = document.createElement("link");\n\n        if (code.rel) {\n          link_node.rel = code.rel;\n        }\n\n        if (code.href) {\n          link_node.href = code.href;\n        }\n\n        if (code.attrs && code.attrs.type) {\n          link_node.type = code.attrs.type;\n        }\n\n        document.head.appendChild(link_node);\n      } else if (code.type === "html") {\n        document.body.appendChild(_htmlToElement(code.content));\n      } else {\n        throw "unsupported code type.";\n      }\n\n      parent.postMessage({\n        type: "executeSuccess"\n      }, "*");\n    } catch (e) {\n      console.error("failed to execute scripts: ", code, e);\n      parent.postMessage({\n        type: "executeFailure",\n        error: e.stack || String(e)\n      }, "*");\n    }\n  };\n\n  const targetOrigin = config.target_origin || "*"; // connection object for the RPC constructor\n\n  const conn = {\n    disconnect: function () {},\n    send: function (data, transferables) {\n      parent.postMessage(data, targetOrigin, transferables);\n    },\n    onMessage: function (h) {\n      conn._messageHandler = h;\n    },\n    _messageHandler: function () {},\n    onDisconnect: function () {}\n  };\n  config.dedicated_thread = false;\n  config.lang = "python";\n  config.api_version = _rpc_js__WEBPACK_IMPORTED_MODULE_1__["API_VERSION"]; // event listener for the plugin message\n\n  window.addEventListener("message", function (e) {\n    if (targetOrigin === "*" || e.origin === targetOrigin) {\n      const m = e.data;\n\n      switch (m && m.type) {\n        case "getConfig":\n          parent.postMessage({\n            type: "config",\n            config: config\n          }, targetOrigin);\n          break;\n\n        case "execute":\n          if (config.allow_execution) {\n            execute(m.code);\n\n            if (m.code.type === "requirements") {\n              if (!Array.isArray(m.code.requirements)) {\n                m.code.requirements = [m.code.requirements];\n              }\n            }\n          } else {\n            console.warn("execute script is not allowed (allow_execution=false)");\n          }\n\n          break;\n\n        default:\n          conn._messageHandler(m);\n\n      }\n    }\n  });\n  window.languagePluginUrl = "https://static.imjoy.io/pyodide/";\n  importScripts("https://static.imjoy.io/pyodide/pyodide.js").then(() => {\n    // hack for matplotlib etc.\n    window.iodide = {\n      output: {\n        element: function element(type) {\n          const div = document.createElement(type);\n          const output = document.getElementById("output") || document.body;\n          output.appendChild(div);\n          return div;\n        }\n      }\n    };\n    window.languagePluginLoader.then(() => {\n      // pyodide is now ready to use...\n      console.log(window.pyodide.runPython("import sys\\nsys.version"));\n      Object(_pluginCore_js__WEBPACK_IMPORTED_MODULE_0__["connectRPC"])(conn, {\n        remote_function_mapping: config.type === "web-python-window" ? ["close", "resize", "on", "off", "emit", "refresh"] : null\n      });\n      parent.postMessage({\n        type: "initialized",\n        config: config\n      }, targetOrigin);\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pluginWebPython.js\n')},"./src/rpc.js":
/*!********************!*\
  !*** ./src/rpc.js ***!
  \********************/
/*! exports provided: API_VERSION, RPC */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_VERSION", function() { return API_VERSION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RPC", function() { return RPC; });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ "./src/utils.js");\n/**\n * Contains the RPC object used both by the application\n * site, and by each plugin\n */\n\nconst API_VERSION = "0.2.0";\nconst ArrayBufferView = Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array())).constructor;\n\nfunction _appendBuffer(buffer1, buffer2) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp.buffer;\n}\n\nfunction getKeyByValue(object, value) {\n  return Object.keys(object).find(key => object[key] === value);\n}\n/**\n * RPC object represents a single site in the\n * communication protocol between the application and the plugin\n *\n * @param {Object} connection a special object allowing to send\n * and receive messages from the opposite site (basically it\n * should only provide send() and onMessage() methods)\n */\n\n\nclass RPC {\n  constructor(connection, config) {\n    this._connection = connection;\n    this.config = config || {};\n    this._interface = {};\n    this._plugin_interfaces = {};\n    this._remote = null;\n\n    this._remoteUpdateHandler = function () {};\n\n    this._getInterfaceHandler = function () {};\n\n    this._interfaceSetAsRemoteHandler = null;\n\n    this._disconnectHandler = function () {};\n\n    this._store = new ReferenceStore();\n    this._method_refs = new ReferenceStore();\n    this._connection = connection;\n    let me = this;\n\n    this._connection.onMessage(function (data) {\n      me._processMessage(data);\n    });\n  }\n  /**\n   * Set a handler to be called when the remote site updates its\n   * interface\n   *\n   * @param {Function} handler\n   */\n\n\n  onRemoteUpdate(handler) {\n    this._remoteUpdateHandler = handler;\n  }\n  /**\n   * Set a handler to be called when received a responce from the\n   * remote site reporting that the previously provided interface\n   * has been successfully set as remote for that site\n   *\n   * @param {Function} handler\n   */\n\n\n  onRemoteReady(handler) {\n    this._method_refs.onReady(handler);\n  }\n\n  onRemoteBusy(handler) {\n    this._method_refs.onBusy(handler);\n  }\n\n  getRemoteCallStack() {\n    return this._method_refs.getStack();\n  }\n  /**\n   * Set a handler to be called when the remote site requests to\n   * (re)send the interface. Used to detect an initialzation\n   * completion without sending additional request, since in fact\n   * \'getInterface\' request is only sent by application at the last\n   * step of the plugin initialization\n   *\n   * @param {Function} handler\n   */\n\n\n  onGetInterface(handler) {\n    this._getInterfaceHandler = handler;\n  }\n  /**\n   * @returns {Object} set of remote interface methods\n   */\n\n\n  getRemote() {\n    return this._remote;\n  }\n  /**\n   * Sets the interface of this site making it available to the\n   * remote site by sending a message with a set of methods names\n   *\n   * @param {Object} _interface to set\n   */\n\n\n  setInterface(_interface) {\n    if (this.config.remote_function_mapping) {\n      for (let func_name of this.config.remote_function_mapping) {\n        if (_interface.constructor === Object) {\n          _interface[func_name] = (...args) => {\n            this._remote[func_name](...args);\n          };\n        } else if (_interface.constructor.constructor === Function) {\n          _interface.constructor.prototype[func_name] = (...args) => {\n            this._remote[func_name](...args);\n          };\n        }\n      }\n    }\n\n    this._interface = _interface;\n  }\n  /**\n   * Sends the actual interface to the remote site upon it was\n   * updated or by a special request of the remote site\n   */\n\n\n  sendInterface() {\n    return new Promise(resolve => {\n      var names = [];\n\n      if (!this._interface) {\n        throw new Error("interface is not set.");\n      }\n\n      if (this._interface.constructor === Object) {\n        for (var name of Object.keys(this._interface)) {\n          if (name.startsWith("_")) continue;\n\n          if (typeof this._interface[name] === "function") {\n            names.push({\n              name: name,\n              data: null,\n              type: "function"\n            });\n          } else {\n            var data = this._interface[name];\n\n            if (data !== null && typeof data === "object") {\n              var data2 = {};\n\n              for (var k of Object.keys(data)) {\n                if (typeof data[k] === "function") {\n                  data2[k] = "rpc_method::" + k;\n                } else {\n                  data2[k] = data[k];\n                }\n              }\n\n              names.push({\n                name: name,\n                data: data2,\n                type: "object"\n              });\n            } else if (Object(data) !== data) {\n              names.push({\n                name: name,\n                data: data,\n                type: "data"\n              });\n            }\n          }\n        }\n      } // a class\n      else if (this._interface.constructor === Function) {\n          throw new Error("Please instantiate the class before exportting it.");\n        } // instance of a class\n        else if (this._interface.constructor.constructor === Function) {\n            var functions = Object.getOwnPropertyNames(Object.getPrototypeOf(this._interface)).concat(Object.keys(this._interface));\n\n            for (var i = 0; i < functions.length; i++) {\n              var name_ = functions[i];\n              if (name_.startsWith("_") || name_ === "constructor") continue;\n\n              if (typeof this._interface[name_] === "function") {\n                names.push({\n                  name: name_,\n                  data: null\n                });\n              }\n            }\n          } else {\n            throw Error("Unsupported interface type");\n          }\n\n      this._interfaceSetAsRemoteHandler = resolve;\n\n      this._connection.send({\n        type: "setInterface",\n        api: names\n      });\n    });\n  }\n  /**\n   * Handles a message from the remote site\n   */\n  // var callback_reg = new RegExp("onupdate|run$")\n\n\n  _processMessage(data) {\n    var resolve, reject, method, args, result;\n\n    switch (data.type) {\n      case "method":\n        var _interface = this._interface;\n\n        var _method_context = _interface.__this__ || _interface;\n\n        if (data.pid) {\n          _interface = this._plugin_interfaces[data.pid];\n\n          if (!_interface) {\n            if (data.promise) {\n              [resolve, reject] = this._unwrap(data.promise, false);\n              reject(`plugin api function is not avaialbe in "${data.pid}", the plugin maybe terminated.`);\n            } else {\n              console.error(`plugin api function is not avaialbe in ${data.pid}, the plugin maybe terminated.`);\n            }\n\n            return;\n          }\n        }\n\n        if (data.name.indexOf(".") !== -1) {\n          var names = data.name.split(".");\n          method = _interface[names[0]][names[1]];\n        } else {\n          method = _interface[data.name];\n        }\n\n        args = this._unwrap(data.args, true);\n\n        if (data.promise) {\n          [resolve, reject] = this._unwrap(data.promise, false);\n\n          try {\n            result = method.apply(_method_context, args);\n\n            if (result instanceof Promise || method.constructor && method.constructor.name === "AsyncFunction") {\n              result.then(resolve).catch(reject);\n            } else {\n              resolve(result);\n            }\n          } catch (e) {\n            console.error(e, method);\n            reject(e);\n          }\n        } else {\n          try {\n            method.apply(_method_context, args);\n          } catch (e) {\n            console.error(e, method, args);\n          }\n        }\n\n        break;\n\n      case "callback":\n        if (data.promise) {\n          [resolve, reject] = this._unwrap(data.promise, false);\n\n          try {\n            method = this._store.fetch(data.num);\n            args = this._unwrap(data.args, true);\n\n            if (!method) {\n              throw "Callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.";\n            }\n\n            result = method.apply(null, args);\n\n            if (result instanceof Promise || method.constructor && method.constructor.name === "AsyncFunction") {\n              result.then(resolve).catch(reject);\n            } else {\n              resolve(result);\n            }\n          } catch (e) {\n            console.error(e, method);\n            reject(e);\n          }\n        } else {\n          try {\n            method = this._store.fetch(data.num);\n            args = this._unwrap(data.args, true);\n\n            if (!method) {\n              throw "Please notice that callback function can only called once, if you want to call a function for multiple times, please make it as a plugin api function. See https://imjoy.io/docs for more details.";\n            }\n\n            method.apply(null, args);\n          } catch (e) {\n            console.error(e, method, args);\n          }\n        }\n\n        break;\n\n      case "setInterface":\n        this._setRemote(data.api);\n\n        break;\n\n      case "getInterface":\n        this.sendInterface();\n\n        this._getInterfaceHandler();\n\n        break;\n\n      case "interfaceSetAsRemote":\n        if (typeof this._interfaceSetAsRemoteHandler === "function") {\n          this._interfaceSetAsRemoteHandler();\n\n          this._interfaceSetAsRemoteHandler === null;\n        }\n\n        break;\n\n      case "disconnect":\n        this._disconnectHandler();\n\n        this._connection.disconnect();\n\n        break;\n    }\n  }\n  /**\n   * Sends a requests to the remote site asking it to provide its\n   * current interface\n   */\n\n\n  requestRemote() {\n    this._connection.send({\n      type: "getInterface"\n    });\n  }\n\n  _ndarray(typedArray, shape, dtype) {\n    var _dtype = _utils_js__WEBPACK_IMPORTED_MODULE_0__["typedArrayToDtype"][typedArray.constructor.name];\n\n    if (dtype && dtype !== _dtype) {\n      throw "dtype doesn\'t match the type of the array: " + _dtype + " != " + dtype;\n    }\n\n    shape = shape || [typedArray.length];\n    return {\n      __jailed_type__: "ndarray",\n      __value__: typedArray,\n      __shape__: shape,\n      __dtype__: _dtype\n    };\n  }\n  /**\n   * Sets the new remote interface provided by the other site\n   *\n   * @param {Array} names list of function names\n   */\n\n\n  _setRemote(api) {\n    this._remote = {};\n    var i, name, data, type;\n\n    for (i = 0; i < api.length; i++) {\n      name = api[i].name;\n      data = api[i].data;\n      type = api[i].type;\n\n      if (type === "data") {\n        this._remote[name] = data;\n      } else if (data) {\n        if (typeof data === "object") {\n          var data2 = {};\n\n          for (var key in data) {\n            if (data.hasOwnProperty(key)) {\n              if (data[key] === "rpc_method::" + key) {\n                data2[key] = this._genRemoteMethod(name + "." + key);\n              } else {\n                data2[key] = data[key];\n              }\n            }\n          }\n\n          this._remote[name] = data2;\n        } else {\n          this._remote[name] = data;\n        }\n      } else {\n        this._remote[name] = this._genRemoteMethod(name);\n      }\n    }\n\n    this._remoteUpdateHandler();\n\n    this._reportRemoteSet();\n  }\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * method. When the generated function is called, it will send the\n   * corresponding message to the remote site asking it to execute\n   * the particular method of its interface\n   *\n   * @param {String} name of the remote method\n   *\n   * @returns {Function} wrapped remote method\n   */\n\n\n  _genRemoteMethod(name, plugin_id) {\n    var me = this;\n\n    var remoteMethod = function () {\n      return new Promise((resolve, reject) => {\n        let id = null;\n\n        try {\n          id = me._method_refs.put(plugin_id ? plugin_id + "/" + name : name);\n\n          var wrapped_resolve = function () {\n            if (id !== null) me._method_refs.fetch(id);\n            return resolve.apply(this, arguments);\n          };\n\n          var wrapped_reject = function () {\n            if (id !== null) me._method_refs.fetch(id);\n            return reject.apply(this, arguments);\n          };\n\n          wrapped_resolve.__jailed_pairs__ = wrapped_reject;\n          wrapped_reject.__jailed_pairs__ = wrapped_resolve;\n          var args = Array.prototype.slice.call(arguments);\n\n          if (name === "register" || name === "export" || name === "on") {\n            args = me._wrap(args, true);\n          } else {\n            args = me._wrap(args);\n          }\n\n          var transferables = args.args.__transferables__;\n          if (transferables) delete args.args.__transferables__;\n\n          me._connection.send({\n            type: "method",\n            name: name,\n            pid: plugin_id,\n            args: args,\n            promise: me._wrap([wrapped_resolve, wrapped_reject])\n          }, transferables);\n        } catch (e) {\n          if (id) me._method_refs.fetch(id);\n          reject(`Failed to exectue remote method (plugin: ${plugin_id || me.id}, method: ${name}), error: ${e}`);\n        }\n      });\n    };\n\n    remoteMethod.__remote_method = true;\n    return remoteMethod;\n  }\n  /**\n   * Sends a responce reporting that interface just provided by the\n   * remote site was successfully set by this site as remote\n   */\n\n\n  _reportRemoteSet() {\n    this._connection.send({\n      type: "interfaceSetAsRemote"\n    });\n  }\n  /**\n   * Prepares the provided set of remote method arguments for\n   * sending to the remote site, replaces all the callbacks with\n   * identifiers\n   *\n   * @param {Array} args to wrap\n   *\n   * @returns {Array} wrapped arguments\n   */\n\n\n  _encode_interface(aObject, bObject) {\n    var v, k;\n    const encoded_interface = {};\n    aObject["__id__"] = aObject["__id__"] || Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["randId"])();\n\n    for (k in aObject) {\n      if (k === "hasOwnProperty") continue;\n\n      if (aObject.hasOwnProperty(k)) {\n        if (k.startsWith("_")) {\n          continue;\n        }\n\n        v = aObject[k];\n\n        if (typeof v === "function") {\n          bObject[k] = {\n            __jailed_type__: "plugin_interface",\n            __plugin_id__: aObject["__id__"],\n            __value__: k,\n            num: null\n          };\n          encoded_interface[k] = v;\n        } else if (Object(v) !== v) {\n          bObject[k] = {\n            __jailed_type__: "argument",\n            __value__: v\n          };\n          encoded_interface[k] = v;\n        } else if (typeof v === "object") {\n          bObject[k] = Array.isArray(v) ? [] : {};\n\n          this._encode_interface(v, bObject[k]);\n        }\n      }\n    }\n\n    this._plugin_interfaces[aObject["__id__"]] = encoded_interface;\n\n    if (aObject.on) {\n      aObject.on("close", () => {\n        delete this._plugin_interfaces[aObject["__id__"]];\n      });\n    }\n  }\n\n  _encode(aObject, as_interface) {\n    var transferables = [];\n\n    if (!aObject) {\n      return aObject;\n    }\n\n    var _transfer = aObject._transfer;\n    var bObject, v, k;\n    var isarray = Array.isArray(aObject);\n    bObject = isarray ? [] : {}; //skip if already encoded\n\n    if (typeof aObject === "object" && aObject.__jailed_type__ && aObject.__value__) {\n      return aObject;\n    } //encode interfaces\n\n\n    if (typeof aObject === "object" && !Array.isArray(aObject) && (aObject.__as_interface__ || as_interface)) {\n      this._encode_interface(aObject, bObject);\n\n      return bObject;\n    }\n\n    if (as_interface) {\n      aObject["__id__"] = aObject["__id__"] || Object(_utils_js__WEBPACK_IMPORTED_MODULE_0__["randId"])();\n      this._plugin_interfaces[aObject["__id__"]] = this._plugin_interfaces[aObject["__id__"]] || {};\n    }\n\n    for (k in aObject) {\n      if (k === "hasOwnProperty") continue;\n\n      if (isarray || aObject.hasOwnProperty(k)) {\n        v = aObject[k];\n\n        if (typeof this._interface._rpcEncode === "function") {\n          const encoded_obj = this._interface._rpcEncode(v);\n\n          if (encoded_obj && encoded_obj.__rpc_dtype__) {\n            bObject[k] = {\n              __jailed_type__: "custom_encoding",\n              __value__: encoded_obj\n            };\n            continue;\n          } // if the returned object does not contain __jailed_type__, assuming the object has been transformed\n          else {\n              v = encoded_obj;\n            }\n        }\n\n        if (typeof v === "function") {\n          if (as_interface) {\n            const encoded_interface = this._plugin_interfaces[aObject["__id__"]];\n            bObject[k] = {\n              __jailed_type__: "plugin_interface",\n              __plugin_id__: aObject["__id__"],\n              __value__: k,\n              num: null\n            };\n            encoded_interface[k] = v;\n            continue;\n          }\n\n          let interfaceFuncName = null;\n\n          for (var name in this._interface) {\n            if (this._interface.hasOwnProperty(name)) {\n              if (name.startsWith("_")) continue;\n\n              if (this._interface[name] === v) {\n                interfaceFuncName = name;\n                break;\n              }\n            }\n          } // search for prototypes\n\n\n          var functions = Object.getOwnPropertyNames(Object.getPrototypeOf(this._interface));\n\n          for (var i = 0; i < functions.length; i++) {\n            var name_ = functions[i];\n            if (name_.startsWith("_")) continue;\n\n            if (this._interface[name_] === v) {\n              interfaceFuncName = name_;\n              break;\n            }\n          }\n\n          if (!interfaceFuncName) {\n            var id = this._store.put(v);\n\n            bObject[k] = {\n              __jailed_type__: "callback",\n              __value__: v.constructor && v.constructor.name || id,\n              num: id\n            };\n          } else {\n            bObject[k] = {\n              __jailed_type__: "interface",\n              __value__: interfaceFuncName,\n              num: null\n            };\n          }\n        } else if (\n        /*global tf*/\n        typeof tf !== "undefined" && tf.Tensor && v instanceof tf.Tensor) {\n          const v_buffer = v.dataSync();\n\n          if (v._transfer || _transfer) {\n            transferables.push(v_buffer.buffer);\n            delete v._transfer;\n          }\n\n          bObject[k] = {\n            __jailed_type__: "ndarray",\n            __value__: v_buffer,\n            __shape__: v.shape,\n            __dtype__: v.dtype\n          };\n        } else if (\n        /*global nj*/\n        typeof nj !== "undefined" && nj.NdArray && v instanceof nj.NdArray) {\n          var dtype = _utils_js__WEBPACK_IMPORTED_MODULE_0__["typedArrayToDtype"][v.selection.data.constructor.name];\n\n          if (v._transfer || _transfer) {\n            transferables.push(v.selection.data.buffer);\n            delete v._transfer;\n          }\n\n          bObject[k] = {\n            __jailed_type__: "ndarray",\n            __value__: v.selection.data,\n            __shape__: v.shape,\n            __dtype__: dtype\n          };\n        } else if (v instanceof Error) {\n          console.error(v);\n          bObject[k] = {\n            __jailed_type__: "error",\n            __value__: v.toString()\n          };\n        } else if (typeof File !== "undefined" && v instanceof File) {\n          bObject[k] = {\n            __jailed_type__: "file",\n            __value__: v,\n            __relative_path__: v.relativePath || v.webkitRelativePath\n          };\n        } // send objects supported by structure clone algorithm\n        // https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n        else if (v !== Object(v) || v instanceof Boolean || v instanceof String || v instanceof Date || v instanceof RegExp || v instanceof Blob || v instanceof ImageData || typeof FileList !== "undefined" && v instanceof FileList) {\n            bObject[k] = {\n              __jailed_type__: "argument",\n              __value__: v\n            };\n          } else if (v instanceof ArrayBuffer) {\n            if (v._transfer || _transfer) {\n              transferables.push(v);\n              delete v._transfer;\n            }\n\n            bObject[k] = {\n              __jailed_type__: "argument",\n              __value__: v\n            };\n          } else if (v instanceof ArrayBufferView) {\n            if (v._transfer || _transfer) {\n              transferables.push(v.buffer);\n              delete v._transfer;\n            }\n\n            bObject[k] = {\n              __jailed_type__: "argument",\n              __value__: v\n            };\n          } // TODO: support also Map and Set\n          // TODO: avoid object such as DynamicPlugin instance.\n          else if (v.__as_interface__) {\n              bObject[k] = this._encode(v, true);\n            } else if (typeof v === "object" || Array.isArray(v)) {\n              bObject[k] = this._encode(v, as_interface); // move transferables to the top level object\n\n              if (bObject[k].__transferables__) {\n                for (var t = 0; t < bObject[k].__transferables__.length; t++) {\n                  transferables.push(bObject[k].__transferables__[t]);\n                }\n\n                delete bObject[k].__transferables__;\n              }\n            } else if (typeof v === "object" && v.constructor) {\n              throw "Unsupported data type for transferring between the plugin and the main app: " + k + " : " + v.constructor.name;\n            } else {\n              throw "Unsupported data type for transferring between the plugin and the main app: " + k + "," + v;\n            }\n      }\n    }\n\n    if (transferables.length > 0) {\n      bObject.__transferables__ = transferables;\n    }\n\n    return bObject;\n  }\n\n  _decode(aObject, callbackId, withPromise) {\n    if (!aObject) {\n      return aObject;\n    }\n\n    var bObject, v, k;\n\n    if (aObject.hasOwnProperty("__jailed_type__") && aObject.hasOwnProperty("__value__")) {\n      if (aObject.__jailed_type__.startsWith("custom_encoding")) {\n        if (typeof this._interface._rpcDecode === "function") {\n          const decodedObj = this._interface._rpcDecode(aObject.__value__);\n\n          bObject = decodedObj;\n        } else {\n          bObject = aObject;\n        }\n      } else if (aObject.__jailed_type__ === "callback") {\n        bObject = this._genRemoteCallback(callbackId, aObject.num, withPromise);\n      } else if (aObject.__jailed_type__ === "interface") {\n        bObject = this._remote[aObject.__value__] || this._genRemoteMethod(aObject.__value__);\n      } else if (aObject.__jailed_type__ === "plugin_interface") {\n        bObject = this._genRemoteMethod(aObject.__value__, aObject.__plugin_id__);\n      } else if (aObject.__jailed_type__ === "ndarray") {\n        /*global nj tf*/\n        //create build array/tensor if used in the plugin\n        if (this.id === "__plugin__" && typeof nj !== "undefined" && nj.array) {\n          if (Array.isArray(aObject.__value__)) {\n            aObject.__value__ = aObject.__value__.reduce(_appendBuffer);\n          }\n\n          bObject = nj.array(aObject.__value__, aObject.__dtype__).reshape(aObject.__shape__);\n        } else if (this.id === "__plugin__" && typeof tf !== "undefined" && tf.Tensor) {\n          if (Array.isArray(aObject.__value__)) {\n            aObject.__value__ = aObject.__value__.reduce(_appendBuffer);\n          }\n\n          bObject = tf.tensor(aObject.__value__, aObject.__shape__, aObject.__dtype__);\n        } else {\n          //keep it as regular if transfered to the main app\n          bObject = aObject;\n        }\n      } else if (aObject.__jailed_type__ === "error") {\n        bObject = new Error(aObject.__value__);\n      } else if (aObject.__jailed_type__ === "file") {\n        bObject = aObject.__value__; //patch relativePath\n\n        bObject.relativePath = aObject.__relative_path__;\n      } else if (aObject.__jailed_type__ === "argument") {\n        bObject = aObject.__value__;\n      }\n\n      return bObject;\n    } else {\n      var isarray = Array.isArray(aObject);\n      bObject = isarray ? [] : {};\n\n      for (k in aObject) {\n        if (isarray || aObject.hasOwnProperty(k)) {\n          v = aObject[k];\n\n          if (typeof v === "object" || Array.isArray(v)) {\n            bObject[k] = this._decode(v, callbackId, withPromise);\n          }\n        }\n      }\n\n      return bObject;\n    }\n  }\n\n  _wrap(args, as_interface) {\n    var wrapped = this._encode(args, as_interface);\n\n    var result = {\n      args: wrapped\n    };\n    return result;\n  }\n  /**\n   * Unwraps the set of arguments delivered from the remote site,\n   * replaces all callback identifiers with a function which will\n   * initiate sending that callback identifier back to other site\n   *\n   * @param {Object} args to unwrap\n   *\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Array} unwrapped args\n   */\n\n\n  _unwrap(args, withPromise) {\n    // var called = false;\n    // wraps each callback so that the only one could be called\n    // var once(cb) {\n    //     return function() {\n    //         if (!called) {\n    //             called = true;\n    //             return cb.apply(this, arguments);\n    //         } else {\n    //             var msg =\n    //               \'A callback from this set has already been executed\';\n    //             throw new Error(msg);\n    //         }\n    //     };\n    // }\n    var result = this._decode(args.args, args.callbackId, withPromise);\n\n    return result;\n  }\n  /**\n   * Generates the wrapped function corresponding to a single remote\n   * callback. When the generated function is called, it will send\n   * the corresponding message to the remote site asking it to\n   * execute the particular callback previously saved during a call\n   * by the remote site a method from the interface of this site\n   *\n   * @param {Number} id of the remote callback to execute\n   * @param {Number} argNum argument index of the callback\n   * @param {Boolean} withPromise is true means this the callback should contain a promise\n   *\n   * @returns {Function} wrapped remote callback\n   */\n\n\n  _genRemoteCallback(id, argNum, withPromise) {\n    var me = this;\n    var remoteCallback;\n\n    if (withPromise) {\n      remoteCallback = function () {\n        return new Promise((resolve, reject) => {\n          var args = me._wrap(Array.prototype.slice.call(arguments));\n\n          var transferables = args.args.__transferables__;\n          if (transferables) delete args.args.__transferables__;\n          resolve.__jailed_pairs__ = reject;\n          reject.__jailed_pairs__ = resolve;\n\n          try {\n            me._connection.send({\n              type: "callback",\n              id: id,\n              num: argNum,\n              args: args,\n              // pid :  me.id,\n              promise: me._wrap([resolve, reject])\n            }, transferables);\n          } catch (e) {\n            reject(`Failed to exectue remote callback (id: ${id}, argNum: ${argNum}).`);\n          }\n        });\n      };\n\n      return remoteCallback;\n    } else {\n      remoteCallback = function () {\n        var args = me._wrap(Array.prototype.slice.call(arguments));\n\n        var transferables = args.args.__transferables__;\n        if (transferables) delete args.args.__transferables__;\n        return me._connection.send({\n          type: "callback",\n          id: id,\n          num: argNum,\n          args: args // pid :  me.id\n\n        }, transferables);\n      };\n\n      return remoteCallback;\n    }\n  }\n  /**\n   * Sends the notification message and breaks the connection\n   */\n\n\n  disconnect() {\n    this._connection.send({\n      type: "disconnect"\n    });\n\n    setTimeout(this._connection.disconnect, 2000);\n  }\n  /**\n   * Set a handler to be called when received a disconnect message\n   * from the remote site\n   *\n   * @param {Function} handler\n   */\n\n\n  onDisconnect(handler) {\n    this._disconnectHandler = handler;\n  }\n\n}\n/**\n * ReferenceStore is a special object which stores other objects\n * and provides the references (number) instead. This reference\n * may then be sent over a json-based communication channel (IPC\n * to another Node.js process or a message to the Worker). Other\n * site may then provide the reference in the responce message\n * implying the given object should be activated.\n *\n * Primary usage for the ReferenceStore is a storage for the\n * callbacks, which therefore makes it possible to initiate a\n * callback execution by the opposite site (which normally cannot\n * directly execute functions over the communication channel).\n *\n * Each stored object can only be fetched once and is not\n * available for the second time. Each stored object must be\n * fetched, since otherwise it will remain stored forever and\n * consume memory.\n *\n * Stored object indeces are simply the numbers, which are however\n * released along with the objects, and are later reused again (in\n * order to postpone the overflow, which should not likely happen,\n * but anyway).\n */\n\nclass ReferenceStore {\n  constructor() {\n    this._store = {}; // stored object\n\n    this._indices = [0]; // smallest available indices\n\n    this._readyHandler = function () {};\n\n    this._busyHandler = function () {};\n\n    this._readyHandler();\n  }\n  /**\n   * call handler when the store is empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n\n\n  onReady(readyHandler) {\n    this._readyHandler = readyHandler || function () {};\n  }\n  /**\n   * call handler when the store is not empty\n   *\n   * @param {FUNCTION} id of a handler\n   */\n\n\n  onBusy(busyHandler) {\n    this._busyHandler = busyHandler || function () {};\n  }\n  /**\n   * get the length of the store\n   *\n   */\n\n\n  getStack() {\n    return Object.keys(this._store).length;\n  }\n  /**\n   * @function _genId() generates the new reference id\n   *\n   * @returns {Number} smallest available id and reserves it\n   */\n\n\n  _genId() {\n    var id;\n\n    if (this._indices.length === 1) {\n      id = this._indices[0]++;\n    } else {\n      id = this._indices.shift();\n    }\n\n    return id;\n  }\n  /**\n   * Releases the given reference id so that it will be available by\n   * another object stored\n   *\n   * @param {Number} id to release\n   */\n\n\n  _releaseId(id) {\n    for (var i = 0; i < this._indices.length; i++) {\n      if (id < this._indices[i]) {\n        this._indices.splice(i, 0, id);\n\n        break;\n      }\n    } // cleaning-up the sequence tail\n\n\n    for (i = this._indices.length - 1; i >= 0; i--) {\n      if (this._indices[i] - 1 === this._indices[i - 1]) {\n        this._indices.pop();\n      } else {\n        break;\n      }\n    }\n  }\n  /**\n   * Stores the given object and returns the refernce id instead\n   *\n   * @param {Object} obj to store\n   *\n   * @returns {Number} reference id of the stored object\n   */\n\n\n  put(obj) {\n    if (this._busyHandler && Object.keys(this._store).length === 0) {\n      this._busyHandler();\n    }\n\n    var id = this._genId();\n\n    this._store[id] = obj;\n    return id;\n  }\n  /**\n   * Retrieves previously stored object and releases its reference\n   *\n   * @param {Number} id of an object to retrieve\n   */\n\n\n  fetch(id) {\n    var obj = this._store[id];\n\n    if (obj && !obj.__remote_method) {\n      delete this._store[id];\n\n      this._releaseId(id);\n\n      if (this._readyHandler && Object.keys(this._store).length === 0) {\n        this._readyHandler();\n      }\n    }\n\n    if (obj && obj.__jailed_pairs__) {\n      const _id = getKeyByValue(this._store, obj.__jailed_pairs__);\n\n      this.fetch(_id);\n    }\n\n    return obj;\n  }\n  /**\n   * Retrieves previously stored object\n   *\n   * @param {Number} id of an object to retrieve\n   */\n  // retrieve(id) {\n  //     var obj = this._store[id];\n  //     return obj;\n  // }\n\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/rpc.js\n')},"./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: randId, dtypeToTypedArray, typedArrayToDtype, CONFIG_SCHEMA, compareVersions, cacheRequirements, setupServiceWorker, Whenable */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "randId", function() { return randId; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dtypeToTypedArray", function() { return dtypeToTypedArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "typedArrayToDtype", function() { return typedArrayToDtype; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONFIG_SCHEMA", function() { return CONFIG_SCHEMA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compareVersions", function() { return compareVersions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cacheRequirements", function() { return cacheRequirements; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setupServiceWorker", function() { return setupServiceWorker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Whenable", function() { return Whenable; });\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ajv */ "./node_modules/ajv/lib/ajv.js");\n/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_0__);\n\nconst ajv = new ajv__WEBPACK_IMPORTED_MODULE_0___default.a();\nfunction randId() {\n  return Math.random().toString(36).substr(2, 10);\n}\nconst dtypeToTypedArray = {\n  int8: "Int8Array",\n  int16: "Int16Array",\n  int32: "Int32Array",\n  uint8: "Uint8Array",\n  uint16: "Uint16Array",\n  uint32: "Uint32Array",\n  float32: "Float32Array",\n  float64: "Float64Array",\n  array: "Array"\n};\nconst typedArrayToDtype = {\n  Int8Array: "int8",\n  Int16Array: "int16",\n  Int32Array: "int32",\n  Uint8Array: "uint8",\n  Uint16Array: "uint16",\n  Uint32Array: "uint32",\n  Float32Array: "float32",\n  Float64Array: "float64",\n  Array: "array"\n};\nconst CONFIG_SCHEMA = ajv.compile({\n  properties: {\n    allow_execution: {\n      type: "boolean"\n    },\n    api_version: {\n      type: "string"\n    },\n    cover: {\n      type: ["string", "array"]\n    },\n    dedicated_thread: {\n      type: "boolean"\n    },\n    description: {\n      type: "string",\n      maxLength: 256\n    },\n    flags: {\n      type: "array"\n    },\n    icon: {\n      type: "string"\n    },\n    id: {\n      type: "string"\n    },\n    inputs: {\n      type: ["object", "array"]\n    },\n    labels: {\n      type: "array"\n    },\n    lang: {\n      type: "string"\n    },\n    name: {\n      type: "string"\n    },\n    outputs: {\n      type: ["object", "array"]\n    },\n    tags: {\n      type: "array"\n    },\n    token: {\n      type: "string"\n    },\n    ui: {\n      type: "string"\n    },\n    version: {\n      type: "string"\n    }\n  },\n  required: ["api_version", "allow_execution", "token", "id"]\n});\nfunction compareVersions(v1, comparator, v2) {\n  comparator = comparator == "=" ? "==" : comparator;\n\n  if (["==", "===", "<", "<=", ">", ">=", "!=", "!=="].indexOf(comparator) == -1) {\n    throw new Error("Invalid comparator. " + comparator);\n  }\n\n  var v1parts = v1.split("."),\n      v2parts = v2.split(".");\n  var maxLen = Math.max(v1parts.length, v2parts.length);\n  var part1, part2;\n  var cmp = 0;\n\n  for (var i = 0; i < maxLen && !cmp; i++) {\n    part1 = parseInt(v1parts[i], 10) || 0;\n    part2 = parseInt(v2parts[i], 10) || 0;\n    if (part1 < part2) cmp = 1;\n    if (part1 > part2) cmp = -1;\n  }\n\n  return eval("0" + comparator + cmp);\n}\n\nfunction cacheUrlInServiceWorker(url) {\n  return new Promise(function (resolve, reject) {\n    const message = {\n      command: "add",\n      url: url\n    };\n\n    if (!navigator.serviceWorker || !navigator.serviceWorker.register) {\n      reject("Service worker is not supported.");\n      return;\n    }\n\n    const messageChannel = new MessageChannel();\n\n    messageChannel.port1.onmessage = function (event) {\n      if (event.data && event.data.error) {\n        reject(event.data.error);\n      } else {\n        resolve(event.data && event.data.result);\n      }\n    };\n\n    if (navigator.serviceWorker && navigator.serviceWorker.controller) {\n      navigator.serviceWorker.controller.postMessage(message, [messageChannel.port2]);\n    } else {\n      reject("Service worker controller is not available");\n    }\n  });\n}\n\nasync function cacheRequirements(requirements) {\n  if (requirements && requirements.length > 0) {\n    for (let req of requirements) {\n      //remove prefix\n      if (req.startsWith("js:")) req = req.slice(3);\n      if (req.startsWith("css:")) req = req.slice(4);\n      if (req.startsWith("cache:")) req = req.slice(6);\n      if (!req.startsWith("http")) continue;\n      await cacheUrlInServiceWorker(req).catch(e => {\n        console.error(e);\n      });\n    }\n  }\n}\nfunction setupServiceWorker(targetOrigin, cacheCallback) {\n  // register service worker for offline access\n  if ("serviceWorker" in navigator) {\n    window.addEventListener("load", function () {\n      navigator.serviceWorker.register("/plugin-service-worker.js").then(function (registration) {\n        // Registration was successful\n        console.log("ServiceWorker registration successful with scope: ", registration.scope);\n      }, function (err) {\n        // registration failed :(\n        console.log("ServiceWorker registration failed: ", err);\n      });\n      targetOrigin = targetOrigin || "*";\n      cacheCallback = cacheCallback || cacheRequirements;\n\n      if (cacheCallback && typeof cacheCallback !== "function") {\n        throw new Error("config.cache_requirements must be a function");\n      }\n\n      window.addEventListener("message", function (e) {\n        if (targetOrigin === "*" || e.origin === targetOrigin) {\n          const m = e.data;\n\n          if (m.type === "cacheRequirements") {\n            cacheCallback(m.requirements);\n          }\n        }\n      });\n    });\n  }\n}\n/**\n * A special kind of event:\n *  - which can only be emitted once;\n *  - executes a set of subscribed handlers upon emission;\n *  - if a handler is subscribed after the event was emitted, it\n *    will be invoked immideately.\n *\n * Used for the events which only happen once (or do not happen at\n * all) during a single plugin lifecycle - connect, disconnect and\n * connection failure\n */\n\nconst Whenable = function (multi_emit) {\n  this._multi_emit = multi_emit;\n  this._emitted = false;\n  this._handlers = [];\n};\n/**\n * Emits the Whenable event, calls all the handlers already\n * subscribed, switches the object to the \'emitted\' state (when\n * all future subscibed listeners will be immideately issued\n * instead of being stored)\n */\n\nWhenable.prototype.emit = function (e) {\n  if (this._multi_emit) {\n    this._emitted = true;\n    this._e = e;\n\n    for (let handler of this._handlers) {\n      setTimeout(handler.bind(null, e), 0);\n    }\n  } else if (!this._emitted) {\n    this._emitted = true;\n    this._e = e;\n    var handler;\n\n    while (handler = this._handlers.pop()) {\n      setTimeout(handler.bind(null, e), 0);\n    }\n  }\n};\n/**\n * Saves the provided function as a handler for the Whenable\n * event. This handler will then be called upon the event emission\n * (if it has not been emitted yet), or will be scheduled for\n * immediate issue (if the event has already been emmitted before)\n *\n * @param {Function} handler to subscribe for the event\n */\n\n\nWhenable.prototype.whenEmitted = function (handler) {\n  handler = this._checkHandler(handler);\n\n  if (this._emitted) {\n    setTimeout(handler.bind(null, this._e), 0);\n  } else {\n    this._handlers.push(handler);\n  }\n};\n/**\n * Checks if the provided object is suitable for being subscribed\n * to the event (= is a function), throws an exception if not\n *\n * @param {Object} obj to check for being subscribable\n *\n * @throws {Exception} if object is not suitable for subscription\n *\n * @returns {Object} the provided object if yes\n */\n\n\nWhenable.prototype._checkHandler = function (handler) {\n  var type = typeof handler;\n\n  if (type !== "function") {\n    var msg = "A function may only be subsribed to the event, " + type + " was provided instead";\n    throw new Error(msg);\n  }\n\n  return handler;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbWpveVJQQy9zcmMvdXRpbHMuanM/YTMwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWp2IGZyb20gXCJhanZcIjtcbmNvbnN0IGFqdiA9IG5ldyBBanYoKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmRJZCgpIHtcbiAgcmV0dXJuIE1hdGgucmFuZG9tKClcbiAgICAudG9TdHJpbmcoMzYpXG4gICAgLnN1YnN0cigyLCAxMCk7XG59XG5cbmV4cG9ydCBjb25zdCBkdHlwZVRvVHlwZWRBcnJheSA9IHtcbiAgaW50ODogXCJJbnQ4QXJyYXlcIixcbiAgaW50MTY6IFwiSW50MTZBcnJheVwiLFxuICBpbnQzMjogXCJJbnQzMkFycmF5XCIsXG4gIHVpbnQ4OiBcIlVpbnQ4QXJyYXlcIixcbiAgdWludDE2OiBcIlVpbnQxNkFycmF5XCIsXG4gIHVpbnQzMjogXCJVaW50MzJBcnJheVwiLFxuICBmbG9hdDMyOiBcIkZsb2F0MzJBcnJheVwiLFxuICBmbG9hdDY0OiBcIkZsb2F0NjRBcnJheVwiLFxuICBhcnJheTogXCJBcnJheVwiXG59O1xuZXhwb3J0IGNvbnN0IHR5cGVkQXJyYXlUb0R0eXBlID0ge1xuICBJbnQ4QXJyYXk6IFwiaW50OFwiLFxuICBJbnQxNkFycmF5OiBcImludDE2XCIsXG4gIEludDMyQXJyYXk6IFwiaW50MzJcIixcbiAgVWludDhBcnJheTogXCJ1aW50OFwiLFxuICBVaW50MTZBcnJheTogXCJ1aW50MTZcIixcbiAgVWludDMyQXJyYXk6IFwidWludDMyXCIsXG4gIEZsb2F0MzJBcnJheTogXCJmbG9hdDMyXCIsXG4gIEZsb2F0NjRBcnJheTogXCJmbG9hdDY0XCIsXG4gIEFycmF5OiBcImFycmF5XCJcbn07XG5cbmV4cG9ydCBjb25zdCBDT05GSUdfU0NIRU1BID0gYWp2LmNvbXBpbGUoe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgYWxsb3dfZXhlY3V0aW9uOiB7IHR5cGU6IFwiYm9vbGVhblwiIH0sXG4gICAgYXBpX3ZlcnNpb246IHsgdHlwZTogXCJzdHJpbmdcIiB9LFxuICAgIGNvdmVyOiB7IHR5cGU6IFtcInN0cmluZ1wiLCBcImFycmF5XCJdIH0sXG4gICAgZGVkaWNhdGVkX3RocmVhZDogeyB0eXBlOiBcImJvb2xlYW5cIiB9LFxuICAgIGRlc2NyaXB0aW9uOiB7IHR5cGU6IFwic3RyaW5nXCIsIG1heExlbmd0aDogMjU2IH0sXG4gICAgZmxhZ3M6IHsgdHlwZTogXCJhcnJheVwiIH0sXG4gICAgaWNvbjogeyB0eXBlOiBcInN0cmluZ1wiIH0sXG4gICAgaWQ6IHsgdHlwZTogXCJzdHJpbmdcIiB9LFxuICAgIGlucHV0czogeyB0eXBlOiBbXCJvYmplY3RcIiwgXCJhcnJheVwiXSB9LFxuICAgIGxhYmVsczogeyB0eXBlOiBcImFycmF5XCIgfSxcbiAgICBsYW5nOiB7IHR5cGU6IFwic3RyaW5nXCIgfSxcbiAgICBuYW1lOiB7IHR5cGU6IFwic3RyaW5nXCIgfSxcbiAgICBvdXRwdXRzOiB7IHR5cGU6IFtcIm9iamVjdFwiLCBcImFycmF5XCJdIH0sXG4gICAgdGFnczogeyB0eXBlOiBcImFycmF5XCIgfSxcbiAgICB0b2tlbjogeyB0eXBlOiBcInN0cmluZ1wiIH0sXG4gICAgdWk6IHsgdHlwZTogXCJzdHJpbmdcIiB9LFxuICAgIHZlcnNpb246IHsgdHlwZTogXCJzdHJpbmdcIiB9XG4gIH0sXG4gIHJlcXVpcmVkOiBbXCJhcGlfdmVyc2lvblwiLCBcImFsbG93X2V4ZWN1dGlvblwiLCBcInRva2VuXCIsIFwiaWRcIl1cbn0pO1xuXG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVZlcnNpb25zKHYxLCBjb21wYXJhdG9yLCB2Mikge1xuICBjb21wYXJhdG9yID0gY29tcGFyYXRvciA9PSBcIj1cIiA/IFwiPT1cIiA6IGNvbXBhcmF0b3I7XG4gIGlmIChcbiAgICBbXCI9PVwiLCBcIj09PVwiLCBcIjxcIiwgXCI8PVwiLCBcIj5cIiwgXCI+PVwiLCBcIiE9XCIsIFwiIT09XCJdLmluZGV4T2YoY29tcGFyYXRvcikgPT0gLTFcbiAgKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjb21wYXJhdG9yLiBcIiArIGNvbXBhcmF0b3IpO1xuICB9XG4gIHZhciB2MXBhcnRzID0gdjEuc3BsaXQoXCIuXCIpLFxuICAgIHYycGFydHMgPSB2Mi5zcGxpdChcIi5cIik7XG4gIHZhciBtYXhMZW4gPSBNYXRoLm1heCh2MXBhcnRzLmxlbmd0aCwgdjJwYXJ0cy5sZW5ndGgpO1xuICB2YXIgcGFydDEsIHBhcnQyO1xuICB2YXIgY21wID0gMDtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBtYXhMZW4gJiYgIWNtcDsgaSsrKSB7XG4gICAgcGFydDEgPSBwYXJzZUludCh2MXBhcnRzW2ldLCAxMCkgfHwgMDtcbiAgICBwYXJ0MiA9IHBhcnNlSW50KHYycGFydHNbaV0sIDEwKSB8fCAwO1xuICAgIGlmIChwYXJ0MSA8IHBhcnQyKSBjbXAgPSAxO1xuICAgIGlmIChwYXJ0MSA+IHBhcnQyKSBjbXAgPSAtMTtcbiAgfVxuICByZXR1cm4gZXZhbChcIjBcIiArIGNvbXBhcmF0b3IgKyBjbXApO1xufVxuXG5mdW5jdGlvbiBjYWNoZVVybEluU2VydmljZVdvcmtlcih1cmwpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuICAgIGNvbnN0IG1lc3NhZ2UgPSB7XG4gICAgICBjb21tYW5kOiBcImFkZFwiLFxuICAgICAgdXJsOiB1cmxcbiAgICB9O1xuICAgIGlmICghbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIgfHwgIW5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKSB7XG4gICAgICByZWplY3QoXCJTZXJ2aWNlIHdvcmtlciBpcyBub3Qgc3VwcG9ydGVkLlwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgbWVzc2FnZUNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICBtZXNzYWdlQ2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgaWYgKGV2ZW50LmRhdGEgJiYgZXZlbnQuZGF0YS5lcnJvcikge1xuICAgICAgICByZWplY3QoZXZlbnQuZGF0YS5lcnJvcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXNvbHZlKGV2ZW50LmRhdGEgJiYgZXZlbnQuZGF0YS5yZXN1bHQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAobmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIgJiYgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlcikge1xuICAgICAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIuY29udHJvbGxlci5wb3N0TWVzc2FnZShtZXNzYWdlLCBbXG4gICAgICAgIG1lc3NhZ2VDaGFubmVsLnBvcnQyXG4gICAgICBdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVqZWN0KFwiU2VydmljZSB3b3JrZXIgY29udHJvbGxlciBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjYWNoZVJlcXVpcmVtZW50cyhyZXF1aXJlbWVudHMpIHtcbiAgaWYgKHJlcXVpcmVtZW50cyAmJiByZXF1aXJlbWVudHMubGVuZ3RoID4gMCkge1xuICAgIGZvciAobGV0IHJlcSBvZiByZXF1aXJlbWVudHMpIHtcbiAgICAgIC8vcmVtb3ZlIHByZWZpeFxuICAgICAgaWYgKHJlcS5zdGFydHNXaXRoKFwianM6XCIpKSByZXEgPSByZXEuc2xpY2UoMyk7XG4gICAgICBpZiAocmVxLnN0YXJ0c1dpdGgoXCJjc3M6XCIpKSByZXEgPSByZXEuc2xpY2UoNCk7XG4gICAgICBpZiAocmVxLnN0YXJ0c1dpdGgoXCJjYWNoZTpcIikpIHJlcSA9IHJlcS5zbGljZSg2KTtcbiAgICAgIGlmICghcmVxLnN0YXJ0c1dpdGgoXCJodHRwXCIpKSBjb250aW51ZTtcblxuICAgICAgYXdhaXQgY2FjaGVVcmxJblNlcnZpY2VXb3JrZXIocmVxKS5jYXRjaChlID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0dXBTZXJ2aWNlV29ya2VyKHRhcmdldE9yaWdpbiwgY2FjaGVDYWxsYmFjaykge1xuICAvLyByZWdpc3RlciBzZXJ2aWNlIHdvcmtlciBmb3Igb2ZmbGluZSBhY2Nlc3NcbiAgaWYgKFwic2VydmljZVdvcmtlclwiIGluIG5hdmlnYXRvcikge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBmdW5jdGlvbigpIHtcbiAgICAgIG5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLnJlZ2lzdGVyKFwiL3BsdWdpbi1zZXJ2aWNlLXdvcmtlci5qc1wiKS50aGVuKFxuICAgICAgICBmdW5jdGlvbihyZWdpc3RyYXRpb24pIHtcbiAgICAgICAgICAvLyBSZWdpc3RyYXRpb24gd2FzIHN1Y2Nlc3NmdWxcbiAgICAgICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgICAgIFwiU2VydmljZVdvcmtlciByZWdpc3RyYXRpb24gc3VjY2Vzc2Z1bCB3aXRoIHNjb3BlOiBcIixcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbi5zY29wZVxuICAgICAgICAgICk7XG4gICAgICAgIH0sXG4gICAgICAgIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIC8vIHJlZ2lzdHJhdGlvbiBmYWlsZWQgOihcbiAgICAgICAgICBjb25zb2xlLmxvZyhcIlNlcnZpY2VXb3JrZXIgcmVnaXN0cmF0aW9uIGZhaWxlZDogXCIsIGVycik7XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgICB0YXJnZXRPcmlnaW4gPSB0YXJnZXRPcmlnaW4gfHwgXCIqXCI7XG4gICAgICBjYWNoZUNhbGxiYWNrID0gY2FjaGVDYWxsYmFjayB8fCBjYWNoZVJlcXVpcmVtZW50cztcbiAgICAgIGlmIChjYWNoZUNhbGxiYWNrICYmIHR5cGVvZiBjYWNoZUNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiY29uZmlnLmNhY2hlX3JlcXVpcmVtZW50cyBtdXN0IGJlIGEgZnVuY3Rpb25cIik7XG4gICAgICB9XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgZnVuY3Rpb24oZSkge1xuICAgICAgICBpZiAodGFyZ2V0T3JpZ2luID09PSBcIipcIiB8fCBlLm9yaWdpbiA9PT0gdGFyZ2V0T3JpZ2luKSB7XG4gICAgICAgICAgY29uc3QgbSA9IGUuZGF0YTtcbiAgICAgICAgICBpZiAobS50eXBlID09PSBcImNhY2hlUmVxdWlyZW1lbnRzXCIpIHtcbiAgICAgICAgICAgIGNhY2hlQ2FsbGJhY2sobS5yZXF1aXJlbWVudHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn1cblxuLyoqXG4gKiBBIHNwZWNpYWwga2luZCBvZiBldmVudDpcbiAqICAtIHdoaWNoIGNhbiBvbmx5IGJlIGVtaXR0ZWQgb25jZTtcbiAqICAtIGV4ZWN1dGVzIGEgc2V0IG9mIHN1YnNjcmliZWQgaGFuZGxlcnMgdXBvbiBlbWlzc2lvbjtcbiAqICAtIGlmIGEgaGFuZGxlciBpcyBzdWJzY3JpYmVkIGFmdGVyIHRoZSBldmVudCB3YXMgZW1pdHRlZCwgaXRcbiAqICAgIHdpbGwgYmUgaW52b2tlZCBpbW1pZGVhdGVseS5cbiAqXG4gKiBVc2VkIGZvciB0aGUgZXZlbnRzIHdoaWNoIG9ubHkgaGFwcGVuIG9uY2UgKG9yIGRvIG5vdCBoYXBwZW4gYXRcbiAqIGFsbCkgZHVyaW5nIGEgc2luZ2xlIHBsdWdpbiBsaWZlY3ljbGUgLSBjb25uZWN0LCBkaXNjb25uZWN0IGFuZFxuICogY29ubmVjdGlvbiBmYWlsdXJlXG4gKi9cbmV4cG9ydCBjb25zdCBXaGVuYWJsZSA9IGZ1bmN0aW9uKG11bHRpX2VtaXQpIHtcbiAgdGhpcy5fbXVsdGlfZW1pdCA9IG11bHRpX2VtaXQ7XG4gIHRoaXMuX2VtaXR0ZWQgPSBmYWxzZTtcbiAgdGhpcy5faGFuZGxlcnMgPSBbXTtcbn07XG5cbi8qKlxuICogRW1pdHMgdGhlIFdoZW5hYmxlIGV2ZW50LCBjYWxscyBhbGwgdGhlIGhhbmRsZXJzIGFscmVhZHlcbiAqIHN1YnNjcmliZWQsIHN3aXRjaGVzIHRoZSBvYmplY3QgdG8gdGhlICdlbWl0dGVkJyBzdGF0ZSAod2hlblxuICogYWxsIGZ1dHVyZSBzdWJzY2liZWQgbGlzdGVuZXJzIHdpbGwgYmUgaW1taWRlYXRlbHkgaXNzdWVkXG4gKiBpbnN0ZWFkIG9mIGJlaW5nIHN0b3JlZClcbiAqL1xuV2hlbmFibGUucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbihlKSB7XG4gIGlmICh0aGlzLl9tdWx0aV9lbWl0KSB7XG4gICAgdGhpcy5fZW1pdHRlZCA9IHRydWU7XG4gICAgdGhpcy5fZSA9IGU7XG4gICAgZm9yIChsZXQgaGFuZGxlciBvZiB0aGlzLl9oYW5kbGVycykge1xuICAgICAgc2V0VGltZW91dChoYW5kbGVyLmJpbmQobnVsbCwgZSksIDApO1xuICAgIH1cbiAgfSBlbHNlIGlmICghdGhpcy5fZW1pdHRlZCkge1xuICAgIHRoaXMuX2VtaXR0ZWQgPSB0cnVlO1xuICAgIHRoaXMuX2UgPSBlO1xuICAgIHZhciBoYW5kbGVyO1xuICAgIHdoaWxlICgoaGFuZGxlciA9IHRoaXMuX2hhbmRsZXJzLnBvcCgpKSkge1xuICAgICAgc2V0VGltZW91dChoYW5kbGVyLmJpbmQobnVsbCwgZSksIDApO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBTYXZlcyB0aGUgcHJvdmlkZWQgZnVuY3Rpb24gYXMgYSBoYW5kbGVyIGZvciB0aGUgV2hlbmFibGVcbiAqIGV2ZW50LiBUaGlzIGhhbmRsZXIgd2lsbCB0aGVuIGJlIGNhbGxlZCB1cG9uIHRoZSBldmVudCBlbWlzc2lvblxuICogKGlmIGl0IGhhcyBub3QgYmVlbiBlbWl0dGVkIHlldCksIG9yIHdpbGwgYmUgc2NoZWR1bGVkIGZvclxuICogaW1tZWRpYXRlIGlzc3VlIChpZiB0aGUgZXZlbnQgaGFzIGFscmVhZHkgYmVlbiBlbW1pdHRlZCBiZWZvcmUpXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciB0byBzdWJzY3JpYmUgZm9yIHRoZSBldmVudFxuICovXG5XaGVuYWJsZS5wcm90b3R5cGUud2hlbkVtaXR0ZWQgPSBmdW5jdGlvbihoYW5kbGVyKSB7XG4gIGhhbmRsZXIgPSB0aGlzLl9jaGVja0hhbmRsZXIoaGFuZGxlcik7XG4gIGlmICh0aGlzLl9lbWl0dGVkKSB7XG4gICAgc2V0VGltZW91dChoYW5kbGVyLmJpbmQobnVsbCwgdGhpcy5fZSksIDApO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuX2hhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gIH1cbn07XG5cbi8qKlxuICogQ2hlY2tzIGlmIHRoZSBwcm92aWRlZCBvYmplY3QgaXMgc3VpdGFibGUgZm9yIGJlaW5nIHN1YnNjcmliZWRcbiAqIHRvIHRoZSBldmVudCAoPSBpcyBhIGZ1bmN0aW9uKSwgdGhyb3dzIGFuIGV4Y2VwdGlvbiBpZiBub3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIHRvIGNoZWNrIGZvciBiZWluZyBzdWJzY3JpYmFibGVcbiAqXG4gKiBAdGhyb3dzIHtFeGNlcHRpb259IGlmIG9iamVjdCBpcyBub3Qgc3VpdGFibGUgZm9yIHN1YnNjcmlwdGlvblxuICpcbiAqIEByZXR1cm5zIHtPYmplY3R9IHRoZSBwcm92aWRlZCBvYmplY3QgaWYgeWVzXG4gKi9cbldoZW5hYmxlLnByb3RvdHlwZS5fY2hlY2tIYW5kbGVyID0gZnVuY3Rpb24oaGFuZGxlcikge1xuICB2YXIgdHlwZSA9IHR5cGVvZiBoYW5kbGVyO1xuICBpZiAodHlwZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIG1zZyA9XG4gICAgICBcIkEgZnVuY3Rpb24gbWF5IG9ubHkgYmUgc3Vic3JpYmVkIHRvIHRoZSBldmVudCwgXCIgK1xuICAgICAgdHlwZSArXG4gICAgICBcIiB3YXMgcHJvdmlkZWQgaW5zdGVhZFwiO1xuICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICB9XG5cbiAgcmV0dXJuIGhhbmRsZXI7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBWUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBakJBO0FBbUJBO0FBcEJBO0FBdUJBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFJQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7OztBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7OztBQVVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils.js\n')}})},function(c,n,t){"use strict";t.r(n),t.d(n,"Joy",(function(){return Z})),t.d(n,"ajv",(function(){return H})),t.d(n,"utils",(function(){return oc})),t.d(n,"version",(function(){return Xc.a})),t.d(n,"imjoyRPC",(function(){return _})),t.d(n,"ImJoy",(function(){return sc}));var e=t(10),l=t(8),g=t.n(l),I=t(6),a=t.n(I),d=t(9),i=t.n(d),C=t(48),F=t.n(C),r=t(21),X=t.n(r),o=t(18),s=t.n(o);function Z(c){var n=this==window?{}:this;if(c.modules)for(var t=0;t<c.modules.length;t++)Z.loadModule(c.modules[t]);return Z.Op.call(n,c),Z.initReferences(n),null==n.previewOps&&(n.previewOps=!1),null==n.previewNumbers&&(n.previewNumbers=!1),n.activePreview=null,n.canPreview=function(c){return c=c.charAt(0).toUpperCase()+c.slice(1),n["preview"+c]&&!n.activePreview},n.createWidget(),n.container&&("string"==typeof n.container&&(n.container=document.body.querySelector(n.container)),n.container.appendChild(n.dom)),Z.ui.init(n),Z.modal.init(n),n}Z.normalizeUI=function(c){if(!c)return"";let n="";if(Array.isArray(c))for(let t of c)if("string"==typeof t)n=n+t+"<br>";else if("object"==typeof t)for(let c in t)n="string"==typeof t[c]?n+c+": "+t[c]+"<br>":n+c+": "+JSON.stringify(t[c])+"<br>";else n=n+JSON.stringify(t)+"<br>";else{if("object"==typeof c)throw"ui can not be an object, you can only use a string or an array.";"string"==typeof c?n=c.trim():(n="",console.log("Warning: removing ui string."))}return n},Z.Op=function(c,n,t){var e=this;if(e._class_="Op",e.options=c,e.parent=n,e.top=e.parent?e.parent.top:e,e.type=c.type,e.type){var l=Z.getTemplateByType(e.type);V(e,l)}if(V(e,e.options),n&&"object"==typeof n.onupdate&&n.onupdate[e.id]&&(e.onupdate=n.onupdate[e.id]),e.children=[],e.addChild=function(c,n){return"object"==typeof e.onupdate&&e.onupdate[c.id]&&(c.onupdate=e.onupdate[c.id]),"Op"!=c._class_&&(c=new Z.Op(c,e,n)),e.children.push(c),c.id&&(e[c.id]=c),c},e.removeChild=function(c){A(e.children,c),c.kill()},e.onkill=e.onkill||function(){},e.kill=function(){for(e.dom&&e.dom.parentNode&&e.dom.parentNode.removeChild(e.dom);e.children.length>0;)e.removeChild(e.children[0]);e.onkill(e)},void 0===e.placeholder&&(e.placeholder={}),"function"==typeof e.placeholder&&(e.placeholder=e.placeholder()),("object"!=typeof e.placeholder||Array.isArray(e.placeholder))&&(e.placeholder={value:B(e.placeholder)}),e.placeholder.type||(e.placeholder.type=e.type),e.data=e.data||t,!e.data){n=e.parent;var g=e.dataID;n&&g?(n.data[g]||(n.data[g]=B(e.placeholder)),e.data=n.data[g]):e.data=B(e.placeholder)}e.getData=function(c){return e.data[c]},e.setData=function(c,n,t){void 0===n?delete e.data[c]:e.data[c]=n,t||e.update()},e.dom=null,e.initWidget=e.initWidget||function(){e.dom=document.createElement("span"),e.dom.innerHTML="[todo: define ui for '"+e.type+"']"},e.createWidget=function(){return e.initWidget(e),e.dom},e.previewData=null,e.onexecute=e.onexecute||function(){console.log("no execute function found.")},e.execute=async function(c,n){var t;return t=n?B(n):e.previewData?B(e.previewData):B(e.data),e.children.forEach((function(n){var e=n.dataID;if(e){var l=n.get(c);t[e]=l}})),await e.onexecute({op:e,target:c,data:t})},e.update=function(){if(e.parent&&e.parent.update(),e.onupdate&&"function"==typeof e.onupdate){var c;c=e.previewData?B(e.previewData):B(e.data),e.children.forEach((function(n){var t=n.dataID;if(t){var e=n.get({});c[t]=e}}));e.onupdate({data:c})}},e.get_config=function(c){var n;return c=c||{},n=e.previewData?B(e.previewData):B(e.data),e.children.forEach((function(t){var e=t.dataID;if(e&&c){var l=t.get(c);n[e]=l}})),n},e.onget=e.onget||function(c){return c.data},e.get=function(c){var n=e.previewData?e.previewData:e.data;return n=B(n),e.onget({op:e,target:c,data:n})},e.init&&("string"==typeof e.init&&Z.initializeWithString(e,e.init),"function"==typeof e.init&&e.init(e))},Z.templates=[],Z.add=function(c){var n=Z.templates.filter((function(n){return void 0!==n.type&&void 0!==c.type&&n.type===c.type}));if(n.length<=0)Z.templates.push(c);else{for(var t=0;t<n.length;t++)A(Z.templates,n[t]);Z.templates.push(c)}},Z.remove=function(c){var n=Z.templates.filter((function(n){if(n.type===c)return!0}));if(n.length>0)for(var t=0;t<n.length;t++)A(Z.templates,n[t])},Z.reset=function(){Z.templates=[]},Z.getTemplateByType=function(c){var n=Z.templates.find((function(n){return n.type===c}));if(!n)throw Error("No op template of type '"+c+"'!");return n},Z.getTemplatesByTag=function(c){return Z.templates.filter((function(n){return n.tags&&n.tags.indexOf(c)>=0}))},Z.modify=function(){var c,n,t;2==arguments.length?(c=arguments[0],t=arguments[1]):(c=arguments[0],n=arguments[1],t=arguments[2]);var e={},l=Z.getTemplateByType(c);V(e,l);var g=t(l);V(e,g),n?l.type=n:A(Z.templates,l),Z.add(e)},Z.initializeWithString=function(c,n){try{n=X.a.sanitize(n)}catch(c){console.log("Failed to sanitize the ui string",c)}for(var t=[],e=n,l=-1,g=-1,I=0,a=0;a<e.length;a++){var d=e[a];if(0==I&&"{"==d&&(l=a),"{"==d&&I++,"}"==d&&I--,0==I&&"}"==d){g=a+1;var i=e.slice(l,g);i=(i=i.replace(/(\w+)\:/g,"'$1':")).replace(/\'/g,'"'),(i=JSON.parse(i)).dataID=i.dataID||i.id,t.push(i),e=e.substr(0,l)+"<span id='widget_"+i.id+"'></span>"+e.substr(g),a=0,l=-1,g=-1,I=0}}t.forEach((function(n){c.addChild(n)})),c.createWidget=function(){return c.dom=document.createElement("span"),c.dom.innerHTML=e,c.children.forEach((function(n){n.createWidget();var t="#widget_"+n.id,e=c.dom.querySelector(t);c.dom.replaceChild(n.dom,e)})),c.dom}},Z.modules={},Z.module=function(c,n){Z.modules[c]=n},Z.loadModule=function(c){var n=Z.modules[c];if(!n)throw Error("There's no module called '"+c+"'!");n()},Z.initReferences=function(c){var n=c.top.data;for(var t in n._references||(n._references={}),n._references){n._references[t].connected=0}},Z.createReference=function(c,n,t){var e=c.top.data,l={id:Q(e._references),tags:u(n),data:t,connected:0};return e._references[l.id]=l,l},Z.getReferenceById=function(c,n){return c.top.data._references[n]},Z.getReferencesByTag=function(c,n){var t=c.top.data,e=[];for(var l in t._references){var g=t._references[l];g.tags.indexOf(n)>=0&&e.push(g)}return e},Z.connectReference=function(c,n){Z.getReferenceById(c,n).connected++},Z.disconnectReference=function(c,n){var t=Z.getReferenceById(c,n);t.connected--,0==t.connected&&Z.deleteReference(c,n)},Z.deleteReference=function(c,n){var t=c.top.data;t._references[n];delete t._references[n]},Z.encodeWorkflow=function(c){var n=JSON.stringify(c);return s.a.compressToEncodedURIComponent(n)},Z.decodeWorkflow=function(c){var n=s.a.decompressFromEncodedURIComponent(c);return n?JSON.parse(n):null},Z.saveToURL=function(c){var n=JSON.stringify(c),t=s.a.compressToEncodedURIComponent(n);return window.location.origin+window.location.pathname+"#/app?workflow="+t},Z.loadFromURL=function(){var c=W("workflow"),n=s.a.decompressFromEncodedURIComponent(c);return n?JSON.parse(n):null},Math.TAU=2*Math.PI;var B=function(c){return JSON.parse(JSON.stringify(c))},V=function(c,n){for(var t in n){var e=n[t];c[t]=e}},A=function(c,n){var t=c.indexOf(n);return!(t<0)&&(c.splice(t,1),!0)},G=function(c){c.addEventListener("paste",(function(c){if(c.preventDefault(),c.clipboardData&&c.clipboardData.getData){var n=c.clipboardData.getData("text/plain");document.execCommand("insertHTML",!1,n)}else if(window.clipboardData&&window.clipboardData.getData){!function(c){var n,t;window.getSelection?(n=window.getSelection()).getRangeAt&&n.rangeCount&&((t=n.getRangeAt(0)).deleteContents(),t.insertNode(document.createTextNode(c))):document.selection&&document.selection.createRange&&(document.selection.createRange().text=c)}(n=window.clipboardData.getData("Text"))}}))},b=function(c,n){var t=document.createRange();t.selectNodeContents(c),n&&t.collapse(!1);var e=window.getSelection();e.removeAllRanges();try{e.addRange(t)}catch(c){}},h=function(){window.getSelection().removeAllRanges()},U=function(c){""==c.innerText&&(c.innerHTML="&nbsp;",b(c)),c.innerHTML.search("<br>")>=0&&(c.innerHTML=c.innerHTML.replace(/(\<br\>)+/g,"&nbsp;"),b(c,!0))},Q=function(c){var n,t=0;do{n="id"+t,t++}while(c[n]);return n},u=function(c){return Array.isArray(c)?c:[c]},W=function(c,n){n||(n=window.location.href),c=c.replace(/[\[\]]/g,"\\$&");var t=new RegExp("[?&]"+c+"(=([^&#]*)|&|#|$)").exec(n);return t?t[2]?decodeURIComponent(t[2].replace(/\+/g," ")):"":null};function m(c,n,t){var e,l,g,I,a,d,i,C;switch(1===arguments.length&&(n=c.s,t=c.v,c=c.h),d=t*(1-n),i=t*(1-(a=6*(c/=360)-(I=Math.floor(6*c)))*n),C=t*(1-(1-a)*n),I%6){case 0:e=t,l=C,g=d;break;case 1:e=i,l=t,g=d;break;case 2:e=d,l=t,g=C;break;case 3:e=d,l=i,g=t;break;case 4:e=C,l=d,g=t;break;case 5:e=t,l=d,g=i}return[Math.round(255*e),Math.round(255*l),Math.round(255*g)]}function R(c,n,t){1===arguments.length&&(n=c[1],t=c[2],c=c[0]);var e=m(c,n,t);return"rgb("+e[0]+","+e[1]+","+e[2]+")"}var J,p,x=0,N=[[0,.6,1],[30,.8,1],[210,.8,1],[260,.7,1],[310,.6,1]];J={},Z.ui=J,J.init=function(c){c.dom.classList.add("joy-master"),c.container.addEventListener("wheel",(function(n){var t=n.deltaY;return c.container.scrollTop+=t,!1}))},J.Button=function(c){var n=this,t=document.createElement("div");t.className="joy-button",n.dom=t,c.label=c.label||"",n.label=document.createElement("span"),t.appendChild(n.label),n.setLabel=function(c){n.label.innerHTML=c},n.setLabel(c.label),t.onclick=function(){c.onclick()},n.styles=c.styles||[];for(var e=0;e<n.styles.length;e++)t.classList.add(n.styles[e])},J.ChooserButton=function(c){var n=this;n.value=c.value,n.options=c.options,n.onchange=c.onchange,n.value||(n.value=n.options[0].value),J.Button.call(n,{label:void 0===c.staticLabel?"":c.staticLabel,onclick:function(){Z.modal.Chooser({source:n.dom,options:n.options,onchange:function(c){n.value=c,t(),n.onchange(c)},position:c.position})},styles:c.styles});var t=function(){if(void 0===c.staticLabel){var t=n.options.find((function(c){return c.value==n.value})).label;n.setLabel(t)}};t()},J.Scrubber=function(c){var n=this,t=c.min,e=c.max;n.value=c.value;var l=document.createElement("div");l.className="joy-scrubber",n.dom=l,n.setLabel=function(c){l.innerHTML=c.toFixed(n.sigfigs)};var g,I,a=function(t){t=parseFloat(t.toFixed(n.sigfigs)),c.onchange(t)},d=!1,i=!1,C=0,F=function(t){d=!0,g=t.clientX,I=n.value,C=0,c.onstart&&c.onstart()},r=function(c){if(d){i=!0;var t=Math.pow(.1,n.sigfigs);t=parseFloat(t.toPrecision(1));var e=c.clientX-g;g=c.clientX;var l=Math.abs(e/10);l<1&&(l=1),l>3&&(l=3),C+=e*l;var F=Math.floor(C/2),r=I+F*t;r=X(r),n.value!=r&&(n.value=r,n.setLabel(r),a(r))}},X=function(c){return void 0!==t&&c<t&&(c=t),void 0!==e&&c>e&&(c=e),c},o=function(){d=!1,c.onstop&&c.onstop(),setTimeout((function(){i=!1}),1)};l.addEventListener("mousedown",F),window.addEventListener("mousemove",r),window.addEventListener("mouseup",o),n.kill=function(){l.removeEventListener("mousedown",F),window.removeEventListener("mousemove",r),window.removeEventListener("mouseup",o)};var s,Z=!1;l.onblur=function(){Z&&(Z=!1,l.contentEditable=!1,h(),V(l.innerText),n.value=B(),n.setLabel(n.value),a(n.value),c.onstop&&c.onstop())},G(l),(s=l).addEventListener("keypress",(function(c){13===c.which&&(c.preventDefault(),s.blur())})),l.onclick=function(){i||(Z=!0,l.contentEditable=!0,l.spellcheck=!1,b(l),c.onstart&&c.onstart())},l.oninput=function(c){if(Z){var n=/[^0-9.\-]/g;l.innerText.match(n)&&(l.innerText=l.innerText.replace(n,"")),U(l),a(B())}};var B=function(){var c=parseFloat(l.innerText);return isNaN(c)&&(c=0),c=X(c)};n.sigfigs=0;var V=function(c){var t,e=(c=c.toString()).search(/\./);t=e>=0?c.length-1-e:0,n.sigfigs=t};V(n.value),n.setLabel(n.value)},J.String=function(c){var n=document.createElement("div");n.className="joy-string",this.dom=n;var t=document.createElement("span");t.contentEditable=!0,t.spellcheck=!1;var e=document.createElement("span"),l=document.createElement("span");e.innerHTML=c.prefix||"",l.innerHTML=c.suffix||"",n.appendChild(e),n.appendChild(t),n.appendChild(l),t.oninput=function(n){U(t);var e=t.innerText;c.onchange(e)},t.onfocus=function(){b(t)},t.onblur=function(){h()},G(t),t.onkeypress=function(c){return 13!=c.which||(t.blur(),!1)},this.setString=function(c){t.innerText=c,U(t)},this.setColor=function(c){c=function(c){return Array.isArray(c)&&(c=R(c[0],c[1],c[2])),c}(c),n.style.color=c,n.style.borderColor=c},c.color&&this.setColor(c.color),this.styles=c.styles||[];for(var g=0;g<this.styles.length;g++)n.classList.add(this.styles[g]);this.setString(c.value)},J.TextBox=function(c){var n,t=this;c.multiline?n=document.createElement("textarea"):(n=document.createElement("input")).type="text",c.placeholder&&(n.placeholder=c.placeholder),n.spellcheck=!1,n.className="joy-textbox",t.dom=n;var e=t.dom;c.readonly?(n.setAttribute("readonly",1),n.addEventListener("click",(function(){t.select()}))):n.oninput=function(t){c.onchange(n.value)},c.width&&(n.style.width="number"==typeof c.width?c.width+"px":c.width),t.getValue=function(){return n.value},t.setValue=function(c){n.value=c},t.select=function(){n.select()},t.styles=c.styles||[];for(var l=0;l<t.styles.length;l++)e.classList.add(t.styles[l]);c.value&&t.setValue(c.value),c.multiline&&(e.addEventListener("input",(function(){this.style.height="auto",this.style.height=this.scrollHeight+"px"}),!1),setTimeout((function(){e.setAttribute("style","height:"+e.scrollHeight+"px; overflow-y:hidden;")}),1))},p={},Z.modal=p,p.init=function(c){for(var n=document.querySelectorAll("#joy-modal"),t=0;t<n.length;t++)n[t].parentNode.removeChild(n[t]);p.dom=document.createElement("div"),p.dom.id="joy-modal",document.body.appendChild(p.dom),p.bg=document.createElement("div"),p.bg.id="joy-bg",p.bg.onclick=function(){p.currentUI.kill()},p.dom.appendChild(p.bg),p.box=document.createElement("div"),p.box.id="joy-box",p.box.className="arrow_box",p.dom.appendChild(p.box),p.dom.addEventListener("wheel",(function(c){return"auto"==p.box.style.overflow||(c.preventDefault(),!1)}))},p.show=function(c){p.dom.style.display="block",p.currentUI=c,p.box.appendChild(c.dom);var n=c.config.position||"below",t=p.box.getBoundingClientRect(),e=c.config.source.getBoundingClientRect(),l=p.bg.getBoundingClientRect();switch("below"==n&&(I=e.top+e.height+20)+t.height>document.body.clientHeight&&(n="left"),p.box.setAttribute("position",n),n){case"below":var g=e.left+e.width/2,I=e.top+e.height+20;g-=t.width/2;break;case"left":g=e.left-20,I=e.top+e.height/2,g-=t.width,I-=t.height/2}g<0&&(g=1),I+t.height>l.height&&(I=l.height-t.height-1),p.box.style.left=g+"px",p.box.style.top=I+"px",p.currentUI.config.onopen&&p.currentUI.config.onopen()},p.hide=function(){!function(c){for(;c.hasChildNodes();)c.removeChild(c.lastChild)}(p.box),p.dom.style.display="none",p.currentUI.config.onclose&&p.currentUI.config.onclose()},p.Chooser=function(c){var n={};n.config=c;var t=document.createElement("div");t.className="joy-modal-chooser",n.dom=t;var e=document.createElement("div");t.appendChild(e),n.options=[],n.categories={};var l=function(c){var t=document.createElement("div");e.appendChild(t),n.categories[c]=t};n.populate=function(){for(var t=0;t<c.options.length;t++)(I=(e=c.options[t]).category)?n.categories[I]||l(I):n.categories._placeholder_||l("_placeholder_");for(t=0;t<c.options.length;t++){var e=c.options[t],g=document.createElement("div");g.innerHTML=e.label,e.color&&(g.style.color=e.color);var I=e.category||"_placeholder_";n.categories[I].appendChild(g),function(c){g.onclick=function(t){n.onchange(c.value),t.stopPropagation()}}(e)}},n.populate(),n.onchange=function(t){n.kill(),c.onchange(t)},n.kill=function(){p.hide()},p.show(n)},p.Color=function(c){var n={};n.config=c;var t=document.createElement("div");t.className="joy-modal-color",n.dom=t,c.value=c.value||[0,1,1],n.h=c.value[0],n.s=c.value[1],n.v=c.value[2],n.dom.style.width="195px",n.dom.style.height="170px";var e=document.createElement("canvas");e.id="joy-color-wheel";var l=e.getContext("2d");e.width=300,e.height=300,e.style.width=e.width/2+"px",e.style.height=e.height/2+"px",t.appendChild(e),e.style.top="10px",e.style.left="10px";var g=function(){var c=l;c.clearRect(0,0,c.canvas.width,c.canvas.height);for(var t=e.width,g=e.height,I=c.createImageData(t,g),a=I.data,d=t/2,i=g/2,C=t/2,F=C+2,r=0;r<t;r++)for(var X=0;X<g;X++){var o=r-d,s=X-i,Z=Math.sqrt(o*o+s*s);if(Z<F){Z>=C&&(Z=C);var B=Math.atan2(s,o),V=m(B=360*(B/Math.TAU+.5),Z/=C,n.v),A=4*(r+X*t);a[A]=V[0],a[A+1]=V[1],a[A+2]=V[2],a[A+3]=255}}c.putImageData(I,0,0),c.save(),c.globalCompositeOperation="destination-in",c.beginPath(),c.fillStyle="#fff",c.arc(d,i,C,0,Math.TAU),c.fill(),c.restore()};g();var I=document.createElement("canvas");I.id="joy-color-value";var a=I.getContext("2d");I.width=30,I.height=300,I.style.width=I.width/2+"px",I.style.height=I.height/2+"px",t.appendChild(I),I.style.top="10px",I.style.right="10px";var d=function(){var c=a;c.clearRect(0,0,c.canvas.width,c.canvas.height);for(var t=I.width,e=I.height,l=c.createImageData(t,e),g=l.data,d=0;d<t;d++)for(var i=0;i<e;i++){var C=m(n.h,n.s,1-i/e),F=4*(d+i*t);g[F]=C[0],g[F+1]=C[1],g[F+2]=C[2],g[F+3]=255}c.putImageData(l,0,0)};d();var i=document.createElement("canvas");i.id="joy-color-picker";var C=i.getContext("2d");i.width=390,i.height=340,i.style.width=i.width/2+"px",i.style.height=i.height/2+"px",t.appendChild(i);var F,r=function(){var c,t,l=C;l.clearRect(0,0,l.canvas.width,l.canvas.height),l.fillStyle=R(n.h,n.s,n.v),l.strokeStyle="#fff",l.lineWidth=2;var g=20+e.width/2,a=20+e.height/2,d=n.h*(Math.TAU/360),i=n.s*(e.width/2);c=g-Math.cos(d)*i,t=a-Math.sin(d)*i,l.beginPath(),l.arc(c,t,15,0,Math.TAU),l.fill(),l.stroke(),c=20+e.width+20+I.width/2,t=20+I.height*(1-n.v),l.beginPath(),l.arc(c,t,15,0,Math.TAU),l.fill(),l.stroke()};r();var X=!1,o=function(c){if(c.target==i){var n=2*c.offsetX,t=2*c.offsetY;"hs"==F?s(n-=20,t-=20):(n-=20+e.width+20,Z(n,t-=20)),G()}},s=function(c,t){var l=e.width/2,g=c-l,I=t-l,a=Math.atan2(I,g),i=Math.sqrt(g*g+I*I);(a=360*(a/Math.TAU+.5))<0&&(a=0),a>360&&(a=360),(i/=l)<0&&(i=0),i>1&&(i=1),n.h=a,n.s=i,d(),r()},Z=function(c,t){n.v=1-t/I.height,n.v<0&&(n.v=0),n.v>1&&(n.v=1),g(),r()},B=function(c){X=!0,F=2*c.offsetX<20+e.width+10?"hs":"v",o(c)},V=function(c){X&&o(c)},A=function(){X=!1};i.addEventListener("mousedown",B),window.addEventListener("mousemove",V),window.addEventListener("mouseup",A);var G=function(){var t=[n.h,n.s,n.v];t[0]=parseFloat(t[0].toFixed(0)),t[1]=parseFloat(t[1].toFixed(2)),t[2]=parseFloat(t[2].toFixed(2)),c.onchange(t)};n.kill=function(){t.removeEventListener("mousedown",B),window.removeEventListener("mousemove",V),window.removeEventListener("mouseup",A),p.hide()},p.show(n)},Z.add({type:"number",tags:["ui"],initWidget:function(c){var n=c.options,t=new Z.ui.Scrubber({min:n.min,max:n.max,step:n.step,value:c.getData("value"),onstart:function(){c.top.activePreview=c},onstop:function(){c.top.activePreview=null},onchange:function(n){c.setData("value",n)}});c.dom=t.dom;var e=null;c.dom.onmouseenter=function(){if(c.top.canPreview("numbers")){c.previewData=B(c.data);var n=Math.abs(.05*c.data.value);0==n&&(n=1);var t=0;e=setInterval((function(){if(!c.top.canPreview("numbers"))return l();t+=Math.TAU/30/.25,c.previewData.value=c.data.value+Math.sin(t)*n,c.update(),t>Math.TAU&&l()}),1e3/30)}};var l=function(){e&&clearInterval(e),c.previewData=null};c.dom.onmouseleave=l},onget:function(c){return c.data.value},placeholder:{value:3}}),Z.add({type:"button",tags:["ui"],initWidget:function(c){var n=document.createElement("div");n.className="joy-save",c.dom=n,c.saveButton=new Z.ui.Button({label:c.options.label||"--",onclick:function(){c.update()}}),n.appendChild(c.saveButton.dom)}}),Z.add({type:"color",tags:["ui"],initWidget:function(c){var n=new Z.ui.Button({label:"&nbsp;",onclick:function(){Z.modal.Color({source:c.dom,value:c.getData("value"),onchange:function(n){c.setData("value",n),t()},onopen:function(){c.top.activePreview=c},onclose:function(){c.top.activePreview=null}})},styles:["joy-color"]});c.dom=n.dom;var t=function(){var t=c.getData("value");n.dom.style.background=R(t)};t();var e,l,g=null;c.dom.onmouseenter=function(){c.top.canPreview("numbers")&&(c.data.value[2],c.previewData=B(c.data),l=0,e=2/30*2,g=setInterval((function(){if(!c.top.canPreview("numbers"))return I();var n=c.previewData.value;n[2]+=e,n[2]>1&&(n[2]=1,e*=-1),n[2]<0&&(n[2]=0,e*=-1),c.update(),(l+=2/30)>=1&&I()}),1e3/30))};var I=function(){g&&clearInterval(g),c.previewData=null,c.update()};c.dom.onmouseleave=I},onget:function(c){return R(c.data.value)},placeholder:function(){return[Math.floor(360*Math.random()),.8,1]}}),Z.add({type:"choose",tags:["ui"],initWidget:function(c){for(var n=c.data,t=c.options,e=0;e<t.length;e++){var l=t[e];void 0!==l.label&&void 0!==l.value||(t[e]={label:l.toString(),value:l})}var g=new Z.ui.ChooserButton({value:n.value,options:t,onchange:function(t){n.value=t,c.update()},styles:c.styles});c.dom=g.dom},onget:function(c){return c.data.value}}),Z.add({type:"string",tags:["ui"],initWidget:function(c){var n=c.options;c.stringUI=new Z.ui.String({prefix:n.prefix,suffix:n.suffix,color:n.color,value:c.getData("value"),onchange:function(n){c.setData("value",n)}}),c.dom=c.stringUI.dom,c.onDataChange=function(){var n=c.getData("value");c.stringUI.setString(n)}},onget:function(c){return c.data.value},placeholder:"???"}),Z.add({type:"save",tags:["ui"],initWidget:function(c){var n=document.createElement("div");n.className="joy-save",c.dom=n,c.saveButton=new Z.ui.Button({label:"save",onclick:function(){var n=Z.saveToURL(c.top.data);c.url.setValue(n),c.url.select();n.length;c.info.innerHTML="P.S: you can shorten your link with <a href='http://tinyurl.com/' target='_blank'>TinyURL</a>!"}}),n.appendChild(c.saveButton.dom),c.url=new Z.ui.TextBox({readonly:!0}),n.appendChild(c.url.dom),c.info=document.createElement("div"),c.info.id="joy-save-info",n.appendChild(c.info)}}),Z.add({type:"ops",tags:["ui"],init:function(c){void 0!==c.resetVariables&&(c.data.resetVariables=c.resetVariables)},initWidget:function(c){var n=c.data.ops,t=document.createElement("div");t.className="joy-ops",c.dom=t;var e=document.createElement("list");e.id="joy-list",t.appendChild(e);var l=[{label:"Add op above",value:"op_above"},{label:"Add op below",value:"op_below"},{label:"Delete",value:"delete"}],g=function(t){var g=new Z.ui.ChooserButton({position:"below",staticLabel:I(t),options:l,onchange:function(l){!function(t,l){var g=0;if("op_above"==l&&(g=-1),"op_below"==l&&(g=1),0!=g){var I=c.entries.indexOf(t);g>0&&(I+=1),Z.modal.Chooser({position:"below",source:t.bullet.dom,options:F,onchange:function(n){C(n,I),c.update(),a()}})}"delete"==l&&(A(c.entries,t),A(n,t.opData),c.removeChild(t.op),e.removeChild(t.dom),c.update(),a())}(t,l)},styles:["joy-bullet"]});return g.dom.id="joy-bullet",g},I=function(n){for(var t,e=c.entries.indexOf(n)+1,l=0,g=c.parent;g;)"ops"==g.type&&l++,g=g.parent;switch(l%3){case 0:t=e;break;case 1:t=function(c){for(var n=0,t=1;c>=t;)n++,c-=t,t*=26;for(var e="",l=0;l<n;l++)e="abcdefghijklmnopqrstuvwxyz".charAt(c%26)+e,c=Math.floor(c/26);return e}(e);break;case 2:t=function(c){if(!+c)return NaN;for(var n=String(+c).split(""),t=["","C","CC","CCC","CD","D","DC","DCC","DCCC","CM","","X","XX","XXX","XL","L","LX","LXX","LXXX","XC","","I","II","III","IV","V","VI","VII","VIII","IX"],e="",l=3;l--;)e=(t[+n.pop()+10*l]||"")+e;return(Array(+n.join("")+1).join("M")+e).toLowerCase()}(e)}return t},a=function(){for(var n=0;n<c.entries.length;n++){var t=c.entries[n],e=t.bullet,l=I(t);e.setLabel(l)}};c.entries=[];for(var d=function(n,l){var I={},a=document.createElement("div");void 0===l&&(l=c.entries.length),c.entries.splice(l,0,I),e.insertBefore(a,e.children[l]);var d=g(I),i=document.createElement("div");i.id="joy-bullet-container",a.appendChild(i),i.appendChild(d.dom);var C=c.addChild({type:n.type},n),F=C.createWidget();F.id="joy-widget",a.appendChild(F),I.dom=a,I.bullet=d,I.op=C,I.widget=F,I.opData=n;var r,X,o=function(n){var t=n.offsetY/d.dom.getBoundingClientRect().height;t<0&&(t=0),t>1&&(t=1),r._PREVIEW=t,c.update()};return i.onmouseenter=function(n){if(c.top.canPreview("ops")){c.top.activePreview=c,c.previewData=B(c.data);var e=c.entries.indexOf(I);r=c.previewData.ops[e],c.previewData.ops.splice(e+1,0,{STOP:!0}),o(n),X=document.createElement("style"),document.head.appendChild(X),X.sheet.insertRule(".joy-ops.joy-previewing > #joy-list > div:nth-child(n+"+(e+2)+") { opacity:0.1; }"),X.sheet.insertRule(".joy-ops.joy-previewing > div.joy-bullet { opacity:0.1; }"),t.classList.add("joy-previewing")}},i.onmousemove=function(n){c.previewData&&o(n)},i.onmouseleave=function(){c.previewData&&(c.previewData=null,c.top.activePreview=null,c.update(),document.head.removeChild(X),t.classList.remove("joy-previewing"))},I},i=0;i<n.length;i++)d(n[i]);var C=function(c,t){var e={type:c};void 0===t?n.push(e):n.splice(t,0,e);d(e,t)},F=[];if(c.onlyOps)for(i=0;i<c.onlyOps.length;i++){var r=c.onlyOps[i],X=Z.getTemplateByType(r),o=X.tags.filter((function(c){return"op"!=c}))[0];F.push({label:X.name,value:r,category:o})}else{var s=Z.getTemplatesByTag("op");for(i=0;i<s.length;i++){var V=s[i];o=V.tags.filter((function(c){return"op"!=c}))[0];F.push({label:V.name,value:V.type,category:o})}}var G=new Z.ui.ChooserButton({staticLabel:"+",options:F,onchange:function(n){C(n),c.update()},styles:["joy-bullet"]});t.appendChild(G.dom)},onexecute:async function(c){c.target._variables||(c.target._variables={}),c.data.resetVariables&&(c.target._variables={});for(var n=0;n<c.data.ops.length;n++){var t=c.data.ops[n];if(t.STOP)return"STOP";var e=c.op.entries[n].op,l=await e.execute(c.target,t);if(l&&l.target)c.target=l.target;else{if(l&&l.error)return console.error("ops stopped with error: ",l),l;if(l&&l.stop)return console.log("ops interrupted at step ",n,l),l;if("STOP"==l)return l}}return c},placeholder:{ops:[],resetVariables:!0}}),Z.module("instructions",(function(){Z.add({name:"Repeat the following...",type:"instructions/repeat",tags:["instructions","op"],init:"Repeat the following {id:'count', type:'number', min:1, placeholder:3} times: {id:'ops', type:'ops', resetVariables:false}",onexecute:async function(c){var n=1;void 0!==c.data._PREVIEW&&(n=c.data._PREVIEW);for(var t=Math.floor(c.data.count*n),e=0;e<t;e++){var l=await c.op.ops.execute(c.target);if(l&&l.target)c.target=l.target;else{if(l.error)return console.error("op stopped with error: ",l),l;if(l.stop)return console.log("op interrupted at step ",e,l),l;if("STOP"==l)return l}}return c}}),Z.add({name:"// Write a note",type:"instructions/comment",tags:["instructions","op"],initWidget:function(c){c.dom=document.createElement("div"),c.box=new Z.ui.TextBox({multiline:!0,placeholder:"// your notes here",value:c.getData("value"),onchange:function(n){c.setData("value",n)},styles:["box"]}),c.dom.appendChild(c.box.dom)}})})),Z.add({type:"variableName",tags:["ui"],init:function(c){var n=c.variableType;c._createNewReference=function(){var t,e,l,g={value:(e=Z.getReferencesByTag(c,n).map((function(c){return c.data.value})),l=0,e.forEach((function(c){var n;"variable"==c&&(n=1);var t=c.match(/variable\s(\d+)/);t&&(n=parseInt(t[1])),l<n&&(l=n)})),0==l?"variable":"variable "+(l+1)),color:(t=N[x],x=(x+1)%N.length,t)},I=Z.createReference(c,n,g);c.setData("refID",I.id,!0),Z.connectReference(c,I.id)};var t=c.getData("refID");if(t)Z.connectReference(c,t);else{var e=Z.getReferencesByTag(c,n);if(c.startWithExisting&&e.length>0)t=e[e.length-1].id,c.setData("refID",t,!0),Z.connectReference(c,t);else c._createNewReference()}c._switchReference=function(n){var t=c.getData("refID");Z.disconnectReference(c,t),c.setData("refID",n),Z.connectReference(c,n)}},initWidget:function(c){c.dom=document.createElement("span");var n=c.getData("refID"),t=Z.getReferenceById(c,n).data,e=c.addChild({type:"string",prefix:"[",suffix:"]",color:t.color},t),l=e.createWidget();c.dom.appendChild(l);var g=e.onDataChange;e.onDataChange=function(){g();var c=e.getData("color");e.stringUI.setColor(c)};var I=c.variableType;c.noChooser||(c.dom.onclick=function(){var n=[],t=Z.getReferencesByTag(c,I),l=c.getData("refID");t.forEach((function(c){if(c.id!=l){var t=c.data.color;t=R(t[0],t[1],t[2]),n.push({label:"["+c.data.value+"]",value:c.id,color:t})}})),n.push({category:"meta",label:"(+new)",value:"NEW"}),n.push({category:"meta",label:"(change color)",value:"CHANGE_COLOR"}),Z.modal.Chooser({source:c.dom,options:n,onchange:function(n){if("CHANGE_COLOR"==n)Z.modal.Color({source:c.dom,value:e.getData("color"),onchange:function(c){e.setData("color",c),e.stringUI.setColor(c)}});else{if("NEW"==n){var t=c.getData("refID");Z.disconnectReference(c,t),c._createNewReference(),c.update()}else c._switchReference(n);var l=c.getData("refID"),g=Z.getReferenceById(c,l);e.switchData(g.data)}}})})},onget:function(c){var n=c.data.refID;return Z.getReferenceById(c.op,n).data.value},onkill:function(c){var n=c.getData("refID");Z.disconnectReference(c,n)}}),Z.module("math",(function(){Z.modify("number","number_raw",(function(c){return{init:function(c){if(!c.noVariables){var n=c.getData("value");"number"==typeof n&&(c.setData("value",void 0,!0),c.setData("chain",[{type:"number_raw",min:c.min,max:c.max,step:c.step,value:n}],!0)),c._makeNewChainOp=function(n,t){var e,l=n.type;switch(l){case"number_raw":e=c.addChild({type:l,min:n.min,max:n.max,step:n.step},n);break;case"variableName":e=c.addChild({type:l,variableType:"number",noChooser:!0},n);break;case"choose":e=c.addChild({type:l,options:[{label:"+",value:"+"},{label:"-",value:"-"},{label:"&times;",value:"*"},{label:"&divide;",value:"/"}],styles:["joy-math"]},n)}var g=c.getData("chain");return void 0!==t?(c.chainOps.splice(t,0,e),g.splice(t,0,n)):(c.chainOps.push(e),g.push(n)),e},c.chainOps=[];var t=c.getData("chain"),e=B(t);t.splice(0,t.length);for(var l=0;l<e.length;l++)c._makeNewChainOp(e[l]);c._replaceChainOp=function(n,t){var e=c._deleteChainOp(n),l=c._makeNewChainOp(t,e);return c.update(),l},c._deleteChainOp=function(n){var t=c.chainOps.indexOf(n);return A(c.chainOps,n),c.removeChild(n),c.getData("chain").splice(t,1),t}}},initWidget:function(n){if(n.noVariables)c.initWidget(n);else{n.dom=document.createElement("span"),n.dom.className="joy-number";n._chainEntries=[],n._makeChainEntry=function(c,e){var l,g,I=document.createElement("span");if(c.createWidget(),I.appendChild(c.dom),"choose"!=c.type){var a,d=new Z.ui.Button({onclick:function(){t(a)},styles:["joy-more"]});I.appendChild(d.dom)}if(void 0!==e)if(e<n.dom.childNodes.length){var i=n.dom.childNodes[e];n.dom.insertBefore(I,i)}else n.dom.appendChild(I);else n.dom.appendChild(I);"choose"!=c.type&&((l=c).dom.addEventListener("mousedown",(function(){g=+new Date})),l.dom.addEventListener("mouseup",(function(){+new Date-g<500&&function(c){var t=[];if("number_raw"!=c.type){var e=n.placeholder.value;"number"==typeof e&&t.push({label:e,value:{type:"number_raw",value:e}})}var l,g=Z.getReferencesByTag(n,"number");"variableName"==c.type&&(l=c.getData("refID")),g.forEach((function(c){if(c.id!=l){var n=c.data.color;n=R(n[0],n[1],n[2]),t.push({label:"["+c.data.value+"]",value:{type:"variableName",refID:c.id},color:n})}})),t.length>0&&Z.modal.Chooser({source:c.dom,options:t,onchange:function(t){var e=n._replaceChainOp(c,t);n._replaceChainEntry(c,e)}})}(l)}))),a={widget:I,op:c},void 0!==e?n._chainEntries.splice(e,0,a):n._chainEntries.push(a)},n._deleteChainEntry=function(c){var t=n._chainEntries.find((function(n){return n.op==c})),e=n._chainEntries.indexOf(t),l=t.widget;return n.dom.removeChild(l),A(n._chainEntries,t),e},n._replaceChainEntry=function(c,t){var e=n._deleteChainEntry(c);n._makeChainEntry(t,e)};for(var t=function(c){var t=c.widget.innerText,e=[{label:t+" + 2",value:"+"},{label:t+" - 2",value:"-"},{label:t+" &times; 2",value:"*"},{label:t+" &divide; 2",value:"/"}],l=n._chainEntries.indexOf(c);if(n._chainEntries.length>1){var g,I;g=0==l?l+1:l-1;var a=n._chainEntries[g].widget.innerText;I=0==l?t+" "+a:a+" "+t;var d=[l,g].sort();e.push({category:"meta",label:"(delete â"+I+"â)",value:d})}Z.modal.Chooser({source:c.widget,options:e,onchange:function(t){if("string"==typeof t){var e=n._chainEntries.indexOf(c);e++;var l=n._makeNewChainOp({type:"choose",value:t},e);n._makeChainEntry(l,e),e++;var g=n._makeNewChainOp({type:"number_raw",value:2},e);n._makeChainEntry(g,e)}else for(var I=t,a=I.length-1;a>=0;a--){var d=I[a],i=n._chainEntries[d].op;n._deleteChainOp(i),n._deleteChainEntry(i)}n.update()}})},e=0;e<n.chainOps.length;e++){var l=n.chainOps[e];n._makeChainEntry(l)}}},onget:function(n){if(n.op.noVariables)return c.onget(n);for(var t=[],e=0;e<n.data.chain.length;e+=2){var l,g=n.op.chainOps[e];switch(g.type){case"number_raw":l=g.get(n.target);break;case"variableName":l=n.target._variables[g.get(n.target)]}if(e>0){var I=n.op.chainOps[e-1].get();t.push(I)}t.push(l)}for(e=1;e<t.length;e+=2){if("*"==(I=t[e])||"/"==I){var a=t[e-1],d=t[e+1];i="*"==I?a*d:a/d,t.splice(e-1,3,i),e-=2}}for(e=1;e<t.length;e+=2){if("+"==(I=t[e])||"-"==I){var i;a=t[e-1],d=t[e+1];i="+"==I?a+d:a-d,t.splice(e-1,3,i),e-=2}}return t[0]}}})),Z.add({name:"Set [number]",type:"math/set",tags:["math","op"],init:"Set {id:'varname', type:'variableName', variableType:'number'} to {id:'value', type:'number'}",onexecute:function(c){c.target._variables[c.data.varname]=c.data.value}}),Z.add({name:"Do math to [number]",type:"math/operation",tags:["math","op"],init:JSON.stringify({id:"operation",type:"choose",placeholder:"+",options:[{label:"+ Increase",value:"+"},{label:"- Decrease",value:"-"},{label:"&times; Multiply",value:"*"},{label:"&divide; Divide",value:"/"}]})+" {id:'varname', type:'variableName', variableType:'number', startWithExisting:true} by {id:'value', type:'number'}",onexecute:function(c){var n=c.target._variables,t=c.data.varname;switch(void 0===n[t]&&(n[t]=0),c.data.operation){case"+":n[t]+=c.data.value;break;case"-":n[t]-=c.data.value;break;case"*":n[t]*=c.data.value;break;case"/":n[t]/=c.data.value}}}),Z.add({name:"If [math] then...",type:"math/if",tags:["math","op"],init:"If {id:'value1', type:'number'} {id:'test', type:'choose', options:['<','â¤','=','â¥','>'], placeholder:'='} {id:'value2', type:'number'}, then: {id:'ops', type:'ops', resetVariables:false}",onexecute:function(c){var n,t=c.data.value1,e=c.data.value2;switch(c.data.test){case"<":n=t<e;break;case"â¤":n=t<=e;break;case"=":n=t==e;break;case"â¥":n=t>=e;break;case">":n=t>e}if(n){var l=c.op.ops.execute(c.target);if("STOP"==l)return l}}})})),Z.module("random",(function(){Z.add({name:"With a X% chance...",type:"random/if",tags:["random","op"],init:"With a {id:'chance', type:'number', min:0, max:100, placeholder:50}% chance, do:{id:'ops', type:'ops', resetVariables:false}",onexecute:function(c){var n=c.data.chance/100;if(Math.random()<n){var t=c.op.ops.execute(c.target);if("STOP"==t)return t}}}),Z.add({name:"Set random [number]",type:"random/set",tags:["random","op"],init:"Set {id:'varname', type:'variableName', variableType:'number'} to a random {id:'numtype', type:'choose', options:['number','integer'], placeholder:'number'} between {id:'min', type:'number', placeholder:1} and {id:'max', type:'number', placeholder:100}",onexecute:function(c){var n,t=c.target._variables,e=c.data.varname,l=c.data.min,g=c.data.max,I=Math.min(l,g),a=Math.max(l,g);n="integer"==c.data.numtype?I+Math.floor(Math.random()*(a-I+1)):I+Math.random()*(a-I),t[e]=n}})}));var Y=t(49),y=t(0),S=t(50),k=t(51);const H=new(t.n(k).a);H.addKeyword("file",{compile:function(c){if(c&&!c.mime&&!c.ext&&"string"!=typeof c)throw new Error("Invalid config for keyword: file");if(c&&c.maxSize&&"number"!=typeof c.maxSize)throw new Error("maxSize must be a number");if(c&&c.minSize&&"number"!=typeof c.minSize)throw new Error("minSize must be a number");if(c&&c.size&&"number"!=typeof c.size&&!Array.isArray(c.size))throw new Error("size must be a number");return function(n){if(!(n instanceof File))return!1;if(!c)return!0;for(let t in c){if("mime"===t){const e=c[t];let l=!1;if("string"==typeof e)l=n.type.match(e);else if(Array.isArray(e))for(let c of e)n.type.match(c)&&(l=!0);if(!l)return!1}if("ext"===t){const e=c[t];let l=!1;if("string"==typeof e)l=n.name.endsWith(e);else if(Array.isArray(e))for(let c of e)n.name.endsWith(c)&&(l=!0);if(!l)return!1}if("maxSize"===t&&n.size>c[t])return!1;if("minSize"===t&&n.size<c[t])return!1;if("size"===t){if(Array.isArray(c[t])&&!c[t].includes(n.size))return!1;if(n.size!==c[t])return!1}}return!0}}});const E=Object.getPrototypeOf(Object.getPrototypeOf(new Uint8Array)).constructor,T=Object.values({Int8Array:"int8",Int16Array:"int16",Int32Array:"int32",Uint8Array:"uint8",Uint16Array:"uint16",Uint32Array:"uint32",Float32Array:"float32",Float64Array:"float64",Array:"array"});H.addKeyword("ndarray",{compile:function(c){if(c&&c.ndim&&"number"!=typeof c.ndim&&!Array.isArray(c.ndim))throw new Error("ndim must be a number");if(c&&c.shape){if(!Array.isArray(c.shape))throw new Error("shape must be an array");if(c.ndim&&("number"!=typeof c.ndim||c.shape.length!==c.ndim))throw new Error("mismatch between shape and ndim")}if(c&&c.dtype){if("string"!=typeof c.dtype&&!Array.isArray(c.dtype))throw new Error("Invalid dtype format");let n;n="string"==typeof c.dtype?[c.dtype]:c.dtype;for(let c of n)if("string"!=typeof c||!T.includes(c))throw new Error("Invalid dtype: "+c+", valid types: "+T.join(","))}return function(n){if(!("ndarray"===n.__jailed_type__&&n.__value__&&n.__value__ instanceof E&&n.__shape__&&Array.isArray(n.__shape__)&&n.__dtype__&&T.includes(n.__dtype__)))return!1;if(!c)return!0;for(let t in c){if("shape"===t){const e=c[t];if(n.__shape__.length!==e.length)return!1;for(let c=0;c<n.__shape__.length;c++)if("number"==typeof e[c]&&n.__shape__[c]!==e[c])return!1}if("dtype"===t){const e=c[t];let l=!1;if("string"==typeof e?l=n.__dtype__===c[t]:Array.isArray(e)&&(l=e.includes(n.__dtype__)),!l)return!1}if("ndim"===t){const e=c[t];let l=!1;if("number"==typeof e?l=n.__shape__.length===e:Array.isArray(e)&&(l=e.includes(n.__shape__.length)),!l)return!1}}return!0}}}),H.addKeyword("instanceof",{compile:function(c){return function(n){if(Array.isArray(c)){let t=!1;for(let e of c)if(n instanceof e){t=!0;break}return t}return n instanceof c}}});const v=["env","requirements","dependencies","icon","ui","type","flags","labels","cover","base_frame"],z=v.concat(["name","type","tags","version","api_version","defaults","inputs","outputs","permissions"]),D={"web-worker":{type:"internal",name:"Web Worker",lang:"javascript"},iframe:{type:"internal",name:"IFrame",lang:"javascript"},window:{type:"internal",name:"Window",lang:"javascript"},"web-python":{type:"internal",name:"Web Python",lang:"web-python",icon:"ð"},"web-python-window":{type:"internal",name:"Web Python (window)",lang:"web-python",icon:"ð"},collection:{type:"-",name:"Collection",lang:"",icon:""}};function f(c){return D[c]}const w=H.compile({properties:{_id:{type:["null","string"]},name:{type:"string"},code:{type:"string"},lang:{type:["null","string"]},script:{type:["null","string"]}}}),j=(H.compile({properties:{type:{type:"string"},name:{type:"string"},lang:{type:"string"},icon:{type:["null","string"]},connection:{}}}),H.compile({properties:{name:{type:"string"},type:{type:"string"},init:{type:["null","string","array","object"]}}})),K=H.compile({properties:{name:{type:"string"},type:{type:"string"},config:{type:["null","object"]},data:{type:["null","number","string","array","object"]},panel:{type:["null","object"]}}}),M=H.compile({properties:{name:{type:"string"},type:{type:"string"},ui:{type:["null","string","array","object"]},run:{instanceof:Function},inputs:{type:["null","object"]},outputs:{type:["null","object"]}}}),O=H.compile({properties:{name:{type:"string"},type:{enum:["engine-factory"]},icon:{type:"string"},url:{type:"string"},config:{type:"object"},addEngine:{instanceof:Function},removeEngine:{instanceof:Function}}}),L=H.compile({properties:{name:{type:"string"},type:{enum:["engine"]},pluginType:{type:"string"},factory:{type:"string"},icon:{type:"string"},url:{type:"string"},config:{type:"object"},connect:{instanceof:Function},disconnect:{instanceof:Function},listPlugins:{instanceof:Function},startPlugin:{instanceof:Function},getPlugin:{instanceof:Function},getEngineStatus:{instanceof:Function},getEngineConfig:{instanceof:[Function,null]},heartbeat:{instanceof:[Function,null]},killPlugin:{instanceof:[Function,null]},killPluginProcess:{instanceof:[Function,null]},restartPlugin:{instanceof:[Function,null]},about:{instanceof:[Function,null]}}}),P=H.compile({properties:{name:{type:"string"},type:{enum:["file-manager"]},url:{type:"string"},shwoFileDialog:{instanceof:Function},listFiles:{instanceof:Function},getFile:{instanceof:Function},putFile:{instanceof:Function},requestUploadUrl:{instanceof:Function},getFileUrl:{instanceof:Function},removeFile:{instanceof:Function},heartbeat:{instanceof:[Function,null]}}});var _=t(7);
/**
 * @fileoverview Jailed - safe yet flexible sandbox
 *
 * @license MIT, see http://github.com/imjoy-team/imjoy-core
 * Copyright (c) 2020 ImJoy Team <imjoy.team@gmail.com>
 *
 * @license MIT, see http://github.com/asvd/jailed
 * Copyright (c) 2014 asvd <heliosframework@gmail.com>
 */const q={};"localhost"===location.hostname||"127.0.0.1"===location.hostname?q.asset_url="/":q.asset_url="https://lib.imjoy.io/";let $=!1;class cc{constructor(c,n,t,e,l){if(!$)throw"Please call `initializeJailed()` before using Jailed.";this.config=c,this.id=c.id||Object(y.randId)(),this._id=c._id,this.name=c.name,this.type=c.type,this.tag=c.tag,this.tags=c.tags,this.type=c.type||"web-worker",this.initializing=!1,this.running=!1,this._log_history=[],this._callbacks=c._callbacks||{},this._is_proxy=e,this.backend=f(this.type),this.engine=t,this.allow_evil=l,this._updateUI=n&&n.utils&&n.utils.$forceUpdate||function(){},e?this._disconnected=!1:(this._disconnected=!0,this._bindInterface(n),this._initialInterface.on||(this._initialInterface.on=this.on),this._initialInterface.off||(this._initialInterface.off=this.off),this._initialInterface.emit||(this._initialInterface.emit=this.emit),this._connect()),this._updateUI()}_bindInterface(c){for(var n in c=c||{},this._initialInterface={__as_interface__:!0},c)if(Object.prototype.hasOwnProperty.call(c,n))if("function"==typeof c[n])this._initialInterface[n]=c[n].bind(null,this);else if("object"==typeof c[n]){var t={};for(var e in c[n])Object.prototype.hasOwnProperty.call(c[n],e)&&"function"==typeof c[n][e]&&(t[e]=c[n][e].bind(null,this));this._initialInterface[n]=t}else this._initialInterface[n]=c[n]}_setupViaEngine(){if(this.engine&&this.engine._is_evil&&"eval is evil"!==this.allow_evil)return this._fail.emit("Evil engine is not allowed."),this._connection=null,this.error("Evil engine is not allowed."),void this._set_disconnected();if(!this.engine||!this.engine.connected)return this._fail.emit("Please connect to the Plugin Engine ð."),this._connection=null,this.error("Please connect to the Plugin Engine ð."),void this._set_disconnected();this.initializing=!0,this._updateUI();const c={__as_interface__:!0,__id__:this.config.id+"_utils",terminatePlugin(){this.terminate()},setPluginStatus(c){this._disconnected||(this.running=c.running,this._updateUI())}};this.engine.startPlugin(this.config,this._initialInterface,c).then(c=>{if(!this.engine)return console.warn("Plugin "+this.id+" is ready, but it was termianted."),void(this.engine&&this.engine.killPlugin&&this.engine.killPlugin({id:this.config.id,name:this.config.name}));this.api=c,this.api.__as_interface__=!0,this.api.__id__=this.id,this._disconnected=!1,this.initializing=!1,this._updateUI(),this._connected.emit(),this.engine.registerPlugin(this)}).catch(c=>{this.error(c),this._set_disconnected()})}_setupViaIframe(){if(!f(this.type))throw`Unsupported backend type (${this.type})`;this.config.base_frame||(this.config.base_frame=q.asset_url+"base_frame.html");const c=function(c,n,t){var e=document.createElement("iframe");e.src=t.base_frame,e.sandbox="",e.frameBorder="0",e.style.width="100%",e.style.height="100%",e.style.margin="0",e.style.padding="0",e.style.display="none";const l=e.cloneNode(!1);var g="";return t.permissions&&(t.permissions.includes("midi")&&!g.includes("midi *;")&&(g+="midi *;"),t.permissions.includes("geolocation")&&!g.includes("geolocation *;")&&(g+="geolocation *;"),t.permissions.includes("microphone")&&!g.includes("microphone *;")&&(g+="microphone *;"),t.permissions.includes("camera")&&!g.includes("camera *;")&&(g+="camera *;"),t.permissions.includes("encrypted-media")&&!g.includes("encrypted-media *;")&&(g+="encrypted-media *;"),t.permissions.includes("full-screen")&&(l.allowfullscreen=""),t.permissions.includes("payment-request")&&(l.allowpaymentrequest="")),l.sandbox=["allow-scripts","allow-forms","allow-modals","allow-popups","allow-same-origin"].join(" "),l.allow=g,"window"!==n&&(l.src=l.src+(l.src.includes("?")?"&":"?")+"_plugin_type="+n),l.id="iframe_"+c,l}(this.id,this.type,this.config);if("iframe"===this.type||"window"===this.type||"web-python-window"===this.type){let n=this.config.iframe_container;"string"==typeof n&&(n=document.getElementById(n)),n?(c.style.display="block",n.appendChild(c),this.iframe_container=n):(document.body.appendChild(c),this.iframe_container=null)}else document.body.appendChild(c);this._connection=new _.BasicConnection(c),this.initializing=!0,this._updateUI(),this._connection.onInit(async()=>{this._rpc=new _.RPC(this._connection),this._registerSiteEvents(this._rpc),this._rpc.setInterface(this._initialInterface),await this._rpc.sendInterface(),await this._executePlugin(),this.api=await this._requestRemote(),this.api.__as_interface__=!0,this.api.__id__=this.id,this._disconnected=!1,this.initializing=!1,this._updateUI(),this._connected.emit()}),this._connection.onFailed(c=>{this._fail.emit(c)}),this._connection.onDisconnect(c=>{if(c&&(c.success?this.log(c.message):this.error(c.message)),this._set_disconnected(),"window"===this.config.type&&this.config.iframe_container){const c=document.getElementById(this.config.iframe_container);c.parentNode.removeChild(c)}})}_connect(){this.api=null,this._connected=new _.Whenable(!0),this._fail=new _.Whenable(!0),this._disconnect=new _.Whenable(!0),this._fCb=c=>{if(this._fail.emit(c),this.disconnect(),this.initializing=!1,c&&this.error(c.toString()),"window"===this.config.type&&this.config.iframe_container){document.getElementById(this.config.iframe_container).innerHTML=`<h5>Oops! failed to load the window.</h5><code>Details: ${X.a.sanitize(String(c))}</code>`}this._updateUI()},this.backend?this._setupViaIframe():this._setupViaEngine()}_registerSiteEvents(c){c.onDisconnect(c=>{this._disconnect.emit(),c&&(c.success?this.log(c.message):this.error(c.message)),this._set_disconnected()}),c.onRemoteReady(()=>{this.running&&(this.running=!1,this._updateUI())}),c.onRemoteBusy(()=>{this._disconnected||this.running||(this.running=!0,this._updateUI())})}async _executePlugin(){try{if(this.config.requirements&&await this._connection.execute({type:"requirements",lang:this.config.lang,requirements:this.config.requirements,env:this.config.env}),["iframe","window","web-python-window"].includes(this.config.type)){if(this.config.styles)for(let c=0;c<this.config.styles.length;c++)await this._connection.execute({type:"style",content:this.config.styles[c].content,attrs:this.config.styles[c].attrs,src:this.config.styles[c].attrs.src});if(this.config.links)for(let c=0;c<this.config.links.length;c++)await this._connection.execute({type:"link",rel:this.config.links[c].attrs.rel,type_:this.config.links[c].attrs.type,attrs:this.config.links[c].attrs,href:this.config.links[c].attrs.href});if(this.config.windows)for(let c=0;c<this.config.windows.length;c++)await this._connection.execute({type:"html",content:this.config.windows[c].content,attrs:this.config.windows[c].attrs})}if(this.config.scripts)for(let c=0;c<this.config.scripts.length;c++)await this._connection.execute({type:"script",content:this.config.scripts[c].content,lang:this.config.scripts[c].attrs.lang,attrs:this.config.scripts[c].attrs,src:this.config.scripts[c].attrs.src})}catch(c){this._fCb(c.toString()||"Error in loading plugin")}}_requestRemote(){return new Promise(c=>{this._rpc.onRemoteUpdate(()=>{c(this._rpc.getRemote())}),this._rpc.requestRemote()})}disconnect(){this._connection&&this._connection.disconnect(),this._disconnect.emit()}onFailed(c){this._fail.whenEmitted(c)}onConnected(c){this._connected.whenEmitted(c)}onDisconnected(c){this._disconnect.whenEmitted(c)}_set_disconnected(){this._disconnected=!0,this.running=!1,this.initializing=!1,this.terminating=!1,this.engine=null,this._updateUI()}async terminate(c){if(this._disconnected)return void this._set_disconnected();const n=()=>{this.engine&&this.engine.killPlugin&&this.engine.killPlugin({id:this.config.id,name:this.config.name}),this._set_disconnected(),this._rpc&&(this._rpc.disconnect(),this._rpc=null),this._connection&&(this._connection.disconnect(),this._connection=null)};if(!this.terminating){this.terminating=!0,setTimeout(()=>{console.warn(`Plugin termination takes more than 5s, force quiting ${this.id}!`),this.terminating&&n()},5e3);try{await this.emit("close")}catch(c){console.error(c)}c&&n();try{this.api&&this.api.exit&&"function"==typeof this.api.exit&&await this.api.exit()}catch(c){console.error("error occured when terminating the plugin",c)}finally{n()}}}on(c,n,t){this._callbacks=this._callbacks||{},this._callbacks[c]?this._callbacks[c].push(n):this._callbacks[c]=[n],t&&this._callbacks[c].emitted&&n(this._callbacks[c].emitted_data)}off(c,n){if(this._callbacks[c])if(n){const t=this._callbacks[c],e=t.indexOf(n);e>=0?t.splice(e,1):console.warn(`callback ${c} does not exist.`)}else delete this._callbacks[c];else console.warn(`callback ${c} does not exist.`)}emit(c,n){return new Promise(async(t,e)=>{const l=[];try{if(this._callbacks[c])for(let t of this._callbacks[c])try{await t(void 0!==n?n:void 0)}catch(c){l.push(c),console.error(c)}else this._callbacks[c]=[],this._callbacks[c].emitted=!0,this._callbacks[c].emitted_data=n;l.length<=0?t():e(l)}catch(c){e(c)}})}log(c){if("object"==typeof c)this._log_history.push(c),console.log(`Plugin ${this.id}:`,c);else{const c=Array.prototype.slice.call(arguments).join(" ");this._log_history._info=c.slice(0,100),this._log_history.push({type:"info",value:c}),console.log(`Plugin ${this.id}: ${c}`)}}error(){const c=Array.prototype.slice.call(arguments).join(" ");this._log_history._error=c.slice(0,100),this._log_history.push({type:"error",value:c}),console.error(`Error in Plugin ${this.id}: ${c}`)}progress(c){this._progress=c<1?100*c:c}}var nc=t(17);class tc{constructor({event_bus:c=null,config_db:n=null,engine_manager:t=null,window_manager:e=null,file_manager:l=null,imjoy_api:g={},show_message_callback:I=null,update_ui_callback:d=null,jailed_asset_url:i=null}){this.event_bus=c,this.em=t,this.wm=e,this.fm=l,this.config_db=n,Object(y.assert)(this.event_bus,"event bus is not available"),Object(y.assert)(this.em,"engine manager is not available"),Object(y.assert)(this.wm,"window manager is not available"),Object(y.assert)(this.config_db,"config database is not available"),this.jailed_asset_url=i,this.show_message_callback=I,this.update_ui_callback=d||function(){},this._allowed_evil_plugin={},this.internal_plugins=S,this.default_repository_list=[{name:"ImJoy Repository",url:"imjoy-team/imjoy-plugins",description:"The official plugin repository provided by ImJoy.io."},{name:"ImJoy Demos",url:"imjoy-team/imjoy-demo-plugins",description:"A set of demo plugins provided by ImJoy.io"}],this.IMJOY_PLUGIN={_id:"IMJOY_APP"},this.repository_list=[],this.repository_names=[],this.available_plugins=[],this.installed_plugins=[],this.workspace_list=[],this.selected_workspace=null,this.selected_repository=null,this.workflow_list=[],this.db=null;const C=g.utils;this.imjoy_api={alert:(c,n)=>window.alert(n.content||n),prompt:(c,n)=>window.prompt(n.content||n),confirm:(c,n)=>window.confirm(n.content||n),requestUploadUrl:this.requestUploadUrl,getFileUrl:this.getFileUrl,getFilePath:this.getFilePath,log:(c,...n)=>{c.log(...n),this.update_ui_callback()},error:(c,...n)=>{c.error(...n),this.update_ui_callback()},progress:(c,n)=>{c.progress(n),this.update_ui_callback()},exportFile(c,n,t){"string"==typeof n&&(n=new Blob([n],{type:"text/plain;charset=utf-8"})),Object(Y.saveAs)(n,t||n._name||"file_export")},showDialog(){throw"`api.showDialog` is not implemented."},showFileDialog(){throw"`api.showDialog` is not implemented."},showProgress(c,n){console.log("api.showProgress: ",n)},showStatus(c,n){console.log("api.showStatus: ",n)},showSnackbar(c,n,t){console.log("api.showSnackbar: ",n,t)},showMessage:(c,n,t)=>{console.log("api.showMessage: ",n,t)},register:this.register,unregister:this.unregister,createWindow:this.createWindow,run:this.runPlugin,call:this.callPlugin,getPlugin:this.getPlugin,getFileManager:this.getFileManager,getEngineFactory:this.getEngineFactory,getEngine:this.getEngine,setConfig:this.setPluginConfig,getConfig:this.getPluginConfig,getAttachment:this.getAttachment,onClose:(c,n)=>{console.warn('`api.onClose` is deprecated, please use `api.on("close", ...)` instead.'),c.on("close",n)},utils:{}};for(let c in this.imjoy_api)if("function"==typeof this.imjoy_api[c])this.imjoy_api[c]=this.imjoy_api[c].bind(this);else if("object"==typeof this.imjoy_api[c])for(let n in this.imjoy_api[c])this.imjoy_api[c][n]=this.imjoy_api[c][n].bind(this);if(this.imjoy_api=a.a.assign({},this.imjoy_api,g),C)for(let c in C)this.imjoy_api.utils[c]=C[c];window.api=this.imjoy_api,this.event_bus.on("engine_connected",async c=>{for(let n in this.plugins){const t=this.plugins[n];try{t.engine===c&&await this.reloadPlugin(t),"auto"===t.config.engine_mode&&(t._disconnected||t.terminating)&&await this.reloadPlugin(t),t.config.engine_mode===c.name&&await this.reloadPlugin(t)}catch(c){this.showMessage(c)}}}),this.event_bus.on("engine_disconnected",async c=>{for(let n in this.plugins){const t=this.plugins[n];t.engine===c&&this.unloadPlugin(t)}})}getFileUrl(c,n){if(console.warn("`api.getFileUrl` is deprecated, please use `api.getFileManager` (https://imjoy.io/docs/#/api?id=apigetfilemanager) and access `getFileUrl` from the file manager."),"object"!=typeof n||!n.path)throw"You must pass an object contains keys named `path` and `engine`";if(c=c||this.IMJOY_PLUGIN,n.engine&&(console.warn("The `engine` option for `api.getFileUrl` is deprecated, please use `file_manager` instead of `engine`."),n.file_manager=n.engine,delete n.engine),!n.file_manager)throw"Please specify a file manager via the `file_manager` option.";const t=this.fm.getFileManagerByUrl(n.file_manager);if(!t)throw`File manager ${n.file_manager} not found`;if(!t.connected)throw this.showMessage(`File manager (${t.url}) is not connected.`),`File manager (${t.url}) is not connected.`;return t.getFileUrl(n)}requestUploadUrl(c,n){if(console.warn("`api.requestUploadUrl` is deprecated, please use `api.getFileManager` (https://imjoy.io/docs/#/api?id=apigetfilemanager) and access `requestUploadUrl` from the file manager."),"object"!=typeof n)throw"You must pass an object contains keys named `engine` and `path` (or `dir`, optionally `overwrite`)";if(c=c||this.IMJOY_PLUGIN,n.engine&&(console.warn("The `engine` option for `api.requestUploadUrl` is deprecated, please use `file_manager` instead of `engine`."),n.file_manager=n.engine,delete n.engine),!n.file_manager)throw"Please specify a file manager via the `file_manager` option.";const t=this.fm.getFileManagerByUrl(n.file_manager);if(!t)throw`File manager ${n.file_manager} not found`;if(!t.connected)throw this.showMessage(`File manager (${t.url}) is not connected.`),`File manager (${t.url}) is not connected.`;return t.requestUploadUrl({path:n.path,overwrite:n.overwrite,dir:n.dir})}showMessage(c,n){this.show_message_callback?this.show_message_callback(c,n):console.log(`PLUGIN MESSAGE: ${c}`)}async init(){const c={};this.jailed_asset_url&&(c.asset_url=this.jailed_asset_url),"serviceWorker"in navigator?navigator.serviceWorker.ready.then(()=>{navigator.serviceWorker.addEventListener("controllerchange",()=>{console.log("Service worker is active and the controller is available, caching internal plugins...");for(let c in this.internal_plugins)this.normalizePluginUrl(this.internal_plugins[c].uri).then(c=>{c.uri&&Object(y.cacheUrlInServiceWorker)(c.uri).then(()=>{console.log("Internal plugin cached in the service worker",c.uri)}).catch(c=>{console.error(c)})})})}):console.log("Service workers are not supported."),(c=>{if(c)for(let n in c)q[n]=c[n];q.asset_url.endsWith("/")||(q.asset_url=q.asset_url+"/"),$=!0})(c),this.plugins={},this.plugin_names={},this.registered={ops:{},windows:{},extensions:{},internal_inputs:{},inputs:{},outputs:{},loaders:{},engines:{},engine_factories:{},file_managers:{}}}loadRepositoryList(){return new Promise((c,n)=>{this.config_db.get("repository_list").then(n=>{this.repository_list=n.list;for(let c of this.default_repository_list){let n=!1;for(let t of this.repository_list)if(t.url===c.url&&t.name===c.name){n=t;break}n||this.addRepository(c)}this.repository_names=[];for(let c of this.repository_list)this.repository_names.push(c.name);c(this.repository_list)}).catch(t=>{"not_found"!=t.name?console.error("Database Error",t):console.log("Failed to load repository list",t),this.repository_list=this.default_repository_list,this.repository_names=[];for(let c of this.repository_list)this.repository_names.push(c.name);this.config_db.put({_id:"repository_list",list:this.repository_list},{force:!0}).then(()=>{c(this.repository_list)}).catch(()=>{n("Failed to load the repository list or save the default repositories.")}),this.saveRepositoryList().then(()=>{c(this.repository_list)}).catch(n)})})}saveRepositoryList(){return new Promise((c,n)=>{let t=null;this.config_db.get("repository_list").then(c=>{t=c._rev}).finally(()=>{this.config_db.put({_id:"repository_list",_rev:t||void 0,list:this.repository_list},{force:!0}).then(()=>{c(this.repository_list)}).catch(c=>{this.showMessage("Failed to save repository, database Error:"+c.toString()),n("Failed to save repository, database Error:"+c.toString())})})})}addRepository(c){return new Promise((n,t)=>{"string"==typeof c&&(c={name:c,url:c,description:c}),c.name&&c.url?this.reloadRepository(c).then(e=>{c.name=e.name||c.name,c.description=e.description||c.description;const l=c.url&&c.url.replace("https://github.com/","").replace("http://github.com/","");for(let c of this.repository_list)c.url&&c.url.replace("https://github.com/","").replace("http://github.com/","")===l&&(this.repository_list.splice(this.repository_list.indexOf(c),1),this.showMessage("Repository with the same url already exists."));for(let n of this.repository_list)if(n.name===c.name){c.name=l;break}if(c.name&&c.url){this.repository_list.push(c),this.repository_names=[];for(let c of this.repository_list)this.repository_names.push(c.name);this.saveRepositoryList().then(()=>{n(c)}).catch(t)}else t("You need to provide name and url")}).catch(()=>{this.repository_names.indexOf(c.name)>=0&&this.repository_names.splice(this.repository_names.indexOf(c.name),1),this.showMessage("Failed to load repository from: "+c.url),t("Failed to load repository from: "+c.url)}):t("You need to provide name and url")})}removeRepository(c){return new Promise((n,t)=>{if(!c||!c.name||!c.url)return void t("You need to provide name and url");let e=!1;for(let n of this.repository_list)n.url!==c.url&&n.name!==c.name||(e=n);if(e){const c=this.repository_list.indexOf(e);this.repository_list.splice(c,1),this.repository_names=[];for(let c of this.repository_list)this.repository_names.push(c.name);this.saveRepositoryList().then(()=>{this.showMessage("Repository has been deleted."),n()}).catch(()=>{this.showMessage("Error occured when removing repository."),t("Error occured when removing repository.")})}else t("Repository not found: "+c.name)})}reloadRepository(c){return c=c||this.selected_repository,new Promise((n,t)=>{this.getRepoManifest(c.url).then(t=>{this.available_plugins=t.plugins;for(let c=0;c<this.available_plugins.length;c++){const n=this.available_plugins[c],t=this.installed_plugins.filter(c=>n.name===c.name);t.length>0&&(n.installed=!0,n.tag=t[0].tag)}this.selected_repository=c,n(t)}).catch(t)})}loadWorkspaceList(){return new Promise((c,n)=>{this.config_db.get("workspace_list").then(n=>{this.workspace_list=n.list,this.selected_workspace=this.workspace_list[0],c(this.workspace_list)}).catch(t=>{"not_found"!=t.name&&console.error("Database Error",t),this.workspace_list=["default"],this.config_db.put({_id:"workspace_list",list:this.workspace_list}).then(()=>{this.selected_workspace=this.workspace_list[0],c(this.workspace_list)}).catch(()=>{n("Failed to load Plugin Engine list, database Error:"+t.toString())})})})}loadWorkspace(c){return new Promise((n,t)=>{c=c||this.selected_workspace;const l=()=>{try{this.event_bus.emit("workspace_list_updated",this.workspace_list),this.db=new e.a(c+"_workspace",{revs_limit:2,auto_compaction:!0}),this.selected_workspace=c,n()}catch(c){t(c)}};this.workspace_list.includes(c)?l():(this.workspace_list.includes(c)||this.workspace_list.push(c),this.saveWorkspaceList().then(()=>{l()}).catch(t))})}saveWorkspaceList(){return new Promise((c,n)=>{this.config_db.get("workspace_list").then(t=>{this.config_db.put({_id:t._id,_rev:t._rev,list:this.workspace_list,default:"default"}).then(c).catch(c=>{n(`Failed to save workspace, database Error: ${c.toString()}`)})}).catch(c=>{n(`Failed to save workspaces, database Error: ${c.toString()}`)})})}removeWorkspace(c){return new Promise((n,t)=>{if(this.workspace_list.includes(c)){const e=this.workspace_list.indexOf(c);this.workspace_list.splice(e,1),this.saveWorkspaceList().then(()=>{n(),this.selected_workspace===c.name&&(this.selected_workspace=null)}).catch(t)}})}saveWorkflow(c){const n=prompt("Please enter a name for the workflow","default");if(!n)return;const t={};t.name=n,t._id=n+"_workflow",t.workflow=JSON.stringify(c.top.data),this.db.get(t._id).then(c=>{t._rev=c._rev}).finally(()=>{this.db.put(t).then(()=>{this.workflow_list.push(t),this.showMessage(`Workflow "${n}" has been successfully saved.`)}).catch(c=>{this.showMessage("Failed to save the workflow."),console.error(c)})})}removeWorkflow(c){this.db.get(c._id).then(c=>this.db.remove(c)).then(()=>{var n=this.workflow_list.indexOf(c);n>-1&&this.workflow_list.splice(n,1),this.showMessage(`Workflow "${c.name}" has been successfully removed.`)}).catch(c=>{this.showMessage("Failed to remove the workflow."),console.error(c)})}reloadDB(){return new Promise((c,n)=>{try{if(this.db)try{this.db.close().finally(()=>{this.db=new e.a(this.selected_workspace+"_workspace",{revs_limit:2,auto_compaction:!0}),this.db?c():n("Failed to reload database.")})}catch(t){console.error("Failed to reload database: ",t),this.db=new e.a(this.selected_workspace+"_workspace",{revs_limit:2,auto_compaction:!0}),this.db?c():n("Failed to reload database.")}else this.db=new e.a(this.selected_workspace+"_workspace",{revs_limit:2,auto_compaction:!0}),this.db?c():n("Failed to reload database.")}catch(c){console.error("Failed to reload database."),n("Failed to reload database.")}})}setInputLoaders(c){for(let n of c)this.wm.registerInputLoader(n.loader_key,n,n.loader)}reloadPlugins(){return new Promise((c,n)=>{if(this.plugins)for(let c in this.plugins){const n=this.plugins[c];if("function"==typeof n.terminate)try{n.terminate().then(()=>{this.update_ui_callback()})}catch(c){console.error(c)}this.plugins[c]=null,this.plugin_names[n.name]=null}this.init().then(()=>{this.reloadDB().then(()=>{this.db.allDocs({include_docs:!0,attachments:!0,sort:"name"}).then(n=>{this.workflow_list=[],this.installed_plugins=[];for(let c=0;c<n.total_rows;c++){const t=n.rows[c].doc;if(t.workflow)this.workflow_list.push(t);else{if(t.hash&&g.a.hash(t.code)!==t.hash){console.error("Plugin source code signature mismatch, skip loading plugin",t);continue}t.installed=!0,this.installed_plugins.push(t),this.reloadPlugin(t).catch(c=>{console.error(t,c),this.showMessage(`<${t.name}>: ${c}`)})}}this.reloadInternalPlugins(!0),c()}).catch(c=>{console.error(c),n()})})}).catch(n)})}reloadInternalPlugins(c){for(let n in this.internal_plugins)if(this.internal_plugins[n].startup){if(c&&this.plugin_names[n])continue;console.log(`Loading internal plugin "${n}"...`),this.reloadPluginRecursively({uri:this.internal_plugins[n].uri},null,"eval is evil").then(()=>{console.log(`${n} plugin loaded.`)}).catch(c=>{console.error(c)})}}async normalizePluginUrl(c,n){let t;if(n=n||this.available_plugins,(c.includes("github.com")&&c.includes("/blob/")||c.includes("gist.github.com"))&&(c=await Object(y.githubUrlRaw)(c)),!c.startsWith("http")&&c.includes("/")&&c.includes(":")){let[e,l]=c.split(":");t=l.split("@")[1],l=l.split("@")[0],l=l.trim();const g=e.split("@")[1];e=e.split("@")[0],e=e.trim(),Object(y.assert)(e&&l,'Wrong URI format, it must be "REPO_NAME:PLUGIN_NAME"');const I=await this.getRepoManifest(e,g);let a=null;for(let c of I.plugins)if(c.name===l){a=c;break}if(!a)throw`plugin not found ${e}:${l}`;c=a.uri,n=I.plugins}else if(c.match(y.url_regex))t=c.split(".imjoy.html@")[1],t&&(c=c.split("@"+t)[0]);else{let e=c.split("@");t=e[1];const l=n.filter(c=>e[0]&&c.name===e[0].trim());if(l.length<=0)throw`Plugin "${e[0]}" cannot be found in the repository.`;c=l[0].uri}if(!c.split("?")[0].endsWith(".imjoy.html"))throw'Plugin url must be ends with ".imjoy.html"';return{uri:c,scoped_plugins:n,selected_tag:t}}async getPluginFromUrl(c,n){const t=await this.normalizePluginUrl(c,n);c=t.uri,n=t.scoped_plugins;const e=t.selected_tag;-1===c.indexOf("?")&&(c=c+"?"+Object(y.randId)());const l=await i.a.get(c);if(!l||!l.data||""===l.data)throw alert("failed to get plugin code from "+c),"failed to get code.";const g=l.data;let I=this.parsePluginCode(g,{tag:e,origin:c,uri:c});return I.scoped_plugins=n,I}reloadPluginRecursively(c,n,t){return new Promise((e,l)=>{let g="string"==typeof c?c:c.uri,I=this.available_plugins;c.scoped_plugins&&(I=c.scoped_plugins,delete c.scoped_plugins),g?this.getPluginFromUrl(g,I).then(async a=>{if(a.engine_mode){const c=this.plugin_names[a.name];c&&(a.engine_mode=c.config.engine_mode)}if(a.origin=c.origin||g,!a)return console.error(`Failed to fetch the plugin from "${g}".`),void l(`Failed to fetch the plugin from "${g}".`);if(f(a.type)||console.warn(`Installed plugin ${a.name} with unsupported plugin type: ${a.type}`),a.tag=n||this.plugin_names[a.name]&&this.plugin_names[a.name].config.tag||a.tag,a.tag){const c=a.origin.split(":");c[1]&&c[1].split("@")[1]&&(a.origin=c[0]+":"+c[1].split("@")[0])}a._id=a.name&&a.name.replace(/ /g,"_")||Object(y.randId)(),a.dependencies=a.dependencies||[];try{for(let c=0;c<a.dependencies.length;c++)await this.reloadPluginRecursively({uri:a.dependencies[c],scoped_plugins:a.scoped_plugins||I},null,t);this.reloadPlugin(a,t).then(c=>{e(c)}).catch(l)}catch(c){l(`Failed to load dependencies for ${a.name}: ${c}`)}}).catch(c=>{console.error(c),this.showMessage("Failed to download, if you download from github, please use the url to the raw file",10),l(c)}):l("No url found for plugin "+c.name)})}installPlugin(c,n,t){return new Promise((e,l)=>{let g="string"==typeof c?c:c.uri,I=this.available_plugins;c.scoped_plugins&&(I=c.scoped_plugins,delete c.scoped_plugins),g?this.getPluginFromUrl(g,I).then(async a=>{if(a.engine_mode){const c=this.plugin_names[a.name];c&&(a.engine_mode=c.config.engine_mode)}if(a.origin=c.origin||g,!a)return console.error(`Failed to fetch the plugin from "${g}".`),void l(`Failed to fetch the plugin from "${g}".`);if(f(a.type)||console.warn(`Installed plugin ${a.name} with unsupported plugin type: ${a.type}`),a.tag=n||this.plugin_names[a.name]&&this.plugin_names[a.name].config.tag||a.tag,a.tag){const c=a.origin.split(":");c[1]&&c[1].split("@")[1]&&(a.origin=c[0]+":"+c[1].split("@")[0])}a._id=a.name&&a.name.replace(/ /g,"_")||Object(y.randId)(),a.dependencies=a.dependencies||[];try{for(let c=0;c<a.dependencies.length;c++)await this.installPlugin({uri:a.dependencies[c],scoped_plugins:a.scoped_plugins||I},null,t);const c=await this.savePlugin(a);for(let t of this.available_plugins)t.name!==c.name||t.installed||(t.installed=!0,t.tag=n);this.showMessage(`Plugin "${c.name}" has been successfully installed.`),this.event_bus.emit("plugin_installed",c),e(c),t||this.reloadPlugin(c)}catch(c){l(`Failed to install dependencies for ${a.name}: ${c}`)}}).catch(c=>{console.error(c),this.showMessage("Failed to download, if you download from github, please use the url to the raw file",10),l(c)}):l("No url found for plugin "+c.name)})}removePlugin(c){return new Promise((n,t)=>{this.db.get(c._id).then(e=>{this.db.remove(e).then(()=>{for(let n=0;n<this.installed_plugins.length;n++)this.installed_plugins[n].name===c.name&&this.installed_plugins.splice(n,1);for(let n of this.available_plugins)n.name===c.name&&(n.installed=!1,n.tag=null);n(),this.showMessage(`"${c.name}" has been removed.`),this.unloadPlugin(c,!0)}).catch(n=>{this.showMessage(n.toString()),console.error("Failed to remove plugin: ",c,n),t(n)})}).catch(t=>{this.unloadPlugin(c,!0),this.showMessage(`"${c.name}" has been unloaded.`),console.log("Plugin does not exist in the database",c,t),n(t)})})}getPluginDocs(c){return new Promise((n,t)=>{this.db.get(c).then(c=>{const t=Object(nc.a)(c.code),e=t.docs&&t.docs[0]&&t.docs[0].content;n(e)}).catch(c=>{t(c)})})}getPluginSource(c){return new Promise((n,t)=>{this.db.get(c).then(c=>{n(c.code)}).catch(c=>{t(c)})})}unloadPlugin(c,n){const t=c.name;for(let c in this.plugins){const e=this.plugins[c];if(e.name===t)try{n&&(delete this.plugins[c],delete this.plugin_names[t]),e._unloaded=!0,this.unregister(e),"function"==typeof e.terminate&&e.terminate().then(()=>{this.update_ui_callback()}),this.update_ui_callback()}catch(c){console.error(c)}}this.unregister(c),"function"==typeof c.terminate&&c.terminate().finally(()=>{this.update_ui_callback()}),this.update_ui_callback()}reloadPlugin(c,n){return new Promise((t,e)=>{try{c instanceof cc&&(c=c.config),this.unloadPlugin(c,!0);const l=this.parsePluginCode(c.code,{engine_mode:c.engine_mode,tag:c.tag,_id:c._id,origin:c.origin});if(l.engine=null,"collection"===l.type)return;let g;this.unloadPlugin(l,!0),"window"===l.type||"web-python-window"===l.type?g=this.loadProxyPlugin(l):("eval is evil"===n?this._allowed_evil_plugin[l.name]=l.code:this._allowed_evil_plugin[l.name]===l.code&&(n="eval is evil"),g=this.loadPlugin(l,null,n)),g.then(n=>{n._id=c._id,c.name=n.name,c.type=n.type,c.plugin=n,this.update_ui_callback(),t(n)}).catch(n=>{c.plugin=null,e(n)})}catch(c){this.showMessage(c||"Error.",15),e(c)}})}savePlugin(c){return new Promise((n,t)=>{const e=c.code;try{const l=this.parsePluginCode(e,{tag:c.tag,origin:c.origin,engine_mode:c.engine_mode});l.code=e,l._id=l.name.replace(/ /g,"_"),l.hash=g.a.hash(l.code);const I=c=>{this.db.put(c).then(()=>{for(let n=0;n<this.installed_plugins.length;n++)this.installed_plugins[n].name===c.name&&this.installed_plugins.splice(n,1);c.installed=!0,this.installed_plugins.push(c),n(c),this.showMessage(`${c.name} has been successfully saved.`)}).catch(c=>{this.showMessage("Failed to save the plugin.",15),console.error(c),t("failed to save")})};this.db.get(l._id).then(c=>{l._rev=c._rev,I(l)}).catch(()=>{I(l)})}catch(c){this.showMessage(c||"Error.",15),t(c)}})}getBadges(c){const n=f(c.type);return n?n.icon||"":"ð"}parsePluginCode(c,n){n=n||{};try{const t=Object(nc.a)(c);let e;if("yaml"===t.config[0].attrs.lang)e=F.a.load(t.config[0].content);else if("json"===t.config[0].attrs.lang)e=JSON.parse(t.config[0].content);else if(e=JSON.parse(t.config[0].content),Object(y.compareVersions)(e.api_version,">","0.1.5"))throw`Unsupported config language ${t.config[0].attrs.lang}, please set lang="json" or lang="yaml"`;e.tag=n.tag||e.tags&&e.tags[0],e.scripts=[];for(let c=0;c<t.script.length;c++)t.script[c].attrs.tag===e.tag&&(e.script=t.script[c].content),t.script[c].attrs.tag&&t.script[c].attrs.tag!==e.tag||e.scripts.push(t.script[c]);!e.script&&t.script.length>0&&(e.script=t.script[0].content,e.lang=t.script[0].attrs.lang),e.links=t.link||null,e.windows=t.window||null,e.styles=t.style||null,e.docs=t.docs||null,e.attachments=t.attachment||null,e._id=n._id||e.name.replace(/ /g,"_"),e.uri=n.uri,e.origin=n.origin,e.code=c,e.id=e.name.trim().replace(/ /g,"_")+"_"+Object(y.randId)(),e.runnable=!1!==e.runnable,e.requirements=e.requirements||[];for(let c=0;c<v.length;c++){const n=e[v[c]];if(n&&"object"==typeof n&&!(n instanceof Array)){if(!e.tag)throw"You must use 'tags' with configurable fields.";e[v[c]]=n[e.tag],Object.prototype.hasOwnProperty.call(n,e.tag)||console.log("WARNING: "+v[c]+" do not contain a tag named: "+e.tag)}}if(e.lang=e.lang||"javascript",e=function(c){return Object(y.compareVersions)(c.api_version,"<=","0.1.1")&&(c.type=c.type||c.mode,delete c.mode,"pyworker"===c.type?c.type="native-python":"webworker"===c.type?c.type="web-worker":"webpython"===c.type&&(c.type="web-python")),c}(e),!w(e)){const c=w.errors;throw console.error("Invalid plugin config: "+e.name,c),c}const l=f(e.type);return e.badges=this.getBadges(e),e.engine_mode=l?null:n.engine_mode||"auto",e.flags&&(e.flags.indexOf("engine")>=0||e.flags.indexOf("engine-factory")>=0)&&(e.badges=e.badges+"â"),e.flags&&e.flags.indexOf("file-manager")>=0&&(e.badges=e.badges+"ð"),e}catch(c){throw console.error(c),`Failed to parse the plugin file, error: ${c}`}}validatePluginConfig(c){if(c.name.indexOf("/")<0)return!0;throw"Plugin name should not contain '/'."}loadProxyPlugin(c,n){const t={_id:c._id,name:c.name,type:c.type,ui:c.ui,tag:c.tag,inputs:c.inputs,outputs:c.outputs,docs:c.docs,attachments:c.attachments};return this.validatePluginConfig(t),new Promise((e,l)=>{n?(t.id=n.id,t.initialized=!0):(t.id=c.name.trim().replace(/ /g,"_")+"_"+Object(y.randId)(),t.initialized=!1);const g=a.a.assign({},c,t),I=a.a.assign({TAG:g.tag,WORKSPACE:this.selected_workspace},this.imjoy_api);try{const n=new cc(g,I,null,!0);n.api={__as_interface__:!0,__id__:n.id,setup:async()=>{},run:async n=>{const t=Object(y._clone)(c.defaults)||{};return t.type=c.name,t.name=c.name,t.tag=c.tag,t.data=n&&n.data||{},t.config=n&&n.config||{},t.id=n&&n.id,t.as_dialog&&this.imjoy_api.showDialog?(t.standalone&&(t.fullscreen=!0,t.standalone=!1),await this.imjoy_api.showDialog(null,t)):await this.createWindow(null,t)}},this.register(n,t),this.plugins[n.id]=n,this.plugin_names[n.name]=n,this.event_bus.emit("plugin_loaded",n),e(n)}catch(c){l(c)}})}loadPlugin(c,n,t){return c=Object(y._clone)(c),this.validatePluginConfig(c),new Promise((e,l)=>{const g={};n?(g.id=n.id,g.initialized=!0):(g.id=c.name.trim().replace(/ /g,"_")+"_"+Object(y.randId)(),g.initialized=!1),g._id=c._id;let I=null;f(c.type)||(I=this.em.findEngine(c),I&&I.connected?this.showMessage(`Connected to ð ${I.name}`):console.error("Please connect to the Plugin Engine ð"));const d=a.a.assign({},c,g);d.workspace=this.selected_workspace;const i=a.a.assign({TAG:d.tag,WORKSPACE:this.selected_workspace,ENGINE_URL:I&&I.url||void 0},this.imjoy_api);try{const n=new cc(d,i,I,!1,t);n._log_history.push(`Loading plugin ${n.id} (TAG=${i.TAG}, WORKSPACE=${i.WORKSPACE})`),i.ENGINE_URL&&n._log_history.push(`ENGINE_URL=${i.ENGINE_URL}`);const g=setTimeout(()=>{n.initializing=!1,console.warn(`Plugin ${n.name} failed to load in 180s.`)},18e4);n.onConnected(()=>{if(clearTimeout(g),!n.api)throw console.error("Error occured when loading plugin."),this.showMessage("Error occured when loading plugin."),l("Error occured when loading plugin."),"Error occured when loading plugin.";if(n._log_history.push("Plugin connected."),n._unloaded)return console.log("WARNING: this plugin is ready but unloaded: "+n.id),void n.terminate().then(()=>{this.update_ui_callback()});c.type&&this.register(n,c),n.config.resumed&&n.api.resume?(n._log_history.push("Resuming plugin."),n.api.resume().then(()=>{this.event_bus.emit("plugin_loaded",n),e(n)}).catch(t=>{console.error("error occured when loading plugin "+c.name+": ",t),this.showMessage(`<${c.name}>: ${t}`,15),l(t),n.terminate().then(()=>{this.update_ui_callback()})})):n.api.setup?(n._log_history.push("Setting up plugin."),n.api.setup().then(()=>{this.event_bus.emit("plugin_loaded",n),e(n)}).catch(t=>{console.error("error occured when loading plugin "+c.name+": ",t),this.showMessage(`<${c.name}>: ${t}`,15),l(t),n.terminate().then(()=>{this.update_ui_callback()})})):(console.warn(`No "setup()" function is defined in plugin "${n.name}".`),e(n))}),n.onFailed(t=>{clearTimeout(g),n.error(t),t?this.showMessage(`<${c.name}>: ${t}`):this.showMessage(`Error occured when loading ${c.name}.`),console.error("error occured when loading "+c.name+": ",t),n.terminate().then(()=>{this.update_ui_callback()}),l(t)}),n.docs=c.docs,n.attachments=c.attachments,this.plugins[n.id]=n,this.plugin_names[n.name]=n}catch(c){l(c)}})}renderWindow(c){return new Promise((n,t)=>{const e=a.a.assign({},c.plugin,c);e.workspace=this.selected_workspace;const l=a.a.assign({},this.imjoy_api);for(let n in c.api)Object.prototype.hasOwnProperty.call(c.api,n)&&(l[n]=function(){var t=Array.prototype.slice.call(arguments,1);c.api[n].apply(c,t)});const g=a.a.assign({TAG:e.tag,WORKSPACE:this.selected_workspace},l);try{const l=new cc(e,g);l.onConnected(()=>{if(!c.standalone&&c.focus&&c.focus(),!l.api)return console.error("the window plugin has no api exported."),void t("the window plugin has no api exported.");(l.api.setup||async function(){})().then(()=>{if(this.event_bus.emit("plugin_loaded",l),c.data=c.data||{},c.data._source_op=c.data&&c.data._op,c.data._op=l.name,c.data._workflow_id=c.data&&c.data._workflow_id,c.plugin=l,c.update=l.api.run,l.config.runnable&&!l.api.run){const c="You should define a `run` function for "+l.name+" or set its `runnable` field to false.";console.warn(c)}l.api.run?l.api.run(this.filter4plugin(c)).then(t=>{if(t)for(let n in t)c[n]=t[n];n(l)}).catch(c=>{l.error(`<${l.name}>: (${c&&c.toString()} || "Error.")`),t(c)}):n(l)}).catch(n=>{l.error(`Error occured when loading the window plugin ${c.name}: ${n&&n.toString()}`),l.terminate().then(()=>{this.update_ui_callback()}),t(n)})}),l.onFailed(n=>{!c.standalone&&c.focus&&c.focus(),l.error(`Error occured when loading ${c.name}: ${n}.`),l.terminate().then(()=>{this.update_ui_callback()}),t(n)})}catch(c){t(c)}})}plugin2joy(c){if(!c)return null;const n={};return n.__as_interface__=c.__as_interface__,n.__id__=c.__id__,c.type&&c.data?(n.data=c.config,n.target=c.data,n.target.name=c.name||"",n.target.type=c.type||""):(n.data=null,n.target=c),n.target=n.target||{},Array.isArray(n.target)&&n.target.length>0&&void 0!==c.select&&n.target[c.select]&&(n.target=n.target[c.select]),"object"==typeof n.target?(n.target._variables=c._variables||{},n.target._workflow_id=c._workflow_id||null,n.target._op=c._op||null,n.target._source_op=c._source_op||null,n.target._transfer=c._transfer||!1,Object.keys(n.target).length>4?n:null):n}filter4plugin(c){return c&&{_variables:c._variables||null,_op:c._op,_source_op:c._source_op,_transfer:c._transfer,_workflow_id:c._workflow_id,config:c.config,data:c.data}}joy2plugin(c){if(!c)return null;c.target=c.target||{};const n={__as_interface__:c.__as_interface__,__id__:c.__id__,_variables:c.target._variables||null,_op:c.target._op,_source_op:c.target._source_op,_transfer:c.target._transfer,_workflow_id:c.target._workflow_id,config:c.data,data:c.target,name:c.target.name||"",type:c.target.type||""};return delete c.target._op,delete c.target._workflow_id,delete c.target._variables,delete c.target._source_op,delete c.target._transfer,n}getRepoManifest(c,n){return new Promise((t,e)=>{const l=new RegExp("^[^/.]+/[^/.]+$");let g,I;c.match(l)?(I=c,n&&(c=c+"/tree/"+n,I=I+"@"+n),g=Object(y.githubImJoyManifest)("https://github.com/"+c)):c.includes("github.com")?(g=Object(y.githubImJoyManifest)(c),I=Object(y.githubRepo)(c)):(g=c,I=g),i.a.get(g).then(c=>{if(c&&c.data&&c.data.plugins){const n=c.data;n.plugins=n.plugins.filter(c=>!c.disabled),n.uri_root.startsWith("http")||(n.uri_root=g.replace(new RegExp("manifest.imjoy.json$"),a.a.trim(n.uri_root,"/")));for(let c=0;c<n.plugins.length;c++){const t=n.plugins[c];t.uri=t.uri||t.name+".imjoy.html",t.origin=I+":"+t.name,t.uri.startsWith(n.uri_root)||t.uri.startsWith("http")||(t.uri=n.uri_root+"/"+t.uri),t._id=t._id||t.name.replace(/ /g,"_"),t.badges=this.getBadges(t)}t(n)}else e("failed to load url: "+g)}).catch(e)})}destroy(){for(let c in this.plugins){const n=this.plugins[c];try{"function"==typeof n.terminate&&n.terminate()}catch(c){}}}registerOp(c,n){try{if(!c)throw"Plugin not found.";if((n=Object(y._clone)(n)).name=n.name||c.name,n.show_panel=n.show_panel||!1,c.name===n.name&&(n.ui=n.ui||c.config.description),n.inputs=n.inputs||null,n.outputs=n.outputs||null,n.run=n.run||null,n.run=n.run||c&&c.api&&c.api.run,!M(n)){const c=M.errors;throw console.error("Error occured during registering "+n.name,c),c}const t=c.name,e=n.name,l=e===t?t:t+"/"+e,g={name:n.name,tags:["op","plugin"],type:l,init:Z.normalizeUI(n.ui)};"window"===n.type?g.tags.push("window"):"native-python"===n.type?g.tags.push("python"):"web-worker"===n.type?g.tags.push("web-worker"):"web-python"===n.type?g.tags.push("web-python"):"web-python-window"===n.type?g.tags.push("web-python-window"):"iframe"===n.type&&g.tags.push("iframe");let I=n.run;if(c&&I){const n=async n=>{try{const c=await I(this.joy2plugin(n));return this.plugin2joy(c)}catch(n){throw c.error(n&&n.toString()),n}};g.onexecute=n}else g.onexecute=()=>{c.log("WARNING: no run function defined.")};if(n.update&&"function"==typeof n.update){const c=async c=>{const t=await n.update(this.joy2plugin(c));return this.plugin2joy(t)};g.onupdate=Object(y.debounce)(c,300)}else if(c&&c.api&&c.api.update){const n=async n=>{const t=await c.api.update(this.joy2plugin(n));return this.plugin2joy(t)};g.onupdate=Object(y.debounce)(n,300)}if(!j(g)){const c=j.errors;throw console.error("Error occured during registering op to joy "+g.name,c),c}Z.add(g);const a={plugin_id:c.id,name:g.name,ui:"{id: '__op__', type: '"+g.type+"'}",onexecute:g.onexecute};if(c.ops=c.ops||{},c.ops[n.name]=a,n.inputs)try{if(!("object"==n.inputs.type&&n.inputs.properties||"array"==n.inputs.type&&n.inputs.items)){if("object"!=typeof n.inputs)throw"inputs schema must be an object.";n.inputs={properties:n.inputs,type:"object"}}"object"===n.inputs.type&&n.inputs.properties&&!n.inputs.required&&(n.inputs.required=Object.keys(n.inputs.properties));const g=H.compile(n.inputs);a.inputs_schema=g,this.registered.inputs[l]={loader_key:l,op_name:e,plugin_name:t,schema:g},this.registered.loaders[l]=async n=>{let t={};c.config&&c.config.ui&&(t=await this.imjoy_api.showDialog(c,{type:"imjoy/joy",ui:c.config.ui,name:c.config.name})),n.transfer=n.transfer||!1,n._source_op=n._op,n._op=e,n._workflow_id=n._workflow_id||"data_loader_"+e.trim().replace(/ /g,"_")+Object(y.randId)();const l={op:{name:e},target:n,data:t},g=await c.api.run(this.joy2plugin(l));if(g){const n=this.plugin2joy(g);if(n&&!n.__as_interface__){const t={};t.name=n.name||"result",t.type=n.type||"imjoy/generic",t.config=n.data||{},t.data=n.target||{},await this.createWindow(c,t)}}},this.wm.registerInputLoader(l,this.registered.inputs[l],this.registered.loaders[l])}catch(c){console.error(`error occured when parsing the inputs schema of "${n.name}"`,c)}if(n.outputs)try{if("object"!=n.outputs.type||!n.outputs.properties){if("object"!=typeof n.outputs)throw"inputs schema must be an object.";n.outputs={properties:n.outputs,type:"object"}}"object"===n.outputs.type&&n.outputs.properties&&!n.outputs.required&&(n.outputs.required=Object.keys(n.outputs.properties));const t=H.compile(n.outputs);a.outputs_schema=t,this.registered.outputs[l]={op_name:n.name,plugin_name:c.name,schema:t}}catch(c){console.error(`error occured when parsing the outputs schema of "${n.name}"`,c)}return this.registered.ops[l]=a,this.registered.windows[n.name]=c.config,this.event_bus.emit("op_registered",a),!0}catch(c){throw console.error(c),c}}unregisterOp(c,n){if(!c)throw"Plugin not found.";const t=c.name;if(n){const e="string"==typeof n?n:n.name,l=e===t?t:t+"/"+e;this.registered.inputs[l]&&delete this.registered.inputs[l],this.registered.loaders[l]&&delete this.registered.loaders[l],e===t&&this.registered.windows[t]&&delete this.registered.windows[t],this.registered.ops[l]&&delete this.registered.ops[l],c.ops&&c.ops[e]&&delete c.ops[e],this.wm.unregisterInputLoader(l),Z.remove(l)}else{if(c.ops&&Object.keys(c.ops).length>0)for(let n in c.ops){const t=c.ops[n];t.name&&this.unregisterOp(c,t.name)}c.name&&this.unregisterOp(c,c.name)}}async register(c,n){if("engine"===n.type){if(Object(y.assert)(c.config.flags&&c.config.flags.indexOf("engine")>=0,"Please add `engine` to `config.flags` before registering an engine."),!L(n)){const c=L.errors;throw console.error("Error occured registering engine ",n,c),c}await this.em.register(n),this.registered.engines[n.name]=n,c.on("close",()=>{this.em.unregister(n)})}else if("engine-factory"===n.type){if(Object(y.assert)(c.config.flags&&c.config.flags.indexOf("engine-factory")>=0,"Please add `engine-factory` to `config.flags` before registering an engine factory."),!O(n)){const c=O.errors;throw console.error("Error occured registering engine factory",n,c),c}this.em.registerFactory(n),this.registered.engine_factories[n.name]=n,c.on("close",()=>{this.em.unregisterFactory(n)})}else if("file-manager"===n.type){if(Object(y.assert)(c.config.flags&&c.config.flags.indexOf("file-manager")>=0,"Please add `file-manager` to `config.flags` before registering a file manager."),!P(n)){const c=P.errors;throw console.error("Error occured registering file manager",n,c),c}await this.fm.register(n)}else this.registerOp(c,n)}unregister(c,n){"engine"===(n=n||c).type?this.em.unregister(n):"engine-factory"===n.type?this.em.unregisterFactory(n):"file-manager"===n.type?this.fm.unregister(n):this.unregisterOp(c,n)}createWindow(c,n){return new Promise((c,t)=>{if(n.data=n.data||null,n.panel=n.panel||null,!K(n)){const c=K.errors;throw console.error("Error occured during creating window ",n,c),c}if(n.name=n.name||n.type,n.type&&n.type.startsWith("imjoy/"))n.id="imjoy_"+Object(y.randId)(),n.window_type=n.type,this.wm.addWindow(n).then(t=>{n.api.on("ready",()=>{n.refresh(),n.api=n.api||{},n.api=Object.assign(n.api,{__as_interface__:!0,__id__:t,run:c=>{for(let t in c)n[t]=c[t]}}),c(n.api)},!0)}).catch(t);else{let e;if(n.src&&!n.type&&(n.type="external"),"external"===n.type){if(n.name===n.type&&(n.name=n.src.split("?")[0]),!n.src)return void t("You must specify the `src` for the external window.");if(e=Object.assign({},n),delete e.data,delete e.config,"object"==typeof n.config)for(let c of z)n.config[c]&&(e[c]=n.config[c]);e.base_frame=n.src,e.type="window",e.id="external_"+Object(y.randId)()}else e=this.registered.windows[n.type];if(!e)throw console.error("No plugin registered for window type: "+n.type,this.registered.windows),t("No plugin registered for window type: "+n.type),"No plugin registered for window type: "+n.type;const l=n;if(l.id=l.id||e.id+"_"+Object(y.randId)(),l.window_type=l.type,l.type=e.type,"window"!==l.type&&"web-python-window"!==l.type)throw'Window plugin must be with type "window"';if(l.iframe_container=l.window_container||"plugin_window_"+l.id+Object(y.randId)(),l.iframe_window=null,l.plugin=e,!K(l)){const c=K.errors;throw console.error("Error occured during creating window ",l,c),c}l.loading=!0;const g=setTimeout(()=>{l.loading=!1,console.warn(`Failed to load window "${l.name}" in 10s.`)},1e4);l.window_container?(this.wm.setupCallbacks(l),setTimeout(()=>{const n=this.renderWindow(l);if(l.passive)return clearTimeout(g),l.loading=!1,void c({__as_interface__:!0,setup:()=>{},on:()=>{}});n.then(n=>{l.$el&&n.api.emit("window_size_changed",l.$el.getBoundingClientRect()),n.api.refresh(),n.api.on("close",async()=>{this.event_bus.emit("closing_window_plugin",n),await n.terminate()}),c(n.api)}).catch(t).finally(()=>{clearTimeout(g),l.loading=!1})},0)):this.wm.addWindow(l).then(()=>{setTimeout(()=>{l.refresh();const n=this.renderWindow(l);if(l.passive||e.passive)return clearTimeout(g),l.loading=!1,void c({__as_interface__:!0,setup:()=>{},on:()=>{}});n.then(n=>{l.api.on("close",async()=>{this.event_bus.emit("closing_window_plugin",n),await n.terminate()}),l.refresh(),c(n.api)}).catch(c=>{l.refresh(),t(c)}).finally(()=>{clearTimeout(g),l.loading=!1})},0)})}})}async callPlugin(c,n,t){const e=this.plugin_names[n];if(e){if(!e.api[t])throw`function "${t}" of ${n} is not available.`;return await e.api[t].apply(null,Array.prototype.slice.call(arguments,3,arguments.length))}throw`plugin with type ${n} not found.`}async getPlugins(c){const n=[];for(let c in this.plugins)n.push({name:this.plugins[c].name,config:this.plugins[c].config,api:this.plugins[c].api});return n}async getPlugin(c,n){const t=this.plugin_names[n];if(t)return t.api;if(this.internal_plugins[n]){const c=await this.reloadPluginRecursively({uri:this.internal_plugins[n].uri},null,"eval is evil");return console.log(`${c.name} loaded.`),c.api}throw`plugin with type ${n} not found.`}async getFileManager(c,n){const t=this.fm.getFileManagerByUrl(n);if(t)return t.api;throw`file manager with url ${n} not found.`}async getEngine(c,n){const t=this.em.getEngineByUrl(n);if(t)return t.api;throw`engine with url ${n} not found.`}async getEngineFactory(c,n){const t=this.em.getFactory(n);if(t)return t.api;throw`engine factory with name ${n} not found.`}async runPlugin(c,n,t){if(!c||!c.id)throw"source plugin is not available.";const e=this.plugin_names[n];if(e)return await e.api.run(t||{});throw"plugin with type "+n+" not found."}setPluginConfig(c,n,t){if(!c)throw"setConfig Error: Plugin not found.";if(n.startsWith("_")&&c.config[n.slice(1)])throw`'${n.slice(1)}' is a readonly field defined in <config> block, please avoid using it`;return t?localStorage.setItem("config_"+c.name+"_"+n,t):localStorage.removeItem("config_"+c.name+"_"+n)}getPluginConfig(c,n){if(!c)throw"getConfig Error: Plugin not found.";return n.startsWith("_")&&c.config[n.slice(1)]?c.config[n.slice(1)]:localStorage.getItem("config_"+c.name+"_"+n)}getAttachment(c,n){if(!c.config.attachments)return null;for(let t=0;t<c.config.attachments.length;t++)if(c.config.attachments[t].attrs.name===n)return c.config.attachments[t].content}async checkPluginUpdate(c){const n=c.config,t=await this.getPluginFromUrl(n.origin,this.available_plugins);n.hash?n.hash!==g.a.hash(t.code)&&Object(y.compareVersions)(n.version,"<=",t.version)?c.update_available=!0:c.update_available=!1:Object(y.compareVersions)(n.version,"<",t.version)?c.update_available=!0:c.update_available=!1,this.update_ui_callback()}checkUpdates(){for(let c in this.plugins){const n=this.plugins[c];if(n.config.origin)this.checkPluginUpdate(n);else{const c=this.available_plugins.find(c=>n.name===c.name);c&&(n.config.origin=c.uri,this.checkPluginUpdate(n))}}}}class ec{constructor({event_bus:c=null,show_message_callback:n=null,add_window_callback:t=null}){this.event_bus=c,Object(y.assert)(this.event_bus),this.windows=[],this.window_ids={},this.active_windows=[],this.show_message_callback=n,this.add_window_callback=t,this.selected_window=null,this.window_mode="grid",this.registered_inputs={},this.registered_loaders={},this.default_window_pos={x:0,y:0,w:20,h:10,index:0}}showMessage(c,n){this.show_message_callback?this.show_message_callback(c,n):console.log(`WINDOW MESSAGE: ${c}`)}generateGridPosition(c){c.i=Object(y.randId)(),c.index=this.default_window_pos.index,c.w=c.w||this.default_window_pos.w,c.h=c.h||this.default_window_pos.h,c.x=this.default_window_pos.x,c.y=this.default_window_pos.y,this.default_window_pos.x=this.default_window_pos.x+this.default_window_pos.w,this.default_window_pos.x>=20&&(this.default_window_pos.x=0,this.default_window_pos.y=this.default_window_pos.y+this.default_window_pos.h),this.default_window_pos.index=this.default_window_pos.index+1}registerInputLoader(c,n,t){this.registered_inputs[c]&&console.log(`WARNING: input loader ${c} already exists, it will be replaced.`),this.registered_inputs[c]=n,this.registered_loaders[c]=t}unregisterInputLoader(c){delete this.registered_inputs[c],delete this.registered_loaders[c]}getDataLoaders(c){const n={};for(let t in this.registered_inputs)if(this.registered_inputs.hasOwnProperty(t)&&this.registered_inputs[t].loader_key&&this.registered_inputs[t].schema(c))try{const c=this.registered_inputs[t].loader_key;this.registered_loaders[c]&&(n[c]=this.registered_loaders[c])}catch(c){console.error("Failed to get loaders.",c)}return n}setupCallbacks(c){c._callbacks=c._callbacks||{},c.api=c.api||{},c.api.on=(n,t,e)=>{c._callbacks[n]?c._callbacks[n].push(t):c._callbacks[n]=[t],e&&c._callbacks[n].emitted&&t(c._callbacks[n].emitted_data)},c.api.off=(n,t)=>{if(c._callbacks[n])if(t){const e=c._callbacks[n],l=e.indexOf(t);l>=0?e.splice(l,1):console.warn(`callback ${n} does not exist.`)}else delete c._callbacks[n];else console.warn(`callback ${n} does not exist.`)},c.api.emit=(n,t)=>new Promise(async(e,l)=>{const g=[];try{if(c._callbacks[n])for(let e of c._callbacks[n])try{await e(void 0!==t?t:void 0)}catch(c){g.push(c),console.error(c)}else c._callbacks[n]=[],c._callbacks[n].emitted=!0,c._callbacks[n].emitted_data=t;g.length<=0?e():l(g)}catch(c){l(c)}}),c._refresh_callbacks=[],c.api.refresh=c.refresh=async()=>{await Promise.all(c._refresh_callbacks.map(c=>c()))},c._resize_callbacks=[],c.api.resize=c.resize=async n=>{n=n||c.$el&&c.$el.getBoundingClientRect(),c.api.emit("resize",n)},c.api.focus=c.focus=()=>{c.api.emit("focus")},c.api.close=c.close=async()=>{let n=setTimeout(()=>{console.warn("Force quitting the window due to timeout."),t()},2e3);const t=()=>{const n=this.windows.indexOf(c);n>-1&&(this.windows.splice(n,1),delete this.window_ids[c.id]),(c.selected||this.selected_window===c)&&(c.selected=!1,"single"===this.window_mode?this.selected_window=this.windows[0]:this.selected_window=null),this.event_bus.emit("close_window",c)};try{c.api.emit("close")}catch(c){console.error(c)}finally{t(),clearTimeout(n)}}}addWindow(c){return new Promise((n,t)=>{try{c.id=c.id||c.name+Object(y.randId)(),c.dialog||this.generateGridPosition(c),c.standalone&&(c.h=0,c.w=0),this.window_ids[c.id]&&this.windows.splice(this.windows.indexOf(this.window_ids[c.id]),1),this.windows.push(c),this.window_ids[c.id]=c,this.setupCallbacks(c),this.selectWindow(c,c.dialog),this.add_window_callback?Promise.resolve(this.add_window_callback(c)).then(()=>{this.event_bus.emit("add_window",c),n(c.id)}):(this.event_bus.emit("add_window",c),n(c.id)),c.__test__mode__&&c.api.emit("ready")}catch(c){t(c)}})}selectWindow(c,n){if(c){if(!n){for(let c=0;c<this.active_windows.length;c++)this.active_windows[c]&&(this.active_windows[c].selected=!1,this.active_windows[c].refresh());"single"===this.window_mode||c.standalone?this.selected_window=c:this.selected_window=null,this.active_windows=[c],!c.standalone&&c.focus&&c.focus()}c.selected=!0,c.refresh&&c.refresh()}}resizeAll(){for(var c=this.windows.length;c--;)try{this.windows[c].resize()}catch(c){}}closeAll(){const c=this.default_window_pos&&this.default_window_pos.index||0;this.default_window_pos={i:0,x:0,y:0,w:20,h:10,index:c},this.status_text="";for(var n=this.windows.length;n--;)"imjoy/plugin-editor"!=this.windows[n].type&&this.windows[n].close();0===this.windows.length&&(this.default_window_pos.index=0)}destroy(){this.disconnect()}}async function lc(c,n){const t=await i.a.get(c);if(!t||200!=t.status||!t.data)throw"Faild to fetch code from "+c;gc(t.data,n)}function gc(c,n){var t=Object.keys(n),e=t.map((function(c){return n[c]}));return Function(t.join(", "),c).apply(void 0,e)}var Ic=async function(c,n){if("requirements"==c.type){if(c.requirements&&(Array.isArray(c.requirements)||"string"==typeof c.requirements))try{if(c.requirements="string"==typeof c.requirements?[c.requirements]:c.requirements,!Array.isArray(c.requirements))throw"Unsupported requirements definition";for(var t=0;t<c.requirements.length;t++)c.requirements[t].toLowerCase().endsWith(".js")||c.requirements[t].startsWith("js:")?(c.requirements[t].startsWith("js:")&&(c.requirements[t]=c.requirements[t].slice(3)),await lc(c.requirements[t],{api:n})):c.requirements[t].startsWith("http")?await lc(c.requirements[t],{api:n}):c.requirements[t].startsWith("cache:")||console.log("Unprocessed requirements url: "+c.requirements[t])}catch(n){throw`Failed to import required scripts ${c.requirements}: ${n}`}}else{if("script"!=c.type)throw"unsupported code type.";if(c.src){var e=document.createElement("script");e.setAttribute("type",c.attrs.type),e.setAttribute("src",c.src),document.head.appendChild(e)}else if(!c.content||c.attrs.type&&"text/javascript"!==c.attrs.type){var l=document.createElement("script");l.setAttribute("type",c.attrs.type),l.appendChild(document.createTextNode(c.content)),document.body.appendChild(l)}else gc(c.content,{api:n})}};function ac(c){for(let n in c)if("function"==typeof c[n]){const t=c[n];"AsyncFunction"!==t.constructor.name&&(c[n]=function(...c){return Promise.resolve(t(...c))})}}const dc={type:"engine",pluginType:"evil",icon:"ð",name:"imjoy engine",url:"https://imjoy.io",config:{},connect(){return this._disconnected=!1,!0},disconnect(){this._disconnected=!0},async startPlugin(c,n){if(this._disconnected)throw"engine is disconnected.";return new Promise(async(t,e)=>{(n=Object.assign({},n)).export=n=>{console.log(`plugin ${c.name} (id=${c.id}) initialized.`,n),ac(n),t(n)};const l=n.register;n.register=c=>(ac(c),l(c));const g=n.on;n.on=(c,n)=>g(c,(function(...c){return Promise.resolve(n(...c))})),ac(n);try{await Ic({type:"requirements",lang:c.lang,requirements:c.requirements,env:c.env},n);for(let t=0;t<c.scripts.length;t++)await Ic({type:"script",content:c.scripts[t].content,lang:c.scripts[t].attrs.lang,attrs:c.scripts[t].attrs,src:c.scripts[t].attrs.src},n);await async function(c){if(c&&c.length>0)for(let n of c)if(n.startsWith("js:")&&(n=n.slice(3)),n.startsWith("css:")&&(n=n.slice(4)),n.startsWith("cache:")&&(n=n.slice(6)),n.startsWith("http"))try{await Object(y.cacheUrlInServiceWorker)(n)}catch(c){console.error(c)}}(c.requirements)}catch(c){e(c)}})},heartbeat:null};class ic{constructor({event_bus:c=null,config_db:n=null,client_id:t=null}){this.event_bus=c,this.config_db=n,Object(y.assert)(this.event_bus),Object(y.assert)(this.config_db,"config database is not available"),this.client_id=t||Object(y.randId)(),this.engines=[],this.engine_factories=[]}async init(){this.register(dc)}matchEngineByType(c){return this.engines.filter(n=>n.pluginType===c)}findEngine(c){const n=this.engines.filter(n=>c.type&&n.pluginType===c.type);if(!n||n.length<=0)return null;if("auto"===c.engine_mode){const c=n.filter(c=>c.connected);return c.length<=0?null:c[c.length-1]}return n.filter(n=>n.name===c.engine_mode)[0]}getEngineByUrl(c){for(let n of this.engines)if(n.url===c)return n;return null}getEngineByName(c){for(let n of this.engines)if(n.name===c)return n;return null}async register(c){const n=Object.assign({},c);n.api=c,c&&c===dc?"127.0.0.1"===window.location.hostname||"localhost"===window.location.hostname?n._is_evil=!1:n._is_evil=!0:n._is_evil=!1;for(let c=0;c<this.engines.length;c++)if(n.name&&this.engines[c].name===n.name)try{this.unregister(this.engines[c])}catch(c){console.error(c)}for(let c=0;c<this.engines.length;c++)if(n.url&&this.engines[c].url===n.url)try{this.unregister(this.engines[c])}catch(c){console.error(c)}n.connected=!1,n.engine_status=n.engine_status||{},n.getEngineConfig&&Promise.resolve(n.getEngineConfig()).then(c=>{n.engine_config=c});const t=()=>{n.connected?this.event_bus.emit("engine_connected",n):this.event_bus.emit("engine_disconnected",n)},e=async()=>{const c=await n.heartbeat();if(!n.connected&&c)n.connected=!0,t();else if(n.connected&&!c){n.connected=!1,t();for(let c of n._plugins)c.terminate()}else n.connected=c};n._plugins=[],n.registerPlugin=c=>{n._plugins.push(c)},this.engines.push(n),n.connected=await n.connect(),t(),n.heartbeat&&(await e(),n.heartbeat_timer=setInterval(e,5e3))}async unregister(c){const n=c.url;if(!(c=this.getEngineByUrl(n)))throw`Engine ${n} not found.`;const t=this.engines.indexOf(c);for(let n of c._plugins)n.terminate();t>-1&&this.engines.splice(t,1),c.heartbeat_timer&&clearInterval(c.heartbeat_timer),await c.disconnect(),c.connected=!1,this.event_bus.emit("engine_disconnected",c)}registerFactory(c){const n=Object.assign({},c);n.api=c;for(let c=0;c<this.engine_factories.length;c++)if(this.engine_factories[c].name===n.name){this.engine_factories.splice(c,1);break}this.engine_factories.push(n)}unregisterFactory(c){c=this.getFactory(c.name);const n=this.engine_factories.indexOf(c);n>-1&&this.engine_factories.splice(n,1)}getFactory(c){for(let n of this.engine_factories)if(n.name===c)return n;return null}destroy(){for(let c of this.engines)this.unregister(c)}}class Cc{constructor({event_bus:c=null,client_id:n=null}){this.event_bus=c,Object(y.assert)(this.event_bus),this.client_id=n||Object(y.randId)(),this.fileManagers=[]}async init(){}getFileManagerByName(c){for(let n of this.fileManagers)if(n.name===c)return n;return null}getFileManagerByUrl(c){for(let n of this.fileManagers)if(n.url===c)return n;return null}async register(c){const n=Object.assign({},c);n.api=c;for(let c=0;c<this.fileManagers.length;c++)if(this.fileManagers[c].name===n.name){this.fileManagers.splice(c,1);break}n.connected=!1;const t=async()=>{n.connected=await n.heartbeat()};await t(),n.heart_beat_timer=setInterval(t,1e4),this.fileManagers.push(n)}unregister(c){c=this.getFileManagerByUrl(c.url);const n=this.fileManagers.indexOf(c);n>-1&&this.fileManagers.splice(n,1),c.heart_beat_timer&&clearInterval(c.heart_beat_timer)}destroy(){for(let c of this.fileManagers)c.destroy()}}var Fc=t(52),rc=t.n(Fc),Xc=t(47);const oc=y;class sc{constructor({imjoy_api:c=null,event_bus:n=null,client_id:t=null,config_db:l=null,show_message_callback:g=null,update_ui_callback:I=null,add_window_callback:a=null,jailed_asset_url:d=null}){this.config_db=l||new e.a("imjoy_config",{revs_limit:2,auto_compaction:!0}),this.event_bus=n||rc.a.create(),this.client_id=t||"imjoy_web_"+Object(y.randId)(),this.imjoy_api=c||{},this.update_ui_callback=I||function(){},this.show_message_callback=g||async function(c){console.log("show message: ",c)},this.add_window_callback=a||async function(c){console.log("add window: ",c)},this.em=new ic({event_bus:this.event_bus,config_db:this.config_db,show_message_callback:this.show_message_callback,client_id:this.client_id}),this.wm=new ec({event_bus:this.event_bus,show_message_callback:this.show_message_callback,add_window_callback:this.add_window_callback}),this.fm=new Cc({event_bus:this.event_bus}),this.pm=new tc({event_bus:this.event_bus,config_db:this.config_db,engine_manager:this.em,window_manager:this.wm,file_manager:this.fm,imjoy_api:this.imjoy_api,show_message_callback:this.show_message_callback,update_ui_callback:this.update_ui_callback,jailed_asset_url:d})}async init(){await this.fm.init(),await this.pm.init(),await this.pm.loadWorkspaceList();try{await this.em.init(),console.log("Successfully initialized the engine manager.")}catch(c){console.error(c),this.show_message_callback("Failed to initialize the engine manager: "+c.toString())}}async start(c){c=c||{},await this.init(),c.workspace&&(await this.pm.loadWorkspace(c.workspace),await this.pm.reloadPlugins())}async destroy(){this.pm.destroy(),this.em.destroy()}}}])}));
//# sourceMappingURL=imjoy-core.min.js.map